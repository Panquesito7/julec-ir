// Auto generated by JuleC.
// JuleC version: beta 0.0.4 master
// Date: 27/8/2023 15.12 (DD/MM/YYYY) (HH.MM)
//
// Recommended Compile Command;
// clang++ -O0 -Wno-everything --std=c++17 dist/ir.cpp

#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include "std/sys/syscall_unix.hpp"                                   
#include "src/julec/julec.hpp"                                   
#include "std/vector/alloc.hpp"                                   
#include "src/julec/obj/cxx/cxx.hpp"                                   

struct _1ac78be4d_Importer;
struct _1ad3e617d_Kind;
struct _1acde4cc0_Lookup;
struct _1aae7037a_RangeSetter;

struct _1d051759b_AnsiEscape;


struct _1d051759b_Logger;


struct _1d05b5e41_LazyBuff;


struct _1aa1ade38_bits_error;


struct _1b6c49115_FloatInfo;


struct _1b6c49115_DecimalSlice;


struct _1a99596b2_LeftCheat;


struct _1a99596b2_Decimal;


struct _1d068165a_Log;


struct _1aaee94d1_DirEntry;


struct _1ab00383c_File;


struct _1ab004a80_Status;


struct _1ab2133dc_FoldPair;


struct _1ab2133dc_CaseRange;


struct _1ab2133dc_Range16;


struct _1ab2133dc_Range32;


struct _1ab2133dc_RangeTable;


struct _1ab21c902_accept_range;


struct _1ab0277b7_Token;


struct _1ab029324_File;


struct _1ab00b922_KindPair;


struct _1ab00b922_Lex;


struct _1ab026d8d_Ast;


struct _1aaeea1c4_Node;


struct _1aaeea1c4_CommentGroup;


struct _1aaeea1c4_Comment;


struct _1aaeea1c4_Directive;


struct _1aaeea1c4_TypeDecl;


struct _1aaeea1c4_IdentTypeDecl;


struct _1aaeea1c4_NamespaceTypeDecl;


struct _1aaeea1c4_RefTypeDecl;


struct _1aaeea1c4_SlcTypeDecl;


struct _1aaeea1c4_TupleTypeDecl;


struct _1aaeea1c4_PtrTypeDecl;


struct _1aaeea1c4_ArrTypeDecl;


struct _1aaeea1c4_MapTypeDecl;


struct _1aaeea1c4_RetTypeDecl;


struct _1aaeea1c4_Expr;


struct _1aaeea1c4_TupleExpr;


struct _1aaeea1c4_LitExpr;


struct _1aaeea1c4_UnsafeExpr;


struct _1aaeea1c4_IdentExpr;


struct _1aaeea1c4_UnaryExpr;


struct _1aaeea1c4_VariadicExpr;


struct _1aaeea1c4_CastExpr;


struct _1aaeea1c4_NsSelectionExpr;


struct _1aaeea1c4_SubIdentExpr;


struct _1aaeea1c4_BinopExpr;


struct _1aaeea1c4_FnCallExpr;


struct _1aaeea1c4_FieldExprPair;


struct _1aaeea1c4_StructLit;


struct _1aaeea1c4_BraceLit;


struct _1aaeea1c4_KeyValPair;


struct _1aaeea1c4_SliceExpr;


struct _1aaeea1c4_IndexingExpr;


struct _1aaeea1c4_SlicingExpr;


struct _1aaeea1c4_GenericDecl;


struct _1aaeea1c4_LabelSt;


struct _1aaeea1c4_GotoSt;


struct _1aaeea1c4_FallSt;


struct _1aaeea1c4_AssignLeft;


struct _1aaeea1c4_AssignSt;


struct _1aaeea1c4_ScopeTree;


struct _1aaeea1c4_ParamDecl;


struct _1aaeea1c4_FnDecl;


struct _1aaeea1c4_VarDecl;


struct _1aaeea1c4_RetSt;


struct _1aaeea1c4_Iter;


struct _1aaeea1c4_WhileKind;


struct _1aaeea1c4_RangeKind;


struct _1aaeea1c4_BreakSt;


struct _1aaeea1c4_ContSt;


struct _1aaeea1c4_If;


struct _1aaeea1c4_Else;


struct _1aaeea1c4_Conditional;


struct _1aaeea1c4_TypeAliasDecl;


struct _1aaeea1c4_Case;


struct _1aaeea1c4_MatchCase;


struct _1aaeea1c4_UseDecl;


struct _1aaeea1c4_EnumItemDecl;


struct _1aaeea1c4_EnumDecl;


struct _1aaeea1c4_FieldDecl;


struct _1aaeea1c4_StructDecl;


struct _1aaeea1c4_TraitDecl;


struct _1aaeea1c4_Impl;


struct _1ab059068_FileInfo;


struct _1ab059068_PackageInfo;


struct _1ab05bd18_Stmt;


struct _1ab05bd18_ScopeParser;


struct _1ab060d50_CallData;


struct _1ab060d50_Precedencer;


struct _1ab060d50_ExprBuilder;


struct _1ab09d6b7_AssignInfo;


struct _1ac1ba56e_Parser;


struct _1ac308844_TypeBuilder;


struct _1ad6d5cec_Const;



struct _1ab064271_Field;


struct _1ab064271_Struct;


struct _1ab064271_FieldIns;


struct _1ab064271_StructIns;


struct _1ab07a50c_RetType;


struct _1ab07a50c_Param;


struct _1ab07a50c_Fn;


struct _1ab07a50c_ParamIns;


struct _1ab07a50c_FnIns;


struct _1ac699a1a_ReferenceStack;


struct _1ac699a1a_Pass;


struct _1ac699a1a_SymbolBuilder;


struct _1ac276c57_Trait;


struct _1ac7804a2_EnumItem;


struct _1ac7804a2_Enum;


struct _1ac780837_Impl;


struct _1ac77dd1e_Scope;


struct _1ac77dd1e_If;


struct _1ac77dd1e_Else;


struct _1ac77dd1e_Conditional;


struct _1ac77dd1e_InfIter;


struct _1ac77dd1e_WhileIter;


struct _1ac77dd1e_RangeIter;


struct _1ac77dd1e_ContSt;


struct _1ac77dd1e_BreakSt;


struct _1ac77dd1e_Label;


struct _1ac77dd1e_GotoSt;


struct _1ac77dd1e_Postfix;


struct _1ac77dd1e_Assign;


struct _1ac77dd1e_MultiAssign;


struct _1ac77dd1e_Match;


struct _1ac77dd1e_Case;


struct _1ac77dd1e_FallSt;


struct _1ac77dd1e_RetSt;


struct _1ac77dd1e_Recover;


struct _1ac77dd1e_ScopeLabel;


struct _1ac77dd1e_ScopeGoto;


struct _1ac77dd1e_ScopeChecker;


struct _1ab0a4954_BinopExprModel;


struct _1ab0a4954_UnaryExprModel;


struct _1ab0a4954_GetRefPtrExprModel;


struct _1ab0a4954_StructArgExprModel;


struct _1ab0a4954_StructLitExprModel;


struct _1ab0a4954_AllocStructLitExprModel;


struct _1ab0a4954_CastingExprModel;


struct _1ab0a4954_FnCallExprModel;


struct _1ab0a4954_SliceExprModel;


struct _1ab0a4954_IndexigExprModel;


struct _1ab0a4954_AnonFnExprModel;


struct _1ab0a4954_KeyValPairExprModel;


struct _1ab0a4954_MapExprModel;


struct _1ab0a4954_SlicingExprModel;


struct _1ab0a4954_TraitSubIdentExprModel;


struct _1ab0a4954_StructSubIdentExprModel;


struct _1ab0a4954_StructStaticIdentExprModel;


struct _1ab0a4954_ArrayExprModel;


struct _1ab0a4954_CommonIdentExprModel;


struct _1ab0a4954_CommonSubIdentExprModel;


struct _1ab0a4954_TupleExprModel;


struct _1ab0a4954_BuiltinOutCallExprModel;


struct _1ab0a4954_BuiltinOutlnCallExprModel;


struct _1ab0a4954_BuiltinCloneCallExprModel;


struct _1ab0a4954_BuiltinNewCallExprModel;


struct _1ab0a4954_BuiltinRealCallExprModel;


struct _1ab0a4954_BuiltinDropCallExprModel;


struct _1ab0a4954_BuiltinPanicCallExprModel;


struct _1ab0a4954_BuiltinMakeCallExprModel;


struct _1ab0a4954_BuiltinAppendCallExprModel;


struct _1ab0a4954_BuiltinErrorTraitSubIdentExprModel;


struct _1ab0a4954_SizeofExprModel;


struct _1ab0a4954_AlignofExprModel;


struct _1ab0a4954_RuneExprModel;


struct _1ab0a4954_ExplicitDerefExprModel;


struct _1ac78be4d_ImportInfo;


struct _1ac78be4d_Package;


struct _1ac7ccb09_Sema;


struct _1aca3647d_Var;


struct _1acc33119_TypeCompatibilityChecker;


struct _1acc33119_AssignTypeChecker;


struct _1acc33119_DynamicTypeAnnotation;


struct _1acc33119_FnCallArgChecker;


struct _1acc33119_StructLitChecker;


struct _1acc33119_RangeChecker;


struct _1acc33119_RetTypeChecker;


struct _1acd9639d_SymbolTable;


struct _1acde49c3_Data;


struct _1acde49c3_Value;


struct _1acde49c3_Eval;


struct _1acde49c3_BinopSolver;


struct _1ad3e617d_TypeAlias;


struct _1ad3e617d_TypeKind;


struct _1ad3e617d_TypeSymbol;


struct _1ad3e617d_Prim;


struct _1ad3e617d_Ref;


struct _1ad3e617d_Slc;


struct _1ad3e617d_Tuple;


struct _1ad3e617d_Map;


struct _1ad3e617d_Arr;


struct _1ad3e617d_Ptr;


struct _1ad3e617d_Referencer;


struct _1ad3e617d_TypeChecker;


struct _1aae95878_PlainImporter;


struct _1aae6a276_OrderedDefines;


struct _1aae4981b_IR;


struct _1aae6a276_DefineOrderer;


struct _1aae3b247_ScopeDeadCode;


struct _1aae7037a_IndexRangeSetter;


struct _1aae7037a_MapRangeSetter;

struct _1ac78be4d_Importer {
	virtual ~_1ac78be4d_Importer(void) {}

	virtual jule::Ref<_1ac78be4d_ImportInfo> _method_get_import(jule::Str _1633_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ref<_1ab026d8d_Ast>>,jule::Slice<_1d068165a_Log>> _method_import_package(jule::Str _2037_path) { return {}; }
	virtual void _method_imported(jule::Ref<_1ac78be4d_ImportInfo>) {}
};

struct _1ad3e617d_Kind {
	virtual ~_1ad3e617d_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ref<_1ad3e617d_TypeKind> _4621_other) { return {}; }
};

struct _1acde4cc0_Lookup {
	virtual ~_1acde4cc0_Lookup(void) {}

	virtual jule::Ref<_1ac78be4d_ImportInfo> _method_find_package(jule::Str _935_ident) { return {}; }
	virtual jule::Ref<_1ac78be4d_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)> _1337_selector) { return {}; }
	virtual jule::Ref<_1aca3647d_Var> _method_find_var(jule::Str _1731_ident,jule::Bool _1743_cpp_linked) { return {}; }
	virtual jule::Ref<_1ad3e617d_TypeAlias> _method_find_type_alias(jule::Str _2138_ident,jule::Bool _2150_cpp_linked) { return {}; }
	virtual jule::Ref<_1ab064271_Struct> _method_find_struct(jule::Str _2534_ident,jule::Bool _2546_cpp_linked) { return {}; }
	virtual jule::Ref<_1ab07a50c_Fn> _method_find_fn(jule::Str _2930_ident,jule::Bool _2942_cpp_linked) { return {}; }
	virtual jule::Ref<_1ac276c57_Trait> _method_find_trait(jule::Str _3333_ident) { return {}; }
	virtual jule::Ref<_1ac7804a2_Enum> _method_find_enum(jule::Str _3732_ident) { return {}; }
};

struct _1aae7037a_RangeSetter {
	virtual ~_1aae7037a_RangeSetter(void) {}

	virtual jule::Str _method_setup_vars(jule::Ref<_1aca3647d_Var> _4029_key_a,jule::Ref<_1aca3647d_Var> _4046_key_b) { return {}; }
	virtual jule::Str _method_next_steps(jule::Ref<_1aca3647d_Var> _4129_key_a,jule::Ref<_1aca3647d_Var> _4146_key_b,jule::Str _4159_begin) { return {}; }
};


struct _1d051759b_AnsiEscape {
	jule::Ref<_1d051759b_AnsiEscape> self{};

	~_1d051759b_AnsiEscape(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1d051759b_AnsiEscape(void) { this->self = jule::Ref<_1d051759b_AnsiEscape>::make(this, nullptr); }

	static inline void _static_method_reset(void);


	static inline void _static_method_print(jule::Str,jule::Str);


	inline bool operator==(const _1d051759b_AnsiEscape &_Src) const { return true; }

	inline bool operator!=(const _1d051759b_AnsiEscape &_Src) const { return !this->operator==(_Src); }
};


struct _1d051759b_Logger {
	jule::Ref<_1d051759b_Logger> self{};

	~_1d051759b_Logger(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1d051759b_Logger(void) { this->self = jule::Ref<_1d051759b_Logger>::make(this, nullptr); }

	static inline void _static_method_log_flat(_1d068165a_Log&);


	static inline void _static_method_log_error(_1d068165a_Log&);


	static inline void _static_method_log(_1d068165a_Log&);


	static inline void _static_method_print_logs(jule::Slice<_1d068165a_Log>&);


	inline bool operator==(const _1d051759b_Logger &_Src) const { return true; }

	inline bool operator!=(const _1d051759b_Logger &_Src) const { return !this->operator==(_Src); }
};


struct _1d05b5e41_LazyBuff {
	jule::Ref<_1d05b5e41_LazyBuff> self{};

	jule::Str _field_path{jule::Str()};
	jule::Slice<jule::U8> _field_buff{jule::Slice<jule::U8>()};
	jule::Int _field_w{jule::Int()};
	jule::Str _field_vol_and_path{jule::Str()};
	jule::Int _field_vol_len{jule::Int()};


	_1d05b5e41_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len) {
		this->self = jule::Ref<_1d05b5e41_LazyBuff>::make(this, nullptr);

		this->_field_path = __param_path;
		this->_field_buff = __param_buff;
		this->_field_w = __param_w;
		this->_field_vol_and_path = __param_vol_and_path;
		this->_field_vol_len = __param_vol_len;
	}

	~_1d05b5e41_LazyBuff(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1d05b5e41_LazyBuff(void) { this->self = jule::Ref<_1d05b5e41_LazyBuff>::make(this, nullptr); }

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(const _1d05b5e41_LazyBuff &_Src) const {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	inline bool operator!=(const _1d05b5e41_LazyBuff &_Src) const { return !this->operator==(_Src); }
};


struct _1aa1ade38_bits_error: public jule::Error {
	jule::Ref<_1aa1ade38_bits_error> self{};

	jule::Str _field_message{jule::Str()};


	_1aa1ade38_bits_error(jule::Str __param_message) {
		this->self = jule::Ref<_1aa1ade38_bits_error>::make(this, nullptr);

		this->_field_message = __param_message;
	}

	~_1aa1ade38_bits_error(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aa1ade38_bits_error(void) { this->self = jule::Ref<_1aa1ade38_bits_error>::make(this, nullptr); }

	inline jule::Str _method_error(void);


	inline bool operator==(const _1aa1ade38_bits_error &_Src) const {
		return 
			this->_field_message == _Src._field_message;
	}

	inline bool operator!=(const _1aa1ade38_bits_error &_Src) const { return !this->operator==(_Src); }
};


struct _1b6c49115_FloatInfo {
	jule::Ref<_1b6c49115_FloatInfo> self{};

	jule::Uint _field_mantbits{jule::Uint()};
	jule::Uint _field_expbits{jule::Uint()};
	jule::Int _field_bias{jule::Int()};


	_1b6c49115_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias) {
		this->self = jule::Ref<_1b6c49115_FloatInfo>::make(this, nullptr);

		this->_field_mantbits = __param_mantbits;
		this->_field_expbits = __param_expbits;
		this->_field_bias = __param_bias;
	}

	~_1b6c49115_FloatInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1b6c49115_FloatInfo(void) { this->self = jule::Ref<_1b6c49115_FloatInfo>::make(this, nullptr); }

	inline bool operator==(const _1b6c49115_FloatInfo &_Src) const {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	inline bool operator!=(const _1b6c49115_FloatInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1b6c49115_DecimalSlice {
	jule::Ref<_1b6c49115_DecimalSlice> self{};

	jule::Slice<jule::U8> _field_d{jule::Slice<jule::U8>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};


	_1b6c49115_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg) {
		this->self = jule::Ref<_1b6c49115_DecimalSlice>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
	}

	~_1b6c49115_DecimalSlice(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1b6c49115_DecimalSlice(void) { this->self = jule::Ref<_1b6c49115_DecimalSlice>::make(this, nullptr); }

	inline bool operator==(const _1b6c49115_DecimalSlice &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	inline bool operator!=(const _1b6c49115_DecimalSlice &_Src) const { return !this->operator==(_Src); }
};


struct _1a99596b2_LeftCheat {
	jule::Ref<_1a99596b2_LeftCheat> self{};

	jule::Int _field_delta{jule::Int()};
	jule::Str _field_cutoff{jule::Str()};


	_1a99596b2_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff) {
		this->self = jule::Ref<_1a99596b2_LeftCheat>::make(this, nullptr);

		this->_field_delta = __param_delta;
		this->_field_cutoff = __param_cutoff;
	}

	~_1a99596b2_LeftCheat(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1a99596b2_LeftCheat(void) { this->self = jule::Ref<_1a99596b2_LeftCheat>::make(this, nullptr); }

	inline bool operator==(const _1a99596b2_LeftCheat &_Src) const {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	inline bool operator!=(const _1a99596b2_LeftCheat &_Src) const { return !this->operator==(_Src); }
};


struct _1a99596b2_Decimal {
	jule::Ref<_1a99596b2_Decimal> self{};

	jule::Array<jule::U8,800> _field_d{jule::Array<jule::U8,800>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};
	jule::Bool _field_trunc{jule::Bool()};


	_1a99596b2_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc) {
		this->self = jule::Ref<_1a99596b2_Decimal>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
		this->_field_trunc = __param_trunc;
	}

	~_1a99596b2_Decimal(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1a99596b2_Decimal(void) { this->self = jule::Ref<_1a99596b2_Decimal>::make(this, nullptr); }

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_1b6c49115_FloatInfo&);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(const _1a99596b2_Decimal &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	inline bool operator!=(const _1a99596b2_Decimal &_Src) const { return !this->operator==(_Src); }
};


struct _1d068165a_Log {
	jule::Ref<_1d068165a_Log> self{};

	jule::Int _field_kind{0LLU};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_text{jule::Str()};
	jule::Str _field_line{jule::Str()};
	jule::Str _field_suggestion{jule::Str()};


	_1d068165a_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion) {
		this->self = jule::Ref<_1d068165a_Log>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_path = __param_path;
		this->_field_text = __param_text;
		this->_field_line = __param_line;
		this->_field_suggestion = __param_suggestion;
	}

	~_1d068165a_Log(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1d068165a_Log(void) { this->self = jule::Ref<_1d068165a_Log>::make(this, nullptr); }

	inline bool operator==(const _1d068165a_Log &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text &&
			this->_field_line == _Src._field_line &&
			this->_field_suggestion == _Src._field_suggestion;
	}

	inline bool operator!=(const _1d068165a_Log &_Src) const { return !this->operator==(_Src); }
};


struct _1aaee94d1_DirEntry {
	jule::Ref<_1aaee94d1_DirEntry> self{};

	jule::Str _field_name{jule::Str()};
	jule::Ref<_1ab004a80_Status> _field_stat{jule::Ref<_1ab004a80_Status>()};


	_1aaee94d1_DirEntry(jule::Str __param_name, jule::Ref<_1ab004a80_Status> __param_stat) {
		this->self = jule::Ref<_1aaee94d1_DirEntry>::make(this, nullptr);

		this->_field_name = __param_name;
		this->_field_stat = __param_stat;
	}

	~_1aaee94d1_DirEntry(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaee94d1_DirEntry(void) { this->self = jule::Ref<_1aaee94d1_DirEntry>::make(this, nullptr); }

	inline bool operator==(const _1aaee94d1_DirEntry &_Src) const {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	inline bool operator!=(const _1aaee94d1_DirEntry &_Src) const { return !this->operator==(_Src); }
};


struct _1ab00383c_File {
	jule::Ref<_1ab00383c_File> self{};

	jule::Int _field_handle{jule::Int()};


	_1ab00383c_File(jule::Int __param_handle) {
		this->self = jule::Ref<_1ab00383c_File>::make(this, nullptr);

		this->_field_handle = __param_handle;
	}

	~_1ab00383c_File(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab00383c_File(void) { this->self = jule::Ref<_1ab00383c_File>::make(this, nullptr); }

	inline std::tuple<jule::I64,jule::Int> _method_seek(jule::I64,jule::Int);


	inline std::tuple<jule::Int,jule::Int> _method_read(jule::Slice<jule::U8>);


	inline std::tuple<jule::Int,jule::Int> _method_write(jule::Slice<jule::U8>);


	inline jule::Int _method_close(void);


	inline bool operator==(const _1ab00383c_File &_Src) const {
		return 
			this->_field_handle == _Src._field_handle;
	}

	inline bool operator!=(const _1ab00383c_File &_Src) const { return !this->operator==(_Src); }
};


struct _1ab004a80_Status {
	jule::Ref<_1ab004a80_Status> self{};

	jule::Uint _field_mode{jule::Uint()};
	jule::Uint _field_size{jule::Uint()};


	_1ab004a80_Status(jule::Uint __param_mode, jule::Uint __param_size) {
		this->self = jule::Ref<_1ab004a80_Status>::make(this, nullptr);

		this->_field_mode = __param_mode;
		this->_field_size = __param_size;
	}

	~_1ab004a80_Status(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab004a80_Status(void) { this->self = jule::Ref<_1ab004a80_Status>::make(this, nullptr); }

	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	inline bool operator==(const _1ab004a80_Status &_Src) const {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1ab004a80_Status &_Src) const { return !this->operator==(_Src); }
};


struct _1ab2133dc_FoldPair {
	jule::Ref<_1ab2133dc_FoldPair> self{};

	jule::U16 _field_from{jule::U16()};
	jule::U16 _field_to{jule::U16()};


	_1ab2133dc_FoldPair(jule::U16 __param_from, jule::U16 __param_to) {
		this->self = jule::Ref<_1ab2133dc_FoldPair>::make(this, nullptr);

		this->_field_from = __param_from;
		this->_field_to = __param_to;
	}

	~_1ab2133dc_FoldPair(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab2133dc_FoldPair(void) { this->self = jule::Ref<_1ab2133dc_FoldPair>::make(this, nullptr); }

	inline bool operator==(const _1ab2133dc_FoldPair &_Src) const {
		return 
			this->_field_from == _Src._field_from &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1ab2133dc_FoldPair &_Src) const { return !this->operator==(_Src); }
};


struct _1ab2133dc_CaseRange {
	jule::Ref<_1ab2133dc_CaseRange> self{};

	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::Array<jule::I32,3> _field_delta{jule::Array<jule::I32,3>()};


	_1ab2133dc_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta) {
		this->self = jule::Ref<_1ab2133dc_CaseRange>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
		this->_field_delta = __param_delta;
	}

	~_1ab2133dc_CaseRange(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab2133dc_CaseRange(void) { this->self = jule::Ref<_1ab2133dc_CaseRange>::make(this, nullptr); }

	inline bool operator==(const _1ab2133dc_CaseRange &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_delta == _Src._field_delta;
	}

	inline bool operator!=(const _1ab2133dc_CaseRange &_Src) const { return !this->operator==(_Src); }
};


struct _1ab2133dc_Range16 {
	jule::Ref<_1ab2133dc_Range16> self{};

	jule::U16 _field_lo{jule::U16()};
	jule::U16 _field_hi{jule::U16()};
	jule::U16 _field_stride{jule::U16()};


	_1ab2133dc_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride) {
		this->self = jule::Ref<_1ab2133dc_Range16>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
		this->_field_stride = __param_stride;
	}

	~_1ab2133dc_Range16(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab2133dc_Range16(void) { this->self = jule::Ref<_1ab2133dc_Range16>::make(this, nullptr); }

	inline bool operator==(const _1ab2133dc_Range16 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _1ab2133dc_Range16 &_Src) const { return !this->operator==(_Src); }
};


struct _1ab2133dc_Range32 {
	jule::Ref<_1ab2133dc_Range32> self{};

	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::U32 _field_stride{jule::U32()};


	_1ab2133dc_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride) {
		this->self = jule::Ref<_1ab2133dc_Range32>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
		this->_field_stride = __param_stride;
	}

	~_1ab2133dc_Range32(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab2133dc_Range32(void) { this->self = jule::Ref<_1ab2133dc_Range32>::make(this, nullptr); }

	inline bool operator==(const _1ab2133dc_Range32 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _1ab2133dc_Range32 &_Src) const { return !this->operator==(_Src); }
};


struct _1ab2133dc_RangeTable {
	jule::Ref<_1ab2133dc_RangeTable> self{};

	jule::Slice<_1ab2133dc_Range16> _field_r16{jule::Slice<_1ab2133dc_Range16>()};
	jule::Slice<_1ab2133dc_Range32> _field_r32{jule::Slice<_1ab2133dc_Range32>()};
	jule::Int _field_latin_offset{jule::Int()};


	_1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16> __param_r16, jule::Slice<_1ab2133dc_Range32> __param_r32, jule::Int __param_latin_offset) {
		this->self = jule::Ref<_1ab2133dc_RangeTable>::make(this, nullptr);

		this->_field_r16 = __param_r16;
		this->_field_r32 = __param_r32;
		this->_field_latin_offset = __param_latin_offset;
	}

	~_1ab2133dc_RangeTable(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab2133dc_RangeTable(void) { this->self = jule::Ref<_1ab2133dc_RangeTable>::make(this, nullptr); }

	inline bool operator==(const _1ab2133dc_RangeTable &_Src) const {
		return 
			this->_field_r16 == _Src._field_r16 &&
			this->_field_r32 == _Src._field_r32 &&
			this->_field_latin_offset == _Src._field_latin_offset;
	}

	inline bool operator!=(const _1ab2133dc_RangeTable &_Src) const { return !this->operator==(_Src); }
};


struct _1ab21c902_accept_range {
	jule::Ref<_1ab21c902_accept_range> self{};

	jule::U8 _field_lo{jule::U8()};
	jule::U8 _field_hi{jule::U8()};


	_1ab21c902_accept_range(jule::U8 __param_lo, jule::U8 __param_hi) {
		this->self = jule::Ref<_1ab21c902_accept_range>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
	}

	~_1ab21c902_accept_range(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab21c902_accept_range(void) { this->self = jule::Ref<_1ab21c902_accept_range>::make(this, nullptr); }

	inline bool operator==(const _1ab21c902_accept_range &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	inline bool operator!=(const _1ab21c902_accept_range &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0277b7_Token {
	jule::Ref<_1ab0277b7_Token> self{};

	jule::Ref<_1ab029324_File> _field_file{jule::Ref<_1ab029324_File>()};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_kind{jule::Str()};
	jule::Uint _field_id{0LLU};


	_1ab0277b7_Token(jule::Ref<_1ab029324_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_1ab0277b7_Token>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_1ab0277b7_Token(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0277b7_Token(void) { this->self = jule::Ref<_1ab0277b7_Token>::make(this, nullptr); }

	inline jule::Int _method_prec(void);


	inline bool operator==(const _1ab0277b7_Token &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _1ab0277b7_Token &_Src) const { return !this->operator==(_Src); }
};


struct _1ab029324_File {
	jule::Ref<_1ab029324_File> self{};

	jule::Slice<jule::U8> _field_data{jule::Slice<jule::U8>()};
	jule::Str _field__path{jule::Str()};
	jule::Slice<_1ab0277b7_Token> _field__tokens{jule::Slice<_1ab0277b7_Token>()};


	_1ab029324_File(jule::Slice<jule::U8> __param_data, jule::Str __param__path, jule::Slice<_1ab0277b7_Token> __param__tokens) {
		this->self = jule::Ref<_1ab029324_File>::make(this, nullptr);

		this->_field_data = __param_data;
		this->_field__path = __param__path;
		this->_field__tokens = __param__tokens;
	}

	~_1ab029324_File(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab029324_File(void) { this->self = jule::Ref<_1ab029324_File>::make(this, nullptr); }

	inline jule::Bool _method_is_ok(void);


	inline void _method_fill(jule::Slice<jule::U8>);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline jule::Slice<_1ab0277b7_Token> _method_tokens(void);


	inline jule::Str _method_get_row(jule::Int);


	inline bool operator==(const _1ab029324_File &_Src) const {
		return 
			this->_field_data == _Src._field_data &&
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	inline bool operator!=(const _1ab029324_File &_Src) const { return !this->operator==(_Src); }
};


struct _1ab00b922_KindPair {
	jule::Ref<_1ab00b922_KindPair> self{};

	jule::Str _field_kind{jule::Str("::", 2)};
	jule::Uint _field_id{0LLU};


	_1ab00b922_KindPair(jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_1ab00b922_KindPair>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_1ab00b922_KindPair(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab00b922_KindPair(void) { this->self = jule::Ref<_1ab00b922_KindPair>::make(this, nullptr); }

	inline bool operator==(const _1ab00b922_KindPair &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _1ab00b922_KindPair &_Src) const { return !this->operator==(_Src); }
};


struct _1ab00b922_Lex {
	jule::Ref<_1ab00b922_Lex> self{};

	jule::Slice<_1ab0277b7_Token> _field_tokens{jule::Slice<_1ab0277b7_Token>()};
	jule::Ref<_1ab029324_File> _field_file{jule::Ref<_1ab029324_File>()};
	jule::Int _field_pos{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Int _field_row{jule::Int()};
	jule::Slice<_1d068165a_Log> _field_errors{jule::Slice<_1d068165a_Log>()};


	_1ab00b922_Lex(jule::Slice<_1ab0277b7_Token> __param_tokens, jule::Ref<_1ab029324_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_1d068165a_Log> __param_errors) {
		this->self = jule::Ref<_1ab00b922_Lex>::make(this, nullptr);

		this->_field_tokens = __param_tokens;
		this->_field_file = __param_file;
		this->_field_pos = __param_pos;
		this->_field_column = __param_column;
		this->_field_row = __param_row;
		this->_field_errors = __param_errors;
	}

	~_1ab00b922_Lex(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab00b922_Lex(void) { this->self = jule::Ref<_1ab00b922_Lex>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_1ab0277b7_Token,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_1ab0277b7_Token&);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>);


	inline jule::Str _method_lex_str(void);


	inline jule::Bool _method_is_first_token_of_line(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>,jule::Str,jule::Uint,_1ab0277b7_Token&);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_1ab0277b7_Token&);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>,_1ab0277b7_Token&);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>,_1ab0277b7_Token&);


	inline _1ab0277b7_Token _method_token(void);


	inline bool operator==(const _1ab00b922_Lex &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1ab00b922_Lex &_Src) const { return !this->operator==(_Src); }
};


struct _1ab026d8d_Ast {
	jule::Ref<_1ab026d8d_Ast> self{};

	jule::Ref<_1ab029324_File> _field_file{jule::Ref<_1ab029324_File>()};
	jule::Slice<jule::Ref<_1aaeea1c4_Directive>> _field_top_directives{jule::Slice<jule::Ref<_1aaeea1c4_Directive>>()};
	jule::Slice<jule::Ref<_1aaeea1c4_UseDecl>> _field_use_decls{jule::Slice<jule::Ref<_1aaeea1c4_UseDecl>>()};
	jule::Slice<jule::Ref<_1aaeea1c4_Impl>> _field_impls{jule::Slice<jule::Ref<_1aaeea1c4_Impl>>()};
	jule::Slice<jule::Ref<_1aaeea1c4_Comment>> _field_comments{jule::Slice<jule::Ref<_1aaeea1c4_Comment>>()};
	jule::Slice<_1aaeea1c4_Node> _field_decls{jule::Slice<_1aaeea1c4_Node>()};


	_1ab026d8d_Ast(jule::Ref<_1ab029324_File> __param_file, jule::Slice<jule::Ref<_1aaeea1c4_Directive>> __param_top_directives, jule::Slice<jule::Ref<_1aaeea1c4_UseDecl>> __param_use_decls, jule::Slice<jule::Ref<_1aaeea1c4_Impl>> __param_impls, jule::Slice<jule::Ref<_1aaeea1c4_Comment>> __param_comments, jule::Slice<_1aaeea1c4_Node> __param_decls) {
		this->self = jule::Ref<_1ab026d8d_Ast>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_top_directives = __param_top_directives;
		this->_field_use_decls = __param_use_decls;
		this->_field_impls = __param_impls;
		this->_field_comments = __param_comments;
		this->_field_decls = __param_decls;
	}

	~_1ab026d8d_Ast(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab026d8d_Ast(void) { this->self = jule::Ref<_1ab026d8d_Ast>::make(this, nullptr); }

	inline bool operator==(const _1ab026d8d_Ast &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	inline bool operator!=(const _1ab026d8d_Ast &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_Node {
	jule::Ref<_1aaeea1c4_Node> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Any _field_data{jule::Any()};


	_1aaeea1c4_Node(_1ab0277b7_Token __param_token, jule::Any __param_data) {
		this->self = jule::Ref<_1aaeea1c4_Node>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_data = __param_data;
	}

	~_1aaeea1c4_Node(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_Node(void) { this->self = jule::Ref<_1aaeea1c4_Node>::make(this, nullptr); }

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(const _1aaeea1c4_Node &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1aaeea1c4_Node &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_CommentGroup {
	jule::Ref<_1aaeea1c4_CommentGroup> self{};

	jule::Slice<jule::Ref<_1aaeea1c4_Comment>> _field_comments{jule::Slice<jule::Ref<_1aaeea1c4_Comment>>()};


	_1aaeea1c4_CommentGroup(jule::Slice<jule::Ref<_1aaeea1c4_Comment>> __param_comments) {
		this->self = jule::Ref<_1aaeea1c4_CommentGroup>::make(this, nullptr);

		this->_field_comments = __param_comments;
	}

	~_1aaeea1c4_CommentGroup(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_CommentGroup(void) { this->self = jule::Ref<_1aaeea1c4_CommentGroup>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_CommentGroup &_Src) const {
		return 
			this->_field_comments == _Src._field_comments;
	}

	inline bool operator!=(const _1aaeea1c4_CommentGroup &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_Comment {
	jule::Ref<_1aaeea1c4_Comment> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_text{jule::Str()};


	_1aaeea1c4_Comment(_1ab0277b7_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_1aaeea1c4_Comment>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_1aaeea1c4_Comment(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_Comment(void) { this->self = jule::Ref<_1aaeea1c4_Comment>::make(this, nullptr); }

	inline jule::Bool _method_is_directive(void);


	inline bool operator==(const _1aaeea1c4_Comment &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1aaeea1c4_Comment &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_Directive {
	jule::Ref<_1aaeea1c4_Directive> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_tag{jule::Str()};
	jule::Slice<jule::Str> _field_args{jule::Slice<jule::Str>()};


	_1aaeea1c4_Directive(_1ab0277b7_Token __param_token, jule::Str __param_tag, jule::Slice<jule::Str> __param_args) {
		this->self = jule::Ref<_1aaeea1c4_Directive>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_tag = __param_tag;
		this->_field_args = __param_args;
	}

	~_1aaeea1c4_Directive(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_Directive(void) { this->self = jule::Ref<_1aaeea1c4_Directive>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_Directive &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1aaeea1c4_Directive &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_TypeDecl {
	jule::Ref<_1aaeea1c4_TypeDecl> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Any _field_kind{jule::Any()};


	_1aaeea1c4_TypeDecl(_1ab0277b7_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_1aaeea1c4_TypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_1aaeea1c4_TypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_TypeDecl(void) { this->self = jule::Ref<_1aaeea1c4_TypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_TypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1aaeea1c4_TypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_IdentTypeDecl {
	jule::Ref<_1aaeea1c4_IdentTypeDecl> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>()};


	_1aaeea1c4_IdentTypeDecl(_1ab0277b7_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>> __param_generics) {
		this->self = jule::Ref<_1aaeea1c4_IdentTypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_generics = __param_generics;
	}

	~_1aaeea1c4_IdentTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_IdentTypeDecl(void) { this->self = jule::Ref<_1aaeea1c4_IdentTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(const _1aaeea1c4_IdentTypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1aaeea1c4_IdentTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_NamespaceTypeDecl {
	jule::Ref<_1aaeea1c4_NamespaceTypeDecl> self{};

	jule::Slice<_1ab0277b7_Token> _field_idents{jule::Slice<_1ab0277b7_Token>()};
	jule::Ref<_1aaeea1c4_IdentTypeDecl> _field_kind{jule::Ref<_1aaeea1c4_IdentTypeDecl>()};


	_1aaeea1c4_NamespaceTypeDecl(jule::Slice<_1ab0277b7_Token> __param_idents, jule::Ref<_1aaeea1c4_IdentTypeDecl> __param_kind) {
		this->self = jule::Ref<_1aaeea1c4_NamespaceTypeDecl>::make(this, nullptr);

		this->_field_idents = __param_idents;
		this->_field_kind = __param_kind;
	}

	~_1aaeea1c4_NamespaceTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_NamespaceTypeDecl(void) { this->self = jule::Ref<_1aaeea1c4_NamespaceTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_NamespaceTypeDecl &_Src) const {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1aaeea1c4_NamespaceTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_RefTypeDecl {
	jule::Ref<_1aaeea1c4_RefTypeDecl> self{};

	jule::Ref<_1aaeea1c4_TypeDecl> _field_elem{jule::Ref<_1aaeea1c4_TypeDecl>()};


	_1aaeea1c4_RefTypeDecl(jule::Ref<_1aaeea1c4_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1aaeea1c4_RefTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1aaeea1c4_RefTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_RefTypeDecl(void) { this->self = jule::Ref<_1aaeea1c4_RefTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_RefTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1aaeea1c4_RefTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_SlcTypeDecl {
	jule::Ref<_1aaeea1c4_SlcTypeDecl> self{};

	jule::Ref<_1aaeea1c4_TypeDecl> _field_elem{jule::Ref<_1aaeea1c4_TypeDecl>()};


	_1aaeea1c4_SlcTypeDecl(jule::Ref<_1aaeea1c4_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1aaeea1c4_SlcTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1aaeea1c4_SlcTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_SlcTypeDecl(void) { this->self = jule::Ref<_1aaeea1c4_SlcTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_SlcTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1aaeea1c4_SlcTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_TupleTypeDecl {
	jule::Ref<_1aaeea1c4_TupleTypeDecl> self{};

	jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>> _field_types{jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>()};


	_1aaeea1c4_TupleTypeDecl(jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>> __param_types) {
		this->self = jule::Ref<_1aaeea1c4_TupleTypeDecl>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_1aaeea1c4_TupleTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_TupleTypeDecl(void) { this->self = jule::Ref<_1aaeea1c4_TupleTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_TupleTypeDecl &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1aaeea1c4_TupleTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_PtrTypeDecl {
	jule::Ref<_1aaeea1c4_PtrTypeDecl> self{};

	jule::Ref<_1aaeea1c4_TypeDecl> _field_elem{jule::Ref<_1aaeea1c4_TypeDecl>()};


	_1aaeea1c4_PtrTypeDecl(jule::Ref<_1aaeea1c4_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1aaeea1c4_PtrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1aaeea1c4_PtrTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_PtrTypeDecl(void) { this->self = jule::Ref<_1aaeea1c4_PtrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1aaeea1c4_PtrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1aaeea1c4_PtrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_ArrTypeDecl {
	jule::Ref<_1aaeea1c4_ArrTypeDecl> self{};

	jule::Ref<_1aaeea1c4_TypeDecl> _field_elem{jule::Ref<_1aaeea1c4_TypeDecl>()};
	jule::Ref<_1aaeea1c4_Expr> _field_size{jule::Ref<_1aaeea1c4_Expr>()};


	_1aaeea1c4_ArrTypeDecl(jule::Ref<_1aaeea1c4_TypeDecl> __param_elem, jule::Ref<_1aaeea1c4_Expr> __param_size) {
		this->self = jule::Ref<_1aaeea1c4_ArrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
		this->_field_size = __param_size;
	}

	~_1aaeea1c4_ArrTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_ArrTypeDecl(void) { this->self = jule::Ref<_1aaeea1c4_ArrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(const _1aaeea1c4_ArrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1aaeea1c4_ArrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_MapTypeDecl {
	jule::Ref<_1aaeea1c4_MapTypeDecl> self{};

	jule::Ref<_1aaeea1c4_TypeDecl> _field_key{jule::Ref<_1aaeea1c4_TypeDecl>()};
	jule::Ref<_1aaeea1c4_TypeDecl> _field_val{jule::Ref<_1aaeea1c4_TypeDecl>()};


	_1aaeea1c4_MapTypeDecl(jule::Ref<_1aaeea1c4_TypeDecl> __param_key, jule::Ref<_1aaeea1c4_TypeDecl> __param_val) {
		this->self = jule::Ref<_1aaeea1c4_MapTypeDecl>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1aaeea1c4_MapTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_MapTypeDecl(void) { this->self = jule::Ref<_1aaeea1c4_MapTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_MapTypeDecl &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1aaeea1c4_MapTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_RetTypeDecl {
	jule::Ref<_1aaeea1c4_RetTypeDecl> self{};

	jule::Ref<_1aaeea1c4_TypeDecl> _field_kind{jule::Ref<_1aaeea1c4_TypeDecl>()};
	jule::Slice<_1ab0277b7_Token> _field_idents{jule::Slice<_1ab0277b7_Token>()};


	_1aaeea1c4_RetTypeDecl(jule::Ref<_1aaeea1c4_TypeDecl> __param_kind, jule::Slice<_1ab0277b7_Token> __param_idents) {
		this->self = jule::Ref<_1aaeea1c4_RetTypeDecl>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_1aaeea1c4_RetTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_RetTypeDecl(void) { this->self = jule::Ref<_1aaeea1c4_RetTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_RetTypeDecl &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1aaeea1c4_RetTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_Expr {
	jule::Ref<_1aaeea1c4_Expr> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Any _field_kind{jule::Any()};


	_1aaeea1c4_Expr(_1ab0277b7_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_1aaeea1c4_Expr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_1aaeea1c4_Expr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_Expr(void) { this->self = jule::Ref<_1aaeea1c4_Expr>::make(this, nullptr); }

	inline jule::Bool _method_is_fn_call(void);


	inline bool operator==(const _1aaeea1c4_Expr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1aaeea1c4_Expr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_TupleExpr {
	jule::Ref<_1aaeea1c4_TupleExpr> self{};

	jule::Slice<jule::Ref<_1aaeea1c4_Expr>> _field_expr{jule::Slice<jule::Ref<_1aaeea1c4_Expr>>()};


	_1aaeea1c4_TupleExpr(jule::Slice<jule::Ref<_1aaeea1c4_Expr>> __param_expr) {
		this->self = jule::Ref<_1aaeea1c4_TupleExpr>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1aaeea1c4_TupleExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_TupleExpr(void) { this->self = jule::Ref<_1aaeea1c4_TupleExpr>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_TupleExpr &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1aaeea1c4_TupleExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_LitExpr {
	jule::Ref<_1aaeea1c4_LitExpr> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_value{jule::Str()};


	_1aaeea1c4_LitExpr(_1ab0277b7_Token __param_token, jule::Str __param_value) {
		this->self = jule::Ref<_1aaeea1c4_LitExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_value = __param_value;
	}

	~_1aaeea1c4_LitExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_LitExpr(void) { this->self = jule::Ref<_1aaeea1c4_LitExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(const _1aaeea1c4_LitExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1aaeea1c4_LitExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_UnsafeExpr {
	jule::Ref<_1aaeea1c4_UnsafeExpr> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Any _field_expr{jule::Any()};


	_1aaeea1c4_UnsafeExpr(_1ab0277b7_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_1aaeea1c4_UnsafeExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1aaeea1c4_UnsafeExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_UnsafeExpr(void) { this->self = jule::Ref<_1aaeea1c4_UnsafeExpr>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_UnsafeExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1aaeea1c4_UnsafeExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_IdentExpr {
	jule::Ref<_1aaeea1c4_IdentExpr> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};


	_1aaeea1c4_IdentExpr(_1ab0277b7_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked) {
		this->self = jule::Ref<_1aaeea1c4_IdentExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
	}

	~_1aaeea1c4_IdentExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_IdentExpr(void) { this->self = jule::Ref<_1aaeea1c4_IdentExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline bool operator==(const _1aaeea1c4_IdentExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	inline bool operator!=(const _1aaeea1c4_IdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_UnaryExpr {
	jule::Ref<_1aaeea1c4_UnaryExpr> self{};

	_1ab0277b7_Token _field_op{_1ab0277b7_Token()};
	jule::Any _field_expr{jule::Any()};


	_1aaeea1c4_UnaryExpr(_1ab0277b7_Token __param_op, jule::Any __param_expr) {
		this->self = jule::Ref<_1aaeea1c4_UnaryExpr>::make(this, nullptr);

		this->_field_op = __param_op;
		this->_field_expr = __param_expr;
	}

	~_1aaeea1c4_UnaryExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_UnaryExpr(void) { this->self = jule::Ref<_1aaeea1c4_UnaryExpr>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_UnaryExpr &_Src) const {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1aaeea1c4_UnaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_VariadicExpr {
	jule::Ref<_1aaeea1c4_VariadicExpr> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Any _field_expr{jule::Any()};


	_1aaeea1c4_VariadicExpr(_1ab0277b7_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_1aaeea1c4_VariadicExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1aaeea1c4_VariadicExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_VariadicExpr(void) { this->self = jule::Ref<_1aaeea1c4_VariadicExpr>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_VariadicExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1aaeea1c4_VariadicExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_CastExpr {
	jule::Ref<_1aaeea1c4_CastExpr> self{};

	jule::Ref<_1aaeea1c4_TypeDecl> _field_kind{jule::Ref<_1aaeea1c4_TypeDecl>()};
	jule::Any _field_expr{jule::Any()};


	_1aaeea1c4_CastExpr(jule::Ref<_1aaeea1c4_TypeDecl> __param_kind, jule::Any __param_expr) {
		this->self = jule::Ref<_1aaeea1c4_CastExpr>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_1aaeea1c4_CastExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_CastExpr(void) { this->self = jule::Ref<_1aaeea1c4_CastExpr>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_CastExpr &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1aaeea1c4_CastExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_NsSelectionExpr {
	jule::Ref<_1aaeea1c4_NsSelectionExpr> self{};

	jule::Slice<_1ab0277b7_Token> _field_ns{jule::Slice<_1ab0277b7_Token>()};
	_1ab0277b7_Token _field_ident{_1ab0277b7_Token()};


	_1aaeea1c4_NsSelectionExpr(jule::Slice<_1ab0277b7_Token> __param_ns, _1ab0277b7_Token __param_ident) {
		this->self = jule::Ref<_1aaeea1c4_NsSelectionExpr>::make(this, nullptr);

		this->_field_ns = __param_ns;
		this->_field_ident = __param_ident;
	}

	~_1aaeea1c4_NsSelectionExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_NsSelectionExpr(void) { this->self = jule::Ref<_1aaeea1c4_NsSelectionExpr>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_NsSelectionExpr &_Src) const {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1aaeea1c4_NsSelectionExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_SubIdentExpr {
	jule::Ref<_1aaeea1c4_SubIdentExpr> self{};

	jule::Bool _field_is_self{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	_1ab0277b7_Token _field_ident{_1ab0277b7_Token()};


	_1aaeea1c4_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _1ab0277b7_Token __param_ident) {
		this->self = jule::Ref<_1aaeea1c4_SubIdentExpr>::make(this, nullptr);

		this->_field_is_self = __param_is_self;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1aaeea1c4_SubIdentExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_SubIdentExpr(void) { this->self = jule::Ref<_1aaeea1c4_SubIdentExpr>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_SubIdentExpr &_Src) const {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1aaeea1c4_SubIdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_BinopExpr {
	jule::Ref<_1aaeea1c4_BinopExpr> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	_1ab0277b7_Token _field_op{_1ab0277b7_Token()};


	_1aaeea1c4_BinopExpr(jule::Any __param_left, jule::Any __param_right, _1ab0277b7_Token __param_op) {
		this->self = jule::Ref<_1aaeea1c4_BinopExpr>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_1aaeea1c4_BinopExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_BinopExpr(void) { this->self = jule::Ref<_1aaeea1c4_BinopExpr>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_BinopExpr &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1aaeea1c4_BinopExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_FnCallExpr {
	jule::Ref<_1aaeea1c4_FnCallExpr> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Ref<_1aaeea1c4_Expr> _field_expr{jule::Ref<_1aaeea1c4_Expr>()};
	jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>()};
	jule::Slice<jule::Ref<_1aaeea1c4_Expr>> _field_args{jule::Slice<jule::Ref<_1aaeea1c4_Expr>>()};
	jule::Bool _field_concurrent{jule::Bool()};


	_1aaeea1c4_FnCallExpr(_1ab0277b7_Token __param_token, jule::Ref<_1aaeea1c4_Expr> __param_expr, jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>> __param_generics, jule::Slice<jule::Ref<_1aaeea1c4_Expr>> __param_args, jule::Bool __param_concurrent) {
		this->self = jule::Ref<_1aaeea1c4_FnCallExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_generics = __param_generics;
		this->_field_args = __param_args;
		this->_field_concurrent = __param_concurrent;
	}

	~_1aaeea1c4_FnCallExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_FnCallExpr(void) { this->self = jule::Ref<_1aaeea1c4_FnCallExpr>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_FnCallExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_concurrent == _Src._field_concurrent;
	}

	inline bool operator!=(const _1aaeea1c4_FnCallExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_FieldExprPair {
	jule::Ref<_1aaeea1c4_FieldExprPair> self{};

	_1ab0277b7_Token _field_field{_1ab0277b7_Token()};
	jule::Any _field_expr{jule::Any()};


	_1aaeea1c4_FieldExprPair(_1ab0277b7_Token __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_1aaeea1c4_FieldExprPair>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_1aaeea1c4_FieldExprPair(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_FieldExprPair(void) { this->self = jule::Ref<_1aaeea1c4_FieldExprPair>::make(this, nullptr); }

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(const _1aaeea1c4_FieldExprPair &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1aaeea1c4_FieldExprPair &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_StructLit {
	jule::Ref<_1aaeea1c4_StructLit> self{};

	jule::Ref<_1aaeea1c4_TypeDecl> _field_kind{jule::Ref<_1aaeea1c4_TypeDecl>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1aaeea1c4_StructLit(jule::Ref<_1aaeea1c4_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_1aaeea1c4_StructLit>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_exprs = __param_exprs;
	}

	~_1aaeea1c4_StructLit(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_StructLit(void) { this->self = jule::Ref<_1aaeea1c4_StructLit>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_StructLit &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1aaeea1c4_StructLit &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_BraceLit {
	jule::Ref<_1aaeea1c4_BraceLit> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1aaeea1c4_BraceLit(_1ab0277b7_Token __param_token, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_1aaeea1c4_BraceLit>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_exprs = __param_exprs;
	}

	~_1aaeea1c4_BraceLit(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_BraceLit(void) { this->self = jule::Ref<_1aaeea1c4_BraceLit>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1aaeea1c4_BraceLit &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1aaeea1c4_BraceLit &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_KeyValPair {
	jule::Ref<_1aaeea1c4_KeyValPair> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};
	_1ab0277b7_Token _field_colon{_1ab0277b7_Token()};


	_1aaeea1c4_KeyValPair(jule::Any __param_key, jule::Any __param_val, _1ab0277b7_Token __param_colon) {
		this->self = jule::Ref<_1aaeea1c4_KeyValPair>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
		this->_field_colon = __param_colon;
	}

	~_1aaeea1c4_KeyValPair(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_KeyValPair(void) { this->self = jule::Ref<_1aaeea1c4_KeyValPair>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_KeyValPair &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	inline bool operator!=(const _1aaeea1c4_KeyValPair &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_SliceExpr {
	jule::Ref<_1aaeea1c4_SliceExpr> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1aaeea1c4_SliceExpr(_1ab0277b7_Token __param_token, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_1aaeea1c4_SliceExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_elems = __param_elems;
	}

	~_1aaeea1c4_SliceExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_SliceExpr(void) { this->self = jule::Ref<_1aaeea1c4_SliceExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1aaeea1c4_SliceExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1aaeea1c4_SliceExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_IndexingExpr {
	jule::Ref<_1aaeea1c4_IndexingExpr> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_1aaeea1c4_IndexingExpr(_1ab0277b7_Token __param_token, jule::Any __param_expr, jule::Any __param_index) {
		this->self = jule::Ref<_1aaeea1c4_IndexingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_1aaeea1c4_IndexingExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_IndexingExpr(void) { this->self = jule::Ref<_1aaeea1c4_IndexingExpr>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_IndexingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1aaeea1c4_IndexingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_SlicingExpr {
	jule::Ref<_1aaeea1c4_SlicingExpr> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_start{jule::Any()};
	jule::Any _field_to{jule::Any()};


	_1aaeea1c4_SlicingExpr(_1ab0277b7_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to) {
		this->self = jule::Ref<_1aaeea1c4_SlicingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_start = __param_start;
		this->_field_to = __param_to;
	}

	~_1aaeea1c4_SlicingExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_SlicingExpr(void) { this->self = jule::Ref<_1aaeea1c4_SlicingExpr>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_SlicingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1aaeea1c4_SlicingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_GenericDecl {
	jule::Ref<_1aaeea1c4_GenericDecl> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};


	_1aaeea1c4_GenericDecl(_1ab0277b7_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_1aaeea1c4_GenericDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_1aaeea1c4_GenericDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_GenericDecl(void) { this->self = jule::Ref<_1aaeea1c4_GenericDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_GenericDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1aaeea1c4_GenericDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_LabelSt {
	jule::Ref<_1aaeea1c4_LabelSt> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};


	_1aaeea1c4_LabelSt(_1ab0277b7_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_1aaeea1c4_LabelSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_1aaeea1c4_LabelSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_LabelSt(void) { this->self = jule::Ref<_1aaeea1c4_LabelSt>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_LabelSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1aaeea1c4_LabelSt &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_GotoSt {
	jule::Ref<_1aaeea1c4_GotoSt> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	_1ab0277b7_Token _field_label{_1ab0277b7_Token()};


	_1aaeea1c4_GotoSt(_1ab0277b7_Token __param_token, _1ab0277b7_Token __param_label) {
		this->self = jule::Ref<_1aaeea1c4_GotoSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1aaeea1c4_GotoSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_GotoSt(void) { this->self = jule::Ref<_1aaeea1c4_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_GotoSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1aaeea1c4_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_FallSt {
	jule::Ref<_1aaeea1c4_FallSt> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};


	_1aaeea1c4_FallSt(_1ab0277b7_Token __param_token) {
		this->self = jule::Ref<_1aaeea1c4_FallSt>::make(this, nullptr);

		this->_field_token = __param_token;
	}

	~_1aaeea1c4_FallSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_FallSt(void) { this->self = jule::Ref<_1aaeea1c4_FallSt>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_FallSt &_Src) const {
		return 
			this->_field_token == _Src._field_token;
	}

	inline bool operator!=(const _1aaeea1c4_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_AssignLeft {
	jule::Ref<_1aaeea1c4_AssignLeft> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1aaeea1c4_Expr> _field_expr{jule::Ref<_1aaeea1c4_Expr>()};


	_1aaeea1c4_AssignLeft(_1ab0277b7_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ref<_1aaeea1c4_Expr> __param_expr) {
		this->self = jule::Ref<_1aaeea1c4_AssignLeft>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_1aaeea1c4_AssignLeft(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_AssignLeft(void) { this->self = jule::Ref<_1aaeea1c4_AssignLeft>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_AssignLeft &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1aaeea1c4_AssignLeft &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_AssignSt {
	jule::Ref<_1aaeea1c4_AssignSt> self{};

	jule::Bool _field_declarative{jule::Bool()};
	_1ab0277b7_Token _field_setter{_1ab0277b7_Token()};
	jule::Slice<jule::Ref<_1aaeea1c4_AssignLeft>> _field_left{jule::Slice<jule::Ref<_1aaeea1c4_AssignLeft>>()};
	jule::Ref<_1aaeea1c4_Expr> _field_right{jule::Ref<_1aaeea1c4_Expr>()};


	_1aaeea1c4_AssignSt(jule::Bool __param_declarative, _1ab0277b7_Token __param_setter, jule::Slice<jule::Ref<_1aaeea1c4_AssignLeft>> __param_left, jule::Ref<_1aaeea1c4_Expr> __param_right) {
		this->self = jule::Ref<_1aaeea1c4_AssignSt>::make(this, nullptr);

		this->_field_declarative = __param_declarative;
		this->_field_setter = __param_setter;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_1aaeea1c4_AssignSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_AssignSt(void) { this->self = jule::Ref<_1aaeea1c4_AssignSt>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_AssignSt &_Src) const {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1aaeea1c4_AssignSt &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_ScopeTree {
	jule::Ref<_1aaeea1c4_ScopeTree> self{};

	jule::Ref<_1aaeea1c4_ScopeTree> _field_parent{jule::Ref<_1aaeea1c4_ScopeTree>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_1aaeea1c4_ScopeTree(jule::Ref<_1aaeea1c4_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts) {
		this->self = jule::Ref<_1aaeea1c4_ScopeTree>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_1aaeea1c4_ScopeTree(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_ScopeTree(void) { this->self = jule::Ref<_1aaeea1c4_ScopeTree>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_ScopeTree &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1aaeea1c4_ScopeTree &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_ParamDecl {
	jule::Ref<_1aaeea1c4_ParamDecl> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1aaeea1c4_TypeDecl> _field_kind{jule::Ref<_1aaeea1c4_TypeDecl>()};
	jule::Str _field_ident{jule::Str()};


	_1aaeea1c4_ParamDecl(_1ab0277b7_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1aaeea1c4_TypeDecl> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_1aaeea1c4_ParamDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_1aaeea1c4_ParamDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_ParamDecl(void) { this->self = jule::Ref<_1aaeea1c4_ParamDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1aaeea1c4_ParamDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1aaeea1c4_ParamDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_FnDecl {
	jule::Ref<_1aaeea1c4_FnDecl> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1aaeea1c4_Directive>> _field_directives{jule::Slice<jule::Ref<_1aaeea1c4_Directive>>()};
	jule::Ref<_1aaeea1c4_CommentGroup> _field_doc_comments{jule::Ref<_1aaeea1c4_CommentGroup>()};
	jule::Ref<_1aaeea1c4_ScopeTree> _field_scope{jule::Ref<_1aaeea1c4_ScopeTree>()};
	jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>()};
	jule::Ref<_1aaeea1c4_RetTypeDecl> _field_result{jule::Ref<_1aaeea1c4_RetTypeDecl>()};
	jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>> _field_params{jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>>()};


	_1aaeea1c4_FnDecl(_1ab0277b7_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1aaeea1c4_Directive>> __param_directives, jule::Ref<_1aaeea1c4_CommentGroup> __param_doc_comments, jule::Ref<_1aaeea1c4_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> __param_generics, jule::Ref<_1aaeea1c4_RetTypeDecl> __param_result, jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>> __param_params) {
		this->self = jule::Ref<_1aaeea1c4_FnDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
	}

	~_1aaeea1c4_FnDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_FnDecl(void) { this->self = jule::Ref<_1aaeea1c4_FnDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_anon(void);


	inline bool operator==(const _1aaeea1c4_FnDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	inline bool operator!=(const _1aaeea1c4_FnDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_VarDecl {
	jule::Ref<_1aaeea1c4_VarDecl> self{};

	jule::Ref<_1aaeea1c4_ScopeTree> _field_scope{jule::Ref<_1aaeea1c4_ScopeTree>()};
	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Slice<jule::Ref<_1aaeea1c4_Directive>> _field_directives{jule::Slice<jule::Ref<_1aaeea1c4_Directive>>()};
	jule::Ref<_1aaeea1c4_CommentGroup> _field_doc_comments{jule::Ref<_1aaeea1c4_CommentGroup>()};
	jule::Ref<_1aaeea1c4_TypeDecl> _field_kind{jule::Ref<_1aaeea1c4_TypeDecl>()};
	jule::Ref<_1aaeea1c4_Expr> _field_expr{jule::Ref<_1aaeea1c4_Expr>()};


	_1aaeea1c4_VarDecl(jule::Ref<_1aaeea1c4_ScopeTree> __param_scope, _1ab0277b7_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ref<_1aaeea1c4_Directive>> __param_directives, jule::Ref<_1aaeea1c4_CommentGroup> __param_doc_comments, jule::Ref<_1aaeea1c4_TypeDecl> __param_kind, jule::Ref<_1aaeea1c4_Expr> __param_expr) {
		this->self = jule::Ref<_1aaeea1c4_VarDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_constant = __param_constant;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_1aaeea1c4_VarDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_VarDecl(void) { this->self = jule::Ref<_1aaeea1c4_VarDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_VarDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1aaeea1c4_VarDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_RetSt {
	jule::Ref<_1aaeea1c4_RetSt> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Ref<_1aaeea1c4_Expr> _field_expr{jule::Ref<_1aaeea1c4_Expr>()};


	_1aaeea1c4_RetSt(_1ab0277b7_Token __param_token, jule::Ref<_1aaeea1c4_Expr> __param_expr) {
		this->self = jule::Ref<_1aaeea1c4_RetSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1aaeea1c4_RetSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_RetSt(void) { this->self = jule::Ref<_1aaeea1c4_RetSt>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_RetSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1aaeea1c4_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_Iter {
	jule::Ref<_1aaeea1c4_Iter> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Any _field_kind{jule::Any()};
	jule::Ref<_1aaeea1c4_ScopeTree> _field_scope{jule::Ref<_1aaeea1c4_ScopeTree>()};


	_1aaeea1c4_Iter(_1ab0277b7_Token __param_token, jule::Any __param_kind, jule::Ref<_1aaeea1c4_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1aaeea1c4_Iter>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
		this->_field_scope = __param_scope;
	}

	~_1aaeea1c4_Iter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_Iter(void) { this->self = jule::Ref<_1aaeea1c4_Iter>::make(this, nullptr); }

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(const _1aaeea1c4_Iter &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1aaeea1c4_Iter &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_WhileKind {
	jule::Ref<_1aaeea1c4_WhileKind> self{};

	jule::Ref<_1aaeea1c4_Expr> _field_expr{jule::Ref<_1aaeea1c4_Expr>()};
	jule::Any _field_next{jule::Any()};
	_1ab0277b7_Token _field_next_token{_1ab0277b7_Token()};


	_1aaeea1c4_WhileKind(jule::Ref<_1aaeea1c4_Expr> __param_expr, jule::Any __param_next, _1ab0277b7_Token __param_next_token) {
		this->self = jule::Ref<_1aaeea1c4_WhileKind>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_next_token = __param_next_token;
	}

	~_1aaeea1c4_WhileKind(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_WhileKind(void) { this->self = jule::Ref<_1aaeea1c4_WhileKind>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1aaeea1c4_WhileKind &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	inline bool operator!=(const _1aaeea1c4_WhileKind &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_RangeKind {
	jule::Ref<_1aaeea1c4_RangeKind> self{};

	_1ab0277b7_Token _field_in_token{_1ab0277b7_Token()};
	jule::Ref<_1aaeea1c4_Expr> _field_expr{jule::Ref<_1aaeea1c4_Expr>()};
	jule::Ref<_1aaeea1c4_VarDecl> _field_key_a{jule::Ref<_1aaeea1c4_VarDecl>()};
	jule::Ref<_1aaeea1c4_VarDecl> _field_key_b{jule::Ref<_1aaeea1c4_VarDecl>()};


	_1aaeea1c4_RangeKind(_1ab0277b7_Token __param_in_token, jule::Ref<_1aaeea1c4_Expr> __param_expr, jule::Ref<_1aaeea1c4_VarDecl> __param_key_a, jule::Ref<_1aaeea1c4_VarDecl> __param_key_b) {
		this->self = jule::Ref<_1aaeea1c4_RangeKind>::make(this, nullptr);

		this->_field_in_token = __param_in_token;
		this->_field_expr = __param_expr;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_1aaeea1c4_RangeKind(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_RangeKind(void) { this->self = jule::Ref<_1aaeea1c4_RangeKind>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_RangeKind &_Src) const {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1aaeea1c4_RangeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_BreakSt {
	jule::Ref<_1aaeea1c4_BreakSt> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	_1ab0277b7_Token _field_label{_1ab0277b7_Token()};


	_1aaeea1c4_BreakSt(_1ab0277b7_Token __param_token, _1ab0277b7_Token __param_label) {
		this->self = jule::Ref<_1aaeea1c4_BreakSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1aaeea1c4_BreakSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_BreakSt(void) { this->self = jule::Ref<_1aaeea1c4_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_BreakSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1aaeea1c4_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_ContSt {
	jule::Ref<_1aaeea1c4_ContSt> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	_1ab0277b7_Token _field_label{_1ab0277b7_Token()};


	_1aaeea1c4_ContSt(_1ab0277b7_Token __param_token, _1ab0277b7_Token __param_label) {
		this->self = jule::Ref<_1aaeea1c4_ContSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1aaeea1c4_ContSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_ContSt(void) { this->self = jule::Ref<_1aaeea1c4_ContSt>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_ContSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1aaeea1c4_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_If {
	jule::Ref<_1aaeea1c4_If> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Ref<_1aaeea1c4_Expr> _field_expr{jule::Ref<_1aaeea1c4_Expr>()};
	jule::Ref<_1aaeea1c4_ScopeTree> _field_scope{jule::Ref<_1aaeea1c4_ScopeTree>()};


	_1aaeea1c4_If(_1ab0277b7_Token __param_token, jule::Ref<_1aaeea1c4_Expr> __param_expr, jule::Ref<_1aaeea1c4_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1aaeea1c4_If>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_1aaeea1c4_If(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_If(void) { this->self = jule::Ref<_1aaeea1c4_If>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_If &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1aaeea1c4_If &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_Else {
	jule::Ref<_1aaeea1c4_Else> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Ref<_1aaeea1c4_ScopeTree> _field_scope{jule::Ref<_1aaeea1c4_ScopeTree>()};


	_1aaeea1c4_Else(_1ab0277b7_Token __param_token, jule::Ref<_1aaeea1c4_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1aaeea1c4_Else>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
	}

	~_1aaeea1c4_Else(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_Else(void) { this->self = jule::Ref<_1aaeea1c4_Else>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_Else &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1aaeea1c4_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_Conditional {
	jule::Ref<_1aaeea1c4_Conditional> self{};

	jule::Ref<_1aaeea1c4_If> _field_head{jule::Ref<_1aaeea1c4_If>()};
	jule::Slice<jule::Ref<_1aaeea1c4_If>> _field_tail{jule::Slice<jule::Ref<_1aaeea1c4_If>>()};
	jule::Ref<_1aaeea1c4_Else> _field_default{jule::Ref<_1aaeea1c4_Else>()};


	_1aaeea1c4_Conditional(jule::Ref<_1aaeea1c4_If> __param_head, jule::Slice<jule::Ref<_1aaeea1c4_If>> __param_tail, jule::Ref<_1aaeea1c4_Else> __param_default) {
		this->self = jule::Ref<_1aaeea1c4_Conditional>::make(this, nullptr);

		this->_field_head = __param_head;
		this->_field_tail = __param_tail;
		this->_field_default = __param_default;
	}

	~_1aaeea1c4_Conditional(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_Conditional(void) { this->self = jule::Ref<_1aaeea1c4_Conditional>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_Conditional &_Src) const {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1aaeea1c4_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_TypeAliasDecl {
	jule::Ref<_1aaeea1c4_TypeAliasDecl> self{};

	jule::Ref<_1aaeea1c4_ScopeTree> _field_scope{jule::Ref<_1aaeea1c4_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1aaeea1c4_TypeDecl> _field_kind{jule::Ref<_1aaeea1c4_TypeDecl>()};
	jule::Ref<_1aaeea1c4_CommentGroup> _field_doc_comments{jule::Ref<_1aaeea1c4_CommentGroup>()};


	_1aaeea1c4_TypeAliasDecl(jule::Ref<_1aaeea1c4_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _1ab0277b7_Token __param_token, jule::Str __param_ident, jule::Ref<_1aaeea1c4_TypeDecl> __param_kind, jule::Ref<_1aaeea1c4_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_1aaeea1c4_TypeAliasDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_1aaeea1c4_TypeAliasDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_TypeAliasDecl(void) { this->self = jule::Ref<_1aaeea1c4_TypeAliasDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_TypeAliasDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1aaeea1c4_TypeAliasDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_Case {
	jule::Ref<_1aaeea1c4_Case> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Ref<_1aaeea1c4_ScopeTree> _field_scope{jule::Ref<_1aaeea1c4_ScopeTree>()};
	jule::Slice<jule::Ref<_1aaeea1c4_Expr>> _field_exprs{jule::Slice<jule::Ref<_1aaeea1c4_Expr>>()};


	_1aaeea1c4_Case(_1ab0277b7_Token __param_token, jule::Ref<_1aaeea1c4_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1aaeea1c4_Expr>> __param_exprs) {
		this->self = jule::Ref<_1aaeea1c4_Case>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
	}

	~_1aaeea1c4_Case(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_Case(void) { this->self = jule::Ref<_1aaeea1c4_Case>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_Case &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1aaeea1c4_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_MatchCase {
	jule::Ref<_1aaeea1c4_MatchCase> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Ref<_1aaeea1c4_Expr> _field_expr{jule::Ref<_1aaeea1c4_Expr>()};
	jule::Slice<jule::Ref<_1aaeea1c4_Case>> _field_cases{jule::Slice<jule::Ref<_1aaeea1c4_Case>>()};
	jule::Ref<_1aaeea1c4_Else> _field_default{jule::Ref<_1aaeea1c4_Else>()};


	_1aaeea1c4_MatchCase(_1ab0277b7_Token __param_token, jule::Bool __param_type_match, jule::Ref<_1aaeea1c4_Expr> __param_expr, jule::Slice<jule::Ref<_1aaeea1c4_Case>> __param_cases, jule::Ref<_1aaeea1c4_Else> __param_default) {
		this->self = jule::Ref<_1aaeea1c4_MatchCase>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_type_match = __param_type_match;
		this->_field_expr = __param_expr;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_1aaeea1c4_MatchCase(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_MatchCase(void) { this->self = jule::Ref<_1aaeea1c4_MatchCase>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_MatchCase &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1aaeea1c4_MatchCase &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_UseDecl {
	jule::Ref<_1aaeea1c4_UseDecl> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_full{jule::Bool()};
	jule::Slice<_1ab0277b7_Token> _field_selected{jule::Slice<_1ab0277b7_Token>()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};


	_1aaeea1c4_UseDecl(_1ab0277b7_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_1ab0277b7_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std) {
		this->self = jule::Ref<_1aaeea1c4_UseDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_link_path = __param_link_path;
		this->_field_alias = __param_alias;
		this->_field_full = __param_full;
		this->_field_selected = __param_selected;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
	}

	~_1aaeea1c4_UseDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_UseDecl(void) { this->self = jule::Ref<_1aaeea1c4_UseDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_UseDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_alias == _Src._field_alias &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	inline bool operator!=(const _1aaeea1c4_UseDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_EnumItemDecl {
	jule::Ref<_1aaeea1c4_EnumItemDecl> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1aaeea1c4_Expr> _field_expr{jule::Ref<_1aaeea1c4_Expr>()};


	_1aaeea1c4_EnumItemDecl(_1ab0277b7_Token __param_token, jule::Str __param_ident, jule::Ref<_1aaeea1c4_Expr> __param_expr) {
		this->self = jule::Ref<_1aaeea1c4_EnumItemDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_1aaeea1c4_EnumItemDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_EnumItemDecl(void) { this->self = jule::Ref<_1aaeea1c4_EnumItemDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1aaeea1c4_EnumItemDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1aaeea1c4_EnumItemDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_EnumDecl {
	jule::Ref<_1aaeea1c4_EnumDecl> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1aaeea1c4_TypeDecl> _field_kind{jule::Ref<_1aaeea1c4_TypeDecl>()};
	jule::Slice<jule::Ref<_1aaeea1c4_EnumItemDecl>> _field_items{jule::Slice<jule::Ref<_1aaeea1c4_EnumItemDecl>>()};
	jule::Ref<_1aaeea1c4_CommentGroup> _field_doc_comments{jule::Ref<_1aaeea1c4_CommentGroup>()};


	_1aaeea1c4_EnumDecl(_1ab0277b7_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1aaeea1c4_TypeDecl> __param_kind, jule::Slice<jule::Ref<_1aaeea1c4_EnumItemDecl>> __param_items, jule::Ref<_1aaeea1c4_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_1aaeea1c4_EnumDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_1aaeea1c4_EnumDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_EnumDecl(void) { this->self = jule::Ref<_1aaeea1c4_EnumDecl>::make(this, nullptr); }

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(const _1aaeea1c4_EnumDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1aaeea1c4_EnumDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_FieldDecl {
	jule::Ref<_1aaeea1c4_FieldDecl> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1aaeea1c4_TypeDecl> _field_kind{jule::Ref<_1aaeea1c4_TypeDecl>()};


	_1aaeea1c4_FieldDecl(_1ab0277b7_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1aaeea1c4_TypeDecl> __param_kind) {
		this->self = jule::Ref<_1aaeea1c4_FieldDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_1aaeea1c4_FieldDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_FieldDecl(void) { this->self = jule::Ref<_1aaeea1c4_FieldDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_FieldDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1aaeea1c4_FieldDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_StructDecl {
	jule::Ref<_1aaeea1c4_StructDecl> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1aaeea1c4_FieldDecl>> _field_fields{jule::Slice<jule::Ref<_1aaeea1c4_FieldDecl>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1aaeea1c4_Directive>> _field_directives{jule::Slice<jule::Ref<_1aaeea1c4_Directive>>()};
	jule::Ref<_1aaeea1c4_CommentGroup> _field_doc_comments{jule::Ref<_1aaeea1c4_CommentGroup>()};
	jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>()};


	_1aaeea1c4_StructDecl(_1ab0277b7_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_1aaeea1c4_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1aaeea1c4_Directive>> __param_directives, jule::Ref<_1aaeea1c4_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> __param_generics) {
		this->self = jule::Ref<_1aaeea1c4_StructDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_generics = __param_generics;
	}

	~_1aaeea1c4_StructDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_StructDecl(void) { this->self = jule::Ref<_1aaeea1c4_StructDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_StructDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1aaeea1c4_StructDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_TraitDecl {
	jule::Ref<_1aaeea1c4_TraitDecl> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Ref<_1aaeea1c4_CommentGroup> _field_doc_comments{jule::Ref<_1aaeea1c4_CommentGroup>()};
	jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>>()};


	_1aaeea1c4_TraitDecl(_1ab0277b7_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ref<_1aaeea1c4_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>> __param_methods) {
		this->self = jule::Ref<_1aaeea1c4_TraitDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_methods = __param_methods;
	}

	~_1aaeea1c4_TraitDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_TraitDecl(void) { this->self = jule::Ref<_1aaeea1c4_TraitDecl>::make(this, nullptr); }

	inline bool operator==(const _1aaeea1c4_TraitDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1aaeea1c4_TraitDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1aaeea1c4_Impl {
	jule::Ref<_1aaeea1c4_Impl> self{};

	_1ab0277b7_Token _field_base{_1ab0277b7_Token()};
	_1ab0277b7_Token _field_dest{_1ab0277b7_Token()};
	jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>>()};


	_1aaeea1c4_Impl(_1ab0277b7_Token __param_base, _1ab0277b7_Token __param_dest, jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>> __param_methods) {
		this->self = jule::Ref<_1aaeea1c4_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_1aaeea1c4_Impl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aaeea1c4_Impl(void) { this->self = jule::Ref<_1aaeea1c4_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1aaeea1c4_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1aaeea1c4_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1ab059068_FileInfo {
	jule::Ref<_1ab059068_FileInfo> self{};

	jule::Ref<_1ab026d8d_Ast> _field_ast{jule::Ref<_1ab026d8d_Ast>()};
	jule::Slice<_1d068165a_Log> _field_errors{jule::Slice<_1d068165a_Log>()};


	_1ab059068_FileInfo(jule::Ref<_1ab026d8d_Ast> __param_ast, jule::Slice<_1d068165a_Log> __param_errors) {
		this->self = jule::Ref<_1ab059068_FileInfo>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_errors = __param_errors;
	}

	~_1ab059068_FileInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab059068_FileInfo(void) { this->self = jule::Ref<_1ab059068_FileInfo>::make(this, nullptr); }

	inline bool operator==(const _1ab059068_FileInfo &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1ab059068_FileInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1ab059068_PackageInfo {
	jule::Ref<_1ab059068_PackageInfo> self{};

	jule::Slice<jule::Ref<_1ab059068_FileInfo>> _field_files{jule::Slice<jule::Ref<_1ab059068_FileInfo>>()};


	_1ab059068_PackageInfo(jule::Slice<jule::Ref<_1ab059068_FileInfo>> __param_files) {
		this->self = jule::Ref<_1ab059068_PackageInfo>::make(this, nullptr);

		this->_field_files = __param_files;
	}

	~_1ab059068_PackageInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab059068_PackageInfo(void) { this->self = jule::Ref<_1ab059068_PackageInfo>::make(this, nullptr); }

	inline bool operator==(const _1ab059068_PackageInfo &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1ab059068_PackageInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1ab05bd18_Stmt {
	jule::Ref<_1ab05bd18_Stmt> self{};

	jule::Slice<_1ab0277b7_Token> _field_tokens{jule::Slice<_1ab0277b7_Token>()};
	jule::Bool _field_terminated{jule::Bool()};


	_1ab05bd18_Stmt(jule::Slice<_1ab0277b7_Token> __param_tokens, jule::Bool __param_terminated) {
		this->self = jule::Ref<_1ab05bd18_Stmt>::make(this, nullptr);

		this->_field_tokens = __param_tokens;
		this->_field_terminated = __param_terminated;
	}

	~_1ab05bd18_Stmt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab05bd18_Stmt(void) { this->self = jule::Ref<_1ab05bd18_Stmt>::make(this, nullptr); }

	inline bool operator==(const _1ab05bd18_Stmt &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	inline bool operator!=(const _1ab05bd18_Stmt &_Src) const { return !this->operator==(_Src); }
};


struct _1ab05bd18_ScopeParser {
	jule::Ref<_1ab05bd18_ScopeParser> self{};

	jule::Ref<_1ac1ba56e_Parser> _field_p{jule::Ref<_1ac1ba56e_Parser>()};
	jule::Ref<_1aaeea1c4_ScopeTree> _field_s{jule::Ref<_1aaeea1c4_ScopeTree>()};
	jule::Slice<jule::Ref<_1ab05bd18_Stmt>> _field_stms{jule::Slice<jule::Ref<_1ab05bd18_Stmt>>()};
	jule::Int _field_pos{jule::Int()};


	_1ab05bd18_ScopeParser(jule::Ref<_1ac1ba56e_Parser> __param_p, jule::Ref<_1aaeea1c4_ScopeTree> __param_s, jule::Slice<jule::Ref<_1ab05bd18_Stmt>> __param_stms, jule::Int __param_pos) {
		this->self = jule::Ref<_1ab05bd18_ScopeParser>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_s = __param_s;
		this->_field_stms = __param_stms;
		this->_field_pos = __param_pos;
	}

	~_1ab05bd18_ScopeParser(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab05bd18_ScopeParser(void) { this->self = jule::Ref<_1ab05bd18_ScopeParser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_1ab0277b7_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_insert_as_next(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1ab05bd18_Stmt> _method_next(void);


	inline jule::Ref<_1aaeea1c4_ScopeTree> _method_build_scope(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_var_st(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_ret_st(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ref<_1ab05bd18_Stmt>);


	inline jule::Ref<_1aaeea1c4_WhileKind> _method_build_while_iter_kind(jule::Slice<_1ab0277b7_Token>);


	inline jule::Slice<jule::Slice<_1ab0277b7_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_VarDecl> _method_build_range_kind_key(jule::Slice<_1ab0277b7_Token>);


	inline jule::Slice<jule::Ref<_1aaeea1c4_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_1ab0277b7_Token>>);


	inline void _method_setup_range_kind_keys_plain(jule::Ref<_1aaeea1c4_RangeKind>,jule::Slice<_1ab0277b7_Token>);


	inline void _method_setup_range_kind_keys_explicit(jule::Ref<_1aaeea1c4_RangeKind>,jule::Slice<_1ab0277b7_Token>);


	inline void _method_setup_range_kind_keys(jule::Ref<_1aaeea1c4_RangeKind>,jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_RangeKind> _method_build_range_iter_kind(jule::Slice<_1ab0277b7_Token>,jule::Slice<_1ab0277b7_Token>,_1ab0277b7_Token);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_1ab0277b7_Token>,_1ab0277b7_Token);


	inline jule::Any _method_build_common_iter(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ref<_1ab05bd18_Stmt>);


	inline jule::Any _method_build_break_st(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_cont_st(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_If> _method_build_if(jule::Slice<_1ab0277b7_Token>&);


	inline jule::Ref<_1aaeea1c4_Else> _method_build_else(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_comment_st(_1ab0277b7_Token);


	inline jule::Any _method_build_call_st(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_co_call_st(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_fall_st(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_1ab0277b7_Token>);


	inline void _method_push_case_expr(jule::Slice<_1ab0277b7_Token>,_1ab0277b7_Token,jule::Bool,jule::Slice<jule::Ref<_1aaeea1c4_Expr>>&);


	inline jule::Slice<jule::Ref<_1aaeea1c4_Expr>> _method_build_case_exprs(jule::Slice<_1ab0277b7_Token>&,jule::Bool);


	inline jule::Ref<_1aaeea1c4_ScopeTree> _method_build_case_scope(jule::Slice<_1ab0277b7_Token>&);


	inline std::tuple<jule::Ref<_1aaeea1c4_Case>,jule::Bool> _method_build_case(jule::Slice<_1ab0277b7_Token>&,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ref<_1aaeea1c4_Case>>,jule::Ref<_1aaeea1c4_Else>> _method_build_cases(jule::Slice<_1ab0277b7_Token>,jule::Bool);


	inline jule::Ref<_1aaeea1c4_MatchCase> _method_build_match_case(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_ScopeTree> _method_build_scope_st(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_LabelSt> _method_build_label_st(jule::Slice<_1ab0277b7_Token>);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1ab09d6b7_AssignInfo> _method_build_assign_info(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_AssignLeft> _method_build_assign_l(jule::Slice<_1ab0277b7_Token>);


	inline jule::Slice<jule::Ref<_1aaeea1c4_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_1ab0277b7_Token>>);


	inline std::tuple<jule::Ref<_1aaeea1c4_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_1ab0277b7_Token>);


	inline std::tuple<jule::Ref<_1aaeea1c4_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_1ab0277b7_Token>);


	inline std::tuple<jule::Ref<_1aaeea1c4_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_st(jule::Ref<_1ab05bd18_Stmt>);


	inline void _method_build(jule::Slice<_1ab0277b7_Token>,jule::Ref<_1aaeea1c4_ScopeTree>);


	inline bool operator==(const _1ab05bd18_ScopeParser &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stms == _Src._field_stms &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1ab05bd18_ScopeParser &_Src) const { return !this->operator==(_Src); }
};


struct _1ab060d50_CallData {
	jule::Ref<_1ab060d50_CallData> self{};

	jule::Slice<_1ab0277b7_Token> _field_expr_tokens{jule::Slice<_1ab0277b7_Token>()};
	jule::Slice<_1ab0277b7_Token> _field_args_tokens{jule::Slice<_1ab0277b7_Token>()};
	jule::Slice<_1ab0277b7_Token> _field_generics_tokens{jule::Slice<_1ab0277b7_Token>()};


	_1ab060d50_CallData(jule::Slice<_1ab0277b7_Token> __param_expr_tokens, jule::Slice<_1ab0277b7_Token> __param_args_tokens, jule::Slice<_1ab0277b7_Token> __param_generics_tokens) {
		this->self = jule::Ref<_1ab060d50_CallData>::make(this, nullptr);

		this->_field_expr_tokens = __param_expr_tokens;
		this->_field_args_tokens = __param_args_tokens;
		this->_field_generics_tokens = __param_generics_tokens;
	}

	~_1ab060d50_CallData(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab060d50_CallData(void) { this->self = jule::Ref<_1ab060d50_CallData>::make(this, nullptr); }

	inline bool operator==(const _1ab060d50_CallData &_Src) const {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	inline bool operator!=(const _1ab060d50_CallData &_Src) const { return !this->operator==(_Src); }
};


struct _1ab060d50_Precedencer {
	jule::Ref<_1ab060d50_Precedencer> self{};

	jule::Slice<jule::Slice<jule::Any>> _field_pairs{jule::Slice<jule::Slice<jule::Any>>()};


	_1ab060d50_Precedencer(jule::Slice<jule::Slice<jule::Any>> __param_pairs) {
		this->self = jule::Ref<_1ab060d50_Precedencer>::make(this, nullptr);

		this->_field_pairs = __param_pairs;
	}

	~_1ab060d50_Precedencer(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab060d50_Precedencer(void) { this->self = jule::Ref<_1ab060d50_Precedencer>::make(this, nullptr); }

	inline void _method_set(jule::Int,jule::Any);


	inline jule::Any _method_get_lower(void);


	inline bool operator==(const _1ab060d50_Precedencer &_Src) const {
		return 
			this->_field_pairs == _Src._field_pairs;
	}

	inline bool operator!=(const _1ab060d50_Precedencer &_Src) const { return !this->operator==(_Src); }
};


struct _1ab060d50_ExprBuilder {
	jule::Ref<_1ab060d50_ExprBuilder> self{};

	jule::Ref<_1ac1ba56e_Parser> _field_p{jule::Ref<_1ac1ba56e_Parser>()};


	_1ab060d50_ExprBuilder(jule::Ref<_1ac1ba56e_Parser> __param_p) {
		this->self = jule::Ref<_1ab060d50_ExprBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
	}

	~_1ab060d50_ExprBuilder(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab060d50_ExprBuilder(void) { this->self = jule::Ref<_1ab060d50_ExprBuilder>::make(this, nullptr); }

	inline void _method_push_err(_1ab0277b7_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1aaeea1c4_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_1ab0277b7_Token>>);


	inline jule::Ref<_1aaeea1c4_LitExpr> _method_build_lit(_1ab0277b7_Token);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_primitive_type(_1ab0277b7_Token);


	inline jule::Any _method_build_single(_1ab0277b7_Token);


	inline jule::Ref<_1aaeea1c4_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_UnaryExpr> _method_build_unary(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_type(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_sub_ident(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_VariadicExpr> _method_build_variadic(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_CastExpr> _method_try_build_cast(jule::Slice<_1ab0277b7_Token>);


	inline void _method_push_arg(jule::Slice<jule::Ref<_1aaeea1c4_Expr>>&,jule::Slice<_1ab0277b7_Token>,_1ab0277b7_Token);


	inline jule::Slice<jule::Ref<_1aaeea1c4_Expr>> _method_build_args(jule::Slice<_1ab0277b7_Token>);


	inline jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>> _method_build_call_generics(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_FnCallExpr> _method_build_fn_call(_1ab0277b7_Token,jule::Ref<_1ab060d50_CallData>);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_FnDecl> _method_build_anon_fn(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_unsafe(jule::Slice<_1ab0277b7_Token>);


	inline void _method_push_range_lit_part(jule::Slice<_1ab0277b7_Token>,_1ab0277b7_Token,jule::Slice<jule::Slice<_1ab0277b7_Token>>&);


	inline jule::Slice<jule::Slice<_1ab0277b7_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_1ab0277b7_Token>);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_StructLit> _method_build_typed_struct_literal(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_BraceLit> _method_build_brace_lit(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_brace_range(jule::Slice<_1ab0277b7_Token>);


	inline jule::Slice<jule::Slice<_1ab0277b7_Token>> _method_get_enumerable_parts(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_SliceExpr> _method_build_slice(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_IndexingExpr> _method_build_indexing(jule::Slice<_1ab0277b7_Token>,jule::Slice<_1ab0277b7_Token>,_1ab0277b7_Token);


	inline jule::Ref<_1aaeea1c4_SlicingExpr> _method_build_slicing(jule::Slice<_1ab0277b7_Token>,jule::Slice<_1ab0277b7_Token>,jule::Int,_1ab0277b7_Token);


	inline jule::Any _method_build_bracket_range(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_data(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_BinopExpr> _method_build_binop(jule::Slice<_1ab0277b7_Token>,jule::Int);


	inline jule::Any _method_build(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_kind(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_Expr> _method_build_from_tokens(jule::Slice<_1ab0277b7_Token>);


	inline bool operator==(const _1ab060d50_ExprBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p;
	}

	inline bool operator!=(const _1ab060d50_ExprBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1ab09d6b7_AssignInfo {
	jule::Ref<_1ab09d6b7_AssignInfo> self{};

	jule::Slice<_1ab0277b7_Token> _field_l{jule::Slice<_1ab0277b7_Token>()};
	jule::Slice<_1ab0277b7_Token> _field_r{jule::Slice<_1ab0277b7_Token>()};
	_1ab0277b7_Token _field_setter{_1ab0277b7_Token()};
	jule::Bool _field_ok{jule::Bool()};


	_1ab09d6b7_AssignInfo(jule::Slice<_1ab0277b7_Token> __param_l, jule::Slice<_1ab0277b7_Token> __param_r, _1ab0277b7_Token __param_setter, jule::Bool __param_ok) {
		this->self = jule::Ref<_1ab09d6b7_AssignInfo>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_setter = __param_setter;
		this->_field_ok = __param_ok;
	}

	~_1ab09d6b7_AssignInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab09d6b7_AssignInfo(void) { this->self = jule::Ref<_1ab09d6b7_AssignInfo>::make(this, nullptr); }

	inline bool operator==(const _1ab09d6b7_AssignInfo &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	inline bool operator!=(const _1ab09d6b7_AssignInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1ac1ba56e_Parser {
	jule::Ref<_1ac1ba56e_Parser> self{};

	jule::Ref<_1ab026d8d_Ast> _field_ast{jule::Ref<_1ab026d8d_Ast>()};
	jule::Slice<jule::Ref<_1aaeea1c4_Directive>> _field_directives{jule::Slice<jule::Ref<_1aaeea1c4_Directive>>()};
	jule::Ref<_1aaeea1c4_CommentGroup> _field_comment_group{jule::Ref<_1aaeea1c4_CommentGroup>()};
	jule::Slice<_1d068165a_Log> _field_errors{jule::Slice<_1d068165a_Log>()};


	_1ac1ba56e_Parser(jule::Ref<_1ab026d8d_Ast> __param_ast, jule::Slice<jule::Ref<_1aaeea1c4_Directive>> __param_directives, jule::Ref<_1aaeea1c4_CommentGroup> __param_comment_group, jule::Slice<_1d068165a_Log> __param_errors) {
		this->self = jule::Ref<_1ac1ba56e_Parser>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_directives = __param_directives;
		this->_field_comment_group = __param_comment_group;
		this->_field_errors = __param_errors;
	}

	~_1ac1ba56e_Parser(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac1ba56e_Parser(void) { this->self = jule::Ref<_1ac1ba56e_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_1ab0277b7_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1aaeea1c4_Expr> _method_build_expr(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_Directive> _method_get_directive(jule::Ref<_1aaeea1c4_Comment>);


	inline void _method_push_directive(jule::Ref<_1aaeea1c4_Comment>);


	inline void _method_process_comment(jule::Ref<_1aaeea1c4_Comment>);


	inline jule::Ref<_1aaeea1c4_ScopeTree> _method_build_scope(jule::Slice<_1ab0277b7_Token>);


	inline std::tuple<jule::Ref<_1aaeea1c4_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_1ab0277b7_Token>,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ref<_1aaeea1c4_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_1ab0277b7_Token>,jule::Int*,jule::Bool);


	inline jule::Ref<_1aaeea1c4_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_1ab0277b7_Token>);


	inline void _method_build_var_type_and_expr(jule::Ref<_1aaeea1c4_VarDecl>,jule::Slice<_1ab0277b7_Token>);


	inline void _method_build_var_common(jule::Ref<_1aaeea1c4_VarDecl>,jule::Slice<_1ab0277b7_Token>);


	inline void _method_build_var_begin(jule::Ref<_1aaeea1c4_VarDecl>,jule::Ref<jule::Int>,jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_VarDecl> _method_build_var(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_GenericDecl> _method_build_generic(jule::Slice<_1ab0277b7_Token>);


	inline jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> _method_build_generics(jule::Slice<_1ab0277b7_Token>,_1ab0277b7_Token);


	inline jule::Ref<_1aaeea1c4_ParamDecl> _method_build_self_param(jule::Slice<_1ab0277b7_Token>);


	inline void _method_param_type_begin(jule::Ref<_1aaeea1c4_ParamDecl>,jule::Int&,jule::Slice<_1ab0277b7_Token>);


	inline void _method_build_param_type(jule::Ref<_1aaeea1c4_ParamDecl>,jule::Slice<_1ab0277b7_Token>,jule::Bool);


	inline void _method_param_body_id(jule::Ref<_1aaeea1c4_ParamDecl>,_1ab0277b7_Token);


	inline void _method_build_param_body(jule::Ref<_1aaeea1c4_ParamDecl>,jule::Ref<jule::Int>,jule::Slice<_1ab0277b7_Token>,jule::Bool);


	inline jule::Ref<_1aaeea1c4_ParamDecl> _method_build_param(jule::Slice<_1ab0277b7_Token>,jule::Bool);


	inline void _method_check_params(jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>>);


	inline jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>> _method_build_params(jule::Slice<_1ab0277b7_Token>,jule::Bool,jule::Bool);


	inline std::tuple<jule::Ref<_1aaeea1c4_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_1ab0277b7_Token>,jule::Int&);


	inline std::tuple<jule::Ref<_1aaeea1c4_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_1ab0277b7_Token>,jule::Int&);


	inline jule::Ref<_1aaeea1c4_FnDecl> _method_build_fn_prototype(jule::Slice<_1ab0277b7_Token>,jule::Int&,jule::Bool);


	inline jule::Ref<_1aaeea1c4_FnDecl> _method_build_fn(jule::Slice<_1ab0277b7_Token>,jule::Bool,jule::Bool);


	inline jule::Slice<_1ab0277b7_Token> _method_get_use_decl_selectors(jule::Slice<_1ab0277b7_Token>);


	inline void _method_build_cpp_use_decl(jule::Ref<_1aaeea1c4_UseDecl>,jule::Slice<_1ab0277b7_Token>);


	inline void _method_build_std_use_decl(jule::Ref<_1aaeea1c4_UseDecl>,jule::Slice<_1ab0277b7_Token>);


	inline void _method_build_ident_use_decl(jule::Ref<_1aaeea1c4_UseDecl>,jule::Slice<_1ab0277b7_Token>);


	inline void _method_parse_use_decl(jule::Ref<_1aaeea1c4_UseDecl>,jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_UseDecl> _method_build_use_decl(jule::Slice<_1ab0277b7_Token>,jule::Bool);


	inline jule::Ref<_1aaeea1c4_Expr> _method_build_enum_item_expr(jule::Ref<jule::Int>,jule::Slice<_1ab0277b7_Token>);


	inline jule::Slice<jule::Ref<_1aaeea1c4_EnumItemDecl>> _method_build_enum_items(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_EnumDecl> _method_build_enum_decl(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_FieldDecl> _method_build_field(jule::Slice<_1ab0277b7_Token>);


	inline jule::Slice<jule::Ref<_1aaeea1c4_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_StructDecl> _method_build_struct_decl(jule::Slice<_1ab0277b7_Token>);


	inline void _method_check_method_receiver(jule::Ref<_1aaeea1c4_FnDecl>);


	inline jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>> _method_build_trait_methods(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_TraitDecl> _method_build_trait_decl(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_FnDecl> _method_build_cpp_link_fn(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_VarDecl> _method_build_cpp_link_var(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_StructDecl> _method_build_cpp_link_struct(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_UseDecl> _method_build_cpp_link_use(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_FnDecl> _method_get_method(jule::Slice<_1ab0277b7_Token>);


	inline void _method_parse_impl_trait(jule::Ref<_1aaeea1c4_Impl>,jule::Slice<_1ab0277b7_Token>);


	inline void _method_parse_impl_struct(jule::Ref<_1aaeea1c4_Impl>,jule::Slice<_1ab0277b7_Token>);


	inline void _method_parse_impl_body(jule::Ref<_1aaeea1c4_Impl>,jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_Impl> _method_build_impl(jule::Slice<_1ab0277b7_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_1ab0277b7_Token>);


	inline void _method_check_comment_group(_1aaeea1c4_Node);


	inline void _method_check_directive(_1aaeea1c4_Node);


	inline void _method_apply_meta(_1aaeea1c4_Node,jule::Bool);


	inline void _method_check_use_decl(_1aaeea1c4_Node);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_1ab0277b7_Token>);


	inline _1aaeea1c4_Node _method_parse_node(jule::Slice<_1ab0277b7_Token>);


	inline void _method_append_node(jule::Slice<_1ab0277b7_Token>);


	inline void _method_remove_range(jule::Int,jule::Str,jule::Slice<_1ab0277b7_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_wrong_order_close_err(_1ab0277b7_Token,jule::Slice<_1ab0277b7_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_range_close(_1ab0277b7_Token,jule::Str,jule::Slice<_1ab0277b7_Token>&,jule::Slice<jule::Int>&);


	inline void _method_check_ranges(jule::Slice<_1ab0277b7_Token>&);


	inline void _method_parse(jule::Ref<_1ab029324_File>);


	inline bool operator==(const _1ac1ba56e_Parser &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1ac1ba56e_Parser &_Src) const { return !this->operator==(_Src); }
};


struct _1ac308844_TypeBuilder {
	jule::Ref<_1ac308844_TypeBuilder> self{};

	jule::Ref<_1ac1ba56e_Parser> _field_p{jule::Ref<_1ac1ba56e_Parser>()};
	jule::Slice<_1ab0277b7_Token> _field_tokens{jule::Slice<_1ab0277b7_Token>()};
	jule::Int* _field_i{nullptr};
	jule::Bool _field_err{jule::Bool()};


	_1ac308844_TypeBuilder(jule::Ref<_1ac1ba56e_Parser> __param_p, jule::Slice<_1ab0277b7_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err) {
		this->self = jule::Ref<_1ac308844_TypeBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_tokens = __param_tokens;
		this->_field_i = __param_i;
		this->_field_err = __param_err;
	}

	~_1ac308844_TypeBuilder(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac308844_TypeBuilder(void) { this->self = jule::Ref<_1ac308844_TypeBuilder>::make(this, nullptr); }

	inline void _method_push_err(_1ab0277b7_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_prim(void);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_1ab0277b7_Token>> _method_ident_generics(void);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_ident(void);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_fn(void);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_ptr(void);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_ref(void);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_op(void);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_slc(void);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_arr(void);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_map(jule::Int,jule::Slice<_1ab0277b7_Token>);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_build_enumerable(void);


	inline jule::Ref<_1aaeea1c4_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ref<_1aaeea1c4_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(const _1ac308844_TypeBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _1ac308844_TypeBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1ad6d5cec_Const {
	jule::Ref<_1ad6d5cec_Const> self{};

	jule::Any _field_data{jule::Any()};


	_1ad6d5cec_Const(jule::Any __param_data) {
		this->self = jule::Ref<_1ad6d5cec_Const>::make(this, nullptr);

		this->_field_data = __param_data;
	}

	~_1ad6d5cec_Const(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ad6d5cec_Const(void) { this->self = jule::Ref<_1ad6d5cec_Const>::make(this, nullptr); }

	static inline jule::Ref<_1ad6d5cec_Const> _static_method_new_i64(jule::I64);


	static inline jule::Ref<_1ad6d5cec_Const> _static_method_new_u64(jule::U64);


	static inline jule::Ref<_1ad6d5cec_Const> _static_method_new_bool(jule::Bool);


	static inline jule::Ref<_1ad6d5cec_Const> _static_method_new_str(jule::Str);


	static inline jule::Ref<_1ad6d5cec_Const> _static_method_new_f64(jule::F64);


	static inline jule::Ref<_1ad6d5cec_Const> _static_method_new_nil(void);


	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline void _method_set_by_type(jule::F64,_1ad6d5cec_Const);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_1ad6d5cec_Const);


	inline jule::Bool _method_and(_1ad6d5cec_Const);


	inline jule::Bool _method_or(_1ad6d5cec_Const);


	inline jule::Bool _method_eqs(_1ad6d5cec_Const);


	inline jule::Bool _method_lt(_1ad6d5cec_Const);


	inline jule::Bool _method_gt(_1ad6d5cec_Const);


	inline jule::Bool _method_add(_1ad6d5cec_Const);


	inline jule::Bool _method_sub(_1ad6d5cec_Const);


	inline jule::Bool _method_mul(_1ad6d5cec_Const);


	inline jule::Bool _method_div(_1ad6d5cec_Const);


	inline jule::Bool _method_mod(_1ad6d5cec_Const);


	inline jule::Bool _method_bitwise_and(_1ad6d5cec_Const);


	inline jule::Bool _method_bitwise_or(_1ad6d5cec_Const);


	inline jule::Bool _method_xor(_1ad6d5cec_Const);


	inline jule::Bool _method_lshift(_1ad6d5cec_Const);


	inline jule::Bool _method_rshift(_1ad6d5cec_Const);


	inline bool operator==(const _1ad6d5cec_Const &_Src) const {
		return 
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1ad6d5cec_Const &_Src) const { return !this->operator==(_Src); }
};



struct _1ab064271_Field {
	jule::Ref<_1ab064271_Field> self{};

	jule::Ref<_1ab064271_Struct> _field_owner{jule::Ref<_1ab064271_Struct>()};
	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1ad3e617d_TypeSymbol> _field_kind{jule::Ref<_1ad3e617d_TypeSymbol>()};


	_1ab064271_Field(jule::Ref<_1ab064271_Struct> __param_owner, _1ab0277b7_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1ad3e617d_TypeSymbol> __param_kind) {
		this->self = jule::Ref<_1ab064271_Field>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_1ab064271_Field(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab064271_Field(void) { this->self = jule::Ref<_1ab064271_Field>::make(this, nullptr); }

	inline jule::Ref<_1ab064271_FieldIns> _method_instance(void);


	inline bool operator==(const _1ab064271_Field &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ab064271_Field &_Src) const { return !this->operator==(_Src); }
};


struct _1ab064271_Struct {
	jule::Ref<_1ab064271_Struct> self{};

	jule::Ref<_1ac7ccb09_Sema> _field_sema{jule::Ref<_1ac7ccb09_Sema>()};
	jule::Slice<jule::Ref<_1ab064271_Struct>> _field_depends{jule::Slice<jule::Ref<_1ab064271_Struct>>()};
	jule::Slice<jule::Ref<_1ab064271_Struct>> _field_uses{jule::Slice<jule::Ref<_1ab064271_Struct>>()};
	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1ab064271_Field>> _field_fields{jule::Slice<jule::Ref<_1ab064271_Field>>()};
	jule::Slice<jule::Ref<_1ab07a50c_Fn>> _field_methods{jule::Slice<jule::Ref<_1ab07a50c_Fn>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1aaeea1c4_Directive>> _field_directives{jule::Slice<jule::Ref<_1aaeea1c4_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>()};
	jule::Slice<jule::Ref<_1ac276c57_Trait>> _field_implements{jule::Slice<jule::Ref<_1ac276c57_Trait>>()};
	jule::Slice<jule::Ref<_1ab064271_StructIns>> _field_instances{jule::Slice<jule::Ref<_1ab064271_StructIns>>()};


	_1ab064271_Struct(jule::Ref<_1ac7ccb09_Sema> __param_sema, jule::Slice<jule::Ref<_1ab064271_Struct>> __param_depends, jule::Slice<jule::Ref<_1ab064271_Struct>> __param_uses, _1ab0277b7_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_1ab064271_Field>> __param_fields, jule::Slice<jule::Ref<_1ab07a50c_Fn>> __param_methods, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1aaeea1c4_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> __param_generics, jule::Slice<jule::Ref<_1ac276c57_Trait>> __param_implements, jule::Slice<jule::Ref<_1ab064271_StructIns>> __param_instances) {
		this->self = jule::Ref<_1ab064271_Struct>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_depends = __param_depends;
		this->_field_uses = __param_uses;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_generics = __param_generics;
		this->_field_implements = __param_implements;
		this->_field_instances = __param_instances;
	}

	~_1ab064271_Struct(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab064271_Struct(void) { this->self = jule::Ref<_1ab064271_Struct>::make(this, nullptr); }

	inline jule::Ref<_1ab064271_StructIns> _method_instance(void);


	inline jule::Ref<_1ab064271_StructIns> _method_append_instance(jule::Ref<_1ab064271_StructIns>);


	inline jule::Ref<_1ab07a50c_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_1ab064271_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ref<_1ac276c57_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ref<_1ab064271_Struct>);


	inline bool operator==(const _1ab064271_Struct &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _1ab064271_Struct &_Src) const { return !this->operator==(_Src); }
};


struct _1ab064271_FieldIns {
	jule::Ref<_1ab064271_FieldIns> self{};

	jule::Ref<_1ab064271_Field> _field_decl{jule::Ref<_1ab064271_Field>()};
	jule::Ref<_1ad3e617d_TypeKind> _field_kind{jule::Ref<_1ad3e617d_TypeKind>()};


	_1ab064271_FieldIns(jule::Ref<_1ab064271_Field> __param_decl, jule::Ref<_1ad3e617d_TypeKind> __param_kind) {
		this->self = jule::Ref<_1ab064271_FieldIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_1ab064271_FieldIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab064271_FieldIns(void) { this->self = jule::Ref<_1ab064271_FieldIns>::make(this, nullptr); }

	inline bool operator==(const _1ab064271_FieldIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ab064271_FieldIns &_Src) const { return !this->operator==(_Src); }
};


struct _1ab064271_StructIns: public _1ad3e617d_Kind {
	jule::Ref<_1ab064271_StructIns> self{};

	jule::Bool _field_checked{jule::Bool()};
	jule::Ref<_1ab064271_Struct> _field_decl{jule::Ref<_1ab064271_Struct>()};
	jule::Slice<jule::Ref<_1ad3e617d_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>()};
	jule::Slice<jule::Ref<_1ab064271_FieldIns>> _field_fields{jule::Slice<jule::Ref<_1ab064271_FieldIns>>()};
	jule::Slice<jule::Ref<_1ab07a50c_Fn>> _field_methods{jule::Slice<jule::Ref<_1ab07a50c_Fn>>()};
	jule::Bool _field_has_mut{jule::Bool()};
	jule::Ref<_1ac699a1a_ReferenceStack> _field_references{jule::Ref<_1ac699a1a_ReferenceStack>()};


	_1ab064271_StructIns(jule::Bool __param_checked, jule::Ref<_1ab064271_Struct> __param_decl, jule::Slice<jule::Ref<_1ad3e617d_TypeKind>> __param_generics, jule::Slice<jule::Ref<_1ab064271_FieldIns>> __param_fields, jule::Slice<jule::Ref<_1ab07a50c_Fn>> __param_methods, jule::Bool __param_has_mut, jule::Ref<_1ac699a1a_ReferenceStack> __param_references) {
		this->self = jule::Ref<_1ab064271_StructIns>::make(this, nullptr);

		this->_field_checked = __param_checked;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_has_mut = __param_has_mut;
		this->_field_references = __param_references;
	}

	~_1ab064271_StructIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab064271_StructIns(void) { this->self = jule::Ref<_1ab064271_StructIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Ref<_1ab07a50c_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_1ab064271_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(const _1ab064271_StructIns &_Src) const {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_has_mut == _Src._field_has_mut &&
			this->_field_references == _Src._field_references;
	}

	inline bool operator!=(const _1ab064271_StructIns &_Src) const { return !this->operator==(_Src); }
};


struct _1ab07a50c_RetType {
	jule::Ref<_1ab07a50c_RetType> self{};

	jule::Ref<_1ad3e617d_TypeSymbol> _field_kind{jule::Ref<_1ad3e617d_TypeSymbol>()};
	jule::Slice<_1ab0277b7_Token> _field_idents{jule::Slice<_1ab0277b7_Token>()};


	_1ab07a50c_RetType(jule::Ref<_1ad3e617d_TypeSymbol> __param_kind, jule::Slice<_1ab0277b7_Token> __param_idents) {
		this->self = jule::Ref<_1ab07a50c_RetType>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_1ab07a50c_RetType(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab07a50c_RetType(void) { this->self = jule::Ref<_1ab07a50c_RetType>::make(this, nullptr); }

	inline bool operator==(const _1ab07a50c_RetType &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1ab07a50c_RetType &_Src) const { return !this->operator==(_Src); }
};


struct _1ab07a50c_Param {
	jule::Ref<_1ab07a50c_Param> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1ad3e617d_TypeSymbol> _field_kind{jule::Ref<_1ad3e617d_TypeSymbol>()};
	jule::Str _field_ident{jule::Str()};


	_1ab07a50c_Param(_1ab0277b7_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1ad3e617d_TypeSymbol> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_1ab07a50c_Param>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_1ab07a50c_Param(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab07a50c_Param(void) { this->self = jule::Ref<_1ab07a50c_Param>::make(this, nullptr); }

	inline jule::Ref<_1ab07a50c_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1ab07a50c_Param &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ab07a50c_Param &_Src) const { return !this->operator==(_Src); }
};


struct _1ab07a50c_Fn {
	jule::Ref<_1ab07a50c_Fn> self{};

	jule::Ref<_1ac7ccb09_Sema> _field_sema{jule::Ref<_1ac7ccb09_Sema>()};
	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1aaeea1c4_Directive>> _field_directives{jule::Slice<jule::Ref<_1aaeea1c4_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1aaeea1c4_ScopeTree> _field_scope{jule::Ref<_1aaeea1c4_ScopeTree>()};
	jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>()};
	jule::Ref<_1ab07a50c_RetType> _field_result{jule::Ref<_1ab07a50c_RetType>()};
	jule::Slice<jule::Ref<_1ab07a50c_Param>> _field_params{jule::Slice<jule::Ref<_1ab07a50c_Param>>()};
	jule::Ref<_1ab064271_Struct> _field_owner{jule::Ref<_1ab064271_Struct>()};
	jule::Slice<jule::Ref<_1ab07a50c_FnIns>> _field_instances{jule::Slice<jule::Ref<_1ab07a50c_FnIns>>()};


	_1ab07a50c_Fn(jule::Ref<_1ac7ccb09_Sema> __param_sema, _1ab0277b7_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1aaeea1c4_Directive>> __param_directives, jule::Str __param_doc, jule::Ref<_1aaeea1c4_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> __param_generics, jule::Ref<_1ab07a50c_RetType> __param_result, jule::Slice<jule::Ref<_1ab07a50c_Param>> __param_params, jule::Ref<_1ab064271_Struct> __param_owner, jule::Slice<jule::Ref<_1ab07a50c_FnIns>> __param_instances) {
		this->self = jule::Ref<_1ab07a50c_Fn>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
		this->_field_owner = __param_owner;
		this->_field_instances = __param_instances;
	}

	~_1ab07a50c_Fn(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab07a50c_Fn(void) { this->self = jule::Ref<_1ab07a50c_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ref<_1ab07a50c_FnIns> _method_instance_force(void);


	inline jule::Ref<_1ab07a50c_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ref<_1ab07a50c_FnIns>);


	inline bool operator==(const _1ab07a50c_Fn &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _1ab07a50c_Fn &_Src) const { return !this->operator==(_Src); }
};


struct _1ab07a50c_ParamIns {
	jule::Ref<_1ab07a50c_ParamIns> self{};

	jule::Ref<_1ab07a50c_Param> _field_decl{jule::Ref<_1ab07a50c_Param>()};
	jule::Ref<_1ad3e617d_TypeKind> _field_kind{jule::Ref<_1ad3e617d_TypeKind>()};


	_1ab07a50c_ParamIns(jule::Ref<_1ab07a50c_Param> __param_decl, jule::Ref<_1ad3e617d_TypeKind> __param_kind) {
		this->self = jule::Ref<_1ab07a50c_ParamIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_1ab07a50c_ParamIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab07a50c_ParamIns(void) { this->self = jule::Ref<_1ab07a50c_ParamIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline bool operator==(const _1ab07a50c_ParamIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ab07a50c_ParamIns &_Src) const { return !this->operator==(_Src); }
};


struct _1ab07a50c_FnIns: public _1ad3e617d_Kind {
	jule::Ref<_1ab07a50c_FnIns> self{};

	jule::Ref<_1ab064271_StructIns> _field_owner{jule::Ref<_1ab064271_StructIns>()};
	jule::Ref<_1ab07a50c_Fn> _field_decl{jule::Ref<_1ab07a50c_Fn>()};
	jule::Slice<jule::Ref<_1ad3e617d_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>()};
	jule::Slice<jule::Ref<_1ab07a50c_ParamIns>> _field_params{jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>()};
	jule::Ref<_1ad3e617d_TypeKind> _field_result{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Ref<_1ac77dd1e_Scope> _field_scope{jule::Ref<_1ac77dd1e_Scope>()};
	jule::Ref<_1ac699a1a_ReferenceStack> _field_references{jule::Ref<_1ac699a1a_ReferenceStack>()};
	jule::Ref<_1ac699a1a_ReferenceStack> _field_refers{jule::Ref<_1ac699a1a_ReferenceStack>()};
	jule::Fn<jule::Ref<_1acde49c3_Data>(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>)> _field_caller{jule::Fn<jule::Ref<_1acde49c3_Data>(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>)>()};
	jule::Bool _field_reloaded{jule::Bool()};
	jule::Bool _field_anon{jule::Bool()};


	_1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns> __param_owner, jule::Ref<_1ab07a50c_Fn> __param_decl, jule::Slice<jule::Ref<_1ad3e617d_TypeKind>> __param_generics, jule::Slice<jule::Ref<_1ab07a50c_ParamIns>> __param_params, jule::Ref<_1ad3e617d_TypeKind> __param_result, jule::Ref<_1ac77dd1e_Scope> __param_scope, jule::Ref<_1ac699a1a_ReferenceStack> __param_references, jule::Ref<_1ac699a1a_ReferenceStack> __param_refers, jule::Fn<jule::Ref<_1acde49c3_Data>(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>)> __param_caller, jule::Bool __param_reloaded, jule::Bool __param_anon) {
		this->self = jule::Ref<_1ab07a50c_FnIns>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_params = __param_params;
		this->_field_result = __param_result;
		this->_field_scope = __param_scope;
		this->_field_references = __param_references;
		this->_field_refers = __param_refers;
		this->_field_caller = __param_caller;
		this->_field_reloaded = __param_reloaded;
		this->_field_anon = __param_anon;
	}

	~_1ab07a50c_FnIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab07a50c_FnIns(void) { this->self = jule::Ref<_1ab07a50c_FnIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Str _method_get_kind_str(jule::Bool);


	inline bool operator==(const _1ab07a50c_FnIns &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_references == _Src._field_references &&
			this->_field_refers == _Src._field_refers &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded &&
			this->_field_anon == _Src._field_anon;
	}

	inline bool operator!=(const _1ab07a50c_FnIns &_Src) const { return !this->operator==(_Src); }
};


struct _1ac699a1a_ReferenceStack {
	jule::Ref<_1ac699a1a_ReferenceStack> self{};

	jule::Slice<jule::Any> _field_buffer{jule::Slice<jule::Any>()};


	_1ac699a1a_ReferenceStack(jule::Slice<jule::Any> __param_buffer) {
		this->self = jule::Ref<_1ac699a1a_ReferenceStack>::make(this, nullptr);

		this->_field_buffer = __param_buffer;
	}

	~_1ac699a1a_ReferenceStack(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac699a1a_ReferenceStack(void) { this->self = jule::Ref<_1ac699a1a_ReferenceStack>::make(this, nullptr); }

	static inline jule::Ref<_1ac699a1a_ReferenceStack> _static_method_new(void);


	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline jule::Bool _method_exist_0(jule::Ref<_1aca3647d_Var>);
	inline jule::Bool _method_exist_1(jule::Ref<_1ab07a50c_FnIns>);
	inline jule::Bool _method_exist_2(jule::Ref<_1ab064271_StructIns>);


	inline bool operator==(const _1ac699a1a_ReferenceStack &_Src) const {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	inline bool operator!=(const _1ac699a1a_ReferenceStack &_Src) const { return !this->operator==(_Src); }
};


struct _1ac699a1a_Pass {
	jule::Ref<_1ac699a1a_Pass> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_text{jule::Str()};


	_1ac699a1a_Pass(_1ab0277b7_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_1ac699a1a_Pass>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_1ac699a1a_Pass(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac699a1a_Pass(void) { this->self = jule::Ref<_1ac699a1a_Pass>::make(this, nullptr); }

	inline bool operator==(const _1ac699a1a_Pass &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1ac699a1a_Pass &_Src) const { return !this->operator==(_Src); }
};


struct _1ac699a1a_SymbolBuilder {
	jule::Ref<_1ac699a1a_SymbolBuilder> self{};

	jule::Ref<_1ac699a1a_SymbolBuilder> _field_owner{jule::Ref<_1ac699a1a_SymbolBuilder>()};
	jule::Trait<_1ac78be4d_Importer> _field_importer{jule::Trait<_1ac78be4d_Importer>()};
	jule::Slice<_1d068165a_Log> _field_errors{jule::Slice<_1d068165a_Log>()};
	jule::Ref<_1ab026d8d_Ast> _field_ast{jule::Ref<_1ab026d8d_Ast>()};
	jule::Ref<_1acd9639d_SymbolTable> _field_table{jule::Ref<_1acd9639d_SymbolTable>()};


	_1ac699a1a_SymbolBuilder(jule::Ref<_1ac699a1a_SymbolBuilder> __param_owner, jule::Trait<_1ac78be4d_Importer> __param_importer, jule::Slice<_1d068165a_Log> __param_errors, jule::Ref<_1ab026d8d_Ast> __param_ast, jule::Ref<_1acd9639d_SymbolTable> __param_table) {
		this->self = jule::Ref<_1ac699a1a_SymbolBuilder>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_importer = __param_importer;
		this->_field_errors = __param_errors;
		this->_field_ast = __param_ast;
		this->_field_table = __param_table;
	}

	~_1ac699a1a_SymbolBuilder(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac699a1a_SymbolBuilder(void) { this->self = jule::Ref<_1ac699a1a_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ref<_1ac699a1a_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_1ab0277b7_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_text(_1ab0277b7_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ref<_1aaeea1c4_UseDecl>);


	inline jule::Ref<_1ac78be4d_ImportInfo> _method_build_cpp_header_import(jule::Ref<_1aaeea1c4_UseDecl>);


	inline jule::Ref<_1ac78be4d_ImportInfo> _method_build_std_import(jule::Ref<_1aaeea1c4_UseDecl>);


	inline jule::Ref<_1ac78be4d_ImportInfo> _method_build_ident_import(jule::Ref<_1aaeea1c4_UseDecl>);


	inline jule::Ref<_1ac78be4d_ImportInfo> _method_build_import(jule::Ref<_1aaeea1c4_UseDecl>);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ref<_1ac78be4d_ImportInfo>);


	inline void _method_impl_import_selections(jule::Ref<_1ac78be4d_ImportInfo>,jule::Ref<_1aaeea1c4_UseDecl>);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cycle_error(jule::Ref<_1ac699a1a_SymbolBuilder>,jule::Str,jule::Str&);


	inline void _method_push_cross_cycle_error(jule::Ref<_1ac699a1a_SymbolBuilder>,jule::Ref<_1ac78be4d_ImportInfo>,_1ab0277b7_Token);


	inline jule::Bool _method_check_import_cycles(jule::Ref<_1ac78be4d_ImportInfo>,jule::Ref<_1aaeea1c4_UseDecl>);


	inline jule::Bool _method_import_package(jule::Ref<_1ac78be4d_ImportInfo>&,jule::Ref<_1aaeea1c4_UseDecl>);


	inline jule::Ref<_1ac78be4d_ImportInfo> _method_import_use_decl(jule::Ref<_1aaeea1c4_UseDecl>);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_1aaeea1c4_Node);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ref<_1aaeea1c4_Directive>);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(const _1ac699a1a_SymbolBuilder &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	inline bool operator!=(const _1ac699a1a_SymbolBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1ac276c57_Trait: public _1ad3e617d_Kind {
	jule::Ref<_1ac276c57_Trait> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_1ab07a50c_Fn>> _field_methods{jule::Slice<jule::Ref<_1ab07a50c_Fn>>()};
	jule::Slice<jule::Ref<_1ab064271_Struct>> _field_implemented{jule::Slice<jule::Ref<_1ab064271_Struct>>()};


	_1ac276c57_Trait(_1ab0277b7_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Str __param_doc, jule::Slice<jule::Ref<_1ab07a50c_Fn>> __param_methods, jule::Slice<jule::Ref<_1ab064271_Struct>> __param_implemented) {
		this->self = jule::Ref<_1ac276c57_Trait>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_doc = __param_doc;
		this->_field_methods = __param_methods;
		this->_field_implemented = __param_implemented;
	}

	~_1ac276c57_Trait(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac276c57_Trait(void) { this->self = jule::Ref<_1ac276c57_Trait>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ref<_1ab07a50c_Fn> _method_find_method(jule::Str);


	inline bool operator==(const _1ac276c57_Trait &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	inline bool operator!=(const _1ac276c57_Trait &_Src) const { return !this->operator==(_Src); }
};


struct _1ac7804a2_EnumItem {
	jule::Ref<_1ac7804a2_EnumItem> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1acde49c3_Value> _field_value{jule::Ref<_1acde49c3_Value>()};


	_1ac7804a2_EnumItem(_1ab0277b7_Token __param_token, jule::Str __param_ident, jule::Ref<_1acde49c3_Value> __param_value) {
		this->self = jule::Ref<_1ac7804a2_EnumItem>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_value = __param_value;
	}

	~_1ac7804a2_EnumItem(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac7804a2_EnumItem(void) { this->self = jule::Ref<_1ac7804a2_EnumItem>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1ac7804a2_EnumItem &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1ac7804a2_EnumItem &_Src) const { return !this->operator==(_Src); }
};


struct _1ac7804a2_Enum: public _1ad3e617d_Kind {
	jule::Ref<_1ac7804a2_Enum> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1ad3e617d_TypeSymbol> _field_kind{jule::Ref<_1ad3e617d_TypeSymbol>()};
	jule::Slice<jule::Ref<_1ac7804a2_EnumItem>> _field_items{jule::Slice<jule::Ref<_1ac7804a2_EnumItem>>()};
	jule::Str _field_doc{jule::Str()};


	_1ac7804a2_Enum(_1ab0277b7_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1ad3e617d_TypeSymbol> __param_kind, jule::Slice<jule::Ref<_1ac7804a2_EnumItem>> __param_items, jule::Str __param_doc) {
		this->self = jule::Ref<_1ac7804a2_Enum>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc = __param_doc;
	}

	~_1ac7804a2_Enum(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac7804a2_Enum(void) { this->self = jule::Ref<_1ac7804a2_Enum>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Ref<_1ac7804a2_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(const _1ac7804a2_Enum &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	inline bool operator!=(const _1ac7804a2_Enum &_Src) const { return !this->operator==(_Src); }
};


struct _1ac780837_Impl {
	jule::Ref<_1ac780837_Impl> self{};

	_1ab0277b7_Token _field_base{_1ab0277b7_Token()};
	_1ab0277b7_Token _field_dest{_1ab0277b7_Token()};
	jule::Slice<jule::Ref<_1ab07a50c_Fn>> _field_methods{jule::Slice<jule::Ref<_1ab07a50c_Fn>>()};


	_1ac780837_Impl(_1ab0277b7_Token __param_base, _1ab0277b7_Token __param_dest, jule::Slice<jule::Ref<_1ab07a50c_Fn>> __param_methods) {
		this->self = jule::Ref<_1ac780837_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_1ac780837_Impl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac780837_Impl(void) { this->self = jule::Ref<_1ac780837_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1ac780837_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1ac780837_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_Scope {
	jule::Ref<_1ac77dd1e_Scope> self{};

	jule::Ref<_1ac77dd1e_Scope> _field_parent{jule::Ref<_1ac77dd1e_Scope>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_1ac77dd1e_Scope(jule::Ref<_1ac77dd1e_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts) {
		this->self = jule::Ref<_1ac77dd1e_Scope>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_1ac77dd1e_Scope(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_Scope(void) { this->self = jule::Ref<_1ac77dd1e_Scope>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_Scope &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1ac77dd1e_Scope &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_If {
	jule::Ref<_1ac77dd1e_If> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1ac77dd1e_Scope> _field_scope{jule::Ref<_1ac77dd1e_Scope>()};


	_1ac77dd1e_If(jule::Any __param_expr, jule::Ref<_1ac77dd1e_Scope> __param_scope) {
		this->self = jule::Ref<_1ac77dd1e_If>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_1ac77dd1e_If(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_If(void) { this->self = jule::Ref<_1ac77dd1e_If>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_If &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1ac77dd1e_If &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_Else {
	jule::Ref<_1ac77dd1e_Else> self{};

	jule::Ref<_1ac77dd1e_Scope> _field_scope{jule::Ref<_1ac77dd1e_Scope>()};


	_1ac77dd1e_Else(jule::Ref<_1ac77dd1e_Scope> __param_scope) {
		this->self = jule::Ref<_1ac77dd1e_Else>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_1ac77dd1e_Else(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_Else(void) { this->self = jule::Ref<_1ac77dd1e_Else>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_Else &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1ac77dd1e_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_Conditional {
	jule::Ref<_1ac77dd1e_Conditional> self{};

	jule::Slice<jule::Ref<_1ac77dd1e_If>> _field_elifs{jule::Slice<jule::Ref<_1ac77dd1e_If>>()};
	jule::Ref<_1ac77dd1e_Else> _field_default{jule::Ref<_1ac77dd1e_Else>()};


	_1ac77dd1e_Conditional(jule::Slice<jule::Ref<_1ac77dd1e_If>> __param_elifs, jule::Ref<_1ac77dd1e_Else> __param_default) {
		this->self = jule::Ref<_1ac77dd1e_Conditional>::make(this, nullptr);

		this->_field_elifs = __param_elifs;
		this->_field_default = __param_default;
	}

	~_1ac77dd1e_Conditional(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_Conditional(void) { this->self = jule::Ref<_1ac77dd1e_Conditional>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_Conditional &_Src) const {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1ac77dd1e_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_InfIter {
	jule::Ref<_1ac77dd1e_InfIter> self{};

	jule::Ref<_1ac77dd1e_Scope> _field_scope{jule::Ref<_1ac77dd1e_Scope>()};


	_1ac77dd1e_InfIter(jule::Ref<_1ac77dd1e_Scope> __param_scope) {
		this->self = jule::Ref<_1ac77dd1e_InfIter>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_1ac77dd1e_InfIter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_InfIter(void) { this->self = jule::Ref<_1ac77dd1e_InfIter>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_InfIter &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1ac77dd1e_InfIter &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_WhileIter {
	jule::Ref<_1ac77dd1e_WhileIter> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_next{jule::Any()};
	jule::Ref<_1ac77dd1e_Scope> _field_scope{jule::Ref<_1ac77dd1e_Scope>()};


	_1ac77dd1e_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ref<_1ac77dd1e_Scope> __param_scope) {
		this->self = jule::Ref<_1ac77dd1e_WhileIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_scope = __param_scope;
	}

	~_1ac77dd1e_WhileIter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_WhileIter(void) { this->self = jule::Ref<_1ac77dd1e_WhileIter>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1ac77dd1e_WhileIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1ac77dd1e_WhileIter &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_RangeIter {
	jule::Ref<_1ac77dd1e_RangeIter> self{};

	jule::Ref<_1acde49c3_Data> _field_expr{jule::Ref<_1acde49c3_Data>()};
	jule::Ref<_1ac77dd1e_Scope> _field_scope{jule::Ref<_1ac77dd1e_Scope>()};
	jule::Ref<_1aca3647d_Var> _field_key_a{jule::Ref<_1aca3647d_Var>()};
	jule::Ref<_1aca3647d_Var> _field_key_b{jule::Ref<_1aca3647d_Var>()};


	_1ac77dd1e_RangeIter(jule::Ref<_1acde49c3_Data> __param_expr, jule::Ref<_1ac77dd1e_Scope> __param_scope, jule::Ref<_1aca3647d_Var> __param_key_a, jule::Ref<_1aca3647d_Var> __param_key_b) {
		this->self = jule::Ref<_1ac77dd1e_RangeIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_1ac77dd1e_RangeIter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_RangeIter(void) { this->self = jule::Ref<_1ac77dd1e_RangeIter>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_RangeIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1ac77dd1e_RangeIter &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_ContSt {
	jule::Ref<_1ac77dd1e_ContSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};


	_1ac77dd1e_ContSt(jule::Uintptr __param_it) {
		this->self = jule::Ref<_1ac77dd1e_ContSt>::make(this, nullptr);

		this->_field_it = __param_it;
	}

	~_1ac77dd1e_ContSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_ContSt(void) { this->self = jule::Ref<_1ac77dd1e_ContSt>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_ContSt &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _1ac77dd1e_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_BreakSt {
	jule::Ref<_1ac77dd1e_BreakSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_mtch{jule::Uintptr()};


	_1ac77dd1e_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch) {
		this->self = jule::Ref<_1ac77dd1e_BreakSt>::make(this, nullptr);

		this->_field_it = __param_it;
		this->_field_mtch = __param_mtch;
	}

	~_1ac77dd1e_BreakSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_BreakSt(void) { this->self = jule::Ref<_1ac77dd1e_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_BreakSt &_Src) const {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	inline bool operator!=(const _1ac77dd1e_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_Label {
	jule::Ref<_1ac77dd1e_Label> self{};

	jule::Str _field_ident{jule::Str()};


	_1ac77dd1e_Label(jule::Str __param_ident) {
		this->self = jule::Ref<_1ac77dd1e_Label>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_1ac77dd1e_Label(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_Label(void) { this->self = jule::Ref<_1ac77dd1e_Label>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_Label &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ac77dd1e_Label &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_GotoSt {
	jule::Ref<_1ac77dd1e_GotoSt> self{};

	jule::Str _field_ident{jule::Str()};


	_1ac77dd1e_GotoSt(jule::Str __param_ident) {
		this->self = jule::Ref<_1ac77dd1e_GotoSt>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_1ac77dd1e_GotoSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_GotoSt(void) { this->self = jule::Ref<_1ac77dd1e_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_GotoSt &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ac77dd1e_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_Postfix {
	jule::Ref<_1ac77dd1e_Postfix> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1ac77dd1e_Postfix(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_1ac77dd1e_Postfix>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_1ac77dd1e_Postfix(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_Postfix(void) { this->self = jule::Ref<_1ac77dd1e_Postfix>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_Postfix &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1ac77dd1e_Postfix &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_Assign {
	jule::Ref<_1ac77dd1e_Assign> self{};

	jule::Any _field_l{jule::Any()};
	jule::Any _field_r{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1ac77dd1e_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op) {
		this->self = jule::Ref<_1ac77dd1e_Assign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_1ac77dd1e_Assign(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_Assign(void) { this->self = jule::Ref<_1ac77dd1e_Assign>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_Assign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1ac77dd1e_Assign &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_MultiAssign {
	jule::Ref<_1ac77dd1e_MultiAssign> self{};

	jule::Slice<jule::Any> _field_l{jule::Slice<jule::Any>()};
	jule::Any _field_r{jule::Any()};


	_1ac77dd1e_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r) {
		this->self = jule::Ref<_1ac77dd1e_MultiAssign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
	}

	~_1ac77dd1e_MultiAssign(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_MultiAssign(void) { this->self = jule::Ref<_1ac77dd1e_MultiAssign>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_MultiAssign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	inline bool operator!=(const _1ac77dd1e_MultiAssign &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_Match {
	jule::Ref<_1ac77dd1e_Match> self{};

	jule::Ref<_1acde49c3_Data> _field_expr{jule::Ref<_1acde49c3_Data>()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Slice<jule::Ref<_1ac77dd1e_Case>> _field_cases{jule::Slice<jule::Ref<_1ac77dd1e_Case>>()};
	jule::Ref<_1ac77dd1e_Case> _field_default{jule::Ref<_1ac77dd1e_Case>()};


	_1ac77dd1e_Match(jule::Ref<_1acde49c3_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ref<_1ac77dd1e_Case>> __param_cases, jule::Ref<_1ac77dd1e_Case> __param_default) {
		this->self = jule::Ref<_1ac77dd1e_Match>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_type_match = __param_type_match;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_1ac77dd1e_Match(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_Match(void) { this->self = jule::Ref<_1ac77dd1e_Match>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_Match &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1ac77dd1e_Match &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_Case {
	jule::Ref<_1ac77dd1e_Case> self{};

	jule::Ref<_1ac77dd1e_Match> _field_owner{jule::Ref<_1ac77dd1e_Match>()};
	jule::Ref<_1ac77dd1e_Scope> _field_scope{jule::Ref<_1ac77dd1e_Scope>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};
	jule::Ref<_1ac77dd1e_Case> _field_next{jule::Ref<_1ac77dd1e_Case>()};


	_1ac77dd1e_Case(jule::Ref<_1ac77dd1e_Match> __param_owner, jule::Ref<_1ac77dd1e_Scope> __param_scope, jule::Slice<jule::Any> __param_exprs, jule::Ref<_1ac77dd1e_Case> __param_next) {
		this->self = jule::Ref<_1ac77dd1e_Case>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
		this->_field_next = __param_next;
	}

	~_1ac77dd1e_Case(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_Case(void) { this->self = jule::Ref<_1ac77dd1e_Case>::make(this, nullptr); }

	inline jule::Bool _method_is_default(void);


	inline bool operator==(const _1ac77dd1e_Case &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	inline bool operator!=(const _1ac77dd1e_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_FallSt {
	jule::Ref<_1ac77dd1e_FallSt> self{};

	jule::Uintptr _field_dest_case{jule::Uintptr()};


	_1ac77dd1e_FallSt(jule::Uintptr __param_dest_case) {
		this->self = jule::Ref<_1ac77dd1e_FallSt>::make(this, nullptr);

		this->_field_dest_case = __param_dest_case;
	}

	~_1ac77dd1e_FallSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_FallSt(void) { this->self = jule::Ref<_1ac77dd1e_FallSt>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_FallSt &_Src) const {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	inline bool operator!=(const _1ac77dd1e_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_RetSt {
	jule::Ref<_1ac77dd1e_RetSt> self{};

	jule::Slice<jule::Ref<_1aca3647d_Var>> _field_vars{jule::Slice<jule::Ref<_1aca3647d_Var>>()};
	jule::Any _field_expr{jule::Any()};


	_1ac77dd1e_RetSt(jule::Slice<jule::Ref<_1aca3647d_Var>> __param_vars, jule::Any __param_expr) {
		this->self = jule::Ref<_1ac77dd1e_RetSt>::make(this, nullptr);

		this->_field_vars = __param_vars;
		this->_field_expr = __param_expr;
	}

	~_1ac77dd1e_RetSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_RetSt(void) { this->self = jule::Ref<_1ac77dd1e_RetSt>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_RetSt &_Src) const {
		return 
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ac77dd1e_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_Recover {
	jule::Ref<_1ac77dd1e_Recover> self{};

	jule::Ref<_1ab07a50c_FnIns> _field_handler{jule::Ref<_1ab07a50c_FnIns>()};
	jule::Any _field_handler_expr{jule::Any()};
	jule::Ref<_1ac77dd1e_Scope> _field_scope{jule::Ref<_1ac77dd1e_Scope>()};
	jule::Ref<_1ab07a50c_FnIns> _field_scope_owner{jule::Ref<_1ab07a50c_FnIns>()};


	_1ac77dd1e_Recover(jule::Ref<_1ab07a50c_FnIns> __param_handler, jule::Any __param_handler_expr, jule::Ref<_1ac77dd1e_Scope> __param_scope, jule::Ref<_1ab07a50c_FnIns> __param_scope_owner) {
		this->self = jule::Ref<_1ac77dd1e_Recover>::make(this, nullptr);

		this->_field_handler = __param_handler;
		this->_field_handler_expr = __param_handler_expr;
		this->_field_scope = __param_scope;
		this->_field_scope_owner = __param_scope_owner;
	}

	~_1ac77dd1e_Recover(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_Recover(void) { this->self = jule::Ref<_1ac77dd1e_Recover>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_Recover &_Src) const {
		return 
			this->_field_handler == _Src._field_handler &&
			this->_field_handler_expr == _Src._field_handler_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_scope_owner == _Src._field_scope_owner;
	}

	inline bool operator!=(const _1ac77dd1e_Recover &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_ScopeLabel {
	jule::Ref<_1ac77dd1e_ScopeLabel> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Ref<_1ac77dd1e_Label> _field_label{jule::Ref<_1ac77dd1e_Label>()};
	jule::Int _field_pos{jule::Int()};
	jule::Ref<_1ac77dd1e_ScopeChecker> _field_scope{jule::Ref<_1ac77dd1e_ScopeChecker>()};
	jule::Bool _field_used{jule::Bool()};


	_1ac77dd1e_ScopeLabel(_1ab0277b7_Token __param_token, jule::Ref<_1ac77dd1e_Label> __param_label, jule::Int __param_pos, jule::Ref<_1ac77dd1e_ScopeChecker> __param_scope, jule::Bool __param_used) {
		this->self = jule::Ref<_1ac77dd1e_ScopeLabel>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
		this->_field_pos = __param_pos;
		this->_field_scope = __param_scope;
		this->_field_used = __param_used;
	}

	~_1ac77dd1e_ScopeLabel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_ScopeLabel(void) { this->self = jule::Ref<_1ac77dd1e_ScopeLabel>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_ScopeLabel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _1ac77dd1e_ScopeLabel &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_ScopeGoto {
	jule::Ref<_1ac77dd1e_ScopeGoto> self{};

	jule::Ref<_1aaeea1c4_GotoSt> _field_gt{jule::Ref<_1aaeea1c4_GotoSt>()};
	jule::Ref<_1ac77dd1e_ScopeChecker> _field_scope{jule::Ref<_1ac77dd1e_ScopeChecker>()};
	jule::Int _field_pos{jule::Int()};


	_1ac77dd1e_ScopeGoto(jule::Ref<_1aaeea1c4_GotoSt> __param_gt, jule::Ref<_1ac77dd1e_ScopeChecker> __param_scope, jule::Int __param_pos) {
		this->self = jule::Ref<_1ac77dd1e_ScopeGoto>::make(this, nullptr);

		this->_field_gt = __param_gt;
		this->_field_scope = __param_scope;
		this->_field_pos = __param_pos;
	}

	~_1ac77dd1e_ScopeGoto(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_ScopeGoto(void) { this->self = jule::Ref<_1ac77dd1e_ScopeGoto>::make(this, nullptr); }

	inline bool operator==(const _1ac77dd1e_ScopeGoto &_Src) const {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1ac77dd1e_ScopeGoto &_Src) const { return !this->operator==(_Src); }
};


struct _1ac77dd1e_ScopeChecker: public _1acde4cc0_Lookup {
	jule::Ref<_1ac77dd1e_ScopeChecker> self{};

	jule::Ref<_1ac7ccb09_Sema> _field_s{jule::Ref<_1ac7ccb09_Sema>()};
	jule::Ref<_1ab07a50c_FnIns> _field_owner{jule::Ref<_1ab07a50c_FnIns>()};
	jule::Ref<_1ac77dd1e_ScopeChecker> _field_parent{jule::Ref<_1ac77dd1e_ScopeChecker>()};
	jule::Int _field_child_index{jule::Int()};
	jule::Ref<_1acd9639d_SymbolTable> _field_table{jule::Ref<_1acd9639d_SymbolTable>()};
	jule::Ref<_1ac77dd1e_Scope> _field_scope{jule::Ref<_1ac77dd1e_Scope>()};
	jule::Ref<_1aaeea1c4_ScopeTree> _field_tree{jule::Ref<_1aaeea1c4_ScopeTree>()};
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_cse{jule::Uintptr()};
	jule::Ref<jule::Slice<jule::Ref<_1ac77dd1e_ScopeLabel>>> _field_labels{jule::Ref<jule::Slice<jule::Ref<_1ac77dd1e_ScopeLabel>>>()};
	jule::Ref<jule::Slice<jule::Ref<_1ac77dd1e_ScopeGoto>>> _field_gotos{jule::Ref<jule::Slice<jule::Ref<_1ac77dd1e_ScopeGoto>>>()};
	jule::Int _field_i{jule::Int()};


	_1ac77dd1e_ScopeChecker(jule::Ref<_1ac7ccb09_Sema> __param_s, jule::Ref<_1ab07a50c_FnIns> __param_owner, jule::Ref<_1ac77dd1e_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ref<_1acd9639d_SymbolTable> __param_table, jule::Ref<_1ac77dd1e_Scope> __param_scope, jule::Ref<_1aaeea1c4_ScopeTree> __param_tree, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ref<jule::Slice<jule::Ref<_1ac77dd1e_ScopeLabel>>> __param_labels, jule::Ref<jule::Slice<jule::Ref<_1ac77dd1e_ScopeGoto>>> __param_gotos, jule::Int __param_i) {
		this->self = jule::Ref<_1ac77dd1e_ScopeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_owner = __param_owner;
		this->_field_parent = __param_parent;
		this->_field_child_index = __param_child_index;
		this->_field_table = __param_table;
		this->_field_scope = __param_scope;
		this->_field_tree = __param_tree;
		this->_field_it = __param_it;
		this->_field_cse = __param_cse;
		this->_field_labels = __param_labels;
		this->_field_gotos = __param_gotos;
		this->_field_i = __param_i;
	}

	~_1ac77dd1e_ScopeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac77dd1e_ScopeChecker(void) { this->self = jule::Ref<_1ac77dd1e_ScopeChecker>::make(this, nullptr); }

	inline jule::Ref<_1ac78be4d_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1ac78be4d_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)>);


	inline jule::Ref<_1aca3647d_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1ad3e617d_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1ab064271_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1ab07a50c_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1ac276c57_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1ac7804a2_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline jule::Ref<_1ac77dd1e_ScopeChecker> _method_get_root(void);


	inline jule::Ref<_1ac77dd1e_Label> _method_find_label(jule::Str);


	inline jule::Ref<_1ac77dd1e_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ref<_1ac77dd1e_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ref<_1aaeea1c4_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ref<_1aaeea1c4_TypeAliasDecl>);


	inline jule::Ref<_1ac77dd1e_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ref<_1aaeea1c4_ScopeTree>,jule::Ref<_1ac77dd1e_Scope>,jule::Ref<_1ac77dd1e_ScopeChecker>);


	inline jule::Ref<_1ac77dd1e_Scope> _method_check_child_sc(jule::Ref<_1aaeea1c4_ScopeTree>,jule::Ref<_1ac77dd1e_ScopeChecker>);


	inline jule::Ref<_1ac77dd1e_Scope> _method_check_child(jule::Ref<_1aaeea1c4_ScopeTree>);


	inline void _method_check_anon_scope(jule::Ref<_1aaeea1c4_ScopeTree>);


	inline jule::Bool _method_try_call_recover(jule::Ref<_1acde49c3_Data>);


	inline void _method_check_expr(jule::Ref<_1aaeea1c4_Expr>);


	inline jule::Ref<_1ac77dd1e_If> _method_check_if(jule::Ref<_1aaeea1c4_If>);


	inline jule::Ref<_1ac77dd1e_Else> _method_check_else(jule::Ref<_1aaeea1c4_Else>);


	inline void _method_check_conditional(jule::Ref<_1aaeea1c4_Conditional>);


	inline jule::Ref<_1ac77dd1e_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ref<_1aaeea1c4_ScopeTree>,jule::Ref<_1ac77dd1e_ScopeChecker>);


	inline jule::Ref<_1ac77dd1e_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ref<_1aaeea1c4_ScopeTree>);


	inline void _method_check_inf_iter(jule::Ref<_1aaeea1c4_Iter>);


	inline void _method_check_while_iter(jule::Ref<_1aaeea1c4_Iter>);


	inline void _method_check_range_iter(jule::Ref<_1aaeea1c4_Iter>);


	inline void _method_check_iter(jule::Ref<_1aaeea1c4_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ref<_1ac77dd1e_ContSt> _method_check_cont_valid_scope(jule::Ref<_1aaeea1c4_ContSt>);


	inline void _method_check_cont(jule::Ref<_1aaeea1c4_ContSt>);


	inline void _method_check_label(jule::Ref<_1aaeea1c4_LabelSt>);


	inline void _method_push_goto(jule::Ref<_1aaeea1c4_GotoSt>);


	inline void _method_check_postfix(jule::Ref<_1aaeea1c4_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline void _method_check_single_assign(jule::Ref<_1aaeea1c4_AssignSt>);


	inline void _method___process_end_part_of_multi_assign(jule::Ref<_1ac77dd1e_MultiAssign>,jule::Ref<_1aaeea1c4_AssignSt>,jule::Ref<_1aaeea1c4_AssignLeft>,jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>);


	inline void _method_check_ret_multi_assign(jule::Ref<_1aaeea1c4_AssignSt>);


	inline void _method_check_multi_assign(jule::Ref<_1aaeea1c4_AssignSt>);


	inline void _method_check_assign_st(jule::Ref<_1aaeea1c4_AssignSt>);


	inline jule::Ref<_1ac77dd1e_Scope> _method_check_case_scope(jule::Ref<_1ac77dd1e_Case>,jule::Ref<_1aaeea1c4_ScopeTree>);


	inline jule::Ref<_1ac77dd1e_Case> _method_check_case(jule::Ref<_1ac77dd1e_Match>,jule::Int,jule::Ref<_1aaeea1c4_Case>,jule::Ref<_1acde49c3_Data>);


	inline void _method_check_cases(jule::Ref<_1aaeea1c4_MatchCase>,jule::Ref<_1ac77dd1e_Match>,jule::Ref<_1acde49c3_Data>);


	inline jule::Ref<_1ac77dd1e_Case> _method_check_default(jule::Ref<_1ac77dd1e_Match>,jule::Ref<_1aaeea1c4_Else>);


	inline void _method_check_type_match(jule::Ref<_1aaeea1c4_MatchCase>);


	inline void _method_check_common_match(jule::Ref<_1aaeea1c4_MatchCase>);


	inline void _method_check_match(jule::Ref<_1aaeea1c4_MatchCase>);


	inline void _method_check_fall(jule::Ref<_1aaeea1c4_FallSt>);


	inline jule::Ref<_1ac77dd1e_BreakSt> _method_check_break_with_label(jule::Ref<_1aaeea1c4_BreakSt>);


	inline jule::Ref<_1ac77dd1e_BreakSt> _method_check_plain_break(jule::Ref<_1aaeea1c4_BreakSt>);


	inline void _method_check_break(jule::Ref<_1aaeea1c4_BreakSt>);


	inline void _method_check_ret(jule::Ref<_1aaeea1c4_RetSt>);


	inline void _method_check_node(jule::Any);


	inline void _method_check_tree(void);


	inline void _method_check_same_scope_goto(jule::Ref<_1ac77dd1e_ScopeGoto>,jule::Ref<_1ac77dd1e_ScopeLabel>);


	inline jule::Bool _method_check_label_parents(jule::Ref<_1ac77dd1e_ScopeGoto>,jule::Ref<_1ac77dd1e_ScopeLabel>);


	inline void _method_check_goto_scope(jule::Ref<_1ac77dd1e_ScopeGoto>,jule::Ref<_1ac77dd1e_ScopeLabel>);


	inline void _method_check_diff_scope_goto(jule::Ref<_1ac77dd1e_ScopeGoto>,jule::Ref<_1ac77dd1e_ScopeLabel>);


	inline void _method_check_goto(jule::Ref<_1ac77dd1e_ScopeGoto>,jule::Ref<_1ac77dd1e_ScopeLabel>);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ref<_1aaeea1c4_ScopeTree>,jule::Ref<_1ac77dd1e_Scope>);


	inline jule::Ref<_1ac77dd1e_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(const _1ac77dd1e_ScopeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1ac77dd1e_ScopeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_BinopExprModel {
	jule::Ref<_1ab0a4954_BinopExprModel> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1ab0a4954_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op) {
		this->self = jule::Ref<_1ab0a4954_BinopExprModel>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_1ab0a4954_BinopExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_BinopExprModel(void) { this->self = jule::Ref<_1ab0a4954_BinopExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_BinopExprModel &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1ab0a4954_BinopExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_UnaryExprModel {
	jule::Ref<_1ab0a4954_UnaryExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1ab0a4954_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_1ab0a4954_UnaryExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_1ab0a4954_UnaryExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_UnaryExprModel(void) { this->self = jule::Ref<_1ab0a4954_UnaryExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_UnaryExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1ab0a4954_UnaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_GetRefPtrExprModel {
	jule::Ref<_1ab0a4954_GetRefPtrExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab0a4954_GetRefPtrExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab0a4954_GetRefPtrExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab0a4954_GetRefPtrExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_GetRefPtrExprModel(void) { this->self = jule::Ref<_1ab0a4954_GetRefPtrExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_GetRefPtrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab0a4954_GetRefPtrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_StructArgExprModel {
	jule::Ref<_1ab0a4954_StructArgExprModel> self{};

	jule::Ref<_1ab064271_FieldIns> _field_field{jule::Ref<_1ab064271_FieldIns>()};
	jule::Any _field_expr{jule::Any()};


	_1ab0a4954_StructArgExprModel(jule::Ref<_1ab064271_FieldIns> __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_1ab0a4954_StructArgExprModel>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_1ab0a4954_StructArgExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_StructArgExprModel(void) { this->self = jule::Ref<_1ab0a4954_StructArgExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_StructArgExprModel &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab0a4954_StructArgExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_StructLitExprModel {
	jule::Ref<_1ab0a4954_StructLitExprModel> self{};

	jule::Ref<_1ab064271_StructIns> _field_strct{jule::Ref<_1ab064271_StructIns>()};
	jule::Slice<jule::Ref<_1ab0a4954_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_1ab0a4954_StructArgExprModel>>()};


	_1ab0a4954_StructLitExprModel(jule::Ref<_1ab064271_StructIns> __param_strct, jule::Slice<jule::Ref<_1ab0a4954_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_1ab0a4954_StructLitExprModel>::make(this, nullptr);

		this->_field_strct = __param_strct;
		this->_field_args = __param_args;
	}

	~_1ab0a4954_StructLitExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_StructLitExprModel(void) { this->self = jule::Ref<_1ab0a4954_StructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_StructLitExprModel &_Src) const {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1ab0a4954_StructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_AllocStructLitExprModel {
	jule::Ref<_1ab0a4954_AllocStructLitExprModel> self{};

	jule::Ref<_1ab0a4954_StructLitExprModel> _field_lit{jule::Ref<_1ab0a4954_StructLitExprModel>()};


	_1ab0a4954_AllocStructLitExprModel(jule::Ref<_1ab0a4954_StructLitExprModel> __param_lit) {
		this->self = jule::Ref<_1ab0a4954_AllocStructLitExprModel>::make(this, nullptr);

		this->_field_lit = __param_lit;
	}

	~_1ab0a4954_AllocStructLitExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_AllocStructLitExprModel(void) { this->self = jule::Ref<_1ab0a4954_AllocStructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_AllocStructLitExprModel &_Src) const {
		return 
			this->_field_lit == _Src._field_lit;
	}

	inline bool operator!=(const _1ab0a4954_AllocStructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_CastingExprModel {
	jule::Ref<_1ab0a4954_CastingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1ad3e617d_TypeKind> _field_kind{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Ref<_1ad3e617d_TypeKind> _field_expr_kind{jule::Ref<_1ad3e617d_TypeKind>()};


	_1ab0a4954_CastingExprModel(jule::Any __param_expr, jule::Ref<_1ad3e617d_TypeKind> __param_kind, jule::Ref<_1ad3e617d_TypeKind> __param_expr_kind) {
		this->self = jule::Ref<_1ab0a4954_CastingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_kind = __param_kind;
		this->_field_expr_kind = __param_expr_kind;
	}

	~_1ab0a4954_CastingExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_CastingExprModel(void) { this->self = jule::Ref<_1ab0a4954_CastingExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_CastingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	inline bool operator!=(const _1ab0a4954_CastingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_FnCallExprModel {
	jule::Ref<_1ab0a4954_FnCallExprModel> self{};

	jule::Ref<_1ab07a50c_FnIns> _field_func{jule::Ref<_1ab07a50c_FnIns>()};
	jule::Bool _field_is_co{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	jule::Slice<jule::Any> _field_args{jule::Slice<jule::Any>()};


	_1ab0a4954_FnCallExprModel(jule::Ref<_1ab07a50c_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args) {
		this->self = jule::Ref<_1ab0a4954_FnCallExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_is_co = __param_is_co;
		this->_field_expr = __param_expr;
		this->_field_args = __param_args;
	}

	~_1ab0a4954_FnCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_FnCallExprModel(void) { this->self = jule::Ref<_1ab0a4954_FnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_FnCallExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1ab0a4954_FnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_SliceExprModel {
	jule::Ref<_1ab0a4954_SliceExprModel> self{};

	jule::Ref<_1ad3e617d_TypeKind> _field_elem_kind{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1ab0a4954_SliceExprModel(jule::Ref<_1ad3e617d_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_1ab0a4954_SliceExprModel>::make(this, nullptr);

		this->_field_elem_kind = __param_elem_kind;
		this->_field_elems = __param_elems;
	}

	~_1ab0a4954_SliceExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_SliceExprModel(void) { this->self = jule::Ref<_1ab0a4954_SliceExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_SliceExprModel &_Src) const {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1ab0a4954_SliceExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_IndexigExprModel {
	jule::Ref<_1ab0a4954_IndexigExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_1ab0a4954_IndexigExprModel(jule::Any __param_expr, jule::Any __param_index) {
		this->self = jule::Ref<_1ab0a4954_IndexigExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_1ab0a4954_IndexigExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_IndexigExprModel(void) { this->self = jule::Ref<_1ab0a4954_IndexigExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_IndexigExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1ab0a4954_IndexigExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_AnonFnExprModel {
	jule::Ref<_1ab0a4954_AnonFnExprModel> self{};

	jule::Ref<_1ab07a50c_FnIns> _field_func{jule::Ref<_1ab07a50c_FnIns>()};
	jule::Bool _field_global{jule::Bool()};


	_1ab0a4954_AnonFnExprModel(jule::Ref<_1ab07a50c_FnIns> __param_func, jule::Bool __param_global) {
		this->self = jule::Ref<_1ab0a4954_AnonFnExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_global = __param_global;
	}

	~_1ab0a4954_AnonFnExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_AnonFnExprModel(void) { this->self = jule::Ref<_1ab0a4954_AnonFnExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_AnonFnExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	inline bool operator!=(const _1ab0a4954_AnonFnExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_KeyValPairExprModel {
	jule::Ref<_1ab0a4954_KeyValPairExprModel> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};


	_1ab0a4954_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val) {
		this->self = jule::Ref<_1ab0a4954_KeyValPairExprModel>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1ab0a4954_KeyValPairExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_KeyValPairExprModel(void) { this->self = jule::Ref<_1ab0a4954_KeyValPairExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_KeyValPairExprModel &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1ab0a4954_KeyValPairExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_MapExprModel {
	jule::Ref<_1ab0a4954_MapExprModel> self{};

	jule::Ref<_1ad3e617d_TypeKind> _field_key_kind{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Ref<_1ad3e617d_TypeKind> _field_val_kind{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Slice<jule::Ref<_1ab0a4954_KeyValPairExprModel>> _field_entries{jule::Slice<jule::Ref<_1ab0a4954_KeyValPairExprModel>>()};


	_1ab0a4954_MapExprModel(jule::Ref<_1ad3e617d_TypeKind> __param_key_kind, jule::Ref<_1ad3e617d_TypeKind> __param_val_kind, jule::Slice<jule::Ref<_1ab0a4954_KeyValPairExprModel>> __param_entries) {
		this->self = jule::Ref<_1ab0a4954_MapExprModel>::make(this, nullptr);

		this->_field_key_kind = __param_key_kind;
		this->_field_val_kind = __param_val_kind;
		this->_field_entries = __param_entries;
	}

	~_1ab0a4954_MapExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_MapExprModel(void) { this->self = jule::Ref<_1ab0a4954_MapExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_MapExprModel &_Src) const {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	inline bool operator!=(const _1ab0a4954_MapExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_SlicingExprModel {
	jule::Ref<_1ab0a4954_SlicingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};


	_1ab0a4954_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right) {
		this->self = jule::Ref<_1ab0a4954_SlicingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_1ab0a4954_SlicingExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_SlicingExprModel(void) { this->self = jule::Ref<_1ab0a4954_SlicingExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_SlicingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1ab0a4954_SlicingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_TraitSubIdentExprModel {
	jule::Ref<_1ab0a4954_TraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1ab0a4954_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_1ab0a4954_TraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1ab0a4954_TraitSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_TraitSubIdentExprModel(void) { this->self = jule::Ref<_1ab0a4954_TraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_TraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ab0a4954_TraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_StructSubIdentExprModel {
	jule::Ref<_1ab0a4954_StructSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1ad3e617d_TypeKind> _field_expr_kind{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Ref<_1ab07a50c_FnIns> _field_method{jule::Ref<_1ab07a50c_FnIns>()};
	jule::Ref<_1ab064271_FieldIns> _field_field{jule::Ref<_1ab064271_FieldIns>()};


	_1ab0a4954_StructSubIdentExprModel(jule::Any __param_expr, jule::Ref<_1ad3e617d_TypeKind> __param_expr_kind, jule::Ref<_1ab07a50c_FnIns> __param_method, jule::Ref<_1ab064271_FieldIns> __param_field) {
		this->self = jule::Ref<_1ab0a4954_StructSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_expr_kind = __param_expr_kind;
		this->_field_method = __param_method;
		this->_field_field = __param_field;
	}

	~_1ab0a4954_StructSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_StructSubIdentExprModel(void) { this->self = jule::Ref<_1ab0a4954_StructSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_StructSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	inline bool operator!=(const _1ab0a4954_StructSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_StructStaticIdentExprModel {
	jule::Ref<_1ab0a4954_StructStaticIdentExprModel> self{};

	jule::Ref<_1ab064271_StructIns> _field_structure{jule::Ref<_1ab064271_StructIns>()};
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1ab07a50c_FnIns> _field_method{jule::Ref<_1ab07a50c_FnIns>()};


	_1ab0a4954_StructStaticIdentExprModel(jule::Ref<_1ab064271_StructIns> __param_structure, jule::Any __param_expr, jule::Ref<_1ab07a50c_FnIns> __param_method) {
		this->self = jule::Ref<_1ab0a4954_StructStaticIdentExprModel>::make(this, nullptr);

		this->_field_structure = __param_structure;
		this->_field_expr = __param_expr;
		this->_field_method = __param_method;
	}

	~_1ab0a4954_StructStaticIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_StructStaticIdentExprModel(void) { this->self = jule::Ref<_1ab0a4954_StructStaticIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_StructStaticIdentExprModel &_Src) const {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	inline bool operator!=(const _1ab0a4954_StructStaticIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_ArrayExprModel {
	jule::Ref<_1ab0a4954_ArrayExprModel> self{};

	jule::Ref<_1ad3e617d_Arr> _field_kind{jule::Ref<_1ad3e617d_Arr>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1ab0a4954_ArrayExprModel(jule::Ref<_1ad3e617d_Arr> __param_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_1ab0a4954_ArrayExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_elems = __param_elems;
	}

	~_1ab0a4954_ArrayExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_ArrayExprModel(void) { this->self = jule::Ref<_1ab0a4954_ArrayExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_ArrayExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1ab0a4954_ArrayExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_CommonIdentExprModel {
	jule::Ref<_1ab0a4954_CommonIdentExprModel> self{};

	jule::Str _field_ident{jule::Str()};


	_1ab0a4954_CommonIdentExprModel(jule::Str __param_ident) {
		this->self = jule::Ref<_1ab0a4954_CommonIdentExprModel>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_1ab0a4954_CommonIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_CommonIdentExprModel(void) { this->self = jule::Ref<_1ab0a4954_CommonIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_CommonIdentExprModel &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ab0a4954_CommonIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_CommonSubIdentExprModel {
	jule::Ref<_1ab0a4954_CommonSubIdentExprModel> self{};

	jule::Ref<_1ad3e617d_TypeKind> _field_expr_kind{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1ab0a4954_CommonSubIdentExprModel(jule::Ref<_1ad3e617d_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_1ab0a4954_CommonSubIdentExprModel>::make(this, nullptr);

		this->_field_expr_kind = __param_expr_kind;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1ab0a4954_CommonSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_CommonSubIdentExprModel(void) { this->self = jule::Ref<_1ab0a4954_CommonSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_CommonSubIdentExprModel &_Src) const {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ab0a4954_CommonSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_TupleExprModel {
	jule::Ref<_1ab0a4954_TupleExprModel> self{};

	jule::Slice<jule::Ref<_1acde49c3_Data>> _field_datas{jule::Slice<jule::Ref<_1acde49c3_Data>>()};


	_1ab0a4954_TupleExprModel(jule::Slice<jule::Ref<_1acde49c3_Data>> __param_datas) {
		this->self = jule::Ref<_1ab0a4954_TupleExprModel>::make(this, nullptr);

		this->_field_datas = __param_datas;
	}

	~_1ab0a4954_TupleExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_TupleExprModel(void) { this->self = jule::Ref<_1ab0a4954_TupleExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_TupleExprModel &_Src) const {
		return 
			this->_field_datas == _Src._field_datas;
	}

	inline bool operator!=(const _1ab0a4954_TupleExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_BuiltinOutCallExprModel {
	jule::Ref<_1ab0a4954_BuiltinOutCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab0a4954_BuiltinOutCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab0a4954_BuiltinOutCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab0a4954_BuiltinOutCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_BuiltinOutCallExprModel(void) { this->self = jule::Ref<_1ab0a4954_BuiltinOutCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_BuiltinOutCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab0a4954_BuiltinOutCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_BuiltinOutlnCallExprModel {
	jule::Ref<_1ab0a4954_BuiltinOutlnCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab0a4954_BuiltinOutlnCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab0a4954_BuiltinOutlnCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab0a4954_BuiltinOutlnCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_BuiltinOutlnCallExprModel(void) { this->self = jule::Ref<_1ab0a4954_BuiltinOutlnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_BuiltinOutlnCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab0a4954_BuiltinOutlnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_BuiltinCloneCallExprModel {
	jule::Ref<_1ab0a4954_BuiltinCloneCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab0a4954_BuiltinCloneCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab0a4954_BuiltinCloneCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab0a4954_BuiltinCloneCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_BuiltinCloneCallExprModel(void) { this->self = jule::Ref<_1ab0a4954_BuiltinCloneCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_BuiltinCloneCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab0a4954_BuiltinCloneCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_BuiltinNewCallExprModel {
	jule::Ref<_1ab0a4954_BuiltinNewCallExprModel> self{};

	jule::Ref<_1ad3e617d_TypeKind> _field_kind{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Any _field_init{jule::Any()};


	_1ab0a4954_BuiltinNewCallExprModel(jule::Ref<_1ad3e617d_TypeKind> __param_kind, jule::Any __param_init) {
		this->self = jule::Ref<_1ab0a4954_BuiltinNewCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_init = __param_init;
	}

	~_1ab0a4954_BuiltinNewCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_BuiltinNewCallExprModel(void) { this->self = jule::Ref<_1ab0a4954_BuiltinNewCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_BuiltinNewCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	inline bool operator!=(const _1ab0a4954_BuiltinNewCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_BuiltinRealCallExprModel {
	jule::Ref<_1ab0a4954_BuiltinRealCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab0a4954_BuiltinRealCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab0a4954_BuiltinRealCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab0a4954_BuiltinRealCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_BuiltinRealCallExprModel(void) { this->self = jule::Ref<_1ab0a4954_BuiltinRealCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_BuiltinRealCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab0a4954_BuiltinRealCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_BuiltinDropCallExprModel {
	jule::Ref<_1ab0a4954_BuiltinDropCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab0a4954_BuiltinDropCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab0a4954_BuiltinDropCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab0a4954_BuiltinDropCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_BuiltinDropCallExprModel(void) { this->self = jule::Ref<_1ab0a4954_BuiltinDropCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_BuiltinDropCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab0a4954_BuiltinDropCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_BuiltinPanicCallExprModel {
	jule::Ref<_1ab0a4954_BuiltinPanicCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab0a4954_BuiltinPanicCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab0a4954_BuiltinPanicCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab0a4954_BuiltinPanicCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_BuiltinPanicCallExprModel(void) { this->self = jule::Ref<_1ab0a4954_BuiltinPanicCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_BuiltinPanicCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab0a4954_BuiltinPanicCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_BuiltinMakeCallExprModel {
	jule::Ref<_1ab0a4954_BuiltinMakeCallExprModel> self{};

	jule::Ref<_1ad3e617d_TypeKind> _field_kind{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Any _field_len{jule::Any()};
	jule::Any _field_cap{jule::Any()};


	_1ab0a4954_BuiltinMakeCallExprModel(jule::Ref<_1ad3e617d_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap) {
		this->self = jule::Ref<_1ab0a4954_BuiltinMakeCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_len = __param_len;
		this->_field_cap = __param_cap;
	}

	~_1ab0a4954_BuiltinMakeCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_BuiltinMakeCallExprModel(void) { this->self = jule::Ref<_1ab0a4954_BuiltinMakeCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_BuiltinMakeCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	inline bool operator!=(const _1ab0a4954_BuiltinMakeCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_BuiltinAppendCallExprModel {
	jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel> self{};

	jule::Any _field_dest{jule::Any()};
	jule::Any _field_elements{jule::Any()};


	_1ab0a4954_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements) {
		this->self = jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel>::make(this, nullptr);

		this->_field_dest = __param_dest;
		this->_field_elements = __param_elements;
	}

	~_1ab0a4954_BuiltinAppendCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_BuiltinAppendCallExprModel(void) { this->self = jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_BuiltinAppendCallExprModel &_Src) const {
		return 
			this->_field_dest == _Src._field_dest &&
			this->_field_elements == _Src._field_elements;
	}

	inline bool operator!=(const _1ab0a4954_BuiltinAppendCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_BuiltinErrorTraitSubIdentExprModel {
	jule::Ref<_1ab0a4954_BuiltinErrorTraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1ab0a4954_BuiltinErrorTraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_1ab0a4954_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1ab0a4954_BuiltinErrorTraitSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_BuiltinErrorTraitSubIdentExprModel(void) { this->self = jule::Ref<_1ab0a4954_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_BuiltinErrorTraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ab0a4954_BuiltinErrorTraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_SizeofExprModel {
	jule::Ref<_1ab0a4954_SizeofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab0a4954_SizeofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab0a4954_SizeofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab0a4954_SizeofExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_SizeofExprModel(void) { this->self = jule::Ref<_1ab0a4954_SizeofExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_SizeofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab0a4954_SizeofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_AlignofExprModel {
	jule::Ref<_1ab0a4954_AlignofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab0a4954_AlignofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab0a4954_AlignofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab0a4954_AlignofExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_AlignofExprModel(void) { this->self = jule::Ref<_1ab0a4954_AlignofExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_AlignofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab0a4954_AlignofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_RuneExprModel {
	jule::Ref<_1ab0a4954_RuneExprModel> self{};

	jule::I32 _field_code{jule::I32()};


	_1ab0a4954_RuneExprModel(jule::I32 __param_code) {
		this->self = jule::Ref<_1ab0a4954_RuneExprModel>::make(this, nullptr);

		this->_field_code = __param_code;
	}

	~_1ab0a4954_RuneExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_RuneExprModel(void) { this->self = jule::Ref<_1ab0a4954_RuneExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_RuneExprModel &_Src) const {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _1ab0a4954_RuneExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0a4954_ExplicitDerefExprModel {
	jule::Ref<_1ab0a4954_ExplicitDerefExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab0a4954_ExplicitDerefExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab0a4954_ExplicitDerefExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab0a4954_ExplicitDerefExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ab0a4954_ExplicitDerefExprModel(void) { this->self = jule::Ref<_1ab0a4954_ExplicitDerefExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab0a4954_ExplicitDerefExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab0a4954_ExplicitDerefExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ac78be4d_ImportInfo: public _1acde4cc0_Lookup {
	jule::Ref<_1ac78be4d_ImportInfo> self{};

	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_ident{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_duplicate{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};
	jule::Bool _field_import_all{jule::Bool()};
	jule::Slice<_1ab0277b7_Token> _field_selected{jule::Slice<_1ab0277b7_Token>()};
	jule::Ref<_1ac78be4d_Package> _field_package{jule::Ref<_1ac78be4d_Package>()};


	_1ac78be4d_ImportInfo(_1ab0277b7_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_1ab0277b7_Token> __param_selected, jule::Ref<_1ac78be4d_Package> __param_package) {
		this->self = jule::Ref<_1ac78be4d_ImportInfo>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_path = __param_path;
		this->_field_link_path = __param_link_path;
		this->_field_ident = __param_ident;
		this->_field_alias = __param_alias;
		this->_field_duplicate = __param_duplicate;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
		this->_field_import_all = __param_import_all;
		this->_field_selected = __param_selected;
		this->_field_package = __param_package;
	}

	~_1ac78be4d_ImportInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac78be4d_ImportInfo(void) { this->self = jule::Ref<_1ac78be4d_ImportInfo>::make(this, nullptr); }

	inline jule::Ref<_1ac78be4d_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1ac78be4d_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)>);


	inline jule::Ref<_1aca3647d_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1ad3e617d_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1ab064271_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1ab07a50c_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1ac276c57_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1ac7804a2_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline bool operator==(const _1ac78be4d_ImportInfo &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_alias == _Src._field_alias &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	inline bool operator!=(const _1ac78be4d_ImportInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1ac78be4d_Package: public _1acde4cc0_Lookup {
	jule::Ref<_1ac78be4d_Package> self{};

	jule::Slice<jule::Ref<_1acd9639d_SymbolTable>> _field_files{jule::Slice<jule::Ref<_1acd9639d_SymbolTable>>()};


	_1ac78be4d_Package(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>> __param_files) {
		this->self = jule::Ref<_1ac78be4d_Package>::make(this, nullptr);

		this->_field_files = __param_files;
	}

	~_1ac78be4d_Package(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac78be4d_Package(void) { this->self = jule::Ref<_1ac78be4d_Package>::make(this, nullptr); }

	inline jule::Ref<_1ac78be4d_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1ac78be4d_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)>);


	inline jule::Ref<_1aca3647d_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1ad3e617d_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1ab064271_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1ab07a50c_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1ac276c57_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1ac7804a2_Enum> _method_find_enum(jule::Str);


	inline bool operator==(const _1ac78be4d_Package &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1ac78be4d_Package &_Src) const { return !this->operator==(_Src); }
};


struct _1ac7ccb09_Sema: public _1acde4cc0_Lookup {
	jule::Ref<_1ac7ccb09_Sema> self{};

	jule::Slice<_1d068165a_Log> _field_errors{jule::Slice<_1d068165a_Log>()};
	jule::Slice<jule::Ref<_1acd9639d_SymbolTable>> _field_files{jule::Slice<jule::Ref<_1acd9639d_SymbolTable>>()};
	jule::Ref<_1acd9639d_SymbolTable> _field_file{jule::Ref<_1acd9639d_SymbolTable>()};


	_1ac7ccb09_Sema(jule::Slice<_1d068165a_Log> __param_errors, jule::Slice<jule::Ref<_1acd9639d_SymbolTable>> __param_files, jule::Ref<_1acd9639d_SymbolTable> __param_file) {
		this->self = jule::Ref<_1ac7ccb09_Sema>::make(this, nullptr);

		this->_field_errors = __param_errors;
		this->_field_files = __param_files;
		this->_field_file = __param_file;
	}

	~_1ac7ccb09_Sema(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ac7ccb09_Sema(void) { this->self = jule::Ref<_1ac7ccb09_Sema>::make(this, nullptr); }

	inline jule::Ref<_1ac78be4d_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1ac78be4d_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)>);


	inline jule::Ref<_1aca3647d_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1ad3e617d_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1ab064271_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1ab07a50c_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1ac276c57_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1ac7804a2_Enum> _method_find_enum(jule::Str);


	inline void _method_set_current_file(jule::Ref<_1acd9639d_SymbolTable>);


	inline void _method_push_err(_1ab0277b7_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_1ab0277b7_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_1ab0277b7_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline jule::Any _method_get_import_def(jule::Str,jule::Ref<_1ac78be4d_ImportInfo>&);


	inline void _method_check_import_selections(jule::Ref<_1ac78be4d_ImportInfo>);


	inline jule::Bool _method_is_use_alias_duplication(jule::Ref<_1ac78be4d_ImportInfo>&);


	inline jule::Bool _method_check_import(jule::Ref<_1ac78be4d_ImportInfo>);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ref<_1ad3e617d_TypeSymbol>,jule::Trait<_1acde4cc0_Lookup>,jule::Ref<_1ad3e617d_Referencer>);


	inline jule::Bool _method_check_type(jule::Ref<_1ad3e617d_TypeSymbol>,jule::Trait<_1acde4cc0_Lookup>);


	inline jule::Ref<_1ad3e617d_TypeKind> _method_build_type_with_generics(jule::Ref<_1aaeea1c4_TypeDecl>,jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>);


	inline jule::Ref<_1ad3e617d_TypeKind> _method_build_type(jule::Ref<_1aaeea1c4_TypeDecl>);


	inline jule::Ref<_1acde49c3_Data> _method_evalpd(jule::Ref<_1aaeea1c4_Expr>,jule::Trait<_1acde4cc0_Lookup>,jule::Ref<_1ad3e617d_TypeKind>,jule::Ref<_1aca3647d_Var>);


	inline jule::Ref<_1acde49c3_Data> _method_evalp(jule::Ref<_1aaeea1c4_Expr>,jule::Trait<_1acde4cc0_Lookup>,jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Ref<_1acde49c3_Data> _method_eval(jule::Ref<_1aaeea1c4_Expr>,jule::Trait<_1acde4cc0_Lookup>);


	inline void _method_check_assign_type(jule::Ref<_1ad3e617d_TypeKind>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token,jule::Bool);


	inline jule::Bool _method_check_type_compatibility(jule::Ref<_1ad3e617d_TypeKind>,jule::Ref<_1ad3e617d_TypeKind>,_1ab0277b7_Token,jule::Bool);


	inline jule::Ref<_1ad3e617d_TypeKind> _method_build_non_generic_type_kind(jule::Ref<_1aaeea1c4_TypeDecl>,jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ref<_1ab07a50c_FnIns>);


	inline jule::Ref<_1ab07a50c_FnIns> _method_get_trait_check_fn_kind(jule::Ref<_1ab07a50c_Fn>);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ref<_1ab07a50c_FnIns>);


	inline void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ref<_1ad3e617d_TypeKind>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ref<_1ad3e617d_TypeAlias>,jule::Trait<_1acde4cc0_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ref<_1ad3e617d_TypeAlias>,jule::Trait<_1acde4cc0_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ref<_1ad3e617d_TypeAlias>);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ref<_1ac7804a2_Enum>);


	inline void _method_check_enum_items_str(jule::Ref<_1ac7804a2_Enum>);


	inline void _method_check_enum_items_int(jule::Ref<_1ac7804a2_Enum>);


	inline void _method_check_enum_decl(jule::Ref<_1ac7804a2_Enum>);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ref<_1ab07a50c_Fn>);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ref<_1ab07a50c_Fn>);


	inline jule::Bool _method_check_fn_decl_types(jule::Ref<_1ab07a50c_Fn>);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ref<_1ab07a50c_Fn>);


	inline void _method_check_trait_decl_method(jule::Ref<_1ab07a50c_Fn>);


	inline void _method_check_trait_decl_methods(jule::Ref<_1ac276c57_Trait>);


	inline void _method_check_trait_decl(jule::Ref<_1ac276c57_Trait>);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ref<_1ac276c57_Trait>,jule::Ref<_1ac780837_Impl>);


	inline jule::Bool _method_impl_to_struct(jule::Ref<_1ab064271_Struct>,jule::Ref<_1ac780837_Impl>);


	inline void _method_impl_trait(jule::Ref<_1ac780837_Impl>);


	inline void _method_impl_struct(jule::Ref<_1ac780837_Impl>);


	inline void _method_impl_impl(jule::Ref<_1ac780837_Impl>);


	inline void _method_check_var_decl(jule::Ref<_1aca3647d_Var>,jule::Trait<_1acde4cc0_Lookup>);


	inline void _method_check_global_var_decl(jule::Ref<_1aca3647d_Var>);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ref<_1ab064271_Struct>,jule::Ref<_1ac276c57_Trait>);


	inline jule::Bool _method_check_struct_impls(jule::Ref<_1ab064271_Struct>);


	inline jule::Bool _method_check_struct_fields(jule::Ref<_1ab064271_Struct>);


	inline jule::Bool _method_check_struct_decl_methods(jule::Ref<_1ab064271_Struct>);


	inline void _method_check_struct_decl(jule::Ref<_1ab064271_Struct>);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ref<_1ab07a50c_Fn>);


	inline jule::Bool _method_check_fn_decls(void);


	inline jule::Bool _method_check_directive_pass(_1ac699a1a_Pass);


	inline jule::Bool _method_check_passes(void);


	inline void _method_push_cycle_error(jule::Ref<_1ab064271_Struct>,jule::Ref<_1ab064271_Struct>,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_1ab064271_Struct>,jule::Ref<_1ab064271_Struct>,jule::Str&);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ref<_1ab064271_Struct>,jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ref<_1ab064271_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ref<_1ab064271_Struct>);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_type_inference(jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline void _method_check_var(jule::Ref<_1aca3647d_Var>);


	inline void _method_check_type_var(jule::Ref<_1aca3647d_Var>,jule::Trait<_1acde4cc0_Lookup>);


	inline void _method_check_global_types(void);


	inline void _method_check_type_method(jule::Ref<_1ab064271_StructIns>,jule::Ref<_1ab07a50c_Fn>);


	inline void _method_check_type_struct(jule::Ref<_1ab064271_Struct>);


	inline void _method_check_struct_types(void);


	inline void _method_check_rets(jule::Ref<_1ab07a50c_FnIns>);


	inline void _method_check_fn_ins_sc(jule::Ref<_1ab07a50c_FnIns>,jule::Ref<_1ac77dd1e_ScopeChecker>);


	inline void _method_check_fn_ins(jule::Ref<_1ab07a50c_FnIns>);


	inline void _method_check_type_fn(jule::Ref<_1ab07a50c_Fn>);


	inline void _method_precheck_type_fn(jule::Ref<_1ab07a50c_Fn>);


	inline jule::Bool _method_precheck_fn_types(void);


	inline jule::Bool _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>>);


	inline bool operator==(const _1ac7ccb09_Sema &_Src) const {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file;
	}

	inline bool operator!=(const _1ac7ccb09_Sema &_Src) const { return !this->operator==(_Src); }
};


struct _1aca3647d_Var {
	jule::Ref<_1aca3647d_Var> self{};

	jule::Ref<_1ac77dd1e_Scope> _field_scope{jule::Ref<_1ac77dd1e_Scope>()};
	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1ad3e617d_TypeSymbol> _field_kind{jule::Ref<_1ad3e617d_TypeSymbol>()};
	jule::Ref<_1acde49c3_Value> _field_value{jule::Ref<_1acde49c3_Value>()};
	jule::Ref<_1ac699a1a_ReferenceStack> _field_references{jule::Ref<_1ac699a1a_ReferenceStack>()};
	jule::Slice<jule::Ref<_1aaeea1c4_Directive>> _field_directives{jule::Slice<jule::Ref<_1aaeea1c4_Directive>>()};
	jule::Slice<jule::Ref<_1aca3647d_Var>> _field_depends{jule::Slice<jule::Ref<_1aca3647d_Var>>()};


	_1aca3647d_Var(jule::Ref<_1ac77dd1e_Scope> __param_scope, _1ab0277b7_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ref<_1ad3e617d_TypeSymbol> __param_kind, jule::Ref<_1acde49c3_Value> __param_value, jule::Ref<_1ac699a1a_ReferenceStack> __param_references, jule::Slice<jule::Ref<_1aaeea1c4_Directive>> __param_directives, jule::Slice<jule::Ref<_1aca3647d_Var>> __param_depends) {
		this->self = jule::Ref<_1aca3647d_Var>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_constant = __param_constant;
		this->_field_mutable = __param_mutable;
		this->_field_public = __param_public;
		this->_field_used = __param_used;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_doc = __param_doc;
		this->_field_kind = __param_kind;
		this->_field_value = __param_value;
		this->_field_references = __param_references;
		this->_field_directives = __param_directives;
		this->_field_depends = __param_depends;
	}

	~_1aca3647d_Var(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aca3647d_Var(void) { this->self = jule::Ref<_1aca3647d_Var>::make(this, nullptr); }

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_type_inferred(void);


	inline bool operator==(const _1aca3647d_Var &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_directives == _Src._field_directives &&
			this->_field_depends == _Src._field_depends;
	}

	inline bool operator!=(const _1aca3647d_Var &_Src) const { return !this->operator==(_Src); }
};


struct _1acc33119_TypeCompatibilityChecker {
	jule::Ref<_1acc33119_TypeCompatibilityChecker> self{};

	jule::Ref<_1ac7ccb09_Sema> _field_s{jule::Ref<_1ac7ccb09_Sema>()};
	jule::Ref<_1ad3e617d_TypeKind> _field_dest{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Ref<_1ad3e617d_TypeKind> _field_src{jule::Ref<_1ad3e617d_TypeKind>()};
	_1ab0277b7_Token _field_error_token{_1ab0277b7_Token()};
	jule::Bool _field_ignore_any{jule::Bool()};
	jule::Bool _field_deref{jule::Bool()};
	jule::Bool _field_sub_check{jule::Bool()};


	_1acc33119_TypeCompatibilityChecker(jule::Ref<_1ac7ccb09_Sema> __param_s, jule::Ref<_1ad3e617d_TypeKind> __param_dest, jule::Ref<_1ad3e617d_TypeKind> __param_src, _1ab0277b7_Token __param_error_token, jule::Bool __param_ignore_any, jule::Bool __param_deref, jule::Bool __param_sub_check) {
		this->self = jule::Ref<_1acc33119_TypeCompatibilityChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_src = __param_src;
		this->_field_error_token = __param_error_token;
		this->_field_ignore_any = __param_ignore_any;
		this->_field_deref = __param_deref;
		this->_field_sub_check = __param_sub_check;
	}

	~_1acc33119_TypeCompatibilityChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1acc33119_TypeCompatibilityChecker(void) { this->self = jule::Ref<_1acc33119_TypeCompatibilityChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ref(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_slc(void);


	inline jule::Bool _method_check_arr(void);


	inline jule::Bool _method_check_map(void);


	inline jule::Bool _method_check_struct(void);


	inline jule::Bool _method_check_fn(void);


	inline jule::Bool _method_check_enum(void);


	inline jule::Bool _method_check_prim(void);


	inline jule::Bool _method_check_cpp_linked(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1acc33119_TypeCompatibilityChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_any == _Src._field_ignore_any &&
			this->_field_deref == _Src._field_deref &&
			this->_field_sub_check == _Src._field_sub_check;
	}

	inline bool operator!=(const _1acc33119_TypeCompatibilityChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1acc33119_AssignTypeChecker {
	jule::Ref<_1acc33119_AssignTypeChecker> self{};

	jule::Ref<_1ac7ccb09_Sema> _field_s{jule::Ref<_1ac7ccb09_Sema>()};
	jule::Ref<_1ad3e617d_TypeKind> _field_dest{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Ref<_1acde49c3_Data> _field_d{jule::Ref<_1acde49c3_Data>()};
	_1ab0277b7_Token _field_error_token{_1ab0277b7_Token()};
	jule::Bool _field_deref{jule::Bool()};


	_1acc33119_AssignTypeChecker(jule::Ref<_1ac7ccb09_Sema> __param_s, jule::Ref<_1ad3e617d_TypeKind> __param_dest, jule::Ref<_1acde49c3_Data> __param_d, _1ab0277b7_Token __param_error_token, jule::Bool __param_deref) {
		this->self = jule::Ref<_1acc33119_AssignTypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_d = __param_d;
		this->_field_error_token = __param_error_token;
		this->_field_deref = __param_deref;
	}

	~_1acc33119_AssignTypeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1acc33119_AssignTypeChecker(void) { this->self = jule::Ref<_1acc33119_AssignTypeChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1acc33119_AssignTypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_deref == _Src._field_deref;
	}

	inline bool operator!=(const _1acc33119_AssignTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1acc33119_DynamicTypeAnnotation {
	jule::Ref<_1acc33119_DynamicTypeAnnotation> self{};

	jule::Ref<_1acde49c3_Eval> _field_e{jule::Ref<_1acde49c3_Eval>()};
	jule::Ref<_1ab07a50c_FnIns> _field_f{jule::Ref<_1ab07a50c_FnIns>()};
	jule::Ref<_1ab07a50c_ParamIns> _field_p{jule::Ref<_1ab07a50c_ParamIns>()};
	jule::Ref<_1acde49c3_Data> _field_a{jule::Ref<_1acde49c3_Data>()};
	_1ab0277b7_Token _field_error_token{_1ab0277b7_Token()};
	_1ad3e617d_TypeKind** _field_k{nullptr};


	_1acc33119_DynamicTypeAnnotation(jule::Ref<_1acde49c3_Eval> __param_e, jule::Ref<_1ab07a50c_FnIns> __param_f, jule::Ref<_1ab07a50c_ParamIns> __param_p, jule::Ref<_1acde49c3_Data> __param_a, _1ab0277b7_Token __param_error_token, _1ad3e617d_TypeKind** __param_k) {
		this->self = jule::Ref<_1acc33119_DynamicTypeAnnotation>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_f = __param_f;
		this->_field_p = __param_p;
		this->_field_a = __param_a;
		this->_field_error_token = __param_error_token;
		this->_field_k = __param_k;
	}

	~_1acc33119_DynamicTypeAnnotation(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1acc33119_DynamicTypeAnnotation(void) { this->self = jule::Ref<_1acc33119_DynamicTypeAnnotation>::make(this, nullptr); }

	inline void _method_push_generic(jule::Ref<_1ad3e617d_TypeKind>,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_annotate_slc(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_check_map_key(_1ad3e617d_TypeKind**,jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_annotate_map(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_annotate_fn(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_annotate_ptr(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_annotate_ref(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_annotate_any(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_annotate_kind(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(const _1acc33119_DynamicTypeAnnotation &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	inline bool operator!=(const _1acc33119_DynamicTypeAnnotation &_Src) const { return !this->operator==(_Src); }
};


struct _1acc33119_FnCallArgChecker {
	jule::Ref<_1acc33119_FnCallArgChecker> self{};

	jule::Ref<_1acde49c3_Eval> _field_e{jule::Ref<_1acde49c3_Eval>()};
	jule::Slice<jule::Ref<_1aaeea1c4_Expr>> _field_args{jule::Slice<jule::Ref<_1aaeea1c4_Expr>>()};
	_1ab0277b7_Token _field_error_token{_1ab0277b7_Token()};
	jule::Ref<_1ab07a50c_FnIns> _field_f{jule::Ref<_1ab07a50c_FnIns>()};
	jule::Bool _field_dynamic_annotation{jule::Bool()};
	jule::Slice<jule::Any> _field_arg_models{jule::Slice<jule::Any>()};


	_1acc33119_FnCallArgChecker(jule::Ref<_1acde49c3_Eval> __param_e, jule::Slice<jule::Ref<_1aaeea1c4_Expr>> __param_args, _1ab0277b7_Token __param_error_token, jule::Ref<_1ab07a50c_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models) {
		this->self = jule::Ref<_1acc33119_FnCallArgChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_args = __param_args;
		this->_field_error_token = __param_error_token;
		this->_field_f = __param_f;
		this->_field_dynamic_annotation = __param_dynamic_annotation;
		this->_field_arg_models = __param_arg_models;
	}

	~_1acc33119_FnCallArgChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1acc33119_FnCallArgChecker(void) { this->self = jule::Ref<_1acc33119_FnCallArgChecker>::make(this, nullptr); }

	inline void _method_push_err_token(_1ab0277b7_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ref<_1ab07a50c_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>);


	inline jule::Bool _method_check_arg(jule::Ref<_1ab07a50c_ParamIns>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline jule::Bool _method_push(jule::Ref<_1ab07a50c_ParamIns>,jule::Ref<_1aaeea1c4_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ref<_1ab07a50c_ParamIns>,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1acc33119_FnCallArgChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	inline bool operator!=(const _1acc33119_FnCallArgChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1acc33119_StructLitChecker {
	jule::Ref<_1acc33119_StructLitChecker> self{};

	jule::Ref<_1acde49c3_Eval> _field_e{jule::Ref<_1acde49c3_Eval>()};
	_1ab0277b7_Token _field_error_token{_1ab0277b7_Token()};
	jule::Ref<_1ab064271_StructIns> _field_s{jule::Ref<_1ab064271_StructIns>()};
	jule::Slice<jule::Ref<_1ab0a4954_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_1ab0a4954_StructArgExprModel>>()};


	_1acc33119_StructLitChecker(jule::Ref<_1acde49c3_Eval> __param_e, _1ab0277b7_Token __param_error_token, jule::Ref<_1ab064271_StructIns> __param_s, jule::Slice<jule::Ref<_1ab0a4954_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_1acc33119_StructLitChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_error_token = __param_error_token;
		this->_field_s = __param_s;
		this->_field_args = __param_args;
	}

	~_1acc33119_StructLitChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1acc33119_StructLitChecker(void) { this->self = jule::Ref<_1acc33119_StructLitChecker>::make(this, nullptr); }

	inline void _method_push_err(_1ab0277b7_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ref<_1ab064271_FieldIns>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline void _method_check_pair(jule::Ref<_1aaeea1c4_FieldExprPair>,jule::Slice<jule::Any>);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>);


	inline void _method_check(jule::Slice<jule::Any>);


	inline bool operator==(const _1acc33119_StructLitChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1acc33119_StructLitChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1acc33119_RangeChecker {
	jule::Ref<_1acc33119_RangeChecker> self{};

	jule::Ref<_1ac77dd1e_ScopeChecker> _field_sc{jule::Ref<_1ac77dd1e_ScopeChecker>()};
	jule::Ref<_1aaeea1c4_RangeKind> _field_rang{jule::Ref<_1aaeea1c4_RangeKind>()};
	jule::Ref<_1ac77dd1e_RangeIter> _field_kind{jule::Ref<_1ac77dd1e_RangeIter>()};
	jule::Ref<_1acde49c3_Data> _field_d{jule::Ref<_1acde49c3_Data>()};


	_1acc33119_RangeChecker(jule::Ref<_1ac77dd1e_ScopeChecker> __param_sc, jule::Ref<_1aaeea1c4_RangeKind> __param_rang, jule::Ref<_1ac77dd1e_RangeIter> __param_kind, jule::Ref<_1acde49c3_Data> __param_d) {
		this->self = jule::Ref<_1acc33119_RangeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_rang = __param_rang;
		this->_field_kind = __param_kind;
		this->_field_d = __param_d;
	}

	~_1acc33119_RangeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1acc33119_RangeChecker(void) { this->self = jule::Ref<_1acc33119_RangeChecker>::make(this, nullptr); }

	inline jule::Ref<_1aca3647d_Var> _method_build_var(jule::Ref<_1aaeea1c4_VarDecl>);


	inline void _method_set_size_key(void);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1acc33119_RangeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _1acc33119_RangeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1acc33119_RetTypeChecker {
	jule::Ref<_1acc33119_RetTypeChecker> self{};

	jule::Ref<_1ac77dd1e_ScopeChecker> _field_sc{jule::Ref<_1ac77dd1e_ScopeChecker>()};
	jule::Ref<_1ab07a50c_FnIns> _field_f{jule::Ref<_1ab07a50c_FnIns>()};
	jule::Slice<jule::Ref<_1ad3e617d_TypeKind>> _field_types{jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>()};
	jule::Slice<jule::Ref<_1aaeea1c4_Expr>> _field_exprs{jule::Slice<jule::Ref<_1aaeea1c4_Expr>>()};
	jule::Slice<jule::Ref<_1aca3647d_Var>> _field_vars{jule::Slice<jule::Ref<_1aca3647d_Var>>()};
	_1ab0277b7_Token _field_error_token{_1ab0277b7_Token()};
	jule::Any _field_model{jule::Any()};


	_1acc33119_RetTypeChecker(jule::Ref<_1ac77dd1e_ScopeChecker> __param_sc, jule::Ref<_1ab07a50c_FnIns> __param_f, jule::Slice<jule::Ref<_1ad3e617d_TypeKind>> __param_types, jule::Slice<jule::Ref<_1aaeea1c4_Expr>> __param_exprs, jule::Slice<jule::Ref<_1aca3647d_Var>> __param_vars, _1ab0277b7_Token __param_error_token, jule::Any __param_model) {
		this->self = jule::Ref<_1acc33119_RetTypeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_f = __param_f;
		this->_field_types = __param_types;
		this->_field_exprs = __param_exprs;
		this->_field_vars = __param_vars;
		this->_field_error_token = __param_error_token;
		this->_field_model = __param_model;
	}

	~_1acc33119_RetTypeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1acc33119_RetTypeChecker(void) { this->self = jule::Ref<_1acc33119_RetTypeChecker>::make(this, nullptr); }

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ref<_1aaeea1c4_Expr>);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ref<_1aaeea1c4_Expr>);


	inline bool operator==(const _1acc33119_RetTypeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_model == _Src._field_model;
	}

	inline bool operator!=(const _1acc33119_RetTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1acd9639d_SymbolTable: public _1acde4cc0_Lookup {
	jule::Ref<_1acd9639d_SymbolTable> self{};

	jule::Ref<_1ab029324_File> _field_file{jule::Ref<_1ab029324_File>()};
	jule::Slice<_1ac699a1a_Pass> _field_passes{jule::Slice<_1ac699a1a_Pass>()};
	jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>> _field_imports{jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>>()};
	jule::Slice<jule::Ref<_1aca3647d_Var>> _field_vars{jule::Slice<jule::Ref<_1aca3647d_Var>>()};
	jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>> _field_type_aliases{jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>()};
	jule::Slice<jule::Ref<_1ab064271_Struct>> _field_structs{jule::Slice<jule::Ref<_1ab064271_Struct>>()};
	jule::Slice<jule::Ref<_1ab07a50c_Fn>> _field_funcs{jule::Slice<jule::Ref<_1ab07a50c_Fn>>()};
	jule::Slice<jule::Ref<_1ac276c57_Trait>> _field_traits{jule::Slice<jule::Ref<_1ac276c57_Trait>>()};
	jule::Slice<jule::Ref<_1ac7804a2_Enum>> _field_enums{jule::Slice<jule::Ref<_1ac7804a2_Enum>>()};
	jule::Slice<jule::Ref<_1ac780837_Impl>> _field_impls{jule::Slice<jule::Ref<_1ac780837_Impl>>()};


	_1acd9639d_SymbolTable(jule::Ref<_1ab029324_File> __param_file, jule::Slice<_1ac699a1a_Pass> __param_passes, jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>> __param_imports, jule::Slice<jule::Ref<_1aca3647d_Var>> __param_vars, jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ref<_1ab064271_Struct>> __param_structs, jule::Slice<jule::Ref<_1ab07a50c_Fn>> __param_funcs, jule::Slice<jule::Ref<_1ac276c57_Trait>> __param_traits, jule::Slice<jule::Ref<_1ac7804a2_Enum>> __param_enums, jule::Slice<jule::Ref<_1ac780837_Impl>> __param_impls) {
		this->self = jule::Ref<_1acd9639d_SymbolTable>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_passes = __param_passes;
		this->_field_imports = __param_imports;
		this->_field_vars = __param_vars;
		this->_field_type_aliases = __param_type_aliases;
		this->_field_structs = __param_structs;
		this->_field_funcs = __param_funcs;
		this->_field_traits = __param_traits;
		this->_field_enums = __param_enums;
		this->_field_impls = __param_impls;
	}

	~_1acd9639d_SymbolTable(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1acd9639d_SymbolTable(void) { this->self = jule::Ref<_1acd9639d_SymbolTable>::make(this, nullptr); }

	inline jule::Ref<_1ac78be4d_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1ac78be4d_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)>);


	inline jule::Ref<_1aca3647d_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1ad3e617d_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1ab064271_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1ab07a50c_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1ac276c57_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1ac7804a2_Enum> _method_find_enum(jule::Str);


	inline jule::Ref<_1aca3647d_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ref<_1ad3e617d_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(const _1acd9639d_SymbolTable &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	inline bool operator!=(const _1acd9639d_SymbolTable &_Src) const { return !this->operator==(_Src); }
};


struct _1acde49c3_Data {
	jule::Ref<_1acde49c3_Data> self{};

	jule::Ref<_1ad3e617d_TypeKind> _field_kind{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Ref<_1ad3e617d_TypeKind> _field_cast_kind{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Bool _field_lvalue{jule::Bool()};
	jule::Bool _field_variadiced{jule::Bool()};
	jule::Bool _field_is_rune{jule::Bool()};
	jule::Any _field_model{jule::Any()};
	jule::Bool _field_decl{jule::Bool()};
	jule::Ref<_1ad6d5cec_Const> _field_constant{jule::Ref<_1ad6d5cec_Const>()};


	_1acde49c3_Data(jule::Ref<_1ad3e617d_TypeKind> __param_kind, jule::Ref<_1ad3e617d_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_variadiced, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ref<_1ad6d5cec_Const> __param_constant) {
		this->self = jule::Ref<_1acde49c3_Data>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_cast_kind = __param_cast_kind;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_lvalue = __param_lvalue;
		this->_field_variadiced = __param_variadiced;
		this->_field_is_rune = __param_is_rune;
		this->_field_model = __param_model;
		this->_field_decl = __param_decl;
		this->_field_constant = __param_constant;
	}

	~_1acde49c3_Data(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1acde49c3_Data(void) { this->self = jule::Ref<_1acde49c3_Data>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline bool operator==(const _1acde49c3_Data &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_variadiced == _Src._field_variadiced &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	inline bool operator!=(const _1acde49c3_Data &_Src) const { return !this->operator==(_Src); }
};


struct _1acde49c3_Value {
	jule::Ref<_1acde49c3_Value> self{};

	jule::Ref<_1aaeea1c4_Expr> _field_expr{jule::Ref<_1aaeea1c4_Expr>()};
	jule::Ref<_1acde49c3_Data> _field_data{jule::Ref<_1acde49c3_Data>()};


	_1acde49c3_Value(jule::Ref<_1aaeea1c4_Expr> __param_expr, jule::Ref<_1acde49c3_Data> __param_data) {
		this->self = jule::Ref<_1acde49c3_Value>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_data = __param_data;
	}

	~_1acde49c3_Value(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1acde49c3_Value(void) { this->self = jule::Ref<_1acde49c3_Value>::make(this, nullptr); }

	inline bool operator==(const _1acde49c3_Value &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1acde49c3_Value &_Src) const { return !this->operator==(_Src); }
};


struct _1acde49c3_Eval {
	jule::Ref<_1acde49c3_Eval> self{};

	jule::Ref<_1ac7ccb09_Sema> _field_s{jule::Ref<_1ac7ccb09_Sema>()};
	jule::Trait<_1acde4cc0_Lookup> _field_lookup{jule::Trait<_1acde4cc0_Lookup>()};
	jule::Ref<_1ad3e617d_TypeKind> _field_prefix{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Ref<_1aca3647d_Var> _field_owner{jule::Ref<_1aca3647d_Var>()};


	_1acde49c3_Eval(jule::Ref<_1ac7ccb09_Sema> __param_s, jule::Trait<_1acde4cc0_Lookup> __param_lookup, jule::Ref<_1ad3e617d_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Ref<_1aca3647d_Var> __param_owner) {
		this->self = jule::Ref<_1acde49c3_Eval>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_prefix = __param_prefix;
		this->_field_unsafety = __param_unsafety;
		this->_field_owner = __param_owner;
	}

	~_1acde49c3_Eval(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1acde49c3_Eval(void) { this->self = jule::Ref<_1acde49c3_Eval>::make(this, nullptr); }

	inline void _method_push_err(_1ab0277b7_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline jule::Ref<_1acde49c3_Data> _method_lit_nil(void);


	inline jule::Ref<_1acde49c3_Data> _method_lit_str(jule::Ref<_1aaeea1c4_LitExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_lit_bool(jule::Ref<_1aaeea1c4_LitExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_lit_rune(jule::Ref<_1aaeea1c4_LitExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_lit_float(jule::Ref<_1aaeea1c4_LitExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_lit_int(jule::Ref<_1aaeea1c4_LitExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_lit_num(jule::Ref<_1aaeea1c4_LitExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_lit(jule::Ref<_1aaeea1c4_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ref<_1ac699a1a_ReferenceStack>);


	inline void _method_push_reference_to_fn(jule::Ref<_1ab07a50c_FnIns>);


	inline void _method_push_reference_to_var(jule::Ref<_1aca3647d_Var>);


	inline void _method_push_reference_to_struct(jule::Ref<_1ab064271_StructIns>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_enum(jule::Ref<_1ac7804a2_Enum>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_struct(jule::Ref<_1ab064271_StructIns>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_fn_ins(jule::Ref<_1ab07a50c_FnIns>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_fn(jule::Ref<_1ab07a50c_Fn>,_1ab0277b7_Token);


	inline void _method_push_illegal_cycle_error(jule::Ref<_1aca3647d_Var>,jule::Ref<_1aca3647d_Var>,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_1aca3647d_Var>,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_1aca3647d_Var>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_var(jule::Ref<_1aca3647d_Var>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_type_alias(jule::Ref<_1ad3e617d_TypeAlias>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_def(jule::Any,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_ident(jule::Ref<_1aaeea1c4_IdentExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_unary_minus(jule::Ref<_1acde49c3_Data>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_unary_plus(jule::Ref<_1acde49c3_Data>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_unary_caret(jule::Ref<_1acde49c3_Data>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_unary_excl(jule::Ref<_1acde49c3_Data>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_unary_star(jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_unary_amper(jule::Ref<_1acde49c3_Data>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_unary_type_decl(jule::Ref<_1acde49c3_Data>,jule::Ref<_1aaeea1c4_UnaryExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_unary(jule::Ref<_1aaeea1c4_UnaryExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_variadic(jule::Ref<_1aaeea1c4_VariadicExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_unsafe(jule::Ref<_1aaeea1c4_UnsafeExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_arr(jule::Ref<_1aaeea1c4_SliceExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_exp_slc(jule::Ref<_1aaeea1c4_SliceExpr>,jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_slice_expr(jule::Ref<_1aaeea1c4_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline void _method_indexing_ptr(jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>,jule::Ref<_1aaeea1c4_IndexingExpr>);


	inline void _method_indexing_arr(jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>,jule::Ref<_1aaeea1c4_IndexingExpr>);


	inline void _method_indexing_slc(jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>,jule::Ref<_1aaeea1c4_IndexingExpr>);


	inline void _method_indexing_map(jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>,jule::Ref<_1aaeea1c4_IndexingExpr>);


	inline void _method_indexing_str(jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>,jule::Ref<_1aaeea1c4_IndexingExpr>);


	inline void _method_to_indexing(jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>,jule::Ref<_1aaeea1c4_IndexingExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_ident_decl_from_indexing(jule::Ref<_1aaeea1c4_IndexingExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_indexing(jule::Ref<_1aaeea1c4_IndexingExpr>);


	inline std::tuple<jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>> _method_eval_slicing_exprs(jule::Ref<_1aaeea1c4_SlicingExpr>);


	inline void _method_slicing_arr(jule::Ref<_1acde49c3_Data>);


	inline void _method_slicing_slc(jule::Ref<_1acde49c3_Data>);


	inline void _method_slicing_str(jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>);


	inline void _method_check_slicing(jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>,jule::Ref<_1aaeea1c4_SlicingExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_slicing(jule::Ref<_1aaeea1c4_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ref<_1ad3e617d_TypeKind>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline void _method_cast_struct(jule::Ref<_1ad3e617d_TypeKind>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline void _method_cast_ref(jule::Ref<_1ad3e617d_TypeKind>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline void _method_cast_slc(jule::Ref<_1ad3e617d_TypeKind>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline void _method_cast_str(jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline void _method_cast_int(jule::Ref<_1ad3e617d_TypeKind>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline void _method_cast_num(jule::Ref<_1ad3e617d_TypeKind>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline void _method_cast_prim(jule::Ref<_1ad3e617d_TypeKind>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_cast_by_type_n_data(jule::Ref<_1ad3e617d_TypeKind>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_cast(jule::Ref<_1aaeea1c4_CastExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_ns_selection(jule::Ref<_1aaeea1c4_NsSelectionExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_struct_lit_explicit(jule::Ref<_1ab064271_StructIns>,jule::Slice<jule::Any>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_struct_lit(jule::Ref<_1aaeea1c4_StructLit>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_type(jule::Ref<_1aaeea1c4_TypeDecl>);


	inline jule::Ref<_1acde49c3_Data> _method_call_type_fn(jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ref<_1ab07a50c_FnIns>,jule::Ref<_1aaeea1c4_FnCallExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_call_builtin_fn(jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);


	inline void _method_check_fn_of_concurrent_call(jule::Ref<_1ab07a50c_FnIns>&,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_call_fn(jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_fn_call(jule::Ref<_1aaeea1c4_FnCallExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_enum_static(jule::Ref<_1ac7804a2_Enum>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_struct_static(jule::Ref<_1ab064271_StructIns>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_trait_sub_ident(jule::Ref<_1acde49c3_Data>,jule::Ref<_1ac276c57_Trait>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_struct_sub_ident(jule::Ref<_1acde49c3_Data>,jule::Ref<_1ab064271_StructIns>,jule::Ref<_1aaeea1c4_SubIdentExpr>,jule::Bool);


	inline jule::Ref<_1acde49c3_Data> _method_eval_slice_sub_ident(jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_array_sub_ident(jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_map_sub_ident(jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_str_sub_ident(jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_int_type_static(_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_uint_type_static(_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_i8_type_static(_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_i16_type_static(_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_i32_type_static(_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_i64_type_static(_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_u8_type_static(_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_u16_type_static(_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_u32_type_static(_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_u64_type_static(_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_f32_type_tatic(_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_f64_type_static(_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_prim_static(jule::Str,_1ab0277b7_Token);


	inline jule::Ref<_1acde49c3_Data> _method_eval_type_static(jule::Ref<_1acde49c3_Data>,jule::Ref<_1aaeea1c4_SubIdentExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_obj_sub_ident(jule::Ref<_1acde49c3_Data>,jule::Ref<_1aaeea1c4_SubIdentExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_sub_ident(jule::Ref<_1aaeea1c4_SubIdentExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_tuple(jule::Ref<_1aaeea1c4_TupleExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_map(jule::Ref<_1ad3e617d_Map>,jule::Ref<_1aaeea1c4_BraceLit>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_brace_lit(jule::Ref<_1aaeea1c4_BraceLit>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_anon_fn(jule::Ref<_1aaeea1c4_FnDecl>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_binop(jule::Ref<_1aaeea1c4_BinopExpr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ref<_1acde49c3_Data> _method_eval(jule::Ref<_1aaeea1c4_Expr>);


	inline jule::Ref<_1acde49c3_Data> _method_eval_expr(jule::Ref<_1aaeea1c4_Expr>);


	inline bool operator==(const _1acde49c3_Eval &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_owner == _Src._field_owner;
	}

	inline bool operator!=(const _1acde49c3_Eval &_Src) const { return !this->operator==(_Src); }
};


struct _1acde49c3_BinopSolver {
	jule::Ref<_1acde49c3_BinopSolver> self{};

	jule::Ref<_1acde49c3_Eval> _field_e{jule::Ref<_1acde49c3_Eval>()};
	jule::Ref<_1acde49c3_Data> _field_l{jule::Ref<_1acde49c3_Data>()};
	jule::Ref<_1acde49c3_Data> _field_r{jule::Ref<_1acde49c3_Data>()};
	_1ab0277b7_Token _field_op{_1ab0277b7_Token()};


	_1acde49c3_BinopSolver(jule::Ref<_1acde49c3_Eval> __param_e, jule::Ref<_1acde49c3_Data> __param_l, jule::Ref<_1acde49c3_Data> __param_r, _1ab0277b7_Token __param_op) {
		this->self = jule::Ref<_1acde49c3_BinopSolver>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_1acde49c3_BinopSolver(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1acde49c3_BinopSolver(void) { this->self = jule::Ref<_1acde49c3_BinopSolver>::make(this, nullptr); }

	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_nil(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_enum(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_ptr(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_arr(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_slc(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_fn(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_struct(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_trait(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_any(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_bool(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_check_mod_data(jule::Ref<_1acde49c3_Data>);


	inline void _method_mod(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_float(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_unsig_int(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_sig_int(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval_prim(void);


	inline jule::Ref<_1acde49c3_Data> _method_eval(void);


	inline void _method_assign_shift(jule::Ref<_1acde49c3_Data>,jule::F64);


	inline void _method_solve_const(jule::Ref<_1acde49c3_Data>);


	inline void _method_post_const(jule::Ref<_1acde49c3_Data>);


	inline void _method_prepare_data(jule::Ref<_1acde49c3_Data>);


	inline void _method_prepare_eval(void);


	inline void _method_check_data(jule::Ref<_1acde49c3_Data>);


	inline void _method_check_datas(void);


	inline jule::Ref<_1acde49c3_Data> _method_solve_explicit(jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>);


	inline jule::Ref<_1acde49c3_Data> _method_solve(jule::Ref<_1aaeea1c4_BinopExpr>);


	inline bool operator==(const _1acde49c3_BinopSolver &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1acde49c3_BinopSolver &_Src) const { return !this->operator==(_Src); }
};


struct _1ad3e617d_TypeAlias {
	jule::Ref<_1ad3e617d_TypeAlias> self{};

	jule::Ref<_1aaeea1c4_ScopeTree> _field_scope{jule::Ref<_1aaeea1c4_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	_1ab0277b7_Token _field_token{_1ab0277b7_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1ad3e617d_TypeSymbol> _field_kind{jule::Ref<_1ad3e617d_TypeSymbol>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Any> _field_refers{jule::Slice<jule::Any>()};


	_1ad3e617d_TypeAlias(jule::Ref<_1aaeea1c4_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, _1ab0277b7_Token __param_token, jule::Str __param_ident, jule::Ref<_1ad3e617d_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers) {
		this->self = jule::Ref<_1ad3e617d_TypeAlias>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_used = __param_used;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc = __param_doc;
		this->_field_refers = __param_refers;
	}

	~_1ad3e617d_TypeAlias(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ad3e617d_TypeAlias(void) { this->self = jule::Ref<_1ad3e617d_TypeAlias>::make(this, nullptr); }

	inline bool operator==(const _1ad3e617d_TypeAlias &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	inline bool operator!=(const _1ad3e617d_TypeAlias &_Src) const { return !this->operator==(_Src); }
};


struct _1ad3e617d_TypeKind: public _1ad3e617d_Kind {
	jule::Ref<_1ad3e617d_TypeKind> self{};

	jule::Str _field_cpp_ident{jule::Str()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Trait<_1ad3e617d_Kind> _field_kind{jule::Trait<_1ad3e617d_Kind>()};


	_1ad3e617d_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_variadic, jule::Trait<_1ad3e617d_Kind> __param_kind) {
		this->self = jule::Ref<_1ad3e617d_TypeKind>::make(this, nullptr);

		this->_field_cpp_ident = __param_cpp_ident;
		this->_field_variadic = __param_variadic;
		this->_field_kind = __param_kind;
	}

	~_1ad3e617d_TypeKind(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ad3e617d_TypeKind(void) { this->self = jule::Ref<_1ad3e617d_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Ref<_1ad3e617d_TypeKind> _method_clone(void);


	inline jule::Bool _method_is_cpp_linked(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Ref<_1ad3e617d_Prim> _method_prim(void);


	inline jule::Ref<_1ad3e617d_Ref> _method_ref(void);


	inline jule::Ref<_1ad3e617d_Ptr> _method_ptr(void);


	inline jule::Ref<_1ac7804a2_Enum> _method_enm(void);


	inline jule::Ref<_1ad3e617d_Arr> _method_arr(void);


	inline jule::Ref<_1ad3e617d_Slc> _method_slc(void);


	inline jule::Ref<_1ab07a50c_FnIns> _method_fnc(void);


	inline jule::Ref<_1ab064271_StructIns> _method_strct(void);


	inline jule::Ref<_1ac276c57_Trait> _method_trt(void);


	inline jule::Ref<_1ad3e617d_Map> _method_map(void);


	inline jule::Ref<_1ad3e617d_Tuple> _method_tup(void);


	inline bool operator==(const _1ad3e617d_TypeKind &_Src) const {
		return 
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ad3e617d_TypeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1ad3e617d_TypeSymbol {
	jule::Ref<_1ad3e617d_TypeSymbol> self{};

	jule::Ref<_1aaeea1c4_TypeDecl> _field_decl{jule::Ref<_1aaeea1c4_TypeDecl>()};
	jule::Ref<_1ad3e617d_TypeKind> _field_kind{jule::Ref<_1ad3e617d_TypeKind>()};


	_1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl> __param_decl, jule::Ref<_1ad3e617d_TypeKind> __param_kind) {
		this->self = jule::Ref<_1ad3e617d_TypeSymbol>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_1ad3e617d_TypeSymbol(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ad3e617d_TypeSymbol(void) { this->self = jule::Ref<_1ad3e617d_TypeSymbol>::make(this, nullptr); }

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(const _1ad3e617d_TypeSymbol &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ad3e617d_TypeSymbol &_Src) const { return !this->operator==(_Src); }
};


struct _1ad3e617d_Prim: public _1ad3e617d_Kind {
	jule::Ref<_1ad3e617d_Prim> self{};

	jule::Str _field_kind{jule::Str()};


	_1ad3e617d_Prim(jule::Str __param_kind) {
		this->self = jule::Ref<_1ad3e617d_Prim>::make(this, nullptr);

		this->_field_kind = __param_kind;
	}

	~_1ad3e617d_Prim(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ad3e617d_Prim(void) { this->self = jule::Ref<_1ad3e617d_Prim>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(const _1ad3e617d_Prim &_Src) const {
		return 
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ad3e617d_Prim &_Src) const { return !this->operator==(_Src); }
};


struct _1ad3e617d_Ref: public _1ad3e617d_Kind {
	jule::Ref<_1ad3e617d_Ref> self{};

	jule::Ref<_1ad3e617d_TypeKind> _field_elem{jule::Ref<_1ad3e617d_TypeKind>()};


	_1ad3e617d_Ref(jule::Ref<_1ad3e617d_TypeKind> __param_elem) {
		this->self = jule::Ref<_1ad3e617d_Ref>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1ad3e617d_Ref(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ad3e617d_Ref(void) { this->self = jule::Ref<_1ad3e617d_Ref>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ad3e617d_TypeKind>);


	inline bool operator==(const _1ad3e617d_Ref &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1ad3e617d_Ref &_Src) const { return !this->operator==(_Src); }
};


struct _1ad3e617d_Slc: public _1ad3e617d_Kind {
	jule::Ref<_1ad3e617d_Slc> self{};

	jule::Ref<_1ad3e617d_TypeKind> _field_elem{jule::Ref<_1ad3e617d_TypeKind>()};


	_1ad3e617d_Slc(jule::Ref<_1ad3e617d_TypeKind> __param_elem) {
		this->self = jule::Ref<_1ad3e617d_Slc>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1ad3e617d_Slc(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ad3e617d_Slc(void) { this->self = jule::Ref<_1ad3e617d_Slc>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ad3e617d_TypeKind>);


	inline bool operator==(const _1ad3e617d_Slc &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1ad3e617d_Slc &_Src) const { return !this->operator==(_Src); }
};


struct _1ad3e617d_Tuple: public _1ad3e617d_Kind {
	jule::Ref<_1ad3e617d_Tuple> self{};

	jule::Slice<jule::Ref<_1ad3e617d_TypeKind>> _field_types{jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>()};


	_1ad3e617d_Tuple(jule::Slice<jule::Ref<_1ad3e617d_TypeKind>> __param_types) {
		this->self = jule::Ref<_1ad3e617d_Tuple>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_1ad3e617d_Tuple(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ad3e617d_Tuple(void) { this->self = jule::Ref<_1ad3e617d_Tuple>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ad3e617d_TypeKind>);


	inline bool operator==(const _1ad3e617d_Tuple &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1ad3e617d_Tuple &_Src) const { return !this->operator==(_Src); }
};


struct _1ad3e617d_Map: public _1ad3e617d_Kind {
	jule::Ref<_1ad3e617d_Map> self{};

	jule::Ref<_1ad3e617d_TypeKind> _field_key{jule::Ref<_1ad3e617d_TypeKind>()};
	jule::Ref<_1ad3e617d_TypeKind> _field_val{jule::Ref<_1ad3e617d_TypeKind>()};


	_1ad3e617d_Map(jule::Ref<_1ad3e617d_TypeKind> __param_key, jule::Ref<_1ad3e617d_TypeKind> __param_val) {
		this->self = jule::Ref<_1ad3e617d_Map>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1ad3e617d_Map(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ad3e617d_Map(void) { this->self = jule::Ref<_1ad3e617d_Map>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ad3e617d_TypeKind>);


	inline bool operator==(const _1ad3e617d_Map &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1ad3e617d_Map &_Src) const { return !this->operator==(_Src); }
};


struct _1ad3e617d_Arr: public _1ad3e617d_Kind {
	jule::Ref<_1ad3e617d_Arr> self{};

	jule::Bool _field_auto{jule::Bool()};
	jule::Int _field_n{jule::Int()};
	jule::Ref<_1ad3e617d_TypeKind> _field_elem{jule::Ref<_1ad3e617d_TypeKind>()};


	_1ad3e617d_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ref<_1ad3e617d_TypeKind> __param_elem) {
		this->self = jule::Ref<_1ad3e617d_Arr>::make(this, nullptr);

		this->_field_auto = __param_auto;
		this->_field_n = __param_n;
		this->_field_elem = __param_elem;
	}

	~_1ad3e617d_Arr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ad3e617d_Arr(void) { this->self = jule::Ref<_1ad3e617d_Arr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ad3e617d_TypeKind>);


	inline bool operator==(const _1ad3e617d_Arr &_Src) const {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1ad3e617d_Arr &_Src) const { return !this->operator==(_Src); }
};


struct _1ad3e617d_Ptr: public _1ad3e617d_Kind {
	jule::Ref<_1ad3e617d_Ptr> self{};

	jule::Ref<_1ad3e617d_TypeKind> _field_elem{jule::Ref<_1ad3e617d_TypeKind>()};


	_1ad3e617d_Ptr(jule::Ref<_1ad3e617d_TypeKind> __param_elem) {
		this->self = jule::Ref<_1ad3e617d_Ptr>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1ad3e617d_Ptr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ad3e617d_Ptr(void) { this->self = jule::Ref<_1ad3e617d_Ptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1ad3e617d_Ptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1ad3e617d_Ptr &_Src) const { return !this->operator==(_Src); }
};


struct _1ad3e617d_Referencer {
	jule::Ref<_1ad3e617d_Referencer> self{};

	jule::Str _field_ident{jule::Str()};
	jule::Any _field_owner{jule::Any()};
	jule::Slice<jule::Any>* _field_refs{nullptr};


	_1ad3e617d_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs) {
		this->self = jule::Ref<_1ad3e617d_Referencer>::make(this, nullptr);

		this->_field_ident = __param_ident;
		this->_field_owner = __param_owner;
		this->_field_refs = __param_refs;
	}

	~_1ad3e617d_Referencer(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ad3e617d_Referencer(void) { this->self = jule::Ref<_1ad3e617d_Referencer>::make(this, nullptr); }

	inline bool operator==(const _1ad3e617d_Referencer &_Src) const {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	inline bool operator!=(const _1ad3e617d_Referencer &_Src) const { return !this->operator==(_Src); }
};


struct _1ad3e617d_TypeChecker {
	jule::Ref<_1ad3e617d_TypeChecker> self{};

	jule::Ref<_1ac7ccb09_Sema> _field_s{jule::Ref<_1ac7ccb09_Sema>()};
	jule::Trait<_1acde4cc0_Lookup> _field_lookup{jule::Trait<_1acde4cc0_Lookup>()};
	jule::Ref<_1ad3e617d_Referencer> _field_referencer{jule::Ref<_1ad3e617d_Referencer>()};
	_1ab0277b7_Token _field_error_token{_1ab0277b7_Token()};
	jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> _field_ignore_generics{jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>()};
	jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>> _field_use_generics{jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>()};
	jule::Bool _field_not_plain{jule::Bool()};


	_1ad3e617d_TypeChecker(jule::Ref<_1ac7ccb09_Sema> __param_s, jule::Trait<_1acde4cc0_Lookup> __param_lookup, jule::Ref<_1ad3e617d_Referencer> __param_referencer, _1ab0277b7_Token __param_error_token, jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain) {
		this->self = jule::Ref<_1ad3e617d_TypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_referencer = __param_referencer;
		this->_field_error_token = __param_error_token;
		this->_field_ignore_generics = __param_ignore_generics;
		this->_field_use_generics = __param_use_generics;
		this->_field_not_plain = __param_not_plain;
	}

	~_1ad3e617d_TypeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1ad3e617d_TypeChecker(void) { this->self = jule::Ref<_1ad3e617d_TypeChecker>::make(this, nullptr); }

	inline void _method_push_err(_1ab0277b7_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1ad3e617d_Prim> _method_build_prim(jule::Ref<_1aaeea1c4_IdentTypeDecl>);


	inline void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	inline jule::Bool _method_are_equals_cross_cycle_data_0(jule::Any,jule::Any);
	inline jule::Bool _method_are_equals_cross_cycle_data_1(jule::Any,jule::Any);


	inline jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_1aaeea1c4_IdentTypeDecl>,jule::Any);


	inline jule::Trait<_1ad3e617d_Kind> _method_from_type_alias(jule::Ref<_1aaeea1c4_IdentTypeDecl>,jule::Ref<_1ad3e617d_TypeAlias>);


	inline jule::Ref<_1ac7804a2_Enum> _method_from_enum(jule::Ref<_1aaeea1c4_IdentTypeDecl>,jule::Ref<_1ac7804a2_Enum>);


	inline jule::Bool _method_check_struct_ins(jule::Ref<_1ab064271_StructIns>,_1ab0277b7_Token);


	inline void _method_append_used_struct_reference(jule::Ref<_1ab064271_Struct>);


	inline jule::Ref<_1ab064271_StructIns> _method_from_struct(jule::Ref<_1aaeea1c4_IdentTypeDecl>,jule::Ref<_1ab064271_Struct>);


	inline jule::Trait<_1ad3e617d_Kind> _method_get_def(jule::Ref<_1aaeea1c4_IdentTypeDecl>);


	inline jule::Trait<_1ad3e617d_Kind> _method_build_ident(jule::Ref<_1aaeea1c4_IdentTypeDecl>);


	inline jule::Ref<_1ad3e617d_Ref> _method_build_ref_from_type(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Ref<_1ad3e617d_Ref> _method_build_ref(jule::Ref<_1aaeea1c4_RefTypeDecl>);


	inline jule::Ref<_1ad3e617d_Ptr> _method_build_ptr_from_type(jule::Ref<_1ad3e617d_TypeKind>);


	inline jule::Ref<_1ad3e617d_Ptr> _method_build_ptr(jule::Ref<_1aaeea1c4_PtrTypeDecl>);


	inline jule::Ref<_1ad3e617d_Slc> _method_build_slc(jule::Ref<_1aaeea1c4_SlcTypeDecl>);


	inline jule::Ref<_1ad3e617d_Arr> _method_build_arr(jule::Ref<_1aaeea1c4_ArrTypeDecl>);


	inline jule::Ref<_1ad3e617d_Map> _method_build_map(jule::Ref<_1aaeea1c4_MapTypeDecl>);


	inline jule::Ref<_1ad3e617d_Tuple> _method_build_tuple(jule::Ref<_1aaeea1c4_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ref<_1ab07a50c_FnIns>);


	inline jule::Ref<_1ab07a50c_FnIns> _method_build_fn(jule::Ref<_1aaeea1c4_FnDecl>);


	inline jule::Trait<_1ad3e617d_Kind> _method_build_by_namespace(jule::Ref<_1aaeea1c4_NamespaceTypeDecl>);


	inline jule::Ref<_1ad3e617d_TypeKind> _method_build(jule::Any);


	inline jule::Ref<_1ad3e617d_TypeKind> _method_check_decl(jule::Ref<_1aaeea1c4_TypeDecl>);


	inline void _method_check(jule::Ref<_1ad3e617d_TypeSymbol>);


	inline bool operator==(const _1ad3e617d_TypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	inline bool operator!=(const _1ad3e617d_TypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1aae95878_PlainImporter: public _1ac78be4d_Importer {
	jule::Ref<_1aae95878_PlainImporter> self{};

	jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>> _field_all_packages{jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>>()};


	_1aae95878_PlainImporter(jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>> __param_all_packages) {
		this->self = jule::Ref<_1aae95878_PlainImporter>::make(this, nullptr);

		this->_field_all_packages = __param_all_packages;
	}

	~_1aae95878_PlainImporter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aae95878_PlainImporter(void) { this->self = jule::Ref<_1aae95878_PlainImporter>::make(this, nullptr); }

	inline jule::Ref<_1ac78be4d_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ref<_1ab026d8d_Ast>>,jule::Slice<_1d068165a_Log>> _method_import_package(jule::Str);


	inline void _method_imported(jule::Ref<_1ac78be4d_ImportInfo>);


	inline bool operator==(const _1aae95878_PlainImporter &_Src) const {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	inline bool operator!=(const _1aae95878_PlainImporter &_Src) const { return !this->operator==(_Src); }
};


struct _1aae6a276_OrderedDefines {
	jule::Ref<_1aae6a276_OrderedDefines> self{};

	jule::Slice<jule::Ref<_1ab064271_Struct>> _field_structs{jule::Slice<jule::Ref<_1ab064271_Struct>>()};
	jule::Slice<jule::Ref<_1aca3647d_Var>> _field_globals{jule::Slice<jule::Ref<_1aca3647d_Var>>()};


	_1aae6a276_OrderedDefines(jule::Slice<jule::Ref<_1ab064271_Struct>> __param_structs, jule::Slice<jule::Ref<_1aca3647d_Var>> __param_globals) {
		this->self = jule::Ref<_1aae6a276_OrderedDefines>::make(this, nullptr);

		this->_field_structs = __param_structs;
		this->_field_globals = __param_globals;
	}

	~_1aae6a276_OrderedDefines(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aae6a276_OrderedDefines(void) { this->self = jule::Ref<_1aae6a276_OrderedDefines>::make(this, nullptr); }

	inline bool operator==(const _1aae6a276_OrderedDefines &_Src) const {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	inline bool operator!=(const _1aae6a276_OrderedDefines &_Src) const { return !this->operator==(_Src); }
};


struct _1aae4981b_IR {
	jule::Ref<_1aae4981b_IR> self{};

	jule::Slice<jule::Str> _field_passes{jule::Slice<jule::Str>()};
	jule::Ref<_1ac78be4d_Package> _field_main{jule::Ref<_1ac78be4d_Package>()};
	jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>> _field_used{jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>>()};
	_1aae6a276_OrderedDefines _field_ordered{_1aae6a276_OrderedDefines()};


	_1aae4981b_IR(jule::Slice<jule::Str> __param_passes, jule::Ref<_1ac78be4d_Package> __param_main, jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>> __param_used, _1aae6a276_OrderedDefines __param_ordered) {
		this->self = jule::Ref<_1aae4981b_IR>::make(this, nullptr);

		this->_field_passes = __param_passes;
		this->_field_main = __param_main;
		this->_field_used = __param_used;
		this->_field_ordered = __param_ordered;
	}

	~_1aae4981b_IR(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aae4981b_IR(void) { this->self = jule::Ref<_1aae4981b_IR>::make(this, nullptr); }

	static inline std::tuple<jule::Ref<_1aae4981b_IR>,jule::Slice<_1d068165a_Log>> _static_method_build(jule::Str);


	inline void _method_append_structs(jule::Ref<_1ac78be4d_Package>&,jule::Slice<jule::Ref<_1ab064271_Struct>>&);


	inline jule::Slice<jule::Ref<_1ab064271_Struct>> _method_get_all_structures(void);


	inline void _method_append_vars(jule::Ref<_1ac78be4d_Package>&,jule::Slice<jule::Ref<_1aca3647d_Var>>&);


	inline jule::Slice<jule::Ref<_1aca3647d_Var>> _method_get_all_variables(void);


	inline void _method_order(void);


	inline bool operator==(const _1aae4981b_IR &_Src) const {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used &&
			this->_field_ordered == _Src._field_ordered;
	}

	inline bool operator!=(const _1aae4981b_IR &_Src) const { return !this->operator==(_Src); }
};


struct _1aae6a276_DefineOrderer {
	jule::Ref<_1aae6a276_DefineOrderer> self{};

	~_1aae6a276_DefineOrderer(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aae6a276_DefineOrderer(void) { this->self = jule::Ref<_1aae6a276_DefineOrderer>::make(this, nullptr); }

	static inline jule::Bool _static_method_is_struct_ordered(jule::Slice<jule::Ref<_1ab064271_Struct>>&,jule::Ref<_1ab064271_Struct>);


	static inline void _static_method_order_structures(jule::Slice<jule::Ref<_1ab064271_Struct>>&);


	static inline jule::Bool _static_method_is_var_ordered(jule::Slice<jule::Ref<_1aca3647d_Var>>&,jule::Ref<_1aca3647d_Var>);


	static inline void _static_method_order_variables(jule::Slice<jule::Ref<_1aca3647d_Var>>&);


	inline bool operator==(const _1aae6a276_DefineOrderer &_Src) const { return true; }

	inline bool operator!=(const _1aae6a276_DefineOrderer &_Src) const { return !this->operator==(_Src); }
};


struct _1aae3b247_ScopeDeadCode {
	jule::Ref<_1aae3b247_ScopeDeadCode> self{};

	jule::Ref<_1aae3b247_ScopeDeadCode> _field_parent{jule::Ref<_1aae3b247_ScopeDeadCode>()};
	jule::Ref<_1ac77dd1e_Scope> _field_s{jule::Ref<_1ac77dd1e_Scope>()};
	jule::Slice<jule::Any>* _field_stmts{nullptr};
	jule::Int _field_i{jule::Int()};


	_1aae3b247_ScopeDeadCode(jule::Ref<_1aae3b247_ScopeDeadCode> __param_parent, jule::Ref<_1ac77dd1e_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::Int __param_i) {
		this->self = jule::Ref<_1aae3b247_ScopeDeadCode>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_s = __param_s;
		this->_field_stmts = __param_stmts;
		this->_field_i = __param_i;
	}

	~_1aae3b247_ScopeDeadCode(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aae3b247_ScopeDeadCode(void) { this->self = jule::Ref<_1aae3b247_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ref<_1ac77dd1e_Scope>&);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(const _1aae3b247_ScopeDeadCode &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1aae3b247_ScopeDeadCode &_Src) const { return !this->operator==(_Src); }
};


struct _1aae7037a_IndexRangeSetter: public _1aae7037a_RangeSetter {
	jule::Ref<_1aae7037a_IndexRangeSetter> self{};

	~_1aae7037a_IndexRangeSetter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aae7037a_IndexRangeSetter(void) { this->self = jule::Ref<_1aae7037a_IndexRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_1aca3647d_Var>,jule::Ref<_1aca3647d_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_1aca3647d_Var>,jule::Ref<_1aca3647d_Var>,jule::Str);


	inline bool operator==(const _1aae7037a_IndexRangeSetter &_Src) const { return true; }

	inline bool operator!=(const _1aae7037a_IndexRangeSetter &_Src) const { return !this->operator==(_Src); }
};


struct _1aae7037a_MapRangeSetter: public _1aae7037a_RangeSetter {
	jule::Ref<_1aae7037a_MapRangeSetter> self{};

	~_1aae7037a_MapRangeSetter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1aae7037a_MapRangeSetter(void) { this->self = jule::Ref<_1aae7037a_MapRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_1aca3647d_Var>,jule::Ref<_1aca3647d_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_1aca3647d_Var>,jule::Ref<_1aca3647d_Var>,jule::Str);


	inline bool operator==(const _1aae7037a_MapRangeSetter &_Src) const { return true; }

	inline bool operator!=(const _1aae7037a_MapRangeSetter &_Src) const { return !this->operator==(_Src); }
};


inline jule::Int _1d0647599_get_last_errno(void);
inline jule::Str _1a8908684_byte_ptr_to_str(jule::U8*);
inline jule::Int _1a8908684_stat(jule::U8*,struct stat*);
inline jule::Int _1a8908684_open(jule::U8*,jule::Int,jule::Int);
inline jule::U8* _1a8908684_getcwd(jule::U8*,jule::Uint);
inline DIR* _1a8908684_opendir(jule::U8*);
inline struct dirent* _1a8908684_readdir(DIR*);
inline jule::Int _1a8908684_closedir(DIR*);
inline jule::Int _1a8908684_chdir(jule::U8*);
inline jule::Int _1a8908684_remove(jule::U8*);
inline jule::Int _1a8908684_mkdir(jule::U8*,jule::Int);
inline jule::Int _1a8908684_rmdir(jule::U8*);
inline jule::Int _1a8908684_unlink(jule::U8*);
inline jule::I64 _1b6bcde9b_seek(jule::Int,jule::I64,jule::Int);
inline jule::Int _1b6bcde9b_read(jule::Int,void*,jule::Uint);
inline jule::Int _1b6bcde9b_close(jule::Int);
inline jule::Int _1b6bcde9b_write(jule::Int,void*,jule::Uint);
inline void _1b6bcde9b_exit(jule::Int);
inline void* _1b6c0aa55_malloc(jule::Uint);
inline void* _1b6c0aa55_calloc(jule::Uint,jule::Uint);
inline void* _1b6c0aa55_realloc(void*,jule::Uint);
inline void _1b6c0aa55_free(void*);
inline jule::Int _1d0635da1_get_last_os_error(void);
inline std::tuple<jule::Str,jule::Int> _1d063b77a_working_dir(void);
inline jule::Int _1d063b77a_set_working_dir(jule::Str);
inline void _1d063b77a_init(void);
inline std::tuple<jule::Str,jule::Int> _1d0642d25___getwd(void);
inline jule::Int _1d0642d25___chdir(jule::Str);
inline jule::Str _1d05b5e41_clean(jule::Str);
inline jule::Str _1d05b5e41_to_slash(jule::Str);
inline jule::Str _1d05b5e41_from_slash(jule::Str);
inline jule::Str _1d05b5e41_join(jule::Slice<jule::Str>);
inline jule::Str _1d05b5e41_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1d05b5e41_abs(jule::Str);
inline jule::Str _1d05b5e41_base(jule::Str);
inline jule::Str _1d05b5e41_dir(jule::Str);
inline jule::Str _1d05b5e41_volume_name(jule::Str);
inline jule::Bool _1d05b6040_is_path_sep(jule::U8);
inline jule::Bool _1d05b6040_is_abs(jule::Str);
inline jule::Int _1d05b6040_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1d05b6040___abs(jule::Str);
inline jule::Str _1d05b6040_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _1d05b6040___join(jule::Slice<jule::Str>);
inline jule::Int _1aa1ac035_leading_zeros(jule::Uint);
inline jule::Int _1aa1ac035_leading_zeros8(jule::U8);
inline jule::Int _1aa1ac035_leading_zeros16(jule::U16);
inline jule::Int _1aa1ac035_leading_zeros32(jule::U32);
inline jule::Int _1aa1ac035_leading_zeros64(jule::U64);
inline jule::Int _1aa1ac035_trailing_zeros(jule::Uint);
inline jule::Int _1aa1ac035_trailing_zeros8(jule::U8);
inline jule::Int _1aa1ac035_trailing_zeros16(jule::U16);
inline jule::Int _1aa1ac035_trailing_zeros32(jule::U32);
inline jule::Int _1aa1ac035_trailing_zeros64(jule::U64);
inline jule::Int _1aa1ac035_ones_count(jule::Uint);
inline jule::Int _1aa1ac035_ones_count8(jule::U8);
inline jule::Int _1aa1ac035_ones_count16(jule::U16);
inline jule::Int _1aa1ac035_ones_count32(jule::U32);
inline jule::Int _1aa1ac035_ones_count64(jule::U64);
inline jule::Uint _1aa1ac035_rotate_left(jule::Uint,jule::Int);
inline jule::U8 _1aa1ac035_rotate_left8(jule::U8,jule::Int);
inline jule::U16 _1aa1ac035_rotate_left16(jule::U16,jule::Int);
inline jule::U32 _1aa1ac035_rotate_left32(jule::U32,jule::Int);
inline jule::U64 _1aa1ac035_rotate_left64(jule::U64,jule::Int);
inline jule::Uint _1aa1ac035_reverse(jule::Uint);
inline jule::U8 _1aa1ac035_reverse8(jule::U8);
inline jule::U16 _1aa1ac035_reverse16(jule::U16);
inline jule::U32 _1aa1ac035_reverse32(jule::U32);
inline jule::U64 _1aa1ac035_reverse64(jule::U64);
inline jule::Uint _1aa1ac035_reverse_bytes(jule::Uint);
inline jule::U16 _1aa1ac035_reverse_bytes16(jule::U16);
inline jule::U32 _1aa1ac035_reverse_bytes32(jule::U32);
inline jule::U64 _1aa1ac035_reverse_bytes64(jule::U64);
inline jule::Int _1aa1ac035_len(jule::Uint);
inline jule::Int _1aa1ac035_len8(jule::U8);
inline jule::Int _1aa1ac035_len16(jule::U16);
inline jule::Int _1aa1ac035_len32(jule::U32);
inline jule::Int _1aa1ac035_len64(jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1aa1ac035_add(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1aa1ac035_add32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1aa1ac035_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1aa1ac035_sub(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1aa1ac035_sub32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1aa1ac035_sub64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1aa1ac035_mul(jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1aa1ac035_mul32(jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1aa1ac035_mul64(jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1aa1ac035_div(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1aa1ac035_div32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1aa1ac035_div64(jule::U64,jule::U64,jule::U64);
inline jule::Uint _1aa1ac035_rem(jule::Uint,jule::Uint,jule::Uint);
inline jule::U32 _1aa1ac035_rem32(jule::U32,jule::U32,jule::U32);
inline jule::U64 _1aa1ac035_rem64(jule::U64,jule::U64,jule::U64);
inline jule::F64 _1a9a031b7_atanh(jule::F64);
inline jule::U32 _1a9a223c3_f32_bits(jule::F32);
inline jule::F32 _1a9a223c3_f32_from_bits(jule::U32);
inline jule::U64 _1a9a223c3_f64_bits(jule::F64);
inline jule::F64 _1a9a223c3_f64_from_bits(jule::U64);
inline jule::F64 _1a9a2c4aa_cos(jule::F64);
inline jule::F64 _1a9a2c4aa_sin(jule::F64);
inline jule::F64 _1a9a2cd07_tan(jule::F64);
inline jule::F64 _1a9a7a65c_mod(jule::F64,jule::F64);
inline std::tuple<jule::F64,jule::Int> _1a9a94852_frexp(jule::F64);
inline jule::F32 _1a9a7e980_nextafter32(jule::F32,jule::F32);
inline jule::F64 _1a9a7e980_nextafter(jule::F64,jule::F64);
inline jule::F64 _1a9a6b7c4_copysign(jule::F64,jule::F64);
inline std::tuple<jule::U64,jule::F64> _1a9aa7c50_trig_reduce(jule::F64);
inline jule::F64 _1a9aca228_atan2(jule::F64,jule::F64);
inline jule::F64 _1a9ac46b7_floor(jule::F64);
inline jule::F64 _1a9ac46b7_ceil(jule::F64);
inline jule::F64 _1a9ac46b7_trunc(jule::F64);
inline jule::F64 _1a9ac46b7_round(jule::F64);
inline jule::F64 _1a9ac46b7_round_even(jule::F64);
inline jule::F64 _1a9ae7454_nan(void);
inline jule::Bool _1a9ae7454_is_nan(jule::F64);
inline jule::F64 _1a9ae7454_inf(jule::Int);
inline jule::Bool _1a9ae7454_is_inf(jule::F64,jule::Int);
inline std::tuple<jule::F64,jule::Int> _1a9ae7454_normalize(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1a9b368b1_sincos(jule::F64);
inline jule::F64 _1a9b1641d_dim(jule::F64,jule::F64);
inline jule::F64 _1a9b1641d_max(jule::F64,jule::F64);
inline jule::F64 _1a9b1641d_min(jule::F64,jule::F64);
inline jule::F64 _1a9b7d386_log(jule::F64);
inline jule::F64 _1a9bac948_expm1(jule::F64);
inline jule::F64 _1a9b94d5e_abs(jule::F64);
inline jule::F64 _1a9bbccaa_j1(jule::F64);
inline jule::F64 _1a9bbccaa_y1(jule::F64);
inline jule::F64 _1a9bbccaa_pone(jule::F64);
inline jule::F64 _1a9bbccaa_qone(jule::F64);
inline jule::U64 _1a9c948dc_zero(jule::U64);
inline jule::U64 _1a9c948dc_nonzero(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1a9c948dc_shl(jule::U64,jule::U64,jule::Uint);
inline std::tuple<jule::U64,jule::U64> _1a9c948dc_shr(jule::U64,jule::U64,jule::Uint);
inline std::tuple<jule::U64,jule::U64> _1a9c948dc_shrcompress(jule::U64,jule::U64,jule::Uint);
inline jule::I32 _1a9c948dc_lz(jule::U64,jule::U64);
inline std::tuple<jule::U32,jule::I32,jule::U64> _1a9c948dc_split(jule::U64);
inline jule::F64 _1a9c948dc_fma(jule::F64,jule::F64,jule::F64);
inline std::tuple<jule::F64,jule::F64> _1a9c211a4_modf(jule::F64);
inline jule::F64 _1a9cb1354_log10(jule::F64);
inline jule::F64 _1a9cb1354_log2(jule::F64);
inline jule::F64 _1a9c2158e_hypot(jule::F64,jule::F64);
inline jule::F64 _1a9d0e3c4_j0(jule::F64);
inline jule::F64 _1a9d0e3c4_y0(jule::F64);
inline jule::F64 _1a9d0e3c4_pzero(jule::F64);
inline jule::F64 _1a9d0e3c4_qzero(jule::F64);
inline jule::F64 _1a9d8ac58_ldexp(jule::F64,jule::Int);
inline jule::Bool _1a9d10bde_signbit(jule::F64);
inline jule::F64 _1a9da3ec4_sinh(jule::F64);
inline jule::F64 _1a9da3ec4_cosh(jule::F64);
inline std::tuple<jule::F64,jule::Int> _1a9da8ec9_lgamma(jule::F64);
inline jule::F64 _1a9da8ec9_sin_pi(jule::F64);
inline jule::F64 _1a9e358c4_acosh(jule::F64);
inline jule::F64 _1a9e46ece_tanh(jule::F64);
inline jule::F64 _1a9e5ae05_cbrt(jule::F64);
inline jule::F64 _1a9e5b3ab_pow(jule::F64,jule::F64);
inline jule::Bool _1a9e5b3ab_is_odd_int(jule::F64);
inline jule::F64 _1a9e49223_exp(jule::F64);
inline jule::F64 _1a9e49223_exp2(jule::F64);
inline jule::F64 _1a9e49223_expmulti(jule::F64,jule::F64,jule::Int);
inline jule::F64 _1a9ec72c3_log1p(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1a9e5b4ee_stirling(jule::F64);
inline jule::F64 _1a9e5b4ee_gamma(jule::F64);
inline jule::Bool _1a9e5b4ee_is_neg_int(jule::F64);
inline jule::F64 _1aa002133_erfinv(jule::F64);
inline jule::F64 _1aa002133_erfcinv(jule::F64);
inline jule::F64 _1aa0b71e8_erf(jule::F64);
inline jule::F64 _1aa0b71e8_erfc(jule::F64);
inline jule::F64 _1d06aa640_pow10(jule::Int);
inline jule::F64 _1d06ec7a3_sqrt(jule::F64);
inline jule::F64 _1d0751b04_logb(jule::F64);
inline jule::Int _1d0751b04_ilogb(jule::F64);
inline jule::Int _1d0751b04__ilogb(jule::F64);
inline jule::F64 _1d0751065_jn(jule::Int,jule::F64);
inline jule::F64 _1d0751065_yn(jule::Int,jule::F64);
inline jule::F64 _1aa13c559_remainder(jule::F64,jule::F64);
inline jule::F64 _1aa13c6d0_xatan(jule::F64);
inline jule::F64 _1aa13c6d0_satan(jule::F64);
inline jule::F64 _1aa13c6d0_atan(jule::F64);
inline jule::F64 _1aa177de1_asin(jule::F64);
inline jule::F64 _1aa177de1_acos(jule::F64);
inline jule::F64 _1aa15d47b_asinh(jule::F64);
inline std::tuple<jule::Bool,jule::Int> _1b6bc2720_conv_bool(jule::Str);
inline jule::Str _1b6bc2720_fmt_bool(jule::Bool);
inline jule::Str _1b6c49115_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _1b6c49115_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _1b6c49115_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1b6c49115_FloatInfo&);
inline jule::Slice<jule::U8> _1b6c49115_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_1b6c49115_DecimalSlice,jule::Int,jule::U8);
inline void _1b6c49115_round_shortest(_1a99596b2_Decimal&,jule::U64,jule::Int,_1b6c49115_FloatInfo&);
inline jule::Slice<jule::U8> _1b6c49115_fmt_e(jule::Slice<jule::U8>,jule::Bool,_1b6c49115_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _1b6c49115_fmt_f(jule::Slice<jule::U8>,jule::Bool,_1b6c49115_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _1b6c49115_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_1b6c49115_FloatInfo&);
inline jule::Slice<jule::U8> _1b6c49115_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1b6c49115_FloatInfo&);
inline jule::Int _1b6c49115_min(jule::Int,jule::Int);
inline jule::Int _1b6c49115_max(jule::Int,jule::Int);
inline jule::U8 _1a8943c85_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _1a8943c85_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _1a8943c85_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _1a89462e8_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1a89462e8_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _1a8977813_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _1a8977813_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1a8977813_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1a8977813_atof64_exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Bool> _1a8977813_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1a8977813_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _1a8977813_atof_hex(jule::Str,_1b6c49115_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _1a8977813_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1a8977813_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1a8977813_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _1a8977813_parse_float(jule::Str,jule::Int);
inline void _1a9892d7b_ryu_ftoa_fixed32(_1b6c49115_DecimalSlice&,jule::U32,jule::Int,jule::Int);
inline void _1a9892d7b_ryu_ftoa_fixed64(_1b6c49115_DecimalSlice&,jule::U64,jule::Int,jule::Int);
inline void _1a9892d7b_format_decimal(_1b6c49115_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _1a9892d7b_ryu_ftoa_shortest(_1b6c49115_DecimalSlice&,jule::U64,jule::Int,_1b6c49115_FloatInfo&);
inline jule::Int _1a9892d7b_mul_by_log2_log10(jule::Int);
inline jule::Int _1a9892d7b_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1a9892d7b_compute_bounds(jule::U64,jule::Int,_1b6c49115_FloatInfo&);
inline void _1a9892d7b_ryu_digits(_1b6c49115_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _1a9892d7b_ryu_digits32(_1b6c49115_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _1a9892d7b_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _1a9892d7b_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _1a9892d7b_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _1a9892d7b_divmod1e9(jule::U64);
inline jule::Int _1a99596b2_digit_zero(jule::Slice<jule::U8>);
inline void _1a99596b2_trim(_1a99596b2_Decimal&);
inline void _1a99596b2_right_shift(_1a99596b2_Decimal&,jule::Uint);
inline jule::Bool _1a99596b2_prefix_is_less_than(jule::Slice<jule::U8>,jule::Str);
inline void _1a99596b2_left_shift(_1a99596b2_Decimal&,jule::Uint);
inline jule::Bool _1a99596b2_should_round_up(_1a99596b2_Decimal&,jule::Int);
inline jule::Str _1a99c0d11_fmt_uint(jule::U64,jule::Int);
inline jule::Str _1a99c0d11_fmt_int(jule::I64,jule::Int);
inline jule::Str _1a99c0d11_itoa(jule::Int);
inline jule::Str _1a99c0d11_small(jule::Int);
inline jule::Bool _1a99c0d11_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1a99c0d11_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline void _1aa179596_exit(jule::Int);
inline jule::Str _1aa179596_executable(void);
inline jule::Bool _1d068267d_is_std_header_path(jule::Str);
inline jule::Bool _1d068267d_is_valid_header_ext(jule::Str);
inline jule::Bool _1d068267d_is_valid_cpp_ext(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1d0682903_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1d0682903_check_arch(jule::Str);
inline jule::Bool _1d0682903_is_pass_file_annotation(jule::Str);
inline jule::Str _1d068165a_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1d068165a_arg_to_str(jule::Any);
inline jule::Int _1d068165a_find_next_fmt(jule::Str);
inline jule::Str _1d068165a_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1b6b6baa4_is_top_directive(jule::Str);
inline jule::Bool _1b6ba767d_is_windows(jule::Str);
inline jule::Bool _1b6ba767d_is_darwin(jule::Str);
inline jule::Bool _1b6ba767d_is_linux(jule::Str);
inline jule::Bool _1b6ba767d_is_i386(jule::Str);
inline jule::Bool _1b6ba767d_is_amd64(jule::Str);
inline jule::Bool _1b6ba767d_is_arm64(jule::Str);
inline jule::Bool _1b6ba767d_is_unix(jule::Str);
inline jule::Bool _1b6ba767d_is_32bit(jule::Str);
inline jule::Bool _1b6ba767d_is_64bit(jule::Str);
inline void _1d0595937_exit_err(jule::Str);
inline void _1d0595937_init(void);
inline jule::Bool _1d059d995_is_jule(jule::Str);
inline jule::Int _1aaed8d3e_get_last_fs_error(void);
inline std::tuple<jule::Ref<_1ab00383c_File>,jule::Int> _1aaed9548_open(jule::Str,jule::Int,jule::Int);
inline jule::Int _1aaed9548_remove_file(jule::Str);
inline std::tuple<jule::Ref<_1ab004a80_Status>,jule::Int> _1aaed9867_stat(jule::Str);
inline std::tuple<jule::Slice<jule::U8>,jule::Int> _1ab00383c_read_file(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_1aaee94d1_DirEntry>>,jule::Int> _1ab03d6bd_read_dir(jule::Str);
inline jule::Int _1ab03d6bd_create_dir(jule::Str);
inline jule::Int _1ab03d6bd_remove_dir(jule::Str);
inline jule::Bool _1ab211a6c_is_graphic(jule::I32);
inline jule::Bool _1ab211a6c_is_in(jule::I32,jule::Slice<jule::Ref<_1ab2133dc_RangeTable>>);
inline jule::Bool _1ab211a6c_is_letter(jule::I32);
inline jule::Bool _1ab211a6c_is_number(jule::I32);
inline jule::Bool _1ab211a6c_is_punct(jule::I32);
inline jule::Bool _1ab211a6c_is_space(jule::I32);
inline jule::Bool _1abe359e3_is_digit(jule::I32);
inline std::tuple<jule::I32,jule::Bool> _1ab2133dc___to(jule::Int,jule::I32,jule::Slice<_1ab2133dc_CaseRange>);
inline jule::I32 _1ab2133dc_to(jule::Int,jule::I32);
inline jule::I32 _1ab2133dc_to_upper(jule::I32);
inline jule::I32 _1ab2133dc_to_lower(jule::I32);
inline jule::Bool _1ab2133dc_is16(jule::Slice<_1ab2133dc_Range16>,jule::U16);
inline jule::Bool _1ab2133dc_is32(jule::Slice<_1ab2133dc_Range32>,jule::U32);
inline jule::Bool _1ab2133dc_is(jule::Ref<_1ab2133dc_RangeTable>,jule::I32);
inline jule::Bool _1ab2133dc_is_excluding_latin(jule::Ref<_1ab2133dc_RangeTable>,jule::I32);
inline jule::Bool _1ab2133dc_is_upper(jule::I32);
inline jule::Bool _1ab2133dc_is_lower(jule::I32);
inline jule::Bool _1ab21c902_full_rune(jule::Slice<jule::U8>);
inline jule::Bool _1ab21c902_full_rune_str(jule::Str);
inline std::tuple<jule::I32,jule::Int> _1ab21c902_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _1ab21c902_decode_rune_str(jule::Str);
inline std::tuple<jule::I32,jule::Int> _1ab21c902_decode_last_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _1ab21c902_decode_last_rune_str(jule::Str);
inline jule::Int _1ab21c902_rune_len(jule::I32);
inline jule::Int _1ab21c902_encode_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1ab21c902_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1ab21c902_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::Int _1ab21c902_rune_count(jule::Slice<jule::U8>);
inline jule::Int _1ab21c902_rune_count_str(jule::Str);
inline jule::Bool _1ab21c902_rune_start(jule::U8);
inline jule::Bool _1ab21c902_valid(jule::Slice<jule::U8>);
inline jule::Bool _1ab21c902_valid_str(jule::Str);
inline jule::Bool _1ab21c902_valid_rune(jule::I32);
inline jule::Bool _1ab0277b7_is_unary_op(jule::Str);
inline jule::Bool _1ab0277b7_is_bin_op(jule::Str);
inline jule::Bool _1ab0277b7_is_weak_op(jule::Str);
inline jule::Bool _1ab0277b7_is_str(jule::Str);
inline jule::Bool _1ab0277b7_is_raw_str(jule::Str);
inline jule::Bool _1ab0277b7_is_rune(jule::Str);
inline jule::Bool _1ab0277b7_is_nil(jule::Str);
inline jule::Bool _1ab0277b7_is_bool(jule::Str);
inline jule::Bool _1ab0277b7_contains_any(jule::Str,jule::Str);
inline jule::Bool _1ab0277b7_is_float(jule::Str);
inline jule::Bool _1ab0277b7_is_num(jule::Str);
inline jule::Bool _1ab0277b7_is_lit(jule::Str);
inline jule::Bool _1ab0277b7_is_ignore_ident(jule::Str);
inline jule::Bool _1ab0277b7_is_anon_ident(jule::Str);
inline jule::Bool _1ab0277b7_is_punct(jule::I32);
inline jule::Bool _1ab0277b7_is_space(jule::I32);
inline jule::Bool _1ab0277b7_is_letter(jule::I32);
inline jule::Bool _1ab0277b7_is_ident_rune(jule::Str);
inline jule::Bool _1ab0277b7_is_decimal(jule::U8);
inline jule::Bool _1ab0277b7_is_binary(jule::U8);
inline jule::Bool _1ab0277b7_is_octal(jule::U8);
inline jule::Bool _1ab0277b7_is_hex(jule::U8);
inline jule::Bool _1ab0277b7_is_assign(jule::Uint);
inline jule::Bool _1ab0277b7_is_postfix_op(jule::Str);
inline jule::Bool _1ab0277b7_is_assign_op(jule::Str);
inline jule::Ref<_1ab029324_File> _1ab029324_new_file_set(jule::Str);
inline _1d068165a_Log _1ab00b922_make_err(jule::Int,jule::Int,jule::Ref<_1ab029324_File>,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ab00b922_bytes_has_prefix(jule::Slice<jule::U8>,jule::Str);
inline jule::Str _1ab00b922_float_fmt_e(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _1ab00b922_float_fmt_p(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _1ab00b922_float_fmt_dotnp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _1ab00b922_float_fmt_dotfp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _1ab00b922_float_fmt_dotp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _1ab00b922_float_num(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _1ab00b922_common_num(jule::Slice<jule::U8>);
inline jule::Str _1ab00b922_binary_num(jule::Slice<jule::U8>);
inline jule::Bool _1ab00b922_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _1ab00b922_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _1ab00b922_is_float_fmt_dotnp(jule::Slice<jule::U8>,jule::Int);
inline jule::Bool _1ab00b922_is_float_fmt_dotp(jule::Slice<jule::U8>,jule::Int);
inline jule::Bool _1ab00b922_is_float_fmt_dotfp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _1ab00b922_octal_num(jule::Slice<jule::U8>);
inline jule::Str _1ab00b922_hex_num(jule::Slice<jule::U8>);
inline jule::Str _1ab00b922_hex_escape(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _1ab00b922_big_unicode_point_escape(jule::Slice<jule::U8>);
inline jule::Str _1ab00b922_little_unicode_point_escape(jule::Slice<jule::U8>);
inline jule::Str _1ab00b922_hex_byte_escape(jule::Slice<jule::U8>);
inline jule::Str _1ab00b922_byte_escape(jule::Slice<jule::U8>);
inline jule::Slice<_1d068165a_Log> _1ab00b922_lex(jule::Ref<_1ab029324_File>);
inline jule::Ref<_1ab059068_FileInfo> _1ab059068_parse_file(jule::Ref<_1ab029324_File>);
inline jule::Ref<_1ab059068_PackageInfo> _1ab059068_parse_package(jule::Slice<jule::Ref<_1ab029324_File>>);
inline std::tuple<jule::Ref<_1ab026d8d_Ast>,jule::Slice<_1d068165a_Log>> _1ab059068_parse_fileset(jule::Ref<_1ab029324_File>);
inline jule::Ref<_1aaeea1c4_ScopeTree> _1ab05bd18_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1ab05bd18_is_st(_1ab0277b7_Token,_1ab0277b7_Token);
inline std::tuple<jule::Int,jule::Bool> _1ab05bd18_next_st_pos(jule::Slice<_1ab0277b7_Token>,jule::Int);
inline std::tuple<jule::Slice<_1ab0277b7_Token>,jule::Bool> _1ab05bd18_skip_st(jule::Int&,jule::Slice<_1ab0277b7_Token>);
inline jule::Slice<jule::Ref<_1ab05bd18_Stmt>> _1ab05bd18_split_stms(jule::Slice<_1ab0277b7_Token>);
inline jule::Slice<_1ab0277b7_Token> _1ab060d50_is_fn_call(jule::Slice<_1ab0277b7_Token>);
inline jule::Ref<_1ab060d50_CallData> _1ab060d50_get_call_data(jule::Slice<_1ab0277b7_Token>);
inline jule::Slice<_1ab0277b7_Token> _1ab060d50_get_block_expr(jule::Slice<_1ab0277b7_Token>);
inline std::tuple<jule::Slice<_1ab0277b7_Token>,jule::Slice<_1ab0277b7_Token>> _1ab060d50_split_colon(jule::Slice<_1ab0277b7_Token>);
inline jule::Slice<_1ab0277b7_Token> _1ab060d50_eliminate_comments(jule::Slice<_1ab0277b7_Token>);
inline jule::Int _1ab060d50_find_lowest_prec_op(jule::Slice<_1ab0277b7_Token>);
inline jule::Ref<_1aaeea1c4_IdentExpr> _1ab060d50_build_ident_expr(_1ab0277b7_Token);
inline std::tuple<jule::Slice<_1ab0277b7_Token>,jule::Int> _1ab060d50_get_range_expr_tokens(jule::Slice<_1ab0277b7_Token>);
inline jule::Bool _1ab09d6b7_check_assign_tokens(jule::Slice<_1ab0277b7_Token>);
inline _1d068165a_Log _1ac1ba56e_make_err(jule::Int,jule::Int,jule::Ref<_1ab029324_File>,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_1ab0277b7_Token> _1ac1ba56e_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_1ab0277b7_Token>);
inline std::tuple<jule::Slice<_1ab0277b7_Token>,jule::Slice<_1ab0277b7_Token>> _1ac1ba56e_range_last(jule::Slice<_1ab0277b7_Token>);
inline std::tuple<jule::Slice<jule::Slice<_1ab0277b7_Token>>,jule::Slice<_1d068165a_Log>> _1ac1ba56e_parts(jule::Slice<_1ab0277b7_Token>,jule::Uint,jule::Bool);
inline jule::Str _1ac1ba56e_get_close_kind_of_brace(jule::Str);
inline _1d068165a_Log _1ac1ba56e_compiler_err(_1ab0277b7_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1ac1ba56e_push_suggestion(_1d068165a_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ref<_1aaeea1c4_Comment> _1ac1ba56e_build_comment(_1ab0277b7_Token);
inline jule::Str _1ac1ba56e_tokstoa(jule::Slice<_1ab0277b7_Token>);
inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_build_void_type(void);
inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_build_prim_type(_1ab0277b7_Token);
inline std::tuple<jule::Slice<_1ab0277b7_Token>,jule::Int> _1ac308844_split_map_range(jule::Slice<_1ab0277b7_Token>,jule::Int&);
inline void _1ad6d5cec_lshift_unsig(_1ad6d5cec_Const&,_1ad6d5cec_Const&);
inline void _1ad6d5cec_rshift_unsig(_1ad6d5cec_Const&,_1ad6d5cec_Const&);
inline jule::Bool _1ad6d7e31_check_bit(jule::Str,jule::Int,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>);
inline jule::Str _1ad6d7e31_real_kind_of(jule::Str);
inline jule::Int _1ad6d7e31_bitsize_of(jule::Str);
inline jule::Str _1ad6d7e31_int_from_bits(jule::U64);
inline jule::Str _1ad6d7e31_uint_from_bits(jule::U64);
inline jule::Str _1ad6d7e31_float_from_bits(jule::U64);
inline jule::Bool _1ad6d7e31_check_bit_int(jule::Str,jule::Int);
inline jule::Bool _1ad6d7e31_check_bit_uint(jule::Str,jule::Int);
inline jule::Bool _1ad6d7e31_check_bit_float(jule::Str,jule::Int);
inline jule::U64 _1ad6d7e31_bitsize_of_float(jule::F64);
inline jule::U64 _1ad6d7e31_bitsize_of_int(jule::I64);
inline jule::U64 _1ad6d7e31_bitsize_of_uint(jule::U64);
inline jule::F64 _1ad6d61a4_min(jule::Str);
inline jule::F64 _1ad6d61a4_max(jule::Str);
inline jule::Bool _1ad7937e4_is_i8_compatible(jule::Str);
inline jule::Bool _1ad7937e4_is_i16_compatible(jule::Str);
inline jule::Bool _1ad7937e4_is_i32_compatible(jule::Str);
inline jule::Bool _1ad7937e4_is_i64_compatible(jule::Str);
inline jule::Bool _1ad7937e4_is_u8_compatible(jule::Str);
inline jule::Bool _1ad7937e4_is_u16_compatible(jule::Str);
inline jule::Bool _1ad7937e4_is_u32_compatible(jule::Str);
inline jule::Bool _1ad7937e4_is_u64_compatible(jule::Str);
inline jule::Bool _1ad7937e4_is_f32_compatible(jule::Str);
inline jule::Bool _1ad7937e4_is_f64_compatible(jule::Str);
inline jule::Bool _1ad7937e4_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _1ad7937e4_is_i16_greater(jule::Str);
inline jule::Bool _1ad7937e4_is_i32_greater(jule::Str);
inline jule::Bool _1ad7937e4_is_i64_greater(jule::Str);
inline jule::Bool _1ad7937e4_is_u8_greater(jule::Str);
inline jule::Bool _1ad7937e4_is_u16_greater(jule::Str);
inline jule::Bool _1ad7937e4_is_u32_greater(jule::Str);
inline jule::Bool _1ad7937e4_is_u64_greater(jule::Str);
inline jule::Bool _1ad7937e4_is_f32_greater(jule::Str);
inline jule::Bool _1ad7937e4_is_f64_greater(jule::Str);
inline jule::Bool _1ad7937e4_is_greater(jule::Str,jule::Str);
inline jule::Bool _1ad70d41d_is_sig_int(jule::Str);
inline jule::Bool _1ad70d41d_is_unsig_int(jule::Str);
inline jule::Bool _1ad70d41d_is_int(jule::Str);
inline jule::Bool _1ad70d41d_is_float(jule::Str);
inline jule::Bool _1ad70d41d_is_num(jule::Str);
inline jule::Bool _1ad70d41d_is_sig_num(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1ad903767_is_byte_lit(jule::Str);
inline jule::I32 _1ad903767_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1ad903767_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1ad903767_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1ad903767_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1ad903767_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Str _1ad903767_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Str _1ac699a1a_str_repeat(jule::Str,jule::Int);
inline jule::Str _1ac699a1a_build_doc(jule::Ref<_1aaeea1c4_CommentGroup>);
inline jule::Ref<_1ad3e617d_TypeSymbol> _1ac699a1a_build_type(jule::Ref<_1aaeea1c4_TypeDecl>);
inline jule::Ref<_1acde49c3_Value> _1ac699a1a_build_expr(jule::Ref<_1aaeea1c4_Expr>);
inline jule::Ref<_1ad3e617d_TypeAlias> _1ac699a1a_build_type_alias(jule::Ref<_1aaeea1c4_TypeAliasDecl>);
inline jule::Ref<_1ab064271_Field> _1ac699a1a_build_field(jule::Ref<_1aaeea1c4_FieldDecl>);
inline jule::Slice<jule::Ref<_1ab064271_Field>> _1ac699a1a_build_fields(jule::Slice<jule::Ref<_1aaeea1c4_FieldDecl>>);
inline jule::Ref<_1ab064271_Struct> _1ac699a1a_build_struct(jule::Ref<_1aaeea1c4_StructDecl>);
inline jule::Ref<_1ab07a50c_Param> _1ac699a1a_build_param(jule::Ref<_1aaeea1c4_ParamDecl>);
inline jule::Slice<jule::Ref<_1ab07a50c_Param>> _1ac699a1a_build_params(jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>>);
inline jule::Ref<_1ab07a50c_RetType> _1ac699a1a_build_ret_type(jule::Ref<_1aaeea1c4_RetTypeDecl>);
inline jule::Ref<_1ab07a50c_Fn> _1ac699a1a_build_fn(jule::Ref<_1aaeea1c4_FnDecl>);
inline jule::Slice<jule::Ref<_1ab07a50c_Fn>> _1ac699a1a_build_methods(jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>>);
inline jule::Ref<_1ac276c57_Trait> _1ac699a1a_build_trait(jule::Ref<_1aaeea1c4_TraitDecl>);
inline jule::Ref<_1ac7804a2_EnumItem> _1ac699a1a_build_enum_item(jule::Ref<_1aaeea1c4_EnumItemDecl>);
inline jule::Slice<jule::Ref<_1ac7804a2_EnumItem>> _1ac699a1a_build_enum_items(jule::Slice<jule::Ref<_1aaeea1c4_EnumItemDecl>>);
inline jule::Ref<_1ac7804a2_Enum> _1ac699a1a_build_enum(jule::Ref<_1aaeea1c4_EnumDecl>);
inline jule::Ref<_1aca3647d_Var> _1ac699a1a_build_var(jule::Ref<_1aaeea1c4_VarDecl>);
inline jule::Ref<_1ac780837_Impl> _1ac699a1a_build_impl(jule::Ref<_1aaeea1c4_Impl>);
inline jule::Ref<_1ac77dd1e_ScopeChecker> _1ac77dd1e_new_scope_checker_base(jule::Ref<_1ac7ccb09_Sema>,jule::Ref<_1ab07a50c_FnIns>);
inline jule::Ref<_1ac77dd1e_ScopeChecker> _1ac77dd1e_new_scope_checker(jule::Ref<_1ac7ccb09_Sema>,jule::Ref<_1ab07a50c_FnIns>);
inline jule::Ref<_1ac77dd1e_ScopeLabel> _1ac77dd1e_find_label_parent(jule::Str,jule::Ref<_1ac77dd1e_ScopeChecker>);
inline jule::Int _1ac77dd1e_count_match_type(jule::Ref<_1ac77dd1e_Match>,jule::Ref<_1ad3e617d_TypeKind>);
inline jule::Slice<jule::Ref<_1acde49c3_Data>> _1ac77dd1e_get_datas_from_tuple_data(jule::Ref<_1acde49c3_Data>);
inline jule::Slice<jule::Any> _1ac77dd1e_get_expr_models(jule::Any);
inline jule::Bool _1ac77dd1e_check_mut(jule::Ref<_1ac7ccb09_Sema>,jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);
inline jule::Bool _1ac77dd1e_check_assign(jule::Ref<_1ac7ccb09_Sema>,jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>,_1ab0277b7_Token);
inline jule::Bool _1ac77dd1e_is_valid_ast_st_for_next_st(jule::Any);
inline jule::Bool _1ac77dd1e_is_valid_st_for_next_st(jule::Any);
inline jule::Bool _1ac77dd1e_st_is_def(jule::Any);
inline jule::Ref<_1aca3647d_Var> _1ac78be4d_find_var_in_package(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_1ad3e617d_TypeAlias> _1ac78be4d_find_type_alias_in_package(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_1ab064271_Struct> _1ac78be4d_find_struct_in_package(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_1ab07a50c_Fn> _1ac78be4d_find_fn_in_package(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_1ac276c57_Trait> _1ac78be4d_find_trait_in_package(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>>,jule::Str);
inline jule::Ref<_1ac7804a2_Enum> _1ac78be4d_find_enum_in_package(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>>,jule::Str);
inline _1d068165a_Log _1ac7ccb09_compiler_err(_1ab0277b7_Token,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ac7ccb09_imp_is_lookupable(jule::Ref<_1ac78be4d_ImportInfo>,jule::Str);
inline jule::Slice<jule::Ref<_1aca3647d_Var>> _1ac7ccb09_build_ret_vars(jule::Ref<_1ab07a50c_FnIns>);
inline jule::Slice<jule::Ref<_1aca3647d_Var>> _1ac7ccb09_build_param_vars(jule::Ref<_1ab07a50c_FnIns>);
inline jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>> _1ac7ccb09_build_generic_type_aliases(jule::Ref<_1ab07a50c_FnIns>);
inline jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_find_file(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>>,jule::Ref<_1ab029324_File>);
inline std::tuple<jule::Bool,jule::Bool> _1ac7ccb09_conditional_has_ret(jule::Ref<_1ac77dd1e_Conditional>);
inline jule::Bool _1ac7ccb09_match_has_ret(jule::Ref<_1ac77dd1e_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1ac7ccb09___has_ret(jule::Ref<_1ac77dd1e_Scope>);
inline jule::Bool _1ac7ccb09_has_ret(jule::Ref<_1ac77dd1e_Scope>);
inline void _1ac7ccb09_push_suggestion(_1d068165a_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ref<_1ad3e617d_TypeKind>> _1acc33119_get_fn_result_types(jule::Ref<_1ab07a50c_FnIns>);
inline jule::Bool _1acc33119_trait_has_reference_receiver(jule::Ref<_1ac276c57_Trait>);
inline jule::Bool _1acc33119_float_assignable(jule::Str,jule::Ref<_1acde49c3_Data>);
inline jule::Bool _1acc33119_sig_assignable(jule::Str,jule::Ref<_1acde49c3_Data>);
inline jule::Bool _1acc33119_unsig_assignable(jule::Str,jule::Ref<_1acde49c3_Data>);
inline jule::Bool _1acc33119_int_assignable(jule::Str,jule::Ref<_1acde49c3_Data>);
inline jule::Any _1acde49c3_find_builtins_import(jule::Str,jule::Ref<_1ac78be4d_ImportInfo>);
inline jule::Any _1acde49c3_find_builtins_sema(jule::Str,jule::Ref<_1ac7ccb09_Sema>);
inline jule::Bool _1acde49c3_is_ok_for_shifting(jule::Ref<_1acde49c3_Data>);
inline jule::Bool _1acde49c3_is_instanced_struct(jule::Ref<_1ab064271_StructIns>);
inline void _1acde49c3_normalize_bitsize(jule::Ref<_1acde49c3_Data>);
inline void _1acde49c3_normalize_type(jule::Ref<_1acde49c3_Data>);
inline void _1acde49c3_apply_cast_kind_model(jule::Ref<_1acde49c3_Data>);
inline void _1acde49c3_apply_cast_kind(jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1acde49c3_build_void_data(void);
inline jule::Str _1acde49c3_kind_by_bitsize(jule::Any);
inline jule::Str _1acde49c3_check_data_for_integer_indexing(jule::Ref<_1acde49c3_Data>);
inline jule::Bool _1ad3e617d_can_get_ptr(jule::Ref<_1acde49c3_Data>);
inline jule::Bool _1ad3e617d_is_lvalue(jule::Ref<_1ad3e617d_TypeKind>);
inline jule::Bool _1ad3e617d_is_mut(jule::Ref<_1ad3e617d_TypeKind>);
inline jule::Bool _1ad3e617d_supports_cloning(jule::Ref<_1ad3e617d_TypeKind>);
inline jule::Bool _1ad3e617d_is_nil_compatible(jule::Ref<_1ad3e617d_TypeKind>);
inline jule::Bool _1ad3e617d_is_valid_for_ref(jule::Ref<_1ad3e617d_TypeKind>);
inline jule::Bool _1ad3e617d_is_variadicable(jule::Ref<_1ad3e617d_TypeKind>);
inline jule::Str _1ad3e617d_build_link_path_by_tokens(jule::Slice<_1ab0277b7_Token>);
inline jule::Ref<_1ad3e617d_Prim> _1ad3e617d_build_prim_type(jule::Str);
inline jule::Ref<_1ab064271_Struct> _1ad3e617d_get_struct_from_kind(jule::Ref<_1ad3e617d_TypeKind>);
inline jule::Bool _1ad3e617d_is_prim(jule::Str);
inline std::tuple<jule::Ref<_1acd9639d_SymbolTable>,jule::Slice<_1d068165a_Log>> _1ad4a0886_build_symbols(jule::Ref<_1ab026d8d_Ast>,jule::Trait<_1ac78be4d_Importer>,jule::Ref<_1ac699a1a_SymbolBuilder>);
inline std::tuple<jule::Ref<_1ac78be4d_Package>,jule::Slice<_1d068165a_Log>> _1ad4a0886___analyze_package(jule::Slice<jule::Ref<_1ab026d8d_Ast>>,jule::Trait<_1ac78be4d_Importer>);
inline std::tuple<jule::Ref<_1ac78be4d_Package>,jule::Slice<_1d068165a_Log>> _1ad4a0886_analyze_package(jule::Slice<jule::Ref<_1ab026d8d_Ast>>,jule::Trait<_1ac78be4d_Importer>);
inline std::tuple<jule::Ref<_1acd9639d_SymbolTable>,jule::Slice<_1d068165a_Log>> _1ad4a0886_analyze_file(jule::Ref<_1ab026d8d_Ast>,jule::Trait<_1ac78be4d_Importer>);
inline void _1ad5a38bd_init(void);
inline jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_find_builtin_fn(jule::Str);
inline jule::Ref<_1ad3e617d_TypeAlias> _1ad5a38bd_find_builtin_type_alias(jule::Str);
inline jule::Ref<_1ac276c57_Trait> _1ad5a38bd_find_builtin_trait(jule::Str);
inline jule::Any _1ad5a38bd_find_builtin_def(jule::Str);
inline jule::Any _1ad5a38bd_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1ad5a38bd_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_common_plain(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_common(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_common_mut(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_out(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_outln(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_new(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_real(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_drop(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_panic(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_make(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_append(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_copy(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_recover(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_clone(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_std_mem_size_of(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_std_mem_align_of(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>);
inline jule::Bool _1aae6bc28_eval_directive_ident(jule::Str);
inline jule::Bool _1aae6bc28_eval_directive_part(jule::Str);
inline jule::Slice<jule::Str> _1aae6bc28_split_operans(jule::Str,jule::Str);
inline jule::Bool _1aae6bc28_eval_directive_expr(jule::Str);
inline void _1aae806a9_set_os_flags(void);
inline void _1aae806a9_set_arch_flags(void);
inline void _1aae806a9_init(void);
inline void _1aae95878_exit_err(jule::Str);
inline jule::Slice<jule::U8> _1aae95878_read_buff(jule::Str);
inline _1d068165a_Log _1aae95878_flat_compiler_err(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_1aaee94d1_DirEntry>>,jule::Str> _1aae95878_read_package_dirents(jule::Str);
inline jule::Str _1aae95878_concat_all_parts(jule::Slice<jule::Str>);
inline jule::Bool _1aae95878_is_pass_build_directives(jule::Ref<_1ab026d8d_Ast>&);
inline void _1aae4981b_push_passes(jule::Ref<_1ac78be4d_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1aae4981b_get_all_unique_passes(jule::Ref<_1ac78be4d_Package>&,jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>>);
inline jule::Bool _1aadca5e3_is_exist_0(jule::Slice<jule::Any>,jule::Ref<_1ab07a50c_FnIns>);
inline jule::Bool _1aadca5e3_is_exist_1(jule::Slice<jule::Any>,jule::Ref<_1aca3647d_Var>);
inline jule::Bool _1aadca5e3_is_exist_2(jule::Slice<jule::Any>,jule::Ref<_1ab064271_StructIns>);
inline jule::Bool _1aadca5e3_is_exist_3(jule::Slice<jule::Any>,jule::Ref<_1ac276c57_Trait>);
inline jule::Bool _1aadca5e3_is_exist_ref(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _1aadca5e3_is_dead(jule::Any);
inline void _1aadca5e3_drop_ref(jule::Slice<jule::Any>&,jule::Int);
inline jule::Bool _1aadca5e3_is_all_references_are_dead_0(jule::Ref<_1ac699a1a_ReferenceStack>);
inline jule::Bool _1aadca5e3_is_all_references_are_dead_1(jule::Ref<_1ac699a1a_ReferenceStack>);
inline jule::Bool _1aadca5e3_is_all_references_are_dead_2(jule::Ref<_1ac699a1a_ReferenceStack>);
inline jule::Bool _1aadca5e3_is_fn_dead(jule::Ref<_1ab07a50c_FnIns>);
inline jule::Bool _1aadca5e3_is_var_dead(jule::Ref<_1aca3647d_Var>);
inline jule::Bool _1aadca5e3_kind_is_dead(jule::Ref<_1ad3e617d_TypeKind>);
inline jule::Bool _1aadca5e3_is_any_generic_is_dead(jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>&);
inline jule::Bool _1aadca5e3_is_struct_dead(jule::Ref<_1ab064271_StructIns>);
inline jule::Bool _1aadca5e3_is_trait_dead(jule::Ref<_1ac276c57_Trait>);
inline void _1aadca5e3_eliminate_dead_functions(jule::Slice<jule::Ref<_1ab07a50c_Fn>>&);
inline void _1aadca5e3_eliminate_dead_globals(jule::Ref<_1ac78be4d_Package>&);
inline void _1aadca5e3_eliminate_dead_functions_package(jule::Ref<_1ac78be4d_Package>&);
inline void _1aadca5e3_eliminate_dead_structs(jule::Ref<_1ac78be4d_Package>&);
inline void _1aadca5e3_eliminate_dead_traits(jule::Ref<_1ac78be4d_Package>&);
inline void _1aadca5e3_catch_alive_init(jule::Ref<_1ac78be4d_Package>&);
inline void _1aadca5e3_eliminate_dead_code_package(jule::Ref<_1ac78be4d_Package>&);
inline void _1aadca5e3_eliminate_dead_code(jule::Ref<_1aae4981b_IR>&);
inline void _1aae3b247_eliminate_dead_code_of_scope(jule::Ref<_1ac77dd1e_Scope>);
inline void _1aae49d38_push_opt_level(jule::Int);
inline jule::Bool _1aae49d38_is_opt_enabled(jule::Str);
inline jule::Str _1aae7037a_gen_if(jule::Ref<_1ac77dd1e_If>);
inline jule::Str _1aae7037a_gen_conditional(jule::Ref<_1ac77dd1e_Conditional>);
inline jule::Str _1aae7037a_gen_inf_iter(jule::Ref<_1ac77dd1e_InfIter>);
inline jule::Str _1aae7037a_gen_while_iter(jule::Ref<_1ac77dd1e_WhileIter>);
inline jule::Trait<_1aae7037a_RangeSetter> _1aae7037a_get_range_setter(jule::Ref<_1ac77dd1e_RangeIter>);
inline jule::Str _1aae7037a_gen_range_iter(jule::Ref<_1ac77dd1e_RangeIter>);
inline jule::Str _1aae7037a_gen_cont(jule::Ref<_1ac77dd1e_ContSt>);
inline jule::Str _1aae7037a_gen_label(jule::Ref<_1ac77dd1e_Label>);
inline jule::Str _1aae7037a_gen_goto(jule::Ref<_1ac77dd1e_GotoSt>);
inline jule::Str _1aae7037a_gen_postfix(jule::Ref<_1ac77dd1e_Postfix>);
inline jule::Str _1aae7037a_gen_div_by_zero_assign(jule::Ref<_1ac77dd1e_Assign>);
inline jule::Str _1aae7037a_gen_assign(jule::Ref<_1ac77dd1e_Assign>);
inline jule::Str _1aae7037a_gen_multi_assign(jule::Ref<_1ac77dd1e_MultiAssign>);
inline jule::Str _1aae7037a_gen_case(jule::Ref<_1ac77dd1e_Match>,jule::Ref<_1ac77dd1e_Case>);
inline jule::Str _1aae7037a_gen_match(jule::Ref<_1ac77dd1e_Match>);
inline jule::Str _1aae7037a_gen_fall_st(jule::Ref<_1ac77dd1e_FallSt>);
inline jule::Str _1aae7037a_gen_break_st(jule::Ref<_1ac77dd1e_BreakSt>);
inline jule::Str _1aae7037a_gen_ret_vars(jule::Ref<_1ac77dd1e_RetSt>);
inline jule::Str _1aae7037a_gen_ret_expr_tuple(jule::Ref<_1ac77dd1e_RetSt>);
inline jule::Str _1aae7037a_gen_ret_expr(jule::Ref<_1ac77dd1e_RetSt>);
inline jule::Str _1aae7037a_gen_ret_st(jule::Ref<_1ac77dd1e_RetSt>);
inline jule::Str _1aae7037a_gen_ret_st_with_defaults(jule::Ref<_1ad3e617d_TypeKind>);
inline jule::Str _1aae7037a_gen_recover(jule::Ref<_1ac77dd1e_Recover>);
inline jule::Str _1aae7037a_gen_data_expr(jule::Ref<_1acde49c3_Data>);
inline jule::Str _1aae7037a_gen_st(jule::Any);
inline jule::Str _1aae7037a_gen_scope(jule::Ref<_1ac77dd1e_Scope>);
inline jule::Str _1aae7037a_gen_fn_scope(jule::Ref<_1ab07a50c_FnIns>);
inline jule::Str _1aae7037a_gen_method_scope(jule::Ref<_1ab07a50c_FnIns>);
inline jule::Str _1ace0e05e_concat_all_parts(jule::Slice<jule::Str>);
inline jule::Str _1ace0e05e_get_accessor(jule::Ref<_1ad3e617d_TypeKind>);
inline jule::Str _1ace0e05e_decompose_common_esq(jule::U8);
inline jule::Str _1ace0e05e_sbtoa(jule::U8);
inline jule::Str _1ace0e05e_get_str_model(jule::Ref<_1ad6d5cec_Const>);
inline jule::Str _1ace0e05e_get_bool_model(jule::Ref<_1ad6d5cec_Const>);
inline jule::Str _1ace0e05e_get_nil_model(void);
inline jule::Str _1ace0e05e_gen_float_special_cases(jule::F64);
inline jule::Str _1ace0e05e_ftoa(jule::F64,jule::Int);
inline jule::Str _1ace0e05e_get_f32_model(jule::Ref<_1ad6d5cec_Const>);
inline jule::Str _1ace0e05e_get_f64_model(jule::Ref<_1ad6d5cec_Const>);
inline jule::Str _1ace0e05e_get_float_model(jule::Ref<_1acde49c3_Data>);
inline jule::Str _1ace0e05e_i64toa(jule::I64);
inline jule::Str _1ace0e05e_get_i64_model(jule::Ref<_1ad6d5cec_Const>);
inline jule::Str _1ace0e05e_u64toa(jule::U64);
inline jule::Str _1ace0e05e_get_u64_model(jule::Ref<_1ad6d5cec_Const>);
inline jule::Str _1ace0e05e_gen_const_expr(jule::Ref<_1acde49c3_Data>);
inline jule::Str _1ace0e05e_gen_const_expr_model(jule::Ref<_1ad6d5cec_Const>);
inline jule::Str _1ace0e05e_gen_div_by_zero_binop_expr_model(jule::Str,jule::Any,jule::Any);
inline jule::Str _1ace0e05e_gen_binop_expr_model(jule::Ref<_1ab0a4954_BinopExprModel>);
inline jule::Str _1ace0e05e_gen_var_expr_model(jule::Ref<_1aca3647d_Var>);
inline jule::Str _1ace0e05e_gen_struct_expr_model(jule::Ref<_1ab064271_Struct>);
inline jule::Str _1ace0e05e_gen_struct_ins_expr_model(jule::Ref<_1ab064271_StructIns>);
inline jule::Str _1ace0e05e_gen_unary_expr_model(jule::Ref<_1ab0a4954_UnaryExprModel>);
inline jule::Str _1ace0e05e_gen_get_ref_ptr_expr_model(jule::Ref<_1ab0a4954_GetRefPtrExprModel>);
inline jule::Str _1ace0e05e_gen_cpp_struct_lit_expr_model(jule::Ref<_1ab0a4954_StructLitExprModel>);
inline jule::Str _1ace0e05e_gen_struct_lit_expr_model(jule::Ref<_1ab0a4954_StructLitExprModel>);
inline jule::Str _1ace0e05e_gen_alloc_struct_lit_expr_model(jule::Ref<_1ab0a4954_AllocStructLitExprModel>);
inline jule::Str _1ace0e05e_gen_casting_expr_model(jule::Ref<_1ab0a4954_CastingExprModel>);
inline jule::Str _1ace0e05e_gen_arg_expr_models(jule::Slice<jule::Any>);
inline jule::Str _1ace0e05e_gen_fn_call_expr_model(jule::Ref<_1ab0a4954_FnCallExprModel>);
inline jule::Str _1ace0e05e_gen_slice_expr_model(jule::Ref<_1ab0a4954_SliceExprModel>);
inline jule::Str _1ace0e05e_gen_indexing_expr_model(jule::Ref<_1ab0a4954_IndexigExprModel>);
inline jule::Str _1ace0e05e_gen_anon_fn_expr_model(jule::Ref<_1ab0a4954_AnonFnExprModel>);
inline jule::Str _1ace0e05e_gen_map_expr_model(jule::Ref<_1ab0a4954_MapExprModel>);
inline jule::Str _1ace0e05e_gen_slicing_expr_model(jule::Ref<_1ab0a4954_SlicingExprModel>);
inline jule::Str _1ace0e05e_gen_trait_sub_ident_expr_model(jule::Ref<_1ab0a4954_TraitSubIdentExprModel>);
inline jule::Str _1ace0e05e_gen_struct_sub_ident_expr_model(jule::Ref<_1ab0a4954_StructSubIdentExprModel>);
inline jule::Str _1ace0e05e_gen_common_ident_expr_model(jule::Ref<_1ab0a4954_CommonIdentExprModel>);
inline jule::Str _1ace0e05e_gen_common_sub_ident_expr_model(jule::Ref<_1ab0a4954_CommonSubIdentExprModel>);
inline jule::Str _1ace0e05e_gen_array_expr_model(jule::Ref<_1ab0a4954_ArrayExprModel>);
inline jule::Str _1ace0e05e_gen_fn_ins_expr_model(jule::Ref<_1ab07a50c_FnIns>);
inline jule::Str _1ace0e05e_gen_tuple_expr_model(jule::Ref<_1ab0a4954_TupleExprModel>);
inline jule::Str _1ace0e05e_gen_builtin_new_call_expr_model(jule::Ref<_1ab0a4954_BuiltinNewCallExprModel>);
inline jule::Str _1ace0e05e_gen_builtin_out_call_expr_model(jule::Ref<_1ab0a4954_BuiltinOutCallExprModel>);
inline jule::Str _1ace0e05e_gen_builtin_outln_call_expr_model(jule::Ref<_1ab0a4954_BuiltinOutlnCallExprModel>);
inline jule::Str _1ace0e05e_gen_builtin_real_call_expr_model(jule::Ref<_1ab0a4954_BuiltinRealCallExprModel>);
inline jule::Str _1ace0e05e_gen_builtin_drop_call_expr_model(jule::Ref<_1ab0a4954_BuiltinDropCallExprModel>);
inline jule::Str _1ace0e05e_gen_builtin_panic_call_expr_model(jule::Ref<_1ab0a4954_BuiltinPanicCallExprModel>);
inline jule::Str _1ace0e05e_gen_builtin_make_call_expr_model(jule::Ref<_1ab0a4954_BuiltinMakeCallExprModel>);
inline jule::Str _1ace0e05e_gen_builtin_append_call_expr_model_assign_opt(jule::Bool,jule::Str&,jule::Ref<_1ad3e617d_TypeKind>&,jule::Ref<_1ab0a4954_SliceExprModel>&,jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel>&);
inline std::tuple<jule::Str,jule::Bool> _1ace0e05e_gen_builtin_append_call_expr_model_assign(jule::Any,jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel>);
inline jule::Str _1ace0e05e_gen_builtin_append_call_expr_model(jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel>);
inline jule::Str _1ace0e05e_gen_builtin_clone_call_expr_model(jule::Ref<_1ab0a4954_BuiltinCloneCallExprModel>);
inline jule::Str _1ace0e05e_gen_sizeof_expr_model(jule::Ref<_1ab0a4954_SizeofExprModel>);
inline jule::Str _1ace0e05e_gen_alignof_expr_model(jule::Ref<_1ab0a4954_AlignofExprModel>);
inline jule::Str _1ace0e05e_gen_rune_expr_model(jule::Ref<_1ab0a4954_RuneExprModel>);
inline jule::Str _1ace0e05e_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_1ab0a4954_BuiltinErrorTraitSubIdentExprModel>);
inline jule::Str _1ace0e05e_gen_explicit_deref_expr_model(jule::Ref<_1ab0a4954_ExplicitDerefExprModel>);
inline jule::Str _1ace0e05e_gen_struct_static_ident_expr_model(jule::Ref<_1ab0a4954_StructStaticIdentExprModel>);
inline jule::Str _1ace0e05e_gen_expr_model(jule::Any);
inline jule::Str _1ace0e05e_gen_expr(jule::Any);
inline jule::Str _1ace0e05e_gen_val(jule::Ref<_1acde49c3_Value>);
inline jule::Str _1ace0e05e_get_init_expr(jule::Ref<_1ad3e617d_TypeKind>);
inline jule::Str _1ac6aa762_get_derive_fn_decl_clone(jule::Ref<_1ab064271_Struct>&);
inline jule::Str _1ac6aa762_get_derive_fn_def_clone(jule::Ref<_1ab064271_Struct>&);
inline jule::Str _1adaa2350_as_ident(jule::Str);
inline jule::Str _1adaa2350_as_jt(jule::Str);
inline jule::Str _1adaa2350_get_addr_as_ident(jule::Uintptr);
inline jule::Str _1adaa2350_as_out_ident(jule::Str,jule::Uintptr);
inline jule::Str _1adaa2350_as_local_ident(jule::Int,jule::Int,jule::Str);
inline jule::Str _1adaa2350_fn_out_ident(jule::Ref<_1ab07a50c_Fn>&);
inline jule::Str _1adaa2350_fn_ins_out_ident(jule::Ref<_1ab07a50c_FnIns>&);
inline jule::Str _1adaa2350_trait_out_ident(jule::Ref<_1ac276c57_Trait>);
inline jule::Str _1adaa2350_param_out_ident(jule::Ref<_1ab07a50c_Param>&);
inline jule::Str _1adaa2350_struct_out_ident(jule::Ref<_1ab064271_Struct>&);
inline jule::Str _1adaa2350_struct_ins_out_ident(jule::Ref<_1ab064271_StructIns>&);
inline jule::Str _1adaa2350_field_out_ident(jule::Ref<_1ab064271_Field>&);
inline jule::Str _1adaa2350_var_out_ident(jule::Ref<_1aca3647d_Var>);
inline jule::Str _1adaa2350_iter_begin_label_ident(jule::Uintptr);
inline jule::Str _1adaa2350_iter_end_label_ident(jule::Uintptr);
inline jule::Str _1adaa2350_iter_next_label_ident(jule::Uintptr);
inline jule::Str _1adaa2350_label_ident(jule::Str);
inline jule::Str _1adaa2350_match_end_label_ident(jule::Uintptr);
inline jule::Str _1adaa2350_case_begin_label_ident(jule::Uintptr);
inline jule::Str _1adaa2350_case_end_label_ident(jule::Uintptr);
inline jule::Bool _1adaa4dad_any_equals_0(jule::Ref<_1aca3647d_Var>&,jule::Any&);
inline jule::Bool _1adaa4dad_any_equals_1(jule::Ref<_1ab064271_FieldIns>&,jule::Any&);
inline jule::Ref<_1aaeea1c4_Directive> _1adaa4dad_find_directive(jule::Slice<jule::Ref<_1aaeea1c4_Directive>>&,jule::Str);
inline jule::Bool _1adaa4dad_has_directive(jule::Slice<jule::Ref<_1aaeea1c4_Directive>>&,jule::Str);
inline jule::Str _1adaa4dad_gen_prim_kind(jule::Ref<_1ad3e617d_Prim>);
inline jule::Str _1adaa4dad_gen_tuple_kind(jule::Ref<_1ad3e617d_Tuple>);
inline jule::Str _1adaa4dad_as_ref_kind(jule::Str);
inline jule::Str _1adaa4dad_gen_ref_kind(jule::Ref<_1ad3e617d_Ref>);
inline jule::Str _1adaa4dad_gen_ptr_kind(jule::Ref<_1ad3e617d_Ptr>);
inline jule::Str _1adaa4dad_gen_enum_kind(jule::Ref<_1ac7804a2_Enum>);
inline jule::Str _1adaa4dad_as_slice_kind(jule::Ref<_1ad3e617d_TypeKind>);
inline jule::Str _1adaa4dad_gen_slice_kind(jule::Ref<_1ad3e617d_Slc>);
inline jule::Str _1adaa4dad_gen_map_kind(jule::Ref<_1ad3e617d_Map>);
inline jule::Str _1adaa4dad_gen_trait_kind_from_ident(jule::Str);
inline jule::Str _1adaa4dad_gen_trait_kind(jule::Ref<_1ac276c57_Trait>);
inline jule::Str _1adaa4dad_gen_struct_kind(jule::Ref<_1ab064271_Struct>);
inline jule::Str _1adaa4dad_gen_struct_kind_ins(jule::Ref<_1ab064271_StructIns>);
inline jule::Str _1adaa4dad_gen_array_kind(jule::Ref<_1ad3e617d_Arr>);
inline jule::Str _1adaa4dad_gen_fn_anon_decl(jule::Ref<_1ab07a50c_FnIns>);
inline jule::Str _1adaa4dad_gen_fn_kind(jule::Ref<_1ab07a50c_FnIns>);
inline jule::Str _1adaa4dad_gen_type_kind(jule::Ref<_1ad3e617d_TypeKind>);
inline void _1adad79c3_add_indent(void);
inline void _1adad79c3_done_indent(void);
inline jule::Str _1adad79c3_indent(void);
inline jule::Bool _1adad79c3_is_cpp_header_file(jule::Str);
inline jule::Str _1adad79c3_gen_links(jule::Ref<_1aae4981b_IR>&);
inline jule::Str _1adad79c3_gen_fn_result(jule::Ref<_1ab07a50c_Fn>&);
inline jule::Str _1adad79c3_gen_fn_ins_result(jule::Ref<_1ab07a50c_FnIns>&);
inline jule::Str _1adad79c3_gen_param_prototype(jule::Ref<_1ab07a50c_Param>&);
inline jule::Str _1adad79c3_gen_param_ins(jule::Ref<_1ab07a50c_ParamIns>&);
inline jule::Str _1adad79c3_gen_param_ins_prototype(jule::Ref<_1ab07a50c_ParamIns>&);
inline jule::Str _1adad79c3_gen_param(jule::Ref<_1ab07a50c_Param>&);
inline jule::Str _1adad79c3_gen_params(jule::Slice<jule::Ref<_1ab07a50c_Param>>&);
inline jule::Str _1adad79c3_gen_params_ins(jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>&);
inline jule::Str _1adad79c3_gen_params_prototypes(jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>&);
inline jule::Str _1adad79c3_gen_trait(jule::Ref<_1ac276c57_Trait>&);
inline jule::Str _1adad79c3_gen_traits_tbl(jule::Ref<_1acd9639d_SymbolTable>&);
inline jule::Str _1adad79c3_gen_traits_pkg(jule::Ref<_1ac78be4d_Package>&);
inline jule::Str _1adad79c3_gen_traits(jule::Ref<_1aae4981b_IR>&);
inline jule::Str _1adad79c3_gen_trait_prototype(jule::Ref<_1ac276c57_Trait>&);
inline jule::Str _1adad79c3_gen_trait_prototypes(jule::Ref<_1ac78be4d_Package>&);
inline jule::Str _1adad79c3_gen_struct_plain_prototype(jule::Ref<_1ab064271_Struct>&);
inline jule::Str _1adad79c3_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_1ab064271_Struct>>&);
inline jule::Str _1adad79c3_gen_struct_traits(jule::Ref<_1ab064271_Struct>&);
inline jule::Str _1adad79c3_gen_field_decl(jule::Ref<_1ab064271_FieldIns>&);
inline jule::Str _1adad79c3_gen_struct_self_field_type_kind(jule::Ref<_1ab064271_StructIns>&);
inline jule::Str _1adad79c3_gen_struct_self_field(jule::Ref<_1ab064271_StructIns>&);
inline jule::Str _1adad79c3_gen_struct_self_field_init_st(jule::Ref<_1ab064271_StructIns>&);
inline jule::Str _1adad79c3_gen_struct_constructor(jule::Ref<_1ab064271_StructIns>&);
inline jule::Str _1adad79c3_gen_struct_destructor(jule::Ref<_1ab064271_StructIns>&);
inline jule::Str _1adad79c3_gen_struct_operators(jule::Ref<_1ab064271_StructIns>&);
inline jule::Str _1adad79c3_gen_struct_derive_defs_prototypes(jule::Ref<_1ab064271_StructIns>&);
inline jule::Str _1adad79c3_gen_struct_ins_prototype(jule::Ref<_1ab064271_StructIns>&);
inline jule::Str _1adad79c3_gen_struct_prototype(jule::Ref<_1ab064271_Struct>&);
inline jule::Str _1adad79c3_gen_struct_prototypes(jule::Slice<jule::Ref<_1ab064271_Struct>>&);
inline jule::Str _1adad79c3_gen_fn_decl_head(jule::Ref<_1ab07a50c_FnIns>&,jule::Bool);
inline jule::Str _1adad79c3_gen_fn_prototype(jule::Ref<_1ab07a50c_Fn>&,jule::Bool);
inline jule::Str _1adad79c3_gen_fn_prototypes(jule::Ref<_1ac78be4d_Package>&);
inline jule::Str _1adad79c3_gen_prototypes(jule::Ref<_1aae4981b_IR>&);
inline jule::Str _1adad79c3_gen_var_init_expr(jule::Ref<_1aca3647d_Var>&,jule::Str);
inline jule::Str _1adad79c3_gen_var(jule::Ref<_1aca3647d_Var>);
inline jule::Str _1adad79c3_gen_globals(jule::Slice<jule::Ref<_1aca3647d_Var>>&);
inline jule::Str _1adad79c3_gen_fn(jule::Ref<_1ab07a50c_Fn>&);
inline jule::Str _1adad79c3_gen_pkg_fns(jule::Ref<_1ac78be4d_Package>&);
inline jule::Str _1adad79c3_gen_struct_method_defs(jule::Ref<_1ab064271_StructIns>&);
inline jule::Str _1adad79c3_gen_struct_ostream(jule::Ref<_1ab064271_StructIns>&);
inline jule::Str _1adad79c3_gen_struct_derive_defs(jule::Ref<_1ab064271_StructIns>&);
inline jule::Str _1adad79c3_gen_struct_ins(jule::Ref<_1ab064271_StructIns>&);
inline jule::Str _1adad79c3_gen_struct(jule::Ref<_1ab064271_Struct>&);
inline jule::Str _1adad79c3_gen_structs(jule::Slice<jule::Ref<_1ab064271_Struct>>&);
inline jule::Str _1adad79c3_gen_fns(jule::Ref<_1aae4981b_IR>&);
inline void _1adad79c3_push_init(jule::Ref<_1ac78be4d_Package>&,jule::Str&);
inline jule::Str _1adad79c3_gen_init_caller(jule::Ref<_1aae4981b_IR>&);
inline void _1adad79c3_append_standard(jule::Str&,jule::Str,jule::Str);
inline jule::Str _1adad79c3_gen(jule::Ref<_1aae4981b_IR>&);
inline jule::Str _1d0517502_str_repeat(jule::Str,jule::Int);
inline void _1d0517502_print_error_message(jule::Str);
inline void _1d0517502_help(void);
inline void _1d0517502_version(void);
inline void _1d0517502_tool_distos(void);
inline void _1d0517502_tool_distarch(void);
inline void _1d0517502_tool(void);
inline void _1d0517502_julenv(void);
inline jule::Bool _1d0517502_process_command(void);
inline void _1d0517502_init(void);
inline void _1d0517502_exit_err(jule::Str);
void entry_point(void);
inline jule::Int _1d053a6ac_system(jule::Str);
inline std::tuple<jule::Str,jule::Str> _1d053a6ac_get_option(jule::Slice<jule::Str>&,jule::Int&);
inline jule::Str _1d053a6ac_get_option_value(jule::Slice<jule::Str>&,jule::Int&);
inline void _1d053a6ac_parse_out_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _1d053a6ac_parse_opt_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _1d053a6ac_check_target_arch(jule::Str);
inline void _1d053a6ac_check_target_os(jule::Str);
inline void _1d053a6ac_parse_target_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _1d053a6ac_parse_compiler_option(jule::Slice<jule::Str>&,jule::Int&);
inline jule::Str _1d053a6ac_parse_options(jule::Slice<jule::Str>&);
inline void _1d053a6ac_write_output(jule::Str,jule::Str);
inline void _1d053a6ac_clear_objects(void);
inline void _1d053a6ac_compile_ir(jule::Str,jule::Str);
inline void _1d053a6ac_do_spell(jule::Str,jule::Str,jule::Str);
inline void _1d053a6ac_check_mode(void);
inline void _1d053a6ac_check_compiler(void);
inline void _1d053a6ac_set(void);
inline jule::Bool _1d053a6ac_is_cpp_source_file(jule::Str);
inline std::tuple<jule::Str,jule::Str> _1d053a6ac_gen_compile_cmd(jule::Str,jule::Ref<_1aae4981b_IR>&);
inline jule::Str _1d053a6ac_get_compile_path(void);
inline void _1d053a6ac_apply_target_independent_optimizations(jule::Ref<_1aae4981b_IR>&);
inline void _1d053a6ac_compile_command(void);


static jule::Array<jule::Array<jule::Str,2>,4> _1d0517502_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,4>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)})});
static jule::Str _1d053a6ac_COMPILER = jule::Str("", 0);
static jule::Str _1d053a6ac_COMPILER_PATH = jule::Str("", 0);
static jule::Str _1d053a6ac_OUT_DIR = jule::Str("dist", 4);
static jule::Int _1d053a6ac_MODE = 0LLU;
static jule::Str _1d053a6ac_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Str _1d053a6ac_OUT = jule::Str("", 0);
static jule::Str _1d053a6ac_CPP_STD = jule::Str("c++17", 5);
static jule::Uintptr _1a8908684_STDIN = 0LLU;
static jule::Uintptr _1a8908684_STDOUT = 1LLU;
static jule::Uintptr _1a8908684_STDERR = 2LLU;
static jule::Slice<jule::Str> _1d063b77a_ARGS = nullptr;
static jule::Slice<jule::Str> _1d063b77a_ENV = nullptr;
static jule::Array<jule::U8,32> _1aa1ac035_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _1aa1ac035_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static jule::Trait<jule::Error> _1aa1ade38_OVERFLOW_ERROR = jule::new_struct<_1aa1ade38_bits_error>(new( std::nothrow ) _1aa1ade38_bits_error(jule::Str("integer overflow", 16)));
static jule::Trait<jule::Error> _1aa1ade38_DIVIDE_ERROR = jule::new_struct<_1aa1ade38_bits_error>(new( std::nothrow ) _1aa1ade38_bits_error(jule::Str("integer divide by zero", 22)));
static jule::Array<jule::F64,6> _1a9a2c4aa__SIN = jule::Array<jule::F64,6>({0.00000000015896230157654656,-0.000000025050747762857807,0.0000027557313621385722,-0.00019841269829589539,0.0083333333333221182,-0.1666666666666663});
static jule::Array<jule::F64,6> _1a9a2c4aa__COS = jule::Array<jule::F64,6>({-0.0000000000113585365213876823,0.000000002087570084197473,-0.0000002755731417929674,0.000024801587288851704,-0.0013888888888873056,0.041666666666666595});
static jule::Array<jule::F64,3> _1a9a2cd07__TAN_P = jule::Array<jule::F64,3>({-13093.6939181383786,1153516.6483858742,-17956525.197648488});
static jule::Array<jule::F64,5> _1a9a2cd07__TAN_Q = jule::Array<jule::F64,5>({1LL,13681.2963470692957,-1320892.3444021097,25008380.18233579,-53869575.592945464});
static jule::Array<jule::U64,20> _1a9aa7c50_M_PI4 = jule::Array<jule::U64,20>({1LLU,5040379952546458195LLU,17892431488136887169LLU,13169980181085364355LLU,18204331823439776451LLU,7946843935494350272LLU,905889640498799673LLU,18175356263134875261LLU,15061281708168349961LLU,15220161563773041794LLU,8296664548579374057LLU,4109744767560208502LLU,4607516669194743839LLU,16023283104648321598LLU,15739233654134936430LLU,11424645774684705882LLU,16883842788696515318LLU,8795094592981902804LLU,15561835991111744016LLU,12395701187267450711LLU});
static jule::Array<jule::F64,6> _1a9bbccaa_P_1R8 = jule::Array<jule::F64,6>({0LL,0.117187499999988648,13.2394806593073575,412.05185430737856,3874.7453891396053,7914.4795403189173});
static jule::Array<jule::F64,5> _1a9bbccaa_P_1S8 = jule::Array<jule::F64,5>({114.207370375678408,3650.9308342085346,36956.206026903346,97602.79359349508,30804.272062788881});
static jule::Array<jule::F64,6> _1a9bbccaa_P_1R5 = jule::Array<jule::F64,6>({0.0000000000131990519556243523,0.117187493190614098,6.8027512786843287,108.30818299018911,517.63613953319975,528.71520136333754});
static jule::Array<jule::F64,5> _1a9bbccaa_P_1S5 = jule::Array<jule::F64,5>({59.280598722113133,991.40141873361438,5353.2669529148798,7844.6903174955123,1504.0468881036106});
static jule::Array<jule::F64,6> _1a9bbccaa_P_1R3 = jule::Array<jule::F64,6>({0.0000000030250391613737362,0.117186865567253592,3.9329775003331564,35.119403559163693,91.055011075078127,48.559068519736492});
static jule::Array<jule::F64,5> _1a9bbccaa_P_1S3 = jule::Array<jule::F64,5>({34.791309500125152,336.76245874782575,1046.8713997577513,890.81134639825643,103.787932439639278});
static jule::Array<jule::F64,6> _1a9bbccaa_P_1R2 = jule::Array<jule::F64,6>({0.000000107710830106873743,0.117176219462683348,2.3685149666760879,12.2426109148261233,17.693971127168773,5.073523125888185});
static jule::Array<jule::F64,5> _1a9bbccaa_P_1S2 = jule::Array<jule::F64,5>({21.436485936382141,125.290227168402751,232.27646905716281,117.679373287147101,8.3646389337161828});
static jule::Array<jule::F64,6> _1a9bbccaa_Q_1R8 = jule::Array<jule::F64,6>({0LL,-0.102539062499992714,-16.271753454458999,-759.60172251395011,-11849.8066702429587,-48438.512428575035});
static jule::Array<jule::F64,6> _1a9bbccaa_Q_1S8 = jule::Array<jule::F64,6>({161.39536970072291,7825.3859992334847,133875.33628724958,719657.72368324094,666601.23261777638,-294490.26430383464});
static jule::Array<jule::F64,6> _1a9bbccaa_Q_1R5 = jule::Array<jule::F64,6>({-0.00000000002089799311417641,-0.102539050241375426,-8.0564482812393603,-183.66960747488838,-1373.1937606550816,-2612.4444045321566});
static jule::Array<jule::F64,6> _1a9bbccaa_Q_1S5 = jule::Array<jule::F64,6>({81.276550138433578,1991.7987346048596,17468.485192490891,49851.427091035228,27948.075163891812,-4719.1835479512847});
static jule::Array<jule::F64,6> _1a9bbccaa_Q_1R3 = jule::Array<jule::F64,6>({-0.0000000050783122646176656,-0.10253782982083709,-4.610115811394734,-57.847221656278364,-228.2445407376317,-219.21012847890933});
static jule::Array<jule::F64,6> _1a9bbccaa_Q_1S3 = jule::Array<jule::F64,6>({47.665155032372951,673.86511267669971,3380.1528667952634,5547.7290972072278,1903.119193388108,-135.20119144430734});
static jule::Array<jule::F64,6> _1a9bbccaa_Q_1R2 = jule::Array<jule::F64,6>({-0.00000017838172751095887,-0.102517042607985553,-2.7522056827818746,-19.663616264370372,-42.325313337283049,-21.371921170370406});
static jule::Array<jule::F64,6> _1a9bbccaa_Q_1S2 = jule::Array<jule::F64,6>({29.533362906052385,252.98154998219053,757.50283486864544,739.39320532046725,155.94900333666612,-4.9594989882262821});
static jule::Array<jule::F64,6> _1a9d0e3c4_P_0R8 = jule::Array<jule::F64,6>({0LL,-0.070312499999990036,-8.081670412753498,-257.06310567970485,-2485.2164100942882,-5253.0438049072955});
static jule::Array<jule::F64,5> _1a9d0e3c4_P_0S8 = jule::Array<jule::F64,5>({116.534364619668182,3833.7447536412183,40597.857264847255,116752.972564375916,47627.728414673096});
static jule::Array<jule::F64,6> _1a9d0e3c4_P_0R5 = jule::Array<jule::F64,6>({-0.0000000000114125464691894503,-0.070312494087359928,-4.1596106447058778,-67.674765226516726,-331.23129964917297,-346.43338836560491});
static jule::Array<jule::F64,5> _1a9d0e3c4_P_0S5 = jule::Array<jule::F64,5>({60.753938269230034,1051.2523059570458,5978.9709433385578,9625.4451435777446,2406.0581592293911});
static jule::Array<jule::F64,6> _1a9d0e3c4_P_0R3 = jule::Array<jule::F64,6>({-0.0000000025470460177195192,-0.070311961638148165,-2.4090322154952961,-21.965977473488309,-58.079170470173757,-31.44794705948885});
static jule::Array<jule::F64,5> _1a9d0e3c4_P_0S3 = jule::Array<jule::F64,5>({35.856033805520973,361.51398305030386,1193.6078379211153,1127.9967985690741,173.58093081333575});
static jule::Array<jule::F64,6> _1a9d0e3c4_P_0R2 = jule::Array<jule::F64,6>({-0.000000088753433303252641,-0.070303099548362474,-1.4507384678095299,-7.6356961382352777,-11.1931668860356748,-3.2336457935133534});
static jule::Array<jule::F64,5> _1a9d0e3c4_P_0S2 = jule::Array<jule::F64,5>({22.220299753208881,136.20679421821521,270.47027865808349,153.87539420832033,14.6576176948256194});
static jule::Array<jule::F64,6> _1a9d0e3c4_Q_0R8 = jule::Array<jule::F64,6>({0LL,0.073242187499993505,11.7682064682252694,557.67338025640186,8859.1972075646863,37014.626777688783});
static jule::Array<jule::F64,6> _1a9d0e3c4_Q_0S8 = jule::Array<jule::F64,6>({163.77602689568982,8098.3449465644981,142538.29141912048,803309.2571195144,840501.57981906051,-343899.29353786662});
static jule::Array<jule::F64,6> _1a9d0e3c4_Q_0R5 = jule::Array<jule::F64,6>({0.000000000018408596359451553,0.073242176661268477,5.8356350896205695,135.11157728644983,1027.243765961641,1989.9778586460538});
static jule::Array<jule::F64,6> _1a9d0e3c4_Q_0S5 = jule::Array<jule::F64,6>({82.776610223653776,2077.8141642139299,18847.288778571809,56751.112289494733,35976.753842511447,-5354.3427560194477});
static jule::Array<jule::F64,6> _1a9d0e3c4_Q_0R3 = jule::Array<jule::F64,6>({0.0000000043774101408973862,0.073241118004291145,3.3442313751617072,42.621844074541265,170.8080913405656,166.73394869665117});
static jule::Array<jule::F64,6> _1a9d0e3c4_Q_0S3 = jule::Array<jule::F64,6>({48.758872972458718,709.68922105660602,3704.1482262011136,6460.4251675256892,2516.3336892036896,-149.24745183615639});
static jule::Array<jule::F64,6> _1a9d0e3c4_Q_0R2 = jule::Array<jule::F64,6>({0.00000015044444488698327,0.073223426596307928,1.99819174093816,14.4956029347885735,31.666231750478154,16.252707571092927});
static jule::Array<jule::F64,6> _1a9d0e3c4_Q_0S2 = jule::Array<jule::F64,6>({30.365584835521918,269.34811860804984,844.78375759532014,882.93584511248855,212.66638851179883,-5.3109549388266695});
static jule::Array<jule::F64,12> _1a9da8ec9__LGAM_A = jule::Array<jule::F64,12>({0.077215664901532866,0.32246703342411359,0.067352301053129268,0.020580808432516733,0.0073855508608140288,0.0028905138367341563,0.0011927076318336207,0.00051006979215351134,0.00022086279071390839,0.00010801156724758394,0.000025214456545125733,0.000044864094961891516});
static jule::Array<jule::F64,7> _1a9da8ec9__LGAM_R = jule::Array<jule::F64,7>({1LL,1.3920053346762105,0.72193554756713807,0.17193386563280308,0.01864591917156529,0.0007779424963818936,0.0000073266843074462564});
static jule::Array<jule::F64,7> _1a9da8ec9__LGAM_S = jule::Array<jule::F64,7>({-0.077215664901532866,0.21498241596060885,0.32577879640893098,0.14635047265246445,0.026642270303363861,0.0018402845140733772,0.000031947532658410087});
static jule::Array<jule::F64,15> _1a9da8ec9__LGAM_T = jule::Array<jule::F64,15>({0.48383612272381005,-0.14758772299459391,0.064624940239133385,-0.032788541075985965,0.017970675081182039,-0.0103142241298341437,0.0061005387024629133,-0.0036845201678113826,0.0022596478090061247,-0.0014034646998923284,0.00088108188243765401,-0.00053859530535674055,0.00031563207090362595,-0.00031275416837512086,0.00033552919263551907});
static jule::Array<jule::F64,6> _1a9da8ec9__LGAM_U = jule::Array<jule::F64,6>({-0.077215664901532866,0.63282706402509337,1.4549225013723477,0.97771752796337275,0.22896372806469245,0.013381091853678766});
static jule::Array<jule::F64,6> _1a9da8ec9__LGAM_V = jule::Array<jule::F64,6>({1LL,2.4559779371304113,2.128489763798934,0.76928515045667278,0.104222645593369134,0.0032170924228242391});
static jule::Array<jule::F64,7> _1a9da8ec9__LGAM_W = jule::Array<jule::F64,7>({0.41893853320467273,0.083333333333332968,-0.0027777777772877554,0.00079365055864301956,-0.00059518755745033996,0.00083633991899628214,-0.0016309293409657527});
static jule::Array<jule::F64,3> _1a9e46ece_TANH_P = jule::Array<jule::F64,3>({-0.96439917942505227,-99.287723100191855,-1614.6876844170845});
static jule::Array<jule::F64,3> _1a9e46ece_TANH_Q = jule::Array<jule::F64,3>({112.811678491632932,2235.4883906010045,4844.063053251255});
static jule::Array<jule::F64,7> _1a9e5b4ee__GAM_P = jule::Array<jule::F64,7>({0.00016011952247675185,0.0011913514700658638,0.0104213797561761579,0.047636780045713721,0.20744822764843598,0.49421482680149709,1LL});
static jule::Array<jule::F64,8> _1a9e5b4ee__GAM_Q = jule::Array<jule::F64,8>({-0.000023158187332412014,0.00053960558049330335,-0.0044564191385179728,0.0118139785222060433,0.035823639860549865,-0.23459179571824335,0.071430491703027302,1LL});
static jule::Array<jule::F64,5> _1a9e5b4ee__GAM_S = jule::Array<jule::F64,5>({0.00078731139579309368,-0.00022954996161337813,-0.0026813261780578124,0.0034722222160545866,0.08333333333334822});
static jule::Array<jule::F64,32> _1d06aa640_POW10_TAB = jule::Array<jule::F64,32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0,100000000000000000000000.0,1000000000000000000000000.0,10000000000000000000000000.0,100000000000000000000000000.0,1000000000000000000000000000.0,10000000000000000000000000000.0,100000000000000000000000000000.0,1000000000000000000000000000000.0,10000000000000000000000000000000.0});
static jule::Array<jule::F64,10> _1d06aa640_POW10_POSTAB32 = jule::Array<jule::F64,10>({1LL,100000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0});
static jule::Array<jule::F64,11> _1d06aa640_POW10_NEGTAB32 = jule::Array<jule::F64,11>({1LL,0.00000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001});
static _1b6c49115_FloatInfo _1b6c49115_F32_INFO = _1b6c49115_FloatInfo(23LLU,8LLU,-127LL);
static _1b6c49115_FloatInfo _1b6c49115_F64_INFO = _1b6c49115_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _1a89462e8_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _1a8977813_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _1a8977813_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
static jule::Slice<jule::F32> _1a8977813_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
static jule::Array<jule::U64,20> _1a9892d7b_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_1a99596b2_LeftCheat> _1a99596b2_LEFTCHEATS = jule::Slice<_1a99596b2_LeftCheat>({_1a99596b2_LeftCheat(0LL,jule::Str("", 0)),_1a99596b2_LeftCheat(1LL,jule::Str("5", 1)),_1a99596b2_LeftCheat(1LL,jule::Str("25", 2)),_1a99596b2_LeftCheat(1LL,jule::Str("125", 3)),_1a99596b2_LeftCheat(2LL,jule::Str("625", 3)),_1a99596b2_LeftCheat(2LL,jule::Str("3125", 4)),_1a99596b2_LeftCheat(2LL,jule::Str("15625", 5)),_1a99596b2_LeftCheat(3LL,jule::Str("78125", 5)),_1a99596b2_LeftCheat(3LL,jule::Str("390625", 6)),_1a99596b2_LeftCheat(3LL,jule::Str("1953125", 7)),_1a99596b2_LeftCheat(4LL,jule::Str("9765625", 7)),_1a99596b2_LeftCheat(4LL,jule::Str("48828125", 8)),_1a99596b2_LeftCheat(4LL,jule::Str("244140625", 9)),_1a99596b2_LeftCheat(4LL,jule::Str("1220703125", 10)),_1a99596b2_LeftCheat(5LL,jule::Str("6103515625", 10)),_1a99596b2_LeftCheat(5LL,jule::Str("30517578125", 11)),_1a99596b2_LeftCheat(5LL,jule::Str("152587890625", 12)),_1a99596b2_LeftCheat(6LL,jule::Str("762939453125", 12)),_1a99596b2_LeftCheat(6LL,jule::Str("3814697265625", 13)),_1a99596b2_LeftCheat(6LL,jule::Str("19073486328125", 14)),_1a99596b2_LeftCheat(7LL,jule::Str("95367431640625", 14)),_1a99596b2_LeftCheat(7LL,jule::Str("476837158203125", 15)),_1a99596b2_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_1a99596b2_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_1a99596b2_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_1a99596b2_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_1a99596b2_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_1a99596b2_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_1a99596b2_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_1a99596b2_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_1a99596b2_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_1a99596b2_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_1a99596b2_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_1a99596b2_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_1a99596b2_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_1a99596b2_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_1a99596b2_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_1a99596b2_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_1a99596b2_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_1a99596b2_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_1a99596b2_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_1a99596b2_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_1a99596b2_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_1a99596b2_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_1a99596b2_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_1a99596b2_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_1a99596b2_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_1a99596b2_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_1a99596b2_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_1a99596b2_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_1a99596b2_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_1a99596b2_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_1a99596b2_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_1a99596b2_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_1a99596b2_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_1a99596b2_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_1a99596b2_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_1a99596b2_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_1a99596b2_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_1a99596b2_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_1a99596b2_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Array<jule::Str,4> _1d068267d_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _1d068267d_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _1d068267d_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Array<jule::Str,6> _1b6b6baa4_DIRECTIVES = jule::Array<jule::Str,6>({jule::Str("cdef", 4),jule::Str("typedef", 7),jule::Str("derive", 6),jule::Str("pass", 4),jule::Str("build", 5),jule::Str("namespace", 9)});
static jule::Array<jule::Str,3> _1b6ba767d_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,3> _1b6ba767d_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _1d0595937_OS = jule::Str("darwin", 6);
static jule::Str _1d0595937_ARCH = jule::Str("arm64", 5);
static jule::Str _1d0595937_PATH_STDLIB = jule::Str("", 0);
static jule::Str _1d0595937_PATH_EXEC = jule::Str("", 0);
static jule::Str _1d0595937_PATH_WD = jule::Str("", 0);
static jule::Str _1d0595937_PATH_API = jule::Str("", 0);
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__C = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(0LLU,31LLU,1LLU),_1ab2133dc_Range16(127LLU,159LLU,1LLU),_1ab2133dc_Range16(173LLU,1536LLU,1363LLU),_1ab2133dc_Range16(1537LLU,1541LLU,1LLU),_1ab2133dc_Range16(1564LLU,1757LLU,193LLU),_1ab2133dc_Range16(1807LLU,2192LLU,385LLU),_1ab2133dc_Range16(2193LLU,2274LLU,81LLU),_1ab2133dc_Range16(6158LLU,8203LLU,2045LLU),_1ab2133dc_Range16(8204LLU,8207LLU,1LLU),_1ab2133dc_Range16(8234LLU,8238LLU,1LLU),_1ab2133dc_Range16(8288LLU,8292LLU,1LLU),_1ab2133dc_Range16(8294LLU,8303LLU,1LLU),_1ab2133dc_Range16(55296LLU,63743LLU,1LLU),_1ab2133dc_Range16(65279LLU,65529LLU,250LLU),_1ab2133dc_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69821LLU,69837LLU,16LLU),_1ab2133dc_Range32(78896LLU,78911LLU,1LLU),_1ab2133dc_Range32(113824LLU,113827LLU,1LLU),_1ab2133dc_Range32(119155LLU,119162LLU,1LLU),_1ab2133dc_Range32(917505LLU,917536LLU,31LLU),_1ab2133dc_Range32(917537LLU,917631LLU,1LLU),_1ab2133dc_Range32(983040LLU,1048573LLU,1LLU),_1ab2133dc_Range32(1048576LLU,1114109LLU,1LLU)}),2LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(0LLU,31LLU,1LLU),_1ab2133dc_Range16(127LLU,159LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),2LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CF = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(173LLU,1536LLU,1363LLU),_1ab2133dc_Range16(1537LLU,1541LLU,1LLU),_1ab2133dc_Range16(1564LLU,1757LLU,193LLU),_1ab2133dc_Range16(1807LLU,2192LLU,385LLU),_1ab2133dc_Range16(2193LLU,2274LLU,81LLU),_1ab2133dc_Range16(6158LLU,8203LLU,2045LLU),_1ab2133dc_Range16(8204LLU,8207LLU,1LLU),_1ab2133dc_Range16(8234LLU,8238LLU,1LLU),_1ab2133dc_Range16(8288LLU,8292LLU,1LLU),_1ab2133dc_Range16(8294LLU,8303LLU,1LLU),_1ab2133dc_Range16(65279LLU,65529LLU,250LLU),_1ab2133dc_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69821LLU,69837LLU,16LLU),_1ab2133dc_Range32(78896LLU,78911LLU,1LLU),_1ab2133dc_Range32(113824LLU,113827LLU,1LLU),_1ab2133dc_Range32(119155LLU,119162LLU,1LLU),_1ab2133dc_Range32(917505LLU,917536LLU,31LLU),_1ab2133dc_Range32(917537LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(57344LLU,63743LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(983040LLU,1048573LLU,1LLU),_1ab2133dc_Range32(1048576LLU,1114109LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CS = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(55296LLU,57343LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__L = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(65LLU,90LLU,1LLU),_1ab2133dc_Range16(97LLU,122LLU,1LLU),_1ab2133dc_Range16(170LLU,181LLU,11LLU),_1ab2133dc_Range16(186LLU,192LLU,6LLU),_1ab2133dc_Range16(193LLU,214LLU,1LLU),_1ab2133dc_Range16(216LLU,246LLU,1LLU),_1ab2133dc_Range16(248LLU,705LLU,1LLU),_1ab2133dc_Range16(710LLU,721LLU,1LLU),_1ab2133dc_Range16(736LLU,740LLU,1LLU),_1ab2133dc_Range16(748LLU,750LLU,2LLU),_1ab2133dc_Range16(880LLU,884LLU,1LLU),_1ab2133dc_Range16(886LLU,887LLU,1LLU),_1ab2133dc_Range16(890LLU,893LLU,1LLU),_1ab2133dc_Range16(895LLU,902LLU,7LLU),_1ab2133dc_Range16(904LLU,906LLU,1LLU),_1ab2133dc_Range16(908LLU,910LLU,2LLU),_1ab2133dc_Range16(911LLU,929LLU,1LLU),_1ab2133dc_Range16(931LLU,1013LLU,1LLU),_1ab2133dc_Range16(1015LLU,1153LLU,1LLU),_1ab2133dc_Range16(1162LLU,1327LLU,1LLU),_1ab2133dc_Range16(1329LLU,1366LLU,1LLU),_1ab2133dc_Range16(1369LLU,1376LLU,7LLU),_1ab2133dc_Range16(1377LLU,1416LLU,1LLU),_1ab2133dc_Range16(1488LLU,1514LLU,1LLU),_1ab2133dc_Range16(1519LLU,1522LLU,1LLU),_1ab2133dc_Range16(1568LLU,1610LLU,1LLU),_1ab2133dc_Range16(1646LLU,1647LLU,1LLU),_1ab2133dc_Range16(1649LLU,1747LLU,1LLU),_1ab2133dc_Range16(1749LLU,1765LLU,16LLU),_1ab2133dc_Range16(1766LLU,1774LLU,8LLU),_1ab2133dc_Range16(1775LLU,1786LLU,11LLU),_1ab2133dc_Range16(1787LLU,1788LLU,1LLU),_1ab2133dc_Range16(1791LLU,1808LLU,17LLU),_1ab2133dc_Range16(1810LLU,1839LLU,1LLU),_1ab2133dc_Range16(1869LLU,1957LLU,1LLU),_1ab2133dc_Range16(1969LLU,1994LLU,25LLU),_1ab2133dc_Range16(1995LLU,2026LLU,1LLU),_1ab2133dc_Range16(2036LLU,2037LLU,1LLU),_1ab2133dc_Range16(2042LLU,2048LLU,6LLU),_1ab2133dc_Range16(2049LLU,2069LLU,1LLU),_1ab2133dc_Range16(2074LLU,2084LLU,10LLU),_1ab2133dc_Range16(2088LLU,2112LLU,24LLU),_1ab2133dc_Range16(2113LLU,2136LLU,1LLU),_1ab2133dc_Range16(2144LLU,2154LLU,1LLU),_1ab2133dc_Range16(2160LLU,2183LLU,1LLU),_1ab2133dc_Range16(2185LLU,2190LLU,1LLU),_1ab2133dc_Range16(2208LLU,2249LLU,1LLU),_1ab2133dc_Range16(2308LLU,2361LLU,1LLU),_1ab2133dc_Range16(2365LLU,2384LLU,19LLU),_1ab2133dc_Range16(2392LLU,2401LLU,1LLU),_1ab2133dc_Range16(2417LLU,2432LLU,1LLU),_1ab2133dc_Range16(2437LLU,2444LLU,1LLU),_1ab2133dc_Range16(2447LLU,2448LLU,1LLU),_1ab2133dc_Range16(2451LLU,2472LLU,1LLU),_1ab2133dc_Range16(2474LLU,2480LLU,1LLU),_1ab2133dc_Range16(2482LLU,2486LLU,4LLU),_1ab2133dc_Range16(2487LLU,2489LLU,1LLU),_1ab2133dc_Range16(2493LLU,2510LLU,17LLU),_1ab2133dc_Range16(2524LLU,2525LLU,1LLU),_1ab2133dc_Range16(2527LLU,2529LLU,1LLU),_1ab2133dc_Range16(2544LLU,2545LLU,1LLU),_1ab2133dc_Range16(2556LLU,2565LLU,9LLU),_1ab2133dc_Range16(2566LLU,2570LLU,1LLU),_1ab2133dc_Range16(2575LLU,2576LLU,1LLU),_1ab2133dc_Range16(2579LLU,2600LLU,1LLU),_1ab2133dc_Range16(2602LLU,2608LLU,1LLU),_1ab2133dc_Range16(2610LLU,2611LLU,1LLU),_1ab2133dc_Range16(2613LLU,2614LLU,1LLU),_1ab2133dc_Range16(2616LLU,2617LLU,1LLU),_1ab2133dc_Range16(2649LLU,2652LLU,1LLU),_1ab2133dc_Range16(2654LLU,2674LLU,20LLU),_1ab2133dc_Range16(2675LLU,2676LLU,1LLU),_1ab2133dc_Range16(2693LLU,2701LLU,1LLU),_1ab2133dc_Range16(2703LLU,2705LLU,1LLU),_1ab2133dc_Range16(2707LLU,2728LLU,1LLU),_1ab2133dc_Range16(2730LLU,2736LLU,1LLU),_1ab2133dc_Range16(2738LLU,2739LLU,1LLU),_1ab2133dc_Range16(2741LLU,2745LLU,1LLU),_1ab2133dc_Range16(2749LLU,2768LLU,19LLU),_1ab2133dc_Range16(2784LLU,2785LLU,1LLU),_1ab2133dc_Range16(2809LLU,2821LLU,12LLU),_1ab2133dc_Range16(2822LLU,2828LLU,1LLU),_1ab2133dc_Range16(2831LLU,2832LLU,1LLU),_1ab2133dc_Range16(2835LLU,2856LLU,1LLU),_1ab2133dc_Range16(2858LLU,2864LLU,1LLU),_1ab2133dc_Range16(2866LLU,2867LLU,1LLU),_1ab2133dc_Range16(2869LLU,2873LLU,1LLU),_1ab2133dc_Range16(2877LLU,2908LLU,31LLU),_1ab2133dc_Range16(2909LLU,2911LLU,2LLU),_1ab2133dc_Range16(2912LLU,2913LLU,1LLU),_1ab2133dc_Range16(2929LLU,2947LLU,18LLU),_1ab2133dc_Range16(2949LLU,2954LLU,1LLU),_1ab2133dc_Range16(2958LLU,2960LLU,1LLU),_1ab2133dc_Range16(2962LLU,2965LLU,1LLU),_1ab2133dc_Range16(2969LLU,2970LLU,1LLU),_1ab2133dc_Range16(2972LLU,2974LLU,2LLU),_1ab2133dc_Range16(2975LLU,2979LLU,4LLU),_1ab2133dc_Range16(2980LLU,2984LLU,4LLU),_1ab2133dc_Range16(2985LLU,2986LLU,1LLU),_1ab2133dc_Range16(2990LLU,3001LLU,1LLU),_1ab2133dc_Range16(3024LLU,3077LLU,53LLU),_1ab2133dc_Range16(3078LLU,3084LLU,1LLU),_1ab2133dc_Range16(3086LLU,3088LLU,1LLU),_1ab2133dc_Range16(3090LLU,3112LLU,1LLU),_1ab2133dc_Range16(3114LLU,3129LLU,1LLU),_1ab2133dc_Range16(3133LLU,3160LLU,27LLU),_1ab2133dc_Range16(3161LLU,3162LLU,1LLU),_1ab2133dc_Range16(3165LLU,3168LLU,3LLU),_1ab2133dc_Range16(3169LLU,3200LLU,31LLU),_1ab2133dc_Range16(3205LLU,3212LLU,1LLU),_1ab2133dc_Range16(3214LLU,3216LLU,1LLU),_1ab2133dc_Range16(3218LLU,3240LLU,1LLU),_1ab2133dc_Range16(3242LLU,3251LLU,1LLU),_1ab2133dc_Range16(3253LLU,3257LLU,1LLU),_1ab2133dc_Range16(3261LLU,3293LLU,32LLU),_1ab2133dc_Range16(3294LLU,3296LLU,2LLU),_1ab2133dc_Range16(3297LLU,3313LLU,16LLU),_1ab2133dc_Range16(3314LLU,3332LLU,18LLU),_1ab2133dc_Range16(3333LLU,3340LLU,1LLU),_1ab2133dc_Range16(3342LLU,3344LLU,1LLU),_1ab2133dc_Range16(3346LLU,3386LLU,1LLU),_1ab2133dc_Range16(3389LLU,3406LLU,17LLU),_1ab2133dc_Range16(3412LLU,3414LLU,1LLU),_1ab2133dc_Range16(3423LLU,3425LLU,1LLU),_1ab2133dc_Range16(3450LLU,3455LLU,1LLU),_1ab2133dc_Range16(3461LLU,3478LLU,1LLU),_1ab2133dc_Range16(3482LLU,3505LLU,1LLU),_1ab2133dc_Range16(3507LLU,3515LLU,1LLU),_1ab2133dc_Range16(3517LLU,3520LLU,3LLU),_1ab2133dc_Range16(3521LLU,3526LLU,1LLU),_1ab2133dc_Range16(3585LLU,3632LLU,1LLU),_1ab2133dc_Range16(3634LLU,3635LLU,1LLU),_1ab2133dc_Range16(3648LLU,3654LLU,1LLU),_1ab2133dc_Range16(3713LLU,3714LLU,1LLU),_1ab2133dc_Range16(3716LLU,3718LLU,2LLU),_1ab2133dc_Range16(3719LLU,3722LLU,1LLU),_1ab2133dc_Range16(3724LLU,3747LLU,1LLU),_1ab2133dc_Range16(3749LLU,3751LLU,2LLU),_1ab2133dc_Range16(3752LLU,3760LLU,1LLU),_1ab2133dc_Range16(3762LLU,3763LLU,1LLU),_1ab2133dc_Range16(3773LLU,3776LLU,3LLU),_1ab2133dc_Range16(3777LLU,3780LLU,1LLU),_1ab2133dc_Range16(3782LLU,3804LLU,22LLU),_1ab2133dc_Range16(3805LLU,3807LLU,1LLU),_1ab2133dc_Range16(3840LLU,3904LLU,64LLU),_1ab2133dc_Range16(3905LLU,3911LLU,1LLU),_1ab2133dc_Range16(3913LLU,3948LLU,1LLU),_1ab2133dc_Range16(3976LLU,3980LLU,1LLU),_1ab2133dc_Range16(4096LLU,4138LLU,1LLU),_1ab2133dc_Range16(4159LLU,4176LLU,17LLU),_1ab2133dc_Range16(4177LLU,4181LLU,1LLU),_1ab2133dc_Range16(4186LLU,4189LLU,1LLU),_1ab2133dc_Range16(4193LLU,4197LLU,4LLU),_1ab2133dc_Range16(4198LLU,4206LLU,8LLU),_1ab2133dc_Range16(4207LLU,4208LLU,1LLU),_1ab2133dc_Range16(4213LLU,4225LLU,1LLU),_1ab2133dc_Range16(4238LLU,4256LLU,18LLU),_1ab2133dc_Range16(4257LLU,4293LLU,1LLU),_1ab2133dc_Range16(4295LLU,4301LLU,6LLU),_1ab2133dc_Range16(4304LLU,4346LLU,1LLU),_1ab2133dc_Range16(4348LLU,4680LLU,1LLU),_1ab2133dc_Range16(4682LLU,4685LLU,1LLU),_1ab2133dc_Range16(4688LLU,4694LLU,1LLU),_1ab2133dc_Range16(4696LLU,4698LLU,2LLU),_1ab2133dc_Range16(4699LLU,4701LLU,1LLU),_1ab2133dc_Range16(4704LLU,4744LLU,1LLU),_1ab2133dc_Range16(4746LLU,4749LLU,1LLU),_1ab2133dc_Range16(4752LLU,4784LLU,1LLU),_1ab2133dc_Range16(4786LLU,4789LLU,1LLU),_1ab2133dc_Range16(4792LLU,4798LLU,1LLU),_1ab2133dc_Range16(4800LLU,4802LLU,2LLU),_1ab2133dc_Range16(4803LLU,4805LLU,1LLU),_1ab2133dc_Range16(4808LLU,4822LLU,1LLU),_1ab2133dc_Range16(4824LLU,4880LLU,1LLU),_1ab2133dc_Range16(4882LLU,4885LLU,1LLU),_1ab2133dc_Range16(4888LLU,4954LLU,1LLU),_1ab2133dc_Range16(4992LLU,5007LLU,1LLU),_1ab2133dc_Range16(5024LLU,5109LLU,1LLU),_1ab2133dc_Range16(5112LLU,5117LLU,1LLU),_1ab2133dc_Range16(5121LLU,5740LLU,1LLU),_1ab2133dc_Range16(5743LLU,5759LLU,1LLU),_1ab2133dc_Range16(5761LLU,5786LLU,1LLU),_1ab2133dc_Range16(5792LLU,5866LLU,1LLU),_1ab2133dc_Range16(5873LLU,5880LLU,1LLU),_1ab2133dc_Range16(5888LLU,5905LLU,1LLU),_1ab2133dc_Range16(5919LLU,5937LLU,1LLU),_1ab2133dc_Range16(5952LLU,5969LLU,1LLU),_1ab2133dc_Range16(5984LLU,5996LLU,1LLU),_1ab2133dc_Range16(5998LLU,6000LLU,1LLU),_1ab2133dc_Range16(6016LLU,6067LLU,1LLU),_1ab2133dc_Range16(6103LLU,6108LLU,5LLU),_1ab2133dc_Range16(6176LLU,6264LLU,1LLU),_1ab2133dc_Range16(6272LLU,6276LLU,1LLU),_1ab2133dc_Range16(6279LLU,6312LLU,1LLU),_1ab2133dc_Range16(6314LLU,6320LLU,6LLU),_1ab2133dc_Range16(6321LLU,6389LLU,1LLU),_1ab2133dc_Range16(6400LLU,6430LLU,1LLU),_1ab2133dc_Range16(6480LLU,6509LLU,1LLU),_1ab2133dc_Range16(6512LLU,6516LLU,1LLU),_1ab2133dc_Range16(6528LLU,6571LLU,1LLU),_1ab2133dc_Range16(6576LLU,6601LLU,1LLU),_1ab2133dc_Range16(6656LLU,6678LLU,1LLU),_1ab2133dc_Range16(6688LLU,6740LLU,1LLU),_1ab2133dc_Range16(6823LLU,6917LLU,94LLU),_1ab2133dc_Range16(6918LLU,6963LLU,1LLU),_1ab2133dc_Range16(6981LLU,6988LLU,1LLU),_1ab2133dc_Range16(7043LLU,7072LLU,1LLU),_1ab2133dc_Range16(7086LLU,7087LLU,1LLU),_1ab2133dc_Range16(7098LLU,7141LLU,1LLU),_1ab2133dc_Range16(7168LLU,7203LLU,1LLU),_1ab2133dc_Range16(7245LLU,7247LLU,1LLU),_1ab2133dc_Range16(7258LLU,7293LLU,1LLU),_1ab2133dc_Range16(7296LLU,7304LLU,1LLU),_1ab2133dc_Range16(7312LLU,7354LLU,1LLU),_1ab2133dc_Range16(7357LLU,7359LLU,1LLU),_1ab2133dc_Range16(7401LLU,7404LLU,1LLU),_1ab2133dc_Range16(7406LLU,7411LLU,1LLU),_1ab2133dc_Range16(7413LLU,7414LLU,1LLU),_1ab2133dc_Range16(7418LLU,7424LLU,6LLU),_1ab2133dc_Range16(7425LLU,7615LLU,1LLU),_1ab2133dc_Range16(7680LLU,7957LLU,1LLU),_1ab2133dc_Range16(7960LLU,7965LLU,1LLU),_1ab2133dc_Range16(7968LLU,8005LLU,1LLU),_1ab2133dc_Range16(8008LLU,8013LLU,1LLU),_1ab2133dc_Range16(8016LLU,8023LLU,1LLU),_1ab2133dc_Range16(8025LLU,8031LLU,2LLU),_1ab2133dc_Range16(8032LLU,8061LLU,1LLU),_1ab2133dc_Range16(8064LLU,8116LLU,1LLU),_1ab2133dc_Range16(8118LLU,8124LLU,1LLU),_1ab2133dc_Range16(8126LLU,8130LLU,4LLU),_1ab2133dc_Range16(8131LLU,8132LLU,1LLU),_1ab2133dc_Range16(8134LLU,8140LLU,1LLU),_1ab2133dc_Range16(8144LLU,8147LLU,1LLU),_1ab2133dc_Range16(8150LLU,8155LLU,1LLU),_1ab2133dc_Range16(8160LLU,8172LLU,1LLU),_1ab2133dc_Range16(8178LLU,8180LLU,1LLU),_1ab2133dc_Range16(8182LLU,8188LLU,1LLU),_1ab2133dc_Range16(8305LLU,8319LLU,14LLU),_1ab2133dc_Range16(8336LLU,8348LLU,1LLU),_1ab2133dc_Range16(8450LLU,8455LLU,5LLU),_1ab2133dc_Range16(8458LLU,8467LLU,1LLU),_1ab2133dc_Range16(8469LLU,8473LLU,4LLU),_1ab2133dc_Range16(8474LLU,8477LLU,1LLU),_1ab2133dc_Range16(8484LLU,8490LLU,2LLU),_1ab2133dc_Range16(8491LLU,8493LLU,1LLU),_1ab2133dc_Range16(8495LLU,8505LLU,1LLU),_1ab2133dc_Range16(8508LLU,8511LLU,1LLU),_1ab2133dc_Range16(8517LLU,8521LLU,1LLU),_1ab2133dc_Range16(8526LLU,8579LLU,53LLU),_1ab2133dc_Range16(8580LLU,11264LLU,2684LLU),_1ab2133dc_Range16(11265LLU,11492LLU,1LLU),_1ab2133dc_Range16(11499LLU,11502LLU,1LLU),_1ab2133dc_Range16(11506LLU,11507LLU,1LLU),_1ab2133dc_Range16(11520LLU,11557LLU,1LLU),_1ab2133dc_Range16(11559LLU,11565LLU,6LLU),_1ab2133dc_Range16(11568LLU,11623LLU,1LLU),_1ab2133dc_Range16(11631LLU,11648LLU,17LLU),_1ab2133dc_Range16(11649LLU,11670LLU,1LLU),_1ab2133dc_Range16(11680LLU,11686LLU,1LLU),_1ab2133dc_Range16(11688LLU,11694LLU,1LLU),_1ab2133dc_Range16(11696LLU,11702LLU,1LLU),_1ab2133dc_Range16(11704LLU,11710LLU,1LLU),_1ab2133dc_Range16(11712LLU,11718LLU,1LLU),_1ab2133dc_Range16(11720LLU,11726LLU,1LLU),_1ab2133dc_Range16(11728LLU,11734LLU,1LLU),_1ab2133dc_Range16(11736LLU,11742LLU,1LLU),_1ab2133dc_Range16(11823LLU,12293LLU,470LLU),_1ab2133dc_Range16(12294LLU,12337LLU,43LLU),_1ab2133dc_Range16(12338LLU,12341LLU,1LLU),_1ab2133dc_Range16(12347LLU,12348LLU,1LLU),_1ab2133dc_Range16(12353LLU,12438LLU,1LLU),_1ab2133dc_Range16(12445LLU,12447LLU,1LLU),_1ab2133dc_Range16(12449LLU,12538LLU,1LLU),_1ab2133dc_Range16(12540LLU,12543LLU,1LLU),_1ab2133dc_Range16(12549LLU,12591LLU,1LLU),_1ab2133dc_Range16(12593LLU,12686LLU,1LLU),_1ab2133dc_Range16(12704LLU,12735LLU,1LLU),_1ab2133dc_Range16(12784LLU,12799LLU,1LLU),_1ab2133dc_Range16(13312LLU,19903LLU,1LLU),_1ab2133dc_Range16(19968LLU,42124LLU,1LLU),_1ab2133dc_Range16(42192LLU,42237LLU,1LLU),_1ab2133dc_Range16(42240LLU,42508LLU,1LLU),_1ab2133dc_Range16(42512LLU,42527LLU,1LLU),_1ab2133dc_Range16(42538LLU,42539LLU,1LLU),_1ab2133dc_Range16(42560LLU,42606LLU,1LLU),_1ab2133dc_Range16(42623LLU,42653LLU,1LLU),_1ab2133dc_Range16(42656LLU,42725LLU,1LLU),_1ab2133dc_Range16(42775LLU,42783LLU,1LLU),_1ab2133dc_Range16(42786LLU,42888LLU,1LLU),_1ab2133dc_Range16(42891LLU,42954LLU,1LLU),_1ab2133dc_Range16(42960LLU,42961LLU,1LLU),_1ab2133dc_Range16(42963LLU,42965LLU,2LLU),_1ab2133dc_Range16(42966LLU,42969LLU,1LLU),_1ab2133dc_Range16(42994LLU,43009LLU,1LLU),_1ab2133dc_Range16(43011LLU,43013LLU,1LLU),_1ab2133dc_Range16(43015LLU,43018LLU,1LLU),_1ab2133dc_Range16(43020LLU,43042LLU,1LLU),_1ab2133dc_Range16(43072LLU,43123LLU,1LLU),_1ab2133dc_Range16(43138LLU,43187LLU,1LLU),_1ab2133dc_Range16(43250LLU,43255LLU,1LLU),_1ab2133dc_Range16(43259LLU,43261LLU,2LLU),_1ab2133dc_Range16(43262LLU,43274LLU,12LLU),_1ab2133dc_Range16(43275LLU,43301LLU,1LLU),_1ab2133dc_Range16(43312LLU,43334LLU,1LLU),_1ab2133dc_Range16(43360LLU,43388LLU,1LLU),_1ab2133dc_Range16(43396LLU,43442LLU,1LLU),_1ab2133dc_Range16(43471LLU,43488LLU,17LLU),_1ab2133dc_Range16(43489LLU,43492LLU,1LLU),_1ab2133dc_Range16(43494LLU,43503LLU,1LLU),_1ab2133dc_Range16(43514LLU,43518LLU,1LLU),_1ab2133dc_Range16(43520LLU,43560LLU,1LLU),_1ab2133dc_Range16(43584LLU,43586LLU,1LLU),_1ab2133dc_Range16(43588LLU,43595LLU,1LLU),_1ab2133dc_Range16(43616LLU,43638LLU,1LLU),_1ab2133dc_Range16(43642LLU,43646LLU,4LLU),_1ab2133dc_Range16(43647LLU,43695LLU,1LLU),_1ab2133dc_Range16(43697LLU,43701LLU,4LLU),_1ab2133dc_Range16(43702LLU,43705LLU,3LLU),_1ab2133dc_Range16(43706LLU,43709LLU,1LLU),_1ab2133dc_Range16(43712LLU,43714LLU,2LLU),_1ab2133dc_Range16(43739LLU,43741LLU,1LLU),_1ab2133dc_Range16(43744LLU,43754LLU,1LLU),_1ab2133dc_Range16(43762LLU,43764LLU,1LLU),_1ab2133dc_Range16(43777LLU,43782LLU,1LLU),_1ab2133dc_Range16(43785LLU,43790LLU,1LLU),_1ab2133dc_Range16(43793LLU,43798LLU,1LLU),_1ab2133dc_Range16(43808LLU,43814LLU,1LLU),_1ab2133dc_Range16(43816LLU,43822LLU,1LLU),_1ab2133dc_Range16(43824LLU,43866LLU,1LLU),_1ab2133dc_Range16(43868LLU,43881LLU,1LLU),_1ab2133dc_Range16(43888LLU,44002LLU,1LLU),_1ab2133dc_Range16(44032LLU,55203LLU,1LLU),_1ab2133dc_Range16(55216LLU,55238LLU,1LLU),_1ab2133dc_Range16(55243LLU,55291LLU,1LLU),_1ab2133dc_Range16(63744LLU,64109LLU,1LLU),_1ab2133dc_Range16(64112LLU,64217LLU,1LLU),_1ab2133dc_Range16(64256LLU,64262LLU,1LLU),_1ab2133dc_Range16(64275LLU,64279LLU,1LLU),_1ab2133dc_Range16(64285LLU,64287LLU,2LLU),_1ab2133dc_Range16(64288LLU,64296LLU,1LLU),_1ab2133dc_Range16(64298LLU,64310LLU,1LLU),_1ab2133dc_Range16(64312LLU,64316LLU,1LLU),_1ab2133dc_Range16(64318LLU,64320LLU,2LLU),_1ab2133dc_Range16(64321LLU,64323LLU,2LLU),_1ab2133dc_Range16(64324LLU,64326LLU,2LLU),_1ab2133dc_Range16(64327LLU,64433LLU,1LLU),_1ab2133dc_Range16(64467LLU,64829LLU,1LLU),_1ab2133dc_Range16(64848LLU,64911LLU,1LLU),_1ab2133dc_Range16(64914LLU,64967LLU,1LLU),_1ab2133dc_Range16(65008LLU,65019LLU,1LLU),_1ab2133dc_Range16(65136LLU,65140LLU,1LLU),_1ab2133dc_Range16(65142LLU,65276LLU,1LLU),_1ab2133dc_Range16(65313LLU,65338LLU,1LLU),_1ab2133dc_Range16(65345LLU,65370LLU,1LLU),_1ab2133dc_Range16(65382LLU,65470LLU,1LLU),_1ab2133dc_Range16(65474LLU,65479LLU,1LLU),_1ab2133dc_Range16(65482LLU,65487LLU,1LLU),_1ab2133dc_Range16(65490LLU,65495LLU,1LLU),_1ab2133dc_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(65536LLU,65547LLU,1LLU),_1ab2133dc_Range32(65549LLU,65574LLU,1LLU),_1ab2133dc_Range32(65576LLU,65594LLU,1LLU),_1ab2133dc_Range32(65596LLU,65597LLU,1LLU),_1ab2133dc_Range32(65599LLU,65613LLU,1LLU),_1ab2133dc_Range32(65616LLU,65629LLU,1LLU),_1ab2133dc_Range32(65664LLU,65786LLU,1LLU),_1ab2133dc_Range32(66176LLU,66204LLU,1LLU),_1ab2133dc_Range32(66208LLU,66256LLU,1LLU),_1ab2133dc_Range32(66304LLU,66335LLU,1LLU),_1ab2133dc_Range32(66349LLU,66368LLU,1LLU),_1ab2133dc_Range32(66370LLU,66377LLU,1LLU),_1ab2133dc_Range32(66384LLU,66421LLU,1LLU),_1ab2133dc_Range32(66432LLU,66461LLU,1LLU),_1ab2133dc_Range32(66464LLU,66499LLU,1LLU),_1ab2133dc_Range32(66504LLU,66511LLU,1LLU),_1ab2133dc_Range32(66560LLU,66717LLU,1LLU),_1ab2133dc_Range32(66736LLU,66771LLU,1LLU),_1ab2133dc_Range32(66776LLU,66811LLU,1LLU),_1ab2133dc_Range32(66816LLU,66855LLU,1LLU),_1ab2133dc_Range32(66864LLU,66915LLU,1LLU),_1ab2133dc_Range32(66928LLU,66938LLU,1LLU),_1ab2133dc_Range32(66940LLU,66954LLU,1LLU),_1ab2133dc_Range32(66956LLU,66962LLU,1LLU),_1ab2133dc_Range32(66964LLU,66965LLU,1LLU),_1ab2133dc_Range32(66967LLU,66977LLU,1LLU),_1ab2133dc_Range32(66979LLU,66993LLU,1LLU),_1ab2133dc_Range32(66995LLU,67001LLU,1LLU),_1ab2133dc_Range32(67003LLU,67004LLU,1LLU),_1ab2133dc_Range32(67072LLU,67382LLU,1LLU),_1ab2133dc_Range32(67392LLU,67413LLU,1LLU),_1ab2133dc_Range32(67424LLU,67431LLU,1LLU),_1ab2133dc_Range32(67456LLU,67461LLU,1LLU),_1ab2133dc_Range32(67463LLU,67504LLU,1LLU),_1ab2133dc_Range32(67506LLU,67514LLU,1LLU),_1ab2133dc_Range32(67584LLU,67589LLU,1LLU),_1ab2133dc_Range32(67592LLU,67594LLU,2LLU),_1ab2133dc_Range32(67595LLU,67637LLU,1LLU),_1ab2133dc_Range32(67639LLU,67640LLU,1LLU),_1ab2133dc_Range32(67644LLU,67647LLU,3LLU),_1ab2133dc_Range32(67648LLU,67669LLU,1LLU),_1ab2133dc_Range32(67680LLU,67702LLU,1LLU),_1ab2133dc_Range32(67712LLU,67742LLU,1LLU),_1ab2133dc_Range32(67808LLU,67826LLU,1LLU),_1ab2133dc_Range32(67828LLU,67829LLU,1LLU),_1ab2133dc_Range32(67840LLU,67861LLU,1LLU),_1ab2133dc_Range32(67872LLU,67897LLU,1LLU),_1ab2133dc_Range32(67968LLU,68023LLU,1LLU),_1ab2133dc_Range32(68030LLU,68031LLU,1LLU),_1ab2133dc_Range32(68096LLU,68112LLU,16LLU),_1ab2133dc_Range32(68113LLU,68115LLU,1LLU),_1ab2133dc_Range32(68117LLU,68119LLU,1LLU),_1ab2133dc_Range32(68121LLU,68149LLU,1LLU),_1ab2133dc_Range32(68192LLU,68220LLU,1LLU),_1ab2133dc_Range32(68224LLU,68252LLU,1LLU),_1ab2133dc_Range32(68288LLU,68295LLU,1LLU),_1ab2133dc_Range32(68297LLU,68324LLU,1LLU),_1ab2133dc_Range32(68352LLU,68405LLU,1LLU),_1ab2133dc_Range32(68416LLU,68437LLU,1LLU),_1ab2133dc_Range32(68448LLU,68466LLU,1LLU),_1ab2133dc_Range32(68480LLU,68497LLU,1LLU),_1ab2133dc_Range32(68608LLU,68680LLU,1LLU),_1ab2133dc_Range32(68736LLU,68786LLU,1LLU),_1ab2133dc_Range32(68800LLU,68850LLU,1LLU),_1ab2133dc_Range32(68864LLU,68899LLU,1LLU),_1ab2133dc_Range32(69248LLU,69289LLU,1LLU),_1ab2133dc_Range32(69296LLU,69297LLU,1LLU),_1ab2133dc_Range32(69376LLU,69404LLU,1LLU),_1ab2133dc_Range32(69415LLU,69424LLU,9LLU),_1ab2133dc_Range32(69425LLU,69445LLU,1LLU),_1ab2133dc_Range32(69488LLU,69505LLU,1LLU),_1ab2133dc_Range32(69552LLU,69572LLU,1LLU),_1ab2133dc_Range32(69600LLU,69622LLU,1LLU),_1ab2133dc_Range32(69635LLU,69687LLU,1LLU),_1ab2133dc_Range32(69745LLU,69746LLU,1LLU),_1ab2133dc_Range32(69749LLU,69763LLU,14LLU),_1ab2133dc_Range32(69764LLU,69807LLU,1LLU),_1ab2133dc_Range32(69840LLU,69864LLU,1LLU),_1ab2133dc_Range32(69891LLU,69926LLU,1LLU),_1ab2133dc_Range32(69956LLU,69959LLU,3LLU),_1ab2133dc_Range32(69968LLU,70002LLU,1LLU),_1ab2133dc_Range32(70006LLU,70019LLU,13LLU),_1ab2133dc_Range32(70020LLU,70066LLU,1LLU),_1ab2133dc_Range32(70081LLU,70084LLU,1LLU),_1ab2133dc_Range32(70106LLU,70108LLU,2LLU),_1ab2133dc_Range32(70144LLU,70161LLU,1LLU),_1ab2133dc_Range32(70163LLU,70187LLU,1LLU),_1ab2133dc_Range32(70207LLU,70208LLU,1LLU),_1ab2133dc_Range32(70272LLU,70278LLU,1LLU),_1ab2133dc_Range32(70280LLU,70282LLU,2LLU),_1ab2133dc_Range32(70283LLU,70285LLU,1LLU),_1ab2133dc_Range32(70287LLU,70301LLU,1LLU),_1ab2133dc_Range32(70303LLU,70312LLU,1LLU),_1ab2133dc_Range32(70320LLU,70366LLU,1LLU),_1ab2133dc_Range32(70405LLU,70412LLU,1LLU),_1ab2133dc_Range32(70415LLU,70416LLU,1LLU),_1ab2133dc_Range32(70419LLU,70440LLU,1LLU),_1ab2133dc_Range32(70442LLU,70448LLU,1LLU),_1ab2133dc_Range32(70450LLU,70451LLU,1LLU),_1ab2133dc_Range32(70453LLU,70457LLU,1LLU),_1ab2133dc_Range32(70461LLU,70480LLU,19LLU),_1ab2133dc_Range32(70493LLU,70497LLU,1LLU),_1ab2133dc_Range32(70656LLU,70708LLU,1LLU),_1ab2133dc_Range32(70727LLU,70730LLU,1LLU),_1ab2133dc_Range32(70751LLU,70753LLU,1LLU),_1ab2133dc_Range32(70784LLU,70831LLU,1LLU),_1ab2133dc_Range32(70852LLU,70853LLU,1LLU),_1ab2133dc_Range32(70855LLU,71040LLU,185LLU),_1ab2133dc_Range32(71041LLU,71086LLU,1LLU),_1ab2133dc_Range32(71128LLU,71131LLU,1LLU),_1ab2133dc_Range32(71168LLU,71215LLU,1LLU),_1ab2133dc_Range32(71236LLU,71296LLU,60LLU),_1ab2133dc_Range32(71297LLU,71338LLU,1LLU),_1ab2133dc_Range32(71352LLU,71424LLU,72LLU),_1ab2133dc_Range32(71425LLU,71450LLU,1LLU),_1ab2133dc_Range32(71488LLU,71494LLU,1LLU),_1ab2133dc_Range32(71680LLU,71723LLU,1LLU),_1ab2133dc_Range32(71840LLU,71903LLU,1LLU),_1ab2133dc_Range32(71935LLU,71942LLU,1LLU),_1ab2133dc_Range32(71945LLU,71948LLU,3LLU),_1ab2133dc_Range32(71949LLU,71955LLU,1LLU),_1ab2133dc_Range32(71957LLU,71958LLU,1LLU),_1ab2133dc_Range32(71960LLU,71983LLU,1LLU),_1ab2133dc_Range32(71999LLU,72001LLU,2LLU),_1ab2133dc_Range32(72096LLU,72103LLU,1LLU),_1ab2133dc_Range32(72106LLU,72144LLU,1LLU),_1ab2133dc_Range32(72161LLU,72163LLU,2LLU),_1ab2133dc_Range32(72192LLU,72203LLU,11LLU),_1ab2133dc_Range32(72204LLU,72242LLU,1LLU),_1ab2133dc_Range32(72250LLU,72272LLU,22LLU),_1ab2133dc_Range32(72284LLU,72329LLU,1LLU),_1ab2133dc_Range32(72349LLU,72368LLU,19LLU),_1ab2133dc_Range32(72369LLU,72440LLU,1LLU),_1ab2133dc_Range32(72704LLU,72712LLU,1LLU),_1ab2133dc_Range32(72714LLU,72750LLU,1LLU),_1ab2133dc_Range32(72768LLU,72818LLU,50LLU),_1ab2133dc_Range32(72819LLU,72847LLU,1LLU),_1ab2133dc_Range32(72960LLU,72966LLU,1LLU),_1ab2133dc_Range32(72968LLU,72969LLU,1LLU),_1ab2133dc_Range32(72971LLU,73008LLU,1LLU),_1ab2133dc_Range32(73030LLU,73056LLU,26LLU),_1ab2133dc_Range32(73057LLU,73061LLU,1LLU),_1ab2133dc_Range32(73063LLU,73064LLU,1LLU),_1ab2133dc_Range32(73066LLU,73097LLU,1LLU),_1ab2133dc_Range32(73112LLU,73440LLU,328LLU),_1ab2133dc_Range32(73441LLU,73458LLU,1LLU),_1ab2133dc_Range32(73474LLU,73476LLU,2LLU),_1ab2133dc_Range32(73477LLU,73488LLU,1LLU),_1ab2133dc_Range32(73490LLU,73523LLU,1LLU),_1ab2133dc_Range32(73648LLU,73728LLU,80LLU),_1ab2133dc_Range32(73729LLU,74649LLU,1LLU),_1ab2133dc_Range32(74880LLU,75075LLU,1LLU),_1ab2133dc_Range32(77712LLU,77808LLU,1LLU),_1ab2133dc_Range32(77824LLU,78895LLU,1LLU),_1ab2133dc_Range32(78913LLU,78918LLU,1LLU),_1ab2133dc_Range32(82944LLU,83526LLU,1LLU),_1ab2133dc_Range32(92160LLU,92728LLU,1LLU),_1ab2133dc_Range32(92736LLU,92766LLU,1LLU),_1ab2133dc_Range32(92784LLU,92862LLU,1LLU),_1ab2133dc_Range32(92880LLU,92909LLU,1LLU),_1ab2133dc_Range32(92928LLU,92975LLU,1LLU),_1ab2133dc_Range32(92992LLU,92995LLU,1LLU),_1ab2133dc_Range32(93027LLU,93047LLU,1LLU),_1ab2133dc_Range32(93053LLU,93071LLU,1LLU),_1ab2133dc_Range32(93760LLU,93823LLU,1LLU),_1ab2133dc_Range32(93952LLU,94026LLU,1LLU),_1ab2133dc_Range32(94032LLU,94099LLU,67LLU),_1ab2133dc_Range32(94100LLU,94111LLU,1LLU),_1ab2133dc_Range32(94176LLU,94177LLU,1LLU),_1ab2133dc_Range32(94179LLU,94208LLU,29LLU),_1ab2133dc_Range32(94209LLU,100343LLU,1LLU),_1ab2133dc_Range32(100352LLU,101589LLU,1LLU),_1ab2133dc_Range32(101632LLU,101640LLU,1LLU),_1ab2133dc_Range32(110576LLU,110579LLU,1LLU),_1ab2133dc_Range32(110581LLU,110587LLU,1LLU),_1ab2133dc_Range32(110589LLU,110590LLU,1LLU),_1ab2133dc_Range32(110592LLU,110882LLU,1LLU),_1ab2133dc_Range32(110898LLU,110928LLU,30LLU),_1ab2133dc_Range32(110929LLU,110930LLU,1LLU),_1ab2133dc_Range32(110933LLU,110948LLU,15LLU),_1ab2133dc_Range32(110949LLU,110951LLU,1LLU),_1ab2133dc_Range32(110960LLU,111355LLU,1LLU),_1ab2133dc_Range32(113664LLU,113770LLU,1LLU),_1ab2133dc_Range32(113776LLU,113788LLU,1LLU),_1ab2133dc_Range32(113792LLU,113800LLU,1LLU),_1ab2133dc_Range32(113808LLU,113817LLU,1LLU),_1ab2133dc_Range32(119808LLU,119892LLU,1LLU),_1ab2133dc_Range32(119894LLU,119964LLU,1LLU),_1ab2133dc_Range32(119966LLU,119967LLU,1LLU),_1ab2133dc_Range32(119970LLU,119973LLU,3LLU),_1ab2133dc_Range32(119974LLU,119977LLU,3LLU),_1ab2133dc_Range32(119978LLU,119980LLU,1LLU),_1ab2133dc_Range32(119982LLU,119993LLU,1LLU),_1ab2133dc_Range32(119995LLU,119997LLU,2LLU),_1ab2133dc_Range32(119998LLU,120003LLU,1LLU),_1ab2133dc_Range32(120005LLU,120069LLU,1LLU),_1ab2133dc_Range32(120071LLU,120074LLU,1LLU),_1ab2133dc_Range32(120077LLU,120084LLU,1LLU),_1ab2133dc_Range32(120086LLU,120092LLU,1LLU),_1ab2133dc_Range32(120094LLU,120121LLU,1LLU),_1ab2133dc_Range32(120123LLU,120126LLU,1LLU),_1ab2133dc_Range32(120128LLU,120132LLU,1LLU),_1ab2133dc_Range32(120134LLU,120138LLU,4LLU),_1ab2133dc_Range32(120139LLU,120144LLU,1LLU),_1ab2133dc_Range32(120146LLU,120485LLU,1LLU),_1ab2133dc_Range32(120488LLU,120512LLU,1LLU),_1ab2133dc_Range32(120514LLU,120538LLU,1LLU),_1ab2133dc_Range32(120540LLU,120570LLU,1LLU),_1ab2133dc_Range32(120572LLU,120596LLU,1LLU),_1ab2133dc_Range32(120598LLU,120628LLU,1LLU),_1ab2133dc_Range32(120630LLU,120654LLU,1LLU),_1ab2133dc_Range32(120656LLU,120686LLU,1LLU),_1ab2133dc_Range32(120688LLU,120712LLU,1LLU),_1ab2133dc_Range32(120714LLU,120744LLU,1LLU),_1ab2133dc_Range32(120746LLU,120770LLU,1LLU),_1ab2133dc_Range32(120772LLU,120779LLU,1LLU),_1ab2133dc_Range32(122624LLU,122654LLU,1LLU),_1ab2133dc_Range32(122661LLU,122666LLU,1LLU),_1ab2133dc_Range32(122928LLU,122989LLU,1LLU),_1ab2133dc_Range32(123136LLU,123180LLU,1LLU),_1ab2133dc_Range32(123191LLU,123197LLU,1LLU),_1ab2133dc_Range32(123214LLU,123536LLU,322LLU),_1ab2133dc_Range32(123537LLU,123565LLU,1LLU),_1ab2133dc_Range32(123584LLU,123627LLU,1LLU),_1ab2133dc_Range32(124112LLU,124139LLU,1LLU),_1ab2133dc_Range32(124896LLU,124902LLU,1LLU),_1ab2133dc_Range32(124904LLU,124907LLU,1LLU),_1ab2133dc_Range32(124909LLU,124910LLU,1LLU),_1ab2133dc_Range32(124912LLU,124926LLU,1LLU),_1ab2133dc_Range32(124928LLU,125124LLU,1LLU),_1ab2133dc_Range32(125184LLU,125251LLU,1LLU),_1ab2133dc_Range32(125259LLU,126464LLU,1205LLU),_1ab2133dc_Range32(126465LLU,126467LLU,1LLU),_1ab2133dc_Range32(126469LLU,126495LLU,1LLU),_1ab2133dc_Range32(126497LLU,126498LLU,1LLU),_1ab2133dc_Range32(126500LLU,126503LLU,3LLU),_1ab2133dc_Range32(126505LLU,126514LLU,1LLU),_1ab2133dc_Range32(126516LLU,126519LLU,1LLU),_1ab2133dc_Range32(126521LLU,126523LLU,2LLU),_1ab2133dc_Range32(126530LLU,126535LLU,5LLU),_1ab2133dc_Range32(126537LLU,126541LLU,2LLU),_1ab2133dc_Range32(126542LLU,126543LLU,1LLU),_1ab2133dc_Range32(126545LLU,126546LLU,1LLU),_1ab2133dc_Range32(126548LLU,126551LLU,3LLU),_1ab2133dc_Range32(126553LLU,126561LLU,2LLU),_1ab2133dc_Range32(126562LLU,126564LLU,2LLU),_1ab2133dc_Range32(126567LLU,126570LLU,1LLU),_1ab2133dc_Range32(126572LLU,126578LLU,1LLU),_1ab2133dc_Range32(126580LLU,126583LLU,1LLU),_1ab2133dc_Range32(126585LLU,126588LLU,1LLU),_1ab2133dc_Range32(126590LLU,126592LLU,2LLU),_1ab2133dc_Range32(126593LLU,126601LLU,1LLU),_1ab2133dc_Range32(126603LLU,126619LLU,1LLU),_1ab2133dc_Range32(126625LLU,126627LLU,1LLU),_1ab2133dc_Range32(126629LLU,126633LLU,1LLU),_1ab2133dc_Range32(126635LLU,126651LLU,1LLU),_1ab2133dc_Range32(131072LLU,173791LLU,1LLU),_1ab2133dc_Range32(173824LLU,177977LLU,1LLU),_1ab2133dc_Range32(177984LLU,178205LLU,1LLU),_1ab2133dc_Range32(178208LLU,183969LLU,1LLU),_1ab2133dc_Range32(183984LLU,191456LLU,1LLU),_1ab2133dc_Range32(194560LLU,195101LLU,1LLU),_1ab2133dc_Range32(196608LLU,201546LLU,1LLU),_1ab2133dc_Range32(201552LLU,205743LLU,1LLU)}),6LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LL = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(97LLU,122LLU,1LLU),_1ab2133dc_Range16(181LLU,223LLU,42LLU),_1ab2133dc_Range16(224LLU,246LLU,1LLU),_1ab2133dc_Range16(248LLU,255LLU,1LLU),_1ab2133dc_Range16(257LLU,311LLU,2LLU),_1ab2133dc_Range16(312LLU,328LLU,2LLU),_1ab2133dc_Range16(329LLU,375LLU,2LLU),_1ab2133dc_Range16(378LLU,382LLU,2LLU),_1ab2133dc_Range16(383LLU,384LLU,1LLU),_1ab2133dc_Range16(387LLU,389LLU,2LLU),_1ab2133dc_Range16(392LLU,396LLU,4LLU),_1ab2133dc_Range16(397LLU,402LLU,5LLU),_1ab2133dc_Range16(405LLU,409LLU,4LLU),_1ab2133dc_Range16(410LLU,411LLU,1LLU),_1ab2133dc_Range16(414LLU,417LLU,3LLU),_1ab2133dc_Range16(419LLU,421LLU,2LLU),_1ab2133dc_Range16(424LLU,426LLU,2LLU),_1ab2133dc_Range16(427LLU,429LLU,2LLU),_1ab2133dc_Range16(432LLU,436LLU,4LLU),_1ab2133dc_Range16(438LLU,441LLU,3LLU),_1ab2133dc_Range16(442LLU,445LLU,3LLU),_1ab2133dc_Range16(446LLU,447LLU,1LLU),_1ab2133dc_Range16(454LLU,460LLU,3LLU),_1ab2133dc_Range16(462LLU,476LLU,2LLU),_1ab2133dc_Range16(477LLU,495LLU,2LLU),_1ab2133dc_Range16(496LLU,499LLU,3LLU),_1ab2133dc_Range16(501LLU,505LLU,4LLU),_1ab2133dc_Range16(507LLU,563LLU,2LLU),_1ab2133dc_Range16(564LLU,569LLU,1LLU),_1ab2133dc_Range16(572LLU,575LLU,3LLU),_1ab2133dc_Range16(576LLU,578LLU,2LLU),_1ab2133dc_Range16(583LLU,591LLU,2LLU),_1ab2133dc_Range16(592LLU,659LLU,1LLU),_1ab2133dc_Range16(661LLU,687LLU,1LLU),_1ab2133dc_Range16(881LLU,883LLU,2LLU),_1ab2133dc_Range16(887LLU,891LLU,4LLU),_1ab2133dc_Range16(892LLU,893LLU,1LLU),_1ab2133dc_Range16(912LLU,940LLU,28LLU),_1ab2133dc_Range16(941LLU,974LLU,1LLU),_1ab2133dc_Range16(976LLU,977LLU,1LLU),_1ab2133dc_Range16(981LLU,983LLU,1LLU),_1ab2133dc_Range16(985LLU,1007LLU,2LLU),_1ab2133dc_Range16(1008LLU,1011LLU,1LLU),_1ab2133dc_Range16(1013LLU,1019LLU,3LLU),_1ab2133dc_Range16(1020LLU,1072LLU,52LLU),_1ab2133dc_Range16(1073LLU,1119LLU,1LLU),_1ab2133dc_Range16(1121LLU,1153LLU,2LLU),_1ab2133dc_Range16(1163LLU,1215LLU,2LLU),_1ab2133dc_Range16(1218LLU,1230LLU,2LLU),_1ab2133dc_Range16(1231LLU,1327LLU,2LLU),_1ab2133dc_Range16(1376LLU,1416LLU,1LLU),_1ab2133dc_Range16(4304LLU,4346LLU,1LLU),_1ab2133dc_Range16(4349LLU,4351LLU,1LLU),_1ab2133dc_Range16(5112LLU,5117LLU,1LLU),_1ab2133dc_Range16(7296LLU,7304LLU,1LLU),_1ab2133dc_Range16(7424LLU,7467LLU,1LLU),_1ab2133dc_Range16(7531LLU,7543LLU,1LLU),_1ab2133dc_Range16(7545LLU,7578LLU,1LLU),_1ab2133dc_Range16(7681LLU,7829LLU,2LLU),_1ab2133dc_Range16(7830LLU,7837LLU,1LLU),_1ab2133dc_Range16(7839LLU,7935LLU,2LLU),_1ab2133dc_Range16(7936LLU,7943LLU,1LLU),_1ab2133dc_Range16(7952LLU,7957LLU,1LLU),_1ab2133dc_Range16(7968LLU,7975LLU,1LLU),_1ab2133dc_Range16(7984LLU,7991LLU,1LLU),_1ab2133dc_Range16(8000LLU,8005LLU,1LLU),_1ab2133dc_Range16(8016LLU,8023LLU,1LLU),_1ab2133dc_Range16(8032LLU,8039LLU,1LLU),_1ab2133dc_Range16(8048LLU,8061LLU,1LLU),_1ab2133dc_Range16(8064LLU,8071LLU,1LLU),_1ab2133dc_Range16(8080LLU,8087LLU,1LLU),_1ab2133dc_Range16(8096LLU,8103LLU,1LLU),_1ab2133dc_Range16(8112LLU,8116LLU,1LLU),_1ab2133dc_Range16(8118LLU,8119LLU,1LLU),_1ab2133dc_Range16(8126LLU,8130LLU,4LLU),_1ab2133dc_Range16(8131LLU,8132LLU,1LLU),_1ab2133dc_Range16(8134LLU,8135LLU,1LLU),_1ab2133dc_Range16(8144LLU,8147LLU,1LLU),_1ab2133dc_Range16(8150LLU,8151LLU,1LLU),_1ab2133dc_Range16(8160LLU,8167LLU,1LLU),_1ab2133dc_Range16(8178LLU,8180LLU,1LLU),_1ab2133dc_Range16(8182LLU,8183LLU,1LLU),_1ab2133dc_Range16(8458LLU,8462LLU,4LLU),_1ab2133dc_Range16(8463LLU,8467LLU,4LLU),_1ab2133dc_Range16(8495LLU,8505LLU,5LLU),_1ab2133dc_Range16(8508LLU,8509LLU,1LLU),_1ab2133dc_Range16(8518LLU,8521LLU,1LLU),_1ab2133dc_Range16(8526LLU,8580LLU,54LLU),_1ab2133dc_Range16(11312LLU,11359LLU,1LLU),_1ab2133dc_Range16(11361LLU,11365LLU,4LLU),_1ab2133dc_Range16(11366LLU,11372LLU,2LLU),_1ab2133dc_Range16(11377LLU,11379LLU,2LLU),_1ab2133dc_Range16(11380LLU,11382LLU,2LLU),_1ab2133dc_Range16(11383LLU,11387LLU,1LLU),_1ab2133dc_Range16(11393LLU,11491LLU,2LLU),_1ab2133dc_Range16(11492LLU,11500LLU,8LLU),_1ab2133dc_Range16(11502LLU,11507LLU,5LLU),_1ab2133dc_Range16(11520LLU,11557LLU,1LLU),_1ab2133dc_Range16(11559LLU,11565LLU,6LLU),_1ab2133dc_Range16(42561LLU,42605LLU,2LLU),_1ab2133dc_Range16(42625LLU,42651LLU,2LLU),_1ab2133dc_Range16(42787LLU,42799LLU,2LLU),_1ab2133dc_Range16(42800LLU,42801LLU,1LLU),_1ab2133dc_Range16(42803LLU,42865LLU,2LLU),_1ab2133dc_Range16(42866LLU,42872LLU,1LLU),_1ab2133dc_Range16(42874LLU,42876LLU,2LLU),_1ab2133dc_Range16(42879LLU,42887LLU,2LLU),_1ab2133dc_Range16(42892LLU,42894LLU,2LLU),_1ab2133dc_Range16(42897LLU,42899LLU,2LLU),_1ab2133dc_Range16(42900LLU,42901LLU,1LLU),_1ab2133dc_Range16(42903LLU,42921LLU,2LLU),_1ab2133dc_Range16(42927LLU,42933LLU,6LLU),_1ab2133dc_Range16(42935LLU,42947LLU,2LLU),_1ab2133dc_Range16(42952LLU,42954LLU,2LLU),_1ab2133dc_Range16(42961LLU,42969LLU,2LLU),_1ab2133dc_Range16(42998LLU,43002LLU,4LLU),_1ab2133dc_Range16(43824LLU,43866LLU,1LLU),_1ab2133dc_Range16(43872LLU,43880LLU,1LLU),_1ab2133dc_Range16(43888LLU,43967LLU,1LLU),_1ab2133dc_Range16(64256LLU,64262LLU,1LLU),_1ab2133dc_Range16(64275LLU,64279LLU,1LLU),_1ab2133dc_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66600LLU,66639LLU,1LLU),_1ab2133dc_Range32(66776LLU,66811LLU,1LLU),_1ab2133dc_Range32(66967LLU,66977LLU,1LLU),_1ab2133dc_Range32(66979LLU,66993LLU,1LLU),_1ab2133dc_Range32(66995LLU,67001LLU,1LLU),_1ab2133dc_Range32(67003LLU,67004LLU,1LLU),_1ab2133dc_Range32(68800LLU,68850LLU,1LLU),_1ab2133dc_Range32(71872LLU,71903LLU,1LLU),_1ab2133dc_Range32(93792LLU,93823LLU,1LLU),_1ab2133dc_Range32(119834LLU,119859LLU,1LLU),_1ab2133dc_Range32(119886LLU,119892LLU,1LLU),_1ab2133dc_Range32(119894LLU,119911LLU,1LLU),_1ab2133dc_Range32(119938LLU,119963LLU,1LLU),_1ab2133dc_Range32(119990LLU,119993LLU,1LLU),_1ab2133dc_Range32(119995LLU,119997LLU,2LLU),_1ab2133dc_Range32(119998LLU,120003LLU,1LLU),_1ab2133dc_Range32(120005LLU,120015LLU,1LLU),_1ab2133dc_Range32(120042LLU,120067LLU,1LLU),_1ab2133dc_Range32(120094LLU,120119LLU,1LLU),_1ab2133dc_Range32(120146LLU,120171LLU,1LLU),_1ab2133dc_Range32(120198LLU,120223LLU,1LLU),_1ab2133dc_Range32(120250LLU,120275LLU,1LLU),_1ab2133dc_Range32(120302LLU,120327LLU,1LLU),_1ab2133dc_Range32(120354LLU,120379LLU,1LLU),_1ab2133dc_Range32(120406LLU,120431LLU,1LLU),_1ab2133dc_Range32(120458LLU,120485LLU,1LLU),_1ab2133dc_Range32(120514LLU,120538LLU,1LLU),_1ab2133dc_Range32(120540LLU,120545LLU,1LLU),_1ab2133dc_Range32(120572LLU,120596LLU,1LLU),_1ab2133dc_Range32(120598LLU,120603LLU,1LLU),_1ab2133dc_Range32(120630LLU,120654LLU,1LLU),_1ab2133dc_Range32(120656LLU,120661LLU,1LLU),_1ab2133dc_Range32(120688LLU,120712LLU,1LLU),_1ab2133dc_Range32(120714LLU,120719LLU,1LLU),_1ab2133dc_Range32(120746LLU,120770LLU,1LLU),_1ab2133dc_Range32(120772LLU,120777LLU,1LLU),_1ab2133dc_Range32(120779LLU,122624LLU,1845LLU),_1ab2133dc_Range32(122625LLU,122633LLU,1LLU),_1ab2133dc_Range32(122635LLU,122654LLU,1LLU),_1ab2133dc_Range32(122661LLU,122666LLU,1LLU),_1ab2133dc_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LM = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(688LLU,705LLU,1LLU),_1ab2133dc_Range16(710LLU,721LLU,1LLU),_1ab2133dc_Range16(736LLU,740LLU,1LLU),_1ab2133dc_Range16(748LLU,750LLU,2LLU),_1ab2133dc_Range16(884LLU,890LLU,6LLU),_1ab2133dc_Range16(1369LLU,1600LLU,231LLU),_1ab2133dc_Range16(1765LLU,1766LLU,1LLU),_1ab2133dc_Range16(2036LLU,2037LLU,1LLU),_1ab2133dc_Range16(2042LLU,2074LLU,32LLU),_1ab2133dc_Range16(2084LLU,2088LLU,4LLU),_1ab2133dc_Range16(2249LLU,2417LLU,168LLU),_1ab2133dc_Range16(3654LLU,3782LLU,128LLU),_1ab2133dc_Range16(4348LLU,6103LLU,1755LLU),_1ab2133dc_Range16(6211LLU,6823LLU,612LLU),_1ab2133dc_Range16(7288LLU,7293LLU,1LLU),_1ab2133dc_Range16(7468LLU,7530LLU,1LLU),_1ab2133dc_Range16(7544LLU,7579LLU,35LLU),_1ab2133dc_Range16(7580LLU,7615LLU,1LLU),_1ab2133dc_Range16(8305LLU,8319LLU,14LLU),_1ab2133dc_Range16(8336LLU,8348LLU,1LLU),_1ab2133dc_Range16(11388LLU,11389LLU,1LLU),_1ab2133dc_Range16(11631LLU,11823LLU,192LLU),_1ab2133dc_Range16(12293LLU,12337LLU,44LLU),_1ab2133dc_Range16(12338LLU,12341LLU,1LLU),_1ab2133dc_Range16(12347LLU,12445LLU,98LLU),_1ab2133dc_Range16(12446LLU,12540LLU,94LLU),_1ab2133dc_Range16(12541LLU,12542LLU,1LLU),_1ab2133dc_Range16(40981LLU,42232LLU,1251LLU),_1ab2133dc_Range16(42233LLU,42237LLU,1LLU),_1ab2133dc_Range16(42508LLU,42623LLU,115LLU),_1ab2133dc_Range16(42652LLU,42653LLU,1LLU),_1ab2133dc_Range16(42775LLU,42783LLU,1LLU),_1ab2133dc_Range16(42864LLU,42888LLU,24LLU),_1ab2133dc_Range16(42994LLU,42996LLU,1LLU),_1ab2133dc_Range16(43000LLU,43001LLU,1LLU),_1ab2133dc_Range16(43471LLU,43494LLU,23LLU),_1ab2133dc_Range16(43632LLU,43741LLU,109LLU),_1ab2133dc_Range16(43763LLU,43764LLU,1LLU),_1ab2133dc_Range16(43868LLU,43871LLU,1LLU),_1ab2133dc_Range16(43881LLU,65392LLU,21511LLU),_1ab2133dc_Range16(65438LLU,65439LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(67456LLU,67461LLU,1LLU),_1ab2133dc_Range32(67463LLU,67504LLU,1LLU),_1ab2133dc_Range32(67506LLU,67514LLU,1LLU),_1ab2133dc_Range32(92992LLU,92995LLU,1LLU),_1ab2133dc_Range32(94099LLU,94111LLU,1LLU),_1ab2133dc_Range32(94176LLU,94177LLU,1LLU),_1ab2133dc_Range32(94179LLU,110576LLU,16397LLU),_1ab2133dc_Range32(110577LLU,110579LLU,1LLU),_1ab2133dc_Range32(110581LLU,110587LLU,1LLU),_1ab2133dc_Range32(110589LLU,110590LLU,1LLU),_1ab2133dc_Range32(122928LLU,122989LLU,1LLU),_1ab2133dc_Range32(123191LLU,123197LLU,1LLU),_1ab2133dc_Range32(124139LLU,125259LLU,1120LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(170LLU,186LLU,16LLU),_1ab2133dc_Range16(443LLU,448LLU,5LLU),_1ab2133dc_Range16(449LLU,451LLU,1LLU),_1ab2133dc_Range16(660LLU,1488LLU,828LLU),_1ab2133dc_Range16(1489LLU,1514LLU,1LLU),_1ab2133dc_Range16(1519LLU,1522LLU,1LLU),_1ab2133dc_Range16(1568LLU,1599LLU,1LLU),_1ab2133dc_Range16(1601LLU,1610LLU,1LLU),_1ab2133dc_Range16(1646LLU,1647LLU,1LLU),_1ab2133dc_Range16(1649LLU,1747LLU,1LLU),_1ab2133dc_Range16(1749LLU,1774LLU,25LLU),_1ab2133dc_Range16(1775LLU,1786LLU,11LLU),_1ab2133dc_Range16(1787LLU,1788LLU,1LLU),_1ab2133dc_Range16(1791LLU,1808LLU,17LLU),_1ab2133dc_Range16(1810LLU,1839LLU,1LLU),_1ab2133dc_Range16(1869LLU,1957LLU,1LLU),_1ab2133dc_Range16(1969LLU,1994LLU,25LLU),_1ab2133dc_Range16(1995LLU,2026LLU,1LLU),_1ab2133dc_Range16(2048LLU,2069LLU,1LLU),_1ab2133dc_Range16(2112LLU,2136LLU,1LLU),_1ab2133dc_Range16(2144LLU,2154LLU,1LLU),_1ab2133dc_Range16(2160LLU,2183LLU,1LLU),_1ab2133dc_Range16(2185LLU,2190LLU,1LLU),_1ab2133dc_Range16(2208LLU,2248LLU,1LLU),_1ab2133dc_Range16(2308LLU,2361LLU,1LLU),_1ab2133dc_Range16(2365LLU,2384LLU,19LLU),_1ab2133dc_Range16(2392LLU,2401LLU,1LLU),_1ab2133dc_Range16(2418LLU,2432LLU,1LLU),_1ab2133dc_Range16(2437LLU,2444LLU,1LLU),_1ab2133dc_Range16(2447LLU,2448LLU,1LLU),_1ab2133dc_Range16(2451LLU,2472LLU,1LLU),_1ab2133dc_Range16(2474LLU,2480LLU,1LLU),_1ab2133dc_Range16(2482LLU,2486LLU,4LLU),_1ab2133dc_Range16(2487LLU,2489LLU,1LLU),_1ab2133dc_Range16(2493LLU,2510LLU,17LLU),_1ab2133dc_Range16(2524LLU,2525LLU,1LLU),_1ab2133dc_Range16(2527LLU,2529LLU,1LLU),_1ab2133dc_Range16(2544LLU,2545LLU,1LLU),_1ab2133dc_Range16(2556LLU,2565LLU,9LLU),_1ab2133dc_Range16(2566LLU,2570LLU,1LLU),_1ab2133dc_Range16(2575LLU,2576LLU,1LLU),_1ab2133dc_Range16(2579LLU,2600LLU,1LLU),_1ab2133dc_Range16(2602LLU,2608LLU,1LLU),_1ab2133dc_Range16(2610LLU,2611LLU,1LLU),_1ab2133dc_Range16(2613LLU,2614LLU,1LLU),_1ab2133dc_Range16(2616LLU,2617LLU,1LLU),_1ab2133dc_Range16(2649LLU,2652LLU,1LLU),_1ab2133dc_Range16(2654LLU,2674LLU,20LLU),_1ab2133dc_Range16(2675LLU,2676LLU,1LLU),_1ab2133dc_Range16(2693LLU,2701LLU,1LLU),_1ab2133dc_Range16(2703LLU,2705LLU,1LLU),_1ab2133dc_Range16(2707LLU,2728LLU,1LLU),_1ab2133dc_Range16(2730LLU,2736LLU,1LLU),_1ab2133dc_Range16(2738LLU,2739LLU,1LLU),_1ab2133dc_Range16(2741LLU,2745LLU,1LLU),_1ab2133dc_Range16(2749LLU,2768LLU,19LLU),_1ab2133dc_Range16(2784LLU,2785LLU,1LLU),_1ab2133dc_Range16(2809LLU,2821LLU,12LLU),_1ab2133dc_Range16(2822LLU,2828LLU,1LLU),_1ab2133dc_Range16(2831LLU,2832LLU,1LLU),_1ab2133dc_Range16(2835LLU,2856LLU,1LLU),_1ab2133dc_Range16(2858LLU,2864LLU,1LLU),_1ab2133dc_Range16(2866LLU,2867LLU,1LLU),_1ab2133dc_Range16(2869LLU,2873LLU,1LLU),_1ab2133dc_Range16(2877LLU,2908LLU,31LLU),_1ab2133dc_Range16(2909LLU,2911LLU,2LLU),_1ab2133dc_Range16(2912LLU,2913LLU,1LLU),_1ab2133dc_Range16(2929LLU,2947LLU,18LLU),_1ab2133dc_Range16(2949LLU,2954LLU,1LLU),_1ab2133dc_Range16(2958LLU,2960LLU,1LLU),_1ab2133dc_Range16(2962LLU,2965LLU,1LLU),_1ab2133dc_Range16(2969LLU,2970LLU,1LLU),_1ab2133dc_Range16(2972LLU,2974LLU,2LLU),_1ab2133dc_Range16(2975LLU,2979LLU,4LLU),_1ab2133dc_Range16(2980LLU,2984LLU,4LLU),_1ab2133dc_Range16(2985LLU,2986LLU,1LLU),_1ab2133dc_Range16(2990LLU,3001LLU,1LLU),_1ab2133dc_Range16(3024LLU,3077LLU,53LLU),_1ab2133dc_Range16(3078LLU,3084LLU,1LLU),_1ab2133dc_Range16(3086LLU,3088LLU,1LLU),_1ab2133dc_Range16(3090LLU,3112LLU,1LLU),_1ab2133dc_Range16(3114LLU,3129LLU,1LLU),_1ab2133dc_Range16(3133LLU,3160LLU,27LLU),_1ab2133dc_Range16(3161LLU,3162LLU,1LLU),_1ab2133dc_Range16(3165LLU,3168LLU,3LLU),_1ab2133dc_Range16(3169LLU,3200LLU,31LLU),_1ab2133dc_Range16(3205LLU,3212LLU,1LLU),_1ab2133dc_Range16(3214LLU,3216LLU,1LLU),_1ab2133dc_Range16(3218LLU,3240LLU,1LLU),_1ab2133dc_Range16(3242LLU,3251LLU,1LLU),_1ab2133dc_Range16(3253LLU,3257LLU,1LLU),_1ab2133dc_Range16(3261LLU,3293LLU,32LLU),_1ab2133dc_Range16(3294LLU,3296LLU,2LLU),_1ab2133dc_Range16(3297LLU,3313LLU,16LLU),_1ab2133dc_Range16(3314LLU,3332LLU,18LLU),_1ab2133dc_Range16(3333LLU,3340LLU,1LLU),_1ab2133dc_Range16(3342LLU,3344LLU,1LLU),_1ab2133dc_Range16(3346LLU,3386LLU,1LLU),_1ab2133dc_Range16(3389LLU,3406LLU,17LLU),_1ab2133dc_Range16(3412LLU,3414LLU,1LLU),_1ab2133dc_Range16(3423LLU,3425LLU,1LLU),_1ab2133dc_Range16(3450LLU,3455LLU,1LLU),_1ab2133dc_Range16(3461LLU,3478LLU,1LLU),_1ab2133dc_Range16(3482LLU,3505LLU,1LLU),_1ab2133dc_Range16(3507LLU,3515LLU,1LLU),_1ab2133dc_Range16(3517LLU,3520LLU,3LLU),_1ab2133dc_Range16(3521LLU,3526LLU,1LLU),_1ab2133dc_Range16(3585LLU,3632LLU,1LLU),_1ab2133dc_Range16(3634LLU,3635LLU,1LLU),_1ab2133dc_Range16(3648LLU,3653LLU,1LLU),_1ab2133dc_Range16(3713LLU,3714LLU,1LLU),_1ab2133dc_Range16(3716LLU,3718LLU,2LLU),_1ab2133dc_Range16(3719LLU,3722LLU,1LLU),_1ab2133dc_Range16(3724LLU,3747LLU,1LLU),_1ab2133dc_Range16(3749LLU,3751LLU,2LLU),_1ab2133dc_Range16(3752LLU,3760LLU,1LLU),_1ab2133dc_Range16(3762LLU,3763LLU,1LLU),_1ab2133dc_Range16(3773LLU,3776LLU,3LLU),_1ab2133dc_Range16(3777LLU,3780LLU,1LLU),_1ab2133dc_Range16(3804LLU,3807LLU,1LLU),_1ab2133dc_Range16(3840LLU,3904LLU,64LLU),_1ab2133dc_Range16(3905LLU,3911LLU,1LLU),_1ab2133dc_Range16(3913LLU,3948LLU,1LLU),_1ab2133dc_Range16(3976LLU,3980LLU,1LLU),_1ab2133dc_Range16(4096LLU,4138LLU,1LLU),_1ab2133dc_Range16(4159LLU,4176LLU,17LLU),_1ab2133dc_Range16(4177LLU,4181LLU,1LLU),_1ab2133dc_Range16(4186LLU,4189LLU,1LLU),_1ab2133dc_Range16(4193LLU,4197LLU,4LLU),_1ab2133dc_Range16(4198LLU,4206LLU,8LLU),_1ab2133dc_Range16(4207LLU,4208LLU,1LLU),_1ab2133dc_Range16(4213LLU,4225LLU,1LLU),_1ab2133dc_Range16(4238LLU,4352LLU,114LLU),_1ab2133dc_Range16(4353LLU,4680LLU,1LLU),_1ab2133dc_Range16(4682LLU,4685LLU,1LLU),_1ab2133dc_Range16(4688LLU,4694LLU,1LLU),_1ab2133dc_Range16(4696LLU,4698LLU,2LLU),_1ab2133dc_Range16(4699LLU,4701LLU,1LLU),_1ab2133dc_Range16(4704LLU,4744LLU,1LLU),_1ab2133dc_Range16(4746LLU,4749LLU,1LLU),_1ab2133dc_Range16(4752LLU,4784LLU,1LLU),_1ab2133dc_Range16(4786LLU,4789LLU,1LLU),_1ab2133dc_Range16(4792LLU,4798LLU,1LLU),_1ab2133dc_Range16(4800LLU,4802LLU,2LLU),_1ab2133dc_Range16(4803LLU,4805LLU,1LLU),_1ab2133dc_Range16(4808LLU,4822LLU,1LLU),_1ab2133dc_Range16(4824LLU,4880LLU,1LLU),_1ab2133dc_Range16(4882LLU,4885LLU,1LLU),_1ab2133dc_Range16(4888LLU,4954LLU,1LLU),_1ab2133dc_Range16(4992LLU,5007LLU,1LLU),_1ab2133dc_Range16(5121LLU,5740LLU,1LLU),_1ab2133dc_Range16(5743LLU,5759LLU,1LLU),_1ab2133dc_Range16(5761LLU,5786LLU,1LLU),_1ab2133dc_Range16(5792LLU,5866LLU,1LLU),_1ab2133dc_Range16(5873LLU,5880LLU,1LLU),_1ab2133dc_Range16(5888LLU,5905LLU,1LLU),_1ab2133dc_Range16(5919LLU,5937LLU,1LLU),_1ab2133dc_Range16(5952LLU,5969LLU,1LLU),_1ab2133dc_Range16(5984LLU,5996LLU,1LLU),_1ab2133dc_Range16(5998LLU,6000LLU,1LLU),_1ab2133dc_Range16(6016LLU,6067LLU,1LLU),_1ab2133dc_Range16(6108LLU,6176LLU,68LLU),_1ab2133dc_Range16(6177LLU,6210LLU,1LLU),_1ab2133dc_Range16(6212LLU,6264LLU,1LLU),_1ab2133dc_Range16(6272LLU,6276LLU,1LLU),_1ab2133dc_Range16(6279LLU,6312LLU,1LLU),_1ab2133dc_Range16(6314LLU,6320LLU,6LLU),_1ab2133dc_Range16(6321LLU,6389LLU,1LLU),_1ab2133dc_Range16(6400LLU,6430LLU,1LLU),_1ab2133dc_Range16(6480LLU,6509LLU,1LLU),_1ab2133dc_Range16(6512LLU,6516LLU,1LLU),_1ab2133dc_Range16(6528LLU,6571LLU,1LLU),_1ab2133dc_Range16(6576LLU,6601LLU,1LLU),_1ab2133dc_Range16(6656LLU,6678LLU,1LLU),_1ab2133dc_Range16(6688LLU,6740LLU,1LLU),_1ab2133dc_Range16(6917LLU,6963LLU,1LLU),_1ab2133dc_Range16(6981LLU,6988LLU,1LLU),_1ab2133dc_Range16(7043LLU,7072LLU,1LLU),_1ab2133dc_Range16(7086LLU,7087LLU,1LLU),_1ab2133dc_Range16(7098LLU,7141LLU,1LLU),_1ab2133dc_Range16(7168LLU,7203LLU,1LLU),_1ab2133dc_Range16(7245LLU,7247LLU,1LLU),_1ab2133dc_Range16(7258LLU,7287LLU,1LLU),_1ab2133dc_Range16(7401LLU,7404LLU,1LLU),_1ab2133dc_Range16(7406LLU,7411LLU,1LLU),_1ab2133dc_Range16(7413LLU,7414LLU,1LLU),_1ab2133dc_Range16(7418LLU,8501LLU,1083LLU),_1ab2133dc_Range16(8502LLU,8504LLU,1LLU),_1ab2133dc_Range16(11568LLU,11623LLU,1LLU),_1ab2133dc_Range16(11648LLU,11670LLU,1LLU),_1ab2133dc_Range16(11680LLU,11686LLU,1LLU),_1ab2133dc_Range16(11688LLU,11694LLU,1LLU),_1ab2133dc_Range16(11696LLU,11702LLU,1LLU),_1ab2133dc_Range16(11704LLU,11710LLU,1LLU),_1ab2133dc_Range16(11712LLU,11718LLU,1LLU),_1ab2133dc_Range16(11720LLU,11726LLU,1LLU),_1ab2133dc_Range16(11728LLU,11734LLU,1LLU),_1ab2133dc_Range16(11736LLU,11742LLU,1LLU),_1ab2133dc_Range16(12294LLU,12348LLU,54LLU),_1ab2133dc_Range16(12353LLU,12438LLU,1LLU),_1ab2133dc_Range16(12447LLU,12449LLU,2LLU),_1ab2133dc_Range16(12450LLU,12538LLU,1LLU),_1ab2133dc_Range16(12543LLU,12549LLU,6LLU),_1ab2133dc_Range16(12550LLU,12591LLU,1LLU),_1ab2133dc_Range16(12593LLU,12686LLU,1LLU),_1ab2133dc_Range16(12704LLU,12735LLU,1LLU),_1ab2133dc_Range16(12784LLU,12799LLU,1LLU),_1ab2133dc_Range16(13312LLU,19903LLU,1LLU),_1ab2133dc_Range16(19968LLU,40980LLU,1LLU),_1ab2133dc_Range16(40982LLU,42124LLU,1LLU),_1ab2133dc_Range16(42192LLU,42231LLU,1LLU),_1ab2133dc_Range16(42240LLU,42507LLU,1LLU),_1ab2133dc_Range16(42512LLU,42527LLU,1LLU),_1ab2133dc_Range16(42538LLU,42539LLU,1LLU),_1ab2133dc_Range16(42606LLU,42656LLU,50LLU),_1ab2133dc_Range16(42657LLU,42725LLU,1LLU),_1ab2133dc_Range16(42895LLU,42999LLU,104LLU),_1ab2133dc_Range16(43003LLU,43009LLU,1LLU),_1ab2133dc_Range16(43011LLU,43013LLU,1LLU),_1ab2133dc_Range16(43015LLU,43018LLU,1LLU),_1ab2133dc_Range16(43020LLU,43042LLU,1LLU),_1ab2133dc_Range16(43072LLU,43123LLU,1LLU),_1ab2133dc_Range16(43138LLU,43187LLU,1LLU),_1ab2133dc_Range16(43250LLU,43255LLU,1LLU),_1ab2133dc_Range16(43259LLU,43261LLU,2LLU),_1ab2133dc_Range16(43262LLU,43274LLU,12LLU),_1ab2133dc_Range16(43275LLU,43301LLU,1LLU),_1ab2133dc_Range16(43312LLU,43334LLU,1LLU),_1ab2133dc_Range16(43360LLU,43388LLU,1LLU),_1ab2133dc_Range16(43396LLU,43442LLU,1LLU),_1ab2133dc_Range16(43488LLU,43492LLU,1LLU),_1ab2133dc_Range16(43495LLU,43503LLU,1LLU),_1ab2133dc_Range16(43514LLU,43518LLU,1LLU),_1ab2133dc_Range16(43520LLU,43560LLU,1LLU),_1ab2133dc_Range16(43584LLU,43586LLU,1LLU),_1ab2133dc_Range16(43588LLU,43595LLU,1LLU),_1ab2133dc_Range16(43616LLU,43631LLU,1LLU),_1ab2133dc_Range16(43633LLU,43638LLU,1LLU),_1ab2133dc_Range16(43642LLU,43646LLU,4LLU),_1ab2133dc_Range16(43647LLU,43695LLU,1LLU),_1ab2133dc_Range16(43697LLU,43701LLU,4LLU),_1ab2133dc_Range16(43702LLU,43705LLU,3LLU),_1ab2133dc_Range16(43706LLU,43709LLU,1LLU),_1ab2133dc_Range16(43712LLU,43714LLU,2LLU),_1ab2133dc_Range16(43739LLU,43740LLU,1LLU),_1ab2133dc_Range16(43744LLU,43754LLU,1LLU),_1ab2133dc_Range16(43762LLU,43777LLU,15LLU),_1ab2133dc_Range16(43778LLU,43782LLU,1LLU),_1ab2133dc_Range16(43785LLU,43790LLU,1LLU),_1ab2133dc_Range16(43793LLU,43798LLU,1LLU),_1ab2133dc_Range16(43808LLU,43814LLU,1LLU),_1ab2133dc_Range16(43816LLU,43822LLU,1LLU),_1ab2133dc_Range16(43968LLU,44002LLU,1LLU),_1ab2133dc_Range16(44032LLU,55203LLU,1LLU),_1ab2133dc_Range16(55216LLU,55238LLU,1LLU),_1ab2133dc_Range16(55243LLU,55291LLU,1LLU),_1ab2133dc_Range16(63744LLU,64109LLU,1LLU),_1ab2133dc_Range16(64112LLU,64217LLU,1LLU),_1ab2133dc_Range16(64285LLU,64287LLU,2LLU),_1ab2133dc_Range16(64288LLU,64296LLU,1LLU),_1ab2133dc_Range16(64298LLU,64310LLU,1LLU),_1ab2133dc_Range16(64312LLU,64316LLU,1LLU),_1ab2133dc_Range16(64318LLU,64320LLU,2LLU),_1ab2133dc_Range16(64321LLU,64323LLU,2LLU),_1ab2133dc_Range16(64324LLU,64326LLU,2LLU),_1ab2133dc_Range16(64327LLU,64433LLU,1LLU),_1ab2133dc_Range16(64467LLU,64829LLU,1LLU),_1ab2133dc_Range16(64848LLU,64911LLU,1LLU),_1ab2133dc_Range16(64914LLU,64967LLU,1LLU),_1ab2133dc_Range16(65008LLU,65019LLU,1LLU),_1ab2133dc_Range16(65136LLU,65140LLU,1LLU),_1ab2133dc_Range16(65142LLU,65276LLU,1LLU),_1ab2133dc_Range16(65382LLU,65391LLU,1LLU),_1ab2133dc_Range16(65393LLU,65437LLU,1LLU),_1ab2133dc_Range16(65440LLU,65470LLU,1LLU),_1ab2133dc_Range16(65474LLU,65479LLU,1LLU),_1ab2133dc_Range16(65482LLU,65487LLU,1LLU),_1ab2133dc_Range16(65490LLU,65495LLU,1LLU),_1ab2133dc_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(65536LLU,65547LLU,1LLU),_1ab2133dc_Range32(65549LLU,65574LLU,1LLU),_1ab2133dc_Range32(65576LLU,65594LLU,1LLU),_1ab2133dc_Range32(65596LLU,65597LLU,1LLU),_1ab2133dc_Range32(65599LLU,65613LLU,1LLU),_1ab2133dc_Range32(65616LLU,65629LLU,1LLU),_1ab2133dc_Range32(65664LLU,65786LLU,1LLU),_1ab2133dc_Range32(66176LLU,66204LLU,1LLU),_1ab2133dc_Range32(66208LLU,66256LLU,1LLU),_1ab2133dc_Range32(66304LLU,66335LLU,1LLU),_1ab2133dc_Range32(66349LLU,66368LLU,1LLU),_1ab2133dc_Range32(66370LLU,66377LLU,1LLU),_1ab2133dc_Range32(66384LLU,66421LLU,1LLU),_1ab2133dc_Range32(66432LLU,66461LLU,1LLU),_1ab2133dc_Range32(66464LLU,66499LLU,1LLU),_1ab2133dc_Range32(66504LLU,66511LLU,1LLU),_1ab2133dc_Range32(66640LLU,66717LLU,1LLU),_1ab2133dc_Range32(66816LLU,66855LLU,1LLU),_1ab2133dc_Range32(66864LLU,66915LLU,1LLU),_1ab2133dc_Range32(67072LLU,67382LLU,1LLU),_1ab2133dc_Range32(67392LLU,67413LLU,1LLU),_1ab2133dc_Range32(67424LLU,67431LLU,1LLU),_1ab2133dc_Range32(67584LLU,67589LLU,1LLU),_1ab2133dc_Range32(67592LLU,67594LLU,2LLU),_1ab2133dc_Range32(67595LLU,67637LLU,1LLU),_1ab2133dc_Range32(67639LLU,67640LLU,1LLU),_1ab2133dc_Range32(67644LLU,67647LLU,3LLU),_1ab2133dc_Range32(67648LLU,67669LLU,1LLU),_1ab2133dc_Range32(67680LLU,67702LLU,1LLU),_1ab2133dc_Range32(67712LLU,67742LLU,1LLU),_1ab2133dc_Range32(67808LLU,67826LLU,1LLU),_1ab2133dc_Range32(67828LLU,67829LLU,1LLU),_1ab2133dc_Range32(67840LLU,67861LLU,1LLU),_1ab2133dc_Range32(67872LLU,67897LLU,1LLU),_1ab2133dc_Range32(67968LLU,68023LLU,1LLU),_1ab2133dc_Range32(68030LLU,68031LLU,1LLU),_1ab2133dc_Range32(68096LLU,68112LLU,16LLU),_1ab2133dc_Range32(68113LLU,68115LLU,1LLU),_1ab2133dc_Range32(68117LLU,68119LLU,1LLU),_1ab2133dc_Range32(68121LLU,68149LLU,1LLU),_1ab2133dc_Range32(68192LLU,68220LLU,1LLU),_1ab2133dc_Range32(68224LLU,68252LLU,1LLU),_1ab2133dc_Range32(68288LLU,68295LLU,1LLU),_1ab2133dc_Range32(68297LLU,68324LLU,1LLU),_1ab2133dc_Range32(68352LLU,68405LLU,1LLU),_1ab2133dc_Range32(68416LLU,68437LLU,1LLU),_1ab2133dc_Range32(68448LLU,68466LLU,1LLU),_1ab2133dc_Range32(68480LLU,68497LLU,1LLU),_1ab2133dc_Range32(68608LLU,68680LLU,1LLU),_1ab2133dc_Range32(68864LLU,68899LLU,1LLU),_1ab2133dc_Range32(69248LLU,69289LLU,1LLU),_1ab2133dc_Range32(69296LLU,69297LLU,1LLU),_1ab2133dc_Range32(69376LLU,69404LLU,1LLU),_1ab2133dc_Range32(69415LLU,69424LLU,9LLU),_1ab2133dc_Range32(69425LLU,69445LLU,1LLU),_1ab2133dc_Range32(69488LLU,69505LLU,1LLU),_1ab2133dc_Range32(69552LLU,69572LLU,1LLU),_1ab2133dc_Range32(69600LLU,69622LLU,1LLU),_1ab2133dc_Range32(69635LLU,69687LLU,1LLU),_1ab2133dc_Range32(69745LLU,69746LLU,1LLU),_1ab2133dc_Range32(69749LLU,69763LLU,14LLU),_1ab2133dc_Range32(69764LLU,69807LLU,1LLU),_1ab2133dc_Range32(69840LLU,69864LLU,1LLU),_1ab2133dc_Range32(69891LLU,69926LLU,1LLU),_1ab2133dc_Range32(69956LLU,69959LLU,3LLU),_1ab2133dc_Range32(69968LLU,70002LLU,1LLU),_1ab2133dc_Range32(70006LLU,70019LLU,13LLU),_1ab2133dc_Range32(70020LLU,70066LLU,1LLU),_1ab2133dc_Range32(70081LLU,70084LLU,1LLU),_1ab2133dc_Range32(70106LLU,70108LLU,2LLU),_1ab2133dc_Range32(70144LLU,70161LLU,1LLU),_1ab2133dc_Range32(70163LLU,70187LLU,1LLU),_1ab2133dc_Range32(70207LLU,70208LLU,1LLU),_1ab2133dc_Range32(70272LLU,70278LLU,1LLU),_1ab2133dc_Range32(70280LLU,70282LLU,2LLU),_1ab2133dc_Range32(70283LLU,70285LLU,1LLU),_1ab2133dc_Range32(70287LLU,70301LLU,1LLU),_1ab2133dc_Range32(70303LLU,70312LLU,1LLU),_1ab2133dc_Range32(70320LLU,70366LLU,1LLU),_1ab2133dc_Range32(70405LLU,70412LLU,1LLU),_1ab2133dc_Range32(70415LLU,70416LLU,1LLU),_1ab2133dc_Range32(70419LLU,70440LLU,1LLU),_1ab2133dc_Range32(70442LLU,70448LLU,1LLU),_1ab2133dc_Range32(70450LLU,70451LLU,1LLU),_1ab2133dc_Range32(70453LLU,70457LLU,1LLU),_1ab2133dc_Range32(70461LLU,70480LLU,19LLU),_1ab2133dc_Range32(70493LLU,70497LLU,1LLU),_1ab2133dc_Range32(70656LLU,70708LLU,1LLU),_1ab2133dc_Range32(70727LLU,70730LLU,1LLU),_1ab2133dc_Range32(70751LLU,70753LLU,1LLU),_1ab2133dc_Range32(70784LLU,70831LLU,1LLU),_1ab2133dc_Range32(70852LLU,70853LLU,1LLU),_1ab2133dc_Range32(70855LLU,71040LLU,185LLU),_1ab2133dc_Range32(71041LLU,71086LLU,1LLU),_1ab2133dc_Range32(71128LLU,71131LLU,1LLU),_1ab2133dc_Range32(71168LLU,71215LLU,1LLU),_1ab2133dc_Range32(71236LLU,71296LLU,60LLU),_1ab2133dc_Range32(71297LLU,71338LLU,1LLU),_1ab2133dc_Range32(71352LLU,71424LLU,72LLU),_1ab2133dc_Range32(71425LLU,71450LLU,1LLU),_1ab2133dc_Range32(71488LLU,71494LLU,1LLU),_1ab2133dc_Range32(71680LLU,71723LLU,1LLU),_1ab2133dc_Range32(71935LLU,71942LLU,1LLU),_1ab2133dc_Range32(71945LLU,71948LLU,3LLU),_1ab2133dc_Range32(71949LLU,71955LLU,1LLU),_1ab2133dc_Range32(71957LLU,71958LLU,1LLU),_1ab2133dc_Range32(71960LLU,71983LLU,1LLU),_1ab2133dc_Range32(71999LLU,72001LLU,2LLU),_1ab2133dc_Range32(72096LLU,72103LLU,1LLU),_1ab2133dc_Range32(72106LLU,72144LLU,1LLU),_1ab2133dc_Range32(72161LLU,72163LLU,2LLU),_1ab2133dc_Range32(72192LLU,72203LLU,11LLU),_1ab2133dc_Range32(72204LLU,72242LLU,1LLU),_1ab2133dc_Range32(72250LLU,72272LLU,22LLU),_1ab2133dc_Range32(72284LLU,72329LLU,1LLU),_1ab2133dc_Range32(72349LLU,72368LLU,19LLU),_1ab2133dc_Range32(72369LLU,72440LLU,1LLU),_1ab2133dc_Range32(72704LLU,72712LLU,1LLU),_1ab2133dc_Range32(72714LLU,72750LLU,1LLU),_1ab2133dc_Range32(72768LLU,72818LLU,50LLU),_1ab2133dc_Range32(72819LLU,72847LLU,1LLU),_1ab2133dc_Range32(72960LLU,72966LLU,1LLU),_1ab2133dc_Range32(72968LLU,72969LLU,1LLU),_1ab2133dc_Range32(72971LLU,73008LLU,1LLU),_1ab2133dc_Range32(73030LLU,73056LLU,26LLU),_1ab2133dc_Range32(73057LLU,73061LLU,1LLU),_1ab2133dc_Range32(73063LLU,73064LLU,1LLU),_1ab2133dc_Range32(73066LLU,73097LLU,1LLU),_1ab2133dc_Range32(73112LLU,73440LLU,328LLU),_1ab2133dc_Range32(73441LLU,73458LLU,1LLU),_1ab2133dc_Range32(73474LLU,73476LLU,2LLU),_1ab2133dc_Range32(73477LLU,73488LLU,1LLU),_1ab2133dc_Range32(73490LLU,73523LLU,1LLU),_1ab2133dc_Range32(73648LLU,73728LLU,80LLU),_1ab2133dc_Range32(73729LLU,74649LLU,1LLU),_1ab2133dc_Range32(74880LLU,75075LLU,1LLU),_1ab2133dc_Range32(77712LLU,77808LLU,1LLU),_1ab2133dc_Range32(77824LLU,78895LLU,1LLU),_1ab2133dc_Range32(78913LLU,78918LLU,1LLU),_1ab2133dc_Range32(82944LLU,83526LLU,1LLU),_1ab2133dc_Range32(92160LLU,92728LLU,1LLU),_1ab2133dc_Range32(92736LLU,92766LLU,1LLU),_1ab2133dc_Range32(92784LLU,92862LLU,1LLU),_1ab2133dc_Range32(92880LLU,92909LLU,1LLU),_1ab2133dc_Range32(92928LLU,92975LLU,1LLU),_1ab2133dc_Range32(93027LLU,93047LLU,1LLU),_1ab2133dc_Range32(93053LLU,93071LLU,1LLU),_1ab2133dc_Range32(93952LLU,94026LLU,1LLU),_1ab2133dc_Range32(94032LLU,94208LLU,176LLU),_1ab2133dc_Range32(94209LLU,100343LLU,1LLU),_1ab2133dc_Range32(100352LLU,101589LLU,1LLU),_1ab2133dc_Range32(101632LLU,101640LLU,1LLU),_1ab2133dc_Range32(110592LLU,110882LLU,1LLU),_1ab2133dc_Range32(110898LLU,110928LLU,30LLU),_1ab2133dc_Range32(110929LLU,110930LLU,1LLU),_1ab2133dc_Range32(110933LLU,110948LLU,15LLU),_1ab2133dc_Range32(110949LLU,110951LLU,1LLU),_1ab2133dc_Range32(110960LLU,111355LLU,1LLU),_1ab2133dc_Range32(113664LLU,113770LLU,1LLU),_1ab2133dc_Range32(113776LLU,113788LLU,1LLU),_1ab2133dc_Range32(113792LLU,113800LLU,1LLU),_1ab2133dc_Range32(113808LLU,113817LLU,1LLU),_1ab2133dc_Range32(122634LLU,123136LLU,502LLU),_1ab2133dc_Range32(123137LLU,123180LLU,1LLU),_1ab2133dc_Range32(123214LLU,123536LLU,322LLU),_1ab2133dc_Range32(123537LLU,123565LLU,1LLU),_1ab2133dc_Range32(123584LLU,123627LLU,1LLU),_1ab2133dc_Range32(124112LLU,124138LLU,1LLU),_1ab2133dc_Range32(124896LLU,124902LLU,1LLU),_1ab2133dc_Range32(124904LLU,124907LLU,1LLU),_1ab2133dc_Range32(124909LLU,124910LLU,1LLU),_1ab2133dc_Range32(124912LLU,124926LLU,1LLU),_1ab2133dc_Range32(124928LLU,125124LLU,1LLU),_1ab2133dc_Range32(126464LLU,126467LLU,1LLU),_1ab2133dc_Range32(126469LLU,126495LLU,1LLU),_1ab2133dc_Range32(126497LLU,126498LLU,1LLU),_1ab2133dc_Range32(126500LLU,126503LLU,3LLU),_1ab2133dc_Range32(126505LLU,126514LLU,1LLU),_1ab2133dc_Range32(126516LLU,126519LLU,1LLU),_1ab2133dc_Range32(126521LLU,126523LLU,2LLU),_1ab2133dc_Range32(126530LLU,126535LLU,5LLU),_1ab2133dc_Range32(126537LLU,126541LLU,2LLU),_1ab2133dc_Range32(126542LLU,126543LLU,1LLU),_1ab2133dc_Range32(126545LLU,126546LLU,1LLU),_1ab2133dc_Range32(126548LLU,126551LLU,3LLU),_1ab2133dc_Range32(126553LLU,126561LLU,2LLU),_1ab2133dc_Range32(126562LLU,126564LLU,2LLU),_1ab2133dc_Range32(126567LLU,126570LLU,1LLU),_1ab2133dc_Range32(126572LLU,126578LLU,1LLU),_1ab2133dc_Range32(126580LLU,126583LLU,1LLU),_1ab2133dc_Range32(126585LLU,126588LLU,1LLU),_1ab2133dc_Range32(126590LLU,126592LLU,2LLU),_1ab2133dc_Range32(126593LLU,126601LLU,1LLU),_1ab2133dc_Range32(126603LLU,126619LLU,1LLU),_1ab2133dc_Range32(126625LLU,126627LLU,1LLU),_1ab2133dc_Range32(126629LLU,126633LLU,1LLU),_1ab2133dc_Range32(126635LLU,126651LLU,1LLU),_1ab2133dc_Range32(131072LLU,173791LLU,1LLU),_1ab2133dc_Range32(173824LLU,177977LLU,1LLU),_1ab2133dc_Range32(177984LLU,178205LLU,1LLU),_1ab2133dc_Range32(178208LLU,183969LLU,1LLU),_1ab2133dc_Range32(183984LLU,191456LLU,1LLU),_1ab2133dc_Range32(194560LLU,195101LLU,1LLU),_1ab2133dc_Range32(196608LLU,201546LLU,1LLU),_1ab2133dc_Range32(201552LLU,205743LLU,1LLU)}),1LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LT = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(453LLU,459LLU,3LLU),_1ab2133dc_Range16(498LLU,8072LLU,7574LLU),_1ab2133dc_Range16(8073LLU,8079LLU,1LLU),_1ab2133dc_Range16(8088LLU,8095LLU,1LLU),_1ab2133dc_Range16(8104LLU,8111LLU,1LLU),_1ab2133dc_Range16(8124LLU,8140LLU,16LLU),_1ab2133dc_Range16(8188LLU,8188LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LU = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(65LLU,90LLU,1LLU),_1ab2133dc_Range16(192LLU,214LLU,1LLU),_1ab2133dc_Range16(216LLU,222LLU,1LLU),_1ab2133dc_Range16(256LLU,310LLU,2LLU),_1ab2133dc_Range16(313LLU,327LLU,2LLU),_1ab2133dc_Range16(330LLU,376LLU,2LLU),_1ab2133dc_Range16(377LLU,381LLU,2LLU),_1ab2133dc_Range16(385LLU,386LLU,1LLU),_1ab2133dc_Range16(388LLU,390LLU,2LLU),_1ab2133dc_Range16(391LLU,393LLU,2LLU),_1ab2133dc_Range16(394LLU,395LLU,1LLU),_1ab2133dc_Range16(398LLU,401LLU,1LLU),_1ab2133dc_Range16(403LLU,404LLU,1LLU),_1ab2133dc_Range16(406LLU,408LLU,1LLU),_1ab2133dc_Range16(412LLU,413LLU,1LLU),_1ab2133dc_Range16(415LLU,416LLU,1LLU),_1ab2133dc_Range16(418LLU,422LLU,2LLU),_1ab2133dc_Range16(423LLU,425LLU,2LLU),_1ab2133dc_Range16(428LLU,430LLU,2LLU),_1ab2133dc_Range16(431LLU,433LLU,2LLU),_1ab2133dc_Range16(434LLU,435LLU,1LLU),_1ab2133dc_Range16(437LLU,439LLU,2LLU),_1ab2133dc_Range16(440LLU,444LLU,4LLU),_1ab2133dc_Range16(452LLU,461LLU,3LLU),_1ab2133dc_Range16(463LLU,475LLU,2LLU),_1ab2133dc_Range16(478LLU,494LLU,2LLU),_1ab2133dc_Range16(497LLU,500LLU,3LLU),_1ab2133dc_Range16(502LLU,504LLU,1LLU),_1ab2133dc_Range16(506LLU,562LLU,2LLU),_1ab2133dc_Range16(570LLU,571LLU,1LLU),_1ab2133dc_Range16(573LLU,574LLU,1LLU),_1ab2133dc_Range16(577LLU,579LLU,2LLU),_1ab2133dc_Range16(580LLU,582LLU,1LLU),_1ab2133dc_Range16(584LLU,590LLU,2LLU),_1ab2133dc_Range16(880LLU,882LLU,2LLU),_1ab2133dc_Range16(886LLU,895LLU,9LLU),_1ab2133dc_Range16(902LLU,904LLU,2LLU),_1ab2133dc_Range16(905LLU,906LLU,1LLU),_1ab2133dc_Range16(908LLU,910LLU,2LLU),_1ab2133dc_Range16(911LLU,913LLU,2LLU),_1ab2133dc_Range16(914LLU,929LLU,1LLU),_1ab2133dc_Range16(931LLU,939LLU,1LLU),_1ab2133dc_Range16(975LLU,978LLU,3LLU),_1ab2133dc_Range16(979LLU,980LLU,1LLU),_1ab2133dc_Range16(984LLU,1006LLU,2LLU),_1ab2133dc_Range16(1012LLU,1015LLU,3LLU),_1ab2133dc_Range16(1017LLU,1018LLU,1LLU),_1ab2133dc_Range16(1021LLU,1071LLU,1LLU),_1ab2133dc_Range16(1120LLU,1152LLU,2LLU),_1ab2133dc_Range16(1162LLU,1216LLU,2LLU),_1ab2133dc_Range16(1217LLU,1229LLU,2LLU),_1ab2133dc_Range16(1232LLU,1326LLU,2LLU),_1ab2133dc_Range16(1329LLU,1366LLU,1LLU),_1ab2133dc_Range16(4256LLU,4293LLU,1LLU),_1ab2133dc_Range16(4295LLU,4301LLU,6LLU),_1ab2133dc_Range16(5024LLU,5109LLU,1LLU),_1ab2133dc_Range16(7312LLU,7354LLU,1LLU),_1ab2133dc_Range16(7357LLU,7359LLU,1LLU),_1ab2133dc_Range16(7680LLU,7828LLU,2LLU),_1ab2133dc_Range16(7838LLU,7934LLU,2LLU),_1ab2133dc_Range16(7944LLU,7951LLU,1LLU),_1ab2133dc_Range16(7960LLU,7965LLU,1LLU),_1ab2133dc_Range16(7976LLU,7983LLU,1LLU),_1ab2133dc_Range16(7992LLU,7999LLU,1LLU),_1ab2133dc_Range16(8008LLU,8013LLU,1LLU),_1ab2133dc_Range16(8025LLU,8031LLU,2LLU),_1ab2133dc_Range16(8040LLU,8047LLU,1LLU),_1ab2133dc_Range16(8120LLU,8123LLU,1LLU),_1ab2133dc_Range16(8136LLU,8139LLU,1LLU),_1ab2133dc_Range16(8152LLU,8155LLU,1LLU),_1ab2133dc_Range16(8168LLU,8172LLU,1LLU),_1ab2133dc_Range16(8184LLU,8187LLU,1LLU),_1ab2133dc_Range16(8450LLU,8455LLU,5LLU),_1ab2133dc_Range16(8459LLU,8461LLU,1LLU),_1ab2133dc_Range16(8464LLU,8466LLU,1LLU),_1ab2133dc_Range16(8469LLU,8473LLU,4LLU),_1ab2133dc_Range16(8474LLU,8477LLU,1LLU),_1ab2133dc_Range16(8484LLU,8490LLU,2LLU),_1ab2133dc_Range16(8491LLU,8493LLU,1LLU),_1ab2133dc_Range16(8496LLU,8499LLU,1LLU),_1ab2133dc_Range16(8510LLU,8511LLU,1LLU),_1ab2133dc_Range16(8517LLU,8579LLU,62LLU),_1ab2133dc_Range16(11264LLU,11311LLU,1LLU),_1ab2133dc_Range16(11360LLU,11362LLU,2LLU),_1ab2133dc_Range16(11363LLU,11364LLU,1LLU),_1ab2133dc_Range16(11367LLU,11373LLU,2LLU),_1ab2133dc_Range16(11374LLU,11376LLU,1LLU),_1ab2133dc_Range16(11378LLU,11381LLU,3LLU),_1ab2133dc_Range16(11390LLU,11392LLU,1LLU),_1ab2133dc_Range16(11394LLU,11490LLU,2LLU),_1ab2133dc_Range16(11499LLU,11501LLU,2LLU),_1ab2133dc_Range16(11506LLU,42560LLU,31054LLU),_1ab2133dc_Range16(42562LLU,42604LLU,2LLU),_1ab2133dc_Range16(42624LLU,42650LLU,2LLU),_1ab2133dc_Range16(42786LLU,42798LLU,2LLU),_1ab2133dc_Range16(42802LLU,42862LLU,2LLU),_1ab2133dc_Range16(42873LLU,42877LLU,2LLU),_1ab2133dc_Range16(42878LLU,42886LLU,2LLU),_1ab2133dc_Range16(42891LLU,42893LLU,2LLU),_1ab2133dc_Range16(42896LLU,42898LLU,2LLU),_1ab2133dc_Range16(42902LLU,42922LLU,2LLU),_1ab2133dc_Range16(42923LLU,42926LLU,1LLU),_1ab2133dc_Range16(42928LLU,42932LLU,1LLU),_1ab2133dc_Range16(42934LLU,42948LLU,2LLU),_1ab2133dc_Range16(42949LLU,42951LLU,1LLU),_1ab2133dc_Range16(42953LLU,42960LLU,7LLU),_1ab2133dc_Range16(42966LLU,42968LLU,2LLU),_1ab2133dc_Range16(42997LLU,65313LLU,22316LLU),_1ab2133dc_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66560LLU,66599LLU,1LLU),_1ab2133dc_Range32(66736LLU,66771LLU,1LLU),_1ab2133dc_Range32(66928LLU,66938LLU,1LLU),_1ab2133dc_Range32(66940LLU,66954LLU,1LLU),_1ab2133dc_Range32(66956LLU,66962LLU,1LLU),_1ab2133dc_Range32(66964LLU,66965LLU,1LLU),_1ab2133dc_Range32(68736LLU,68786LLU,1LLU),_1ab2133dc_Range32(71840LLU,71871LLU,1LLU),_1ab2133dc_Range32(93760LLU,93791LLU,1LLU),_1ab2133dc_Range32(119808LLU,119833LLU,1LLU),_1ab2133dc_Range32(119860LLU,119885LLU,1LLU),_1ab2133dc_Range32(119912LLU,119937LLU,1LLU),_1ab2133dc_Range32(119964LLU,119966LLU,2LLU),_1ab2133dc_Range32(119967LLU,119973LLU,3LLU),_1ab2133dc_Range32(119974LLU,119977LLU,3LLU),_1ab2133dc_Range32(119978LLU,119980LLU,1LLU),_1ab2133dc_Range32(119982LLU,119989LLU,1LLU),_1ab2133dc_Range32(120016LLU,120041LLU,1LLU),_1ab2133dc_Range32(120068LLU,120069LLU,1LLU),_1ab2133dc_Range32(120071LLU,120074LLU,1LLU),_1ab2133dc_Range32(120077LLU,120084LLU,1LLU),_1ab2133dc_Range32(120086LLU,120092LLU,1LLU),_1ab2133dc_Range32(120120LLU,120121LLU,1LLU),_1ab2133dc_Range32(120123LLU,120126LLU,1LLU),_1ab2133dc_Range32(120128LLU,120132LLU,1LLU),_1ab2133dc_Range32(120134LLU,120138LLU,4LLU),_1ab2133dc_Range32(120139LLU,120144LLU,1LLU),_1ab2133dc_Range32(120172LLU,120197LLU,1LLU),_1ab2133dc_Range32(120224LLU,120249LLU,1LLU),_1ab2133dc_Range32(120276LLU,120301LLU,1LLU),_1ab2133dc_Range32(120328LLU,120353LLU,1LLU),_1ab2133dc_Range32(120380LLU,120405LLU,1LLU),_1ab2133dc_Range32(120432LLU,120457LLU,1LLU),_1ab2133dc_Range32(120488LLU,120512LLU,1LLU),_1ab2133dc_Range32(120546LLU,120570LLU,1LLU),_1ab2133dc_Range32(120604LLU,120628LLU,1LLU),_1ab2133dc_Range32(120662LLU,120686LLU,1LLU),_1ab2133dc_Range32(120720LLU,120744LLU,1LLU),_1ab2133dc_Range32(120778LLU,125184LLU,4406LLU),_1ab2133dc_Range32(125185LLU,125217LLU,1LLU)}),3LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__M = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(768LLU,879LLU,1LLU),_1ab2133dc_Range16(1155LLU,1161LLU,1LLU),_1ab2133dc_Range16(1425LLU,1469LLU,1LLU),_1ab2133dc_Range16(1471LLU,1473LLU,2LLU),_1ab2133dc_Range16(1474LLU,1476LLU,2LLU),_1ab2133dc_Range16(1477LLU,1479LLU,2LLU),_1ab2133dc_Range16(1552LLU,1562LLU,1LLU),_1ab2133dc_Range16(1611LLU,1631LLU,1LLU),_1ab2133dc_Range16(1648LLU,1750LLU,102LLU),_1ab2133dc_Range16(1751LLU,1756LLU,1LLU),_1ab2133dc_Range16(1759LLU,1764LLU,1LLU),_1ab2133dc_Range16(1767LLU,1768LLU,1LLU),_1ab2133dc_Range16(1770LLU,1773LLU,1LLU),_1ab2133dc_Range16(1809LLU,1840LLU,31LLU),_1ab2133dc_Range16(1841LLU,1866LLU,1LLU),_1ab2133dc_Range16(1958LLU,1968LLU,1LLU),_1ab2133dc_Range16(2027LLU,2035LLU,1LLU),_1ab2133dc_Range16(2045LLU,2070LLU,25LLU),_1ab2133dc_Range16(2071LLU,2073LLU,1LLU),_1ab2133dc_Range16(2075LLU,2083LLU,1LLU),_1ab2133dc_Range16(2085LLU,2087LLU,1LLU),_1ab2133dc_Range16(2089LLU,2093LLU,1LLU),_1ab2133dc_Range16(2137LLU,2139LLU,1LLU),_1ab2133dc_Range16(2200LLU,2207LLU,1LLU),_1ab2133dc_Range16(2250LLU,2273LLU,1LLU),_1ab2133dc_Range16(2275LLU,2307LLU,1LLU),_1ab2133dc_Range16(2362LLU,2364LLU,1LLU),_1ab2133dc_Range16(2366LLU,2383LLU,1LLU),_1ab2133dc_Range16(2385LLU,2391LLU,1LLU),_1ab2133dc_Range16(2402LLU,2403LLU,1LLU),_1ab2133dc_Range16(2433LLU,2435LLU,1LLU),_1ab2133dc_Range16(2492LLU,2494LLU,2LLU),_1ab2133dc_Range16(2495LLU,2500LLU,1LLU),_1ab2133dc_Range16(2503LLU,2504LLU,1LLU),_1ab2133dc_Range16(2507LLU,2509LLU,1LLU),_1ab2133dc_Range16(2519LLU,2530LLU,11LLU),_1ab2133dc_Range16(2531LLU,2558LLU,27LLU),_1ab2133dc_Range16(2561LLU,2563LLU,1LLU),_1ab2133dc_Range16(2620LLU,2622LLU,2LLU),_1ab2133dc_Range16(2623LLU,2626LLU,1LLU),_1ab2133dc_Range16(2631LLU,2632LLU,1LLU),_1ab2133dc_Range16(2635LLU,2637LLU,1LLU),_1ab2133dc_Range16(2641LLU,2672LLU,31LLU),_1ab2133dc_Range16(2673LLU,2677LLU,4LLU),_1ab2133dc_Range16(2689LLU,2691LLU,1LLU),_1ab2133dc_Range16(2748LLU,2750LLU,2LLU),_1ab2133dc_Range16(2751LLU,2757LLU,1LLU),_1ab2133dc_Range16(2759LLU,2761LLU,1LLU),_1ab2133dc_Range16(2763LLU,2765LLU,1LLU),_1ab2133dc_Range16(2786LLU,2787LLU,1LLU),_1ab2133dc_Range16(2810LLU,2815LLU,1LLU),_1ab2133dc_Range16(2817LLU,2819LLU,1LLU),_1ab2133dc_Range16(2876LLU,2878LLU,2LLU),_1ab2133dc_Range16(2879LLU,2884LLU,1LLU),_1ab2133dc_Range16(2887LLU,2888LLU,1LLU),_1ab2133dc_Range16(2891LLU,2893LLU,1LLU),_1ab2133dc_Range16(2901LLU,2903LLU,1LLU),_1ab2133dc_Range16(2914LLU,2915LLU,1LLU),_1ab2133dc_Range16(2946LLU,3006LLU,60LLU),_1ab2133dc_Range16(3007LLU,3010LLU,1LLU),_1ab2133dc_Range16(3014LLU,3016LLU,1LLU),_1ab2133dc_Range16(3018LLU,3021LLU,1LLU),_1ab2133dc_Range16(3031LLU,3072LLU,41LLU),_1ab2133dc_Range16(3073LLU,3076LLU,1LLU),_1ab2133dc_Range16(3132LLU,3134LLU,2LLU),_1ab2133dc_Range16(3135LLU,3140LLU,1LLU),_1ab2133dc_Range16(3142LLU,3144LLU,1LLU),_1ab2133dc_Range16(3146LLU,3149LLU,1LLU),_1ab2133dc_Range16(3157LLU,3158LLU,1LLU),_1ab2133dc_Range16(3170LLU,3171LLU,1LLU),_1ab2133dc_Range16(3201LLU,3203LLU,1LLU),_1ab2133dc_Range16(3260LLU,3262LLU,2LLU),_1ab2133dc_Range16(3263LLU,3268LLU,1LLU),_1ab2133dc_Range16(3270LLU,3272LLU,1LLU),_1ab2133dc_Range16(3274LLU,3277LLU,1LLU),_1ab2133dc_Range16(3285LLU,3286LLU,1LLU),_1ab2133dc_Range16(3298LLU,3299LLU,1LLU),_1ab2133dc_Range16(3315LLU,3328LLU,13LLU),_1ab2133dc_Range16(3329LLU,3331LLU,1LLU),_1ab2133dc_Range16(3387LLU,3388LLU,1LLU),_1ab2133dc_Range16(3390LLU,3396LLU,1LLU),_1ab2133dc_Range16(3398LLU,3400LLU,1LLU),_1ab2133dc_Range16(3402LLU,3405LLU,1LLU),_1ab2133dc_Range16(3415LLU,3426LLU,11LLU),_1ab2133dc_Range16(3427LLU,3457LLU,30LLU),_1ab2133dc_Range16(3458LLU,3459LLU,1LLU),_1ab2133dc_Range16(3530LLU,3535LLU,5LLU),_1ab2133dc_Range16(3536LLU,3540LLU,1LLU),_1ab2133dc_Range16(3542LLU,3544LLU,2LLU),_1ab2133dc_Range16(3545LLU,3551LLU,1LLU),_1ab2133dc_Range16(3570LLU,3571LLU,1LLU),_1ab2133dc_Range16(3633LLU,3636LLU,3LLU),_1ab2133dc_Range16(3637LLU,3642LLU,1LLU),_1ab2133dc_Range16(3655LLU,3662LLU,1LLU),_1ab2133dc_Range16(3761LLU,3764LLU,3LLU),_1ab2133dc_Range16(3765LLU,3772LLU,1LLU),_1ab2133dc_Range16(3784LLU,3790LLU,1LLU),_1ab2133dc_Range16(3864LLU,3865LLU,1LLU),_1ab2133dc_Range16(3893LLU,3897LLU,2LLU),_1ab2133dc_Range16(3902LLU,3903LLU,1LLU),_1ab2133dc_Range16(3953LLU,3972LLU,1LLU),_1ab2133dc_Range16(3974LLU,3975LLU,1LLU),_1ab2133dc_Range16(3981LLU,3991LLU,1LLU),_1ab2133dc_Range16(3993LLU,4028LLU,1LLU),_1ab2133dc_Range16(4038LLU,4139LLU,101LLU),_1ab2133dc_Range16(4140LLU,4158LLU,1LLU),_1ab2133dc_Range16(4182LLU,4185LLU,1LLU),_1ab2133dc_Range16(4190LLU,4192LLU,1LLU),_1ab2133dc_Range16(4194LLU,4196LLU,1LLU),_1ab2133dc_Range16(4199LLU,4205LLU,1LLU),_1ab2133dc_Range16(4209LLU,4212LLU,1LLU),_1ab2133dc_Range16(4226LLU,4237LLU,1LLU),_1ab2133dc_Range16(4239LLU,4250LLU,11LLU),_1ab2133dc_Range16(4251LLU,4253LLU,1LLU),_1ab2133dc_Range16(4957LLU,4959LLU,1LLU),_1ab2133dc_Range16(5906LLU,5909LLU,1LLU),_1ab2133dc_Range16(5938LLU,5940LLU,1LLU),_1ab2133dc_Range16(5970LLU,5971LLU,1LLU),_1ab2133dc_Range16(6002LLU,6003LLU,1LLU),_1ab2133dc_Range16(6068LLU,6099LLU,1LLU),_1ab2133dc_Range16(6109LLU,6155LLU,46LLU),_1ab2133dc_Range16(6156LLU,6157LLU,1LLU),_1ab2133dc_Range16(6159LLU,6277LLU,118LLU),_1ab2133dc_Range16(6278LLU,6313LLU,35LLU),_1ab2133dc_Range16(6432LLU,6443LLU,1LLU),_1ab2133dc_Range16(6448LLU,6459LLU,1LLU),_1ab2133dc_Range16(6679LLU,6683LLU,1LLU),_1ab2133dc_Range16(6741LLU,6750LLU,1LLU),_1ab2133dc_Range16(6752LLU,6780LLU,1LLU),_1ab2133dc_Range16(6783LLU,6832LLU,49LLU),_1ab2133dc_Range16(6833LLU,6862LLU,1LLU),_1ab2133dc_Range16(6912LLU,6916LLU,1LLU),_1ab2133dc_Range16(6964LLU,6980LLU,1LLU),_1ab2133dc_Range16(7019LLU,7027LLU,1LLU),_1ab2133dc_Range16(7040LLU,7042LLU,1LLU),_1ab2133dc_Range16(7073LLU,7085LLU,1LLU),_1ab2133dc_Range16(7142LLU,7155LLU,1LLU),_1ab2133dc_Range16(7204LLU,7223LLU,1LLU),_1ab2133dc_Range16(7376LLU,7378LLU,1LLU),_1ab2133dc_Range16(7380LLU,7400LLU,1LLU),_1ab2133dc_Range16(7405LLU,7412LLU,7LLU),_1ab2133dc_Range16(7415LLU,7417LLU,1LLU),_1ab2133dc_Range16(7616LLU,7679LLU,1LLU),_1ab2133dc_Range16(8400LLU,8432LLU,1LLU),_1ab2133dc_Range16(11503LLU,11505LLU,1LLU),_1ab2133dc_Range16(11647LLU,11744LLU,97LLU),_1ab2133dc_Range16(11745LLU,11775LLU,1LLU),_1ab2133dc_Range16(12330LLU,12335LLU,1LLU),_1ab2133dc_Range16(12441LLU,12442LLU,1LLU),_1ab2133dc_Range16(42607LLU,42610LLU,1LLU),_1ab2133dc_Range16(42612LLU,42621LLU,1LLU),_1ab2133dc_Range16(42654LLU,42655LLU,1LLU),_1ab2133dc_Range16(42736LLU,42737LLU,1LLU),_1ab2133dc_Range16(43010LLU,43014LLU,4LLU),_1ab2133dc_Range16(43019LLU,43043LLU,24LLU),_1ab2133dc_Range16(43044LLU,43047LLU,1LLU),_1ab2133dc_Range16(43052LLU,43136LLU,84LLU),_1ab2133dc_Range16(43137LLU,43188LLU,51LLU),_1ab2133dc_Range16(43189LLU,43205LLU,1LLU),_1ab2133dc_Range16(43232LLU,43249LLU,1LLU),_1ab2133dc_Range16(43263LLU,43302LLU,39LLU),_1ab2133dc_Range16(43303LLU,43309LLU,1LLU),_1ab2133dc_Range16(43335LLU,43347LLU,1LLU),_1ab2133dc_Range16(43392LLU,43395LLU,1LLU),_1ab2133dc_Range16(43443LLU,43456LLU,1LLU),_1ab2133dc_Range16(43493LLU,43561LLU,68LLU),_1ab2133dc_Range16(43562LLU,43574LLU,1LLU),_1ab2133dc_Range16(43587LLU,43596LLU,9LLU),_1ab2133dc_Range16(43597LLU,43643LLU,46LLU),_1ab2133dc_Range16(43644LLU,43645LLU,1LLU),_1ab2133dc_Range16(43696LLU,43698LLU,2LLU),_1ab2133dc_Range16(43699LLU,43700LLU,1LLU),_1ab2133dc_Range16(43703LLU,43704LLU,1LLU),_1ab2133dc_Range16(43710LLU,43711LLU,1LLU),_1ab2133dc_Range16(43713LLU,43755LLU,42LLU),_1ab2133dc_Range16(43756LLU,43759LLU,1LLU),_1ab2133dc_Range16(43765LLU,43766LLU,1LLU),_1ab2133dc_Range16(44003LLU,44010LLU,1LLU),_1ab2133dc_Range16(44012LLU,44013LLU,1LLU),_1ab2133dc_Range16(64286LLU,65024LLU,738LLU),_1ab2133dc_Range16(65025LLU,65039LLU,1LLU),_1ab2133dc_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66045LLU,66272LLU,227LLU),_1ab2133dc_Range32(66422LLU,66426LLU,1LLU),_1ab2133dc_Range32(68097LLU,68099LLU,1LLU),_1ab2133dc_Range32(68101LLU,68102LLU,1LLU),_1ab2133dc_Range32(68108LLU,68111LLU,1LLU),_1ab2133dc_Range32(68152LLU,68154LLU,1LLU),_1ab2133dc_Range32(68159LLU,68325LLU,166LLU),_1ab2133dc_Range32(68326LLU,68900LLU,574LLU),_1ab2133dc_Range32(68901LLU,68903LLU,1LLU),_1ab2133dc_Range32(69291LLU,69292LLU,1LLU),_1ab2133dc_Range32(69373LLU,69375LLU,1LLU),_1ab2133dc_Range32(69446LLU,69456LLU,1LLU),_1ab2133dc_Range32(69506LLU,69509LLU,1LLU),_1ab2133dc_Range32(69632LLU,69634LLU,1LLU),_1ab2133dc_Range32(69688LLU,69702LLU,1LLU),_1ab2133dc_Range32(69744LLU,69747LLU,3LLU),_1ab2133dc_Range32(69748LLU,69759LLU,11LLU),_1ab2133dc_Range32(69760LLU,69762LLU,1LLU),_1ab2133dc_Range32(69808LLU,69818LLU,1LLU),_1ab2133dc_Range32(69826LLU,69888LLU,62LLU),_1ab2133dc_Range32(69889LLU,69890LLU,1LLU),_1ab2133dc_Range32(69927LLU,69940LLU,1LLU),_1ab2133dc_Range32(69957LLU,69958LLU,1LLU),_1ab2133dc_Range32(70003LLU,70016LLU,13LLU),_1ab2133dc_Range32(70017LLU,70018LLU,1LLU),_1ab2133dc_Range32(70067LLU,70080LLU,1LLU),_1ab2133dc_Range32(70089LLU,70092LLU,1LLU),_1ab2133dc_Range32(70094LLU,70095LLU,1LLU),_1ab2133dc_Range32(70188LLU,70199LLU,1LLU),_1ab2133dc_Range32(70206LLU,70209LLU,3LLU),_1ab2133dc_Range32(70367LLU,70378LLU,1LLU),_1ab2133dc_Range32(70400LLU,70403LLU,1LLU),_1ab2133dc_Range32(70459LLU,70460LLU,1LLU),_1ab2133dc_Range32(70462LLU,70468LLU,1LLU),_1ab2133dc_Range32(70471LLU,70472LLU,1LLU),_1ab2133dc_Range32(70475LLU,70477LLU,1LLU),_1ab2133dc_Range32(70487LLU,70498LLU,11LLU),_1ab2133dc_Range32(70499LLU,70502LLU,3LLU),_1ab2133dc_Range32(70503LLU,70508LLU,1LLU),_1ab2133dc_Range32(70512LLU,70516LLU,1LLU),_1ab2133dc_Range32(70709LLU,70726LLU,1LLU),_1ab2133dc_Range32(70750LLU,70832LLU,82LLU),_1ab2133dc_Range32(70833LLU,70851LLU,1LLU),_1ab2133dc_Range32(71087LLU,71093LLU,1LLU),_1ab2133dc_Range32(71096LLU,71104LLU,1LLU),_1ab2133dc_Range32(71132LLU,71133LLU,1LLU),_1ab2133dc_Range32(71216LLU,71232LLU,1LLU),_1ab2133dc_Range32(71339LLU,71351LLU,1LLU),_1ab2133dc_Range32(71453LLU,71467LLU,1LLU),_1ab2133dc_Range32(71724LLU,71738LLU,1LLU),_1ab2133dc_Range32(71984LLU,71989LLU,1LLU),_1ab2133dc_Range32(71991LLU,71992LLU,1LLU),_1ab2133dc_Range32(71995LLU,71998LLU,1LLU),_1ab2133dc_Range32(72000LLU,72002LLU,2LLU),_1ab2133dc_Range32(72003LLU,72145LLU,142LLU),_1ab2133dc_Range32(72146LLU,72151LLU,1LLU),_1ab2133dc_Range32(72154LLU,72160LLU,1LLU),_1ab2133dc_Range32(72164LLU,72193LLU,29LLU),_1ab2133dc_Range32(72194LLU,72202LLU,1LLU),_1ab2133dc_Range32(72243LLU,72249LLU,1LLU),_1ab2133dc_Range32(72251LLU,72254LLU,1LLU),_1ab2133dc_Range32(72263LLU,72273LLU,10LLU),_1ab2133dc_Range32(72274LLU,72283LLU,1LLU),_1ab2133dc_Range32(72330LLU,72345LLU,1LLU),_1ab2133dc_Range32(72751LLU,72758LLU,1LLU),_1ab2133dc_Range32(72760LLU,72767LLU,1LLU),_1ab2133dc_Range32(72850LLU,72871LLU,1LLU),_1ab2133dc_Range32(72873LLU,72886LLU,1LLU),_1ab2133dc_Range32(73009LLU,73014LLU,1LLU),_1ab2133dc_Range32(73018LLU,73020LLU,2LLU),_1ab2133dc_Range32(73021LLU,73023LLU,2LLU),_1ab2133dc_Range32(73024LLU,73029LLU,1LLU),_1ab2133dc_Range32(73031LLU,73098LLU,67LLU),_1ab2133dc_Range32(73099LLU,73102LLU,1LLU),_1ab2133dc_Range32(73104LLU,73105LLU,1LLU),_1ab2133dc_Range32(73107LLU,73111LLU,1LLU),_1ab2133dc_Range32(73459LLU,73462LLU,1LLU),_1ab2133dc_Range32(73472LLU,73473LLU,1LLU),_1ab2133dc_Range32(73475LLU,73524LLU,49LLU),_1ab2133dc_Range32(73525LLU,73530LLU,1LLU),_1ab2133dc_Range32(73534LLU,73538LLU,1LLU),_1ab2133dc_Range32(78912LLU,78919LLU,7LLU),_1ab2133dc_Range32(78920LLU,78933LLU,1LLU),_1ab2133dc_Range32(92912LLU,92916LLU,1LLU),_1ab2133dc_Range32(92976LLU,92982LLU,1LLU),_1ab2133dc_Range32(94031LLU,94033LLU,2LLU),_1ab2133dc_Range32(94034LLU,94087LLU,1LLU),_1ab2133dc_Range32(94095LLU,94098LLU,1LLU),_1ab2133dc_Range32(94180LLU,94192LLU,12LLU),_1ab2133dc_Range32(94193LLU,113821LLU,19628LLU),_1ab2133dc_Range32(113822LLU,118528LLU,4706LLU),_1ab2133dc_Range32(118529LLU,118573LLU,1LLU),_1ab2133dc_Range32(118576LLU,118598LLU,1LLU),_1ab2133dc_Range32(119141LLU,119145LLU,1LLU),_1ab2133dc_Range32(119149LLU,119154LLU,1LLU),_1ab2133dc_Range32(119163LLU,119170LLU,1LLU),_1ab2133dc_Range32(119173LLU,119179LLU,1LLU),_1ab2133dc_Range32(119210LLU,119213LLU,1LLU),_1ab2133dc_Range32(119362LLU,119364LLU,1LLU),_1ab2133dc_Range32(121344LLU,121398LLU,1LLU),_1ab2133dc_Range32(121403LLU,121452LLU,1LLU),_1ab2133dc_Range32(121461LLU,121476LLU,15LLU),_1ab2133dc_Range32(121499LLU,121503LLU,1LLU),_1ab2133dc_Range32(121505LLU,121519LLU,1LLU),_1ab2133dc_Range32(122880LLU,122886LLU,1LLU),_1ab2133dc_Range32(122888LLU,122904LLU,1LLU),_1ab2133dc_Range32(122907LLU,122913LLU,1LLU),_1ab2133dc_Range32(122915LLU,122916LLU,1LLU),_1ab2133dc_Range32(122918LLU,122922LLU,1LLU),_1ab2133dc_Range32(123023LLU,123184LLU,161LLU),_1ab2133dc_Range32(123185LLU,123190LLU,1LLU),_1ab2133dc_Range32(123566LLU,123628LLU,62LLU),_1ab2133dc_Range32(123629LLU,123631LLU,1LLU),_1ab2133dc_Range32(124140LLU,124143LLU,1LLU),_1ab2133dc_Range32(125136LLU,125142LLU,1LLU),_1ab2133dc_Range32(125252LLU,125258LLU,1LLU),_1ab2133dc_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(2307LLU,2363LLU,56LLU),_1ab2133dc_Range16(2366LLU,2368LLU,1LLU),_1ab2133dc_Range16(2377LLU,2380LLU,1LLU),_1ab2133dc_Range16(2382LLU,2383LLU,1LLU),_1ab2133dc_Range16(2434LLU,2435LLU,1LLU),_1ab2133dc_Range16(2494LLU,2496LLU,1LLU),_1ab2133dc_Range16(2503LLU,2504LLU,1LLU),_1ab2133dc_Range16(2507LLU,2508LLU,1LLU),_1ab2133dc_Range16(2519LLU,2563LLU,44LLU),_1ab2133dc_Range16(2622LLU,2624LLU,1LLU),_1ab2133dc_Range16(2691LLU,2750LLU,59LLU),_1ab2133dc_Range16(2751LLU,2752LLU,1LLU),_1ab2133dc_Range16(2761LLU,2763LLU,2LLU),_1ab2133dc_Range16(2764LLU,2818LLU,54LLU),_1ab2133dc_Range16(2819LLU,2878LLU,59LLU),_1ab2133dc_Range16(2880LLU,2887LLU,7LLU),_1ab2133dc_Range16(2888LLU,2891LLU,3LLU),_1ab2133dc_Range16(2892LLU,2903LLU,11LLU),_1ab2133dc_Range16(3006LLU,3007LLU,1LLU),_1ab2133dc_Range16(3009LLU,3010LLU,1LLU),_1ab2133dc_Range16(3014LLU,3016LLU,1LLU),_1ab2133dc_Range16(3018LLU,3020LLU,1LLU),_1ab2133dc_Range16(3031LLU,3073LLU,42LLU),_1ab2133dc_Range16(3074LLU,3075LLU,1LLU),_1ab2133dc_Range16(3137LLU,3140LLU,1LLU),_1ab2133dc_Range16(3202LLU,3203LLU,1LLU),_1ab2133dc_Range16(3262LLU,3264LLU,2LLU),_1ab2133dc_Range16(3265LLU,3268LLU,1LLU),_1ab2133dc_Range16(3271LLU,3272LLU,1LLU),_1ab2133dc_Range16(3274LLU,3275LLU,1LLU),_1ab2133dc_Range16(3285LLU,3286LLU,1LLU),_1ab2133dc_Range16(3315LLU,3330LLU,15LLU),_1ab2133dc_Range16(3331LLU,3390LLU,59LLU),_1ab2133dc_Range16(3391LLU,3392LLU,1LLU),_1ab2133dc_Range16(3398LLU,3400LLU,1LLU),_1ab2133dc_Range16(3402LLU,3404LLU,1LLU),_1ab2133dc_Range16(3415LLU,3458LLU,43LLU),_1ab2133dc_Range16(3459LLU,3535LLU,76LLU),_1ab2133dc_Range16(3536LLU,3537LLU,1LLU),_1ab2133dc_Range16(3544LLU,3551LLU,1LLU),_1ab2133dc_Range16(3570LLU,3571LLU,1LLU),_1ab2133dc_Range16(3902LLU,3903LLU,1LLU),_1ab2133dc_Range16(3967LLU,4139LLU,172LLU),_1ab2133dc_Range16(4140LLU,4145LLU,5LLU),_1ab2133dc_Range16(4152LLU,4155LLU,3LLU),_1ab2133dc_Range16(4156LLU,4182LLU,26LLU),_1ab2133dc_Range16(4183LLU,4194LLU,11LLU),_1ab2133dc_Range16(4195LLU,4196LLU,1LLU),_1ab2133dc_Range16(4199LLU,4205LLU,1LLU),_1ab2133dc_Range16(4227LLU,4228LLU,1LLU),_1ab2133dc_Range16(4231LLU,4236LLU,1LLU),_1ab2133dc_Range16(4239LLU,4250LLU,11LLU),_1ab2133dc_Range16(4251LLU,4252LLU,1LLU),_1ab2133dc_Range16(5909LLU,5940LLU,31LLU),_1ab2133dc_Range16(6070LLU,6078LLU,8LLU),_1ab2133dc_Range16(6079LLU,6085LLU,1LLU),_1ab2133dc_Range16(6087LLU,6088LLU,1LLU),_1ab2133dc_Range16(6435LLU,6438LLU,1LLU),_1ab2133dc_Range16(6441LLU,6443LLU,1LLU),_1ab2133dc_Range16(6448LLU,6449LLU,1LLU),_1ab2133dc_Range16(6451LLU,6456LLU,1LLU),_1ab2133dc_Range16(6681LLU,6682LLU,1LLU),_1ab2133dc_Range16(6741LLU,6743LLU,2LLU),_1ab2133dc_Range16(6753LLU,6755LLU,2LLU),_1ab2133dc_Range16(6756LLU,6765LLU,9LLU),_1ab2133dc_Range16(6766LLU,6770LLU,1LLU),_1ab2133dc_Range16(6916LLU,6965LLU,49LLU),_1ab2133dc_Range16(6971LLU,6973LLU,2LLU),_1ab2133dc_Range16(6974LLU,6977LLU,1LLU),_1ab2133dc_Range16(6979LLU,6980LLU,1LLU),_1ab2133dc_Range16(7042LLU,7073LLU,31LLU),_1ab2133dc_Range16(7078LLU,7079LLU,1LLU),_1ab2133dc_Range16(7082LLU,7143LLU,61LLU),_1ab2133dc_Range16(7146LLU,7148LLU,1LLU),_1ab2133dc_Range16(7150LLU,7154LLU,4LLU),_1ab2133dc_Range16(7155LLU,7204LLU,49LLU),_1ab2133dc_Range16(7205LLU,7211LLU,1LLU),_1ab2133dc_Range16(7220LLU,7221LLU,1LLU),_1ab2133dc_Range16(7393LLU,7415LLU,22LLU),_1ab2133dc_Range16(12334LLU,12335LLU,1LLU),_1ab2133dc_Range16(43043LLU,43044LLU,1LLU),_1ab2133dc_Range16(43047LLU,43136LLU,89LLU),_1ab2133dc_Range16(43137LLU,43188LLU,51LLU),_1ab2133dc_Range16(43189LLU,43203LLU,1LLU),_1ab2133dc_Range16(43346LLU,43347LLU,1LLU),_1ab2133dc_Range16(43395LLU,43444LLU,49LLU),_1ab2133dc_Range16(43445LLU,43450LLU,5LLU),_1ab2133dc_Range16(43451LLU,43454LLU,3LLU),_1ab2133dc_Range16(43455LLU,43456LLU,1LLU),_1ab2133dc_Range16(43567LLU,43568LLU,1LLU),_1ab2133dc_Range16(43571LLU,43572LLU,1LLU),_1ab2133dc_Range16(43597LLU,43643LLU,46LLU),_1ab2133dc_Range16(43645LLU,43755LLU,110LLU),_1ab2133dc_Range16(43758LLU,43759LLU,1LLU),_1ab2133dc_Range16(43765LLU,44003LLU,238LLU),_1ab2133dc_Range16(44004LLU,44006LLU,2LLU),_1ab2133dc_Range16(44007LLU,44009LLU,2LLU),_1ab2133dc_Range16(44010LLU,44012LLU,2LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69632LLU,69634LLU,2LLU),_1ab2133dc_Range32(69762LLU,69808LLU,46LLU),_1ab2133dc_Range32(69809LLU,69810LLU,1LLU),_1ab2133dc_Range32(69815LLU,69816LLU,1LLU),_1ab2133dc_Range32(69932LLU,69957LLU,25LLU),_1ab2133dc_Range32(69958LLU,70018LLU,60LLU),_1ab2133dc_Range32(70067LLU,70069LLU,1LLU),_1ab2133dc_Range32(70079LLU,70080LLU,1LLU),_1ab2133dc_Range32(70094LLU,70188LLU,94LLU),_1ab2133dc_Range32(70189LLU,70190LLU,1LLU),_1ab2133dc_Range32(70194LLU,70195LLU,1LLU),_1ab2133dc_Range32(70197LLU,70368LLU,171LLU),_1ab2133dc_Range32(70369LLU,70370LLU,1LLU),_1ab2133dc_Range32(70402LLU,70403LLU,1LLU),_1ab2133dc_Range32(70462LLU,70463LLU,1LLU),_1ab2133dc_Range32(70465LLU,70468LLU,1LLU),_1ab2133dc_Range32(70471LLU,70472LLU,1LLU),_1ab2133dc_Range32(70475LLU,70477LLU,1LLU),_1ab2133dc_Range32(70487LLU,70498LLU,11LLU),_1ab2133dc_Range32(70499LLU,70709LLU,210LLU),_1ab2133dc_Range32(70710LLU,70711LLU,1LLU),_1ab2133dc_Range32(70720LLU,70721LLU,1LLU),_1ab2133dc_Range32(70725LLU,70832LLU,107LLU),_1ab2133dc_Range32(70833LLU,70834LLU,1LLU),_1ab2133dc_Range32(70841LLU,70843LLU,2LLU),_1ab2133dc_Range32(70844LLU,70846LLU,1LLU),_1ab2133dc_Range32(70849LLU,71087LLU,238LLU),_1ab2133dc_Range32(71088LLU,71089LLU,1LLU),_1ab2133dc_Range32(71096LLU,71099LLU,1LLU),_1ab2133dc_Range32(71102LLU,71216LLU,114LLU),_1ab2133dc_Range32(71217LLU,71218LLU,1LLU),_1ab2133dc_Range32(71227LLU,71228LLU,1LLU),_1ab2133dc_Range32(71230LLU,71340LLU,110LLU),_1ab2133dc_Range32(71342LLU,71343LLU,1LLU),_1ab2133dc_Range32(71350LLU,71456LLU,106LLU),_1ab2133dc_Range32(71457LLU,71462LLU,5LLU),_1ab2133dc_Range32(71724LLU,71726LLU,1LLU),_1ab2133dc_Range32(71736LLU,71984LLU,248LLU),_1ab2133dc_Range32(71985LLU,71989LLU,1LLU),_1ab2133dc_Range32(71991LLU,71992LLU,1LLU),_1ab2133dc_Range32(71997LLU,72000LLU,3LLU),_1ab2133dc_Range32(72002LLU,72145LLU,143LLU),_1ab2133dc_Range32(72146LLU,72147LLU,1LLU),_1ab2133dc_Range32(72156LLU,72159LLU,1LLU),_1ab2133dc_Range32(72164LLU,72249LLU,85LLU),_1ab2133dc_Range32(72279LLU,72280LLU,1LLU),_1ab2133dc_Range32(72343LLU,72751LLU,408LLU),_1ab2133dc_Range32(72766LLU,72873LLU,107LLU),_1ab2133dc_Range32(72881LLU,72884LLU,3LLU),_1ab2133dc_Range32(73098LLU,73102LLU,1LLU),_1ab2133dc_Range32(73107LLU,73108LLU,1LLU),_1ab2133dc_Range32(73110LLU,73461LLU,351LLU),_1ab2133dc_Range32(73462LLU,73475LLU,13LLU),_1ab2133dc_Range32(73524LLU,73525LLU,1LLU),_1ab2133dc_Range32(73534LLU,73535LLU,1LLU),_1ab2133dc_Range32(73537LLU,94033LLU,20496LLU),_1ab2133dc_Range32(94034LLU,94087LLU,1LLU),_1ab2133dc_Range32(94192LLU,94193LLU,1LLU),_1ab2133dc_Range32(119141LLU,119142LLU,1LLU),_1ab2133dc_Range32(119149LLU,119154LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ME = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(1160LLU,1161LLU,1LLU),_1ab2133dc_Range16(6846LLU,8413LLU,1567LLU),_1ab2133dc_Range16(8414LLU,8416LLU,1LLU),_1ab2133dc_Range16(8418LLU,8420LLU,1LLU),_1ab2133dc_Range16(42608LLU,42610LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(768LLU,879LLU,1LLU),_1ab2133dc_Range16(1155LLU,1159LLU,1LLU),_1ab2133dc_Range16(1425LLU,1469LLU,1LLU),_1ab2133dc_Range16(1471LLU,1473LLU,2LLU),_1ab2133dc_Range16(1474LLU,1476LLU,2LLU),_1ab2133dc_Range16(1477LLU,1479LLU,2LLU),_1ab2133dc_Range16(1552LLU,1562LLU,1LLU),_1ab2133dc_Range16(1611LLU,1631LLU,1LLU),_1ab2133dc_Range16(1648LLU,1750LLU,102LLU),_1ab2133dc_Range16(1751LLU,1756LLU,1LLU),_1ab2133dc_Range16(1759LLU,1764LLU,1LLU),_1ab2133dc_Range16(1767LLU,1768LLU,1LLU),_1ab2133dc_Range16(1770LLU,1773LLU,1LLU),_1ab2133dc_Range16(1809LLU,1840LLU,31LLU),_1ab2133dc_Range16(1841LLU,1866LLU,1LLU),_1ab2133dc_Range16(1958LLU,1968LLU,1LLU),_1ab2133dc_Range16(2027LLU,2035LLU,1LLU),_1ab2133dc_Range16(2045LLU,2070LLU,25LLU),_1ab2133dc_Range16(2071LLU,2073LLU,1LLU),_1ab2133dc_Range16(2075LLU,2083LLU,1LLU),_1ab2133dc_Range16(2085LLU,2087LLU,1LLU),_1ab2133dc_Range16(2089LLU,2093LLU,1LLU),_1ab2133dc_Range16(2137LLU,2139LLU,1LLU),_1ab2133dc_Range16(2200LLU,2207LLU,1LLU),_1ab2133dc_Range16(2250LLU,2273LLU,1LLU),_1ab2133dc_Range16(2275LLU,2306LLU,1LLU),_1ab2133dc_Range16(2362LLU,2364LLU,2LLU),_1ab2133dc_Range16(2369LLU,2376LLU,1LLU),_1ab2133dc_Range16(2381LLU,2385LLU,4LLU),_1ab2133dc_Range16(2386LLU,2391LLU,1LLU),_1ab2133dc_Range16(2402LLU,2403LLU,1LLU),_1ab2133dc_Range16(2433LLU,2492LLU,59LLU),_1ab2133dc_Range16(2497LLU,2500LLU,1LLU),_1ab2133dc_Range16(2509LLU,2530LLU,21LLU),_1ab2133dc_Range16(2531LLU,2558LLU,27LLU),_1ab2133dc_Range16(2561LLU,2562LLU,1LLU),_1ab2133dc_Range16(2620LLU,2625LLU,5LLU),_1ab2133dc_Range16(2626LLU,2631LLU,5LLU),_1ab2133dc_Range16(2632LLU,2635LLU,3LLU),_1ab2133dc_Range16(2636LLU,2637LLU,1LLU),_1ab2133dc_Range16(2641LLU,2672LLU,31LLU),_1ab2133dc_Range16(2673LLU,2677LLU,4LLU),_1ab2133dc_Range16(2689LLU,2690LLU,1LLU),_1ab2133dc_Range16(2748LLU,2753LLU,5LLU),_1ab2133dc_Range16(2754LLU,2757LLU,1LLU),_1ab2133dc_Range16(2759LLU,2760LLU,1LLU),_1ab2133dc_Range16(2765LLU,2786LLU,21LLU),_1ab2133dc_Range16(2787LLU,2810LLU,23LLU),_1ab2133dc_Range16(2811LLU,2815LLU,1LLU),_1ab2133dc_Range16(2817LLU,2876LLU,59LLU),_1ab2133dc_Range16(2879LLU,2881LLU,2LLU),_1ab2133dc_Range16(2882LLU,2884LLU,1LLU),_1ab2133dc_Range16(2893LLU,2901LLU,8LLU),_1ab2133dc_Range16(2902LLU,2914LLU,12LLU),_1ab2133dc_Range16(2915LLU,2946LLU,31LLU),_1ab2133dc_Range16(3008LLU,3021LLU,13LLU),_1ab2133dc_Range16(3072LLU,3076LLU,4LLU),_1ab2133dc_Range16(3132LLU,3134LLU,2LLU),_1ab2133dc_Range16(3135LLU,3136LLU,1LLU),_1ab2133dc_Range16(3142LLU,3144LLU,1LLU),_1ab2133dc_Range16(3146LLU,3149LLU,1LLU),_1ab2133dc_Range16(3157LLU,3158LLU,1LLU),_1ab2133dc_Range16(3170LLU,3171LLU,1LLU),_1ab2133dc_Range16(3201LLU,3260LLU,59LLU),_1ab2133dc_Range16(3263LLU,3270LLU,7LLU),_1ab2133dc_Range16(3276LLU,3277LLU,1LLU),_1ab2133dc_Range16(3298LLU,3299LLU,1LLU),_1ab2133dc_Range16(3328LLU,3329LLU,1LLU),_1ab2133dc_Range16(3387LLU,3388LLU,1LLU),_1ab2133dc_Range16(3393LLU,3396LLU,1LLU),_1ab2133dc_Range16(3405LLU,3426LLU,21LLU),_1ab2133dc_Range16(3427LLU,3457LLU,30LLU),_1ab2133dc_Range16(3530LLU,3538LLU,8LLU),_1ab2133dc_Range16(3539LLU,3540LLU,1LLU),_1ab2133dc_Range16(3542LLU,3633LLU,91LLU),_1ab2133dc_Range16(3636LLU,3642LLU,1LLU),_1ab2133dc_Range16(3655LLU,3662LLU,1LLU),_1ab2133dc_Range16(3761LLU,3764LLU,3LLU),_1ab2133dc_Range16(3765LLU,3772LLU,1LLU),_1ab2133dc_Range16(3784LLU,3790LLU,1LLU),_1ab2133dc_Range16(3864LLU,3865LLU,1LLU),_1ab2133dc_Range16(3893LLU,3897LLU,2LLU),_1ab2133dc_Range16(3953LLU,3966LLU,1LLU),_1ab2133dc_Range16(3968LLU,3972LLU,1LLU),_1ab2133dc_Range16(3974LLU,3975LLU,1LLU),_1ab2133dc_Range16(3981LLU,3991LLU,1LLU),_1ab2133dc_Range16(3993LLU,4028LLU,1LLU),_1ab2133dc_Range16(4038LLU,4141LLU,103LLU),_1ab2133dc_Range16(4142LLU,4144LLU,1LLU),_1ab2133dc_Range16(4146LLU,4151LLU,1LLU),_1ab2133dc_Range16(4153LLU,4154LLU,1LLU),_1ab2133dc_Range16(4157LLU,4158LLU,1LLU),_1ab2133dc_Range16(4184LLU,4185LLU,1LLU),_1ab2133dc_Range16(4190LLU,4192LLU,1LLU),_1ab2133dc_Range16(4209LLU,4212LLU,1LLU),_1ab2133dc_Range16(4226LLU,4229LLU,3LLU),_1ab2133dc_Range16(4230LLU,4237LLU,7LLU),_1ab2133dc_Range16(4253LLU,4957LLU,704LLU),_1ab2133dc_Range16(4958LLU,4959LLU,1LLU),_1ab2133dc_Range16(5906LLU,5908LLU,1LLU),_1ab2133dc_Range16(5938LLU,5939LLU,1LLU),_1ab2133dc_Range16(5970LLU,5971LLU,1LLU),_1ab2133dc_Range16(6002LLU,6003LLU,1LLU),_1ab2133dc_Range16(6068LLU,6069LLU,1LLU),_1ab2133dc_Range16(6071LLU,6077LLU,1LLU),_1ab2133dc_Range16(6086LLU,6089LLU,3LLU),_1ab2133dc_Range16(6090LLU,6099LLU,1LLU),_1ab2133dc_Range16(6109LLU,6155LLU,46LLU),_1ab2133dc_Range16(6156LLU,6157LLU,1LLU),_1ab2133dc_Range16(6159LLU,6277LLU,118LLU),_1ab2133dc_Range16(6278LLU,6313LLU,35LLU),_1ab2133dc_Range16(6432LLU,6434LLU,1LLU),_1ab2133dc_Range16(6439LLU,6440LLU,1LLU),_1ab2133dc_Range16(6450LLU,6457LLU,7LLU),_1ab2133dc_Range16(6458LLU,6459LLU,1LLU),_1ab2133dc_Range16(6679LLU,6680LLU,1LLU),_1ab2133dc_Range16(6683LLU,6742LLU,59LLU),_1ab2133dc_Range16(6744LLU,6750LLU,1LLU),_1ab2133dc_Range16(6752LLU,6754LLU,2LLU),_1ab2133dc_Range16(6757LLU,6764LLU,1LLU),_1ab2133dc_Range16(6771LLU,6780LLU,1LLU),_1ab2133dc_Range16(6783LLU,6832LLU,49LLU),_1ab2133dc_Range16(6833LLU,6845LLU,1LLU),_1ab2133dc_Range16(6847LLU,6862LLU,1LLU),_1ab2133dc_Range16(6912LLU,6915LLU,1LLU),_1ab2133dc_Range16(6964LLU,6966LLU,2LLU),_1ab2133dc_Range16(6967LLU,6970LLU,1LLU),_1ab2133dc_Range16(6972LLU,6978LLU,6LLU),_1ab2133dc_Range16(7019LLU,7027LLU,1LLU),_1ab2133dc_Range16(7040LLU,7041LLU,1LLU),_1ab2133dc_Range16(7074LLU,7077LLU,1LLU),_1ab2133dc_Range16(7080LLU,7081LLU,1LLU),_1ab2133dc_Range16(7083LLU,7085LLU,1LLU),_1ab2133dc_Range16(7142LLU,7144LLU,2LLU),_1ab2133dc_Range16(7145LLU,7149LLU,4LLU),_1ab2133dc_Range16(7151LLU,7153LLU,1LLU),_1ab2133dc_Range16(7212LLU,7219LLU,1LLU),_1ab2133dc_Range16(7222LLU,7223LLU,1LLU),_1ab2133dc_Range16(7376LLU,7378LLU,1LLU),_1ab2133dc_Range16(7380LLU,7392LLU,1LLU),_1ab2133dc_Range16(7394LLU,7400LLU,1LLU),_1ab2133dc_Range16(7405LLU,7412LLU,7LLU),_1ab2133dc_Range16(7416LLU,7417LLU,1LLU),_1ab2133dc_Range16(7616LLU,7679LLU,1LLU),_1ab2133dc_Range16(8400LLU,8412LLU,1LLU),_1ab2133dc_Range16(8417LLU,8421LLU,4LLU),_1ab2133dc_Range16(8422LLU,8432LLU,1LLU),_1ab2133dc_Range16(11503LLU,11505LLU,1LLU),_1ab2133dc_Range16(11647LLU,11744LLU,97LLU),_1ab2133dc_Range16(11745LLU,11775LLU,1LLU),_1ab2133dc_Range16(12330LLU,12333LLU,1LLU),_1ab2133dc_Range16(12441LLU,12442LLU,1LLU),_1ab2133dc_Range16(42607LLU,42612LLU,5LLU),_1ab2133dc_Range16(42613LLU,42621LLU,1LLU),_1ab2133dc_Range16(42654LLU,42655LLU,1LLU),_1ab2133dc_Range16(42736LLU,42737LLU,1LLU),_1ab2133dc_Range16(43010LLU,43014LLU,4LLU),_1ab2133dc_Range16(43019LLU,43045LLU,26LLU),_1ab2133dc_Range16(43046LLU,43052LLU,6LLU),_1ab2133dc_Range16(43204LLU,43205LLU,1LLU),_1ab2133dc_Range16(43232LLU,43249LLU,1LLU),_1ab2133dc_Range16(43263LLU,43302LLU,39LLU),_1ab2133dc_Range16(43303LLU,43309LLU,1LLU),_1ab2133dc_Range16(43335LLU,43345LLU,1LLU),_1ab2133dc_Range16(43392LLU,43394LLU,1LLU),_1ab2133dc_Range16(43443LLU,43446LLU,3LLU),_1ab2133dc_Range16(43447LLU,43449LLU,1LLU),_1ab2133dc_Range16(43452LLU,43453LLU,1LLU),_1ab2133dc_Range16(43493LLU,43561LLU,68LLU),_1ab2133dc_Range16(43562LLU,43566LLU,1LLU),_1ab2133dc_Range16(43569LLU,43570LLU,1LLU),_1ab2133dc_Range16(43573LLU,43574LLU,1LLU),_1ab2133dc_Range16(43587LLU,43596LLU,9LLU),_1ab2133dc_Range16(43644LLU,43696LLU,52LLU),_1ab2133dc_Range16(43698LLU,43700LLU,1LLU),_1ab2133dc_Range16(43703LLU,43704LLU,1LLU),_1ab2133dc_Range16(43710LLU,43711LLU,1LLU),_1ab2133dc_Range16(43713LLU,43756LLU,43LLU),_1ab2133dc_Range16(43757LLU,43766LLU,9LLU),_1ab2133dc_Range16(44005LLU,44008LLU,3LLU),_1ab2133dc_Range16(44013LLU,64286LLU,20273LLU),_1ab2133dc_Range16(65024LLU,65039LLU,1LLU),_1ab2133dc_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66045LLU,66272LLU,227LLU),_1ab2133dc_Range32(66422LLU,66426LLU,1LLU),_1ab2133dc_Range32(68097LLU,68099LLU,1LLU),_1ab2133dc_Range32(68101LLU,68102LLU,1LLU),_1ab2133dc_Range32(68108LLU,68111LLU,1LLU),_1ab2133dc_Range32(68152LLU,68154LLU,1LLU),_1ab2133dc_Range32(68159LLU,68325LLU,166LLU),_1ab2133dc_Range32(68326LLU,68900LLU,574LLU),_1ab2133dc_Range32(68901LLU,68903LLU,1LLU),_1ab2133dc_Range32(69291LLU,69292LLU,1LLU),_1ab2133dc_Range32(69373LLU,69375LLU,1LLU),_1ab2133dc_Range32(69446LLU,69456LLU,1LLU),_1ab2133dc_Range32(69506LLU,69509LLU,1LLU),_1ab2133dc_Range32(69633LLU,69688LLU,55LLU),_1ab2133dc_Range32(69689LLU,69702LLU,1LLU),_1ab2133dc_Range32(69744LLU,69747LLU,3LLU),_1ab2133dc_Range32(69748LLU,69759LLU,11LLU),_1ab2133dc_Range32(69760LLU,69761LLU,1LLU),_1ab2133dc_Range32(69811LLU,69814LLU,1LLU),_1ab2133dc_Range32(69817LLU,69818LLU,1LLU),_1ab2133dc_Range32(69826LLU,69888LLU,62LLU),_1ab2133dc_Range32(69889LLU,69890LLU,1LLU),_1ab2133dc_Range32(69927LLU,69931LLU,1LLU),_1ab2133dc_Range32(69933LLU,69940LLU,1LLU),_1ab2133dc_Range32(70003LLU,70016LLU,13LLU),_1ab2133dc_Range32(70017LLU,70070LLU,53LLU),_1ab2133dc_Range32(70071LLU,70078LLU,1LLU),_1ab2133dc_Range32(70089LLU,70092LLU,1LLU),_1ab2133dc_Range32(70095LLU,70191LLU,96LLU),_1ab2133dc_Range32(70192LLU,70193LLU,1LLU),_1ab2133dc_Range32(70196LLU,70198LLU,2LLU),_1ab2133dc_Range32(70199LLU,70206LLU,7LLU),_1ab2133dc_Range32(70209LLU,70367LLU,158LLU),_1ab2133dc_Range32(70371LLU,70378LLU,1LLU),_1ab2133dc_Range32(70400LLU,70401LLU,1LLU),_1ab2133dc_Range32(70459LLU,70460LLU,1LLU),_1ab2133dc_Range32(70464LLU,70502LLU,38LLU),_1ab2133dc_Range32(70503LLU,70508LLU,1LLU),_1ab2133dc_Range32(70512LLU,70516LLU,1LLU),_1ab2133dc_Range32(70712LLU,70719LLU,1LLU),_1ab2133dc_Range32(70722LLU,70724LLU,1LLU),_1ab2133dc_Range32(70726LLU,70750LLU,24LLU),_1ab2133dc_Range32(70835LLU,70840LLU,1LLU),_1ab2133dc_Range32(70842LLU,70847LLU,5LLU),_1ab2133dc_Range32(70848LLU,70850LLU,2LLU),_1ab2133dc_Range32(70851LLU,71090LLU,239LLU),_1ab2133dc_Range32(71091LLU,71093LLU,1LLU),_1ab2133dc_Range32(71100LLU,71101LLU,1LLU),_1ab2133dc_Range32(71103LLU,71104LLU,1LLU),_1ab2133dc_Range32(71132LLU,71133LLU,1LLU),_1ab2133dc_Range32(71219LLU,71226LLU,1LLU),_1ab2133dc_Range32(71229LLU,71231LLU,2LLU),_1ab2133dc_Range32(71232LLU,71339LLU,107LLU),_1ab2133dc_Range32(71341LLU,71344LLU,3LLU),_1ab2133dc_Range32(71345LLU,71349LLU,1LLU),_1ab2133dc_Range32(71351LLU,71453LLU,102LLU),_1ab2133dc_Range32(71454LLU,71455LLU,1LLU),_1ab2133dc_Range32(71458LLU,71461LLU,1LLU),_1ab2133dc_Range32(71463LLU,71467LLU,1LLU),_1ab2133dc_Range32(71727LLU,71735LLU,1LLU),_1ab2133dc_Range32(71737LLU,71738LLU,1LLU),_1ab2133dc_Range32(71995LLU,71996LLU,1LLU),_1ab2133dc_Range32(71998LLU,72003LLU,5LLU),_1ab2133dc_Range32(72148LLU,72151LLU,1LLU),_1ab2133dc_Range32(72154LLU,72155LLU,1LLU),_1ab2133dc_Range32(72160LLU,72193LLU,33LLU),_1ab2133dc_Range32(72194LLU,72202LLU,1LLU),_1ab2133dc_Range32(72243LLU,72248LLU,1LLU),_1ab2133dc_Range32(72251LLU,72254LLU,1LLU),_1ab2133dc_Range32(72263LLU,72273LLU,10LLU),_1ab2133dc_Range32(72274LLU,72278LLU,1LLU),_1ab2133dc_Range32(72281LLU,72283LLU,1LLU),_1ab2133dc_Range32(72330LLU,72342LLU,1LLU),_1ab2133dc_Range32(72344LLU,72345LLU,1LLU),_1ab2133dc_Range32(72752LLU,72758LLU,1LLU),_1ab2133dc_Range32(72760LLU,72765LLU,1LLU),_1ab2133dc_Range32(72767LLU,72850LLU,83LLU),_1ab2133dc_Range32(72851LLU,72871LLU,1LLU),_1ab2133dc_Range32(72874LLU,72880LLU,1LLU),_1ab2133dc_Range32(72882LLU,72883LLU,1LLU),_1ab2133dc_Range32(72885LLU,72886LLU,1LLU),_1ab2133dc_Range32(73009LLU,73014LLU,1LLU),_1ab2133dc_Range32(73018LLU,73020LLU,2LLU),_1ab2133dc_Range32(73021LLU,73023LLU,2LLU),_1ab2133dc_Range32(73024LLU,73029LLU,1LLU),_1ab2133dc_Range32(73031LLU,73104LLU,73LLU),_1ab2133dc_Range32(73105LLU,73109LLU,4LLU),_1ab2133dc_Range32(73111LLU,73459LLU,348LLU),_1ab2133dc_Range32(73460LLU,73472LLU,12LLU),_1ab2133dc_Range32(73473LLU,73526LLU,53LLU),_1ab2133dc_Range32(73527LLU,73530LLU,1LLU),_1ab2133dc_Range32(73536LLU,73538LLU,2LLU),_1ab2133dc_Range32(78912LLU,78919LLU,7LLU),_1ab2133dc_Range32(78920LLU,78933LLU,1LLU),_1ab2133dc_Range32(92912LLU,92916LLU,1LLU),_1ab2133dc_Range32(92976LLU,92982LLU,1LLU),_1ab2133dc_Range32(94031LLU,94095LLU,64LLU),_1ab2133dc_Range32(94096LLU,94098LLU,1LLU),_1ab2133dc_Range32(94180LLU,113821LLU,19641LLU),_1ab2133dc_Range32(113822LLU,118528LLU,4706LLU),_1ab2133dc_Range32(118529LLU,118573LLU,1LLU),_1ab2133dc_Range32(118576LLU,118598LLU,1LLU),_1ab2133dc_Range32(119143LLU,119145LLU,1LLU),_1ab2133dc_Range32(119163LLU,119170LLU,1LLU),_1ab2133dc_Range32(119173LLU,119179LLU,1LLU),_1ab2133dc_Range32(119210LLU,119213LLU,1LLU),_1ab2133dc_Range32(119362LLU,119364LLU,1LLU),_1ab2133dc_Range32(121344LLU,121398LLU,1LLU),_1ab2133dc_Range32(121403LLU,121452LLU,1LLU),_1ab2133dc_Range32(121461LLU,121476LLU,15LLU),_1ab2133dc_Range32(121499LLU,121503LLU,1LLU),_1ab2133dc_Range32(121505LLU,121519LLU,1LLU),_1ab2133dc_Range32(122880LLU,122886LLU,1LLU),_1ab2133dc_Range32(122888LLU,122904LLU,1LLU),_1ab2133dc_Range32(122907LLU,122913LLU,1LLU),_1ab2133dc_Range32(122915LLU,122916LLU,1LLU),_1ab2133dc_Range32(122918LLU,122922LLU,1LLU),_1ab2133dc_Range32(123023LLU,123184LLU,161LLU),_1ab2133dc_Range32(123185LLU,123190LLU,1LLU),_1ab2133dc_Range32(123566LLU,123628LLU,62LLU),_1ab2133dc_Range32(123629LLU,123631LLU,1LLU),_1ab2133dc_Range32(124140LLU,124143LLU,1LLU),_1ab2133dc_Range32(125136LLU,125142LLU,1LLU),_1ab2133dc_Range32(125252LLU,125258LLU,1LLU),_1ab2133dc_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__N = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(48LLU,57LLU,1LLU),_1ab2133dc_Range16(178LLU,179LLU,1LLU),_1ab2133dc_Range16(185LLU,188LLU,3LLU),_1ab2133dc_Range16(189LLU,190LLU,1LLU),_1ab2133dc_Range16(1632LLU,1641LLU,1LLU),_1ab2133dc_Range16(1776LLU,1785LLU,1LLU),_1ab2133dc_Range16(1984LLU,1993LLU,1LLU),_1ab2133dc_Range16(2406LLU,2415LLU,1LLU),_1ab2133dc_Range16(2534LLU,2543LLU,1LLU),_1ab2133dc_Range16(2548LLU,2553LLU,1LLU),_1ab2133dc_Range16(2662LLU,2671LLU,1LLU),_1ab2133dc_Range16(2790LLU,2799LLU,1LLU),_1ab2133dc_Range16(2918LLU,2927LLU,1LLU),_1ab2133dc_Range16(2930LLU,2935LLU,1LLU),_1ab2133dc_Range16(3046LLU,3058LLU,1LLU),_1ab2133dc_Range16(3174LLU,3183LLU,1LLU),_1ab2133dc_Range16(3192LLU,3198LLU,1LLU),_1ab2133dc_Range16(3302LLU,3311LLU,1LLU),_1ab2133dc_Range16(3416LLU,3422LLU,1LLU),_1ab2133dc_Range16(3430LLU,3448LLU,1LLU),_1ab2133dc_Range16(3558LLU,3567LLU,1LLU),_1ab2133dc_Range16(3664LLU,3673LLU,1LLU),_1ab2133dc_Range16(3792LLU,3801LLU,1LLU),_1ab2133dc_Range16(3872LLU,3891LLU,1LLU),_1ab2133dc_Range16(4160LLU,4169LLU,1LLU),_1ab2133dc_Range16(4240LLU,4249LLU,1LLU),_1ab2133dc_Range16(4969LLU,4988LLU,1LLU),_1ab2133dc_Range16(5870LLU,5872LLU,1LLU),_1ab2133dc_Range16(6112LLU,6121LLU,1LLU),_1ab2133dc_Range16(6128LLU,6137LLU,1LLU),_1ab2133dc_Range16(6160LLU,6169LLU,1LLU),_1ab2133dc_Range16(6470LLU,6479LLU,1LLU),_1ab2133dc_Range16(6608LLU,6618LLU,1LLU),_1ab2133dc_Range16(6784LLU,6793LLU,1LLU),_1ab2133dc_Range16(6800LLU,6809LLU,1LLU),_1ab2133dc_Range16(6992LLU,7001LLU,1LLU),_1ab2133dc_Range16(7088LLU,7097LLU,1LLU),_1ab2133dc_Range16(7232LLU,7241LLU,1LLU),_1ab2133dc_Range16(7248LLU,7257LLU,1LLU),_1ab2133dc_Range16(8304LLU,8308LLU,4LLU),_1ab2133dc_Range16(8309LLU,8313LLU,1LLU),_1ab2133dc_Range16(8320LLU,8329LLU,1LLU),_1ab2133dc_Range16(8528LLU,8578LLU,1LLU),_1ab2133dc_Range16(8581LLU,8585LLU,1LLU),_1ab2133dc_Range16(9312LLU,9371LLU,1LLU),_1ab2133dc_Range16(9450LLU,9471LLU,1LLU),_1ab2133dc_Range16(10102LLU,10131LLU,1LLU),_1ab2133dc_Range16(11517LLU,12295LLU,778LLU),_1ab2133dc_Range16(12321LLU,12329LLU,1LLU),_1ab2133dc_Range16(12344LLU,12346LLU,1LLU),_1ab2133dc_Range16(12690LLU,12693LLU,1LLU),_1ab2133dc_Range16(12832LLU,12841LLU,1LLU),_1ab2133dc_Range16(12872LLU,12879LLU,1LLU),_1ab2133dc_Range16(12881LLU,12895LLU,1LLU),_1ab2133dc_Range16(12928LLU,12937LLU,1LLU),_1ab2133dc_Range16(12977LLU,12991LLU,1LLU),_1ab2133dc_Range16(42528LLU,42537LLU,1LLU),_1ab2133dc_Range16(42726LLU,42735LLU,1LLU),_1ab2133dc_Range16(43056LLU,43061LLU,1LLU),_1ab2133dc_Range16(43216LLU,43225LLU,1LLU),_1ab2133dc_Range16(43264LLU,43273LLU,1LLU),_1ab2133dc_Range16(43472LLU,43481LLU,1LLU),_1ab2133dc_Range16(43504LLU,43513LLU,1LLU),_1ab2133dc_Range16(43600LLU,43609LLU,1LLU),_1ab2133dc_Range16(44016LLU,44025LLU,1LLU),_1ab2133dc_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(65799LLU,65843LLU,1LLU),_1ab2133dc_Range32(65856LLU,65912LLU,1LLU),_1ab2133dc_Range32(65930LLU,65931LLU,1LLU),_1ab2133dc_Range32(66273LLU,66299LLU,1LLU),_1ab2133dc_Range32(66336LLU,66339LLU,1LLU),_1ab2133dc_Range32(66369LLU,66378LLU,9LLU),_1ab2133dc_Range32(66513LLU,66517LLU,1LLU),_1ab2133dc_Range32(66720LLU,66729LLU,1LLU),_1ab2133dc_Range32(67672LLU,67679LLU,1LLU),_1ab2133dc_Range32(67705LLU,67711LLU,1LLU),_1ab2133dc_Range32(67751LLU,67759LLU,1LLU),_1ab2133dc_Range32(67835LLU,67839LLU,1LLU),_1ab2133dc_Range32(67862LLU,67867LLU,1LLU),_1ab2133dc_Range32(68028LLU,68029LLU,1LLU),_1ab2133dc_Range32(68032LLU,68047LLU,1LLU),_1ab2133dc_Range32(68050LLU,68095LLU,1LLU),_1ab2133dc_Range32(68160LLU,68168LLU,1LLU),_1ab2133dc_Range32(68221LLU,68222LLU,1LLU),_1ab2133dc_Range32(68253LLU,68255LLU,1LLU),_1ab2133dc_Range32(68331LLU,68335LLU,1LLU),_1ab2133dc_Range32(68440LLU,68447LLU,1LLU),_1ab2133dc_Range32(68472LLU,68479LLU,1LLU),_1ab2133dc_Range32(68521LLU,68527LLU,1LLU),_1ab2133dc_Range32(68858LLU,68863LLU,1LLU),_1ab2133dc_Range32(68912LLU,68921LLU,1LLU),_1ab2133dc_Range32(69216LLU,69246LLU,1LLU),_1ab2133dc_Range32(69405LLU,69414LLU,1LLU),_1ab2133dc_Range32(69457LLU,69460LLU,1LLU),_1ab2133dc_Range32(69573LLU,69579LLU,1LLU),_1ab2133dc_Range32(69714LLU,69743LLU,1LLU),_1ab2133dc_Range32(69872LLU,69881LLU,1LLU),_1ab2133dc_Range32(69942LLU,69951LLU,1LLU),_1ab2133dc_Range32(70096LLU,70105LLU,1LLU),_1ab2133dc_Range32(70113LLU,70132LLU,1LLU),_1ab2133dc_Range32(70384LLU,70393LLU,1LLU),_1ab2133dc_Range32(70736LLU,70745LLU,1LLU),_1ab2133dc_Range32(70864LLU,70873LLU,1LLU),_1ab2133dc_Range32(71248LLU,71257LLU,1LLU),_1ab2133dc_Range32(71360LLU,71369LLU,1LLU),_1ab2133dc_Range32(71472LLU,71483LLU,1LLU),_1ab2133dc_Range32(71904LLU,71922LLU,1LLU),_1ab2133dc_Range32(72016LLU,72025LLU,1LLU),_1ab2133dc_Range32(72784LLU,72812LLU,1LLU),_1ab2133dc_Range32(73040LLU,73049LLU,1LLU),_1ab2133dc_Range32(73120LLU,73129LLU,1LLU),_1ab2133dc_Range32(73552LLU,73561LLU,1LLU),_1ab2133dc_Range32(73664LLU,73684LLU,1LLU),_1ab2133dc_Range32(74752LLU,74862LLU,1LLU),_1ab2133dc_Range32(92768LLU,92777LLU,1LLU),_1ab2133dc_Range32(92864LLU,92873LLU,1LLU),_1ab2133dc_Range32(93008LLU,93017LLU,1LLU),_1ab2133dc_Range32(93019LLU,93025LLU,1LLU),_1ab2133dc_Range32(93824LLU,93846LLU,1LLU),_1ab2133dc_Range32(119488LLU,119507LLU,1LLU),_1ab2133dc_Range32(119520LLU,119539LLU,1LLU),_1ab2133dc_Range32(119648LLU,119672LLU,1LLU),_1ab2133dc_Range32(120782LLU,120831LLU,1LLU),_1ab2133dc_Range32(123200LLU,123209LLU,1LLU),_1ab2133dc_Range32(123632LLU,123641LLU,1LLU),_1ab2133dc_Range32(124144LLU,124153LLU,1LLU),_1ab2133dc_Range32(125127LLU,125135LLU,1LLU),_1ab2133dc_Range32(125264LLU,125273LLU,1LLU),_1ab2133dc_Range32(126065LLU,126123LLU,1LLU),_1ab2133dc_Range32(126125LLU,126127LLU,1LLU),_1ab2133dc_Range32(126129LLU,126132LLU,1LLU),_1ab2133dc_Range32(126209LLU,126253LLU,1LLU),_1ab2133dc_Range32(126255LLU,126269LLU,1LLU),_1ab2133dc_Range32(127232LLU,127244LLU,1LLU),_1ab2133dc_Range32(130032LLU,130041LLU,1LLU)}),4LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ND = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(48LLU,57LLU,1LLU),_1ab2133dc_Range16(1632LLU,1641LLU,1LLU),_1ab2133dc_Range16(1776LLU,1785LLU,1LLU),_1ab2133dc_Range16(1984LLU,1993LLU,1LLU),_1ab2133dc_Range16(2406LLU,2415LLU,1LLU),_1ab2133dc_Range16(2534LLU,2543LLU,1LLU),_1ab2133dc_Range16(2662LLU,2671LLU,1LLU),_1ab2133dc_Range16(2790LLU,2799LLU,1LLU),_1ab2133dc_Range16(2918LLU,2927LLU,1LLU),_1ab2133dc_Range16(3046LLU,3055LLU,1LLU),_1ab2133dc_Range16(3174LLU,3183LLU,1LLU),_1ab2133dc_Range16(3302LLU,3311LLU,1LLU),_1ab2133dc_Range16(3430LLU,3439LLU,1LLU),_1ab2133dc_Range16(3558LLU,3567LLU,1LLU),_1ab2133dc_Range16(3664LLU,3673LLU,1LLU),_1ab2133dc_Range16(3792LLU,3801LLU,1LLU),_1ab2133dc_Range16(3872LLU,3881LLU,1LLU),_1ab2133dc_Range16(4160LLU,4169LLU,1LLU),_1ab2133dc_Range16(4240LLU,4249LLU,1LLU),_1ab2133dc_Range16(6112LLU,6121LLU,1LLU),_1ab2133dc_Range16(6160LLU,6169LLU,1LLU),_1ab2133dc_Range16(6470LLU,6479LLU,1LLU),_1ab2133dc_Range16(6608LLU,6617LLU,1LLU),_1ab2133dc_Range16(6784LLU,6793LLU,1LLU),_1ab2133dc_Range16(6800LLU,6809LLU,1LLU),_1ab2133dc_Range16(6992LLU,7001LLU,1LLU),_1ab2133dc_Range16(7088LLU,7097LLU,1LLU),_1ab2133dc_Range16(7232LLU,7241LLU,1LLU),_1ab2133dc_Range16(7248LLU,7257LLU,1LLU),_1ab2133dc_Range16(42528LLU,42537LLU,1LLU),_1ab2133dc_Range16(43216LLU,43225LLU,1LLU),_1ab2133dc_Range16(43264LLU,43273LLU,1LLU),_1ab2133dc_Range16(43472LLU,43481LLU,1LLU),_1ab2133dc_Range16(43504LLU,43513LLU,1LLU),_1ab2133dc_Range16(43600LLU,43609LLU,1LLU),_1ab2133dc_Range16(44016LLU,44025LLU,1LLU),_1ab2133dc_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66720LLU,66729LLU,1LLU),_1ab2133dc_Range32(68912LLU,68921LLU,1LLU),_1ab2133dc_Range32(69734LLU,69743LLU,1LLU),_1ab2133dc_Range32(69872LLU,69881LLU,1LLU),_1ab2133dc_Range32(69942LLU,69951LLU,1LLU),_1ab2133dc_Range32(70096LLU,70105LLU,1LLU),_1ab2133dc_Range32(70384LLU,70393LLU,1LLU),_1ab2133dc_Range32(70736LLU,70745LLU,1LLU),_1ab2133dc_Range32(70864LLU,70873LLU,1LLU),_1ab2133dc_Range32(71248LLU,71257LLU,1LLU),_1ab2133dc_Range32(71360LLU,71369LLU,1LLU),_1ab2133dc_Range32(71472LLU,71481LLU,1LLU),_1ab2133dc_Range32(71904LLU,71913LLU,1LLU),_1ab2133dc_Range32(72016LLU,72025LLU,1LLU),_1ab2133dc_Range32(72784LLU,72793LLU,1LLU),_1ab2133dc_Range32(73040LLU,73049LLU,1LLU),_1ab2133dc_Range32(73120LLU,73129LLU,1LLU),_1ab2133dc_Range32(73552LLU,73561LLU,1LLU),_1ab2133dc_Range32(92768LLU,92777LLU,1LLU),_1ab2133dc_Range32(92864LLU,92873LLU,1LLU),_1ab2133dc_Range32(93008LLU,93017LLU,1LLU),_1ab2133dc_Range32(120782LLU,120831LLU,1LLU),_1ab2133dc_Range32(123200LLU,123209LLU,1LLU),_1ab2133dc_Range32(123632LLU,123641LLU,1LLU),_1ab2133dc_Range32(124144LLU,124153LLU,1LLU),_1ab2133dc_Range32(125264LLU,125273LLU,1LLU),_1ab2133dc_Range32(130032LLU,130041LLU,1LLU)}),1LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__NL = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(5870LLU,5872LLU,1LLU),_1ab2133dc_Range16(8544LLU,8578LLU,1LLU),_1ab2133dc_Range16(8581LLU,8584LLU,1LLU),_1ab2133dc_Range16(12295LLU,12321LLU,26LLU),_1ab2133dc_Range16(12322LLU,12329LLU,1LLU),_1ab2133dc_Range16(12344LLU,12346LLU,1LLU),_1ab2133dc_Range16(42726LLU,42735LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(65856LLU,65908LLU,1LLU),_1ab2133dc_Range32(66369LLU,66378LLU,9LLU),_1ab2133dc_Range32(66513LLU,66517LLU,1LLU),_1ab2133dc_Range32(74752LLU,74862LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__NO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(178LLU,179LLU,1LLU),_1ab2133dc_Range16(185LLU,188LLU,3LLU),_1ab2133dc_Range16(189LLU,190LLU,1LLU),_1ab2133dc_Range16(2548LLU,2553LLU,1LLU),_1ab2133dc_Range16(2930LLU,2935LLU,1LLU),_1ab2133dc_Range16(3056LLU,3058LLU,1LLU),_1ab2133dc_Range16(3192LLU,3198LLU,1LLU),_1ab2133dc_Range16(3416LLU,3422LLU,1LLU),_1ab2133dc_Range16(3440LLU,3448LLU,1LLU),_1ab2133dc_Range16(3882LLU,3891LLU,1LLU),_1ab2133dc_Range16(4969LLU,4988LLU,1LLU),_1ab2133dc_Range16(6128LLU,6137LLU,1LLU),_1ab2133dc_Range16(6618LLU,8304LLU,1686LLU),_1ab2133dc_Range16(8308LLU,8313LLU,1LLU),_1ab2133dc_Range16(8320LLU,8329LLU,1LLU),_1ab2133dc_Range16(8528LLU,8543LLU,1LLU),_1ab2133dc_Range16(8585LLU,9312LLU,727LLU),_1ab2133dc_Range16(9313LLU,9371LLU,1LLU),_1ab2133dc_Range16(9450LLU,9471LLU,1LLU),_1ab2133dc_Range16(10102LLU,10131LLU,1LLU),_1ab2133dc_Range16(11517LLU,12690LLU,1173LLU),_1ab2133dc_Range16(12691LLU,12693LLU,1LLU),_1ab2133dc_Range16(12832LLU,12841LLU,1LLU),_1ab2133dc_Range16(12872LLU,12879LLU,1LLU),_1ab2133dc_Range16(12881LLU,12895LLU,1LLU),_1ab2133dc_Range16(12928LLU,12937LLU,1LLU),_1ab2133dc_Range16(12977LLU,12991LLU,1LLU),_1ab2133dc_Range16(43056LLU,43061LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(65799LLU,65843LLU,1LLU),_1ab2133dc_Range32(65909LLU,65912LLU,1LLU),_1ab2133dc_Range32(65930LLU,65931LLU,1LLU),_1ab2133dc_Range32(66273LLU,66299LLU,1LLU),_1ab2133dc_Range32(66336LLU,66339LLU,1LLU),_1ab2133dc_Range32(67672LLU,67679LLU,1LLU),_1ab2133dc_Range32(67705LLU,67711LLU,1LLU),_1ab2133dc_Range32(67751LLU,67759LLU,1LLU),_1ab2133dc_Range32(67835LLU,67839LLU,1LLU),_1ab2133dc_Range32(67862LLU,67867LLU,1LLU),_1ab2133dc_Range32(68028LLU,68029LLU,1LLU),_1ab2133dc_Range32(68032LLU,68047LLU,1LLU),_1ab2133dc_Range32(68050LLU,68095LLU,1LLU),_1ab2133dc_Range32(68160LLU,68168LLU,1LLU),_1ab2133dc_Range32(68221LLU,68222LLU,1LLU),_1ab2133dc_Range32(68253LLU,68255LLU,1LLU),_1ab2133dc_Range32(68331LLU,68335LLU,1LLU),_1ab2133dc_Range32(68440LLU,68447LLU,1LLU),_1ab2133dc_Range32(68472LLU,68479LLU,1LLU),_1ab2133dc_Range32(68521LLU,68527LLU,1LLU),_1ab2133dc_Range32(68858LLU,68863LLU,1LLU),_1ab2133dc_Range32(69216LLU,69246LLU,1LLU),_1ab2133dc_Range32(69405LLU,69414LLU,1LLU),_1ab2133dc_Range32(69457LLU,69460LLU,1LLU),_1ab2133dc_Range32(69573LLU,69579LLU,1LLU),_1ab2133dc_Range32(69714LLU,69733LLU,1LLU),_1ab2133dc_Range32(70113LLU,70132LLU,1LLU),_1ab2133dc_Range32(71482LLU,71483LLU,1LLU),_1ab2133dc_Range32(71914LLU,71922LLU,1LLU),_1ab2133dc_Range32(72794LLU,72812LLU,1LLU),_1ab2133dc_Range32(73664LLU,73684LLU,1LLU),_1ab2133dc_Range32(93019LLU,93025LLU,1LLU),_1ab2133dc_Range32(93824LLU,93846LLU,1LLU),_1ab2133dc_Range32(119488LLU,119507LLU,1LLU),_1ab2133dc_Range32(119520LLU,119539LLU,1LLU),_1ab2133dc_Range32(119648LLU,119672LLU,1LLU),_1ab2133dc_Range32(125127LLU,125135LLU,1LLU),_1ab2133dc_Range32(126065LLU,126123LLU,1LLU),_1ab2133dc_Range32(126125LLU,126127LLU,1LLU),_1ab2133dc_Range32(126129LLU,126132LLU,1LLU),_1ab2133dc_Range32(126209LLU,126253LLU,1LLU),_1ab2133dc_Range32(126255LLU,126269LLU,1LLU),_1ab2133dc_Range32(127232LLU,127244LLU,1LLU)}),3LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__P = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(33LLU,35LLU,1LLU),_1ab2133dc_Range16(37LLU,42LLU,1LLU),_1ab2133dc_Range16(44LLU,47LLU,1LLU),_1ab2133dc_Range16(58LLU,59LLU,1LLU),_1ab2133dc_Range16(63LLU,64LLU,1LLU),_1ab2133dc_Range16(91LLU,93LLU,1LLU),_1ab2133dc_Range16(95LLU,123LLU,28LLU),_1ab2133dc_Range16(125LLU,161LLU,36LLU),_1ab2133dc_Range16(167LLU,171LLU,4LLU),_1ab2133dc_Range16(182LLU,183LLU,1LLU),_1ab2133dc_Range16(187LLU,191LLU,4LLU),_1ab2133dc_Range16(894LLU,903LLU,9LLU),_1ab2133dc_Range16(1370LLU,1375LLU,1LLU),_1ab2133dc_Range16(1417LLU,1418LLU,1LLU),_1ab2133dc_Range16(1470LLU,1472LLU,2LLU),_1ab2133dc_Range16(1475LLU,1478LLU,3LLU),_1ab2133dc_Range16(1523LLU,1524LLU,1LLU),_1ab2133dc_Range16(1545LLU,1546LLU,1LLU),_1ab2133dc_Range16(1548LLU,1549LLU,1LLU),_1ab2133dc_Range16(1563LLU,1565LLU,2LLU),_1ab2133dc_Range16(1566LLU,1567LLU,1LLU),_1ab2133dc_Range16(1642LLU,1645LLU,1LLU),_1ab2133dc_Range16(1748LLU,1792LLU,44LLU),_1ab2133dc_Range16(1793LLU,1805LLU,1LLU),_1ab2133dc_Range16(2039LLU,2041LLU,1LLU),_1ab2133dc_Range16(2096LLU,2110LLU,1LLU),_1ab2133dc_Range16(2142LLU,2404LLU,262LLU),_1ab2133dc_Range16(2405LLU,2416LLU,11LLU),_1ab2133dc_Range16(2557LLU,2678LLU,121LLU),_1ab2133dc_Range16(2800LLU,3191LLU,391LLU),_1ab2133dc_Range16(3204LLU,3572LLU,368LLU),_1ab2133dc_Range16(3663LLU,3674LLU,11LLU),_1ab2133dc_Range16(3675LLU,3844LLU,169LLU),_1ab2133dc_Range16(3845LLU,3858LLU,1LLU),_1ab2133dc_Range16(3860LLU,3898LLU,38LLU),_1ab2133dc_Range16(3899LLU,3901LLU,1LLU),_1ab2133dc_Range16(3973LLU,4048LLU,75LLU),_1ab2133dc_Range16(4049LLU,4052LLU,1LLU),_1ab2133dc_Range16(4057LLU,4058LLU,1LLU),_1ab2133dc_Range16(4170LLU,4175LLU,1LLU),_1ab2133dc_Range16(4347LLU,4960LLU,613LLU),_1ab2133dc_Range16(4961LLU,4968LLU,1LLU),_1ab2133dc_Range16(5120LLU,5742LLU,622LLU),_1ab2133dc_Range16(5787LLU,5788LLU,1LLU),_1ab2133dc_Range16(5867LLU,5869LLU,1LLU),_1ab2133dc_Range16(5941LLU,5942LLU,1LLU),_1ab2133dc_Range16(6100LLU,6102LLU,1LLU),_1ab2133dc_Range16(6104LLU,6106LLU,1LLU),_1ab2133dc_Range16(6144LLU,6154LLU,1LLU),_1ab2133dc_Range16(6468LLU,6469LLU,1LLU),_1ab2133dc_Range16(6686LLU,6687LLU,1LLU),_1ab2133dc_Range16(6816LLU,6822LLU,1LLU),_1ab2133dc_Range16(6824LLU,6829LLU,1LLU),_1ab2133dc_Range16(7002LLU,7008LLU,1LLU),_1ab2133dc_Range16(7037LLU,7038LLU,1LLU),_1ab2133dc_Range16(7164LLU,7167LLU,1LLU),_1ab2133dc_Range16(7227LLU,7231LLU,1LLU),_1ab2133dc_Range16(7294LLU,7295LLU,1LLU),_1ab2133dc_Range16(7360LLU,7367LLU,1LLU),_1ab2133dc_Range16(7379LLU,8208LLU,829LLU),_1ab2133dc_Range16(8209LLU,8231LLU,1LLU),_1ab2133dc_Range16(8240LLU,8259LLU,1LLU),_1ab2133dc_Range16(8261LLU,8273LLU,1LLU),_1ab2133dc_Range16(8275LLU,8286LLU,1LLU),_1ab2133dc_Range16(8317LLU,8318LLU,1LLU),_1ab2133dc_Range16(8333LLU,8334LLU,1LLU),_1ab2133dc_Range16(8968LLU,8971LLU,1LLU),_1ab2133dc_Range16(9001LLU,9002LLU,1LLU),_1ab2133dc_Range16(10088LLU,10101LLU,1LLU),_1ab2133dc_Range16(10181LLU,10182LLU,1LLU),_1ab2133dc_Range16(10214LLU,10223LLU,1LLU),_1ab2133dc_Range16(10627LLU,10648LLU,1LLU),_1ab2133dc_Range16(10712LLU,10715LLU,1LLU),_1ab2133dc_Range16(10748LLU,10749LLU,1LLU),_1ab2133dc_Range16(11513LLU,11516LLU,1LLU),_1ab2133dc_Range16(11518LLU,11519LLU,1LLU),_1ab2133dc_Range16(11632LLU,11776LLU,144LLU),_1ab2133dc_Range16(11777LLU,11822LLU,1LLU),_1ab2133dc_Range16(11824LLU,11855LLU,1LLU),_1ab2133dc_Range16(11858LLU,11869LLU,1LLU),_1ab2133dc_Range16(12289LLU,12291LLU,1LLU),_1ab2133dc_Range16(12296LLU,12305LLU,1LLU),_1ab2133dc_Range16(12308LLU,12319LLU,1LLU),_1ab2133dc_Range16(12336LLU,12349LLU,13LLU),_1ab2133dc_Range16(12448LLU,12539LLU,91LLU),_1ab2133dc_Range16(42238LLU,42239LLU,1LLU),_1ab2133dc_Range16(42509LLU,42511LLU,1LLU),_1ab2133dc_Range16(42611LLU,42622LLU,11LLU),_1ab2133dc_Range16(42738LLU,42743LLU,1LLU),_1ab2133dc_Range16(43124LLU,43127LLU,1LLU),_1ab2133dc_Range16(43214LLU,43215LLU,1LLU),_1ab2133dc_Range16(43256LLU,43258LLU,1LLU),_1ab2133dc_Range16(43260LLU,43310LLU,50LLU),_1ab2133dc_Range16(43311LLU,43359LLU,48LLU),_1ab2133dc_Range16(43457LLU,43469LLU,1LLU),_1ab2133dc_Range16(43486LLU,43487LLU,1LLU),_1ab2133dc_Range16(43612LLU,43615LLU,1LLU),_1ab2133dc_Range16(43742LLU,43743LLU,1LLU),_1ab2133dc_Range16(43760LLU,43761LLU,1LLU),_1ab2133dc_Range16(44011LLU,64830LLU,20819LLU),_1ab2133dc_Range16(64831LLU,65040LLU,209LLU),_1ab2133dc_Range16(65041LLU,65049LLU,1LLU),_1ab2133dc_Range16(65072LLU,65106LLU,1LLU),_1ab2133dc_Range16(65108LLU,65121LLU,1LLU),_1ab2133dc_Range16(65123LLU,65128LLU,5LLU),_1ab2133dc_Range16(65130LLU,65131LLU,1LLU),_1ab2133dc_Range16(65281LLU,65283LLU,1LLU),_1ab2133dc_Range16(65285LLU,65290LLU,1LLU),_1ab2133dc_Range16(65292LLU,65295LLU,1LLU),_1ab2133dc_Range16(65306LLU,65307LLU,1LLU),_1ab2133dc_Range16(65311LLU,65312LLU,1LLU),_1ab2133dc_Range16(65339LLU,65341LLU,1LLU),_1ab2133dc_Range16(65343LLU,65371LLU,28LLU),_1ab2133dc_Range16(65373LLU,65375LLU,2LLU),_1ab2133dc_Range16(65376LLU,65381LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(65792LLU,65794LLU,1LLU),_1ab2133dc_Range32(66463LLU,66512LLU,49LLU),_1ab2133dc_Range32(66927LLU,67671LLU,744LLU),_1ab2133dc_Range32(67871LLU,67903LLU,32LLU),_1ab2133dc_Range32(68176LLU,68184LLU,1LLU),_1ab2133dc_Range32(68223LLU,68336LLU,113LLU),_1ab2133dc_Range32(68337LLU,68342LLU,1LLU),_1ab2133dc_Range32(68409LLU,68415LLU,1LLU),_1ab2133dc_Range32(68505LLU,68508LLU,1LLU),_1ab2133dc_Range32(69293LLU,69461LLU,168LLU),_1ab2133dc_Range32(69462LLU,69465LLU,1LLU),_1ab2133dc_Range32(69510LLU,69513LLU,1LLU),_1ab2133dc_Range32(69703LLU,69709LLU,1LLU),_1ab2133dc_Range32(69819LLU,69820LLU,1LLU),_1ab2133dc_Range32(69822LLU,69825LLU,1LLU),_1ab2133dc_Range32(69952LLU,69955LLU,1LLU),_1ab2133dc_Range32(70004LLU,70005LLU,1LLU),_1ab2133dc_Range32(70085LLU,70088LLU,1LLU),_1ab2133dc_Range32(70093LLU,70107LLU,14LLU),_1ab2133dc_Range32(70109LLU,70111LLU,1LLU),_1ab2133dc_Range32(70200LLU,70205LLU,1LLU),_1ab2133dc_Range32(70313LLU,70731LLU,418LLU),_1ab2133dc_Range32(70732LLU,70735LLU,1LLU),_1ab2133dc_Range32(70746LLU,70747LLU,1LLU),_1ab2133dc_Range32(70749LLU,70854LLU,105LLU),_1ab2133dc_Range32(71105LLU,71127LLU,1LLU),_1ab2133dc_Range32(71233LLU,71235LLU,1LLU),_1ab2133dc_Range32(71264LLU,71276LLU,1LLU),_1ab2133dc_Range32(71353LLU,71484LLU,131LLU),_1ab2133dc_Range32(71485LLU,71486LLU,1LLU),_1ab2133dc_Range32(71739LLU,72004LLU,265LLU),_1ab2133dc_Range32(72005LLU,72006LLU,1LLU),_1ab2133dc_Range32(72162LLU,72255LLU,93LLU),_1ab2133dc_Range32(72256LLU,72262LLU,1LLU),_1ab2133dc_Range32(72346LLU,72348LLU,1LLU),_1ab2133dc_Range32(72350LLU,72354LLU,1LLU),_1ab2133dc_Range32(72448LLU,72457LLU,1LLU),_1ab2133dc_Range32(72769LLU,72773LLU,1LLU),_1ab2133dc_Range32(72816LLU,72817LLU,1LLU),_1ab2133dc_Range32(73463LLU,73464LLU,1LLU),_1ab2133dc_Range32(73539LLU,73551LLU,1LLU),_1ab2133dc_Range32(73727LLU,74864LLU,1137LLU),_1ab2133dc_Range32(74865LLU,74868LLU,1LLU),_1ab2133dc_Range32(77809LLU,77810LLU,1LLU),_1ab2133dc_Range32(92782LLU,92783LLU,1LLU),_1ab2133dc_Range32(92917LLU,92983LLU,66LLU),_1ab2133dc_Range32(92984LLU,92987LLU,1LLU),_1ab2133dc_Range32(92996LLU,93847LLU,851LLU),_1ab2133dc_Range32(93848LLU,93850LLU,1LLU),_1ab2133dc_Range32(94178LLU,113823LLU,19645LLU),_1ab2133dc_Range32(121479LLU,121483LLU,1LLU),_1ab2133dc_Range32(125278LLU,125279LLU,1LLU)}),11LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(95LLU,8255LLU,8160LLU),_1ab2133dc_Range16(8256LLU,8276LLU,20LLU),_1ab2133dc_Range16(65075LLU,65076LLU,1LLU),_1ab2133dc_Range16(65101LLU,65103LLU,1LLU),_1ab2133dc_Range16(65343LLU,65343LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PD = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(45LLU,1418LLU,1373LLU),_1ab2133dc_Range16(1470LLU,5120LLU,3650LLU),_1ab2133dc_Range16(6150LLU,8208LLU,2058LLU),_1ab2133dc_Range16(8209LLU,8213LLU,1LLU),_1ab2133dc_Range16(11799LLU,11802LLU,3LLU),_1ab2133dc_Range16(11834LLU,11835LLU,1LLU),_1ab2133dc_Range16(11840LLU,11869LLU,29LLU),_1ab2133dc_Range16(12316LLU,12336LLU,20LLU),_1ab2133dc_Range16(12448LLU,65073LLU,52625LLU),_1ab2133dc_Range16(65074LLU,65112LLU,38LLU),_1ab2133dc_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(41LLU,93LLU,52LLU),_1ab2133dc_Range16(125LLU,3899LLU,3774LLU),_1ab2133dc_Range16(3901LLU,5788LLU,1887LLU),_1ab2133dc_Range16(8262LLU,8318LLU,56LLU),_1ab2133dc_Range16(8334LLU,8969LLU,635LLU),_1ab2133dc_Range16(8971LLU,9002LLU,31LLU),_1ab2133dc_Range16(10089LLU,10101LLU,2LLU),_1ab2133dc_Range16(10182LLU,10215LLU,33LLU),_1ab2133dc_Range16(10217LLU,10223LLU,2LLU),_1ab2133dc_Range16(10628LLU,10648LLU,2LLU),_1ab2133dc_Range16(10713LLU,10715LLU,2LLU),_1ab2133dc_Range16(10749LLU,11811LLU,1062LLU),_1ab2133dc_Range16(11813LLU,11817LLU,2LLU),_1ab2133dc_Range16(11862LLU,11868LLU,2LLU),_1ab2133dc_Range16(12297LLU,12305LLU,2LLU),_1ab2133dc_Range16(12309LLU,12315LLU,2LLU),_1ab2133dc_Range16(12318LLU,12319LLU,1LLU),_1ab2133dc_Range16(64830LLU,65048LLU,218LLU),_1ab2133dc_Range16(65078LLU,65092LLU,2LLU),_1ab2133dc_Range16(65096LLU,65114LLU,18LLU),_1ab2133dc_Range16(65116LLU,65118LLU,2LLU),_1ab2133dc_Range16(65289LLU,65341LLU,52LLU),_1ab2133dc_Range16(65373LLU,65379LLU,3LLU)}),jule::Slice<_1ab2133dc_Range32>(),1LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PF = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(187LLU,8217LLU,8030LLU),_1ab2133dc_Range16(8221LLU,8250LLU,29LLU),_1ab2133dc_Range16(11779LLU,11781LLU,2LLU),_1ab2133dc_Range16(11786LLU,11789LLU,3LLU),_1ab2133dc_Range16(11805LLU,11809LLU,4LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(171LLU,8216LLU,8045LLU),_1ab2133dc_Range16(8219LLU,8220LLU,1LLU),_1ab2133dc_Range16(8223LLU,8249LLU,26LLU),_1ab2133dc_Range16(11778LLU,11780LLU,2LLU),_1ab2133dc_Range16(11785LLU,11788LLU,3LLU),_1ab2133dc_Range16(11804LLU,11808LLU,4LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(33LLU,35LLU,1LLU),_1ab2133dc_Range16(37LLU,39LLU,1LLU),_1ab2133dc_Range16(42LLU,46LLU,2LLU),_1ab2133dc_Range16(47LLU,58LLU,11LLU),_1ab2133dc_Range16(59LLU,63LLU,4LLU),_1ab2133dc_Range16(64LLU,92LLU,28LLU),_1ab2133dc_Range16(161LLU,167LLU,6LLU),_1ab2133dc_Range16(182LLU,183LLU,1LLU),_1ab2133dc_Range16(191LLU,894LLU,703LLU),_1ab2133dc_Range16(903LLU,1370LLU,467LLU),_1ab2133dc_Range16(1371LLU,1375LLU,1LLU),_1ab2133dc_Range16(1417LLU,1472LLU,55LLU),_1ab2133dc_Range16(1475LLU,1478LLU,3LLU),_1ab2133dc_Range16(1523LLU,1524LLU,1LLU),_1ab2133dc_Range16(1545LLU,1546LLU,1LLU),_1ab2133dc_Range16(1548LLU,1549LLU,1LLU),_1ab2133dc_Range16(1563LLU,1565LLU,2LLU),_1ab2133dc_Range16(1566LLU,1567LLU,1LLU),_1ab2133dc_Range16(1642LLU,1645LLU,1LLU),_1ab2133dc_Range16(1748LLU,1792LLU,44LLU),_1ab2133dc_Range16(1793LLU,1805LLU,1LLU),_1ab2133dc_Range16(2039LLU,2041LLU,1LLU),_1ab2133dc_Range16(2096LLU,2110LLU,1LLU),_1ab2133dc_Range16(2142LLU,2404LLU,262LLU),_1ab2133dc_Range16(2405LLU,2416LLU,11LLU),_1ab2133dc_Range16(2557LLU,2678LLU,121LLU),_1ab2133dc_Range16(2800LLU,3191LLU,391LLU),_1ab2133dc_Range16(3204LLU,3572LLU,368LLU),_1ab2133dc_Range16(3663LLU,3674LLU,11LLU),_1ab2133dc_Range16(3675LLU,3844LLU,169LLU),_1ab2133dc_Range16(3845LLU,3858LLU,1LLU),_1ab2133dc_Range16(3860LLU,3973LLU,113LLU),_1ab2133dc_Range16(4048LLU,4052LLU,1LLU),_1ab2133dc_Range16(4057LLU,4058LLU,1LLU),_1ab2133dc_Range16(4170LLU,4175LLU,1LLU),_1ab2133dc_Range16(4347LLU,4960LLU,613LLU),_1ab2133dc_Range16(4961LLU,4968LLU,1LLU),_1ab2133dc_Range16(5742LLU,5867LLU,125LLU),_1ab2133dc_Range16(5868LLU,5869LLU,1LLU),_1ab2133dc_Range16(5941LLU,5942LLU,1LLU),_1ab2133dc_Range16(6100LLU,6102LLU,1LLU),_1ab2133dc_Range16(6104LLU,6106LLU,1LLU),_1ab2133dc_Range16(6144LLU,6149LLU,1LLU),_1ab2133dc_Range16(6151LLU,6154LLU,1LLU),_1ab2133dc_Range16(6468LLU,6469LLU,1LLU),_1ab2133dc_Range16(6686LLU,6687LLU,1LLU),_1ab2133dc_Range16(6816LLU,6822LLU,1LLU),_1ab2133dc_Range16(6824LLU,6829LLU,1LLU),_1ab2133dc_Range16(7002LLU,7008LLU,1LLU),_1ab2133dc_Range16(7037LLU,7038LLU,1LLU),_1ab2133dc_Range16(7164LLU,7167LLU,1LLU),_1ab2133dc_Range16(7227LLU,7231LLU,1LLU),_1ab2133dc_Range16(7294LLU,7295LLU,1LLU),_1ab2133dc_Range16(7360LLU,7367LLU,1LLU),_1ab2133dc_Range16(7379LLU,8214LLU,835LLU),_1ab2133dc_Range16(8215LLU,8224LLU,9LLU),_1ab2133dc_Range16(8225LLU,8231LLU,1LLU),_1ab2133dc_Range16(8240LLU,8248LLU,1LLU),_1ab2133dc_Range16(8251LLU,8254LLU,1LLU),_1ab2133dc_Range16(8257LLU,8259LLU,1LLU),_1ab2133dc_Range16(8263LLU,8273LLU,1LLU),_1ab2133dc_Range16(8275LLU,8277LLU,2LLU),_1ab2133dc_Range16(8278LLU,8286LLU,1LLU),_1ab2133dc_Range16(11513LLU,11516LLU,1LLU),_1ab2133dc_Range16(11518LLU,11519LLU,1LLU),_1ab2133dc_Range16(11632LLU,11776LLU,144LLU),_1ab2133dc_Range16(11777LLU,11782LLU,5LLU),_1ab2133dc_Range16(11783LLU,11784LLU,1LLU),_1ab2133dc_Range16(11787LLU,11790LLU,3LLU),_1ab2133dc_Range16(11791LLU,11798LLU,1LLU),_1ab2133dc_Range16(11800LLU,11801LLU,1LLU),_1ab2133dc_Range16(11803LLU,11806LLU,3LLU),_1ab2133dc_Range16(11807LLU,11818LLU,11LLU),_1ab2133dc_Range16(11819LLU,11822LLU,1LLU),_1ab2133dc_Range16(11824LLU,11833LLU,1LLU),_1ab2133dc_Range16(11836LLU,11839LLU,1LLU),_1ab2133dc_Range16(11841LLU,11843LLU,2LLU),_1ab2133dc_Range16(11844LLU,11855LLU,1LLU),_1ab2133dc_Range16(11858LLU,11860LLU,1LLU),_1ab2133dc_Range16(12289LLU,12291LLU,1LLU),_1ab2133dc_Range16(12349LLU,12539LLU,190LLU),_1ab2133dc_Range16(42238LLU,42239LLU,1LLU),_1ab2133dc_Range16(42509LLU,42511LLU,1LLU),_1ab2133dc_Range16(42611LLU,42622LLU,11LLU),_1ab2133dc_Range16(42738LLU,42743LLU,1LLU),_1ab2133dc_Range16(43124LLU,43127LLU,1LLU),_1ab2133dc_Range16(43214LLU,43215LLU,1LLU),_1ab2133dc_Range16(43256LLU,43258LLU,1LLU),_1ab2133dc_Range16(43260LLU,43310LLU,50LLU),_1ab2133dc_Range16(43311LLU,43359LLU,48LLU),_1ab2133dc_Range16(43457LLU,43469LLU,1LLU),_1ab2133dc_Range16(43486LLU,43487LLU,1LLU),_1ab2133dc_Range16(43612LLU,43615LLU,1LLU),_1ab2133dc_Range16(43742LLU,43743LLU,1LLU),_1ab2133dc_Range16(43760LLU,43761LLU,1LLU),_1ab2133dc_Range16(44011LLU,65040LLU,21029LLU),_1ab2133dc_Range16(65041LLU,65046LLU,1LLU),_1ab2133dc_Range16(65049LLU,65072LLU,23LLU),_1ab2133dc_Range16(65093LLU,65094LLU,1LLU),_1ab2133dc_Range16(65097LLU,65100LLU,1LLU),_1ab2133dc_Range16(65104LLU,65106LLU,1LLU),_1ab2133dc_Range16(65108LLU,65111LLU,1LLU),_1ab2133dc_Range16(65119LLU,65121LLU,1LLU),_1ab2133dc_Range16(65128LLU,65130LLU,2LLU),_1ab2133dc_Range16(65131LLU,65281LLU,150LLU),_1ab2133dc_Range16(65282LLU,65283LLU,1LLU),_1ab2133dc_Range16(65285LLU,65287LLU,1LLU),_1ab2133dc_Range16(65290LLU,65294LLU,2LLU),_1ab2133dc_Range16(65295LLU,65306LLU,11LLU),_1ab2133dc_Range16(65307LLU,65311LLU,4LLU),_1ab2133dc_Range16(65312LLU,65340LLU,28LLU),_1ab2133dc_Range16(65377LLU,65380LLU,3LLU),_1ab2133dc_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(65792LLU,65794LLU,1LLU),_1ab2133dc_Range32(66463LLU,66512LLU,49LLU),_1ab2133dc_Range32(66927LLU,67671LLU,744LLU),_1ab2133dc_Range32(67871LLU,67903LLU,32LLU),_1ab2133dc_Range32(68176LLU,68184LLU,1LLU),_1ab2133dc_Range32(68223LLU,68336LLU,113LLU),_1ab2133dc_Range32(68337LLU,68342LLU,1LLU),_1ab2133dc_Range32(68409LLU,68415LLU,1LLU),_1ab2133dc_Range32(68505LLU,68508LLU,1LLU),_1ab2133dc_Range32(69461LLU,69465LLU,1LLU),_1ab2133dc_Range32(69510LLU,69513LLU,1LLU),_1ab2133dc_Range32(69703LLU,69709LLU,1LLU),_1ab2133dc_Range32(69819LLU,69820LLU,1LLU),_1ab2133dc_Range32(69822LLU,69825LLU,1LLU),_1ab2133dc_Range32(69952LLU,69955LLU,1LLU),_1ab2133dc_Range32(70004LLU,70005LLU,1LLU),_1ab2133dc_Range32(70085LLU,70088LLU,1LLU),_1ab2133dc_Range32(70093LLU,70107LLU,14LLU),_1ab2133dc_Range32(70109LLU,70111LLU,1LLU),_1ab2133dc_Range32(70200LLU,70205LLU,1LLU),_1ab2133dc_Range32(70313LLU,70731LLU,418LLU),_1ab2133dc_Range32(70732LLU,70735LLU,1LLU),_1ab2133dc_Range32(70746LLU,70747LLU,1LLU),_1ab2133dc_Range32(70749LLU,70854LLU,105LLU),_1ab2133dc_Range32(71105LLU,71127LLU,1LLU),_1ab2133dc_Range32(71233LLU,71235LLU,1LLU),_1ab2133dc_Range32(71264LLU,71276LLU,1LLU),_1ab2133dc_Range32(71353LLU,71484LLU,131LLU),_1ab2133dc_Range32(71485LLU,71486LLU,1LLU),_1ab2133dc_Range32(71739LLU,72004LLU,265LLU),_1ab2133dc_Range32(72005LLU,72006LLU,1LLU),_1ab2133dc_Range32(72162LLU,72255LLU,93LLU),_1ab2133dc_Range32(72256LLU,72262LLU,1LLU),_1ab2133dc_Range32(72346LLU,72348LLU,1LLU),_1ab2133dc_Range32(72350LLU,72354LLU,1LLU),_1ab2133dc_Range32(72448LLU,72457LLU,1LLU),_1ab2133dc_Range32(72769LLU,72773LLU,1LLU),_1ab2133dc_Range32(72816LLU,72817LLU,1LLU),_1ab2133dc_Range32(73463LLU,73464LLU,1LLU),_1ab2133dc_Range32(73539LLU,73551LLU,1LLU),_1ab2133dc_Range32(73727LLU,74864LLU,1137LLU),_1ab2133dc_Range32(74865LLU,74868LLU,1LLU),_1ab2133dc_Range32(77809LLU,77810LLU,1LLU),_1ab2133dc_Range32(92782LLU,92783LLU,1LLU),_1ab2133dc_Range32(92917LLU,92983LLU,66LLU),_1ab2133dc_Range32(92984LLU,92987LLU,1LLU),_1ab2133dc_Range32(92996LLU,93847LLU,851LLU),_1ab2133dc_Range32(93848LLU,93850LLU,1LLU),_1ab2133dc_Range32(94178LLU,113823LLU,19645LLU),_1ab2133dc_Range32(121479LLU,121483LLU,1LLU),_1ab2133dc_Range32(125278LLU,125279LLU,1LLU)}),8LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PS = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(40LLU,91LLU,51LLU),_1ab2133dc_Range16(123LLU,3898LLU,3775LLU),_1ab2133dc_Range16(3900LLU,5787LLU,1887LLU),_1ab2133dc_Range16(8218LLU,8222LLU,4LLU),_1ab2133dc_Range16(8261LLU,8317LLU,56LLU),_1ab2133dc_Range16(8333LLU,8968LLU,635LLU),_1ab2133dc_Range16(8970LLU,9001LLU,31LLU),_1ab2133dc_Range16(10088LLU,10100LLU,2LLU),_1ab2133dc_Range16(10181LLU,10214LLU,33LLU),_1ab2133dc_Range16(10216LLU,10222LLU,2LLU),_1ab2133dc_Range16(10627LLU,10647LLU,2LLU),_1ab2133dc_Range16(10712LLU,10714LLU,2LLU),_1ab2133dc_Range16(10748LLU,11810LLU,1062LLU),_1ab2133dc_Range16(11812LLU,11816LLU,2LLU),_1ab2133dc_Range16(11842LLU,11861LLU,19LLU),_1ab2133dc_Range16(11863LLU,11867LLU,2LLU),_1ab2133dc_Range16(12296LLU,12304LLU,2LLU),_1ab2133dc_Range16(12308LLU,12314LLU,2LLU),_1ab2133dc_Range16(12317LLU,64831LLU,52514LLU),_1ab2133dc_Range16(65047LLU,65077LLU,30LLU),_1ab2133dc_Range16(65079LLU,65091LLU,2LLU),_1ab2133dc_Range16(65095LLU,65113LLU,18LLU),_1ab2133dc_Range16(65115LLU,65117LLU,2LLU),_1ab2133dc_Range16(65288LLU,65339LLU,51LLU),_1ab2133dc_Range16(65371LLU,65375LLU,4LLU),_1ab2133dc_Range16(65378LLU,65378LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),1LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__S = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(36LLU,43LLU,7LLU),_1ab2133dc_Range16(60LLU,62LLU,1LLU),_1ab2133dc_Range16(94LLU,96LLU,2LLU),_1ab2133dc_Range16(124LLU,126LLU,2LLU),_1ab2133dc_Range16(162LLU,166LLU,1LLU),_1ab2133dc_Range16(168LLU,169LLU,1LLU),_1ab2133dc_Range16(172LLU,174LLU,2LLU),_1ab2133dc_Range16(175LLU,177LLU,1LLU),_1ab2133dc_Range16(180LLU,184LLU,4LLU),_1ab2133dc_Range16(215LLU,247LLU,32LLU),_1ab2133dc_Range16(706LLU,709LLU,1LLU),_1ab2133dc_Range16(722LLU,735LLU,1LLU),_1ab2133dc_Range16(741LLU,747LLU,1LLU),_1ab2133dc_Range16(749LLU,751LLU,2LLU),_1ab2133dc_Range16(752LLU,767LLU,1LLU),_1ab2133dc_Range16(885LLU,900LLU,15LLU),_1ab2133dc_Range16(901LLU,1014LLU,113LLU),_1ab2133dc_Range16(1154LLU,1421LLU,267LLU),_1ab2133dc_Range16(1422LLU,1423LLU,1LLU),_1ab2133dc_Range16(1542LLU,1544LLU,1LLU),_1ab2133dc_Range16(1547LLU,1550LLU,3LLU),_1ab2133dc_Range16(1551LLU,1758LLU,207LLU),_1ab2133dc_Range16(1769LLU,1789LLU,20LLU),_1ab2133dc_Range16(1790LLU,2038LLU,248LLU),_1ab2133dc_Range16(2046LLU,2047LLU,1LLU),_1ab2133dc_Range16(2184LLU,2546LLU,362LLU),_1ab2133dc_Range16(2547LLU,2554LLU,7LLU),_1ab2133dc_Range16(2555LLU,2801LLU,246LLU),_1ab2133dc_Range16(2928LLU,3059LLU,131LLU),_1ab2133dc_Range16(3060LLU,3066LLU,1LLU),_1ab2133dc_Range16(3199LLU,3407LLU,208LLU),_1ab2133dc_Range16(3449LLU,3647LLU,198LLU),_1ab2133dc_Range16(3841LLU,3843LLU,1LLU),_1ab2133dc_Range16(3859LLU,3861LLU,2LLU),_1ab2133dc_Range16(3862LLU,3863LLU,1LLU),_1ab2133dc_Range16(3866LLU,3871LLU,1LLU),_1ab2133dc_Range16(3892LLU,3896LLU,2LLU),_1ab2133dc_Range16(4030LLU,4037LLU,1LLU),_1ab2133dc_Range16(4039LLU,4044LLU,1LLU),_1ab2133dc_Range16(4046LLU,4047LLU,1LLU),_1ab2133dc_Range16(4053LLU,4056LLU,1LLU),_1ab2133dc_Range16(4254LLU,4255LLU,1LLU),_1ab2133dc_Range16(5008LLU,5017LLU,1LLU),_1ab2133dc_Range16(5741LLU,6107LLU,366LLU),_1ab2133dc_Range16(6464LLU,6622LLU,158LLU),_1ab2133dc_Range16(6623LLU,6655LLU,1LLU),_1ab2133dc_Range16(7009LLU,7018LLU,1LLU),_1ab2133dc_Range16(7028LLU,7036LLU,1LLU),_1ab2133dc_Range16(8125LLU,8127LLU,2LLU),_1ab2133dc_Range16(8128LLU,8129LLU,1LLU),_1ab2133dc_Range16(8141LLU,8143LLU,1LLU),_1ab2133dc_Range16(8157LLU,8159LLU,1LLU),_1ab2133dc_Range16(8173LLU,8175LLU,1LLU),_1ab2133dc_Range16(8189LLU,8190LLU,1LLU),_1ab2133dc_Range16(8260LLU,8274LLU,14LLU),_1ab2133dc_Range16(8314LLU,8316LLU,1LLU),_1ab2133dc_Range16(8330LLU,8332LLU,1LLU),_1ab2133dc_Range16(8352LLU,8384LLU,1LLU),_1ab2133dc_Range16(8448LLU,8449LLU,1LLU),_1ab2133dc_Range16(8451LLU,8454LLU,1LLU),_1ab2133dc_Range16(8456LLU,8457LLU,1LLU),_1ab2133dc_Range16(8468LLU,8470LLU,2LLU),_1ab2133dc_Range16(8471LLU,8472LLU,1LLU),_1ab2133dc_Range16(8478LLU,8483LLU,1LLU),_1ab2133dc_Range16(8485LLU,8489LLU,2LLU),_1ab2133dc_Range16(8494LLU,8506LLU,12LLU),_1ab2133dc_Range16(8507LLU,8512LLU,5LLU),_1ab2133dc_Range16(8513LLU,8516LLU,1LLU),_1ab2133dc_Range16(8522LLU,8525LLU,1LLU),_1ab2133dc_Range16(8527LLU,8586LLU,59LLU),_1ab2133dc_Range16(8587LLU,8592LLU,5LLU),_1ab2133dc_Range16(8593LLU,8967LLU,1LLU),_1ab2133dc_Range16(8972LLU,9000LLU,1LLU),_1ab2133dc_Range16(9003LLU,9254LLU,1LLU),_1ab2133dc_Range16(9280LLU,9290LLU,1LLU),_1ab2133dc_Range16(9372LLU,9449LLU,1LLU),_1ab2133dc_Range16(9472LLU,10087LLU,1LLU),_1ab2133dc_Range16(10132LLU,10180LLU,1LLU),_1ab2133dc_Range16(10183LLU,10213LLU,1LLU),_1ab2133dc_Range16(10224LLU,10626LLU,1LLU),_1ab2133dc_Range16(10649LLU,10711LLU,1LLU),_1ab2133dc_Range16(10716LLU,10747LLU,1LLU),_1ab2133dc_Range16(10750LLU,11123LLU,1LLU),_1ab2133dc_Range16(11126LLU,11157LLU,1LLU),_1ab2133dc_Range16(11159LLU,11263LLU,1LLU),_1ab2133dc_Range16(11493LLU,11498LLU,1LLU),_1ab2133dc_Range16(11856LLU,11857LLU,1LLU),_1ab2133dc_Range16(11904LLU,11929LLU,1LLU),_1ab2133dc_Range16(11931LLU,12019LLU,1LLU),_1ab2133dc_Range16(12032LLU,12245LLU,1LLU),_1ab2133dc_Range16(12272LLU,12283LLU,1LLU),_1ab2133dc_Range16(12292LLU,12306LLU,14LLU),_1ab2133dc_Range16(12307LLU,12320LLU,13LLU),_1ab2133dc_Range16(12342LLU,12343LLU,1LLU),_1ab2133dc_Range16(12350LLU,12351LLU,1LLU),_1ab2133dc_Range16(12443LLU,12444LLU,1LLU),_1ab2133dc_Range16(12688LLU,12689LLU,1LLU),_1ab2133dc_Range16(12694LLU,12703LLU,1LLU),_1ab2133dc_Range16(12736LLU,12771LLU,1LLU),_1ab2133dc_Range16(12800LLU,12830LLU,1LLU),_1ab2133dc_Range16(12842LLU,12871LLU,1LLU),_1ab2133dc_Range16(12880LLU,12896LLU,16LLU),_1ab2133dc_Range16(12897LLU,12927LLU,1LLU),_1ab2133dc_Range16(12938LLU,12976LLU,1LLU),_1ab2133dc_Range16(12992LLU,13311LLU,1LLU),_1ab2133dc_Range16(19904LLU,19967LLU,1LLU),_1ab2133dc_Range16(42128LLU,42182LLU,1LLU),_1ab2133dc_Range16(42752LLU,42774LLU,1LLU),_1ab2133dc_Range16(42784LLU,42785LLU,1LLU),_1ab2133dc_Range16(42889LLU,42890LLU,1LLU),_1ab2133dc_Range16(43048LLU,43051LLU,1LLU),_1ab2133dc_Range16(43062LLU,43065LLU,1LLU),_1ab2133dc_Range16(43639LLU,43641LLU,1LLU),_1ab2133dc_Range16(43867LLU,43882LLU,15LLU),_1ab2133dc_Range16(43883LLU,64297LLU,20414LLU),_1ab2133dc_Range16(64434LLU,64450LLU,1LLU),_1ab2133dc_Range16(64832LLU,64847LLU,1LLU),_1ab2133dc_Range16(64975LLU,65020LLU,45LLU),_1ab2133dc_Range16(65021LLU,65023LLU,1LLU),_1ab2133dc_Range16(65122LLU,65124LLU,2LLU),_1ab2133dc_Range16(65125LLU,65126LLU,1LLU),_1ab2133dc_Range16(65129LLU,65284LLU,155LLU),_1ab2133dc_Range16(65291LLU,65308LLU,17LLU),_1ab2133dc_Range16(65309LLU,65310LLU,1LLU),_1ab2133dc_Range16(65342LLU,65344LLU,2LLU),_1ab2133dc_Range16(65372LLU,65374LLU,2LLU),_1ab2133dc_Range16(65504LLU,65510LLU,1LLU),_1ab2133dc_Range16(65512LLU,65518LLU,1LLU),_1ab2133dc_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(65847LLU,65855LLU,1LLU),_1ab2133dc_Range32(65913LLU,65929LLU,1LLU),_1ab2133dc_Range32(65932LLU,65934LLU,1LLU),_1ab2133dc_Range32(65936LLU,65948LLU,1LLU),_1ab2133dc_Range32(65952LLU,66000LLU,48LLU),_1ab2133dc_Range32(66001LLU,66044LLU,1LLU),_1ab2133dc_Range32(67703LLU,67704LLU,1LLU),_1ab2133dc_Range32(68296LLU,71487LLU,3191LLU),_1ab2133dc_Range32(73685LLU,73713LLU,1LLU),_1ab2133dc_Range32(92988LLU,92991LLU,1LLU),_1ab2133dc_Range32(92997LLU,113820LLU,20823LLU),_1ab2133dc_Range32(118608LLU,118723LLU,1LLU),_1ab2133dc_Range32(118784LLU,119029LLU,1LLU),_1ab2133dc_Range32(119040LLU,119078LLU,1LLU),_1ab2133dc_Range32(119081LLU,119140LLU,1LLU),_1ab2133dc_Range32(119146LLU,119148LLU,1LLU),_1ab2133dc_Range32(119171LLU,119172LLU,1LLU),_1ab2133dc_Range32(119180LLU,119209LLU,1LLU),_1ab2133dc_Range32(119214LLU,119274LLU,1LLU),_1ab2133dc_Range32(119296LLU,119361LLU,1LLU),_1ab2133dc_Range32(119365LLU,119552LLU,187LLU),_1ab2133dc_Range32(119553LLU,119638LLU,1LLU),_1ab2133dc_Range32(120513LLU,120539LLU,26LLU),_1ab2133dc_Range32(120571LLU,120597LLU,26LLU),_1ab2133dc_Range32(120629LLU,120655LLU,26LLU),_1ab2133dc_Range32(120687LLU,120713LLU,26LLU),_1ab2133dc_Range32(120745LLU,120771LLU,26LLU),_1ab2133dc_Range32(120832LLU,121343LLU,1LLU),_1ab2133dc_Range32(121399LLU,121402LLU,1LLU),_1ab2133dc_Range32(121453LLU,121460LLU,1LLU),_1ab2133dc_Range32(121462LLU,121475LLU,1LLU),_1ab2133dc_Range32(121477LLU,121478LLU,1LLU),_1ab2133dc_Range32(123215LLU,123647LLU,432LLU),_1ab2133dc_Range32(126124LLU,126128LLU,4LLU),_1ab2133dc_Range32(126254LLU,126704LLU,450LLU),_1ab2133dc_Range32(126705LLU,126976LLU,271LLU),_1ab2133dc_Range32(126977LLU,127019LLU,1LLU),_1ab2133dc_Range32(127024LLU,127123LLU,1LLU),_1ab2133dc_Range32(127136LLU,127150LLU,1LLU),_1ab2133dc_Range32(127153LLU,127167LLU,1LLU),_1ab2133dc_Range32(127169LLU,127183LLU,1LLU),_1ab2133dc_Range32(127185LLU,127221LLU,1LLU),_1ab2133dc_Range32(127245LLU,127405LLU,1LLU),_1ab2133dc_Range32(127462LLU,127490LLU,1LLU),_1ab2133dc_Range32(127504LLU,127547LLU,1LLU),_1ab2133dc_Range32(127552LLU,127560LLU,1LLU),_1ab2133dc_Range32(127568LLU,127569LLU,1LLU),_1ab2133dc_Range32(127584LLU,127589LLU,1LLU),_1ab2133dc_Range32(127744LLU,128727LLU,1LLU),_1ab2133dc_Range32(128732LLU,128748LLU,1LLU),_1ab2133dc_Range32(128752LLU,128764LLU,1LLU),_1ab2133dc_Range32(128768LLU,128886LLU,1LLU),_1ab2133dc_Range32(128891LLU,128985LLU,1LLU),_1ab2133dc_Range32(128992LLU,129003LLU,1LLU),_1ab2133dc_Range32(129008LLU,129024LLU,16LLU),_1ab2133dc_Range32(129025LLU,129035LLU,1LLU),_1ab2133dc_Range32(129040LLU,129095LLU,1LLU),_1ab2133dc_Range32(129104LLU,129113LLU,1LLU),_1ab2133dc_Range32(129120LLU,129159LLU,1LLU),_1ab2133dc_Range32(129168LLU,129197LLU,1LLU),_1ab2133dc_Range32(129200LLU,129201LLU,1LLU),_1ab2133dc_Range32(129280LLU,129619LLU,1LLU),_1ab2133dc_Range32(129632LLU,129645LLU,1LLU),_1ab2133dc_Range32(129648LLU,129660LLU,1LLU),_1ab2133dc_Range32(129664LLU,129672LLU,1LLU),_1ab2133dc_Range32(129680LLU,129725LLU,1LLU),_1ab2133dc_Range32(129727LLU,129733LLU,1LLU),_1ab2133dc_Range32(129742LLU,129755LLU,1LLU),_1ab2133dc_Range32(129760LLU,129768LLU,1LLU),_1ab2133dc_Range32(129776LLU,129784LLU,1LLU),_1ab2133dc_Range32(129792LLU,129938LLU,1LLU),_1ab2133dc_Range32(129940LLU,129994LLU,1LLU)}),10LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(36LLU,162LLU,126LLU),_1ab2133dc_Range16(163LLU,165LLU,1LLU),_1ab2133dc_Range16(1423LLU,1547LLU,124LLU),_1ab2133dc_Range16(2046LLU,2047LLU,1LLU),_1ab2133dc_Range16(2546LLU,2547LLU,1LLU),_1ab2133dc_Range16(2555LLU,2801LLU,246LLU),_1ab2133dc_Range16(3065LLU,3647LLU,582LLU),_1ab2133dc_Range16(6107LLU,8352LLU,2245LLU),_1ab2133dc_Range16(8353LLU,8384LLU,1LLU),_1ab2133dc_Range16(43064LLU,65020LLU,21956LLU),_1ab2133dc_Range16(65129LLU,65284LLU,155LLU),_1ab2133dc_Range16(65504LLU,65505LLU,1LLU),_1ab2133dc_Range16(65509LLU,65510LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(73693LLU,73696LLU,1LLU),_1ab2133dc_Range32(123647LLU,126128LLU,2481LLU)}),2LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SK = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(94LLU,96LLU,2LLU),_1ab2133dc_Range16(168LLU,175LLU,7LLU),_1ab2133dc_Range16(180LLU,184LLU,4LLU),_1ab2133dc_Range16(706LLU,709LLU,1LLU),_1ab2133dc_Range16(722LLU,735LLU,1LLU),_1ab2133dc_Range16(741LLU,747LLU,1LLU),_1ab2133dc_Range16(749LLU,751LLU,2LLU),_1ab2133dc_Range16(752LLU,767LLU,1LLU),_1ab2133dc_Range16(885LLU,900LLU,15LLU),_1ab2133dc_Range16(901LLU,2184LLU,1283LLU),_1ab2133dc_Range16(8125LLU,8127LLU,2LLU),_1ab2133dc_Range16(8128LLU,8129LLU,1LLU),_1ab2133dc_Range16(8141LLU,8143LLU,1LLU),_1ab2133dc_Range16(8157LLU,8159LLU,1LLU),_1ab2133dc_Range16(8173LLU,8175LLU,1LLU),_1ab2133dc_Range16(8189LLU,8190LLU,1LLU),_1ab2133dc_Range16(12443LLU,12444LLU,1LLU),_1ab2133dc_Range16(42752LLU,42774LLU,1LLU),_1ab2133dc_Range16(42784LLU,42785LLU,1LLU),_1ab2133dc_Range16(42889LLU,42890LLU,1LLU),_1ab2133dc_Range16(43867LLU,43882LLU,15LLU),_1ab2133dc_Range16(43883LLU,64434LLU,20551LLU),_1ab2133dc_Range16(64435LLU,64450LLU,1LLU),_1ab2133dc_Range16(65342LLU,65344LLU,2LLU),_1ab2133dc_Range16(65507LLU,65507LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(127995LLU,127999LLU,1LLU)}),3LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SM = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(43LLU,60LLU,17LLU),_1ab2133dc_Range16(61LLU,62LLU,1LLU),_1ab2133dc_Range16(124LLU,126LLU,2LLU),_1ab2133dc_Range16(172LLU,177LLU,5LLU),_1ab2133dc_Range16(215LLU,247LLU,32LLU),_1ab2133dc_Range16(1014LLU,1542LLU,528LLU),_1ab2133dc_Range16(1543LLU,1544LLU,1LLU),_1ab2133dc_Range16(8260LLU,8274LLU,14LLU),_1ab2133dc_Range16(8314LLU,8316LLU,1LLU),_1ab2133dc_Range16(8330LLU,8332LLU,1LLU),_1ab2133dc_Range16(8472LLU,8512LLU,40LLU),_1ab2133dc_Range16(8513LLU,8516LLU,1LLU),_1ab2133dc_Range16(8523LLU,8592LLU,69LLU),_1ab2133dc_Range16(8593LLU,8596LLU,1LLU),_1ab2133dc_Range16(8602LLU,8603LLU,1LLU),_1ab2133dc_Range16(8608LLU,8614LLU,3LLU),_1ab2133dc_Range16(8622LLU,8654LLU,32LLU),_1ab2133dc_Range16(8655LLU,8658LLU,3LLU),_1ab2133dc_Range16(8660LLU,8692LLU,32LLU),_1ab2133dc_Range16(8693LLU,8959LLU,1LLU),_1ab2133dc_Range16(8992LLU,8993LLU,1LLU),_1ab2133dc_Range16(9084LLU,9115LLU,31LLU),_1ab2133dc_Range16(9116LLU,9139LLU,1LLU),_1ab2133dc_Range16(9180LLU,9185LLU,1LLU),_1ab2133dc_Range16(9655LLU,9665LLU,10LLU),_1ab2133dc_Range16(9720LLU,9727LLU,1LLU),_1ab2133dc_Range16(9839LLU,10176LLU,337LLU),_1ab2133dc_Range16(10177LLU,10180LLU,1LLU),_1ab2133dc_Range16(10183LLU,10213LLU,1LLU),_1ab2133dc_Range16(10224LLU,10239LLU,1LLU),_1ab2133dc_Range16(10496LLU,10626LLU,1LLU),_1ab2133dc_Range16(10649LLU,10711LLU,1LLU),_1ab2133dc_Range16(10716LLU,10747LLU,1LLU),_1ab2133dc_Range16(10750LLU,11007LLU,1LLU),_1ab2133dc_Range16(11056LLU,11076LLU,1LLU),_1ab2133dc_Range16(11079LLU,11084LLU,1LLU),_1ab2133dc_Range16(64297LLU,65122LLU,825LLU),_1ab2133dc_Range16(65124LLU,65126LLU,1LLU),_1ab2133dc_Range16(65291LLU,65308LLU,17LLU),_1ab2133dc_Range16(65309LLU,65310LLU,1LLU),_1ab2133dc_Range16(65372LLU,65374LLU,2LLU),_1ab2133dc_Range16(65506LLU,65513LLU,7LLU),_1ab2133dc_Range16(65514LLU,65516LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(120513LLU,120539LLU,26LLU),_1ab2133dc_Range32(120571LLU,120597LLU,26LLU),_1ab2133dc_Range32(120629LLU,120655LLU,26LLU),_1ab2133dc_Range32(120687LLU,120713LLU,26LLU),_1ab2133dc_Range32(120745LLU,120771LLU,26LLU),_1ab2133dc_Range32(126704LLU,126705LLU,1LLU)}),5LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(166LLU,169LLU,3LLU),_1ab2133dc_Range16(174LLU,176LLU,2LLU),_1ab2133dc_Range16(1154LLU,1421LLU,267LLU),_1ab2133dc_Range16(1422LLU,1550LLU,128LLU),_1ab2133dc_Range16(1551LLU,1758LLU,207LLU),_1ab2133dc_Range16(1769LLU,1789LLU,20LLU),_1ab2133dc_Range16(1790LLU,2038LLU,248LLU),_1ab2133dc_Range16(2554LLU,2928LLU,374LLU),_1ab2133dc_Range16(3059LLU,3064LLU,1LLU),_1ab2133dc_Range16(3066LLU,3199LLU,133LLU),_1ab2133dc_Range16(3407LLU,3449LLU,42LLU),_1ab2133dc_Range16(3841LLU,3843LLU,1LLU),_1ab2133dc_Range16(3859LLU,3861LLU,2LLU),_1ab2133dc_Range16(3862LLU,3863LLU,1LLU),_1ab2133dc_Range16(3866LLU,3871LLU,1LLU),_1ab2133dc_Range16(3892LLU,3896LLU,2LLU),_1ab2133dc_Range16(4030LLU,4037LLU,1LLU),_1ab2133dc_Range16(4039LLU,4044LLU,1LLU),_1ab2133dc_Range16(4046LLU,4047LLU,1LLU),_1ab2133dc_Range16(4053LLU,4056LLU,1LLU),_1ab2133dc_Range16(4254LLU,4255LLU,1LLU),_1ab2133dc_Range16(5008LLU,5017LLU,1LLU),_1ab2133dc_Range16(5741LLU,6464LLU,723LLU),_1ab2133dc_Range16(6622LLU,6655LLU,1LLU),_1ab2133dc_Range16(7009LLU,7018LLU,1LLU),_1ab2133dc_Range16(7028LLU,7036LLU,1LLU),_1ab2133dc_Range16(8448LLU,8449LLU,1LLU),_1ab2133dc_Range16(8451LLU,8454LLU,1LLU),_1ab2133dc_Range16(8456LLU,8457LLU,1LLU),_1ab2133dc_Range16(8468LLU,8470LLU,2LLU),_1ab2133dc_Range16(8471LLU,8478LLU,7LLU),_1ab2133dc_Range16(8479LLU,8483LLU,1LLU),_1ab2133dc_Range16(8485LLU,8489LLU,2LLU),_1ab2133dc_Range16(8494LLU,8506LLU,12LLU),_1ab2133dc_Range16(8507LLU,8522LLU,15LLU),_1ab2133dc_Range16(8524LLU,8525LLU,1LLU),_1ab2133dc_Range16(8527LLU,8586LLU,59LLU),_1ab2133dc_Range16(8587LLU,8597LLU,10LLU),_1ab2133dc_Range16(8598LLU,8601LLU,1LLU),_1ab2133dc_Range16(8604LLU,8607LLU,1LLU),_1ab2133dc_Range16(8609LLU,8610LLU,1LLU),_1ab2133dc_Range16(8612LLU,8613LLU,1LLU),_1ab2133dc_Range16(8615LLU,8621LLU,1LLU),_1ab2133dc_Range16(8623LLU,8653LLU,1LLU),_1ab2133dc_Range16(8656LLU,8657LLU,1LLU),_1ab2133dc_Range16(8659LLU,8661LLU,2LLU),_1ab2133dc_Range16(8662LLU,8691LLU,1LLU),_1ab2133dc_Range16(8960LLU,8967LLU,1LLU),_1ab2133dc_Range16(8972LLU,8991LLU,1LLU),_1ab2133dc_Range16(8994LLU,9000LLU,1LLU),_1ab2133dc_Range16(9003LLU,9083LLU,1LLU),_1ab2133dc_Range16(9085LLU,9114LLU,1LLU),_1ab2133dc_Range16(9140LLU,9179LLU,1LLU),_1ab2133dc_Range16(9186LLU,9254LLU,1LLU),_1ab2133dc_Range16(9280LLU,9290LLU,1LLU),_1ab2133dc_Range16(9372LLU,9449LLU,1LLU),_1ab2133dc_Range16(9472LLU,9654LLU,1LLU),_1ab2133dc_Range16(9656LLU,9664LLU,1LLU),_1ab2133dc_Range16(9666LLU,9719LLU,1LLU),_1ab2133dc_Range16(9728LLU,9838LLU,1LLU),_1ab2133dc_Range16(9840LLU,10087LLU,1LLU),_1ab2133dc_Range16(10132LLU,10175LLU,1LLU),_1ab2133dc_Range16(10240LLU,10495LLU,1LLU),_1ab2133dc_Range16(11008LLU,11055LLU,1LLU),_1ab2133dc_Range16(11077LLU,11078LLU,1LLU),_1ab2133dc_Range16(11085LLU,11123LLU,1LLU),_1ab2133dc_Range16(11126LLU,11157LLU,1LLU),_1ab2133dc_Range16(11159LLU,11263LLU,1LLU),_1ab2133dc_Range16(11493LLU,11498LLU,1LLU),_1ab2133dc_Range16(11856LLU,11857LLU,1LLU),_1ab2133dc_Range16(11904LLU,11929LLU,1LLU),_1ab2133dc_Range16(11931LLU,12019LLU,1LLU),_1ab2133dc_Range16(12032LLU,12245LLU,1LLU),_1ab2133dc_Range16(12272LLU,12283LLU,1LLU),_1ab2133dc_Range16(12292LLU,12306LLU,14LLU),_1ab2133dc_Range16(12307LLU,12320LLU,13LLU),_1ab2133dc_Range16(12342LLU,12343LLU,1LLU),_1ab2133dc_Range16(12350LLU,12351LLU,1LLU),_1ab2133dc_Range16(12688LLU,12689LLU,1LLU),_1ab2133dc_Range16(12694LLU,12703LLU,1LLU),_1ab2133dc_Range16(12736LLU,12771LLU,1LLU),_1ab2133dc_Range16(12800LLU,12830LLU,1LLU),_1ab2133dc_Range16(12842LLU,12871LLU,1LLU),_1ab2133dc_Range16(12880LLU,12896LLU,16LLU),_1ab2133dc_Range16(12897LLU,12927LLU,1LLU),_1ab2133dc_Range16(12938LLU,12976LLU,1LLU),_1ab2133dc_Range16(12992LLU,13311LLU,1LLU),_1ab2133dc_Range16(19904LLU,19967LLU,1LLU),_1ab2133dc_Range16(42128LLU,42182LLU,1LLU),_1ab2133dc_Range16(43048LLU,43051LLU,1LLU),_1ab2133dc_Range16(43062LLU,43063LLU,1LLU),_1ab2133dc_Range16(43065LLU,43639LLU,574LLU),_1ab2133dc_Range16(43640LLU,43641LLU,1LLU),_1ab2133dc_Range16(64832LLU,64847LLU,1LLU),_1ab2133dc_Range16(64975LLU,65021LLU,46LLU),_1ab2133dc_Range16(65022LLU,65023LLU,1LLU),_1ab2133dc_Range16(65508LLU,65512LLU,4LLU),_1ab2133dc_Range16(65517LLU,65518LLU,1LLU),_1ab2133dc_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(65847LLU,65855LLU,1LLU),_1ab2133dc_Range32(65913LLU,65929LLU,1LLU),_1ab2133dc_Range32(65932LLU,65934LLU,1LLU),_1ab2133dc_Range32(65936LLU,65948LLU,1LLU),_1ab2133dc_Range32(65952LLU,66000LLU,48LLU),_1ab2133dc_Range32(66001LLU,66044LLU,1LLU),_1ab2133dc_Range32(67703LLU,67704LLU,1LLU),_1ab2133dc_Range32(68296LLU,71487LLU,3191LLU),_1ab2133dc_Range32(73685LLU,73692LLU,1LLU),_1ab2133dc_Range32(73697LLU,73713LLU,1LLU),_1ab2133dc_Range32(92988LLU,92991LLU,1LLU),_1ab2133dc_Range32(92997LLU,113820LLU,20823LLU),_1ab2133dc_Range32(118608LLU,118723LLU,1LLU),_1ab2133dc_Range32(118784LLU,119029LLU,1LLU),_1ab2133dc_Range32(119040LLU,119078LLU,1LLU),_1ab2133dc_Range32(119081LLU,119140LLU,1LLU),_1ab2133dc_Range32(119146LLU,119148LLU,1LLU),_1ab2133dc_Range32(119171LLU,119172LLU,1LLU),_1ab2133dc_Range32(119180LLU,119209LLU,1LLU),_1ab2133dc_Range32(119214LLU,119274LLU,1LLU),_1ab2133dc_Range32(119296LLU,119361LLU,1LLU),_1ab2133dc_Range32(119365LLU,119552LLU,187LLU),_1ab2133dc_Range32(119553LLU,119638LLU,1LLU),_1ab2133dc_Range32(120832LLU,121343LLU,1LLU),_1ab2133dc_Range32(121399LLU,121402LLU,1LLU),_1ab2133dc_Range32(121453LLU,121460LLU,1LLU),_1ab2133dc_Range32(121462LLU,121475LLU,1LLU),_1ab2133dc_Range32(121477LLU,121478LLU,1LLU),_1ab2133dc_Range32(123215LLU,126124LLU,2909LLU),_1ab2133dc_Range32(126254LLU,126976LLU,722LLU),_1ab2133dc_Range32(126977LLU,127019LLU,1LLU),_1ab2133dc_Range32(127024LLU,127123LLU,1LLU),_1ab2133dc_Range32(127136LLU,127150LLU,1LLU),_1ab2133dc_Range32(127153LLU,127167LLU,1LLU),_1ab2133dc_Range32(127169LLU,127183LLU,1LLU),_1ab2133dc_Range32(127185LLU,127221LLU,1LLU),_1ab2133dc_Range32(127245LLU,127405LLU,1LLU),_1ab2133dc_Range32(127462LLU,127490LLU,1LLU),_1ab2133dc_Range32(127504LLU,127547LLU,1LLU),_1ab2133dc_Range32(127552LLU,127560LLU,1LLU),_1ab2133dc_Range32(127568LLU,127569LLU,1LLU),_1ab2133dc_Range32(127584LLU,127589LLU,1LLU),_1ab2133dc_Range32(127744LLU,127994LLU,1LLU),_1ab2133dc_Range32(128000LLU,128727LLU,1LLU),_1ab2133dc_Range32(128732LLU,128748LLU,1LLU),_1ab2133dc_Range32(128752LLU,128764LLU,1LLU),_1ab2133dc_Range32(128768LLU,128886LLU,1LLU),_1ab2133dc_Range32(128891LLU,128985LLU,1LLU),_1ab2133dc_Range32(128992LLU,129003LLU,1LLU),_1ab2133dc_Range32(129008LLU,129024LLU,16LLU),_1ab2133dc_Range32(129025LLU,129035LLU,1LLU),_1ab2133dc_Range32(129040LLU,129095LLU,1LLU),_1ab2133dc_Range32(129104LLU,129113LLU,1LLU),_1ab2133dc_Range32(129120LLU,129159LLU,1LLU),_1ab2133dc_Range32(129168LLU,129197LLU,1LLU),_1ab2133dc_Range32(129200LLU,129201LLU,1LLU),_1ab2133dc_Range32(129280LLU,129619LLU,1LLU),_1ab2133dc_Range32(129632LLU,129645LLU,1LLU),_1ab2133dc_Range32(129648LLU,129660LLU,1LLU),_1ab2133dc_Range32(129664LLU,129672LLU,1LLU),_1ab2133dc_Range32(129680LLU,129725LLU,1LLU),_1ab2133dc_Range32(129727LLU,129733LLU,1LLU),_1ab2133dc_Range32(129742LLU,129755LLU,1LLU),_1ab2133dc_Range32(129760LLU,129768LLU,1LLU),_1ab2133dc_Range32(129776LLU,129784LLU,1LLU),_1ab2133dc_Range32(129792LLU,129938LLU,1LLU),_1ab2133dc_Range32(129940LLU,129994LLU,1LLU)}),2LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__Z = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(32LLU,160LLU,128LLU),_1ab2133dc_Range16(5760LLU,8192LLU,2432LLU),_1ab2133dc_Range16(8193LLU,8202LLU,1LLU),_1ab2133dc_Range16(8232LLU,8233LLU,1LLU),_1ab2133dc_Range16(8239LLU,8287LLU,48LLU),_1ab2133dc_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),1LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ZL = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(8232LLU,8232LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ZP = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(8233LLU,8233LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ZS = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(32LLU,160LLU,128LLU),_1ab2133dc_Range16(5760LLU,8192LLU,2432LLU),_1ab2133dc_Range16(8193LLU,8202LLU,1LLU),_1ab2133dc_Range16(8239LLU,8287LLU,48LLU),_1ab2133dc_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),1LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CC = _1ab04b4cd__CC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CF = _1ab04b4cd__CF;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CO = _1ab04b4cd__CO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CS = _1ab04b4cd__CS;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_DIGIT = _1ab04b4cd__ND;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ND = _1ab04b4cd__ND;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LETTER = _1ab04b4cd__L;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_L = _1ab04b4cd__L;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LM = _1ab04b4cd__LM;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LO = _1ab04b4cd__LO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LOWER = _1ab04b4cd__LL;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LL = _1ab04b4cd__LL;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MARK = _1ab04b4cd__M;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_M = _1ab04b4cd__M;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MC = _1ab04b4cd__MC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ME = _1ab04b4cd__ME;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MN = _1ab04b4cd__MN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_NL = _1ab04b4cd__NL;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_NO = _1ab04b4cd__NO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_NUMBER = _1ab04b4cd__N;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_N = _1ab04b4cd__N;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OTHER = _1ab04b4cd__C;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_C = _1ab04b4cd__C;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PC = _1ab04b4cd__PC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PD = _1ab04b4cd__PD;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PE = _1ab04b4cd__PE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PF = _1ab04b4cd__PF;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PI = _1ab04b4cd__PI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PO = _1ab04b4cd__PO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PS = _1ab04b4cd__PS;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PUNCT = _1ab04b4cd__P;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_P = _1ab04b4cd__P;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SC = _1ab04b4cd__SC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SK = _1ab04b4cd__SK;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SM = _1ab04b4cd__SM;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SO = _1ab04b4cd__SO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SPACE = _1ab04b4cd__Z;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_Z = _1ab04b4cd__Z;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SYMBOL = _1ab04b4cd__S;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_S = _1ab04b4cd__S;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TITLE = _1ab04b4cd__LT;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LT = _1ab04b4cd__LT;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_UPPER = _1ab04b4cd__LU;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LU = _1ab04b4cd__LU;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ZL = _1ab04b4cd__ZL;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ZP = _1ab04b4cd__ZP;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ZS = _1ab04b4cd__ZS;
static jule::Map<jule::Str,jule::Ref<_1ab2133dc_RangeTable>> _1ab04b4cd_CATEGORIES = jule::Map<jule::Str,jule::Ref<_1ab2133dc_RangeTable>>({{jule::Str("C", 1),_1ab04b4cd_C},{jule::Str("CC", 2),_1ab04b4cd_CC},{jule::Str("CF", 2),_1ab04b4cd_CF},{jule::Str("CO", 2),_1ab04b4cd_CO},{jule::Str("CS", 2),_1ab04b4cd_CS},{jule::Str("L", 1),_1ab04b4cd_L},{jule::Str("LL", 2),_1ab04b4cd_LL},{jule::Str("LM", 2),_1ab04b4cd_LM},{jule::Str("LO", 2),_1ab04b4cd_LO},{jule::Str("LT", 2),_1ab04b4cd_LT},{jule::Str("LU", 2),_1ab04b4cd_LU},{jule::Str("M", 1),_1ab04b4cd_M},{jule::Str("MC", 2),_1ab04b4cd_MC},{jule::Str("ME", 2),_1ab04b4cd_ME},{jule::Str("MN", 2),_1ab04b4cd_MN},{jule::Str("N", 1),_1ab04b4cd_N},{jule::Str("ND", 2),_1ab04b4cd_ND},{jule::Str("NL", 2),_1ab04b4cd_NL},{jule::Str("NO", 2),_1ab04b4cd_NO},{jule::Str("P", 1),_1ab04b4cd_P},{jule::Str("PC", 2),_1ab04b4cd_PC},{jule::Str("PD", 2),_1ab04b4cd_PD},{jule::Str("PE", 2),_1ab04b4cd_PE},{jule::Str("PF", 2),_1ab04b4cd_PF},{jule::Str("PI", 2),_1ab04b4cd_PI},{jule::Str("PO", 2),_1ab04b4cd_PO},{jule::Str("PS", 2),_1ab04b4cd_PS},{jule::Str("S", 1),_1ab04b4cd_S},{jule::Str("SC", 2),_1ab04b4cd_SC},{jule::Str("SK", 2),_1ab04b4cd_SK},{jule::Str("SM", 2),_1ab04b4cd_SM},{jule::Str("SO", 2),_1ab04b4cd_SO},{jule::Str("Z", 1),_1ab04b4cd_Z},{jule::Str("ZL", 2),_1ab04b4cd_ZL},{jule::Str("ZP", 2),_1ab04b4cd_ZP},{jule::Str("ZS", 2),_1ab04b4cd_ZS}});
static jule::Slice<jule::Ref<_1ab2133dc_RangeTable>> _1ab211a6c_GRAPHIC_RANGES = jule::Slice<jule::Ref<_1ab2133dc_RangeTable>>({_1ab04b4cd_L,_1ab04b4cd_M,_1ab04b4cd_N,_1ab04b4cd_P,_1ab04b4cd_S,_1ab04b4cd_ZS});
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ADLAM = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(125184LLU,125259LLU,1LLU),_1ab2133dc_Range32(125264LLU,125273LLU,1LLU),_1ab2133dc_Range32(125278LLU,125279LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__AHOM = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(71424LLU,71450LLU,1LLU),_1ab2133dc_Range32(71453LLU,71467LLU,1LLU),_1ab2133dc_Range32(71472LLU,71494LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ANATOLIAN_HIEROGLYPHS = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(82944LLU,83526LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ARABIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(1536LLU,1540LLU,1LLU),_1ab2133dc_Range16(1542LLU,1547LLU,1LLU),_1ab2133dc_Range16(1549LLU,1562LLU,1LLU),_1ab2133dc_Range16(1564LLU,1566LLU,1LLU),_1ab2133dc_Range16(1568LLU,1599LLU,1LLU),_1ab2133dc_Range16(1601LLU,1610LLU,1LLU),_1ab2133dc_Range16(1622LLU,1647LLU,1LLU),_1ab2133dc_Range16(1649LLU,1756LLU,1LLU),_1ab2133dc_Range16(1758LLU,1791LLU,1LLU),_1ab2133dc_Range16(1872LLU,1919LLU,1LLU),_1ab2133dc_Range16(2160LLU,2190LLU,1LLU),_1ab2133dc_Range16(2192LLU,2193LLU,1LLU),_1ab2133dc_Range16(2200LLU,2273LLU,1LLU),_1ab2133dc_Range16(2275LLU,2303LLU,1LLU),_1ab2133dc_Range16(64336LLU,64450LLU,1LLU),_1ab2133dc_Range16(64467LLU,64829LLU,1LLU),_1ab2133dc_Range16(64832LLU,64911LLU,1LLU),_1ab2133dc_Range16(64914LLU,64967LLU,1LLU),_1ab2133dc_Range16(64975LLU,65008LLU,33LLU),_1ab2133dc_Range16(65009LLU,65023LLU,1LLU),_1ab2133dc_Range16(65136LLU,65140LLU,1LLU),_1ab2133dc_Range16(65142LLU,65276LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69216LLU,69246LLU,1LLU),_1ab2133dc_Range32(69373LLU,69375LLU,1LLU),_1ab2133dc_Range32(126464LLU,126467LLU,1LLU),_1ab2133dc_Range32(126469LLU,126495LLU,1LLU),_1ab2133dc_Range32(126497LLU,126498LLU,1LLU),_1ab2133dc_Range32(126500LLU,126503LLU,3LLU),_1ab2133dc_Range32(126505LLU,126514LLU,1LLU),_1ab2133dc_Range32(126516LLU,126519LLU,1LLU),_1ab2133dc_Range32(126521LLU,126523LLU,2LLU),_1ab2133dc_Range32(126530LLU,126535LLU,5LLU),_1ab2133dc_Range32(126537LLU,126541LLU,2LLU),_1ab2133dc_Range32(126542LLU,126543LLU,1LLU),_1ab2133dc_Range32(126545LLU,126546LLU,1LLU),_1ab2133dc_Range32(126548LLU,126551LLU,3LLU),_1ab2133dc_Range32(126553LLU,126561LLU,2LLU),_1ab2133dc_Range32(126562LLU,126564LLU,2LLU),_1ab2133dc_Range32(126567LLU,126570LLU,1LLU),_1ab2133dc_Range32(126572LLU,126578LLU,1LLU),_1ab2133dc_Range32(126580LLU,126583LLU,1LLU),_1ab2133dc_Range32(126585LLU,126588LLU,1LLU),_1ab2133dc_Range32(126590LLU,126592LLU,2LLU),_1ab2133dc_Range32(126593LLU,126601LLU,1LLU),_1ab2133dc_Range32(126603LLU,126619LLU,1LLU),_1ab2133dc_Range32(126625LLU,126627LLU,1LLU),_1ab2133dc_Range32(126629LLU,126633LLU,1LLU),_1ab2133dc_Range32(126635LLU,126651LLU,1LLU),_1ab2133dc_Range32(126704LLU,126705LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ARMENIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(1329LLU,1366LLU,1LLU),_1ab2133dc_Range16(1369LLU,1418LLU,1LLU),_1ab2133dc_Range16(1421LLU,1423LLU,1LLU),_1ab2133dc_Range16(64275LLU,64279LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__AVESTAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(68352LLU,68405LLU,1LLU),_1ab2133dc_Range32(68409LLU,68415LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__BALINESE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(6912LLU,6988LLU,1LLU),_1ab2133dc_Range16(6992LLU,7038LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__BAMUM = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(42656LLU,42743LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(92160LLU,92728LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__BASSA_VAH = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(92880LLU,92909LLU,1LLU),_1ab2133dc_Range32(92912LLU,92917LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__BATAK = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(7104LLU,7155LLU,1LLU),_1ab2133dc_Range16(7164LLU,7167LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__BENGALI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(2432LLU,2435LLU,1LLU),_1ab2133dc_Range16(2437LLU,2444LLU,1LLU),_1ab2133dc_Range16(2447LLU,2448LLU,1LLU),_1ab2133dc_Range16(2451LLU,2472LLU,1LLU),_1ab2133dc_Range16(2474LLU,2480LLU,1LLU),_1ab2133dc_Range16(2482LLU,2486LLU,4LLU),_1ab2133dc_Range16(2487LLU,2489LLU,1LLU),_1ab2133dc_Range16(2492LLU,2500LLU,1LLU),_1ab2133dc_Range16(2503LLU,2504LLU,1LLU),_1ab2133dc_Range16(2507LLU,2510LLU,1LLU),_1ab2133dc_Range16(2519LLU,2524LLU,5LLU),_1ab2133dc_Range16(2525LLU,2527LLU,2LLU),_1ab2133dc_Range16(2528LLU,2531LLU,1LLU),_1ab2133dc_Range16(2534LLU,2558LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__BHAIKSUKI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(72704LLU,72712LLU,1LLU),_1ab2133dc_Range32(72714LLU,72758LLU,1LLU),_1ab2133dc_Range32(72760LLU,72773LLU,1LLU),_1ab2133dc_Range32(72784LLU,72812LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__BOPOMOFO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(746LLU,747LLU,1LLU),_1ab2133dc_Range16(12549LLU,12591LLU,1LLU),_1ab2133dc_Range16(12704LLU,12735LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__BRAHMI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69632LLU,69709LLU,1LLU),_1ab2133dc_Range32(69714LLU,69749LLU,1LLU),_1ab2133dc_Range32(69759LLU,69759LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__BRAILLE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(10240LLU,10495LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__BUGINESE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(6656LLU,6683LLU,1LLU),_1ab2133dc_Range16(6686LLU,6687LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__BUHID = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(5952LLU,5971LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CANADIAN_ABORIGINAL = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(5120LLU,5759LLU,1LLU),_1ab2133dc_Range16(6320LLU,6389LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(72368LLU,72383LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CARIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66208LLU,66256LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CAUCASIAN_ALBANIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66864LLU,66915LLU,1LLU),_1ab2133dc_Range32(66927LLU,66927LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CHAKMA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69888LLU,69940LLU,1LLU),_1ab2133dc_Range32(69942LLU,69959LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CHAM = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(43520LLU,43574LLU,1LLU),_1ab2133dc_Range16(43584LLU,43597LLU,1LLU),_1ab2133dc_Range16(43600LLU,43609LLU,1LLU),_1ab2133dc_Range16(43612LLU,43615LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CHEROKEE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(5024LLU,5109LLU,1LLU),_1ab2133dc_Range16(5112LLU,5117LLU,1LLU),_1ab2133dc_Range16(43888LLU,43967LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CHORASMIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69552LLU,69579LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__COMMON = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(0LLU,64LLU,1LLU),_1ab2133dc_Range16(91LLU,96LLU,1LLU),_1ab2133dc_Range16(123LLU,169LLU,1LLU),_1ab2133dc_Range16(171LLU,185LLU,1LLU),_1ab2133dc_Range16(187LLU,191LLU,1LLU),_1ab2133dc_Range16(215LLU,247LLU,32LLU),_1ab2133dc_Range16(697LLU,735LLU,1LLU),_1ab2133dc_Range16(741LLU,745LLU,1LLU),_1ab2133dc_Range16(748LLU,767LLU,1LLU),_1ab2133dc_Range16(884LLU,894LLU,10LLU),_1ab2133dc_Range16(901LLU,903LLU,2LLU),_1ab2133dc_Range16(1541LLU,1548LLU,7LLU),_1ab2133dc_Range16(1563LLU,1567LLU,4LLU),_1ab2133dc_Range16(1600LLU,1757LLU,157LLU),_1ab2133dc_Range16(2274LLU,2404LLU,130LLU),_1ab2133dc_Range16(2405LLU,3647LLU,1242LLU),_1ab2133dc_Range16(4053LLU,4056LLU,1LLU),_1ab2133dc_Range16(4347LLU,5867LLU,1520LLU),_1ab2133dc_Range16(5868LLU,5869LLU,1LLU),_1ab2133dc_Range16(5941LLU,5942LLU,1LLU),_1ab2133dc_Range16(6146LLU,6147LLU,1LLU),_1ab2133dc_Range16(6149LLU,7379LLU,1230LLU),_1ab2133dc_Range16(7393LLU,7401LLU,8LLU),_1ab2133dc_Range16(7402LLU,7404LLU,1LLU),_1ab2133dc_Range16(7406LLU,7411LLU,1LLU),_1ab2133dc_Range16(7413LLU,7415LLU,1LLU),_1ab2133dc_Range16(7418LLU,8192LLU,774LLU),_1ab2133dc_Range16(8193LLU,8203LLU,1LLU),_1ab2133dc_Range16(8206LLU,8292LLU,1LLU),_1ab2133dc_Range16(8294LLU,8304LLU,1LLU),_1ab2133dc_Range16(8308LLU,8318LLU,1LLU),_1ab2133dc_Range16(8320LLU,8334LLU,1LLU),_1ab2133dc_Range16(8352LLU,8384LLU,1LLU),_1ab2133dc_Range16(8448LLU,8485LLU,1LLU),_1ab2133dc_Range16(8487LLU,8489LLU,1LLU),_1ab2133dc_Range16(8492LLU,8497LLU,1LLU),_1ab2133dc_Range16(8499LLU,8525LLU,1LLU),_1ab2133dc_Range16(8527LLU,8543LLU,1LLU),_1ab2133dc_Range16(8585LLU,8587LLU,1LLU),_1ab2133dc_Range16(8592LLU,9254LLU,1LLU),_1ab2133dc_Range16(9280LLU,9290LLU,1LLU),_1ab2133dc_Range16(9312LLU,10239LLU,1LLU),_1ab2133dc_Range16(10496LLU,11123LLU,1LLU),_1ab2133dc_Range16(11126LLU,11157LLU,1LLU),_1ab2133dc_Range16(11159LLU,11263LLU,1LLU),_1ab2133dc_Range16(11776LLU,11869LLU,1LLU),_1ab2133dc_Range16(12272LLU,12283LLU,1LLU),_1ab2133dc_Range16(12288LLU,12292LLU,1LLU),_1ab2133dc_Range16(12294LLU,12296LLU,2LLU),_1ab2133dc_Range16(12297LLU,12320LLU,1LLU),_1ab2133dc_Range16(12336LLU,12343LLU,1LLU),_1ab2133dc_Range16(12348LLU,12351LLU,1LLU),_1ab2133dc_Range16(12443LLU,12444LLU,1LLU),_1ab2133dc_Range16(12448LLU,12539LLU,91LLU),_1ab2133dc_Range16(12540LLU,12688LLU,148LLU),_1ab2133dc_Range16(12689LLU,12703LLU,1LLU),_1ab2133dc_Range16(12736LLU,12771LLU,1LLU),_1ab2133dc_Range16(12832LLU,12895LLU,1LLU),_1ab2133dc_Range16(12927LLU,13007LLU,1LLU),_1ab2133dc_Range16(13055LLU,13144LLU,89LLU),_1ab2133dc_Range16(13145LLU,13311LLU,1LLU),_1ab2133dc_Range16(19904LLU,19967LLU,1LLU),_1ab2133dc_Range16(42752LLU,42785LLU,1LLU),_1ab2133dc_Range16(42888LLU,42890LLU,1LLU),_1ab2133dc_Range16(43056LLU,43065LLU,1LLU),_1ab2133dc_Range16(43310LLU,43471LLU,161LLU),_1ab2133dc_Range16(43867LLU,43882LLU,15LLU),_1ab2133dc_Range16(43883LLU,64830LLU,20947LLU),_1ab2133dc_Range16(64831LLU,65040LLU,209LLU),_1ab2133dc_Range16(65041LLU,65049LLU,1LLU),_1ab2133dc_Range16(65072LLU,65106LLU,1LLU),_1ab2133dc_Range16(65108LLU,65126LLU,1LLU),_1ab2133dc_Range16(65128LLU,65131LLU,1LLU),_1ab2133dc_Range16(65279LLU,65281LLU,2LLU),_1ab2133dc_Range16(65282LLU,65312LLU,1LLU),_1ab2133dc_Range16(65339LLU,65344LLU,1LLU),_1ab2133dc_Range16(65371LLU,65381LLU,1LLU),_1ab2133dc_Range16(65392LLU,65438LLU,46LLU),_1ab2133dc_Range16(65439LLU,65504LLU,65LLU),_1ab2133dc_Range16(65505LLU,65510LLU,1LLU),_1ab2133dc_Range16(65512LLU,65518LLU,1LLU),_1ab2133dc_Range16(65529LLU,65533LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(65792LLU,65794LLU,1LLU),_1ab2133dc_Range32(65799LLU,65843LLU,1LLU),_1ab2133dc_Range32(65847LLU,65855LLU,1LLU),_1ab2133dc_Range32(65936LLU,65948LLU,1LLU),_1ab2133dc_Range32(66000LLU,66044LLU,1LLU),_1ab2133dc_Range32(66273LLU,66299LLU,1LLU),_1ab2133dc_Range32(113824LLU,113827LLU,1LLU),_1ab2133dc_Range32(118608LLU,118723LLU,1LLU),_1ab2133dc_Range32(118784LLU,119029LLU,1LLU),_1ab2133dc_Range32(119040LLU,119078LLU,1LLU),_1ab2133dc_Range32(119081LLU,119142LLU,1LLU),_1ab2133dc_Range32(119146LLU,119162LLU,1LLU),_1ab2133dc_Range32(119171LLU,119172LLU,1LLU),_1ab2133dc_Range32(119180LLU,119209LLU,1LLU),_1ab2133dc_Range32(119214LLU,119274LLU,1LLU),_1ab2133dc_Range32(119488LLU,119507LLU,1LLU),_1ab2133dc_Range32(119520LLU,119539LLU,1LLU),_1ab2133dc_Range32(119552LLU,119638LLU,1LLU),_1ab2133dc_Range32(119648LLU,119672LLU,1LLU),_1ab2133dc_Range32(119808LLU,119892LLU,1LLU),_1ab2133dc_Range32(119894LLU,119964LLU,1LLU),_1ab2133dc_Range32(119966LLU,119967LLU,1LLU),_1ab2133dc_Range32(119970LLU,119973LLU,3LLU),_1ab2133dc_Range32(119974LLU,119977LLU,3LLU),_1ab2133dc_Range32(119978LLU,119980LLU,1LLU),_1ab2133dc_Range32(119982LLU,119993LLU,1LLU),_1ab2133dc_Range32(119995LLU,119997LLU,2LLU),_1ab2133dc_Range32(119998LLU,120003LLU,1LLU),_1ab2133dc_Range32(120005LLU,120069LLU,1LLU),_1ab2133dc_Range32(120071LLU,120074LLU,1LLU),_1ab2133dc_Range32(120077LLU,120084LLU,1LLU),_1ab2133dc_Range32(120086LLU,120092LLU,1LLU),_1ab2133dc_Range32(120094LLU,120121LLU,1LLU),_1ab2133dc_Range32(120123LLU,120126LLU,1LLU),_1ab2133dc_Range32(120128LLU,120132LLU,1LLU),_1ab2133dc_Range32(120134LLU,120138LLU,4LLU),_1ab2133dc_Range32(120139LLU,120144LLU,1LLU),_1ab2133dc_Range32(120146LLU,120485LLU,1LLU),_1ab2133dc_Range32(120488LLU,120779LLU,1LLU),_1ab2133dc_Range32(120782LLU,120831LLU,1LLU),_1ab2133dc_Range32(126065LLU,126132LLU,1LLU),_1ab2133dc_Range32(126209LLU,126269LLU,1LLU),_1ab2133dc_Range32(126976LLU,127019LLU,1LLU),_1ab2133dc_Range32(127024LLU,127123LLU,1LLU),_1ab2133dc_Range32(127136LLU,127150LLU,1LLU),_1ab2133dc_Range32(127153LLU,127167LLU,1LLU),_1ab2133dc_Range32(127169LLU,127183LLU,1LLU),_1ab2133dc_Range32(127185LLU,127221LLU,1LLU),_1ab2133dc_Range32(127232LLU,127405LLU,1LLU),_1ab2133dc_Range32(127462LLU,127487LLU,1LLU),_1ab2133dc_Range32(127489LLU,127490LLU,1LLU),_1ab2133dc_Range32(127504LLU,127547LLU,1LLU),_1ab2133dc_Range32(127552LLU,127560LLU,1LLU),_1ab2133dc_Range32(127568LLU,127569LLU,1LLU),_1ab2133dc_Range32(127584LLU,127589LLU,1LLU),_1ab2133dc_Range32(127744LLU,128727LLU,1LLU),_1ab2133dc_Range32(128732LLU,128748LLU,1LLU),_1ab2133dc_Range32(128752LLU,128764LLU,1LLU),_1ab2133dc_Range32(128768LLU,128886LLU,1LLU),_1ab2133dc_Range32(128891LLU,128985LLU,1LLU),_1ab2133dc_Range32(128992LLU,129003LLU,1LLU),_1ab2133dc_Range32(129008LLU,129024LLU,16LLU),_1ab2133dc_Range32(129025LLU,129035LLU,1LLU),_1ab2133dc_Range32(129040LLU,129095LLU,1LLU),_1ab2133dc_Range32(129104LLU,129113LLU,1LLU),_1ab2133dc_Range32(129120LLU,129159LLU,1LLU),_1ab2133dc_Range32(129168LLU,129197LLU,1LLU),_1ab2133dc_Range32(129200LLU,129201LLU,1LLU),_1ab2133dc_Range32(129280LLU,129619LLU,1LLU),_1ab2133dc_Range32(129632LLU,129645LLU,1LLU),_1ab2133dc_Range32(129648LLU,129660LLU,1LLU),_1ab2133dc_Range32(129664LLU,129672LLU,1LLU),_1ab2133dc_Range32(129680LLU,129725LLU,1LLU),_1ab2133dc_Range32(129727LLU,129733LLU,1LLU),_1ab2133dc_Range32(129742LLU,129755LLU,1LLU),_1ab2133dc_Range32(129760LLU,129768LLU,1LLU),_1ab2133dc_Range32(129776LLU,129784LLU,1LLU),_1ab2133dc_Range32(129792LLU,129938LLU,1LLU),_1ab2133dc_Range32(129940LLU,129994LLU,1LLU),_1ab2133dc_Range32(130032LLU,130041LLU,1LLU),_1ab2133dc_Range32(917505LLU,917536LLU,31LLU),_1ab2133dc_Range32(917537LLU,917631LLU,1LLU)}),6LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__COPTIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(994LLU,1007LLU,1LLU),_1ab2133dc_Range16(11392LLU,11507LLU,1LLU),_1ab2133dc_Range16(11513LLU,11519LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CUNEIFORM = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(73728LLU,74649LLU,1LLU),_1ab2133dc_Range32(74752LLU,74862LLU,1LLU),_1ab2133dc_Range32(74864LLU,74868LLU,1LLU),_1ab2133dc_Range32(74880LLU,75075LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CYPRIOT = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(67584LLU,67589LLU,1LLU),_1ab2133dc_Range32(67592LLU,67594LLU,2LLU),_1ab2133dc_Range32(67595LLU,67637LLU,1LLU),_1ab2133dc_Range32(67639LLU,67640LLU,1LLU),_1ab2133dc_Range32(67644LLU,67647LLU,3LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CYPRO_MINOAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(77712LLU,77810LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__CYRILLIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(1024LLU,1156LLU,1LLU),_1ab2133dc_Range16(1159LLU,1327LLU,1LLU),_1ab2133dc_Range16(7296LLU,7304LLU,1LLU),_1ab2133dc_Range16(7467LLU,7544LLU,77LLU),_1ab2133dc_Range16(11744LLU,11775LLU,1LLU),_1ab2133dc_Range16(42560LLU,42655LLU,1LLU),_1ab2133dc_Range16(65070LLU,65071LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(122928LLU,122989LLU,1LLU),_1ab2133dc_Range32(123023LLU,123023LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__DESERET = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66560LLU,66639LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__DEVANAGARI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(2304LLU,2384LLU,1LLU),_1ab2133dc_Range16(2389LLU,2403LLU,1LLU),_1ab2133dc_Range16(2406LLU,2431LLU,1LLU),_1ab2133dc_Range16(43232LLU,43263LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(72448LLU,72457LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__DIVES_AKURU = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(71936LLU,71942LLU,1LLU),_1ab2133dc_Range32(71945LLU,71948LLU,3LLU),_1ab2133dc_Range32(71949LLU,71955LLU,1LLU),_1ab2133dc_Range32(71957LLU,71958LLU,1LLU),_1ab2133dc_Range32(71960LLU,71989LLU,1LLU),_1ab2133dc_Range32(71991LLU,71992LLU,1LLU),_1ab2133dc_Range32(71995LLU,72006LLU,1LLU),_1ab2133dc_Range32(72016LLU,72025LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__DOGRA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(71680LLU,71739LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__DUPLOYAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(113664LLU,113770LLU,1LLU),_1ab2133dc_Range32(113776LLU,113788LLU,1LLU),_1ab2133dc_Range32(113792LLU,113800LLU,1LLU),_1ab2133dc_Range32(113808LLU,113817LLU,1LLU),_1ab2133dc_Range32(113820LLU,113823LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__EGYPTIAN_HIEROGLYPHS = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(77824LLU,78933LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ELBASAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66816LLU,66855LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ELYMAIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69600LLU,69622LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ETHIOPIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(4608LLU,4680LLU,1LLU),_1ab2133dc_Range16(4682LLU,4685LLU,1LLU),_1ab2133dc_Range16(4688LLU,4694LLU,1LLU),_1ab2133dc_Range16(4696LLU,4698LLU,2LLU),_1ab2133dc_Range16(4699LLU,4701LLU,1LLU),_1ab2133dc_Range16(4704LLU,4744LLU,1LLU),_1ab2133dc_Range16(4746LLU,4749LLU,1LLU),_1ab2133dc_Range16(4752LLU,4784LLU,1LLU),_1ab2133dc_Range16(4786LLU,4789LLU,1LLU),_1ab2133dc_Range16(4792LLU,4798LLU,1LLU),_1ab2133dc_Range16(4800LLU,4802LLU,2LLU),_1ab2133dc_Range16(4803LLU,4805LLU,1LLU),_1ab2133dc_Range16(4808LLU,4822LLU,1LLU),_1ab2133dc_Range16(4824LLU,4880LLU,1LLU),_1ab2133dc_Range16(4882LLU,4885LLU,1LLU),_1ab2133dc_Range16(4888LLU,4954LLU,1LLU),_1ab2133dc_Range16(4957LLU,4988LLU,1LLU),_1ab2133dc_Range16(4992LLU,5017LLU,1LLU),_1ab2133dc_Range16(11648LLU,11670LLU,1LLU),_1ab2133dc_Range16(11680LLU,11686LLU,1LLU),_1ab2133dc_Range16(11688LLU,11694LLU,1LLU),_1ab2133dc_Range16(11696LLU,11702LLU,1LLU),_1ab2133dc_Range16(11704LLU,11710LLU,1LLU),_1ab2133dc_Range16(11712LLU,11718LLU,1LLU),_1ab2133dc_Range16(11720LLU,11726LLU,1LLU),_1ab2133dc_Range16(11728LLU,11734LLU,1LLU),_1ab2133dc_Range16(11736LLU,11742LLU,1LLU),_1ab2133dc_Range16(43777LLU,43782LLU,1LLU),_1ab2133dc_Range16(43785LLU,43790LLU,1LLU),_1ab2133dc_Range16(43793LLU,43798LLU,1LLU),_1ab2133dc_Range16(43808LLU,43814LLU,1LLU),_1ab2133dc_Range16(43816LLU,43822LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(124896LLU,124902LLU,1LLU),_1ab2133dc_Range32(124904LLU,124907LLU,1LLU),_1ab2133dc_Range32(124909LLU,124910LLU,1LLU),_1ab2133dc_Range32(124912LLU,124926LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__GEORGIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(4256LLU,4293LLU,1LLU),_1ab2133dc_Range16(4295LLU,4301LLU,6LLU),_1ab2133dc_Range16(4304LLU,4346LLU,1LLU),_1ab2133dc_Range16(4348LLU,4351LLU,1LLU),_1ab2133dc_Range16(7312LLU,7354LLU,1LLU),_1ab2133dc_Range16(7357LLU,7359LLU,1LLU),_1ab2133dc_Range16(11520LLU,11557LLU,1LLU),_1ab2133dc_Range16(11559LLU,11565LLU,6LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__GLAGOLITIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(11264LLU,11359LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(122880LLU,122886LLU,1LLU),_1ab2133dc_Range32(122888LLU,122904LLU,1LLU),_1ab2133dc_Range32(122907LLU,122913LLU,1LLU),_1ab2133dc_Range32(122915LLU,122916LLU,1LLU),_1ab2133dc_Range32(122918LLU,122922LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__GOTHIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66352LLU,66378LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__GRANTHA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(70400LLU,70403LLU,1LLU),_1ab2133dc_Range32(70405LLU,70412LLU,1LLU),_1ab2133dc_Range32(70415LLU,70416LLU,1LLU),_1ab2133dc_Range32(70419LLU,70440LLU,1LLU),_1ab2133dc_Range32(70442LLU,70448LLU,1LLU),_1ab2133dc_Range32(70450LLU,70451LLU,1LLU),_1ab2133dc_Range32(70453LLU,70457LLU,1LLU),_1ab2133dc_Range32(70460LLU,70468LLU,1LLU),_1ab2133dc_Range32(70471LLU,70472LLU,1LLU),_1ab2133dc_Range32(70475LLU,70477LLU,1LLU),_1ab2133dc_Range32(70480LLU,70487LLU,7LLU),_1ab2133dc_Range32(70493LLU,70499LLU,1LLU),_1ab2133dc_Range32(70502LLU,70508LLU,1LLU),_1ab2133dc_Range32(70512LLU,70516LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__GREEK = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(880LLU,883LLU,1LLU),_1ab2133dc_Range16(885LLU,887LLU,1LLU),_1ab2133dc_Range16(890LLU,893LLU,1LLU),_1ab2133dc_Range16(895LLU,900LLU,5LLU),_1ab2133dc_Range16(902LLU,904LLU,2LLU),_1ab2133dc_Range16(905LLU,906LLU,1LLU),_1ab2133dc_Range16(908LLU,910LLU,2LLU),_1ab2133dc_Range16(911LLU,929LLU,1LLU),_1ab2133dc_Range16(931LLU,993LLU,1LLU),_1ab2133dc_Range16(1008LLU,1023LLU,1LLU),_1ab2133dc_Range16(7462LLU,7466LLU,1LLU),_1ab2133dc_Range16(7517LLU,7521LLU,1LLU),_1ab2133dc_Range16(7526LLU,7530LLU,1LLU),_1ab2133dc_Range16(7615LLU,7936LLU,321LLU),_1ab2133dc_Range16(7937LLU,7957LLU,1LLU),_1ab2133dc_Range16(7960LLU,7965LLU,1LLU),_1ab2133dc_Range16(7968LLU,8005LLU,1LLU),_1ab2133dc_Range16(8008LLU,8013LLU,1LLU),_1ab2133dc_Range16(8016LLU,8023LLU,1LLU),_1ab2133dc_Range16(8025LLU,8031LLU,2LLU),_1ab2133dc_Range16(8032LLU,8061LLU,1LLU),_1ab2133dc_Range16(8064LLU,8116LLU,1LLU),_1ab2133dc_Range16(8118LLU,8132LLU,1LLU),_1ab2133dc_Range16(8134LLU,8147LLU,1LLU),_1ab2133dc_Range16(8150LLU,8155LLU,1LLU),_1ab2133dc_Range16(8157LLU,8175LLU,1LLU),_1ab2133dc_Range16(8178LLU,8180LLU,1LLU),_1ab2133dc_Range16(8182LLU,8190LLU,1LLU),_1ab2133dc_Range16(8486LLU,43877LLU,35391LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(65856LLU,65934LLU,1LLU),_1ab2133dc_Range32(65952LLU,119296LLU,53344LLU),_1ab2133dc_Range32(119297LLU,119365LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__GUJARATI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(2689LLU,2691LLU,1LLU),_1ab2133dc_Range16(2693LLU,2701LLU,1LLU),_1ab2133dc_Range16(2703LLU,2705LLU,1LLU),_1ab2133dc_Range16(2707LLU,2728LLU,1LLU),_1ab2133dc_Range16(2730LLU,2736LLU,1LLU),_1ab2133dc_Range16(2738LLU,2739LLU,1LLU),_1ab2133dc_Range16(2741LLU,2745LLU,1LLU),_1ab2133dc_Range16(2748LLU,2757LLU,1LLU),_1ab2133dc_Range16(2759LLU,2761LLU,1LLU),_1ab2133dc_Range16(2763LLU,2765LLU,1LLU),_1ab2133dc_Range16(2768LLU,2784LLU,16LLU),_1ab2133dc_Range16(2785LLU,2787LLU,1LLU),_1ab2133dc_Range16(2790LLU,2801LLU,1LLU),_1ab2133dc_Range16(2809LLU,2815LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__GUNJALA_GONDI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(73056LLU,73061LLU,1LLU),_1ab2133dc_Range32(73063LLU,73064LLU,1LLU),_1ab2133dc_Range32(73066LLU,73102LLU,1LLU),_1ab2133dc_Range32(73104LLU,73105LLU,1LLU),_1ab2133dc_Range32(73107LLU,73112LLU,1LLU),_1ab2133dc_Range32(73120LLU,73129LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__GURMUKHI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(2561LLU,2563LLU,1LLU),_1ab2133dc_Range16(2565LLU,2570LLU,1LLU),_1ab2133dc_Range16(2575LLU,2576LLU,1LLU),_1ab2133dc_Range16(2579LLU,2600LLU,1LLU),_1ab2133dc_Range16(2602LLU,2608LLU,1LLU),_1ab2133dc_Range16(2610LLU,2611LLU,1LLU),_1ab2133dc_Range16(2613LLU,2614LLU,1LLU),_1ab2133dc_Range16(2616LLU,2617LLU,1LLU),_1ab2133dc_Range16(2620LLU,2622LLU,2LLU),_1ab2133dc_Range16(2623LLU,2626LLU,1LLU),_1ab2133dc_Range16(2631LLU,2632LLU,1LLU),_1ab2133dc_Range16(2635LLU,2637LLU,1LLU),_1ab2133dc_Range16(2641LLU,2649LLU,8LLU),_1ab2133dc_Range16(2650LLU,2652LLU,1LLU),_1ab2133dc_Range16(2654LLU,2662LLU,8LLU),_1ab2133dc_Range16(2663LLU,2678LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__HAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(11904LLU,11929LLU,1LLU),_1ab2133dc_Range16(11931LLU,12019LLU,1LLU),_1ab2133dc_Range16(12032LLU,12245LLU,1LLU),_1ab2133dc_Range16(12293LLU,12295LLU,2LLU),_1ab2133dc_Range16(12321LLU,12329LLU,1LLU),_1ab2133dc_Range16(12344LLU,12347LLU,1LLU),_1ab2133dc_Range16(13312LLU,19903LLU,1LLU),_1ab2133dc_Range16(19968LLU,40959LLU,1LLU),_1ab2133dc_Range16(63744LLU,64109LLU,1LLU),_1ab2133dc_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(94178LLU,94179LLU,1LLU),_1ab2133dc_Range32(94192LLU,94193LLU,1LLU),_1ab2133dc_Range32(131072LLU,173791LLU,1LLU),_1ab2133dc_Range32(173824LLU,177977LLU,1LLU),_1ab2133dc_Range32(177984LLU,178205LLU,1LLU),_1ab2133dc_Range32(178208LLU,183969LLU,1LLU),_1ab2133dc_Range32(183984LLU,191456LLU,1LLU),_1ab2133dc_Range32(194560LLU,195101LLU,1LLU),_1ab2133dc_Range32(196608LLU,201546LLU,1LLU),_1ab2133dc_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__HANGUL = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(4352LLU,4607LLU,1LLU),_1ab2133dc_Range16(12334LLU,12335LLU,1LLU),_1ab2133dc_Range16(12593LLU,12686LLU,1LLU),_1ab2133dc_Range16(12800LLU,12830LLU,1LLU),_1ab2133dc_Range16(12896LLU,12926LLU,1LLU),_1ab2133dc_Range16(43360LLU,43388LLU,1LLU),_1ab2133dc_Range16(44032LLU,55203LLU,1LLU),_1ab2133dc_Range16(55216LLU,55238LLU,1LLU),_1ab2133dc_Range16(55243LLU,55291LLU,1LLU),_1ab2133dc_Range16(65440LLU,65470LLU,1LLU),_1ab2133dc_Range16(65474LLU,65479LLU,1LLU),_1ab2133dc_Range16(65482LLU,65487LLU,1LLU),_1ab2133dc_Range16(65490LLU,65495LLU,1LLU),_1ab2133dc_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__HANIFI_ROHINGYA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(68864LLU,68903LLU,1LLU),_1ab2133dc_Range32(68912LLU,68921LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__HANUNOO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(5920LLU,5940LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__HATRAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(67808LLU,67826LLU,1LLU),_1ab2133dc_Range32(67828LLU,67829LLU,1LLU),_1ab2133dc_Range32(67835LLU,67839LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__HEBREW = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(1425LLU,1479LLU,1LLU),_1ab2133dc_Range16(1488LLU,1514LLU,1LLU),_1ab2133dc_Range16(1519LLU,1524LLU,1LLU),_1ab2133dc_Range16(64285LLU,64310LLU,1LLU),_1ab2133dc_Range16(64312LLU,64316LLU,1LLU),_1ab2133dc_Range16(64318LLU,64320LLU,2LLU),_1ab2133dc_Range16(64321LLU,64323LLU,2LLU),_1ab2133dc_Range16(64324LLU,64326LLU,2LLU),_1ab2133dc_Range16(64327LLU,64335LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__HIRAGANA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(12353LLU,12438LLU,1LLU),_1ab2133dc_Range16(12445LLU,12447LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(110593LLU,110879LLU,1LLU),_1ab2133dc_Range32(110898LLU,110928LLU,30LLU),_1ab2133dc_Range32(110929LLU,110930LLU,1LLU),_1ab2133dc_Range32(127488LLU,127488LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__IMPERIAL_ARAMAIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(67648LLU,67669LLU,1LLU),_1ab2133dc_Range32(67671LLU,67679LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__INHERITED = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(768LLU,879LLU,1LLU),_1ab2133dc_Range16(1157LLU,1158LLU,1LLU),_1ab2133dc_Range16(1611LLU,1621LLU,1LLU),_1ab2133dc_Range16(1648LLU,2385LLU,737LLU),_1ab2133dc_Range16(2386LLU,2388LLU,1LLU),_1ab2133dc_Range16(6832LLU,6862LLU,1LLU),_1ab2133dc_Range16(7376LLU,7378LLU,1LLU),_1ab2133dc_Range16(7380LLU,7392LLU,1LLU),_1ab2133dc_Range16(7394LLU,7400LLU,1LLU),_1ab2133dc_Range16(7405LLU,7412LLU,7LLU),_1ab2133dc_Range16(7416LLU,7417LLU,1LLU),_1ab2133dc_Range16(7616LLU,7679LLU,1LLU),_1ab2133dc_Range16(8204LLU,8205LLU,1LLU),_1ab2133dc_Range16(8400LLU,8432LLU,1LLU),_1ab2133dc_Range16(12330LLU,12333LLU,1LLU),_1ab2133dc_Range16(12441LLU,12442LLU,1LLU),_1ab2133dc_Range16(65024LLU,65039LLU,1LLU),_1ab2133dc_Range16(65056LLU,65069LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66045LLU,66272LLU,227LLU),_1ab2133dc_Range32(70459LLU,118528LLU,48069LLU),_1ab2133dc_Range32(118529LLU,118573LLU,1LLU),_1ab2133dc_Range32(118576LLU,118598LLU,1LLU),_1ab2133dc_Range32(119143LLU,119145LLU,1LLU),_1ab2133dc_Range32(119163LLU,119170LLU,1LLU),_1ab2133dc_Range32(119173LLU,119179LLU,1LLU),_1ab2133dc_Range32(119210LLU,119213LLU,1LLU),_1ab2133dc_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__INSCRIPTIONAL_PAHLAVI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(68448LLU,68466LLU,1LLU),_1ab2133dc_Range32(68472LLU,68479LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__INSCRIPTIONAL_PARTHIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(68416LLU,68437LLU,1LLU),_1ab2133dc_Range32(68440LLU,68447LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__JAVANESE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(43392LLU,43469LLU,1LLU),_1ab2133dc_Range16(43472LLU,43481LLU,1LLU),_1ab2133dc_Range16(43486LLU,43487LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__KAITHI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69760LLU,69826LLU,1LLU),_1ab2133dc_Range32(69837LLU,69837LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__KANNADA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(3200LLU,3212LLU,1LLU),_1ab2133dc_Range16(3214LLU,3216LLU,1LLU),_1ab2133dc_Range16(3218LLU,3240LLU,1LLU),_1ab2133dc_Range16(3242LLU,3251LLU,1LLU),_1ab2133dc_Range16(3253LLU,3257LLU,1LLU),_1ab2133dc_Range16(3260LLU,3268LLU,1LLU),_1ab2133dc_Range16(3270LLU,3272LLU,1LLU),_1ab2133dc_Range16(3274LLU,3277LLU,1LLU),_1ab2133dc_Range16(3285LLU,3286LLU,1LLU),_1ab2133dc_Range16(3293LLU,3294LLU,1LLU),_1ab2133dc_Range16(3296LLU,3299LLU,1LLU),_1ab2133dc_Range16(3302LLU,3311LLU,1LLU),_1ab2133dc_Range16(3313LLU,3315LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__KATAKANA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(12449LLU,12538LLU,1LLU),_1ab2133dc_Range16(12541LLU,12543LLU,1LLU),_1ab2133dc_Range16(12784LLU,12799LLU,1LLU),_1ab2133dc_Range16(13008LLU,13054LLU,1LLU),_1ab2133dc_Range16(13056LLU,13143LLU,1LLU),_1ab2133dc_Range16(65382LLU,65391LLU,1LLU),_1ab2133dc_Range16(65393LLU,65437LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(110576LLU,110579LLU,1LLU),_1ab2133dc_Range32(110581LLU,110587LLU,1LLU),_1ab2133dc_Range32(110589LLU,110590LLU,1LLU),_1ab2133dc_Range32(110592LLU,110880LLU,288LLU),_1ab2133dc_Range32(110881LLU,110882LLU,1LLU),_1ab2133dc_Range32(110933LLU,110948LLU,15LLU),_1ab2133dc_Range32(110949LLU,110951LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__KAWI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(73472LLU,73488LLU,1LLU),_1ab2133dc_Range32(73490LLU,73530LLU,1LLU),_1ab2133dc_Range32(73534LLU,73561LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__KAYAH_LI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(43264LLU,43309LLU,1LLU),_1ab2133dc_Range16(43311LLU,43311LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__KHAROSHTHI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(68096LLU,68099LLU,1LLU),_1ab2133dc_Range32(68101LLU,68102LLU,1LLU),_1ab2133dc_Range32(68108LLU,68115LLU,1LLU),_1ab2133dc_Range32(68117LLU,68119LLU,1LLU),_1ab2133dc_Range32(68121LLU,68149LLU,1LLU),_1ab2133dc_Range32(68152LLU,68154LLU,1LLU),_1ab2133dc_Range32(68159LLU,68168LLU,1LLU),_1ab2133dc_Range32(68176LLU,68184LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__KHITAN_SMALL_SCRIPT = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(94180LLU,101120LLU,6940LLU),_1ab2133dc_Range32(101121LLU,101589LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__KHMER = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(6016LLU,6109LLU,1LLU),_1ab2133dc_Range16(6112LLU,6121LLU,1LLU),_1ab2133dc_Range16(6128LLU,6137LLU,1LLU),_1ab2133dc_Range16(6624LLU,6655LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__KHOJKI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(70144LLU,70161LLU,1LLU),_1ab2133dc_Range32(70163LLU,70209LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__KHUDAWADI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(70320LLU,70378LLU,1LLU),_1ab2133dc_Range32(70384LLU,70393LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LAO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(3713LLU,3714LLU,1LLU),_1ab2133dc_Range16(3716LLU,3718LLU,2LLU),_1ab2133dc_Range16(3719LLU,3722LLU,1LLU),_1ab2133dc_Range16(3724LLU,3747LLU,1LLU),_1ab2133dc_Range16(3749LLU,3751LLU,2LLU),_1ab2133dc_Range16(3752LLU,3773LLU,1LLU),_1ab2133dc_Range16(3776LLU,3780LLU,1LLU),_1ab2133dc_Range16(3782LLU,3784LLU,2LLU),_1ab2133dc_Range16(3785LLU,3790LLU,1LLU),_1ab2133dc_Range16(3792LLU,3801LLU,1LLU),_1ab2133dc_Range16(3804LLU,3807LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LATIN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(65LLU,90LLU,1LLU),_1ab2133dc_Range16(97LLU,122LLU,1LLU),_1ab2133dc_Range16(170LLU,186LLU,16LLU),_1ab2133dc_Range16(192LLU,214LLU,1LLU),_1ab2133dc_Range16(216LLU,246LLU,1LLU),_1ab2133dc_Range16(248LLU,696LLU,1LLU),_1ab2133dc_Range16(736LLU,740LLU,1LLU),_1ab2133dc_Range16(7424LLU,7461LLU,1LLU),_1ab2133dc_Range16(7468LLU,7516LLU,1LLU),_1ab2133dc_Range16(7522LLU,7525LLU,1LLU),_1ab2133dc_Range16(7531LLU,7543LLU,1LLU),_1ab2133dc_Range16(7545LLU,7614LLU,1LLU),_1ab2133dc_Range16(7680LLU,7935LLU,1LLU),_1ab2133dc_Range16(8305LLU,8319LLU,14LLU),_1ab2133dc_Range16(8336LLU,8348LLU,1LLU),_1ab2133dc_Range16(8490LLU,8491LLU,1LLU),_1ab2133dc_Range16(8498LLU,8526LLU,28LLU),_1ab2133dc_Range16(8544LLU,8584LLU,1LLU),_1ab2133dc_Range16(11360LLU,11391LLU,1LLU),_1ab2133dc_Range16(42786LLU,42887LLU,1LLU),_1ab2133dc_Range16(42891LLU,42954LLU,1LLU),_1ab2133dc_Range16(42960LLU,42961LLU,1LLU),_1ab2133dc_Range16(42963LLU,42965LLU,2LLU),_1ab2133dc_Range16(42966LLU,42969LLU,1LLU),_1ab2133dc_Range16(42994LLU,43007LLU,1LLU),_1ab2133dc_Range16(43824LLU,43866LLU,1LLU),_1ab2133dc_Range16(43868LLU,43876LLU,1LLU),_1ab2133dc_Range16(43878LLU,43881LLU,1LLU),_1ab2133dc_Range16(64256LLU,64262LLU,1LLU),_1ab2133dc_Range16(65313LLU,65338LLU,1LLU),_1ab2133dc_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(67456LLU,67461LLU,1LLU),_1ab2133dc_Range32(67463LLU,67504LLU,1LLU),_1ab2133dc_Range32(67506LLU,67514LLU,1LLU),_1ab2133dc_Range32(122624LLU,122654LLU,1LLU),_1ab2133dc_Range32(122661LLU,122666LLU,1LLU)}),5LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LEPCHA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(7168LLU,7223LLU,1LLU),_1ab2133dc_Range16(7227LLU,7241LLU,1LLU),_1ab2133dc_Range16(7245LLU,7247LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LIMBU = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(6400LLU,6430LLU,1LLU),_1ab2133dc_Range16(6432LLU,6443LLU,1LLU),_1ab2133dc_Range16(6448LLU,6459LLU,1LLU),_1ab2133dc_Range16(6464LLU,6468LLU,4LLU),_1ab2133dc_Range16(6469LLU,6479LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LINEAR_A = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(67072LLU,67382LLU,1LLU),_1ab2133dc_Range32(67392LLU,67413LLU,1LLU),_1ab2133dc_Range32(67424LLU,67431LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LINEAR_B = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(65536LLU,65547LLU,1LLU),_1ab2133dc_Range32(65549LLU,65574LLU,1LLU),_1ab2133dc_Range32(65576LLU,65594LLU,1LLU),_1ab2133dc_Range32(65596LLU,65597LLU,1LLU),_1ab2133dc_Range32(65599LLU,65613LLU,1LLU),_1ab2133dc_Range32(65616LLU,65629LLU,1LLU),_1ab2133dc_Range32(65664LLU,65786LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LISU = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(42192LLU,42239LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(73648LLU,73648LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LYCIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66176LLU,66204LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LYDIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(67872LLU,67897LLU,1LLU),_1ab2133dc_Range32(67903LLU,67903LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MAHAJANI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69968LLU,70006LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MAKASAR = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(73440LLU,73464LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MALAYALAM = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(3328LLU,3340LLU,1LLU),_1ab2133dc_Range16(3342LLU,3344LLU,1LLU),_1ab2133dc_Range16(3346LLU,3396LLU,1LLU),_1ab2133dc_Range16(3398LLU,3400LLU,1LLU),_1ab2133dc_Range16(3402LLU,3407LLU,1LLU),_1ab2133dc_Range16(3412LLU,3427LLU,1LLU),_1ab2133dc_Range16(3430LLU,3455LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MANDAIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(2112LLU,2139LLU,1LLU),_1ab2133dc_Range16(2142LLU,2142LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MANICHAEAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(68288LLU,68326LLU,1LLU),_1ab2133dc_Range32(68331LLU,68342LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MARCHEN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(72816LLU,72847LLU,1LLU),_1ab2133dc_Range32(72850LLU,72871LLU,1LLU),_1ab2133dc_Range32(72873LLU,72886LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MASARAM_GONDI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(72960LLU,72966LLU,1LLU),_1ab2133dc_Range32(72968LLU,72969LLU,1LLU),_1ab2133dc_Range32(72971LLU,73014LLU,1LLU),_1ab2133dc_Range32(73018LLU,73020LLU,2LLU),_1ab2133dc_Range32(73021LLU,73023LLU,2LLU),_1ab2133dc_Range32(73024LLU,73031LLU,1LLU),_1ab2133dc_Range32(73040LLU,73049LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MEDEFAIDRIN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(93760LLU,93850LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MEETEI_MAYEK = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(43744LLU,43766LLU,1LLU),_1ab2133dc_Range16(43968LLU,44013LLU,1LLU),_1ab2133dc_Range16(44016LLU,44025LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MENDE_KIKAKUI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(124928LLU,125124LLU,1LLU),_1ab2133dc_Range32(125127LLU,125142LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MEROITIC_CURSIVE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(68000LLU,68023LLU,1LLU),_1ab2133dc_Range32(68028LLU,68047LLU,1LLU),_1ab2133dc_Range32(68050LLU,68095LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MEROITIC_HIEROGLYPHS = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(67968LLU,67999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MIAO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(93952LLU,94026LLU,1LLU),_1ab2133dc_Range32(94031LLU,94087LLU,1LLU),_1ab2133dc_Range32(94095LLU,94111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MODI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(71168LLU,71236LLU,1LLU),_1ab2133dc_Range32(71248LLU,71257LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MONGOLIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(6144LLU,6145LLU,1LLU),_1ab2133dc_Range16(6148LLU,6150LLU,2LLU),_1ab2133dc_Range16(6151LLU,6169LLU,1LLU),_1ab2133dc_Range16(6176LLU,6264LLU,1LLU),_1ab2133dc_Range16(6272LLU,6314LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(71264LLU,71276LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MRO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(92736LLU,92766LLU,1LLU),_1ab2133dc_Range32(92768LLU,92777LLU,1LLU),_1ab2133dc_Range32(92782LLU,92783LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MULTANI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(70272LLU,70278LLU,1LLU),_1ab2133dc_Range32(70280LLU,70282LLU,2LLU),_1ab2133dc_Range32(70283LLU,70285LLU,1LLU),_1ab2133dc_Range32(70287LLU,70301LLU,1LLU),_1ab2133dc_Range32(70303LLU,70313LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__MYANMAR = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(4096LLU,4255LLU,1LLU),_1ab2133dc_Range16(43488LLU,43518LLU,1LLU),_1ab2133dc_Range16(43616LLU,43647LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__NABATAEAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(67712LLU,67742LLU,1LLU),_1ab2133dc_Range32(67751LLU,67759LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__NAG_MUNDARI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(124112LLU,124153LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__NANDINAGARI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(72096LLU,72103LLU,1LLU),_1ab2133dc_Range32(72106LLU,72151LLU,1LLU),_1ab2133dc_Range32(72154LLU,72164LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__NEW_TAI_LUE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(6528LLU,6571LLU,1LLU),_1ab2133dc_Range16(6576LLU,6601LLU,1LLU),_1ab2133dc_Range16(6608LLU,6618LLU,1LLU),_1ab2133dc_Range16(6622LLU,6623LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__NEWA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(70656LLU,70747LLU,1LLU),_1ab2133dc_Range32(70749LLU,70753LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__NKO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(1984LLU,2042LLU,1LLU),_1ab2133dc_Range16(2045LLU,2047LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__NUSHU = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(94177LLU,110960LLU,16783LLU),_1ab2133dc_Range32(110961LLU,111355LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__NYIAKENG_PUACHUE_HMONG = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(123136LLU,123180LLU,1LLU),_1ab2133dc_Range32(123184LLU,123197LLU,1LLU),_1ab2133dc_Range32(123200LLU,123209LLU,1LLU),_1ab2133dc_Range32(123214LLU,123215LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OGHAM = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(5760LLU,5788LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OL_CHIKI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(7248LLU,7295LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OLD_HUNGARIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(68736LLU,68786LLU,1LLU),_1ab2133dc_Range32(68800LLU,68850LLU,1LLU),_1ab2133dc_Range32(68858LLU,68863LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OLD_ITALIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66304LLU,66339LLU,1LLU),_1ab2133dc_Range32(66349LLU,66351LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OLD_NORTH_ARABIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(68224LLU,68255LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OLD_PERMIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66384LLU,66426LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OLD_PERSIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66464LLU,66499LLU,1LLU),_1ab2133dc_Range32(66504LLU,66517LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OLD_SOGDIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69376LLU,69415LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OLD_SOUTH_ARABIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(68192LLU,68223LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OLD_TURKIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(68608LLU,68680LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OLD_UYGHUR = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69488LLU,69513LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ORIYA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(2817LLU,2819LLU,1LLU),_1ab2133dc_Range16(2821LLU,2828LLU,1LLU),_1ab2133dc_Range16(2831LLU,2832LLU,1LLU),_1ab2133dc_Range16(2835LLU,2856LLU,1LLU),_1ab2133dc_Range16(2858LLU,2864LLU,1LLU),_1ab2133dc_Range16(2866LLU,2867LLU,1LLU),_1ab2133dc_Range16(2869LLU,2873LLU,1LLU),_1ab2133dc_Range16(2876LLU,2884LLU,1LLU),_1ab2133dc_Range16(2887LLU,2888LLU,1LLU),_1ab2133dc_Range16(2891LLU,2893LLU,1LLU),_1ab2133dc_Range16(2901LLU,2903LLU,1LLU),_1ab2133dc_Range16(2908LLU,2909LLU,1LLU),_1ab2133dc_Range16(2911LLU,2915LLU,1LLU),_1ab2133dc_Range16(2918LLU,2935LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OSAGE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66736LLU,66771LLU,1LLU),_1ab2133dc_Range32(66776LLU,66811LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OSMANYA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66688LLU,66717LLU,1LLU),_1ab2133dc_Range32(66720LLU,66729LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PAHAWH_HMONG = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(92928LLU,92997LLU,1LLU),_1ab2133dc_Range32(93008LLU,93017LLU,1LLU),_1ab2133dc_Range32(93019LLU,93025LLU,1LLU),_1ab2133dc_Range32(93027LLU,93047LLU,1LLU),_1ab2133dc_Range32(93053LLU,93071LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PALMYRENE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(67680LLU,67711LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PAU_CIN_HAU = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(72384LLU,72440LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PHAGS_PA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(43072LLU,43127LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PHOENICIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(67840LLU,67867LLU,1LLU),_1ab2133dc_Range32(67871LLU,67871LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PSALTER_PAHLAVI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(68480LLU,68497LLU,1LLU),_1ab2133dc_Range32(68505LLU,68508LLU,1LLU),_1ab2133dc_Range32(68521LLU,68527LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__REJANG = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(43312LLU,43347LLU,1LLU),_1ab2133dc_Range16(43359LLU,43359LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__RUNIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(5792LLU,5866LLU,1LLU),_1ab2133dc_Range16(5870LLU,5880LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SAMARITAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(2048LLU,2093LLU,1LLU),_1ab2133dc_Range16(2096LLU,2110LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SAURASHTRA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(43136LLU,43205LLU,1LLU),_1ab2133dc_Range16(43214LLU,43225LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SHARADA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(70016LLU,70111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SHAVIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66640LLU,66687LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SIDDHAM = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(71040LLU,71093LLU,1LLU),_1ab2133dc_Range32(71096LLU,71133LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SIGN_WRITING = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(120832LLU,121483LLU,1LLU),_1ab2133dc_Range32(121499LLU,121503LLU,1LLU),_1ab2133dc_Range32(121505LLU,121519LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SINHALA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(3457LLU,3459LLU,1LLU),_1ab2133dc_Range16(3461LLU,3478LLU,1LLU),_1ab2133dc_Range16(3482LLU,3505LLU,1LLU),_1ab2133dc_Range16(3507LLU,3515LLU,1LLU),_1ab2133dc_Range16(3517LLU,3520LLU,3LLU),_1ab2133dc_Range16(3521LLU,3526LLU,1LLU),_1ab2133dc_Range16(3530LLU,3535LLU,5LLU),_1ab2133dc_Range16(3536LLU,3540LLU,1LLU),_1ab2133dc_Range16(3542LLU,3544LLU,2LLU),_1ab2133dc_Range16(3545LLU,3551LLU,1LLU),_1ab2133dc_Range16(3558LLU,3567LLU,1LLU),_1ab2133dc_Range16(3570LLU,3572LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(70113LLU,70132LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SOGDIAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69424LLU,69465LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SORA_SOMPENG = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69840LLU,69864LLU,1LLU),_1ab2133dc_Range32(69872LLU,69881LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SOYOMBO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(72272LLU,72354LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SUNDANESE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(7040LLU,7103LLU,1LLU),_1ab2133dc_Range16(7360LLU,7367LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SYLOTI_NAGRI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(43008LLU,43052LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SYRIAC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(1792LLU,1805LLU,1LLU),_1ab2133dc_Range16(1807LLU,1866LLU,1LLU),_1ab2133dc_Range16(1869LLU,1871LLU,1LLU),_1ab2133dc_Range16(2144LLU,2154LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TAGALOG = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(5888LLU,5909LLU,1LLU),_1ab2133dc_Range16(5919LLU,5919LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TAGBANWA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(5984LLU,5996LLU,1LLU),_1ab2133dc_Range16(5998LLU,6000LLU,1LLU),_1ab2133dc_Range16(6002LLU,6003LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TAI_LE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(6480LLU,6509LLU,1LLU),_1ab2133dc_Range16(6512LLU,6516LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TAI_THAM = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(6688LLU,6750LLU,1LLU),_1ab2133dc_Range16(6752LLU,6780LLU,1LLU),_1ab2133dc_Range16(6783LLU,6793LLU,1LLU),_1ab2133dc_Range16(6800LLU,6809LLU,1LLU),_1ab2133dc_Range16(6816LLU,6829LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TAI_VIET = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(43648LLU,43714LLU,1LLU),_1ab2133dc_Range16(43739LLU,43743LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TAKRI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(71296LLU,71353LLU,1LLU),_1ab2133dc_Range32(71360LLU,71369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TAMIL = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(2946LLU,2947LLU,1LLU),_1ab2133dc_Range16(2949LLU,2954LLU,1LLU),_1ab2133dc_Range16(2958LLU,2960LLU,1LLU),_1ab2133dc_Range16(2962LLU,2965LLU,1LLU),_1ab2133dc_Range16(2969LLU,2970LLU,1LLU),_1ab2133dc_Range16(2972LLU,2974LLU,2LLU),_1ab2133dc_Range16(2975LLU,2979LLU,4LLU),_1ab2133dc_Range16(2980LLU,2984LLU,4LLU),_1ab2133dc_Range16(2985LLU,2986LLU,1LLU),_1ab2133dc_Range16(2990LLU,3001LLU,1LLU),_1ab2133dc_Range16(3006LLU,3010LLU,1LLU),_1ab2133dc_Range16(3014LLU,3016LLU,1LLU),_1ab2133dc_Range16(3018LLU,3021LLU,1LLU),_1ab2133dc_Range16(3024LLU,3031LLU,7LLU),_1ab2133dc_Range16(3046LLU,3066LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(73664LLU,73713LLU,1LLU),_1ab2133dc_Range32(73727LLU,73727LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TANGSA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(92784LLU,92862LLU,1LLU),_1ab2133dc_Range32(92864LLU,92873LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TANGUT = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(94176LLU,94208LLU,32LLU),_1ab2133dc_Range32(94209LLU,100343LLU,1LLU),_1ab2133dc_Range32(100352LLU,101119LLU,1LLU),_1ab2133dc_Range32(101632LLU,101640LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TELUGU = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(3072LLU,3084LLU,1LLU),_1ab2133dc_Range16(3086LLU,3088LLU,1LLU),_1ab2133dc_Range16(3090LLU,3112LLU,1LLU),_1ab2133dc_Range16(3114LLU,3129LLU,1LLU),_1ab2133dc_Range16(3132LLU,3140LLU,1LLU),_1ab2133dc_Range16(3142LLU,3144LLU,1LLU),_1ab2133dc_Range16(3146LLU,3149LLU,1LLU),_1ab2133dc_Range16(3157LLU,3158LLU,1LLU),_1ab2133dc_Range16(3160LLU,3162LLU,1LLU),_1ab2133dc_Range16(3165LLU,3168LLU,3LLU),_1ab2133dc_Range16(3169LLU,3171LLU,1LLU),_1ab2133dc_Range16(3174LLU,3183LLU,1LLU),_1ab2133dc_Range16(3191LLU,3199LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__THAANA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(1920LLU,1969LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__THAI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(3585LLU,3642LLU,1LLU),_1ab2133dc_Range16(3648LLU,3675LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TIBETAN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(3840LLU,3911LLU,1LLU),_1ab2133dc_Range16(3913LLU,3948LLU,1LLU),_1ab2133dc_Range16(3953LLU,3991LLU,1LLU),_1ab2133dc_Range16(3993LLU,4028LLU,1LLU),_1ab2133dc_Range16(4030LLU,4044LLU,1LLU),_1ab2133dc_Range16(4046LLU,4052LLU,1LLU),_1ab2133dc_Range16(4057LLU,4058LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TIFINAGH = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(11568LLU,11623LLU,1LLU),_1ab2133dc_Range16(11631LLU,11632LLU,1LLU),_1ab2133dc_Range16(11647LLU,11647LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TIRHUTA = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(70784LLU,70855LLU,1LLU),_1ab2133dc_Range32(70864LLU,70873LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TOTO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(123536LLU,123566LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__UGARITIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66432LLU,66461LLU,1LLU),_1ab2133dc_Range32(66463LLU,66463LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__VAI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(42240LLU,42539LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__VITHKUQI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66928LLU,66938LLU,1LLU),_1ab2133dc_Range32(66940LLU,66954LLU,1LLU),_1ab2133dc_Range32(66956LLU,66962LLU,1LLU),_1ab2133dc_Range32(66964LLU,66965LLU,1LLU),_1ab2133dc_Range32(66967LLU,66977LLU,1LLU),_1ab2133dc_Range32(66979LLU,66993LLU,1LLU),_1ab2133dc_Range32(66995LLU,67001LLU,1LLU),_1ab2133dc_Range32(67003LLU,67004LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__WANCHO = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(123584LLU,123641LLU,1LLU),_1ab2133dc_Range32(123647LLU,123647LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__WARANG_CITI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(71840LLU,71922LLU,1LLU),_1ab2133dc_Range32(71935LLU,71935LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__YEZIDI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69248LLU,69289LLU,1LLU),_1ab2133dc_Range32(69291LLU,69293LLU,1LLU),_1ab2133dc_Range32(69296LLU,69297LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__YI = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(40960LLU,42124LLU,1LLU),_1ab2133dc_Range16(42128LLU,42182LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ZANABAZAR_SQUARE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(72192LLU,72263LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ADLAM = _1ab04b4cd__ADLAM;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_AHOM = _1ab04b4cd__AHOM;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ANATOLIAN_HIEROGLYPHS = _1ab04b4cd__ANATOLIAN_HIEROGLYPHS;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ARABIC = _1ab04b4cd__ARABIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ARMENIAN = _1ab04b4cd__ARMENIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_AVESTAN = _1ab04b4cd__AVESTAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_BALINESE = _1ab04b4cd__BALINESE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_BAMUM = _1ab04b4cd__BAMUM;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_BASSA_VAH = _1ab04b4cd__BASSA_VAH;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_BATAK = _1ab04b4cd__BATAK;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_BENGALI = _1ab04b4cd__BENGALI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_BHAIKSUKI = _1ab04b4cd__BHAIKSUKI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_BOPOMOFO = _1ab04b4cd__BOPOMOFO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_BRAHMI = _1ab04b4cd__BRAHMI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_BRAILLE = _1ab04b4cd__BRAILLE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_BUGINESE = _1ab04b4cd__BUGINESE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_BUHID = _1ab04b4cd__BUHID;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CANADIAN_ABORIGINAL = _1ab04b4cd__CANADIAN_ABORIGINAL;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CARIAN = _1ab04b4cd__CARIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CAUCASIAN_ALBANIAN = _1ab04b4cd__CAUCASIAN_ALBANIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CHAKMA = _1ab04b4cd__CHAKMA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CHAM = _1ab04b4cd__CHAM;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CHEROKEE = _1ab04b4cd__CHEROKEE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CHORASMIAN = _1ab04b4cd__CHORASMIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_COMMON = _1ab04b4cd__COMMON;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_COPTIC = _1ab04b4cd__COPTIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CUNEIFORM = _1ab04b4cd__CUNEIFORM;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CYPRIOT = _1ab04b4cd__CYPRIOT;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CYPRO_MINOAN = _1ab04b4cd__CYPRO_MINOAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_CYRILLIC = _1ab04b4cd__CYRILLIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_DESERET = _1ab04b4cd__DESERET;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_DEVANAGARI = _1ab04b4cd__DEVANAGARI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_DIVES_AKURU = _1ab04b4cd__DIVES_AKURU;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_DOGRA = _1ab04b4cd__DOGRA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_DUPLOYAN = _1ab04b4cd__DUPLOYAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_EGYPTIAN_HIEROGLYPHS = _1ab04b4cd__EGYPTIAN_HIEROGLYPHS;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ELBASAN = _1ab04b4cd__ELBASAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ELYMAIC = _1ab04b4cd__ELYMAIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ETHIOPIC = _1ab04b4cd__ETHIOPIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_GEORGIAN = _1ab04b4cd__GEORGIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_GLAGOLITIC = _1ab04b4cd__GLAGOLITIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_GOTHIC = _1ab04b4cd__GOTHIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_GRANTHA = _1ab04b4cd__GRANTHA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_GREEK = _1ab04b4cd__GREEK;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_GUJARATI = _1ab04b4cd__GUJARATI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_GUNJALA_GONDI = _1ab04b4cd__GUNJALA_GONDI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_GURMUKHI = _1ab04b4cd__GURMUKHI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_HAN = _1ab04b4cd__HAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_HANGUL = _1ab04b4cd__HANGUL;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_HANIFI_ROHINGYA = _1ab04b4cd__HANIFI_ROHINGYA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_HANUNOO = _1ab04b4cd__HANUNOO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_HATRAN = _1ab04b4cd__HATRAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_HEBREW = _1ab04b4cd__HEBREW;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_HIRAGANA = _1ab04b4cd__HIRAGANA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_IMPERIAL_ARAMAIC = _1ab04b4cd__IMPERIAL_ARAMAIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_INHERITED = _1ab04b4cd__INHERITED;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_INSCRIPTIONAL_PAHLAVI = _1ab04b4cd__INSCRIPTIONAL_PAHLAVI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_INSCRIPTIONAL_PARTHIAN = _1ab04b4cd__INSCRIPTIONAL_PARTHIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_JAVANESE = _1ab04b4cd__JAVANESE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_KAITHI = _1ab04b4cd__KAITHI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_KANNADA = _1ab04b4cd__KANNADA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_KATAKANA = _1ab04b4cd__KATAKANA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_KAWI = _1ab04b4cd__KAWI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_KAYAH_LI = _1ab04b4cd__KAYAH_LI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_KHAROSHTHI = _1ab04b4cd__KHAROSHTHI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_KHITAN_SMALL_SCRIPT = _1ab04b4cd__KHITAN_SMALL_SCRIPT;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_KHMER = _1ab04b4cd__KHMER;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_KHOJKI = _1ab04b4cd__KHOJKI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_KHUDAWADI = _1ab04b4cd__KHUDAWADI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LAO = _1ab04b4cd__LAO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LATIN = _1ab04b4cd__LATIN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LEPCHA = _1ab04b4cd__LEPCHA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LIMBU = _1ab04b4cd__LIMBU;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LINEAR_A = _1ab04b4cd__LINEAR_A;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LINEAR_B = _1ab04b4cd__LINEAR_B;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LISU = _1ab04b4cd__LISU;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LYCIAN = _1ab04b4cd__LYCIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LYDIAN = _1ab04b4cd__LYDIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MAHAJANI = _1ab04b4cd__MAHAJANI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MAKASAR = _1ab04b4cd__MAKASAR;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MALAYALAM = _1ab04b4cd__MALAYALAM;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MANDAIC = _1ab04b4cd__MANDAIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MANICHAEAN = _1ab04b4cd__MANICHAEAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MARCHEN = _1ab04b4cd__MARCHEN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MASARAM_GONDI = _1ab04b4cd__MASARAM_GONDI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MEDEFAIDRIN = _1ab04b4cd__MEDEFAIDRIN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MEETEI_MAYEK = _1ab04b4cd__MEETEI_MAYEK;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MENDE_KIKAKUI = _1ab04b4cd__MENDE_KIKAKUI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MEROITIC_CURSIVE = _1ab04b4cd__MEROITIC_CURSIVE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MEROITIC_HIEROGLYPHS = _1ab04b4cd__MEROITIC_HIEROGLYPHS;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MIAO = _1ab04b4cd__MIAO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MODI = _1ab04b4cd__MODI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MONGOLIAN = _1ab04b4cd__MONGOLIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MRO = _1ab04b4cd__MRO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MULTANI = _1ab04b4cd__MULTANI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_MYANMAR = _1ab04b4cd__MYANMAR;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_NABATAEAN = _1ab04b4cd__NABATAEAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_NAG_MUNDARI = _1ab04b4cd__NAG_MUNDARI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_NANDINAGARI = _1ab04b4cd__NANDINAGARI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_NEW_TAI_LUE = _1ab04b4cd__NEW_TAI_LUE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_NEWA = _1ab04b4cd__NEWA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_NKO = _1ab04b4cd__NKO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_NUSHU = _1ab04b4cd__NUSHU;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_NYIAKENG_PUACHUE_HMONG = _1ab04b4cd__NYIAKENG_PUACHUE_HMONG;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OGHAM = _1ab04b4cd__OGHAM;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OL_CHIKI = _1ab04b4cd__OL_CHIKI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OLD_HUNGARIAN = _1ab04b4cd__OLD_HUNGARIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OLD_ITALIC = _1ab04b4cd__OLD_ITALIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OLD_NORTH_ARABIAN = _1ab04b4cd__OLD_NORTH_ARABIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OLD_PERMIC = _1ab04b4cd__OLD_PERMIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OLD_PERSIAN = _1ab04b4cd__OLD_PERSIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OLD_SOGDIAN = _1ab04b4cd__OLD_SOGDIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OLD_SOUTH_ARABIAN = _1ab04b4cd__OLD_SOUTH_ARABIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OLD_TURKIC = _1ab04b4cd__OLD_TURKIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OLD_UYGHUR = _1ab04b4cd__OLD_UYGHUR;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ORIYA = _1ab04b4cd__ORIYA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OSAGE = _1ab04b4cd__OSAGE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OSMANYA = _1ab04b4cd__OSMANYA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PAHAWH_HMONG = _1ab04b4cd__PAHAWH_HMONG;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PALMYRENE = _1ab04b4cd__PALMYRENE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PAU_CIN_HAU = _1ab04b4cd__PAU_CIN_HAU;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PHAGS_PA = _1ab04b4cd__PHAGS_PA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PHOENICIAN = _1ab04b4cd__PHOENICIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PSALTER_PAHLAVI = _1ab04b4cd__PSALTER_PAHLAVI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_REJANG = _1ab04b4cd__REJANG;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_RUNIC = _1ab04b4cd__RUNIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SAMARITAN = _1ab04b4cd__SAMARITAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SAURASHTRA = _1ab04b4cd__SAURASHTRA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SHARADA = _1ab04b4cd__SHARADA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SHAVIAN = _1ab04b4cd__SHAVIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SIDDHAM = _1ab04b4cd__SIDDHAM;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SIGN_WRITING = _1ab04b4cd__SIGN_WRITING;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SINHALA = _1ab04b4cd__SINHALA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SOGDIAN = _1ab04b4cd__SOGDIAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SORA_SOMPENG = _1ab04b4cd__SORA_SOMPENG;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SOYOMBO = _1ab04b4cd__SOYOMBO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SUNDANESE = _1ab04b4cd__SUNDANESE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SYLOTI_NAGRI = _1ab04b4cd__SYLOTI_NAGRI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SYRIAC = _1ab04b4cd__SYRIAC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TAGALOG = _1ab04b4cd__TAGALOG;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TAGBANWA = _1ab04b4cd__TAGBANWA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TAI_LE = _1ab04b4cd__TAI_LE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TAI_THAM = _1ab04b4cd__TAI_THAM;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TAI_VIET = _1ab04b4cd__TAI_VIET;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TAKRI = _1ab04b4cd__TAKRI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TAMIL = _1ab04b4cd__TAMIL;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TANGSA = _1ab04b4cd__TANGSA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TANGUT = _1ab04b4cd__TANGUT;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TELUGU = _1ab04b4cd__TELUGU;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_THAANA = _1ab04b4cd__THAANA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_THAI = _1ab04b4cd__THAI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TIBETAN = _1ab04b4cd__TIBETAN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TIFINAGH = _1ab04b4cd__TIFINAGH;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TIRHUTA = _1ab04b4cd__TIRHUTA;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TOTO = _1ab04b4cd__TOTO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_UGARITIC = _1ab04b4cd__UGARITIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_VAI = _1ab04b4cd__VAI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_VITHKUQI = _1ab04b4cd__VITHKUQI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_WANCHO = _1ab04b4cd__WANCHO;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_WARANG_CITI = _1ab04b4cd__WARANG_CITI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_YEZIDI = _1ab04b4cd__YEZIDI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_YI = _1ab04b4cd__YI;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ZANABAZAR_SQUARE = _1ab04b4cd__ZANABAZAR_SQUARE;
static jule::Map<jule::Str,jule::Ref<_1ab2133dc_RangeTable>> _1ab04b4cd_SCRIPTS = jule::Map<jule::Str,jule::Ref<_1ab2133dc_RangeTable>>({{jule::Str("Adlam", 5),_1ab04b4cd_ADLAM},{jule::Str("Ahom", 4),_1ab04b4cd_AHOM},{jule::Str("Anatolian_Hieroglyphs", 21),_1ab04b4cd_ANATOLIAN_HIEROGLYPHS},{jule::Str("Arabic", 6),_1ab04b4cd_ARABIC},{jule::Str("Armenian", 8),_1ab04b4cd_ARMENIAN},{jule::Str("Avestan", 7),_1ab04b4cd_AVESTAN},{jule::Str("Balinese", 8),_1ab04b4cd_BALINESE},{jule::Str("Bamum", 5),_1ab04b4cd_BAMUM},{jule::Str("Bassa_Vah", 9),_1ab04b4cd_BASSA_VAH},{jule::Str("Batak", 5),_1ab04b4cd_BATAK},{jule::Str("Bengali", 7),_1ab04b4cd_BENGALI},{jule::Str("Bhaiksuki", 9),_1ab04b4cd_BHAIKSUKI},{jule::Str("Bopomofo", 8),_1ab04b4cd_BOPOMOFO},{jule::Str("Brahmi", 6),_1ab04b4cd_BRAHMI},{jule::Str("Braille", 7),_1ab04b4cd_BRAILLE},{jule::Str("Buginese", 8),_1ab04b4cd_BUGINESE},{jule::Str("Buhid", 5),_1ab04b4cd_BUHID},{jule::Str("Canadian_Aboriginal", 19),_1ab04b4cd_CANADIAN_ABORIGINAL},{jule::Str("Carian", 6),_1ab04b4cd_CARIAN},{jule::Str("Caucasian_Albanian", 18),_1ab04b4cd_CAUCASIAN_ALBANIAN},{jule::Str("Chakma", 6),_1ab04b4cd_CHAKMA},{jule::Str("Cham", 4),_1ab04b4cd_CHAM},{jule::Str("Cherokee", 8),_1ab04b4cd_CHEROKEE},{jule::Str("Chorasmian", 10),_1ab04b4cd_CHORASMIAN},{jule::Str("Common", 6),_1ab04b4cd_COMMON},{jule::Str("Coptic", 6),_1ab04b4cd_COPTIC},{jule::Str("Cuneiform", 9),_1ab04b4cd_CUNEIFORM},{jule::Str("Cypriot", 7),_1ab04b4cd_CYPRIOT},{jule::Str("Cypro_Minoan", 12),_1ab04b4cd_CYPRO_MINOAN},{jule::Str("Cyrillic", 8),_1ab04b4cd_CYRILLIC},{jule::Str("Deseret", 7),_1ab04b4cd_DESERET},{jule::Str("Devanagari", 10),_1ab04b4cd_DEVANAGARI},{jule::Str("Dives_Akuru", 11),_1ab04b4cd_DIVES_AKURU},{jule::Str("Dogra", 5),_1ab04b4cd_DOGRA},{jule::Str("Duployan", 8),_1ab04b4cd_DUPLOYAN},{jule::Str("Egyptian_Hieroglyphs", 20),_1ab04b4cd_EGYPTIAN_HIEROGLYPHS},{jule::Str("Elbasan", 7),_1ab04b4cd_ELBASAN},{jule::Str("Elymaic", 7),_1ab04b4cd_ELYMAIC},{jule::Str("Ethiopic", 8),_1ab04b4cd_ETHIOPIC},{jule::Str("Georgian", 8),_1ab04b4cd_GEORGIAN},{jule::Str("Glagolitic", 10),_1ab04b4cd_GLAGOLITIC},{jule::Str("Gothic", 6),_1ab04b4cd_GOTHIC},{jule::Str("Grantha", 7),_1ab04b4cd_GRANTHA},{jule::Str("Greek", 5),_1ab04b4cd_GREEK},{jule::Str("Gujarati", 8),_1ab04b4cd_GUJARATI},{jule::Str("Gunjala_Gondi", 13),_1ab04b4cd_GUNJALA_GONDI},{jule::Str("Gurmukhi", 8),_1ab04b4cd_GURMUKHI},{jule::Str("Han", 3),_1ab04b4cd_HAN},{jule::Str("Hangul", 6),_1ab04b4cd_HANGUL},{jule::Str("Hanifi_Rohingya", 15),_1ab04b4cd_HANIFI_ROHINGYA},{jule::Str("Hanunoo", 7),_1ab04b4cd_HANUNOO},{jule::Str("Hatran", 6),_1ab04b4cd_HATRAN},{jule::Str("Hebrew", 6),_1ab04b4cd_HEBREW},{jule::Str("Hiragana", 8),_1ab04b4cd_HIRAGANA},{jule::Str("Imperial_Aramaic", 16),_1ab04b4cd_IMPERIAL_ARAMAIC},{jule::Str("Inherited", 9),_1ab04b4cd_INHERITED},{jule::Str("Inscriptional_Pahlavi", 21),_1ab04b4cd_INSCRIPTIONAL_PAHLAVI},{jule::Str("Inscriptional_Parthian", 22),_1ab04b4cd_INSCRIPTIONAL_PARTHIAN},{jule::Str("Javanese", 8),_1ab04b4cd_JAVANESE},{jule::Str("Kaithi", 6),_1ab04b4cd_KAITHI},{jule::Str("Kannada", 7),_1ab04b4cd_KANNADA},{jule::Str("Katakana", 8),_1ab04b4cd_KATAKANA},{jule::Str("Kawi", 4),_1ab04b4cd_KAWI},{jule::Str("Kayah_Li", 8),_1ab04b4cd_KAYAH_LI},{jule::Str("Kharoshthi", 10),_1ab04b4cd_KHAROSHTHI},{jule::Str("Khitan_Small_Script", 19),_1ab04b4cd_KHITAN_SMALL_SCRIPT},{jule::Str("Khmer", 5),_1ab04b4cd_KHMER},{jule::Str("Khojki", 6),_1ab04b4cd_KHOJKI},{jule::Str("Khudawadi", 9),_1ab04b4cd_KHUDAWADI},{jule::Str("Lao", 3),_1ab04b4cd_LAO},{jule::Str("Latin", 5),_1ab04b4cd_LATIN},{jule::Str("Lepcha", 6),_1ab04b4cd_LEPCHA},{jule::Str("Limbu", 5),_1ab04b4cd_LIMBU},{jule::Str("Linear_A", 8),_1ab04b4cd_LINEAR_A},{jule::Str("Linear_B", 8),_1ab04b4cd_LINEAR_B},{jule::Str("Lisu", 4),_1ab04b4cd_LISU},{jule::Str("Lycian", 6),_1ab04b4cd_LYCIAN},{jule::Str("Lydian", 6),_1ab04b4cd_LYDIAN},{jule::Str("Mahajani", 8),_1ab04b4cd_MAHAJANI},{jule::Str("Makasar", 7),_1ab04b4cd_MAKASAR},{jule::Str("Malayalam", 9),_1ab04b4cd_MALAYALAM},{jule::Str("Mandaic", 7),_1ab04b4cd_MANDAIC},{jule::Str("Manichaean", 10),_1ab04b4cd_MANICHAEAN},{jule::Str("Marchen", 7),_1ab04b4cd_MARCHEN},{jule::Str("Masaram_Gondi", 13),_1ab04b4cd_MASARAM_GONDI},{jule::Str("Medefaidrin", 11),_1ab04b4cd_MEDEFAIDRIN},{jule::Str("Meetei_Mayek", 12),_1ab04b4cd_MEETEI_MAYEK},{jule::Str("Mende_Kikakui", 13),_1ab04b4cd_MENDE_KIKAKUI},{jule::Str("Meroitic_Cursive", 16),_1ab04b4cd_MEROITIC_CURSIVE},{jule::Str("Meroitic_Hieroglyphs", 20),_1ab04b4cd_MEROITIC_HIEROGLYPHS},{jule::Str("Miao", 4),_1ab04b4cd_MIAO},{jule::Str("Modi", 4),_1ab04b4cd_MODI},{jule::Str("Mongolian", 9),_1ab04b4cd_MONGOLIAN},{jule::Str("Mro", 3),_1ab04b4cd_MRO},{jule::Str("Multani", 7),_1ab04b4cd_MULTANI},{jule::Str("Myanmar", 7),_1ab04b4cd_MYANMAR},{jule::Str("Nabataean", 9),_1ab04b4cd_NABATAEAN},{jule::Str("Nag_Mundari", 11),_1ab04b4cd_NAG_MUNDARI},{jule::Str("Nandinagari", 11),_1ab04b4cd_NANDINAGARI},{jule::Str("New_Tai_Lue", 11),_1ab04b4cd_NEW_TAI_LUE},{jule::Str("Newa", 4),_1ab04b4cd_NEWA},{jule::Str("Nko", 3),_1ab04b4cd_NKO},{jule::Str("Nushu", 5),_1ab04b4cd_NUSHU},{jule::Str("Nyiakeng_Puachue_Hmong", 22),_1ab04b4cd_NYIAKENG_PUACHUE_HMONG},{jule::Str("Ogham", 5),_1ab04b4cd_OGHAM},{jule::Str("Ol_Chiki", 8),_1ab04b4cd_OL_CHIKI},{jule::Str("Old_Hungarian", 13),_1ab04b4cd_OLD_HUNGARIAN},{jule::Str("Old_Italic", 10),_1ab04b4cd_OLD_ITALIC},{jule::Str("Old_North_Arabian", 17),_1ab04b4cd_OLD_NORTH_ARABIAN},{jule::Str("Old_Permic", 10),_1ab04b4cd_OLD_PERMIC},{jule::Str("Old_Persian", 11),_1ab04b4cd_OLD_PERSIAN},{jule::Str("Old_Sogdian", 11),_1ab04b4cd_OLD_SOGDIAN},{jule::Str("Old_South_Arabian", 17),_1ab04b4cd_OLD_SOUTH_ARABIAN},{jule::Str("Old_Turkic", 10),_1ab04b4cd_OLD_TURKIC},{jule::Str("Old_Uyghur", 10),_1ab04b4cd_OLD_UYGHUR},{jule::Str("Oriya", 5),_1ab04b4cd_ORIYA},{jule::Str("Osage", 5),_1ab04b4cd_OSAGE},{jule::Str("Osmanya", 7),_1ab04b4cd_OSMANYA},{jule::Str("Pahawh_Hmong", 12),_1ab04b4cd_PAHAWH_HMONG},{jule::Str("Palmyrene", 9),_1ab04b4cd_PALMYRENE},{jule::Str("Pau_Cin_Hau", 11),_1ab04b4cd_PAU_CIN_HAU},{jule::Str("Phags_Pa", 8),_1ab04b4cd_PHAGS_PA},{jule::Str("Phoenician", 10),_1ab04b4cd_PHOENICIAN},{jule::Str("Psalter_Pahlavi", 15),_1ab04b4cd_PSALTER_PAHLAVI},{jule::Str("Rejang", 6),_1ab04b4cd_REJANG},{jule::Str("Runic", 5),_1ab04b4cd_RUNIC},{jule::Str("Samaritan", 9),_1ab04b4cd_SAMARITAN},{jule::Str("Saurashtra", 10),_1ab04b4cd_SAURASHTRA},{jule::Str("Sharada", 7),_1ab04b4cd_SHARADA},{jule::Str("Shavian", 7),_1ab04b4cd_SHAVIAN},{jule::Str("Siddham", 7),_1ab04b4cd_SIDDHAM},{jule::Str("SignWriting", 11),_1ab04b4cd_SIGN_WRITING},{jule::Str("Sinhala", 7),_1ab04b4cd_SINHALA},{jule::Str("Sogdian", 7),_1ab04b4cd_SOGDIAN},{jule::Str("Sora_Sompeng", 12),_1ab04b4cd_SORA_SOMPENG},{jule::Str("Soyombo", 7),_1ab04b4cd_SOYOMBO},{jule::Str("Sundanese", 9),_1ab04b4cd_SUNDANESE},{jule::Str("Syloti_Nagri", 12),_1ab04b4cd_SYLOTI_NAGRI},{jule::Str("Syriac", 6),_1ab04b4cd_SYRIAC},{jule::Str("Tagalog", 7),_1ab04b4cd_TAGALOG},{jule::Str("Tagbanwa", 8),_1ab04b4cd_TAGBANWA},{jule::Str("Tai_Le", 6),_1ab04b4cd_TAI_LE},{jule::Str("Tai_Tham", 8),_1ab04b4cd_TAI_THAM},{jule::Str("Tai_Viet", 8),_1ab04b4cd_TAI_VIET},{jule::Str("Takri", 5),_1ab04b4cd_TAKRI},{jule::Str("Tamil", 5),_1ab04b4cd_TAMIL},{jule::Str("Tangsa", 6),_1ab04b4cd_TANGSA},{jule::Str("Tangut", 6),_1ab04b4cd_TANGUT},{jule::Str("Telugu", 6),_1ab04b4cd_TELUGU},{jule::Str("Thaana", 6),_1ab04b4cd_THAANA},{jule::Str("Thai", 4),_1ab04b4cd_THAI},{jule::Str("Tibetan", 7),_1ab04b4cd_TIBETAN},{jule::Str("Tifinagh", 8),_1ab04b4cd_TIFINAGH},{jule::Str("Tirhuta", 7),_1ab04b4cd_TIRHUTA},{jule::Str("Toto", 4),_1ab04b4cd_TOTO},{jule::Str("Ugaritic", 8),_1ab04b4cd_UGARITIC},{jule::Str("Vai", 3),_1ab04b4cd_VAI},{jule::Str("Vithkuqi", 8),_1ab04b4cd_VITHKUQI},{jule::Str("Wancho", 6),_1ab04b4cd_WANCHO},{jule::Str("Warang_Citi", 11),_1ab04b4cd_WARANG_CITI},{jule::Str("Yezidi", 6),_1ab04b4cd_YEZIDI},{jule::Str("Yi", 2),_1ab04b4cd_YI},{jule::Str("Zanabazar_Square", 16),_1ab04b4cd_ZANABAZAR_SQUARE}});
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__ASCII_HEX_DIGIT = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(48LLU,57LLU,1LLU),_1ab2133dc_Range16(65LLU,70LLU,1LLU),_1ab2133dc_Range16(97LLU,102LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),3LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__BIDI_CONTROL = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(1564LLU,8206LLU,6642LLU),_1ab2133dc_Range16(8207LLU,8234LLU,27LLU),_1ab2133dc_Range16(8235LLU,8238LLU,1LLU),_1ab2133dc_Range16(8294LLU,8297LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__DASH = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(45LLU,1418LLU,1373LLU),_1ab2133dc_Range16(1470LLU,5120LLU,3650LLU),_1ab2133dc_Range16(6150LLU,8208LLU,2058LLU),_1ab2133dc_Range16(8209LLU,8213LLU,1LLU),_1ab2133dc_Range16(8275LLU,8315LLU,40LLU),_1ab2133dc_Range16(8331LLU,8722LLU,391LLU),_1ab2133dc_Range16(11799LLU,11802LLU,3LLU),_1ab2133dc_Range16(11834LLU,11835LLU,1LLU),_1ab2133dc_Range16(11840LLU,11869LLU,29LLU),_1ab2133dc_Range16(12316LLU,12336LLU,20LLU),_1ab2133dc_Range16(12448LLU,65073LLU,52625LLU),_1ab2133dc_Range16(65074LLU,65112LLU,38LLU),_1ab2133dc_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__DEPRECATED = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(329LLU,1651LLU,1322LLU),_1ab2133dc_Range16(3959LLU,3961LLU,2LLU),_1ab2133dc_Range16(6051LLU,6052LLU,1LLU),_1ab2133dc_Range16(8298LLU,8303LLU,1LLU),_1ab2133dc_Range16(9001LLU,9002LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(917505LLU,917505LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__DIACRITIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(94LLU,96LLU,2LLU),_1ab2133dc_Range16(168LLU,175LLU,7LLU),_1ab2133dc_Range16(180LLU,183LLU,3LLU),_1ab2133dc_Range16(184LLU,688LLU,504LLU),_1ab2133dc_Range16(689LLU,846LLU,1LLU),_1ab2133dc_Range16(848LLU,855LLU,1LLU),_1ab2133dc_Range16(861LLU,866LLU,1LLU),_1ab2133dc_Range16(884LLU,885LLU,1LLU),_1ab2133dc_Range16(890LLU,900LLU,10LLU),_1ab2133dc_Range16(901LLU,1155LLU,254LLU),_1ab2133dc_Range16(1156LLU,1159LLU,1LLU),_1ab2133dc_Range16(1369LLU,1425LLU,56LLU),_1ab2133dc_Range16(1426LLU,1441LLU,1LLU),_1ab2133dc_Range16(1443LLU,1469LLU,1LLU),_1ab2133dc_Range16(1471LLU,1473LLU,2LLU),_1ab2133dc_Range16(1474LLU,1476LLU,2LLU),_1ab2133dc_Range16(1611LLU,1618LLU,1LLU),_1ab2133dc_Range16(1623LLU,1624LLU,1LLU),_1ab2133dc_Range16(1759LLU,1760LLU,1LLU),_1ab2133dc_Range16(1765LLU,1766LLU,1LLU),_1ab2133dc_Range16(1770LLU,1772LLU,1LLU),_1ab2133dc_Range16(1840LLU,1866LLU,1LLU),_1ab2133dc_Range16(1958LLU,1968LLU,1LLU),_1ab2133dc_Range16(2027LLU,2037LLU,1LLU),_1ab2133dc_Range16(2072LLU,2073LLU,1LLU),_1ab2133dc_Range16(2200LLU,2207LLU,1LLU),_1ab2133dc_Range16(2249LLU,2258LLU,1LLU),_1ab2133dc_Range16(2275LLU,2302LLU,1LLU),_1ab2133dc_Range16(2364LLU,2381LLU,17LLU),_1ab2133dc_Range16(2385LLU,2388LLU,1LLU),_1ab2133dc_Range16(2417LLU,2492LLU,75LLU),_1ab2133dc_Range16(2509LLU,2620LLU,111LLU),_1ab2133dc_Range16(2637LLU,2748LLU,111LLU),_1ab2133dc_Range16(2765LLU,2813LLU,48LLU),_1ab2133dc_Range16(2814LLU,2815LLU,1LLU),_1ab2133dc_Range16(2876LLU,2893LLU,17LLU),_1ab2133dc_Range16(2901LLU,3021LLU,120LLU),_1ab2133dc_Range16(3132LLU,3149LLU,17LLU),_1ab2133dc_Range16(3260LLU,3277LLU,17LLU),_1ab2133dc_Range16(3387LLU,3388LLU,1LLU),_1ab2133dc_Range16(3405LLU,3655LLU,125LLU),_1ab2133dc_Range16(3656LLU,3660LLU,1LLU),_1ab2133dc_Range16(3662LLU,3770LLU,108LLU),_1ab2133dc_Range16(3784LLU,3788LLU,1LLU),_1ab2133dc_Range16(3864LLU,3865LLU,1LLU),_1ab2133dc_Range16(3893LLU,3897LLU,2LLU),_1ab2133dc_Range16(3902LLU,3903LLU,1LLU),_1ab2133dc_Range16(3970LLU,3972LLU,1LLU),_1ab2133dc_Range16(3974LLU,3975LLU,1LLU),_1ab2133dc_Range16(4038LLU,4151LLU,113LLU),_1ab2133dc_Range16(4153LLU,4154LLU,1LLU),_1ab2133dc_Range16(4195LLU,4196LLU,1LLU),_1ab2133dc_Range16(4201LLU,4205LLU,1LLU),_1ab2133dc_Range16(4231LLU,4237LLU,1LLU),_1ab2133dc_Range16(4239LLU,4250LLU,11LLU),_1ab2133dc_Range16(4251LLU,4957LLU,706LLU),_1ab2133dc_Range16(4958LLU,4959LLU,1LLU),_1ab2133dc_Range16(5908LLU,5909LLU,1LLU),_1ab2133dc_Range16(6089LLU,6099LLU,1LLU),_1ab2133dc_Range16(6109LLU,6457LLU,348LLU),_1ab2133dc_Range16(6458LLU,6459LLU,1LLU),_1ab2133dc_Range16(6773LLU,6780LLU,1LLU),_1ab2133dc_Range16(6783LLU,6832LLU,49LLU),_1ab2133dc_Range16(6833LLU,6846LLU,1LLU),_1ab2133dc_Range16(6849LLU,6859LLU,1LLU),_1ab2133dc_Range16(6964LLU,6980LLU,16LLU),_1ab2133dc_Range16(7019LLU,7027LLU,1LLU),_1ab2133dc_Range16(7082LLU,7083LLU,1LLU),_1ab2133dc_Range16(7222LLU,7223LLU,1LLU),_1ab2133dc_Range16(7288LLU,7293LLU,1LLU),_1ab2133dc_Range16(7376LLU,7400LLU,1LLU),_1ab2133dc_Range16(7405LLU,7412LLU,7LLU),_1ab2133dc_Range16(7415LLU,7417LLU,1LLU),_1ab2133dc_Range16(7468LLU,7530LLU,1LLU),_1ab2133dc_Range16(7620LLU,7631LLU,1LLU),_1ab2133dc_Range16(7669LLU,7679LLU,1LLU),_1ab2133dc_Range16(8125LLU,8127LLU,2LLU),_1ab2133dc_Range16(8128LLU,8129LLU,1LLU),_1ab2133dc_Range16(8141LLU,8143LLU,1LLU),_1ab2133dc_Range16(8157LLU,8159LLU,1LLU),_1ab2133dc_Range16(8173LLU,8175LLU,1LLU),_1ab2133dc_Range16(8189LLU,8190LLU,1LLU),_1ab2133dc_Range16(11503LLU,11505LLU,1LLU),_1ab2133dc_Range16(11823LLU,12330LLU,507LLU),_1ab2133dc_Range16(12331LLU,12335LLU,1LLU),_1ab2133dc_Range16(12441LLU,12444LLU,1LLU),_1ab2133dc_Range16(12540LLU,42607LLU,30067LLU),_1ab2133dc_Range16(42620LLU,42621LLU,1LLU),_1ab2133dc_Range16(42623LLU,42652LLU,29LLU),_1ab2133dc_Range16(42653LLU,42736LLU,83LLU),_1ab2133dc_Range16(42737LLU,42752LLU,15LLU),_1ab2133dc_Range16(42753LLU,42785LLU,1LLU),_1ab2133dc_Range16(42888LLU,42890LLU,1LLU),_1ab2133dc_Range16(43000LLU,43001LLU,1LLU),_1ab2133dc_Range16(43204LLU,43232LLU,28LLU),_1ab2133dc_Range16(43233LLU,43249LLU,1LLU),_1ab2133dc_Range16(43307LLU,43310LLU,1LLU),_1ab2133dc_Range16(43347LLU,43443LLU,96LLU),_1ab2133dc_Range16(43456LLU,43493LLU,37LLU),_1ab2133dc_Range16(43643LLU,43645LLU,1LLU),_1ab2133dc_Range16(43711LLU,43714LLU,1LLU),_1ab2133dc_Range16(43766LLU,43867LLU,101LLU),_1ab2133dc_Range16(43868LLU,43871LLU,1LLU),_1ab2133dc_Range16(43881LLU,43883LLU,1LLU),_1ab2133dc_Range16(44012LLU,44013LLU,1LLU),_1ab2133dc_Range16(64286LLU,65056LLU,770LLU),_1ab2133dc_Range16(65057LLU,65071LLU,1LLU),_1ab2133dc_Range16(65342LLU,65344LLU,2LLU),_1ab2133dc_Range16(65392LLU,65438LLU,46LLU),_1ab2133dc_Range16(65439LLU,65507LLU,68LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66272LLU,67456LLU,1184LLU),_1ab2133dc_Range32(67457LLU,67461LLU,1LLU),_1ab2133dc_Range32(67463LLU,67504LLU,1LLU),_1ab2133dc_Range32(67506LLU,67514LLU,1LLU),_1ab2133dc_Range32(68325LLU,68326LLU,1LLU),_1ab2133dc_Range32(68898LLU,68903LLU,1LLU),_1ab2133dc_Range32(69373LLU,69375LLU,1LLU),_1ab2133dc_Range32(69446LLU,69456LLU,1LLU),_1ab2133dc_Range32(69506LLU,69509LLU,1LLU),_1ab2133dc_Range32(69702LLU,69744LLU,42LLU),_1ab2133dc_Range32(69817LLU,69818LLU,1LLU),_1ab2133dc_Range32(69939LLU,69940LLU,1LLU),_1ab2133dc_Range32(70003LLU,70080LLU,77LLU),_1ab2133dc_Range32(70090LLU,70092LLU,1LLU),_1ab2133dc_Range32(70197LLU,70198LLU,1LLU),_1ab2133dc_Range32(70377LLU,70378LLU,1LLU),_1ab2133dc_Range32(70460LLU,70477LLU,17LLU),_1ab2133dc_Range32(70502LLU,70508LLU,1LLU),_1ab2133dc_Range32(70512LLU,70516LLU,1LLU),_1ab2133dc_Range32(70722LLU,70726LLU,4LLU),_1ab2133dc_Range32(70850LLU,70851LLU,1LLU),_1ab2133dc_Range32(71103LLU,71104LLU,1LLU),_1ab2133dc_Range32(71231LLU,71350LLU,119LLU),_1ab2133dc_Range32(71351LLU,71467LLU,116LLU),_1ab2133dc_Range32(71737LLU,71738LLU,1LLU),_1ab2133dc_Range32(71997LLU,71998LLU,1LLU),_1ab2133dc_Range32(72003LLU,72160LLU,157LLU),_1ab2133dc_Range32(72244LLU,72263LLU,19LLU),_1ab2133dc_Range32(72345LLU,72767LLU,422LLU),_1ab2133dc_Range32(73026LLU,73028LLU,2LLU),_1ab2133dc_Range32(73029LLU,73111LLU,82LLU),_1ab2133dc_Range32(78919LLU,78933LLU,1LLU),_1ab2133dc_Range32(92912LLU,92916LLU,1LLU),_1ab2133dc_Range32(92976LLU,92982LLU,1LLU),_1ab2133dc_Range32(94095LLU,94111LLU,1LLU),_1ab2133dc_Range32(94192LLU,94193LLU,1LLU),_1ab2133dc_Range32(110576LLU,110579LLU,1LLU),_1ab2133dc_Range32(110581LLU,110587LLU,1LLU),_1ab2133dc_Range32(110589LLU,110590LLU,1LLU),_1ab2133dc_Range32(118528LLU,118573LLU,1LLU),_1ab2133dc_Range32(118576LLU,118598LLU,1LLU),_1ab2133dc_Range32(119143LLU,119145LLU,1LLU),_1ab2133dc_Range32(119149LLU,119154LLU,1LLU),_1ab2133dc_Range32(119163LLU,119170LLU,1LLU),_1ab2133dc_Range32(119173LLU,119179LLU,1LLU),_1ab2133dc_Range32(119210LLU,119213LLU,1LLU),_1ab2133dc_Range32(122928LLU,122989LLU,1LLU),_1ab2133dc_Range32(123184LLU,123190LLU,1LLU),_1ab2133dc_Range32(123566LLU,123628LLU,62LLU),_1ab2133dc_Range32(123629LLU,123631LLU,1LLU),_1ab2133dc_Range32(125136LLU,125142LLU,1LLU),_1ab2133dc_Range32(125252LLU,125254LLU,1LLU),_1ab2133dc_Range32(125256LLU,125258LLU,1LLU)}),3LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__EXTENDER = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(183LLU,720LLU,537LLU),_1ab2133dc_Range16(721LLU,1600LLU,879LLU),_1ab2133dc_Range16(2042LLU,2901LLU,859LLU),_1ab2133dc_Range16(3654LLU,3782LLU,128LLU),_1ab2133dc_Range16(6154LLU,6211LLU,57LLU),_1ab2133dc_Range16(6823LLU,7222LLU,399LLU),_1ab2133dc_Range16(7291LLU,12293LLU,5002LLU),_1ab2133dc_Range16(12337LLU,12341LLU,1LLU),_1ab2133dc_Range16(12445LLU,12446LLU,1LLU),_1ab2133dc_Range16(12540LLU,12542LLU,1LLU),_1ab2133dc_Range16(40981LLU,42508LLU,1527LLU),_1ab2133dc_Range16(43471LLU,43494LLU,23LLU),_1ab2133dc_Range16(43632LLU,43741LLU,109LLU),_1ab2133dc_Range16(43763LLU,43764LLU,1LLU),_1ab2133dc_Range16(65392LLU,65392LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(67457LLU,67458LLU,1LLU),_1ab2133dc_Range32(70493LLU,71110LLU,617LLU),_1ab2133dc_Range32(71111LLU,71112LLU,1LLU),_1ab2133dc_Range32(72344LLU,92994LLU,20650LLU),_1ab2133dc_Range32(92995LLU,94176LLU,1181LLU),_1ab2133dc_Range32(94177LLU,94179LLU,2LLU),_1ab2133dc_Range32(123196LLU,123197LLU,1LLU),_1ab2133dc_Range32(125252LLU,125254LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__HEX_DIGIT = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(48LLU,57LLU,1LLU),_1ab2133dc_Range16(65LLU,70LLU,1LLU),_1ab2133dc_Range16(97LLU,102LLU,1LLU),_1ab2133dc_Range16(65296LLU,65305LLU,1LLU),_1ab2133dc_Range16(65313LLU,65318LLU,1LLU),_1ab2133dc_Range16(65345LLU,65350LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),3LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__HYPHEN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(45LLU,173LLU,128LLU),_1ab2133dc_Range16(1418LLU,6150LLU,4732LLU),_1ab2133dc_Range16(8208LLU,8209LLU,1LLU),_1ab2133dc_Range16(11799LLU,12539LLU,740LLU),_1ab2133dc_Range16(65123LLU,65293LLU,170LLU),_1ab2133dc_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),1LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__IDS_BINARY_OPERATOR = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(12272LLU,12273LLU,1LLU),_1ab2133dc_Range16(12276LLU,12283LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__IDS_TRINARY_OPERATOR = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(12274LLU,12275LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__IDEOGRAPHIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(12294LLU,12295LLU,1LLU),_1ab2133dc_Range16(12321LLU,12329LLU,1LLU),_1ab2133dc_Range16(12344LLU,12346LLU,1LLU),_1ab2133dc_Range16(13312LLU,19903LLU,1LLU),_1ab2133dc_Range16(19968LLU,40959LLU,1LLU),_1ab2133dc_Range16(63744LLU,64109LLU,1LLU),_1ab2133dc_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(94180LLU,94208LLU,28LLU),_1ab2133dc_Range32(94209LLU,100343LLU,1LLU),_1ab2133dc_Range32(100352LLU,101589LLU,1LLU),_1ab2133dc_Range32(101632LLU,101640LLU,1LLU),_1ab2133dc_Range32(110960LLU,111355LLU,1LLU),_1ab2133dc_Range32(131072LLU,173791LLU,1LLU),_1ab2133dc_Range32(173824LLU,177977LLU,1LLU),_1ab2133dc_Range32(177984LLU,178205LLU,1LLU),_1ab2133dc_Range32(178208LLU,183969LLU,1LLU),_1ab2133dc_Range32(183984LLU,191456LLU,1LLU),_1ab2133dc_Range32(194560LLU,195101LLU,1LLU),_1ab2133dc_Range32(196608LLU,201546LLU,1LLU),_1ab2133dc_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__JOIN_CONTROL = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(8204LLU,8205LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__LOGICAL_ORDER_EXCEPTION = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(3648LLU,3652LLU,1LLU),_1ab2133dc_Range16(3776LLU,3780LLU,1LLU),_1ab2133dc_Range16(6581LLU,6583LLU,1LLU),_1ab2133dc_Range16(6586LLU,43701LLU,37115LLU),_1ab2133dc_Range16(43702LLU,43705LLU,3LLU),_1ab2133dc_Range16(43707LLU,43708LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__NONCHARACTER_CODE_POINT = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(64976LLU,65007LLU,1LLU),_1ab2133dc_Range16(65534LLU,65535LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(131070LLU,131071LLU,1LLU),_1ab2133dc_Range32(196606LLU,196607LLU,1LLU),_1ab2133dc_Range32(262142LLU,262143LLU,1LLU),_1ab2133dc_Range32(327678LLU,327679LLU,1LLU),_1ab2133dc_Range32(393214LLU,393215LLU,1LLU),_1ab2133dc_Range32(458750LLU,458751LLU,1LLU),_1ab2133dc_Range32(524286LLU,524287LLU,1LLU),_1ab2133dc_Range32(589822LLU,589823LLU,1LLU),_1ab2133dc_Range32(655358LLU,655359LLU,1LLU),_1ab2133dc_Range32(720894LLU,720895LLU,1LLU),_1ab2133dc_Range32(786430LLU,786431LLU,1LLU),_1ab2133dc_Range32(851966LLU,851967LLU,1LLU),_1ab2133dc_Range32(917502LLU,917503LLU,1LLU),_1ab2133dc_Range32(983038LLU,983039LLU,1LLU),_1ab2133dc_Range32(1048574LLU,1048575LLU,1LLU),_1ab2133dc_Range32(1114110LLU,1114111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OTHER_ALPHABETIC = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(837LLU,1456LLU,619LLU),_1ab2133dc_Range16(1457LLU,1469LLU,1LLU),_1ab2133dc_Range16(1471LLU,1473LLU,2LLU),_1ab2133dc_Range16(1474LLU,1476LLU,2LLU),_1ab2133dc_Range16(1477LLU,1479LLU,2LLU),_1ab2133dc_Range16(1552LLU,1562LLU,1LLU),_1ab2133dc_Range16(1611LLU,1623LLU,1LLU),_1ab2133dc_Range16(1625LLU,1631LLU,1LLU),_1ab2133dc_Range16(1648LLU,1750LLU,102LLU),_1ab2133dc_Range16(1751LLU,1756LLU,1LLU),_1ab2133dc_Range16(1761LLU,1764LLU,1LLU),_1ab2133dc_Range16(1767LLU,1768LLU,1LLU),_1ab2133dc_Range16(1773LLU,1809LLU,36LLU),_1ab2133dc_Range16(1840LLU,1855LLU,1LLU),_1ab2133dc_Range16(1958LLU,1968LLU,1LLU),_1ab2133dc_Range16(2070LLU,2071LLU,1LLU),_1ab2133dc_Range16(2075LLU,2083LLU,1LLU),_1ab2133dc_Range16(2085LLU,2087LLU,1LLU),_1ab2133dc_Range16(2089LLU,2092LLU,1LLU),_1ab2133dc_Range16(2260LLU,2271LLU,1LLU),_1ab2133dc_Range16(2275LLU,2281LLU,1LLU),_1ab2133dc_Range16(2288LLU,2307LLU,1LLU),_1ab2133dc_Range16(2362LLU,2363LLU,1LLU),_1ab2133dc_Range16(2366LLU,2380LLU,1LLU),_1ab2133dc_Range16(2382LLU,2383LLU,1LLU),_1ab2133dc_Range16(2389LLU,2391LLU,1LLU),_1ab2133dc_Range16(2402LLU,2403LLU,1LLU),_1ab2133dc_Range16(2433LLU,2435LLU,1LLU),_1ab2133dc_Range16(2494LLU,2500LLU,1LLU),_1ab2133dc_Range16(2503LLU,2504LLU,1LLU),_1ab2133dc_Range16(2507LLU,2508LLU,1LLU),_1ab2133dc_Range16(2519LLU,2530LLU,11LLU),_1ab2133dc_Range16(2531LLU,2561LLU,30LLU),_1ab2133dc_Range16(2562LLU,2563LLU,1LLU),_1ab2133dc_Range16(2622LLU,2626LLU,1LLU),_1ab2133dc_Range16(2631LLU,2632LLU,1LLU),_1ab2133dc_Range16(2635LLU,2636LLU,1LLU),_1ab2133dc_Range16(2641LLU,2672LLU,31LLU),_1ab2133dc_Range16(2673LLU,2677LLU,4LLU),_1ab2133dc_Range16(2689LLU,2691LLU,1LLU),_1ab2133dc_Range16(2750LLU,2757LLU,1LLU),_1ab2133dc_Range16(2759LLU,2761LLU,1LLU),_1ab2133dc_Range16(2763LLU,2764LLU,1LLU),_1ab2133dc_Range16(2786LLU,2787LLU,1LLU),_1ab2133dc_Range16(2810LLU,2812LLU,1LLU),_1ab2133dc_Range16(2817LLU,2819LLU,1LLU),_1ab2133dc_Range16(2878LLU,2884LLU,1LLU),_1ab2133dc_Range16(2887LLU,2888LLU,1LLU),_1ab2133dc_Range16(2891LLU,2892LLU,1LLU),_1ab2133dc_Range16(2902LLU,2903LLU,1LLU),_1ab2133dc_Range16(2914LLU,2915LLU,1LLU),_1ab2133dc_Range16(2946LLU,3006LLU,60LLU),_1ab2133dc_Range16(3007LLU,3010LLU,1LLU),_1ab2133dc_Range16(3014LLU,3016LLU,1LLU),_1ab2133dc_Range16(3018LLU,3020LLU,1LLU),_1ab2133dc_Range16(3031LLU,3072LLU,41LLU),_1ab2133dc_Range16(3073LLU,3076LLU,1LLU),_1ab2133dc_Range16(3134LLU,3140LLU,1LLU),_1ab2133dc_Range16(3142LLU,3144LLU,1LLU),_1ab2133dc_Range16(3146LLU,3148LLU,1LLU),_1ab2133dc_Range16(3157LLU,3158LLU,1LLU),_1ab2133dc_Range16(3170LLU,3171LLU,1LLU),_1ab2133dc_Range16(3201LLU,3203LLU,1LLU),_1ab2133dc_Range16(3262LLU,3268LLU,1LLU),_1ab2133dc_Range16(3270LLU,3272LLU,1LLU),_1ab2133dc_Range16(3274LLU,3276LLU,1LLU),_1ab2133dc_Range16(3285LLU,3286LLU,1LLU),_1ab2133dc_Range16(3298LLU,3299LLU,1LLU),_1ab2133dc_Range16(3315LLU,3328LLU,13LLU),_1ab2133dc_Range16(3329LLU,3331LLU,1LLU),_1ab2133dc_Range16(3390LLU,3396LLU,1LLU),_1ab2133dc_Range16(3398LLU,3400LLU,1LLU),_1ab2133dc_Range16(3402LLU,3404LLU,1LLU),_1ab2133dc_Range16(3415LLU,3426LLU,11LLU),_1ab2133dc_Range16(3427LLU,3457LLU,30LLU),_1ab2133dc_Range16(3458LLU,3459LLU,1LLU),_1ab2133dc_Range16(3535LLU,3540LLU,1LLU),_1ab2133dc_Range16(3542LLU,3544LLU,2LLU),_1ab2133dc_Range16(3545LLU,3551LLU,1LLU),_1ab2133dc_Range16(3570LLU,3571LLU,1LLU),_1ab2133dc_Range16(3633LLU,3636LLU,3LLU),_1ab2133dc_Range16(3637LLU,3642LLU,1LLU),_1ab2133dc_Range16(3661LLU,3761LLU,100LLU),_1ab2133dc_Range16(3764LLU,3769LLU,1LLU),_1ab2133dc_Range16(3771LLU,3772LLU,1LLU),_1ab2133dc_Range16(3789LLU,3953LLU,164LLU),_1ab2133dc_Range16(3954LLU,3971LLU,1LLU),_1ab2133dc_Range16(3981LLU,3991LLU,1LLU),_1ab2133dc_Range16(3993LLU,4028LLU,1LLU),_1ab2133dc_Range16(4139LLU,4150LLU,1LLU),_1ab2133dc_Range16(4152LLU,4155LLU,3LLU),_1ab2133dc_Range16(4156LLU,4158LLU,1LLU),_1ab2133dc_Range16(4182LLU,4185LLU,1LLU),_1ab2133dc_Range16(4190LLU,4192LLU,1LLU),_1ab2133dc_Range16(4194LLU,4196LLU,1LLU),_1ab2133dc_Range16(4199LLU,4205LLU,1LLU),_1ab2133dc_Range16(4209LLU,4212LLU,1LLU),_1ab2133dc_Range16(4226LLU,4237LLU,1LLU),_1ab2133dc_Range16(4239LLU,4250LLU,11LLU),_1ab2133dc_Range16(4251LLU,4253LLU,1LLU),_1ab2133dc_Range16(5906LLU,5907LLU,1LLU),_1ab2133dc_Range16(5938LLU,5939LLU,1LLU),_1ab2133dc_Range16(5970LLU,5971LLU,1LLU),_1ab2133dc_Range16(6002LLU,6003LLU,1LLU),_1ab2133dc_Range16(6070LLU,6088LLU,1LLU),_1ab2133dc_Range16(6277LLU,6278LLU,1LLU),_1ab2133dc_Range16(6313LLU,6432LLU,119LLU),_1ab2133dc_Range16(6433LLU,6443LLU,1LLU),_1ab2133dc_Range16(6448LLU,6456LLU,1LLU),_1ab2133dc_Range16(6679LLU,6683LLU,1LLU),_1ab2133dc_Range16(6741LLU,6750LLU,1LLU),_1ab2133dc_Range16(6753LLU,6772LLU,1LLU),_1ab2133dc_Range16(6847LLU,6848LLU,1LLU),_1ab2133dc_Range16(6860LLU,6862LLU,1LLU),_1ab2133dc_Range16(6912LLU,6916LLU,1LLU),_1ab2133dc_Range16(6965LLU,6979LLU,1LLU),_1ab2133dc_Range16(7040LLU,7042LLU,1LLU),_1ab2133dc_Range16(7073LLU,7081LLU,1LLU),_1ab2133dc_Range16(7084LLU,7085LLU,1LLU),_1ab2133dc_Range16(7143LLU,7153LLU,1LLU),_1ab2133dc_Range16(7204LLU,7222LLU,1LLU),_1ab2133dc_Range16(7655LLU,7668LLU,1LLU),_1ab2133dc_Range16(9398LLU,9449LLU,1LLU),_1ab2133dc_Range16(11744LLU,11775LLU,1LLU),_1ab2133dc_Range16(42612LLU,42619LLU,1LLU),_1ab2133dc_Range16(42654LLU,42655LLU,1LLU),_1ab2133dc_Range16(43010LLU,43019LLU,9LLU),_1ab2133dc_Range16(43043LLU,43047LLU,1LLU),_1ab2133dc_Range16(43136LLU,43137LLU,1LLU),_1ab2133dc_Range16(43188LLU,43203LLU,1LLU),_1ab2133dc_Range16(43205LLU,43263LLU,58LLU),_1ab2133dc_Range16(43302LLU,43306LLU,1LLU),_1ab2133dc_Range16(43335LLU,43346LLU,1LLU),_1ab2133dc_Range16(43392LLU,43395LLU,1LLU),_1ab2133dc_Range16(43444LLU,43455LLU,1LLU),_1ab2133dc_Range16(43493LLU,43561LLU,68LLU),_1ab2133dc_Range16(43562LLU,43574LLU,1LLU),_1ab2133dc_Range16(43587LLU,43596LLU,9LLU),_1ab2133dc_Range16(43597LLU,43643LLU,46LLU),_1ab2133dc_Range16(43644LLU,43645LLU,1LLU),_1ab2133dc_Range16(43696LLU,43698LLU,2LLU),_1ab2133dc_Range16(43699LLU,43700LLU,1LLU),_1ab2133dc_Range16(43703LLU,43704LLU,1LLU),_1ab2133dc_Range16(43710LLU,43755LLU,45LLU),_1ab2133dc_Range16(43756LLU,43759LLU,1LLU),_1ab2133dc_Range16(43765LLU,44003LLU,238LLU),_1ab2133dc_Range16(44004LLU,44010LLU,1LLU),_1ab2133dc_Range16(64286LLU,64286LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66422LLU,66426LLU,1LLU),_1ab2133dc_Range32(68097LLU,68099LLU,1LLU),_1ab2133dc_Range32(68101LLU,68102LLU,1LLU),_1ab2133dc_Range32(68108LLU,68111LLU,1LLU),_1ab2133dc_Range32(68900LLU,68903LLU,1LLU),_1ab2133dc_Range32(69291LLU,69292LLU,1LLU),_1ab2133dc_Range32(69632LLU,69634LLU,1LLU),_1ab2133dc_Range32(69688LLU,69701LLU,1LLU),_1ab2133dc_Range32(69747LLU,69748LLU,1LLU),_1ab2133dc_Range32(69760LLU,69762LLU,1LLU),_1ab2133dc_Range32(69808LLU,69816LLU,1LLU),_1ab2133dc_Range32(69826LLU,69888LLU,62LLU),_1ab2133dc_Range32(69889LLU,69890LLU,1LLU),_1ab2133dc_Range32(69927LLU,69938LLU,1LLU),_1ab2133dc_Range32(69957LLU,69958LLU,1LLU),_1ab2133dc_Range32(70016LLU,70018LLU,1LLU),_1ab2133dc_Range32(70067LLU,70079LLU,1LLU),_1ab2133dc_Range32(70094LLU,70095LLU,1LLU),_1ab2133dc_Range32(70188LLU,70196LLU,1LLU),_1ab2133dc_Range32(70199LLU,70206LLU,7LLU),_1ab2133dc_Range32(70209LLU,70367LLU,158LLU),_1ab2133dc_Range32(70368LLU,70376LLU,1LLU),_1ab2133dc_Range32(70400LLU,70403LLU,1LLU),_1ab2133dc_Range32(70462LLU,70468LLU,1LLU),_1ab2133dc_Range32(70471LLU,70472LLU,1LLU),_1ab2133dc_Range32(70475LLU,70476LLU,1LLU),_1ab2133dc_Range32(70487LLU,70498LLU,11LLU),_1ab2133dc_Range32(70499LLU,70709LLU,210LLU),_1ab2133dc_Range32(70710LLU,70721LLU,1LLU),_1ab2133dc_Range32(70723LLU,70725LLU,1LLU),_1ab2133dc_Range32(70832LLU,70849LLU,1LLU),_1ab2133dc_Range32(71087LLU,71093LLU,1LLU),_1ab2133dc_Range32(71096LLU,71102LLU,1LLU),_1ab2133dc_Range32(71132LLU,71133LLU,1LLU),_1ab2133dc_Range32(71216LLU,71230LLU,1LLU),_1ab2133dc_Range32(71232LLU,71339LLU,107LLU),_1ab2133dc_Range32(71340LLU,71349LLU,1LLU),_1ab2133dc_Range32(71453LLU,71466LLU,1LLU),_1ab2133dc_Range32(71724LLU,71736LLU,1LLU),_1ab2133dc_Range32(71984LLU,71989LLU,1LLU),_1ab2133dc_Range32(71991LLU,71992LLU,1LLU),_1ab2133dc_Range32(71995LLU,71996LLU,1LLU),_1ab2133dc_Range32(72000LLU,72002LLU,2LLU),_1ab2133dc_Range32(72145LLU,72151LLU,1LLU),_1ab2133dc_Range32(72154LLU,72159LLU,1LLU),_1ab2133dc_Range32(72164LLU,72193LLU,29LLU),_1ab2133dc_Range32(72194LLU,72202LLU,1LLU),_1ab2133dc_Range32(72245LLU,72249LLU,1LLU),_1ab2133dc_Range32(72251LLU,72254LLU,1LLU),_1ab2133dc_Range32(72273LLU,72283LLU,1LLU),_1ab2133dc_Range32(72330LLU,72343LLU,1LLU),_1ab2133dc_Range32(72751LLU,72758LLU,1LLU),_1ab2133dc_Range32(72760LLU,72766LLU,1LLU),_1ab2133dc_Range32(72850LLU,72871LLU,1LLU),_1ab2133dc_Range32(72873LLU,72886LLU,1LLU),_1ab2133dc_Range32(73009LLU,73014LLU,1LLU),_1ab2133dc_Range32(73018LLU,73020LLU,2LLU),_1ab2133dc_Range32(73021LLU,73023LLU,2LLU),_1ab2133dc_Range32(73024LLU,73025LLU,1LLU),_1ab2133dc_Range32(73027LLU,73031LLU,4LLU),_1ab2133dc_Range32(73098LLU,73102LLU,1LLU),_1ab2133dc_Range32(73104LLU,73105LLU,1LLU),_1ab2133dc_Range32(73107LLU,73110LLU,1LLU),_1ab2133dc_Range32(73459LLU,73462LLU,1LLU),_1ab2133dc_Range32(73472LLU,73473LLU,1LLU),_1ab2133dc_Range32(73475LLU,73524LLU,49LLU),_1ab2133dc_Range32(73525LLU,73530LLU,1LLU),_1ab2133dc_Range32(73534LLU,73536LLU,1LLU),_1ab2133dc_Range32(94031LLU,94033LLU,2LLU),_1ab2133dc_Range32(94034LLU,94087LLU,1LLU),_1ab2133dc_Range32(94095LLU,94098LLU,1LLU),_1ab2133dc_Range32(94192LLU,94193LLU,1LLU),_1ab2133dc_Range32(113822LLU,122880LLU,9058LLU),_1ab2133dc_Range32(122881LLU,122886LLU,1LLU),_1ab2133dc_Range32(122888LLU,122904LLU,1LLU),_1ab2133dc_Range32(122907LLU,122913LLU,1LLU),_1ab2133dc_Range32(122915LLU,122916LLU,1LLU),_1ab2133dc_Range32(122918LLU,122922LLU,1LLU),_1ab2133dc_Range32(123023LLU,125255LLU,2232LLU),_1ab2133dc_Range32(127280LLU,127305LLU,1LLU),_1ab2133dc_Range32(127312LLU,127337LLU,1LLU),_1ab2133dc_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OTHER_DEFAULT_IGNORABLE_CODE_POINT = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(847LLU,4447LLU,3600LLU),_1ab2133dc_Range16(4448LLU,6068LLU,1620LLU),_1ab2133dc_Range16(6069LLU,8293LLU,2224LLU),_1ab2133dc_Range16(12644LLU,65440LLU,52796LLU),_1ab2133dc_Range16(65520LLU,65528LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(917504LLU,917506LLU,2LLU),_1ab2133dc_Range32(917507LLU,917535LLU,1LLU),_1ab2133dc_Range32(917632LLU,917759LLU,1LLU),_1ab2133dc_Range32(918000LLU,921599LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OTHER_GRAPHEME_EXTEND = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(2494LLU,2519LLU,25LLU),_1ab2133dc_Range16(2878LLU,2903LLU,25LLU),_1ab2133dc_Range16(3006LLU,3031LLU,25LLU),_1ab2133dc_Range16(3266LLU,3285LLU,19LLU),_1ab2133dc_Range16(3286LLU,3390LLU,104LLU),_1ab2133dc_Range16(3415LLU,3535LLU,120LLU),_1ab2133dc_Range16(3551LLU,6965LLU,3414LLU),_1ab2133dc_Range16(8204LLU,12334LLU,4130LLU),_1ab2133dc_Range16(12335LLU,65438LLU,53103LLU),_1ab2133dc_Range16(65439LLU,65439LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(70462LLU,70487LLU,25LLU),_1ab2133dc_Range32(70832LLU,70845LLU,13LLU),_1ab2133dc_Range32(71087LLU,71984LLU,897LLU),_1ab2133dc_Range32(119141LLU,119150LLU,9LLU),_1ab2133dc_Range32(119151LLU,119154LLU,1LLU),_1ab2133dc_Range32(917536LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OTHER_ID_CONTINUE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(183LLU,903LLU,720LLU),_1ab2133dc_Range16(4969LLU,4977LLU,1LLU),_1ab2133dc_Range16(6618LLU,6618LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OTHER_ID_START = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(6277LLU,6278LLU,1LLU),_1ab2133dc_Range16(8472LLU,8494LLU,22LLU),_1ab2133dc_Range16(12443LLU,12444LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OTHER_LOWERCASE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(170LLU,186LLU,16LLU),_1ab2133dc_Range16(688LLU,696LLU,1LLU),_1ab2133dc_Range16(704LLU,705LLU,1LLU),_1ab2133dc_Range16(736LLU,740LLU,1LLU),_1ab2133dc_Range16(837LLU,890LLU,53LLU),_1ab2133dc_Range16(4348LLU,7468LLU,3120LLU),_1ab2133dc_Range16(7469LLU,7530LLU,1LLU),_1ab2133dc_Range16(7544LLU,7579LLU,35LLU),_1ab2133dc_Range16(7580LLU,7615LLU,1LLU),_1ab2133dc_Range16(8305LLU,8319LLU,14LLU),_1ab2133dc_Range16(8336LLU,8348LLU,1LLU),_1ab2133dc_Range16(8560LLU,8575LLU,1LLU),_1ab2133dc_Range16(9424LLU,9449LLU,1LLU),_1ab2133dc_Range16(11388LLU,11389LLU,1LLU),_1ab2133dc_Range16(42652LLU,42653LLU,1LLU),_1ab2133dc_Range16(42864LLU,42994LLU,130LLU),_1ab2133dc_Range16(42995LLU,42996LLU,1LLU),_1ab2133dc_Range16(43000LLU,43001LLU,1LLU),_1ab2133dc_Range16(43868LLU,43871LLU,1LLU),_1ab2133dc_Range16(43881LLU,43881LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(67456LLU,67459LLU,3LLU),_1ab2133dc_Range32(67460LLU,67461LLU,1LLU),_1ab2133dc_Range32(67463LLU,67504LLU,1LLU),_1ab2133dc_Range32(67506LLU,67514LLU,1LLU),_1ab2133dc_Range32(122928LLU,122989LLU,1LLU)}),1LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OTHER_MATH = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(94LLU,976LLU,882LLU),_1ab2133dc_Range16(977LLU,978LLU,1LLU),_1ab2133dc_Range16(981LLU,1008LLU,27LLU),_1ab2133dc_Range16(1009LLU,1012LLU,3LLU),_1ab2133dc_Range16(1013LLU,8214LLU,7201LLU),_1ab2133dc_Range16(8242LLU,8244LLU,1LLU),_1ab2133dc_Range16(8256LLU,8289LLU,33LLU),_1ab2133dc_Range16(8290LLU,8292LLU,1LLU),_1ab2133dc_Range16(8317LLU,8318LLU,1LLU),_1ab2133dc_Range16(8333LLU,8334LLU,1LLU),_1ab2133dc_Range16(8400LLU,8412LLU,1LLU),_1ab2133dc_Range16(8417LLU,8421LLU,4LLU),_1ab2133dc_Range16(8422LLU,8427LLU,5LLU),_1ab2133dc_Range16(8428LLU,8431LLU,1LLU),_1ab2133dc_Range16(8450LLU,8455LLU,5LLU),_1ab2133dc_Range16(8458LLU,8467LLU,1LLU),_1ab2133dc_Range16(8469LLU,8473LLU,4LLU),_1ab2133dc_Range16(8474LLU,8477LLU,1LLU),_1ab2133dc_Range16(8484LLU,8488LLU,4LLU),_1ab2133dc_Range16(8489LLU,8492LLU,3LLU),_1ab2133dc_Range16(8493LLU,8495LLU,2LLU),_1ab2133dc_Range16(8496LLU,8497LLU,1LLU),_1ab2133dc_Range16(8499LLU,8504LLU,1LLU),_1ab2133dc_Range16(8508LLU,8511LLU,1LLU),_1ab2133dc_Range16(8517LLU,8521LLU,1LLU),_1ab2133dc_Range16(8597LLU,8601LLU,1LLU),_1ab2133dc_Range16(8604LLU,8607LLU,1LLU),_1ab2133dc_Range16(8609LLU,8610LLU,1LLU),_1ab2133dc_Range16(8612LLU,8613LLU,1LLU),_1ab2133dc_Range16(8615LLU,8617LLU,2LLU),_1ab2133dc_Range16(8618LLU,8621LLU,1LLU),_1ab2133dc_Range16(8624LLU,8625LLU,1LLU),_1ab2133dc_Range16(8630LLU,8631LLU,1LLU),_1ab2133dc_Range16(8636LLU,8653LLU,1LLU),_1ab2133dc_Range16(8656LLU,8657LLU,1LLU),_1ab2133dc_Range16(8659LLU,8661LLU,2LLU),_1ab2133dc_Range16(8662LLU,8667LLU,1LLU),_1ab2133dc_Range16(8669LLU,8676LLU,7LLU),_1ab2133dc_Range16(8677LLU,8968LLU,291LLU),_1ab2133dc_Range16(8969LLU,8971LLU,1LLU),_1ab2133dc_Range16(9140LLU,9141LLU,1LLU),_1ab2133dc_Range16(9143LLU,9168LLU,25LLU),_1ab2133dc_Range16(9186LLU,9632LLU,446LLU),_1ab2133dc_Range16(9633LLU,9646LLU,13LLU),_1ab2133dc_Range16(9647LLU,9654LLU,1LLU),_1ab2133dc_Range16(9660LLU,9664LLU,1LLU),_1ab2133dc_Range16(9670LLU,9671LLU,1LLU),_1ab2133dc_Range16(9674LLU,9675LLU,1LLU),_1ab2133dc_Range16(9679LLU,9683LLU,1LLU),_1ab2133dc_Range16(9698LLU,9700LLU,2LLU),_1ab2133dc_Range16(9703LLU,9708LLU,1LLU),_1ab2133dc_Range16(9733LLU,9734LLU,1LLU),_1ab2133dc_Range16(9792LLU,9794LLU,2LLU),_1ab2133dc_Range16(9824LLU,9827LLU,1LLU),_1ab2133dc_Range16(9837LLU,9838LLU,1LLU),_1ab2133dc_Range16(10181LLU,10182LLU,1LLU),_1ab2133dc_Range16(10214LLU,10223LLU,1LLU),_1ab2133dc_Range16(10627LLU,10648LLU,1LLU),_1ab2133dc_Range16(10712LLU,10715LLU,1LLU),_1ab2133dc_Range16(10748LLU,10749LLU,1LLU),_1ab2133dc_Range16(65121LLU,65123LLU,2LLU),_1ab2133dc_Range16(65128LLU,65340LLU,212LLU),_1ab2133dc_Range16(65342LLU,65342LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(119808LLU,119892LLU,1LLU),_1ab2133dc_Range32(119894LLU,119964LLU,1LLU),_1ab2133dc_Range32(119966LLU,119967LLU,1LLU),_1ab2133dc_Range32(119970LLU,119973LLU,3LLU),_1ab2133dc_Range32(119974LLU,119977LLU,3LLU),_1ab2133dc_Range32(119978LLU,119980LLU,1LLU),_1ab2133dc_Range32(119982LLU,119993LLU,1LLU),_1ab2133dc_Range32(119995LLU,119997LLU,2LLU),_1ab2133dc_Range32(119998LLU,120003LLU,1LLU),_1ab2133dc_Range32(120005LLU,120069LLU,1LLU),_1ab2133dc_Range32(120071LLU,120074LLU,1LLU),_1ab2133dc_Range32(120077LLU,120084LLU,1LLU),_1ab2133dc_Range32(120086LLU,120092LLU,1LLU),_1ab2133dc_Range32(120094LLU,120121LLU,1LLU),_1ab2133dc_Range32(120123LLU,120126LLU,1LLU),_1ab2133dc_Range32(120128LLU,120132LLU,1LLU),_1ab2133dc_Range32(120134LLU,120138LLU,4LLU),_1ab2133dc_Range32(120139LLU,120144LLU,1LLU),_1ab2133dc_Range32(120146LLU,120485LLU,1LLU),_1ab2133dc_Range32(120488LLU,120512LLU,1LLU),_1ab2133dc_Range32(120514LLU,120538LLU,1LLU),_1ab2133dc_Range32(120540LLU,120570LLU,1LLU),_1ab2133dc_Range32(120572LLU,120596LLU,1LLU),_1ab2133dc_Range32(120598LLU,120628LLU,1LLU),_1ab2133dc_Range32(120630LLU,120654LLU,1LLU),_1ab2133dc_Range32(120656LLU,120686LLU,1LLU),_1ab2133dc_Range32(120688LLU,120712LLU,1LLU),_1ab2133dc_Range32(120714LLU,120744LLU,1LLU),_1ab2133dc_Range32(120746LLU,120770LLU,1LLU),_1ab2133dc_Range32(120772LLU,120779LLU,1LLU),_1ab2133dc_Range32(120782LLU,120831LLU,1LLU),_1ab2133dc_Range32(126464LLU,126467LLU,1LLU),_1ab2133dc_Range32(126469LLU,126495LLU,1LLU),_1ab2133dc_Range32(126497LLU,126498LLU,1LLU),_1ab2133dc_Range32(126500LLU,126503LLU,3LLU),_1ab2133dc_Range32(126505LLU,126514LLU,1LLU),_1ab2133dc_Range32(126516LLU,126519LLU,1LLU),_1ab2133dc_Range32(126521LLU,126523LLU,2LLU),_1ab2133dc_Range32(126530LLU,126535LLU,5LLU),_1ab2133dc_Range32(126537LLU,126541LLU,2LLU),_1ab2133dc_Range32(126542LLU,126543LLU,1LLU),_1ab2133dc_Range32(126545LLU,126546LLU,1LLU),_1ab2133dc_Range32(126548LLU,126551LLU,3LLU),_1ab2133dc_Range32(126553LLU,126561LLU,2LLU),_1ab2133dc_Range32(126562LLU,126564LLU,2LLU),_1ab2133dc_Range32(126567LLU,126570LLU,1LLU),_1ab2133dc_Range32(126572LLU,126578LLU,1LLU),_1ab2133dc_Range32(126580LLU,126583LLU,1LLU),_1ab2133dc_Range32(126585LLU,126588LLU,1LLU),_1ab2133dc_Range32(126590LLU,126592LLU,2LLU),_1ab2133dc_Range32(126593LLU,126601LLU,1LLU),_1ab2133dc_Range32(126603LLU,126619LLU,1LLU),_1ab2133dc_Range32(126625LLU,126627LLU,1LLU),_1ab2133dc_Range32(126629LLU,126633LLU,1LLU),_1ab2133dc_Range32(126635LLU,126651LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__OTHER_UPPERCASE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(8544LLU,8559LLU,1LLU),_1ab2133dc_Range16(9398LLU,9423LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(127280LLU,127305LLU,1LLU),_1ab2133dc_Range32(127312LLU,127337LLU,1LLU),_1ab2133dc_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PATTERN_SYNTAX = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(33LLU,47LLU,1LLU),_1ab2133dc_Range16(58LLU,64LLU,1LLU),_1ab2133dc_Range16(91LLU,94LLU,1LLU),_1ab2133dc_Range16(96LLU,123LLU,27LLU),_1ab2133dc_Range16(124LLU,126LLU,1LLU),_1ab2133dc_Range16(161LLU,167LLU,1LLU),_1ab2133dc_Range16(169LLU,171LLU,2LLU),_1ab2133dc_Range16(172LLU,176LLU,2LLU),_1ab2133dc_Range16(177LLU,187LLU,5LLU),_1ab2133dc_Range16(191LLU,215LLU,24LLU),_1ab2133dc_Range16(247LLU,8208LLU,7961LLU),_1ab2133dc_Range16(8209LLU,8231LLU,1LLU),_1ab2133dc_Range16(8240LLU,8254LLU,1LLU),_1ab2133dc_Range16(8257LLU,8275LLU,1LLU),_1ab2133dc_Range16(8277LLU,8286LLU,1LLU),_1ab2133dc_Range16(8592LLU,9311LLU,1LLU),_1ab2133dc_Range16(9472LLU,10101LLU,1LLU),_1ab2133dc_Range16(10132LLU,11263LLU,1LLU),_1ab2133dc_Range16(11776LLU,11903LLU,1LLU),_1ab2133dc_Range16(12289LLU,12291LLU,1LLU),_1ab2133dc_Range16(12296LLU,12320LLU,1LLU),_1ab2133dc_Range16(12336LLU,64830LLU,52494LLU),_1ab2133dc_Range16(64831LLU,65093LLU,262LLU),_1ab2133dc_Range16(65094LLU,65094LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),10LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PATTERN_WHITE_SPACE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(9LLU,13LLU,1LLU),_1ab2133dc_Range16(32LLU,133LLU,101LLU),_1ab2133dc_Range16(8206LLU,8207LLU,1LLU),_1ab2133dc_Range16(8232LLU,8233LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),2LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__PREPENDED_CONCATENATION_MARK = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(1536LLU,1541LLU,1LLU),_1ab2133dc_Range16(1757LLU,1807LLU,50LLU),_1ab2133dc_Range16(2192LLU,2193LLU,1LLU),_1ab2133dc_Range16(2274LLU,2274LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(69821LLU,69837LLU,16LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__QUOTATION_MARK = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(34LLU,39LLU,5LLU),_1ab2133dc_Range16(171LLU,187LLU,16LLU),_1ab2133dc_Range16(8216LLU,8223LLU,1LLU),_1ab2133dc_Range16(8249LLU,8250LLU,1LLU),_1ab2133dc_Range16(11842LLU,12300LLU,458LLU),_1ab2133dc_Range16(12301LLU,12303LLU,1LLU),_1ab2133dc_Range16(12317LLU,12319LLU,1LLU),_1ab2133dc_Range16(65089LLU,65092LLU,1LLU),_1ab2133dc_Range16(65282LLU,65287LLU,5LLU),_1ab2133dc_Range16(65378LLU,65379LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),2LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__RADICAL = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(11904LLU,11929LLU,1LLU),_1ab2133dc_Range16(11931LLU,12019LLU,1LLU),_1ab2133dc_Range16(12032LLU,12245LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__REGIONAL_INDICATOR = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(127462LLU,127487LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SENTENCE_TERMINAL = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(33LLU,46LLU,13LLU),_1ab2133dc_Range16(63LLU,1417LLU,1354LLU),_1ab2133dc_Range16(1565LLU,1567LLU,1LLU),_1ab2133dc_Range16(1748LLU,1792LLU,44LLU),_1ab2133dc_Range16(1793LLU,1794LLU,1LLU),_1ab2133dc_Range16(2041LLU,2103LLU,62LLU),_1ab2133dc_Range16(2105LLU,2109LLU,4LLU),_1ab2133dc_Range16(2110LLU,2404LLU,294LLU),_1ab2133dc_Range16(2405LLU,4170LLU,1765LLU),_1ab2133dc_Range16(4171LLU,4962LLU,791LLU),_1ab2133dc_Range16(4967LLU,4968LLU,1LLU),_1ab2133dc_Range16(5742LLU,5941LLU,199LLU),_1ab2133dc_Range16(5942LLU,6147LLU,205LLU),_1ab2133dc_Range16(6153LLU,6468LLU,315LLU),_1ab2133dc_Range16(6469LLU,6824LLU,355LLU),_1ab2133dc_Range16(6825LLU,6827LLU,1LLU),_1ab2133dc_Range16(7002LLU,7003LLU,1LLU),_1ab2133dc_Range16(7006LLU,7007LLU,1LLU),_1ab2133dc_Range16(7037LLU,7038LLU,1LLU),_1ab2133dc_Range16(7227LLU,7228LLU,1LLU),_1ab2133dc_Range16(7294LLU,7295LLU,1LLU),_1ab2133dc_Range16(8252LLU,8253LLU,1LLU),_1ab2133dc_Range16(8263LLU,8265LLU,1LLU),_1ab2133dc_Range16(11822LLU,11836LLU,14LLU),_1ab2133dc_Range16(11859LLU,11860LLU,1LLU),_1ab2133dc_Range16(12290LLU,42239LLU,29949LLU),_1ab2133dc_Range16(42510LLU,42511LLU,1LLU),_1ab2133dc_Range16(42739LLU,42743LLU,4LLU),_1ab2133dc_Range16(43126LLU,43127LLU,1LLU),_1ab2133dc_Range16(43214LLU,43215LLU,1LLU),_1ab2133dc_Range16(43311LLU,43464LLU,153LLU),_1ab2133dc_Range16(43465LLU,43613LLU,148LLU),_1ab2133dc_Range16(43614LLU,43615LLU,1LLU),_1ab2133dc_Range16(43760LLU,43761LLU,1LLU),_1ab2133dc_Range16(44011LLU,65106LLU,21095LLU),_1ab2133dc_Range16(65110LLU,65111LLU,1LLU),_1ab2133dc_Range16(65281LLU,65294LLU,13LLU),_1ab2133dc_Range16(65311LLU,65377LLU,66LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(68182LLU,68183LLU,1LLU),_1ab2133dc_Range32(69461LLU,69465LLU,1LLU),_1ab2133dc_Range32(69510LLU,69513LLU,1LLU),_1ab2133dc_Range32(69703LLU,69704LLU,1LLU),_1ab2133dc_Range32(69822LLU,69825LLU,1LLU),_1ab2133dc_Range32(69953LLU,69955LLU,1LLU),_1ab2133dc_Range32(70085LLU,70086LLU,1LLU),_1ab2133dc_Range32(70093LLU,70110LLU,17LLU),_1ab2133dc_Range32(70111LLU,70200LLU,89LLU),_1ab2133dc_Range32(70201LLU,70203LLU,2LLU),_1ab2133dc_Range32(70204LLU,70313LLU,109LLU),_1ab2133dc_Range32(70731LLU,70732LLU,1LLU),_1ab2133dc_Range32(71106LLU,71107LLU,1LLU),_1ab2133dc_Range32(71113LLU,71127LLU,1LLU),_1ab2133dc_Range32(71233LLU,71234LLU,1LLU),_1ab2133dc_Range32(71484LLU,71486LLU,1LLU),_1ab2133dc_Range32(72004LLU,72006LLU,2LLU),_1ab2133dc_Range32(72258LLU,72259LLU,1LLU),_1ab2133dc_Range32(72347LLU,72348LLU,1LLU),_1ab2133dc_Range32(72769LLU,72770LLU,1LLU),_1ab2133dc_Range32(73463LLU,73464LLU,1LLU),_1ab2133dc_Range32(73539LLU,73540LLU,1LLU),_1ab2133dc_Range32(92782LLU,92783LLU,1LLU),_1ab2133dc_Range32(92917LLU,92983LLU,66LLU),_1ab2133dc_Range32(92984LLU,92996LLU,12LLU),_1ab2133dc_Range32(93848LLU,113823LLU,19975LLU),_1ab2133dc_Range32(121480LLU,121480LLU,1LLU)}),1LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__SOFT_DOTTED = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(105LLU,106LLU,1LLU),_1ab2133dc_Range16(303LLU,585LLU,282LLU),_1ab2133dc_Range16(616LLU,669LLU,53LLU),_1ab2133dc_Range16(690LLU,1011LLU,321LLU),_1ab2133dc_Range16(1110LLU,1112LLU,2LLU),_1ab2133dc_Range16(7522LLU,7574LLU,52LLU),_1ab2133dc_Range16(7588LLU,7592LLU,4LLU),_1ab2133dc_Range16(7725LLU,7883LLU,158LLU),_1ab2133dc_Range16(8305LLU,8520LLU,215LLU),_1ab2133dc_Range16(8521LLU,11388LLU,2867LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(119842LLU,119843LLU,1LLU),_1ab2133dc_Range32(119894LLU,119895LLU,1LLU),_1ab2133dc_Range32(119946LLU,119947LLU,1LLU),_1ab2133dc_Range32(119998LLU,119999LLU,1LLU),_1ab2133dc_Range32(120050LLU,120051LLU,1LLU),_1ab2133dc_Range32(120102LLU,120103LLU,1LLU),_1ab2133dc_Range32(120154LLU,120155LLU,1LLU),_1ab2133dc_Range32(120206LLU,120207LLU,1LLU),_1ab2133dc_Range32(120258LLU,120259LLU,1LLU),_1ab2133dc_Range32(120310LLU,120311LLU,1LLU),_1ab2133dc_Range32(120362LLU,120363LLU,1LLU),_1ab2133dc_Range32(120414LLU,120415LLU,1LLU),_1ab2133dc_Range32(120466LLU,120467LLU,1LLU),_1ab2133dc_Range32(122650LLU,122956LLU,306LLU),_1ab2133dc_Range32(122957LLU,122984LLU,27LLU)}),1LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__TERMINAL_PUNCTUATION = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(33LLU,44LLU,11LLU),_1ab2133dc_Range16(46LLU,58LLU,12LLU),_1ab2133dc_Range16(59LLU,63LLU,4LLU),_1ab2133dc_Range16(894LLU,903LLU,9LLU),_1ab2133dc_Range16(1417LLU,1475LLU,58LLU),_1ab2133dc_Range16(1548LLU,1563LLU,15LLU),_1ab2133dc_Range16(1565LLU,1567LLU,1LLU),_1ab2133dc_Range16(1748LLU,1792LLU,44LLU),_1ab2133dc_Range16(1793LLU,1802LLU,1LLU),_1ab2133dc_Range16(1804LLU,2040LLU,236LLU),_1ab2133dc_Range16(2041LLU,2096LLU,55LLU),_1ab2133dc_Range16(2097LLU,2110LLU,1LLU),_1ab2133dc_Range16(2142LLU,2404LLU,262LLU),_1ab2133dc_Range16(2405LLU,3674LLU,1269LLU),_1ab2133dc_Range16(3675LLU,3848LLU,173LLU),_1ab2133dc_Range16(3853LLU,3858LLU,1LLU),_1ab2133dc_Range16(4170LLU,4171LLU,1LLU),_1ab2133dc_Range16(4961LLU,4968LLU,1LLU),_1ab2133dc_Range16(5742LLU,5867LLU,125LLU),_1ab2133dc_Range16(5868LLU,5869LLU,1LLU),_1ab2133dc_Range16(5941LLU,5942LLU,1LLU),_1ab2133dc_Range16(6100LLU,6102LLU,1LLU),_1ab2133dc_Range16(6106LLU,6146LLU,40LLU),_1ab2133dc_Range16(6147LLU,6149LLU,1LLU),_1ab2133dc_Range16(6152LLU,6153LLU,1LLU),_1ab2133dc_Range16(6468LLU,6469LLU,1LLU),_1ab2133dc_Range16(6824LLU,6827LLU,1LLU),_1ab2133dc_Range16(7002LLU,7003LLU,1LLU),_1ab2133dc_Range16(7005LLU,7007LLU,1LLU),_1ab2133dc_Range16(7037LLU,7038LLU,1LLU),_1ab2133dc_Range16(7227LLU,7231LLU,1LLU),_1ab2133dc_Range16(7294LLU,7295LLU,1LLU),_1ab2133dc_Range16(8252LLU,8253LLU,1LLU),_1ab2133dc_Range16(8263LLU,8265LLU,1LLU),_1ab2133dc_Range16(11822LLU,11836LLU,14LLU),_1ab2133dc_Range16(11841LLU,11852LLU,11LLU),_1ab2133dc_Range16(11854LLU,11855LLU,1LLU),_1ab2133dc_Range16(11859LLU,11860LLU,1LLU),_1ab2133dc_Range16(12289LLU,12290LLU,1LLU),_1ab2133dc_Range16(42238LLU,42239LLU,1LLU),_1ab2133dc_Range16(42509LLU,42511LLU,1LLU),_1ab2133dc_Range16(42739LLU,42743LLU,1LLU),_1ab2133dc_Range16(43126LLU,43127LLU,1LLU),_1ab2133dc_Range16(43214LLU,43215LLU,1LLU),_1ab2133dc_Range16(43311LLU,43463LLU,152LLU),_1ab2133dc_Range16(43464LLU,43465LLU,1LLU),_1ab2133dc_Range16(43613LLU,43615LLU,1LLU),_1ab2133dc_Range16(43743LLU,43760LLU,17LLU),_1ab2133dc_Range16(43761LLU,44011LLU,250LLU),_1ab2133dc_Range16(65104LLU,65106LLU,1LLU),_1ab2133dc_Range16(65108LLU,65111LLU,1LLU),_1ab2133dc_Range16(65281LLU,65292LLU,11LLU),_1ab2133dc_Range16(65294LLU,65306LLU,12LLU),_1ab2133dc_Range16(65307LLU,65311LLU,4LLU),_1ab2133dc_Range16(65377LLU,65380LLU,3LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66463LLU,66512LLU,49LLU),_1ab2133dc_Range32(67671LLU,67871LLU,200LLU),_1ab2133dc_Range32(68182LLU,68183LLU,1LLU),_1ab2133dc_Range32(68336LLU,68341LLU,1LLU),_1ab2133dc_Range32(68410LLU,68415LLU,1LLU),_1ab2133dc_Range32(68505LLU,68508LLU,1LLU),_1ab2133dc_Range32(69461LLU,69465LLU,1LLU),_1ab2133dc_Range32(69510LLU,69513LLU,1LLU),_1ab2133dc_Range32(69703LLU,69709LLU,1LLU),_1ab2133dc_Range32(69822LLU,69825LLU,1LLU),_1ab2133dc_Range32(69953LLU,69955LLU,1LLU),_1ab2133dc_Range32(70085LLU,70086LLU,1LLU),_1ab2133dc_Range32(70093LLU,70110LLU,17LLU),_1ab2133dc_Range32(70111LLU,70200LLU,89LLU),_1ab2133dc_Range32(70201LLU,70204LLU,1LLU),_1ab2133dc_Range32(70313LLU,70731LLU,418LLU),_1ab2133dc_Range32(70732LLU,70733LLU,1LLU),_1ab2133dc_Range32(70746LLU,70747LLU,1LLU),_1ab2133dc_Range32(71106LLU,71109LLU,1LLU),_1ab2133dc_Range32(71113LLU,71127LLU,1LLU),_1ab2133dc_Range32(71233LLU,71234LLU,1LLU),_1ab2133dc_Range32(71484LLU,71486LLU,1LLU),_1ab2133dc_Range32(72004LLU,72006LLU,2LLU),_1ab2133dc_Range32(72258LLU,72259LLU,1LLU),_1ab2133dc_Range32(72347LLU,72348LLU,1LLU),_1ab2133dc_Range32(72353LLU,72354LLU,1LLU),_1ab2133dc_Range32(72769LLU,72771LLU,1LLU),_1ab2133dc_Range32(72817LLU,73463LLU,646LLU),_1ab2133dc_Range32(73464LLU,73539LLU,75LLU),_1ab2133dc_Range32(73540LLU,74864LLU,1324LLU),_1ab2133dc_Range32(74865LLU,74868LLU,1LLU),_1ab2133dc_Range32(92782LLU,92783LLU,1LLU),_1ab2133dc_Range32(92917LLU,92983LLU,66LLU),_1ab2133dc_Range32(92984LLU,92985LLU,1LLU),_1ab2133dc_Range32(92996LLU,93847LLU,851LLU),_1ab2133dc_Range32(93848LLU,113823LLU,19975LLU),_1ab2133dc_Range32(121479LLU,121482LLU,1LLU)}),3LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__UNIFIED_IDEOGRAPH = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(13312LLU,19903LLU,1LLU),_1ab2133dc_Range16(19968LLU,40959LLU,1LLU),_1ab2133dc_Range16(64014LLU,64015LLU,1LLU),_1ab2133dc_Range16(64017LLU,64019LLU,2LLU),_1ab2133dc_Range16(64020LLU,64031LLU,11LLU),_1ab2133dc_Range16(64033LLU,64035LLU,2LLU),_1ab2133dc_Range16(64036LLU,64039LLU,3LLU),_1ab2133dc_Range16(64040LLU,64041LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(131072LLU,173791LLU,1LLU),_1ab2133dc_Range32(173824LLU,177977LLU,1LLU),_1ab2133dc_Range32(177984LLU,178205LLU,1LLU),_1ab2133dc_Range32(178208LLU,183969LLU,1LLU),_1ab2133dc_Range32(183984LLU,191456LLU,1LLU),_1ab2133dc_Range32(196608LLU,201546LLU,1LLU),_1ab2133dc_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__VARIATION_SELECTOR = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(6155LLU,6157LLU,1LLU),_1ab2133dc_Range16(6159LLU,65024LLU,58865LLU),_1ab2133dc_Range16(65025LLU,65039LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd__WHITE_SPACE = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(9LLU,13LLU,1LLU),_1ab2133dc_Range16(32LLU,133LLU,101LLU),_1ab2133dc_Range16(160LLU,5760LLU,5600LLU),_1ab2133dc_Range16(8192LLU,8202LLU,1LLU),_1ab2133dc_Range16(8232LLU,8233LLU,1LLU),_1ab2133dc_Range16(8239LLU,8287LLU,48LLU),_1ab2133dc_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),2LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_ASCII_HEX_DIGIT = _1ab04b4cd__ASCII_HEX_DIGIT;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_BIDI_CONTROL = _1ab04b4cd__BIDI_CONTROL;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_DASH = _1ab04b4cd__DASH;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_DEPRECATED = _1ab04b4cd__DEPRECATED;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_DIACRITIC = _1ab04b4cd__DIACRITIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_EXTENDER = _1ab04b4cd__EXTENDER;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_HEX_DIGIT = _1ab04b4cd__HEX_DIGIT;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_HYPHEN = _1ab04b4cd__HYPHEN;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_IDS_BINARY_OPERATOR = _1ab04b4cd__IDS_BINARY_OPERATOR;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_IDS_TRINARY_OPERATOR = _1ab04b4cd__IDS_TRINARY_OPERATOR;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_IDEOGRAPHIC = _1ab04b4cd__IDEOGRAPHIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_JOIN_CONTROL = _1ab04b4cd__JOIN_CONTROL;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_LOGICAL_ORDER_EXCEPTION = _1ab04b4cd__LOGICAL_ORDER_EXCEPTION;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_NONCHARACTER_CODE_POINT = _1ab04b4cd__NONCHARACTER_CODE_POINT;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OTHER_ALPHABETIC = _1ab04b4cd__OTHER_ALPHABETIC;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OTHER_DEFAULT_IGNORABLE_CODE_POINT = _1ab04b4cd__OTHER_DEFAULT_IGNORABLE_CODE_POINT;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OTHER_GRAPHEME_EXTEND = _1ab04b4cd__OTHER_GRAPHEME_EXTEND;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OTHER_ID_CONTINUE = _1ab04b4cd__OTHER_ID_CONTINUE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OTHER_ID_START = _1ab04b4cd__OTHER_ID_START;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OTHER_LOWERCASE = _1ab04b4cd__OTHER_LOWERCASE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OTHER_MATH = _1ab04b4cd__OTHER_MATH;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_OTHER_UPPERCASE = _1ab04b4cd__OTHER_UPPERCASE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PATTERN_SYNTAX = _1ab04b4cd__PATTERN_SYNTAX;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PATTERN_WHITE_SPACE = _1ab04b4cd__PATTERN_WHITE_SPACE;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_PREPENDED_CONCATENATION_MARK = _1ab04b4cd__PREPENDED_CONCATENATION_MARK;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_QUOTATION_MARK = _1ab04b4cd__QUOTATION_MARK;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_RADICAL = _1ab04b4cd__RADICAL;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_REGIONAL_INDICATOR = _1ab04b4cd__REGIONAL_INDICATOR;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SENTENCE_TERMINAL = _1ab04b4cd__SENTENCE_TERMINAL;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_SOFT_DOTTED = _1ab04b4cd__SOFT_DOTTED;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_TERMINAL_PUNCTUATION = _1ab04b4cd__TERMINAL_PUNCTUATION;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_UNIFIED_IDEOGRAPH = _1ab04b4cd__UNIFIED_IDEOGRAPH;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_VARIATION_SELECTOR = _1ab04b4cd__VARIATION_SELECTOR;
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_WHITE_SPACE = _1ab04b4cd__WHITE_SPACE;
static jule::Map<jule::Str,jule::Ref<_1ab2133dc_RangeTable>> _1ab04b4cd_PROPERTIES = jule::Map<jule::Str,jule::Ref<_1ab2133dc_RangeTable>>({{jule::Str("ASCII_HEX_DIGIT", 15),_1ab04b4cd_ASCII_HEX_DIGIT},{jule::Str("BIDI_CONTROL", 12),_1ab04b4cd_BIDI_CONTROL},{jule::Str("DASH", 4),_1ab04b4cd_DASH},{jule::Str("DEPRECATED", 10),_1ab04b4cd_DEPRECATED},{jule::Str("DIACRITIC", 9),_1ab04b4cd_DIACRITIC},{jule::Str("EXTENDER", 8),_1ab04b4cd_EXTENDER},{jule::Str("HEX_DIGIT", 9),_1ab04b4cd_HEX_DIGIT},{jule::Str("HYPHEN", 6),_1ab04b4cd_HYPHEN},{jule::Str("IDS_BINARY_OPERATOR", 19),_1ab04b4cd_IDS_BINARY_OPERATOR},{jule::Str("IDS_TRINARY_OPERATOR", 20),_1ab04b4cd_IDS_TRINARY_OPERATOR},{jule::Str("IDEOGRAPHIC", 11),_1ab04b4cd_IDEOGRAPHIC},{jule::Str("JOIN_CONTROL", 12),_1ab04b4cd_JOIN_CONTROL},{jule::Str("LOGICAL_ORDER_EXCEPTION", 23),_1ab04b4cd_LOGICAL_ORDER_EXCEPTION},{jule::Str("NONCHARACTER_CODE_POINT", 23),_1ab04b4cd_NONCHARACTER_CODE_POINT},{jule::Str("OTHER_ALPHABETIC", 16),_1ab04b4cd_OTHER_ALPHABETIC},{jule::Str("OTHER_DEFAULT_IGNORABLE_CODE_POINT", 34),_1ab04b4cd_OTHER_DEFAULT_IGNORABLE_CODE_POINT},{jule::Str("OTHER_GRAPHEME_EXTEND", 21),_1ab04b4cd_OTHER_GRAPHEME_EXTEND},{jule::Str("OTHER_ID_CONTINUE", 17),_1ab04b4cd_OTHER_ID_CONTINUE},{jule::Str("OTHER_ID_START", 14),_1ab04b4cd_OTHER_ID_START},{jule::Str("OTHER_LOWERCASE", 15),_1ab04b4cd_OTHER_LOWERCASE},{jule::Str("OTHER_MATH", 10),_1ab04b4cd_OTHER_MATH},{jule::Str("OTHER_UPPERCASE", 15),_1ab04b4cd_OTHER_UPPERCASE},{jule::Str("PATTERN_SYNTAX", 14),_1ab04b4cd_PATTERN_SYNTAX},{jule::Str("PATTERN_WHITE_SPACE", 19),_1ab04b4cd_PATTERN_WHITE_SPACE},{jule::Str("PREPENDED_CONCATENATION_MARK", 28),_1ab04b4cd_PREPENDED_CONCATENATION_MARK},{jule::Str("QUOTATION_MARK", 14),_1ab04b4cd_QUOTATION_MARK},{jule::Str("RADICAL", 7),_1ab04b4cd_RADICAL},{jule::Str("REGIONAL_INDICATOR", 18),_1ab04b4cd_REGIONAL_INDICATOR},{jule::Str("SENTENCE_TERMINAL", 17),_1ab04b4cd_SENTENCE_TERMINAL},{jule::Str("SOFT_DOTTED", 11),_1ab04b4cd_SOFT_DOTTED},{jule::Str("TERMINAL_PUNCTUATION", 20),_1ab04b4cd_TERMINAL_PUNCTUATION},{jule::Str("UNIFIED_IDEOGRAPH", 17),_1ab04b4cd_UNIFIED_IDEOGRAPH},{jule::Str("VARIATION_SELECTOR", 18),_1ab04b4cd_VARIATION_SELECTOR},{jule::Str("WHITE_SPACE", 11),_1ab04b4cd_WHITE_SPACE}});
static jule::Array<jule::U8,256> _1ab04b4cd__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
static jule::Array<jule::U16,128> _1ab04b4cd_ASCII_FOLD = jule::Array<jule::U16,128>({0LLU,1LLU,2LLU,3LLU,4LLU,5LLU,6LLU,7LLU,8LLU,9LLU,10LLU,11LLU,12LLU,13LLU,14LLU,15LLU,16LLU,17LLU,18LLU,19LLU,20LLU,21LLU,22LLU,23LLU,24LLU,25LLU,26LLU,27LLU,28LLU,29LLU,30LLU,31LLU,32LLU,33LLU,34LLU,35LLU,36LLU,37LLU,38LLU,39LLU,40LLU,41LLU,42LLU,43LLU,44LLU,45LLU,46LLU,47LLU,48LLU,49LLU,50LLU,51LLU,52LLU,53LLU,54LLU,55LLU,56LLU,57LLU,58LLU,59LLU,60LLU,61LLU,62LLU,63LLU,64LLU,97LLU,98LLU,99LLU,100LLU,101LLU,102LLU,103LLU,104LLU,105LLU,106LLU,107LLU,108LLU,109LLU,110LLU,111LLU,112LLU,113LLU,114LLU,115LLU,116LLU,117LLU,118LLU,119LLU,120LLU,121LLU,122LLU,91LLU,92LLU,93LLU,94LLU,95LLU,96LLU,65LLU,66LLU,67LLU,68LLU,69LLU,70LLU,71LLU,72LLU,73LLU,74LLU,8490LLU,76LLU,77LLU,78LLU,79LLU,80LLU,81LLU,82LLU,383LLU,84LLU,85LLU,86LLU,87LLU,88LLU,89LLU,90LLU,123LLU,124LLU,125LLU,126LLU,127LLU});
static jule::Slice<_1ab2133dc_FoldPair> _1ab04b4cd_CASE_ORBIT = jule::Slice<_1ab2133dc_FoldPair>({_1ab2133dc_FoldPair(75LLU,107LLU),_1ab2133dc_FoldPair(83LLU,115LLU),_1ab2133dc_FoldPair(107LLU,8490LLU),_1ab2133dc_FoldPair(115LLU,383LLU),_1ab2133dc_FoldPair(181LLU,924LLU),_1ab2133dc_FoldPair(197LLU,229LLU),_1ab2133dc_FoldPair(223LLU,7838LLU),_1ab2133dc_FoldPair(229LLU,8491LLU),_1ab2133dc_FoldPair(304LLU,304LLU),_1ab2133dc_FoldPair(305LLU,305LLU),_1ab2133dc_FoldPair(383LLU,83LLU),_1ab2133dc_FoldPair(452LLU,453LLU),_1ab2133dc_FoldPair(453LLU,454LLU),_1ab2133dc_FoldPair(454LLU,452LLU),_1ab2133dc_FoldPair(455LLU,456LLU),_1ab2133dc_FoldPair(456LLU,457LLU),_1ab2133dc_FoldPair(457LLU,455LLU),_1ab2133dc_FoldPair(458LLU,459LLU),_1ab2133dc_FoldPair(459LLU,460LLU),_1ab2133dc_FoldPair(460LLU,458LLU),_1ab2133dc_FoldPair(497LLU,498LLU),_1ab2133dc_FoldPair(498LLU,499LLU),_1ab2133dc_FoldPair(499LLU,497LLU),_1ab2133dc_FoldPair(837LLU,921LLU),_1ab2133dc_FoldPair(914LLU,946LLU),_1ab2133dc_FoldPair(917LLU,949LLU),_1ab2133dc_FoldPair(920LLU,952LLU),_1ab2133dc_FoldPair(921LLU,953LLU),_1ab2133dc_FoldPair(922LLU,954LLU),_1ab2133dc_FoldPair(924LLU,956LLU),_1ab2133dc_FoldPair(928LLU,960LLU),_1ab2133dc_FoldPair(929LLU,961LLU),_1ab2133dc_FoldPair(931LLU,962LLU),_1ab2133dc_FoldPair(934LLU,966LLU),_1ab2133dc_FoldPair(937LLU,969LLU),_1ab2133dc_FoldPair(946LLU,976LLU),_1ab2133dc_FoldPair(949LLU,1013LLU),_1ab2133dc_FoldPair(952LLU,977LLU),_1ab2133dc_FoldPair(953LLU,8126LLU),_1ab2133dc_FoldPair(954LLU,1008LLU),_1ab2133dc_FoldPair(956LLU,181LLU),_1ab2133dc_FoldPair(960LLU,982LLU),_1ab2133dc_FoldPair(961LLU,1009LLU),_1ab2133dc_FoldPair(962LLU,963LLU),_1ab2133dc_FoldPair(963LLU,931LLU),_1ab2133dc_FoldPair(966LLU,981LLU),_1ab2133dc_FoldPair(969LLU,8486LLU),_1ab2133dc_FoldPair(976LLU,914LLU),_1ab2133dc_FoldPair(977LLU,1012LLU),_1ab2133dc_FoldPair(981LLU,934LLU),_1ab2133dc_FoldPair(982LLU,928LLU),_1ab2133dc_FoldPair(1008LLU,922LLU),_1ab2133dc_FoldPair(1009LLU,929LLU),_1ab2133dc_FoldPair(1012LLU,920LLU),_1ab2133dc_FoldPair(1013LLU,917LLU),_1ab2133dc_FoldPair(1042LLU,1074LLU),_1ab2133dc_FoldPair(1044LLU,1076LLU),_1ab2133dc_FoldPair(1054LLU,1086LLU),_1ab2133dc_FoldPair(1057LLU,1089LLU),_1ab2133dc_FoldPair(1058LLU,1090LLU),_1ab2133dc_FoldPair(1066LLU,1098LLU),_1ab2133dc_FoldPair(1074LLU,7296LLU),_1ab2133dc_FoldPair(1076LLU,7297LLU),_1ab2133dc_FoldPair(1086LLU,7298LLU),_1ab2133dc_FoldPair(1089LLU,7299LLU),_1ab2133dc_FoldPair(1090LLU,7300LLU),_1ab2133dc_FoldPair(1098LLU,7302LLU),_1ab2133dc_FoldPair(1122LLU,1123LLU),_1ab2133dc_FoldPair(1123LLU,7303LLU),_1ab2133dc_FoldPair(7296LLU,1042LLU),_1ab2133dc_FoldPair(7297LLU,1044LLU),_1ab2133dc_FoldPair(7298LLU,1054LLU),_1ab2133dc_FoldPair(7299LLU,1057LLU),_1ab2133dc_FoldPair(7300LLU,7301LLU),_1ab2133dc_FoldPair(7301LLU,1058LLU),_1ab2133dc_FoldPair(7302LLU,1066LLU),_1ab2133dc_FoldPair(7303LLU,1122LLU),_1ab2133dc_FoldPair(7304LLU,42570LLU),_1ab2133dc_FoldPair(7776LLU,7777LLU),_1ab2133dc_FoldPair(7777LLU,7835LLU),_1ab2133dc_FoldPair(7835LLU,7776LLU),_1ab2133dc_FoldPair(7838LLU,223LLU),_1ab2133dc_FoldPair(8126LLU,837LLU),_1ab2133dc_FoldPair(8486LLU,937LLU),_1ab2133dc_FoldPair(8490LLU,75LLU),_1ab2133dc_FoldPair(8491LLU,197LLU),_1ab2133dc_FoldPair(42570LLU,42571LLU),_1ab2133dc_FoldPair(42571LLU,7304LLU)});
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_FOLD_L = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(837LLU,837LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_FOLD_LL = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(65LLU,90LLU,1LLU),_1ab2133dc_Range16(192LLU,214LLU,1LLU),_1ab2133dc_Range16(216LLU,222LLU,1LLU),_1ab2133dc_Range16(256LLU,302LLU,2LLU),_1ab2133dc_Range16(306LLU,310LLU,2LLU),_1ab2133dc_Range16(313LLU,327LLU,2LLU),_1ab2133dc_Range16(330LLU,376LLU,2LLU),_1ab2133dc_Range16(377LLU,381LLU,2LLU),_1ab2133dc_Range16(385LLU,386LLU,1LLU),_1ab2133dc_Range16(388LLU,390LLU,2LLU),_1ab2133dc_Range16(391LLU,393LLU,2LLU),_1ab2133dc_Range16(394LLU,395LLU,1LLU),_1ab2133dc_Range16(398LLU,401LLU,1LLU),_1ab2133dc_Range16(403LLU,404LLU,1LLU),_1ab2133dc_Range16(406LLU,408LLU,1LLU),_1ab2133dc_Range16(412LLU,413LLU,1LLU),_1ab2133dc_Range16(415LLU,416LLU,1LLU),_1ab2133dc_Range16(418LLU,422LLU,2LLU),_1ab2133dc_Range16(423LLU,425LLU,2LLU),_1ab2133dc_Range16(428LLU,430LLU,2LLU),_1ab2133dc_Range16(431LLU,433LLU,2LLU),_1ab2133dc_Range16(434LLU,435LLU,1LLU),_1ab2133dc_Range16(437LLU,439LLU,2LLU),_1ab2133dc_Range16(440LLU,444LLU,4LLU),_1ab2133dc_Range16(452LLU,453LLU,1LLU),_1ab2133dc_Range16(455LLU,456LLU,1LLU),_1ab2133dc_Range16(458LLU,459LLU,1LLU),_1ab2133dc_Range16(461LLU,475LLU,2LLU),_1ab2133dc_Range16(478LLU,494LLU,2LLU),_1ab2133dc_Range16(497LLU,498LLU,1LLU),_1ab2133dc_Range16(500LLU,502LLU,2LLU),_1ab2133dc_Range16(503LLU,504LLU,1LLU),_1ab2133dc_Range16(506LLU,562LLU,2LLU),_1ab2133dc_Range16(570LLU,571LLU,1LLU),_1ab2133dc_Range16(573LLU,574LLU,1LLU),_1ab2133dc_Range16(577LLU,579LLU,2LLU),_1ab2133dc_Range16(580LLU,582LLU,1LLU),_1ab2133dc_Range16(584LLU,590LLU,2LLU),_1ab2133dc_Range16(837LLU,880LLU,43LLU),_1ab2133dc_Range16(882LLU,886LLU,4LLU),_1ab2133dc_Range16(895LLU,902LLU,7LLU),_1ab2133dc_Range16(904LLU,906LLU,1LLU),_1ab2133dc_Range16(908LLU,910LLU,2LLU),_1ab2133dc_Range16(911LLU,913LLU,2LLU),_1ab2133dc_Range16(914LLU,929LLU,1LLU),_1ab2133dc_Range16(931LLU,939LLU,1LLU),_1ab2133dc_Range16(975LLU,984LLU,9LLU),_1ab2133dc_Range16(986LLU,1006LLU,2LLU),_1ab2133dc_Range16(1012LLU,1015LLU,3LLU),_1ab2133dc_Range16(1017LLU,1018LLU,1LLU),_1ab2133dc_Range16(1021LLU,1071LLU,1LLU),_1ab2133dc_Range16(1120LLU,1152LLU,2LLU),_1ab2133dc_Range16(1162LLU,1216LLU,2LLU),_1ab2133dc_Range16(1217LLU,1229LLU,2LLU),_1ab2133dc_Range16(1232LLU,1326LLU,2LLU),_1ab2133dc_Range16(1329LLU,1366LLU,1LLU),_1ab2133dc_Range16(4256LLU,4293LLU,1LLU),_1ab2133dc_Range16(4295LLU,4301LLU,6LLU),_1ab2133dc_Range16(5024LLU,5109LLU,1LLU),_1ab2133dc_Range16(7312LLU,7354LLU,1LLU),_1ab2133dc_Range16(7357LLU,7359LLU,1LLU),_1ab2133dc_Range16(7680LLU,7828LLU,2LLU),_1ab2133dc_Range16(7838LLU,7934LLU,2LLU),_1ab2133dc_Range16(7944LLU,7951LLU,1LLU),_1ab2133dc_Range16(7960LLU,7965LLU,1LLU),_1ab2133dc_Range16(7976LLU,7983LLU,1LLU),_1ab2133dc_Range16(7992LLU,7999LLU,1LLU),_1ab2133dc_Range16(8008LLU,8013LLU,1LLU),_1ab2133dc_Range16(8025LLU,8031LLU,2LLU),_1ab2133dc_Range16(8040LLU,8047LLU,1LLU),_1ab2133dc_Range16(8072LLU,8079LLU,1LLU),_1ab2133dc_Range16(8088LLU,8095LLU,1LLU),_1ab2133dc_Range16(8104LLU,8111LLU,1LLU),_1ab2133dc_Range16(8120LLU,8124LLU,1LLU),_1ab2133dc_Range16(8136LLU,8140LLU,1LLU),_1ab2133dc_Range16(8152LLU,8155LLU,1LLU),_1ab2133dc_Range16(8168LLU,8172LLU,1LLU),_1ab2133dc_Range16(8184LLU,8188LLU,1LLU),_1ab2133dc_Range16(8486LLU,8490LLU,4LLU),_1ab2133dc_Range16(8491LLU,8498LLU,7LLU),_1ab2133dc_Range16(8579LLU,11264LLU,2685LLU),_1ab2133dc_Range16(11265LLU,11311LLU,1LLU),_1ab2133dc_Range16(11360LLU,11362LLU,2LLU),_1ab2133dc_Range16(11363LLU,11364LLU,1LLU),_1ab2133dc_Range16(11367LLU,11373LLU,2LLU),_1ab2133dc_Range16(11374LLU,11376LLU,1LLU),_1ab2133dc_Range16(11378LLU,11381LLU,3LLU),_1ab2133dc_Range16(11390LLU,11392LLU,1LLU),_1ab2133dc_Range16(11394LLU,11490LLU,2LLU),_1ab2133dc_Range16(11499LLU,11501LLU,2LLU),_1ab2133dc_Range16(11506LLU,42560LLU,31054LLU),_1ab2133dc_Range16(42562LLU,42604LLU,2LLU),_1ab2133dc_Range16(42624LLU,42650LLU,2LLU),_1ab2133dc_Range16(42786LLU,42798LLU,2LLU),_1ab2133dc_Range16(42802LLU,42862LLU,2LLU),_1ab2133dc_Range16(42873LLU,42877LLU,2LLU),_1ab2133dc_Range16(42878LLU,42886LLU,2LLU),_1ab2133dc_Range16(42891LLU,42893LLU,2LLU),_1ab2133dc_Range16(42896LLU,42898LLU,2LLU),_1ab2133dc_Range16(42902LLU,42922LLU,2LLU),_1ab2133dc_Range16(42923LLU,42926LLU,1LLU),_1ab2133dc_Range16(42928LLU,42932LLU,1LLU),_1ab2133dc_Range16(42934LLU,42948LLU,2LLU),_1ab2133dc_Range16(42949LLU,42951LLU,1LLU),_1ab2133dc_Range16(42953LLU,42960LLU,7LLU),_1ab2133dc_Range16(42966LLU,42968LLU,2LLU),_1ab2133dc_Range16(42997LLU,65313LLU,22316LLU),_1ab2133dc_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66560LLU,66599LLU,1LLU),_1ab2133dc_Range32(66736LLU,66771LLU,1LLU),_1ab2133dc_Range32(66928LLU,66938LLU,1LLU),_1ab2133dc_Range32(66940LLU,66954LLU,1LLU),_1ab2133dc_Range32(66956LLU,66962LLU,1LLU),_1ab2133dc_Range32(66964LLU,66965LLU,1LLU),_1ab2133dc_Range32(68736LLU,68786LLU,1LLU),_1ab2133dc_Range32(71840LLU,71871LLU,1LLU),_1ab2133dc_Range32(93760LLU,93791LLU,1LLU),_1ab2133dc_Range32(125184LLU,125217LLU,1LLU)}),3LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_FOLD_LT = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(452LLU,454LLU,2LLU),_1ab2133dc_Range16(455LLU,457LLU,2LLU),_1ab2133dc_Range16(458LLU,460LLU,2LLU),_1ab2133dc_Range16(497LLU,499LLU,2LLU),_1ab2133dc_Range16(8064LLU,8071LLU,1LLU),_1ab2133dc_Range16(8080LLU,8087LLU,1LLU),_1ab2133dc_Range16(8096LLU,8103LLU,1LLU),_1ab2133dc_Range16(8115LLU,8131LLU,16LLU),_1ab2133dc_Range16(8179LLU,8179LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_FOLD_LU = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(97LLU,122LLU,1LLU),_1ab2133dc_Range16(181LLU,223LLU,42LLU),_1ab2133dc_Range16(224LLU,246LLU,1LLU),_1ab2133dc_Range16(248LLU,255LLU,1LLU),_1ab2133dc_Range16(257LLU,303LLU,2LLU),_1ab2133dc_Range16(307LLU,311LLU,2LLU),_1ab2133dc_Range16(314LLU,328LLU,2LLU),_1ab2133dc_Range16(331LLU,375LLU,2LLU),_1ab2133dc_Range16(378LLU,382LLU,2LLU),_1ab2133dc_Range16(383LLU,384LLU,1LLU),_1ab2133dc_Range16(387LLU,389LLU,2LLU),_1ab2133dc_Range16(392LLU,396LLU,4LLU),_1ab2133dc_Range16(402LLU,405LLU,3LLU),_1ab2133dc_Range16(409LLU,410LLU,1LLU),_1ab2133dc_Range16(414LLU,417LLU,3LLU),_1ab2133dc_Range16(419LLU,421LLU,2LLU),_1ab2133dc_Range16(424LLU,429LLU,5LLU),_1ab2133dc_Range16(432LLU,436LLU,4LLU),_1ab2133dc_Range16(438LLU,441LLU,3LLU),_1ab2133dc_Range16(445LLU,447LLU,2LLU),_1ab2133dc_Range16(453LLU,454LLU,1LLU),_1ab2133dc_Range16(456LLU,457LLU,1LLU),_1ab2133dc_Range16(459LLU,460LLU,1LLU),_1ab2133dc_Range16(462LLU,476LLU,2LLU),_1ab2133dc_Range16(477LLU,495LLU,2LLU),_1ab2133dc_Range16(498LLU,499LLU,1LLU),_1ab2133dc_Range16(501LLU,505LLU,4LLU),_1ab2133dc_Range16(507LLU,543LLU,2LLU),_1ab2133dc_Range16(547LLU,563LLU,2LLU),_1ab2133dc_Range16(572LLU,575LLU,3LLU),_1ab2133dc_Range16(576LLU,578LLU,2LLU),_1ab2133dc_Range16(583LLU,591LLU,2LLU),_1ab2133dc_Range16(592LLU,596LLU,1LLU),_1ab2133dc_Range16(598LLU,599LLU,1LLU),_1ab2133dc_Range16(601LLU,603LLU,2LLU),_1ab2133dc_Range16(604LLU,608LLU,4LLU),_1ab2133dc_Range16(609LLU,613LLU,2LLU),_1ab2133dc_Range16(614LLU,616LLU,2LLU),_1ab2133dc_Range16(617LLU,620LLU,1LLU),_1ab2133dc_Range16(623LLU,625LLU,2LLU),_1ab2133dc_Range16(626LLU,629LLU,3LLU),_1ab2133dc_Range16(637LLU,640LLU,3LLU),_1ab2133dc_Range16(642LLU,643LLU,1LLU),_1ab2133dc_Range16(647LLU,652LLU,1LLU),_1ab2133dc_Range16(658LLU,669LLU,11LLU),_1ab2133dc_Range16(670LLU,837LLU,167LLU),_1ab2133dc_Range16(881LLU,883LLU,2LLU),_1ab2133dc_Range16(887LLU,891LLU,4LLU),_1ab2133dc_Range16(892LLU,893LLU,1LLU),_1ab2133dc_Range16(940LLU,943LLU,1LLU),_1ab2133dc_Range16(945LLU,974LLU,1LLU),_1ab2133dc_Range16(976LLU,977LLU,1LLU),_1ab2133dc_Range16(981LLU,983LLU,1LLU),_1ab2133dc_Range16(985LLU,1007LLU,2LLU),_1ab2133dc_Range16(1008LLU,1011LLU,1LLU),_1ab2133dc_Range16(1013LLU,1019LLU,3LLU),_1ab2133dc_Range16(1072LLU,1119LLU,1LLU),_1ab2133dc_Range16(1121LLU,1153LLU,2LLU),_1ab2133dc_Range16(1163LLU,1215LLU,2LLU),_1ab2133dc_Range16(1218LLU,1230LLU,2LLU),_1ab2133dc_Range16(1231LLU,1327LLU,2LLU),_1ab2133dc_Range16(1377LLU,1414LLU,1LLU),_1ab2133dc_Range16(4304LLU,4346LLU,1LLU),_1ab2133dc_Range16(4349LLU,4351LLU,1LLU),_1ab2133dc_Range16(5112LLU,5117LLU,1LLU),_1ab2133dc_Range16(7296LLU,7304LLU,1LLU),_1ab2133dc_Range16(7545LLU,7549LLU,4LLU),_1ab2133dc_Range16(7566LLU,7681LLU,115LLU),_1ab2133dc_Range16(7683LLU,7829LLU,2LLU),_1ab2133dc_Range16(7835LLU,7841LLU,6LLU),_1ab2133dc_Range16(7843LLU,7935LLU,2LLU),_1ab2133dc_Range16(7936LLU,7943LLU,1LLU),_1ab2133dc_Range16(7952LLU,7957LLU,1LLU),_1ab2133dc_Range16(7968LLU,7975LLU,1LLU),_1ab2133dc_Range16(7984LLU,7991LLU,1LLU),_1ab2133dc_Range16(8000LLU,8005LLU,1LLU),_1ab2133dc_Range16(8017LLU,8023LLU,2LLU),_1ab2133dc_Range16(8032LLU,8039LLU,1LLU),_1ab2133dc_Range16(8048LLU,8061LLU,1LLU),_1ab2133dc_Range16(8112LLU,8113LLU,1LLU),_1ab2133dc_Range16(8126LLU,8144LLU,18LLU),_1ab2133dc_Range16(8145LLU,8160LLU,15LLU),_1ab2133dc_Range16(8161LLU,8165LLU,4LLU),_1ab2133dc_Range16(8526LLU,8580LLU,54LLU),_1ab2133dc_Range16(11312LLU,11359LLU,1LLU),_1ab2133dc_Range16(11361LLU,11365LLU,4LLU),_1ab2133dc_Range16(11366LLU,11372LLU,2LLU),_1ab2133dc_Range16(11379LLU,11382LLU,3LLU),_1ab2133dc_Range16(11393LLU,11491LLU,2LLU),_1ab2133dc_Range16(11500LLU,11502LLU,2LLU),_1ab2133dc_Range16(11507LLU,11520LLU,13LLU),_1ab2133dc_Range16(11521LLU,11557LLU,1LLU),_1ab2133dc_Range16(11559LLU,11565LLU,6LLU),_1ab2133dc_Range16(42561LLU,42605LLU,2LLU),_1ab2133dc_Range16(42625LLU,42651LLU,2LLU),_1ab2133dc_Range16(42787LLU,42799LLU,2LLU),_1ab2133dc_Range16(42803LLU,42863LLU,2LLU),_1ab2133dc_Range16(42874LLU,42876LLU,2LLU),_1ab2133dc_Range16(42879LLU,42887LLU,2LLU),_1ab2133dc_Range16(42892LLU,42897LLU,5LLU),_1ab2133dc_Range16(42899LLU,42900LLU,1LLU),_1ab2133dc_Range16(42903LLU,42921LLU,2LLU),_1ab2133dc_Range16(42933LLU,42947LLU,2LLU),_1ab2133dc_Range16(42952LLU,42954LLU,2LLU),_1ab2133dc_Range16(42961LLU,42967LLU,6LLU),_1ab2133dc_Range16(42969LLU,42998LLU,29LLU),_1ab2133dc_Range16(43859LLU,43888LLU,29LLU),_1ab2133dc_Range16(43889LLU,43967LLU,1LLU),_1ab2133dc_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>({_1ab2133dc_Range32(66600LLU,66639LLU,1LLU),_1ab2133dc_Range32(66776LLU,66811LLU,1LLU),_1ab2133dc_Range32(66967LLU,66977LLU,1LLU),_1ab2133dc_Range32(66979LLU,66993LLU,1LLU),_1ab2133dc_Range32(66995LLU,67001LLU,1LLU),_1ab2133dc_Range32(67003LLU,67004LLU,1LLU),_1ab2133dc_Range32(68800LLU,68850LLU,1LLU),_1ab2133dc_Range32(71872LLU,71903LLU,1LLU),_1ab2133dc_Range32(93792LLU,93823LLU,1LLU),_1ab2133dc_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_FOLD_M = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(921LLU,953LLU,32LLU),_1ab2133dc_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_FOLD_MN = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(921LLU,953LLU,32LLU),_1ab2133dc_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Map<jule::Str,jule::Ref<_1ab2133dc_RangeTable>> _1ab04b4cd_FOLD_CATEGORY = jule::Map<jule::Str,jule::Ref<_1ab2133dc_RangeTable>>({{jule::Str("L", 1),_1ab04b4cd_FOLD_L},{jule::Str("LL", 2),_1ab04b4cd_FOLD_LL},{jule::Str("LT", 2),_1ab04b4cd_FOLD_LT},{jule::Str("LU", 2),_1ab04b4cd_FOLD_LU},{jule::Str("M", 1),_1ab04b4cd_FOLD_M},{jule::Str("MN", 2),_1ab04b4cd_FOLD_MN}});
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_FOLD_COMMON = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(924LLU,956LLU,32LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_FOLD_GREEK = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(181LLU,837LLU,656LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Ref<_1ab2133dc_RangeTable> _1ab04b4cd_FOLD_INHERITED = jule::new_struct<_1ab2133dc_RangeTable>(new( std::nothrow ) _1ab2133dc_RangeTable(jule::Slice<_1ab2133dc_Range16>({_1ab2133dc_Range16(921LLU,953LLU,32LLU),_1ab2133dc_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1ab2133dc_Range32>(),jule::Int()));
static jule::Map<jule::Str,jule::Ref<_1ab2133dc_RangeTable>> _1ab04b4cd_FOLD_SCRIPT = jule::Map<jule::Str,jule::Ref<_1ab2133dc_RangeTable>>({{jule::Str("Common", 6),_1ab04b4cd_FOLD_COMMON},{jule::Str("Greek", 5),_1ab04b4cd_FOLD_GREEK},{jule::Str("Inherited", 9),_1ab04b4cd_FOLD_INHERITED}});
static jule::Slice<_1ab2133dc_CaseRange> _1ab04b4cd__CASE_RANGES = jule::Slice<_1ab2133dc_CaseRange>({_1ab2133dc_CaseRange(65LLU,90LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1ab2133dc_CaseRange(97LLU,122LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1ab2133dc_CaseRange(181LLU,181LLU,jule::Array<jule::I32,3>({743LL,0LL,743LL})),_1ab2133dc_CaseRange(192LLU,214LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1ab2133dc_CaseRange(216LLU,222LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1ab2133dc_CaseRange(224LLU,246LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1ab2133dc_CaseRange(248LLU,254LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1ab2133dc_CaseRange(255LLU,255LLU,jule::Array<jule::I32,3>({121LL,0LL,121LL})),_1ab2133dc_CaseRange(256LLU,303LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(304LLU,304LLU,jule::Array<jule::I32,3>({0LL,-199LL,0LL})),_1ab2133dc_CaseRange(305LLU,305LLU,jule::Array<jule::I32,3>({-232LL,0LL,-232LL})),_1ab2133dc_CaseRange(306LLU,311LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(313LLU,328LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(330LLU,375LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(376LLU,376LLU,jule::Array<jule::I32,3>({0LL,-121LL,0LL})),_1ab2133dc_CaseRange(377LLU,382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(383LLU,383LLU,jule::Array<jule::I32,3>({-300LL,0LL,-300LL})),_1ab2133dc_CaseRange(384LLU,384LLU,jule::Array<jule::I32,3>({195LL,0LL,195LL})),_1ab2133dc_CaseRange(385LLU,385LLU,jule::Array<jule::I32,3>({0LL,210LL,0LL})),_1ab2133dc_CaseRange(386LLU,389LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(390LLU,390LLU,jule::Array<jule::I32,3>({0LL,206LL,0LL})),_1ab2133dc_CaseRange(391LLU,392LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(393LLU,394LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_1ab2133dc_CaseRange(395LLU,396LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(398LLU,398LLU,jule::Array<jule::I32,3>({0LL,79LL,0LL})),_1ab2133dc_CaseRange(399LLU,399LLU,jule::Array<jule::I32,3>({0LL,202LL,0LL})),_1ab2133dc_CaseRange(400LLU,400LLU,jule::Array<jule::I32,3>({0LL,203LL,0LL})),_1ab2133dc_CaseRange(401LLU,402LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(403LLU,403LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_1ab2133dc_CaseRange(404LLU,404LLU,jule::Array<jule::I32,3>({0LL,207LL,0LL})),_1ab2133dc_CaseRange(405LLU,405LLU,jule::Array<jule::I32,3>({97LL,0LL,97LL})),_1ab2133dc_CaseRange(406LLU,406LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_1ab2133dc_CaseRange(407LLU,407LLU,jule::Array<jule::I32,3>({0LL,209LL,0LL})),_1ab2133dc_CaseRange(408LLU,409LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(410LLU,410LLU,jule::Array<jule::I32,3>({163LL,0LL,163LL})),_1ab2133dc_CaseRange(412LLU,412LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_1ab2133dc_CaseRange(413LLU,413LLU,jule::Array<jule::I32,3>({0LL,213LL,0LL})),_1ab2133dc_CaseRange(414LLU,414LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_1ab2133dc_CaseRange(415LLU,415LLU,jule::Array<jule::I32,3>({0LL,214LL,0LL})),_1ab2133dc_CaseRange(416LLU,421LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(422LLU,422LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1ab2133dc_CaseRange(423LLU,424LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(425LLU,425LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1ab2133dc_CaseRange(428LLU,429LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(430LLU,430LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1ab2133dc_CaseRange(431LLU,432LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(433LLU,434LLU,jule::Array<jule::I32,3>({0LL,217LL,0LL})),_1ab2133dc_CaseRange(435LLU,438LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(439LLU,439LLU,jule::Array<jule::I32,3>({0LL,219LL,0LL})),_1ab2133dc_CaseRange(440LLU,441LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(444LLU,445LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(447LLU,447LLU,jule::Array<jule::I32,3>({56LL,0LL,56LL})),_1ab2133dc_CaseRange(452LLU,452LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1ab2133dc_CaseRange(453LLU,453LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1ab2133dc_CaseRange(454LLU,454LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1ab2133dc_CaseRange(455LLU,455LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1ab2133dc_CaseRange(456LLU,456LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1ab2133dc_CaseRange(457LLU,457LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1ab2133dc_CaseRange(458LLU,458LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1ab2133dc_CaseRange(459LLU,459LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1ab2133dc_CaseRange(460LLU,460LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1ab2133dc_CaseRange(461LLU,476LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(477LLU,477LLU,jule::Array<jule::I32,3>({-79LL,0LL,-79LL})),_1ab2133dc_CaseRange(478LLU,495LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(497LLU,497LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1ab2133dc_CaseRange(498LLU,498LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1ab2133dc_CaseRange(499LLU,499LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1ab2133dc_CaseRange(500LLU,501LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(502LLU,502LLU,jule::Array<jule::I32,3>({0LL,-97LL,0LL})),_1ab2133dc_CaseRange(503LLU,503LLU,jule::Array<jule::I32,3>({0LL,-56LL,0LL})),_1ab2133dc_CaseRange(504LLU,543LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(544LLU,544LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_1ab2133dc_CaseRange(546LLU,563LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(570LLU,570LLU,jule::Array<jule::I32,3>({0LL,10795LL,0LL})),_1ab2133dc_CaseRange(571LLU,572LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(573LLU,573LLU,jule::Array<jule::I32,3>({0LL,-163LL,0LL})),_1ab2133dc_CaseRange(574LLU,574LLU,jule::Array<jule::I32,3>({0LL,10792LL,0LL})),_1ab2133dc_CaseRange(575LLU,576LLU,jule::Array<jule::I32,3>({10815LL,0LL,10815LL})),_1ab2133dc_CaseRange(577LLU,578LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(579LLU,579LLU,jule::Array<jule::I32,3>({0LL,-195LL,0LL})),_1ab2133dc_CaseRange(580LLU,580LLU,jule::Array<jule::I32,3>({0LL,69LL,0LL})),_1ab2133dc_CaseRange(581LLU,581LLU,jule::Array<jule::I32,3>({0LL,71LL,0LL})),_1ab2133dc_CaseRange(582LLU,591LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(592LLU,592LLU,jule::Array<jule::I32,3>({10783LL,0LL,10783LL})),_1ab2133dc_CaseRange(593LLU,593LLU,jule::Array<jule::I32,3>({10780LL,0LL,10780LL})),_1ab2133dc_CaseRange(594LLU,594LLU,jule::Array<jule::I32,3>({10782LL,0LL,10782LL})),_1ab2133dc_CaseRange(595LLU,595LLU,jule::Array<jule::I32,3>({-210LL,0LL,-210LL})),_1ab2133dc_CaseRange(596LLU,596LLU,jule::Array<jule::I32,3>({-206LL,0LL,-206LL})),_1ab2133dc_CaseRange(598LLU,599LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_1ab2133dc_CaseRange(601LLU,601LLU,jule::Array<jule::I32,3>({-202LL,0LL,-202LL})),_1ab2133dc_CaseRange(603LLU,603LLU,jule::Array<jule::I32,3>({-203LL,0LL,-203LL})),_1ab2133dc_CaseRange(604LLU,604LLU,jule::Array<jule::I32,3>({42319LL,0LL,42319LL})),_1ab2133dc_CaseRange(608LLU,608LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_1ab2133dc_CaseRange(609LLU,609LLU,jule::Array<jule::I32,3>({42315LL,0LL,42315LL})),_1ab2133dc_CaseRange(611LLU,611LLU,jule::Array<jule::I32,3>({-207LL,0LL,-207LL})),_1ab2133dc_CaseRange(613LLU,613LLU,jule::Array<jule::I32,3>({42280LL,0LL,42280LL})),_1ab2133dc_CaseRange(614LLU,614LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_1ab2133dc_CaseRange(616LLU,616LLU,jule::Array<jule::I32,3>({-209LL,0LL,-209LL})),_1ab2133dc_CaseRange(617LLU,617LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_1ab2133dc_CaseRange(618LLU,618LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_1ab2133dc_CaseRange(619LLU,619LLU,jule::Array<jule::I32,3>({10743LL,0LL,10743LL})),_1ab2133dc_CaseRange(620LLU,620LLU,jule::Array<jule::I32,3>({42305LL,0LL,42305LL})),_1ab2133dc_CaseRange(623LLU,623LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_1ab2133dc_CaseRange(625LLU,625LLU,jule::Array<jule::I32,3>({10749LL,0LL,10749LL})),_1ab2133dc_CaseRange(626LLU,626LLU,jule::Array<jule::I32,3>({-213LL,0LL,-213LL})),_1ab2133dc_CaseRange(629LLU,629LLU,jule::Array<jule::I32,3>({-214LL,0LL,-214LL})),_1ab2133dc_CaseRange(637LLU,637LLU,jule::Array<jule::I32,3>({10727LL,0LL,10727LL})),_1ab2133dc_CaseRange(640LLU,640LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1ab2133dc_CaseRange(642LLU,642LLU,jule::Array<jule::I32,3>({42307LL,0LL,42307LL})),_1ab2133dc_CaseRange(643LLU,643LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1ab2133dc_CaseRange(647LLU,647LLU,jule::Array<jule::I32,3>({42282LL,0LL,42282LL})),_1ab2133dc_CaseRange(648LLU,648LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1ab2133dc_CaseRange(649LLU,649LLU,jule::Array<jule::I32,3>({-69LL,0LL,-69LL})),_1ab2133dc_CaseRange(650LLU,651LLU,jule::Array<jule::I32,3>({-217LL,0LL,-217LL})),_1ab2133dc_CaseRange(652LLU,652LLU,jule::Array<jule::I32,3>({-71LL,0LL,-71LL})),_1ab2133dc_CaseRange(658LLU,658LLU,jule::Array<jule::I32,3>({-219LL,0LL,-219LL})),_1ab2133dc_CaseRange(669LLU,669LLU,jule::Array<jule::I32,3>({42261LL,0LL,42261LL})),_1ab2133dc_CaseRange(670LLU,670LLU,jule::Array<jule::I32,3>({42258LL,0LL,42258LL})),_1ab2133dc_CaseRange(837LLU,837LLU,jule::Array<jule::I32,3>({84LL,0LL,84LL})),_1ab2133dc_CaseRange(880LLU,883LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(886LLU,887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(891LLU,893LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_1ab2133dc_CaseRange(895LLU,895LLU,jule::Array<jule::I32,3>({0LL,116LL,0LL})),_1ab2133dc_CaseRange(902LLU,902LLU,jule::Array<jule::I32,3>({0LL,38LL,0LL})),_1ab2133dc_CaseRange(904LLU,906LLU,jule::Array<jule::I32,3>({0LL,37LL,0LL})),_1ab2133dc_CaseRange(908LLU,908LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_1ab2133dc_CaseRange(910LLU,911LLU,jule::Array<jule::I32,3>({0LL,63LL,0LL})),_1ab2133dc_CaseRange(913LLU,929LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1ab2133dc_CaseRange(931LLU,939LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1ab2133dc_CaseRange(940LLU,940LLU,jule::Array<jule::I32,3>({-38LL,0LL,-38LL})),_1ab2133dc_CaseRange(941LLU,943LLU,jule::Array<jule::I32,3>({-37LL,0LL,-37LL})),_1ab2133dc_CaseRange(945LLU,961LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1ab2133dc_CaseRange(962LLU,962LLU,jule::Array<jule::I32,3>({-31LL,0LL,-31LL})),_1ab2133dc_CaseRange(963LLU,971LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1ab2133dc_CaseRange(972LLU,972LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_1ab2133dc_CaseRange(973LLU,974LLU,jule::Array<jule::I32,3>({-63LL,0LL,-63LL})),_1ab2133dc_CaseRange(975LLU,975LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_1ab2133dc_CaseRange(976LLU,976LLU,jule::Array<jule::I32,3>({-62LL,0LL,-62LL})),_1ab2133dc_CaseRange(977LLU,977LLU,jule::Array<jule::I32,3>({-57LL,0LL,-57LL})),_1ab2133dc_CaseRange(981LLU,981LLU,jule::Array<jule::I32,3>({-47LL,0LL,-47LL})),_1ab2133dc_CaseRange(982LLU,982LLU,jule::Array<jule::I32,3>({-54LL,0LL,-54LL})),_1ab2133dc_CaseRange(983LLU,983LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_1ab2133dc_CaseRange(984LLU,1007LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(1008LLU,1008LLU,jule::Array<jule::I32,3>({-86LL,0LL,-86LL})),_1ab2133dc_CaseRange(1009LLU,1009LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_1ab2133dc_CaseRange(1010LLU,1010LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_1ab2133dc_CaseRange(1011LLU,1011LLU,jule::Array<jule::I32,3>({-116LL,0LL,-116LL})),_1ab2133dc_CaseRange(1012LLU,1012LLU,jule::Array<jule::I32,3>({0LL,-60LL,0LL})),_1ab2133dc_CaseRange(1013LLU,1013LLU,jule::Array<jule::I32,3>({-96LL,0LL,-96LL})),_1ab2133dc_CaseRange(1015LLU,1016LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(1017LLU,1017LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_1ab2133dc_CaseRange(1018LLU,1019LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(1021LLU,1023LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_1ab2133dc_CaseRange(1024LLU,1039LLU,jule::Array<jule::I32,3>({0LL,80LL,0LL})),_1ab2133dc_CaseRange(1040LLU,1071LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1ab2133dc_CaseRange(1072LLU,1103LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1ab2133dc_CaseRange(1104LLU,1119LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_1ab2133dc_CaseRange(1120LLU,1153LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(1162LLU,1215LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(1216LLU,1216LLU,jule::Array<jule::I32,3>({0LL,15LL,0LL})),_1ab2133dc_CaseRange(1217LLU,1230LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(1231LLU,1231LLU,jule::Array<jule::I32,3>({-15LL,0LL,-15LL})),_1ab2133dc_CaseRange(1232LLU,1327LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(1329LLU,1366LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_1ab2133dc_CaseRange(1377LLU,1414LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_1ab2133dc_CaseRange(4256LLU,4293LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1ab2133dc_CaseRange(4295LLU,4295LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1ab2133dc_CaseRange(4301LLU,4301LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1ab2133dc_CaseRange(4304LLU,4346LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_1ab2133dc_CaseRange(4349LLU,4351LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_1ab2133dc_CaseRange(5024LLU,5103LLU,jule::Array<jule::I32,3>({0LL,38864LL,0LL})),_1ab2133dc_CaseRange(5104LLU,5109LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_1ab2133dc_CaseRange(5112LLU,5117LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_1ab2133dc_CaseRange(7296LLU,7296LLU,jule::Array<jule::I32,3>({-6254LL,0LL,-6254LL})),_1ab2133dc_CaseRange(7297LLU,7297LLU,jule::Array<jule::I32,3>({-6253LL,0LL,-6253LL})),_1ab2133dc_CaseRange(7298LLU,7298LLU,jule::Array<jule::I32,3>({-6244LL,0LL,-6244LL})),_1ab2133dc_CaseRange(7299LLU,7300LLU,jule::Array<jule::I32,3>({-6242LL,0LL,-6242LL})),_1ab2133dc_CaseRange(7301LLU,7301LLU,jule::Array<jule::I32,3>({-6243LL,0LL,-6243LL})),_1ab2133dc_CaseRange(7302LLU,7302LLU,jule::Array<jule::I32,3>({-6236LL,0LL,-6236LL})),_1ab2133dc_CaseRange(7303LLU,7303LLU,jule::Array<jule::I32,3>({-6181LL,0LL,-6181LL})),_1ab2133dc_CaseRange(7304LLU,7304LLU,jule::Array<jule::I32,3>({35266LL,0LL,35266LL})),_1ab2133dc_CaseRange(7312LLU,7354LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_1ab2133dc_CaseRange(7357LLU,7359LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_1ab2133dc_CaseRange(7545LLU,7545LLU,jule::Array<jule::I32,3>({35332LL,0LL,35332LL})),_1ab2133dc_CaseRange(7549LLU,7549LLU,jule::Array<jule::I32,3>({3814LL,0LL,3814LL})),_1ab2133dc_CaseRange(7566LLU,7566LLU,jule::Array<jule::I32,3>({35384LL,0LL,35384LL})),_1ab2133dc_CaseRange(7680LLU,7829LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(7835LLU,7835LLU,jule::Array<jule::I32,3>({-59LL,0LL,-59LL})),_1ab2133dc_CaseRange(7838LLU,7838LLU,jule::Array<jule::I32,3>({0LL,-7615LL,0LL})),_1ab2133dc_CaseRange(7840LLU,7935LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(7936LLU,7943LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(7944LLU,7951LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(7952LLU,7957LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(7960LLU,7965LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(7968LLU,7975LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(7976LLU,7983LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(7984LLU,7991LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(7992LLU,7999LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(8000LLU,8005LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(8008LLU,8013LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(8017LLU,8017LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(8019LLU,8019LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(8021LLU,8021LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(8023LLU,8023LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(8025LLU,8025LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(8027LLU,8027LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(8029LLU,8029LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(8031LLU,8031LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(8032LLU,8039LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(8040LLU,8047LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(8048LLU,8049LLU,jule::Array<jule::I32,3>({74LL,0LL,74LL})),_1ab2133dc_CaseRange(8050LLU,8053LLU,jule::Array<jule::I32,3>({86LL,0LL,86LL})),_1ab2133dc_CaseRange(8054LLU,8055LLU,jule::Array<jule::I32,3>({100LL,0LL,100LL})),_1ab2133dc_CaseRange(8056LLU,8057LLU,jule::Array<jule::I32,3>({128LL,0LL,128LL})),_1ab2133dc_CaseRange(8058LLU,8059LLU,jule::Array<jule::I32,3>({112LL,0LL,112LL})),_1ab2133dc_CaseRange(8060LLU,8061LLU,jule::Array<jule::I32,3>({126LL,0LL,126LL})),_1ab2133dc_CaseRange(8064LLU,8071LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(8072LLU,8079LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(8080LLU,8087LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(8088LLU,8095LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(8096LLU,8103LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(8104LLU,8111LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(8112LLU,8113LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(8115LLU,8115LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1ab2133dc_CaseRange(8120LLU,8121LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(8122LLU,8123LLU,jule::Array<jule::I32,3>({0LL,-74LL,0LL})),_1ab2133dc_CaseRange(8124LLU,8124LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1ab2133dc_CaseRange(8126LLU,8126LLU,jule::Array<jule::I32,3>({-7205LL,0LL,-7205LL})),_1ab2133dc_CaseRange(8131LLU,8131LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1ab2133dc_CaseRange(8136LLU,8139LLU,jule::Array<jule::I32,3>({0LL,-86LL,0LL})),_1ab2133dc_CaseRange(8140LLU,8140LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1ab2133dc_CaseRange(8144LLU,8145LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(8152LLU,8153LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(8154LLU,8155LLU,jule::Array<jule::I32,3>({0LL,-100LL,0LL})),_1ab2133dc_CaseRange(8160LLU,8161LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1ab2133dc_CaseRange(8165LLU,8165LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_1ab2133dc_CaseRange(8168LLU,8169LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1ab2133dc_CaseRange(8170LLU,8171LLU,jule::Array<jule::I32,3>({0LL,-112LL,0LL})),_1ab2133dc_CaseRange(8172LLU,8172LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_1ab2133dc_CaseRange(8179LLU,8179LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1ab2133dc_CaseRange(8184LLU,8185LLU,jule::Array<jule::I32,3>({0LL,-128LL,0LL})),_1ab2133dc_CaseRange(8186LLU,8187LLU,jule::Array<jule::I32,3>({0LL,-126LL,0LL})),_1ab2133dc_CaseRange(8188LLU,8188LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1ab2133dc_CaseRange(8486LLU,8486LLU,jule::Array<jule::I32,3>({0LL,-7517LL,0LL})),_1ab2133dc_CaseRange(8490LLU,8490LLU,jule::Array<jule::I32,3>({0LL,-8383LL,0LL})),_1ab2133dc_CaseRange(8491LLU,8491LLU,jule::Array<jule::I32,3>({0LL,-8262LL,0LL})),_1ab2133dc_CaseRange(8498LLU,8498LLU,jule::Array<jule::I32,3>({0LL,28LL,0LL})),_1ab2133dc_CaseRange(8526LLU,8526LLU,jule::Array<jule::I32,3>({-28LL,0LL,-28LL})),_1ab2133dc_CaseRange(8544LLU,8559LLU,jule::Array<jule::I32,3>({0LL,16LL,0LL})),_1ab2133dc_CaseRange(8560LLU,8575LLU,jule::Array<jule::I32,3>({-16LL,0LL,-16LL})),_1ab2133dc_CaseRange(8579LLU,8580LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(9398LLU,9423LLU,jule::Array<jule::I32,3>({0LL,26LL,0LL})),_1ab2133dc_CaseRange(9424LLU,9449LLU,jule::Array<jule::I32,3>({-26LL,0LL,-26LL})),_1ab2133dc_CaseRange(11264LLU,11311LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_1ab2133dc_CaseRange(11312LLU,11359LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_1ab2133dc_CaseRange(11360LLU,11361LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(11362LLU,11362LLU,jule::Array<jule::I32,3>({0LL,-10743LL,0LL})),_1ab2133dc_CaseRange(11363LLU,11363LLU,jule::Array<jule::I32,3>({0LL,-3814LL,0LL})),_1ab2133dc_CaseRange(11364LLU,11364LLU,jule::Array<jule::I32,3>({0LL,-10727LL,0LL})),_1ab2133dc_CaseRange(11365LLU,11365LLU,jule::Array<jule::I32,3>({-10795LL,0LL,-10795LL})),_1ab2133dc_CaseRange(11366LLU,11366LLU,jule::Array<jule::I32,3>({-10792LL,0LL,-10792LL})),_1ab2133dc_CaseRange(11367LLU,11372LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(11373LLU,11373LLU,jule::Array<jule::I32,3>({0LL,-10780LL,0LL})),_1ab2133dc_CaseRange(11374LLU,11374LLU,jule::Array<jule::I32,3>({0LL,-10749LL,0LL})),_1ab2133dc_CaseRange(11375LLU,11375LLU,jule::Array<jule::I32,3>({0LL,-10783LL,0LL})),_1ab2133dc_CaseRange(11376LLU,11376LLU,jule::Array<jule::I32,3>({0LL,-10782LL,0LL})),_1ab2133dc_CaseRange(11378LLU,11379LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(11381LLU,11382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(11390LLU,11391LLU,jule::Array<jule::I32,3>({0LL,-10815LL,0LL})),_1ab2133dc_CaseRange(11392LLU,11491LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(11499LLU,11502LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(11506LLU,11507LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(11520LLU,11557LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1ab2133dc_CaseRange(11559LLU,11559LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1ab2133dc_CaseRange(11565LLU,11565LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1ab2133dc_CaseRange(42560LLU,42605LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(42624LLU,42651LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(42786LLU,42799LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(42802LLU,42863LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(42873LLU,42876LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(42877LLU,42877LLU,jule::Array<jule::I32,3>({0LL,-35332LL,0LL})),_1ab2133dc_CaseRange(42878LLU,42887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(42891LLU,42892LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(42893LLU,42893LLU,jule::Array<jule::I32,3>({0LL,-42280LL,0LL})),_1ab2133dc_CaseRange(42896LLU,42899LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(42900LLU,42900LLU,jule::Array<jule::I32,3>({48LL,0LL,48LL})),_1ab2133dc_CaseRange(42902LLU,42921LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(42922LLU,42922LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_1ab2133dc_CaseRange(42923LLU,42923LLU,jule::Array<jule::I32,3>({0LL,-42319LL,0LL})),_1ab2133dc_CaseRange(42924LLU,42924LLU,jule::Array<jule::I32,3>({0LL,-42315LL,0LL})),_1ab2133dc_CaseRange(42925LLU,42925LLU,jule::Array<jule::I32,3>({0LL,-42305LL,0LL})),_1ab2133dc_CaseRange(42926LLU,42926LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_1ab2133dc_CaseRange(42928LLU,42928LLU,jule::Array<jule::I32,3>({0LL,-42258LL,0LL})),_1ab2133dc_CaseRange(42929LLU,42929LLU,jule::Array<jule::I32,3>({0LL,-42282LL,0LL})),_1ab2133dc_CaseRange(42930LLU,42930LLU,jule::Array<jule::I32,3>({0LL,-42261LL,0LL})),_1ab2133dc_CaseRange(42931LLU,42931LLU,jule::Array<jule::I32,3>({0LL,928LL,0LL})),_1ab2133dc_CaseRange(42932LLU,42947LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(42948LLU,42948LLU,jule::Array<jule::I32,3>({0LL,-48LL,0LL})),_1ab2133dc_CaseRange(42949LLU,42949LLU,jule::Array<jule::I32,3>({0LL,-42307LL,0LL})),_1ab2133dc_CaseRange(42950LLU,42950LLU,jule::Array<jule::I32,3>({0LL,-35384LL,0LL})),_1ab2133dc_CaseRange(42951LLU,42954LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(42960LLU,42961LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(42966LLU,42969LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(42997LLU,42998LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1ab2133dc_CaseRange(43859LLU,43859LLU,jule::Array<jule::I32,3>({-928LL,0LL,-928LL})),_1ab2133dc_CaseRange(43888LLU,43967LLU,jule::Array<jule::I32,3>({-38864LL,0LL,-38864LL})),_1ab2133dc_CaseRange(65313LLU,65338LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1ab2133dc_CaseRange(65345LLU,65370LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1ab2133dc_CaseRange(66560LLU,66599LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_1ab2133dc_CaseRange(66600LLU,66639LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_1ab2133dc_CaseRange(66736LLU,66771LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_1ab2133dc_CaseRange(66776LLU,66811LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_1ab2133dc_CaseRange(66928LLU,66938LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1ab2133dc_CaseRange(66940LLU,66954LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1ab2133dc_CaseRange(66956LLU,66962LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1ab2133dc_CaseRange(66964LLU,66965LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1ab2133dc_CaseRange(66967LLU,66977LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1ab2133dc_CaseRange(66979LLU,66993LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1ab2133dc_CaseRange(66995LLU,67001LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1ab2133dc_CaseRange(67003LLU,67004LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1ab2133dc_CaseRange(68736LLU,68786LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_1ab2133dc_CaseRange(68800LLU,68850LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_1ab2133dc_CaseRange(71840LLU,71871LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1ab2133dc_CaseRange(71872LLU,71903LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1ab2133dc_CaseRange(93760LLU,93791LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1ab2133dc_CaseRange(93792LLU,93823LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1ab2133dc_CaseRange(125184LLU,125217LLU,jule::Array<jule::I32,3>({0LL,34LL,0LL})),_1ab2133dc_CaseRange(125218LLU,125251LLU,jule::Array<jule::I32,3>({-34LL,0LL,-34LL}))});
static jule::Slice<_1ab2133dc_CaseRange> _1ab04b4cd_CASE_RANGES = _1ab04b4cd__CASE_RANGES;
static jule::Array<jule::U8,256> _1ab21c902_FIRST = jule::Array<jule::U8,256>({});
static jule::Array<_1ab21c902_accept_range,16> _1ab21c902_ACCEPT_RANGES = jule::Array<_1ab21c902_accept_range,16>({_1ab21c902_accept_range(128LLU,191LLU),_1ab21c902_accept_range(160LLU,191LLU),_1ab21c902_accept_range(128LLU,159LLU),_1ab21c902_accept_range(144LLU,191LLU),_1ab21c902_accept_range(128LLU,143LLU)});
static jule::Array<jule::I32,33> _1ab0277b7_PUNCTS = jule::Array<jule::I32,33>({'!','#','$',',','.','\'','\"',':',';','<','>','=','?','-','+','*','(',')','[',']','{','}','%','&','/','\\','@','^','_','`','|','~',166LL});
static jule::Array<jule::I32,5> _1ab0277b7_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _1ab0277b7_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,13> _1ab0277b7_BIN_OPS = jule::Array<jule::Str,13>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("!", 1),jule::Str("&&", 2),jule::Str("||", 2)});
static jule::Array<jule::Str,2> _1ab0277b7_WEAK_OPS = jule::Array<jule::Str,2>({jule::Str("...", 3),jule::Str(":", 1)});
static jule::Array<jule::Str,2> _1ab0277b7_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _1ab0277b7_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_1ab00b922_KindPair,46> _1ab00b922_KEYWORDS = jule::Array<_1ab00b922_KindPair,46>({_1ab00b922_KindPair(jule::Str("i8", 2),1LLU),_1ab00b922_KindPair(jule::Str("i16", 3),1LLU),_1ab00b922_KindPair(jule::Str("i32", 3),1LLU),_1ab00b922_KindPair(jule::Str("i64", 3),1LLU),_1ab00b922_KindPair(jule::Str("u8", 2),1LLU),_1ab00b922_KindPair(jule::Str("u16", 3),1LLU),_1ab00b922_KindPair(jule::Str("u32", 3),1LLU),_1ab00b922_KindPair(jule::Str("u64", 3),1LLU),_1ab00b922_KindPair(jule::Str("f32", 3),1LLU),_1ab00b922_KindPair(jule::Str("f64", 3),1LLU),_1ab00b922_KindPair(jule::Str("uint", 4),1LLU),_1ab00b922_KindPair(jule::Str("int", 3),1LLU),_1ab00b922_KindPair(jule::Str("uintptr", 7),1LLU),_1ab00b922_KindPair(jule::Str("bool", 4),1LLU),_1ab00b922_KindPair(jule::Str("str", 3),1LLU),_1ab00b922_KindPair(jule::Str("any", 3),1LLU),_1ab00b922_KindPair(jule::Str("true", 4),6LLU),_1ab00b922_KindPair(jule::Str("false", 5),6LLU),_1ab00b922_KindPair(jule::Str("nil", 3),6LLU),_1ab00b922_KindPair(jule::Str("const", 5),9LLU),_1ab00b922_KindPair(jule::Str("ret", 3),4LLU),_1ab00b922_KindPair(jule::Str("type", 4),10LLU),_1ab00b922_KindPair(jule::Str("for", 3),12LLU),_1ab00b922_KindPair(jule::Str("break", 5),13LLU),_1ab00b922_KindPair(jule::Str("continue", 8),14LLU),_1ab00b922_KindPair(jule::Str("in", 2),15LLU),_1ab00b922_KindPair(jule::Str("if", 2),16LLU),_1ab00b922_KindPair(jule::Str("else", 4),17LLU),_1ab00b922_KindPair(jule::Str("use", 3),19LLU),_1ab00b922_KindPair(jule::Str("pub", 3),21LLU),_1ab00b922_KindPair(jule::Str("goto", 4),22LLU),_1ab00b922_KindPair(jule::Str("enum", 4),24LLU),_1ab00b922_KindPair(jule::Str("struct", 6),25LLU),_1ab00b922_KindPair(jule::Str("co", 2),26LLU),_1ab00b922_KindPair(jule::Str("match", 5),27LLU),_1ab00b922_KindPair(jule::Str("self", 4),28LLU),_1ab00b922_KindPair(jule::Str("trait", 5),29LLU),_1ab00b922_KindPair(jule::Str("impl", 4),30LLU),_1ab00b922_KindPair(jule::Str("cpp", 3),31LLU),_1ab00b922_KindPair(jule::Str("fall", 4),32LLU),_1ab00b922_KindPair(jule::Str("fn", 2),33LLU),_1ab00b922_KindPair(jule::Str("let", 3),34LLU),_1ab00b922_KindPair(jule::Str("unsafe", 6),35LLU),_1ab00b922_KindPair(jule::Str("mut", 3),36LLU),_1ab00b922_KindPair(jule::Str("defer", 5),37LLU),_1ab00b922_KindPair(jule::Str("static", 6),38LLU)});
static jule::Array<_1ab00b922_KindPair,38> _1ab00b922_BASIC_OPS = jule::Array<_1ab00b922_KindPair,38>({_1ab00b922_KindPair(jule::Str("::", 2),23LLU),_1ab00b922_KindPair(jule::Str(":", 1),11LLU),_1ab00b922_KindPair(jule::Str(";", 1),5LLU),_1ab00b922_KindPair(jule::Str(",", 1),8LLU),_1ab00b922_KindPair(jule::Str("...", 3),7LLU),_1ab00b922_KindPair(jule::Str(".", 1),20LLU),_1ab00b922_KindPair(jule::Str("+=", 2),7LLU),_1ab00b922_KindPair(jule::Str("-=", 2),7LLU),_1ab00b922_KindPair(jule::Str("*=", 2),7LLU),_1ab00b922_KindPair(jule::Str("/=", 2),7LLU),_1ab00b922_KindPair(jule::Str("%=", 2),7LLU),_1ab00b922_KindPair(jule::Str("<<=", 3),7LLU),_1ab00b922_KindPair(jule::Str(">>=", 3),7LLU),_1ab00b922_KindPair(jule::Str("^=", 2),7LLU),_1ab00b922_KindPair(jule::Str("&=", 2),7LLU),_1ab00b922_KindPair(jule::Str("|=", 2),7LLU),_1ab00b922_KindPair(jule::Str("==", 2),7LLU),_1ab00b922_KindPair(jule::Str("!=", 2),7LLU),_1ab00b922_KindPair(jule::Str(">=", 2),7LLU),_1ab00b922_KindPair(jule::Str("<=", 2),7LLU),_1ab00b922_KindPair(jule::Str("&&", 2),7LLU),_1ab00b922_KindPair(jule::Str("||", 2),7LLU),_1ab00b922_KindPair(jule::Str("<<", 2),7LLU),_1ab00b922_KindPair(jule::Str(">>", 2),7LLU),_1ab00b922_KindPair(jule::Str("++", 2),7LLU),_1ab00b922_KindPair(jule::Str("--", 2),7LLU),_1ab00b922_KindPair(jule::Str("+", 1),7LLU),_1ab00b922_KindPair(jule::Str("-", 1),7LLU),_1ab00b922_KindPair(jule::Str("*", 1),7LLU),_1ab00b922_KindPair(jule::Str("/", 1),7LLU),_1ab00b922_KindPair(jule::Str("%", 1),7LLU),_1ab00b922_KindPair(jule::Str("&", 1),7LLU),_1ab00b922_KindPair(jule::Str("|", 1),7LLU),_1ab00b922_KindPair(jule::Str("^", 1),7LLU),_1ab00b922_KindPair(jule::Str("!", 1),7LLU),_1ab00b922_KindPair(jule::Str("<", 1),7LLU),_1ab00b922_KindPair(jule::Str(">", 1),7LLU),_1ab00b922_KindPair(jule::Str("=", 1),7LLU)});
static jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_BUILTIN_FN_OUT = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns());
static jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_BUILTIN_FN_OUTLN = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns());
static jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_BUILTIN_FN_NEW = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns());
static jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_BUILTIN_FN_DROP = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns());
static jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_BUILTIN_FN_PANIC = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns());
static jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_BUILTIN_FN_MAKE = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns());
static jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_BUILTIN_FN_APPEND = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns());
static jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_BUILTIN_FN_RECOVER = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns());
static jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_BUILTIN_FN_CLONE = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns());
static jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns());
static jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns());
static jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_BUILTIN_FN_REAL = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>(),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Fn<jule::Ref<_1acde49c3_Data>(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_BUILTIN_FN_COPY = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>(),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Fn<jule::Ref<_1acde49c3_Data>(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_1ad3e617d_TypeAlias> _1ad5a38bd_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_1ad3e617d_TypeAlias>(new( std::nothrow ) _1ad3e617d_TypeAlias(jule::Ref<_1aaeea1c4_ScopeTree>(),true,jule::Bool(),jule::Bool(),_1ab0277b7_Token(),jule::Str(),jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_1ad3e617d_TypeAlias> _1ad5a38bd_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_1ad3e617d_TypeAlias>(new( std::nothrow ) _1ad3e617d_TypeAlias(jule::Ref<_1aaeea1c4_ScopeTree>(),true,jule::Bool(),jule::Bool(),_1ab0277b7_Token(),jule::Str(),jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_1ac276c57_Trait> _1ad5a38bd_BUILTIN_TRAIT_ERROR = jule::new_struct<_1ac276c57_Trait>(new( std::nothrow ) _1ac276c57_Trait(_1ab0277b7_Token(),jule::Str("Error", 5),true,jule::Str(),jule::Slice<jule::Ref<_1ab07a50c_Fn>>({jule::new_struct<_1ab07a50c_Fn>(new( std::nothrow ) _1ab07a50c_Fn(jule::Ref<_1ac7ccb09_Sema>(),_1ab0277b7_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("error", 5),jule::Slice<jule::Ref<_1aaeea1c4_Directive>>(),jule::Str(),jule::Ref<_1aaeea1c4_ScopeTree>(),jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>(),jule::new_struct<_1ab07a50c_RetType>(new( std::nothrow ) _1ab07a50c_RetType(jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_1ab0277b7_Token(),jule::Any(jule::new_struct<_1aaeea1c4_IdentTypeDecl>(new( std::nothrow ) _1aaeea1c4_IdentTypeDecl(_1ab0277b7_Token(),jule::Str("str", 3),jule::Bool(),jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>()))))),jule::Ref<_1ad3e617d_TypeKind>())),jule::Slice<_1ab0277b7_Token>())),jule::Slice<jule::Ref<_1ab07a50c_Param>>({jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_1ab064271_Struct>(),jule::Slice<jule::Ref<_1ab07a50c_FnIns>>()))}),jule::Slice<jule::Ref<_1ab064271_Struct>>()));
static jule::Slice<jule::Str> _1aae806a9_FLAGS = nullptr;
static jule::Slice<jule::Any> _1aadca5e3_deads = nullptr;
static jule::Slice<jule::Any> _1aadca5e3_checking = nullptr;
static jule::Any _1aadca5e3_current = jule::Any(nullptr);
static jule::Any _1aadca5e3_main_current = jule::Any(nullptr);
static jule::Slice<jule::Str> _1aae49d38_OPTIMIZATIONS = nullptr;
static jule::U64 _1adad79c3_INDENT = 0LLU;

inline void _1d051759b_AnsiEscape::_static_method_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void _1d051759b_AnsiEscape::_static_method_print(jule::Str _2021_escape,jule::Str _2034_text) {
	jule::out(_2021_escape);
	jule::out(_2034_text);
	_1d051759b_AnsiEscape::_static_method_reset();
}







std::ostream &operator<<(std::ostream &_Stream, const _1d051759b_AnsiEscape &_Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void _1d051759b_Logger::_static_method_log_flat(_1d068165a_Log& _3125_l) {
	jule::outln(_3125_l._field_text);
}



inline void _1d051759b_Logger::_static_method_log_error(_1d068165a_Log& _3426_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_3426_l._field_text);
	_1d051759b_AnsiEscape::_static_method_reset();
	jule::out(jule::Str("\n  --> ", 7));
	jule::out(_3426_l._field_path);
	jule::out(jule::Str(":", 1));
	jule::out(_1a99c0d11_itoa(_3426_l._field_row));
	jule::out(jule::Str(":", 1));
	jule::out(_1a99c0d11_itoa(_3426_l._field_column));
	if (_3426_l._field_line.len() != 0LL) {
		jule::Str _4721_line = _3426_l._field_line.ltrim(jule::Str("\r\n\v\b ", 5));
		jule::I64 _4821_offset = (_3426_l._field_line.len() - _4721_line.len()) + 1LL;
		jule::I64 _4921_old_len = _4721_line.len();
		_4721_line=_4721_line.ltrim(jule::Str("\t", 1));
		if (_4921_old_len != _4721_line.len()) {
			_4821_offset+=static_cast<jule::I64>((_4921_old_len - _4721_line.len()) * 8LL);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _5517_row = _1a99c0d11_itoa(_3426_l._field_row);
		jule::out(_5517_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_4721_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1d0517502_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5517_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1d0517502_str_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_3426_l._field_column - _4821_offset)));
		jule::out(jule::Str("^", 1));
		if (_3426_l._field_suggestion.len() != 0LL) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1d0517502_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5517_row.len())));
			jule::out(jule::Str(" | ", 3));
			_1d051759b_AnsiEscape::_static_method_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_3426_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void _1d051759b_Logger::_static_method_log(_1d068165a_Log& _7620_l) {
	{
		auto _match_expr{ _7620_l._field_kind };
		if (!((0LLU) == _match_expr)) { goto _case_end_4454023392; }
		_case_begin_4454023392:;
		{
			_1d051759b_Logger::_static_method_log_flat(_7620_l);
		}
		goto _match_end_4454021968;
		_case_end_4454023392:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4454023504; }
		_case_begin_4454023504:;
		{
			_1d051759b_Logger::_static_method_log_error(_7620_l);
		}
		goto _match_end_4454021968;
		_case_end_4454023504:;
		_match_end_4454021968:;
	}
}



inline void _1d051759b_Logger::_static_method_print_logs(jule::Slice<_1d068165a_Log>& _8427_logs) {
	{
		auto _range_expr = _8427_logs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1d068165a_Log _1d051759b_l = *_range_begin;
			_iter_begin_4454027728:;
			{
				_1d051759b_Logger::_static_method_log(_1d051759b_l);
			}
			_iter_next_4454027728:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d051759b_l = *_range_begin; goto _iter_begin_4454027728; }
			_iter_end_4454027728:;
		}
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_1a99c0d11_itoa(static_cast<jule::I64>(_8427_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, const _1d051759b_Logger &_Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1d05b5e41_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[static_cast<jule::Int>(_5324_i)];
	}
	return (*this)._field_path[static_cast<jule::Int>(_5324_i)];
}



inline void _1d05b5e41_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[static_cast<jule::Int>((*this)._field_w)] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_path.len())));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,static_cast<jule::Int>((*this)._field_w))));
	}
	(*this)._field_buff[static_cast<jule::Int>((*this)._field_w)]=_6025_c;
	((*this)._field_w)++;
}



inline jule::Str _1d05b5e41_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len + (*this)._field_w));
	}
	return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len)) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,static_cast<jule::Int>((*this)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1d05b5e41_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa1ade38_bits_error::_method_error(void) {
	return jule::Str("runtime error: ", 15) + (*this)._field_message;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aa1ade38_bits_error &_Src) {
	_Stream << "bits_error{";
	_Stream << "message:" << _Src._field_message;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6c49115_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6c49115_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a99596b2_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a99596b2_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '+'))) { goto _case_end_4433273504; }
		_case_begin_4433273504:;
		{
			(_23017_i)++;
		}
		goto _match_end_4433274336;
		_case_end_4433273504:;
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '-'))) { goto _case_end_4433273952; }
		_case_begin_4433273952:;
		{
			(*this)._field_neg=true;
			(_23017_i)++;
		}
		goto _match_end_4433274336;
		_case_end_4433273952:;
		_match_end_4433274336:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	_iter_begin_4433273152:;
	if (!(_23017_i < _22922_s.len())) { goto _iter_end_4433273152; }
	{
		{
			if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '.'))) { goto _case_end_4433280432; }
			_case_begin_4433280432:;
			{
				if (_24717_sawdot) {
					return _22932_ok;
				}
				_24717_sawdot=true;
				(*this)._field_dp=(*this)._field_nd;
				goto _iter_next_4433273152;
			}
			goto _match_end_4433280192;
			_case_end_4433280432:;
			if (!((('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _case_end_4433280560; }
			_case_begin_4433280560:;
			{
				_24817_sawdigits=true;
				if ((_22922_s[static_cast<jule::Int>(_23017_i)] == '0') && ((*this)._field_nd == 0LL)) {
					((*this)._field_dp)--;
					goto _iter_next_4433273152;
				}
				if ((*this)._field_nd < 800LL) {
					(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_22922_s[static_cast<jule::Int>(_23017_i)];
					((*this)._field_nd)++;
				} else if (_22922_s[static_cast<jule::Int>(_23017_i)] != '0') {
					(*this)._field_trunc=true;
				}
				goto _iter_next_4433273152;
			}
			goto _match_end_4433280192;
			_case_end_4433280560:;
			_match_end_4433280192:;
		}
		goto _iter_end_4433273152;
	}
	_iter_next_4433273152:;
	(_23017_i)++;
	goto _iter_begin_4433273152;
	_iter_end_4433273152:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_1a8943c85_lower(_22922_s[static_cast<jule::Int>(_23017_i)]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[static_cast<jule::Int>(_23017_i)] == '+') {
			(_23017_i)++;
		} else if (_22922_s[static_cast<jule::Int>(_23017_i)] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[static_cast<jule::Int>(_23017_i)] < '0')) || (_22922_s[static_cast<jule::Int>(_23017_i)] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		_iter_begin_4433300816:;
		if (!((_23017_i < _22922_s.len()) && (('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _iter_end_4433300816; }
		{
			if (_30121_e < 10000LL) {
				_30121_e=static_cast<jule::Int>(((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[static_cast<jule::Int>(_23017_i)])) - '0');
			}
		}
		_iter_next_4433300816:;
		(_23017_i)++;
		goto _iter_begin_4433300816;
		_iter_end_4433300816:;
		(*this)._field_dp+=static_cast<jule::Int>(_30121_e * _29121_esign);
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1a99596b2_Decimal::_method_float_bits(_1b6c49115_FloatInfo& _31830_flt) {
	jule::U64 _31848_b = jule::U64();
	jule::Bool _31856_overflow = jule::Bool();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	_iter_begin_4433322960:;
	if (!((*this)._field_dp > 0LL)) { goto _iter_end_4433322960; }
	{
		jule::Int _34521_n = 0LL;
		if ((*this)._field_dp >= _1a8977813_POWTAB.len()) {
			_34521_n=27LL;
		} else {
			_34521_n=_1a8977813_POWTAB[static_cast<jule::Int>((*this)._field_dp)];
		}
		(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
		_31917_exp+=_34521_n;
	}
	_iter_next_4433322960:;
	goto _iter_begin_4433322960;
	_iter_end_4433322960:;
	_iter_begin_4433325072:;
	if (!(((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d[0LL] < '5')))) { goto _iter_end_4433325072; }
	{
		jule::Int _35521_n = 0LL;
		if ((-((*this)._field_dp)) >= _1a8977813_POWTAB.len()) {
			_35521_n=27LL;
		} else {
			_35521_n=_1a8977813_POWTAB[static_cast<jule::Int>((-((*this)._field_dp)))];
		}
		(*this)._method_shift(_35521_n);
		_31917_exp-=_35521_n;
	}
	_iter_next_4433325072:;
	goto _iter_begin_4433325072;
	_iter_end_4433325072:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + _31830_flt._field_bias);
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & ((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	_31856_overflow = _31856_overflow;
	return std::make_tuple(_31848_b,_31856_overflow);
}



inline void _1a99596b2_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>({});
	jule::Int _15617_n = 0LL;
	_iter_begin_4433363600:;
	if (!(_15229_v > 0LL)) { goto _iter_end_4433363600; }
	{
		jule::U64 _15817_v1 = jule::div(_15229_v,10LL);
		_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
		_15317_buf[static_cast<jule::Int>(_15617_n)]=static_cast<jule::U8>(_15229_v + '0');
		(_15617_n)++;
		_15229_v=_15817_v1;
	}
	_iter_next_4433363600:;
	goto _iter_begin_4433363600;
	_iter_end_4433363600:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	_iter_begin_4433364368:;
	if (!(_15617_n >= 0LL)) { goto _iter_end_4433364368; }
	{
		(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_15317_buf[static_cast<jule::Int>(_15617_n)];
		((*this)._field_nd)++;
	}
	_iter_next_4433364368:;
	(_15617_n)--;
	goto _iter_begin_4433364368;
	_iter_end_4433364368:;
	(*this)._field_dp=(*this)._field_nd;
	_1a99596b2_trim((*this));
}



inline void _1a99596b2_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if (!(((*this)._field_nd == 0LL))) { goto _case_end_4433374240; }
		goto _match_end_4433374000;
		_case_end_4433374240:;
		if (!((_17728_k > 0LL))) { goto _case_end_4433374368; }
		_case_begin_4433374368:;
		{
			_iter_begin_4433375680:;
			if (!(_17728_k > 60LL)) { goto _iter_end_4433375680; }
			{
				_1a99596b2_left_shift((*this),60LLU);
				_17728_k-=60LL;
			}
			_iter_next_4433375680:;
			goto _iter_begin_4433375680;
			_iter_end_4433375680:;
			_1a99596b2_left_shift((*this),static_cast<jule::Uint>(_17728_k));
		}
		goto _match_end_4433374000;
		_case_end_4433374368:;
		if (!((_17728_k < 0LL))) { goto _case_end_4433374496; }
		_case_begin_4433374496:;
		{
			_iter_begin_4433374672:;
			if (!(_17728_k < -60LL)) { goto _iter_end_4433374672; }
			{
				_1a99596b2_right_shift((*this),60LLU);
				_17728_k+=60LL;
			}
			_iter_next_4433374672:;
			goto _iter_begin_4433374672;
			_iter_end_4433374672:;
			_1a99596b2_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
		}
		goto _match_end_4433374000;
		_case_end_4433374496:;
		_match_end_4433374000:;
	}
}



inline void _1a99596b2_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_1a99596b2_trim((*this));
}



inline void _1a99596b2_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	_iter_begin_4433403984:;
	if (!(_21217_i >= 0LL)) { goto _iter_end_4433403984; }
	{
		jule::U8 _21417_c = (*this)._field_d[static_cast<jule::Int>(_21217_i)];
		if (_21417_c < '9') {
			((*this)._field_d[static_cast<jule::Int>(_21217_i)])++;
			(*this)._field_nd=static_cast<jule::Int>(_21217_i + 1LL);
			return;
		}
	}
	_iter_next_4433403984:;
	(_21217_i)--;
	goto _iter_begin_4433403984;
	_iter_end_4433403984:;
	(*this)._field_d[0LL]='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _1a99596b2_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_1a99596b2_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _1a99596b2_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	_iter_begin_4433412064:;
	if (!((_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd))) { goto _iter_end_4433412064; }
	{
		_25117_n=static_cast<jule::U64>((_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[static_cast<jule::Int>(_25017_i)] - '0'));
	}
	_iter_next_4433412064:;
	(_25017_i)++;
	goto _iter_begin_4433412064;
	_iter_end_4433412064:;
	_iter_begin_4433423632:;
	if (!(_25017_i < (*this)._field_dp)) { goto _iter_end_4433423632; }
	{
		_25117_n*=10LL;
	}
	_iter_next_4433423632:;
	(_25017_i)++;
	goto _iter_begin_4433423632;
	_iter_end_4433423632:;
	if (_1a99596b2_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a99596b2_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d068165a_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaee94d1_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Int> _1ab00383c_File::_method_seek(jule::I64 _5527_offset,jule::Int _5540_origin) {
	jule::I64 _5613_pos = _1b6bcde9b_seek((*this)._field_handle,_5527_offset,static_cast<jule::Int>(_5540_origin));
	return std::make_tuple(_5613_pos,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _1ab00383c_File::_method_read(jule::Slice<jule::U8> _7031_buff) {
	jule::Int _7047_n = jule::Int();
	if (_7031_buff.len() == 0LL) {
		_7047_n = 0LL;
		return std::make_tuple(_7047_n,0LLU);
	}
	_7047_n=static_cast<jule::Int>(static_cast<jule::Int>(_1b6bcde9b_read((*this)._field_handle,(&(_7031_buff[0LL])),static_cast<jule::Uint>(_7031_buff.len()))));
	if (_7047_n == -1LL) {
		_7047_n=0LL;
		_7047_n = _7047_n;
		return std::make_tuple(_7047_n,_1aaed8d3e_get_last_fs_error());
	}
	_7047_n = _7047_n;
	return std::make_tuple(_7047_n,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _1ab00383c_File::_method_write(jule::Slice<jule::U8> _8928_buff) {
	jule::Int _8944_n = jule::Int();
	if (_8928_buff.len() == 0LL) {
		_8944_n = 0LL;
		return std::make_tuple(_8944_n,0LLU);
	}
	_8944_n=static_cast<jule::Int>(static_cast<jule::Int>(_1b6bcde9b_write((*this)._field_handle,(&(_8928_buff[0LL])),static_cast<jule::Uint>(_8928_buff.len()))));
	if (_8944_n == -1LL) {
		_8944_n=0LL;
		_8944_n = _8944_n;
		return std::make_tuple(_8944_n,_1aaed8d3e_get_last_fs_error());
	}
	_8944_n = _8944_n;
	return std::make_tuple(_8944_n,0LLU);
}



inline jule::Int _1ab00383c_File::_method_close(void) {
	if (_1b6bcde9b_close((*this)._field_handle) == -1LL) {
		return _1aaed8d3e_get_last_fs_error();
	}
	return 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab00383c_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab004a80_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



inline jule::Bool _1ab004a80_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab004a80_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab2133dc_FoldPair &_Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab2133dc_CaseRange &_Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab2133dc_Range16 &_Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab2133dc_Range32 &_Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab2133dc_RangeTable &_Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab21c902_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _1ab0277b7_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return -1LL;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str(">>", 2)) == _match_expr || (jule::Str("<<", 2)) == _match_expr || (jule::Str("&", 1)) == _match_expr)) { goto _case_end_4439651200; }
		_case_begin_4439651200:;
		{
			return 5LL;
		}
		goto _match_end_4439648192;
		_case_end_4439651200:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4439651312; }
		_case_begin_4439651312:;
		{
			return 4LL;
		}
		goto _match_end_4439648192;
		_case_end_4439651312:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("=", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4439651488; }
		_case_begin_4439651488:;
		{
			return 3LL;
		}
		goto _match_end_4439648192;
		_case_end_4439651488:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4439651600; }
		_case_begin_4439651600:;
		{
			return 2LL;
		}
		goto _match_end_4439648192;
		_case_end_4439651600:;
		if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4439651712; }
		_case_begin_4439651712:;
		{
			return 1LL;
		}
		goto _match_end_4439648192;
		_case_end_4439651712:;
		_case_begin_4439649312:;
		{
			return -1LL;
		}
		goto _match_end_4439648192;
		_case_end_4439649312:;
		_match_end_4439648192:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0277b7_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab029324_File::_method_is_ok(void) {
	jule::Int _1917_err;
	std::tie(std::ignore,_1917_err) = _1aaed9867_stat((*this)._field__path);
	return _1917_err == 0LLU;
}



inline void _1ab029324_File::_method_fill(jule::Slice<jule::U8> _2431_data) {
	(*this)._field_data=_2431_data;
}



inline jule::Str _1ab029324_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _1ab029324_File::_method_dir(void) {
	return _1d05b5e41_dir((*this)._field__path);
}



inline jule::Str _1ab029324_File::_method_name(void) {
	return _1d05b5e41_base((*this)._field__path);
}



inline jule::Uintptr _1ab029324_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



inline jule::Slice<_1ab0277b7_Token> _1ab029324_File::_method_tokens(void) {
	return (*this)._field__tokens;
}



inline jule::Str _1ab029324_File::_method_get_row(jule::Int _4426_row) {
	jule::Int _4517_n = 0LL;
	jule::Int _4617_line_start = 0LL;
	jule::Int _4717_i = 0LL;
	_iter_begin_4439690240:;
	if (!(_4717_i < (*this)._field_data.len())) { goto _iter_end_4439690240; }
	{
		if ((*this)._field_data[static_cast<jule::Int>(_4717_i)] != '\n') {
			goto _iter_next_4439690240;
		}
		(_4517_n)++;
		if (_4517_n == _4426_row) {
			return static_cast<jule::Str>((*this)._field_data.slice(static_cast<jule::Int>(_4617_line_start),static_cast<jule::Int>(_4717_i)));
		}
		_4617_line_start=static_cast<jule::Int>(_4717_i + 1LL);
	}
	_iter_next_4439690240:;
	(_4717_i)++;
	goto _iter_begin_4439690240;
	_iter_end_4439690240:;
	return jule::Str("", 0);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab029324_File &_Src) {
	_Stream << "File{";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab00b922_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1ab00b922_Lex::_method_push_err(jule::Str _40227_fmt,jule::Slice<jule::Any> _40240_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1d068165a_Log>({_1ab00b922_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_40227_fmt,_40240_args)}));
}



inline void _1ab00b922_Lex::_method_push_err_tok(_1ab0277b7_Token _40731_token,jule::Str _40745_fmt) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1d068165a_Log>({_1ab00b922_make_err(_40731_token._field_row,_40731_token._field_column,(*this)._field_file,_40745_fmt,jule::Slice<jule::Any>({}))}));
}



inline void _1ab00b922_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	_iter_begin_4439709696:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4439709696; }
	{
		_1ab0277b7_Token _41721_token = (*this)._method_token();
		if (_41721_token._field_id != 0LLU) {
			(*this)._field_tokens=jule::append((*this)._field_tokens,jule::Slice<_1ab0277b7_Token>({_41721_token}));
		}
	}
	_iter_next_4439709696:;
	goto _iter_begin_4439709696;
	_iter_end_4439709696:;
}



inline jule::Str _1ab00b922_Lex::_method_id(jule::Slice<jule::U8> _42621_ln) {
	if (_42621_ln.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::I32 _43014_r;
	jule::Int _43021_i;
	std::tie(_43014_r,_43021_i) = _1ab21c902_decode_rune(_42621_ln);
	if ((_43014_r != '_') && (!(_1ab0277b7_is_letter(_43014_r)))) {
		return jule::Str("", 0);
	}
	_iter_begin_4439723584:;
	if (!(_43021_i < _42621_ln.len())) { goto _iter_end_4439723584; }
	{
		jule::I32 _43618_r;
		jule::Int _43621_n;
		std::tie(_43618_r,_43621_n) = _1ab21c902_decode_rune(_42621_ln.slice(static_cast<jule::Int>(_43021_i)));
		if (((_43618_r != '_') && (!(_1ab0277b7_is_decimal(static_cast<jule::U8>(_43618_r))))) && (!(_1ab0277b7_is_letter(_43618_r)))) {
			(*this)._field_pos+=_43021_i;
			return static_cast<jule::Str>(_42621_ln.slice(0LL,static_cast<jule::Int>(_43021_i)));
		}
		_43021_i+=_43621_n;
	}
	_iter_next_4439723584:;
	goto _iter_begin_4439723584;
	_iter_end_4439723584:;
	(*this)._field_pos+=static_cast<jule::I64>(_42621_ln.len());
	return static_cast<jule::Str>(_42621_ln);
}



inline jule::Slice<jule::U8> _1ab00b922_Lex::_method_resume(void) {
	jule::Int _45117_i = (*this)._field_pos;
	_iter_begin_4439734736:;
	if (!(_45117_i < (*this)._field_file->_field_data.len())) { goto _iter_end_4439734736; }
	{
		jule::I32 _45317_r = static_cast<jule::I32>((*this)._field_file->_field_data[static_cast<jule::Int>(_45117_i)]);
		if (_1ab0277b7_is_space(_45317_r)) {
			((*this)._field_pos)++;
			{
				auto _match_expr{ _45317_r };
				if (!(('\n') == _match_expr)) { goto _case_end_4439741104; }
				_case_begin_4439741104:;
				{
					(*this)._method_new_line();
				}
				goto _match_end_4439738608;
				_case_end_4439741104:;
				if (!(('\t') == _match_expr)) { goto _case_end_4439741216; }
				_case_begin_4439741216:;
				{
					(*this)._field_column+=8LL;
				}
				goto _match_end_4439738608;
				_case_end_4439741216:;
				_case_begin_4439739504:;
				{
					((*this)._field_column)++;
				}
				goto _match_end_4439738608;
				_case_end_4439739504:;
				_match_end_4439738608:;
			}
			goto _iter_next_4439734736;
		}
		jule::Int _46421_j = _45117_i;
		_iter_begin_4439742464:;
		if (!(_46421_j < (*this)._field_file->_field_data.len())) { goto _iter_end_4439742464; }
		{
			if ((*this)._field_file->_field_data[static_cast<jule::Int>(_46421_j)] == '\n') {
				goto _iter_end_4439742464;
			}
		}
		_iter_next_4439742464:;
		(_46421_j)++;
		goto _iter_begin_4439742464;
		_iter_end_4439742464:;
		return (*this)._field_file->_field_data.slice(static_cast<jule::Int>(_45117_i),static_cast<jule::Int>(_46421_j));
	}
	_iter_next_4439734736:;
	(_45117_i)++;
	goto _iter_begin_4439734736;
	_iter_end_4439734736:;
	return nullptr;
}



inline void _1ab00b922_Lex::_method_lex_line_comment(_1ab0277b7_Token& _47640_token) {
	jule::Int _47713_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	_iter_begin_4439753296:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4439753296; }
	{
		jule::U8 _48117_r = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if ((_48117_r == '\n') || (_48117_r == '\r')) {
			if ((*this)._method_is_first_token_of_line()) {
				_47640_token._field_id=18LLU;
				_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(static_cast<jule::Int>(_47713_start),static_cast<jule::Int>((*this)._field_pos)));
			}
			return;
		}
	}
	_iter_next_4439753296:;
	((*this)._field_pos)++;
	goto _iter_begin_4439753296;
	_iter_end_4439753296:;
	if ((*this)._method_is_first_token_of_line()) {
		_47640_token._field_id=18LLU;
		_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(static_cast<jule::Int>(_47713_start)));
	}
}



inline void _1ab00b922_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	_iter_begin_4439766608:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4439766608; }
	{
		jule::U8 _50017_r = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_50017_r == '\r') {
			goto _iter_next_4439766608;
		}
		if (_50017_r == '\n') {
			(*this)._method_new_line();
			goto _iter_next_4439766608;
		}
		(*this)._field_column+=1LL;
		if (((((*this)._field_pos + 1LL) < (*this)._field_file->_field_data.len()) && (_50017_r == '*')) && ((*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos + 1LL)] == '/')) {
			(*this)._field_column+=2LL;
			(*this)._field_pos+=2LL;
			return;
		}
	}
	_iter_next_4439766608:;
	((*this)._field_pos)++;
	goto _iter_begin_4439766608;
	_iter_end_4439766608:;
	(*this)._method_push_err(jule::Str("missing block comment close", 27),jule::Slice<jule::Any>({}));
}



inline jule::Str _1ab00b922_Lex::_method_num(jule::Slice<jule::U8> _52122_txt) {
	jule::Str _52137_lit = jule::Str();
	_52137_lit=_1ab00b922_hex_num(_52122_txt);
	if (_52137_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52137_lit=_1ab00b922_octal_num(_52122_txt);
	if (_52137_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52137_lit=_1ab00b922_binary_num(_52122_txt);
	if (_52137_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52137_lit=_1ab00b922_common_num(_52122_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_52137_lit.len());
	return _52137_lit;
}



inline jule::Str _1ab00b922_Lex::_method_escape_seq(jule::Slice<jule::U8> _54029_txt) {
	jule::Str _54117_seq = jule::Str("", 0);
	if (_54029_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto _match_expr{ _54029_txt[1LL] };
		if (!(('\\') == _match_expr || ('\'') == _match_expr || ('\"') == _match_expr || ('a') == _match_expr || ('b') == _match_expr || ('f') == _match_expr || ('n') == _match_expr || ('r') == _match_expr || ('t') == _match_expr || ('v') == _match_expr)) { goto _case_end_4439799424; }
		_case_begin_4439799424:;
		{
			(*this)._field_pos+=2LL;
			return static_cast<jule::Str>(_54029_txt.slice(0LL,2LL));
		}
		goto _match_end_4439796960;
		_case_end_4439799424:;
		if (!(('U') == _match_expr)) { goto _case_end_4439800032; }
		_case_begin_4439800032:;
		{
			_54117_seq=_1ab00b922_big_unicode_point_escape(_54029_txt);
		}
		goto _match_end_4439796960;
		_case_end_4439800032:;
		if (!(('u') == _match_expr)) { goto _case_end_4439800144; }
		_case_begin_4439800144:;
		{
			_54117_seq=_1ab00b922_little_unicode_point_escape(_54029_txt);
		}
		goto _match_end_4439796960;
		_case_end_4439800144:;
		if (!(('x') == _match_expr)) { goto _case_end_4439800256; }
		_case_begin_4439800256:;
		{
			_54117_seq=_1ab00b922_hex_byte_escape(_54029_txt);
		}
		goto _match_end_4439796960;
		_case_end_4439800256:;
		_case_begin_4439798016:;
		{
			_54117_seq=_1ab00b922_byte_escape(_54029_txt);
		}
		goto _match_end_4439796960;
		_case_end_4439798016:;
		_match_end_4439796960:;
	}
	_julec_label_end:;
	if (_54117_seq == jule::Str("", 0)) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>({}));
		return jule::Str("", 0);
	}
	(*this)._field_pos+=static_cast<jule::I64>(_54117_seq.len());
	return _54117_seq;
}



inline jule::Str _1ab00b922_Lex::_method_get_rune(jule::Slice<jule::U8> _57427_txt,jule::Bool _57440_raw) {
	if ((!(_57440_raw)) && (_57427_txt[0LL] == '\\')) {
		return (*this)._method_escape_seq(_57427_txt);
	}
	jule::I32 _57914_r;
	jule::Int _57917_n;
	std::tie(_57914_r,_57917_n) = _1ab21c902_decode_rune(_57427_txt);
	(*this)._field_pos+=_57917_n;
	return static_cast<jule::Str>(_57914_r);
}



inline jule::Str _1ab00b922_Lex::_method_lex_rune(jule::Slice<jule::U8> _58427_txt) {
	jule::Str _58517_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58717_n = 0LL;
	jule::Int _58817_i = 1LL;
	_iter_begin_4439818816:;
	if (!(_58817_i < _58427_txt.len())) { goto _iter_end_4439818816; }
	{
		if (_58427_txt[static_cast<jule::Int>(_58817_i)] == '\r') {
			goto _iter_next_4439818816;
		}
		if (_58427_txt[static_cast<jule::Int>(_58817_i)] == '\n') {
			(*this)._method_push_err(jule::Str("rune is not finished", 20),jule::Slice<jule::Any>({}));
			((*this)._field_pos)++;
			(*this)._method_new_line();
			return jule::Str("", 0);
		}
		jule::Str _60017_r = (*this)._method_get_rune(_58427_txt.slice(static_cast<jule::Int>(_58817_i)),false);
		_58517_run+=_60017_r;
		jule::I64 _60217_length = _60017_r.len();
		(*this)._field_column+=_60217_length;
		if (_60017_r == jule::Str("'", 1)) {
			((*this)._field_pos)++;
			goto _iter_end_4439818816;
		}
		if (_60217_length > 1LL) {
			_58817_i+=static_cast<jule::I64>(_60217_length - 1LL);
		}
		(_58717_n)++;
	}
	_iter_next_4439818816:;
	(_58817_i)++;
	goto _iter_begin_4439818816;
	_iter_end_4439818816:;
	if (_58717_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>({}));
	} else if (_58717_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune is should be single", 24),jule::Slice<jule::Any>({}));
	}
	return _58517_run;
}



inline jule::Str _1ab00b922_Lex::_method_lex_str(void) {
	jule::Str _62417_s = jule::Str("", 0);
	jule::U8 _62513_mark = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
	((*this)._field_pos)++;
	jule::Bool _62713_raw = _62513_mark == '`';
	_62417_s+=static_cast<jule::Str>(_62513_mark);
	((*this)._field_column)++;
	_iter_begin_4439844656:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4439844656; }
	{
		jule::U8 _63217_ch = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_63217_ch == '\r') {
			goto _iter_next_4439844656;
		}
		if (_63217_ch == '\n') {
			(*this)._method_new_line();
			if ((!(_62713_raw))) {
				(*this)._method_push_err(jule::Str("string is not finished", 22),jule::Slice<jule::Any>({}));
				((*this)._field_pos)++;
				return jule::Str("", 0);
			}
		}
		jule::Str _64417_r = (*this)._method_get_rune((*this)._field_file->_field_data.slice(static_cast<jule::Int>((*this)._field_pos)),_62713_raw);
		_62417_s+=_64417_r;
		(*this)._field_column+=static_cast<jule::I64>(_64417_r.len());
		if (_63217_ch == _62513_mark) {
			goto _iter_end_4439844656;
		}
	}
	_iter_next_4439844656:;
	goto _iter_begin_4439844656;
	_iter_end_4439844656:;
	return _62417_s;
}



inline jule::Bool _1ab00b922_Lex::_method_is_first_token_of_line(void) {
	return (*this)._field_column == 1LL;
}



inline void _1ab00b922_Lex::_method_new_line(void) {
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _1ab00b922_Lex::_method_is_op(jule::Slice<jule::U8> _66424_txt,jule::Str _66437_kind,jule::Uint _66448_id,_1ab0277b7_Token& _66466_t) {
	if ((!(_1ab00b922_bytes_has_prefix(_66424_txt,_66437_kind)))) {
		return false;
	}
	_66466_t._field_kind=_66437_kind;
	_66466_t._field_id=_66448_id;
	(*this)._field_pos+=static_cast<jule::I64>(_66437_kind.len());
	return true;
}



inline jule::Bool _1ab00b922_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _67532_txt,_1ab0277b7_Token& _67550_tok) {
	{
		auto _range_expr = _1ab00b922_BASIC_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1ab00b922_KindPair _1ab00b922_pair = *_range_begin;
			_iter_begin_4439874080:;
			{
				if ((*this)._method_is_op(_67532_txt,_1ab00b922_pair._field_kind,_1ab00b922_pair._field_id,_67550_tok)) {
					return true;
				}
			}
			_iter_next_4439874080:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00b922_pair = *_range_begin; goto _iter_begin_4439874080; }
			_iter_end_4439874080:;
		}
	}
	return false;
}



inline jule::Bool _1ab00b922_Lex::_method_lex_id(jule::Slice<jule::U8> _68525_txt,_1ab0277b7_Token& _68543_t) {
	jule::Str _68613_lex = (*this)._method_id(_68525_txt);
	if (_68613_lex == jule::Str("", 0)) {
		return false;
	}
	_68543_t._field_kind=_68613_lex;
	_68543_t._field_id=2LLU;
	return true;
}



inline jule::Bool _1ab00b922_Lex::_method_lex_num(jule::Slice<jule::U8> _69626_txt,_1ab0277b7_Token& _69644_t) {
	jule::Str _69713_lex = (*this)._method_num(_69626_txt);
	if (_69713_lex == jule::Str("", 0)) {
		return false;
	}
	_69644_t._field_kind=_69713_lex;
	_69644_t._field_id=6LLU;
	return true;
}



inline _1ab0277b7_Token _1ab00b922_Lex::_method_token(void) {
	_1ab0277b7_Token _70917_t = _1ab0277b7_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _71113_txt = (*this)._method_resume();
	if (_71113_txt == nullptr) {
		return _70917_t;
	}
	_70917_t._field_column=(*this)._field_column;
	_70917_t._field_row=(*this)._field_row;
	{
		if (!(((*this)._method_lex_num(_71113_txt,_70917_t)))) { goto _case_end_4439900912; }
		goto _match_end_4439894544;
		_case_end_4439900912:;
		if (!((_71113_txt[0LL] == '\''))) { goto _case_end_4439901024; }
		_case_begin_4439901024:;
		{
			_70917_t._field_kind=(*this)._method_lex_rune(_71113_txt);
			_70917_t._field_id=6LLU;
			return _70917_t;
		}
		goto _match_end_4439894544;
		_case_end_4439901024:;
		if (!(((_71113_txt[0LL] == '\"') || (_71113_txt[0LL] == '`')))) { goto _case_end_4439896560; }
		_case_begin_4439896560:;
		{
			_70917_t._field_kind=(*this)._method_lex_str();
			_70917_t._field_id=6LLU;
			return _70917_t;
		}
		goto _match_end_4439894544;
		_case_end_4439896560:;
		if (!((_1ab00b922_bytes_has_prefix(_71113_txt,jule::Str("//", 2))))) { goto _case_end_4439896672; }
		_case_begin_4439896672:;
		{
			(*this)._method_lex_line_comment(_70917_t);
			return _70917_t;
		}
		goto _match_end_4439894544;
		_case_end_4439896672:;
		if (!((_1ab00b922_bytes_has_prefix(_71113_txt,jule::Str("/*", 2))))) { goto _case_end_4439896784; }
		_case_begin_4439896784:;
		{
			(*this)._method_lex_range_comment();
			return _70917_t;
		}
		goto _match_end_4439894544;
		_case_end_4439896784:;
		if (!(((*this)._method_is_op(_71113_txt,jule::Str("(", 1),3LLU,_70917_t)) || ((*this)._method_is_op(_71113_txt,jule::Str(")", 1),3LLU,_70917_t)) || ((*this)._method_is_op(_71113_txt,jule::Str("{", 1),3LLU,_70917_t)) || ((*this)._method_is_op(_71113_txt,jule::Str("}", 1),3LLU,_70917_t)) || ((*this)._method_is_op(_71113_txt,jule::Str("[", 1),3LLU,_70917_t)) || ((*this)._method_is_op(_71113_txt,jule::Str("]", 1),3LLU,_70917_t)) || ((*this)._method_lex_basic_ops(_71113_txt,_70917_t)))) { goto _case_end_4439901584; }
		goto _match_end_4439894544;
		_case_end_4439901584:;
		if (!(((*this)._method_lex_id(_71113_txt,_70917_t)))) { goto _case_end_4439901696; }
		_case_begin_4439901696:;
		{
			{
				auto _range_expr = _1ab00b922_KEYWORDS;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					_1ab00b922_KindPair _1ab00b922_pair = *_range_begin;
					_iter_begin_4439916592:;
					{
						if (_1ab00b922_pair._field_kind == _70917_t._field_kind) {
							_70917_t._field_id=_1ab00b922_pair._field_id;
							goto _iter_end_4439916592;
						}
					}
					_iter_next_4439916592:;
					++_range_begin;
					if (_range_begin != _range_end) { _1ab00b922_pair = *_range_begin; goto _iter_begin_4439916592; }
					_iter_end_4439916592:;
				}
			}
		}
		goto _match_end_4439894544;
		_case_end_4439901696:;
		_case_begin_4439896112:;
		{
			jule::I32 _76118_r;
			jule::Int _76121_sz;
			std::tie(_76118_r,_76121_sz) = _1ab21c902_decode_rune(_71113_txt);
			(*this)._method_push_err(jule::Str("undefined code content: @", 25),jule::Slice<jule::Any>({jule::Any(_76118_r)}));
			((*this)._field_column)++;
			(*this)._field_pos+=_76121_sz;
			return _70917_t;
		}
		goto _match_end_4439894544;
		_case_end_4439896112:;
		_match_end_4439894544:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_70917_t._field_kind.len());
	return _70917_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab00b922_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab026d8d_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_Node::_method_is_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_EnumDecl>>() || _match_expr.type_is<jule::Ref<_1aaeea1c4_FnDecl>>() || _match_expr.type_is<jule::Ref<_1aaeea1c4_StructDecl>>() || _match_expr.type_is<jule::Ref<_1aaeea1c4_TraitDecl>>() || _match_expr.type_is<jule::Ref<_1aaeea1c4_TypeAliasDecl>>() || _match_expr.type_is<jule::Ref<_1aaeea1c4_FieldDecl>>() || _match_expr.type_is<jule::Ref<_1aaeea1c4_UseDecl>>() || _match_expr.type_is<jule::Ref<_1aaeea1c4_VarDecl>>() || _match_expr.type_is<jule::Ref<_1aaeea1c4_TypeDecl>>())) { goto _case_end_4440024848; }
		_case_begin_4440024848:;
		{
			return true;
		}
		goto _match_end_4440023808;
		_case_end_4440024848:;
		_case_begin_4440024544:;
		{
			return false;
		}
		goto _match_end_4440023808;
		_case_end_4440024544:;
		_match_end_4440023808:;
	}
}



inline jule::Bool _1aaeea1c4_Node::_method_is_comment(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_Comment>>() || _match_expr.type_is<jule::Ref<_1aaeea1c4_CommentGroup>>())) { goto _case_end_4440041936; }
		_case_begin_4440041936:;
		{
			return true;
		}
		goto _match_end_4440039744;
		_case_end_4440041936:;
		_case_begin_4440041632:;
		{
			return false;
		}
		goto _match_end_4440039744;
		_case_end_4440041632:;
		_match_end_4440039744:;
	}
}



inline jule::Bool _1aaeea1c4_Node::_method_is_impl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_Impl>>())) { goto _case_end_4440045776; }
		_case_begin_4440045776:;
		{
			return true;
		}
		goto _match_end_4440044208;
		_case_end_4440045776:;
		_case_begin_4440045472:;
		{
			return false;
		}
		goto _match_end_4440044208;
		_case_end_4440045472:;
		_match_end_4440044208:;
	}
}



inline jule::Bool _1aaeea1c4_Node::_method_is_use_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_UseDecl>>())) { goto _case_end_4440049296; }
		_case_begin_4440049296:;
		{
			return true;
		}
		goto _match_end_4440046512;
		_case_end_4440049296:;
		_case_begin_4440048992:;
		{
			return false;
		}
		goto _match_end_4440046512;
		_case_end_4440048992:;
		_match_end_4440046512:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_Comment::_method_is_directive(void) {
	return (*this)._field_text.has_prefix(jule::Str("jule:", 5));
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_RefTypeDecl &_Src) {
	_Stream << "RefTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_PtrTypeDecl::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_ArrTypeDecl::_method_auto_sized(void) {
	return (!(jule::real((*this)._field_size)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_Expr::_method_is_fn_call(void) {
	if ((*this)._field_kind == nullptr) {
		return false;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_FnCallExpr>>())) { goto _case_end_4440068368; }
		_case_begin_4440068368:;
		{
			return true;
		}
		goto _match_end_4440066400;
		_case_end_4440068368:;
		_case_begin_4440067888:;
		{
			return false;
		}
		goto _match_end_4440066400;
		_case_end_4440067888:;
		_match_end_4440066400:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "concurrent:" << _Src._field_concurrent;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



inline jule::Bool _1aaeea1c4_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_FnDecl::_method_is_anon(void) {
	return (*this)._field_ident == jule::Str("<anonymous>", 11);
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_EnumItemDecl::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_expr)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_EnumDecl::_method_default_typed(void) {
	return (!(jule::real((*this)._field_kind)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaeea1c4_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1aaeea1c4_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaeea1c4_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab059068_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab059068_PackageInfo &_Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab05bd18_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1ab05bd18_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _1ab05bd18_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



inline jule::Bool _1ab05bd18_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stms.len();
}



inline jule::Bool _1ab05bd18_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stms.len();
}



inline void _1ab05bd18_ScopeParser::_method_push_err(_1ab0277b7_Token _15927_token,jule::Str _15941_fmt) {
	(*this)._field_p->_method_push_err(_15927_token,_15941_fmt,jule::Slice<jule::Any>({}));
}



inline void _1ab05bd18_ScopeParser::_method_push_suggestion(jule::Str _16234_fmt,jule::Slice<jule::Any> _16247_args) {
	(*this)._field_p->_method_push_suggestion(_16234_fmt,_16247_args);
}



inline void _1ab05bd18_ScopeParser::_method_insert_as_next(jule::Slice<_1ab0277b7_Token> _16637_tokens) {
	(*this)._field_stms=jule::append((*this)._field_stms.slice(0LL,static_cast<jule::Int>((*this)._field_pos + 1LL)),(*this)._field_stms.slice(static_cast<jule::Int>((*this)._field_pos)));
	(*this)._field_stms[static_cast<jule::Int>((*this)._field_pos + 1LL)]=jule::new_struct<_1ab05bd18_Stmt>(new( std::nothrow ) _1ab05bd18_Stmt(_16637_tokens,jule::Bool()));
}



inline jule::Ref<_1ab05bd18_Stmt> _1ab05bd18_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stms[static_cast<jule::Int>((*this)._field_pos)];
}



inline jule::Ref<_1aaeea1c4_ScopeTree> _1ab05bd18_ScopeParser::_method_build_scope(jule::Slice<_1ab0277b7_Token> _17634_tokens) {
	jule::Ref<_1aaeea1c4_ScopeTree> _17717_s = _1ab05bd18_new_scope();
	_17717_s->_field_parent=(*this)._field_s;
	_1ab05bd18_ScopeParser _17917_ssp = _1ab05bd18_ScopeParser((*this)._field_p,jule::Ref<_1aaeea1c4_ScopeTree>(),jule::Slice<jule::Ref<_1ab05bd18_Stmt>>(),jule::Int());
	_17917_ssp._method_build(_17634_tokens,_17717_s);
	return _17717_s;
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_var_st(jule::Slice<_1ab0277b7_Token> _18635_tokens) {
	jule::Ref<_1aaeea1c4_VarDecl> _18717_v = (*this)._field_p->_method_build_var(_18635_tokens);
	_18717_v->_field_scope=(*this)._field_s;
	return jule::Any(_18717_v);
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_ret_st(jule::Slice<_1ab0277b7_Token> _19235_tokens) {
	jule::Ref<_1aaeea1c4_RetSt> _19317_st = jule::new_struct<_1aaeea1c4_RetSt>(new( std::nothrow ) _1aaeea1c4_RetSt(_19235_tokens[0LL],jule::Ref<_1aaeea1c4_Expr>()));
	if (_19235_tokens.len() > 1LL) {
		_19235_tokens=_19235_tokens.slice(1LL);
		_19317_st->_field_expr=(*this)._field_p->_method_build_expr(_19235_tokens);
	}
	return jule::Any(_19317_st);
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_while_next_iter(jule::Ref<_1ab05bd18_Stmt> _20344_s) {
	jule::Ref<_1aaeea1c4_Iter> _20417_it = jule::new_struct<_1aaeea1c4_Iter>(new( std::nothrow ) _1aaeea1c4_Iter(_20344_s->_field_tokens[0LL],jule::Any(),jule::Ref<_1aaeea1c4_ScopeTree>()));
	jule::Slice<_1ab0277b7_Token> _20717_tokens = _20344_s->_field_tokens.slice(1LL);
	jule::Ref<_1aaeea1c4_WhileKind> _20817_kind = jule::new_struct<_1aaeea1c4_WhileKind>(new( std::nothrow ) _1aaeea1c4_WhileKind());
	if (_20717_tokens.len() > 0LL) {
		_20817_kind->_field_expr=(*this)._field_p->_method_build_expr(_20717_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_20417_it->_field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_20717_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_1ab0277b7_Token> _22017_st_tokens = _1ab060d50_get_block_expr(_20717_tokens);
	if (_22017_st_tokens.len() > 0LL) {
		jule::Ref<_1ab05bd18_Stmt> _22221_s = jule::new_struct<_1ab05bd18_Stmt>(new( std::nothrow ) _1ab05bd18_Stmt(_22017_st_tokens,_20344_s->_field_terminated));
		_20817_kind->_field_next_token=_22017_st_tokens[0LL];
		_20817_kind->_field_next=(*this)._method_build_st(_22221_s);
	}
	jule::I64 _23017_i = _22017_st_tokens.len();
	jule::Slice<_1ab0277b7_Token> _23117_block_tokens = _1ac1ba56e_range(_23017_i,jule::Str("{", 1),jule::Str("}", 1),_20717_tokens);
	if (_23117_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_20417_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_23017_i < _20717_tokens.len()) {
		(*this)._method_push_err(_20717_tokens[static_cast<jule::Int>(_23017_i)],jule::Str("invalid syntax", 14));
	}
	_20417_it->_field_scope=(*this)._method_build_scope(_23117_block_tokens);
	_20417_it->_field_kind=jule::Any(_20817_kind);
	return jule::Any(_20417_it);
}



inline jule::Ref<_1aaeea1c4_WhileKind> _1ab05bd18_ScopeParser::_method_build_while_iter_kind(jule::Slice<_1ab0277b7_Token> _24844_tokens) {
	return jule::new_struct<_1aaeea1c4_WhileKind>(new( std::nothrow ) _1aaeea1c4_WhileKind((*this)._field_p->_method_build_expr(_24844_tokens),jule::Any(),_1ab0277b7_Token()));
}



inline jule::Slice<jule::Slice<_1ab0277b7_Token>> _1ab05bd18_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_1ab0277b7_Token> _25449_toks) {
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _25518_vars;
	jule::Slice<_1d068165a_Log> _25524_errs;
	std::tie(_25518_vars,_25524_errs) = _1ac1ba56e_parts(_25449_toks,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_25524_errs);
	return _25518_vars;
}



inline jule::Ref<_1aaeea1c4_VarDecl> _1ab05bd18_ScopeParser::_method_build_range_kind_key(jule::Slice<_1ab0277b7_Token> _26043_tokens) {
	if (_26043_tokens.len() == 0LL) {
		return jule::new_ref<_1aaeea1c4_VarDecl>();
	}
	jule::Ref<_1aaeea1c4_VarDecl> _26417_key = jule::new_struct<_1aaeea1c4_VarDecl>(new( std::nothrow ) _1aaeea1c4_VarDecl(jule::Ref<_1aaeea1c4_ScopeTree>(),_26043_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1aaeea1c4_Directive>>(),jule::Ref<_1aaeea1c4_CommentGroup>(),jule::Ref<_1aaeea1c4_TypeDecl>(),jule::Ref<_1aaeea1c4_Expr>()));
	if (_26417_key->_field_token._field_id == 36LLU) {
		_26417_key->_field_mutable=true;
		if (_26043_tokens.len() == 1LL) {
			(*this)._method_push_err(_26417_key->_field_token,jule::Str("invalid syntax", 14));
		}
		_26417_key->_field_token=_26043_tokens[1LL];
	} else if (_26043_tokens.len() > 1LL) {
		(*this)._method_push_err(_26043_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_26417_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_26417_key->_field_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_VarDecl>();
	}
	_26417_key->_field_ident=_26417_key->_field_token._field_kind;
	return _26417_key;
}



inline jule::Slice<jule::Ref<_1aaeea1c4_VarDecl>> _1ab05bd18_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_1ab0277b7_Token>> _28544_parts) {
	jule::Slice<jule::Ref<_1aaeea1c4_VarDecl>> _28617_keys = nullptr;
	{
		auto _range_expr = _28544_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1ab0277b7_Token> _1ab05bd18_tokens = *_range_begin;
			_iter_begin_4440778128:;
			{
				_28617_keys=jule::append(_28617_keys,jule::Slice<jule::Ref<_1aaeea1c4_VarDecl>>({(*this)._method_build_range_kind_key(_1ab05bd18_tokens)}));
			}
			_iter_next_4440778128:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab05bd18_tokens = *_range_begin; goto _iter_begin_4440778128; }
			_iter_end_4440778128:;
		}
	}
	return _28617_keys;
}



inline void _1ab05bd18_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ref<_1aaeea1c4_RangeKind> _29350_rng,jule::Slice<_1ab0277b7_Token> _29371_tokens) {
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _29417_key_tokens = (*this)._method_get_range_kind_keys_tokens(_29371_tokens);
	if (_29417_key_tokens.len() == 0LL) {
		return;
	}
	if (_29417_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_29350_rng->_field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ref<_1aaeea1c4_VarDecl>> _30117_keys = (*this)._method_build_range_kind_keys(_29417_key_tokens);
	_29350_rng->_field_key_a=_30117_keys[0LL];
	if (_30117_keys.len() > 1LL) {
		_29350_rng->_field_key_b=_30117_keys[1LL];
	}
}



inline void _1ab05bd18_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ref<_1aaeea1c4_RangeKind> _30853_rng,jule::Slice<_1ab0277b7_Token> _30874_tokens) {
	jule::Int _30917_i = 0LL;
	jule::Slice<_1ab0277b7_Token> _31017_rang = _1ac1ba56e_range(_30917_i,jule::Str("(", 1),jule::Str(")", 1),_30874_tokens);
	if (_30917_i < _30874_tokens.len()) {
		(*this)._method_push_err(_30853_rng->_field_in_token,jule::Str("invalid syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_30853_rng,_31017_rang);
}



inline void _1ab05bd18_ScopeParser::_method_setup_range_kind_keys(jule::Ref<_1aaeea1c4_RangeKind> _31744_rng,jule::Slice<_1ab0277b7_Token> _31765_tokens) {
	if (_31765_tokens[0LL]._field_id == 3LLU) {
		if (_31765_tokens[0LL]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_31765_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_31744_rng,_31765_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_31744_rng,_31765_tokens);
}



inline jule::Ref<_1aaeea1c4_RangeKind> _1ab05bd18_ScopeParser::_method_build_range_iter_kind(jule::Slice<_1ab0277b7_Token> _32944_var_tokens,jule::Slice<_1ab0277b7_Token> _32969_expr_tokens,_1ab0277b7_Token _32991_in_token) {
	jule::Ref<_1aaeea1c4_RangeKind> _33017_rng = jule::new_struct<_1aaeea1c4_RangeKind>(new( std::nothrow ) _1aaeea1c4_RangeKind(_32991_in_token,jule::Ref<_1aaeea1c4_Expr>(),jule::Ref<_1aaeea1c4_VarDecl>(),jule::Ref<_1aaeea1c4_VarDecl>()));
	if (_32969_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_33017_rng->_field_in_token,jule::Str("expression missing", 18));
		return _33017_rng;
	}
	_33017_rng->_field_expr=(*this)._field_p->_method_build_expr(_32969_expr_tokens);
	if (_32944_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_33017_rng,_32944_var_tokens);
	}
	return _33017_rng;
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_common_iter_kind(jule::Slice<_1ab0277b7_Token> _34445_tokens,_1ab0277b7_Token _34462_err_tok) {
	jule::Int _34517_brace_n = 0LL;
	{
		auto _range_expr = _34445_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab05bd18_i = 0;
			_1ab0277b7_Token _1ab05bd18_tok = *_range_begin;
			_iter_begin_4440824144:;
			{
				if (_1ab05bd18_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1ab05bd18_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4440828496; }
						_case_begin_4440828496:;
						{
							(_34517_brace_n)++;
							goto _iter_next_4440824144;
						}
						goto _match_end_4440826912;
						_case_end_4440828496:;
						_case_begin_4440827696:;
						{
							(_34517_brace_n)--;
						}
						goto _match_end_4440826912;
						_case_end_4440827696:;
						_match_end_4440826912:;
					}
				}
				if (_34517_brace_n != 0LL) {
					goto _iter_next_4440824144;
				}
				{
					auto _match_expr{ _1ab05bd18_tok._field_id };
					if (!((15LLU) == _match_expr)) { goto _case_end_4440829904; }
					_case_begin_4440829904:;
					{
						jule::Slice<_1ab0277b7_Token> _36425_decl_tokens = _34445_tokens.slice(0LL,static_cast<jule::Int>(_1ab05bd18_i));
						jule::Slice<_1ab0277b7_Token> _36525_expr_tokens = _34445_tokens.slice(static_cast<jule::Int>(_1ab05bd18_i + 1LL));
						return jule::Any((*this)._method_build_range_iter_kind(_36425_decl_tokens,_36525_expr_tokens,_1ab05bd18_tok));
					}
					goto _match_end_4440826368;
					_case_end_4440829904:;
					_match_end_4440826368:;
				}
			}
			_iter_next_4440824144:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab05bd18_i; _1ab05bd18_tok = *_range_begin; goto _iter_begin_4440824144; }
			_iter_end_4440824144:;
		}
	}
	return jule::Any((*this)._method_build_while_iter_kind(_34445_tokens));
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_common_iter(jule::Slice<_1ab0277b7_Token> _37240_tokens) {
	jule::Ref<_1aaeea1c4_Iter> _37317_it = jule::new_struct<_1aaeea1c4_Iter>(new( std::nothrow ) _1aaeea1c4_Iter(_37240_tokens[0LL],jule::Any(),jule::Ref<_1aaeea1c4_ScopeTree>()));
	_37240_tokens=_37240_tokens.slice(1LL);
	if (_37240_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_37317_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	jule::Slice<_1ab0277b7_Token> _38317_expr_tokens = _1ab060d50_get_block_expr(_37240_tokens);
	if (_38317_expr_tokens.len() > 0LL) {
		_37317_it->_field_kind=(*this)._method_build_common_iter_kind(_38317_expr_tokens,_37317_it->_field_token);
	}
	jule::I64 _38717_i = _38317_expr_tokens.len();
	jule::Slice<_1ab0277b7_Token> _38817_scope_tokens = _1ac1ba56e_range(_38717_i,jule::Str("{", 1),jule::Str("}", 1),_37240_tokens);
	if (_38817_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_37317_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_38717_i < _37240_tokens.len()) {
		(*this)._method_push_err(_37240_tokens[static_cast<jule::Int>(_38717_i)],jule::Str("invalid syntax", 14));
	}
	_37317_it->_field_scope=(*this)._method_build_scope(_38817_scope_tokens);
	return jule::Any(_37317_it);
}



inline jule::Any _1ab05bd18_ScopeParser::_method_buid_iter_st(jule::Ref<_1ab05bd18_Stmt> _40235_st) {
	if (_40235_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_40235_st);
	}
	return (*this)._method_build_common_iter(_40235_st->_field_tokens);
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_break_st(jule::Slice<_1ab0277b7_Token> _40937_tokens) {
	jule::Ref<_1aaeea1c4_BreakSt> _41017_brk = jule::new_struct<_1aaeea1c4_BreakSt>(new( std::nothrow ) _1aaeea1c4_BreakSt(_40937_tokens[0LL],_1ab0277b7_Token()));
	if (_40937_tokens.len() > 1LL) {
		if (_40937_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_40937_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_41017_brk->_field_label=_40937_tokens[1LL];
			if (_40937_tokens.len() > 2LL) {
				(*this)._method_push_err(_40937_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_41017_brk);
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_cont_st(jule::Slice<_1ab0277b7_Token> _42736_tokens) {
	jule::Ref<_1aaeea1c4_ContSt> _42817_cont = jule::new_struct<_1aaeea1c4_ContSt>(new( std::nothrow ) _1aaeea1c4_ContSt(_42736_tokens[0LL],_1ab0277b7_Token()));
	if (_42736_tokens.len() > 1LL) {
		if (_42736_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_42736_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_42817_cont->_field_label=_42736_tokens[1LL];
			if (_42736_tokens.len() > 2LL) {
				(*this)._method_push_err(_42736_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_42817_cont);
}



inline jule::Ref<_1aaeea1c4_If> _1ab05bd18_ScopeParser::_method_build_if(jule::Slice<_1ab0277b7_Token>& _44532_tokens) {
	jule::Ref<_1aaeea1c4_If> _44617_model = jule::new_struct<_1aaeea1c4_If>(new( std::nothrow ) _1aaeea1c4_If(_44532_tokens[0LL],jule::Ref<_1aaeea1c4_Expr>(),jule::Ref<_1aaeea1c4_ScopeTree>()));
	_44532_tokens=_44532_tokens.slice(1LL);
	jule::Slice<_1ab0277b7_Token> _45017_expr_tokens = _1ab060d50_get_block_expr(_44532_tokens);
	jule::Int _45117_i = 0LL;
	if (_45017_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_44617_model->_field_token,jule::Str("expression missing", 18));
	} else {
		_45117_i=static_cast<jule::I64>(_45017_expr_tokens.len());
	}
	jule::Slice<_1ab0277b7_Token> _45717_scope_tokens = _1ac1ba56e_range(_45117_i,jule::Str("{", 1),jule::Str("}", 1),_44532_tokens);
	if (_45717_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_44617_model->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_If>();
	}
	if (_45117_i < _44532_tokens.len()) {
		if (_44532_tokens[static_cast<jule::Int>(_45117_i)]._field_id == 17LLU) {
			_44532_tokens=_44532_tokens.slice(static_cast<jule::Int>(_45117_i));
		} else {
			(*this)._method_push_err(_44532_tokens[static_cast<jule::Int>(_45117_i)],jule::Str("invalid syntax", 14));
			_44532_tokens=nullptr;
		}
	}
	_44617_model->_field_expr=(*this)._field_p->_method_build_expr(_45017_expr_tokens);
	_44617_model->_field_scope=(*this)._method_build_scope(_45717_scope_tokens);
	return _44617_model;
}



inline jule::Ref<_1aaeea1c4_Else> _1ab05bd18_ScopeParser::_method_build_else(jule::Slice<_1ab0277b7_Token> _47733_tokens) {
	jule::Ref<_1aaeea1c4_Else> _47817_els = jule::new_struct<_1aaeea1c4_Else>(new( std::nothrow ) _1aaeea1c4_Else(_47733_tokens[0LL],jule::Ref<_1aaeea1c4_ScopeTree>()));
	_47733_tokens=_47733_tokens.slice(1LL);
	jule::Int _48217_i = 0LL;
	jule::Slice<_1ab0277b7_Token> _48317_scope_tokens = _1ac1ba56e_range(_48217_i,jule::Str("{", 1),jule::Str("}", 1),_47733_tokens);
	if (_48317_scope_tokens == nullptr) {
		if (_48217_i < _47733_tokens.len()) {
			(*this)._method_push_err(_47817_els->_field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_47817_els->_field_token,jule::Str("body is not exist", 17));
			(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_1aaeea1c4_Else>();
	}
	if (_48217_i < _47733_tokens.len()) {
		(*this)._method_push_err(_47733_tokens[static_cast<jule::Int>(_48217_i)],jule::Str("invalid syntax", 14));
	}
	_47817_els->_field_scope=(*this)._method_build_scope(_48317_scope_tokens);
	return _47817_els;
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_if_else_chain(jule::Slice<_1ab0277b7_Token> _50142_tokens) {
	jule::Ref<_1aaeea1c4_Conditional> _50217_chain = jule::new_struct<_1aaeea1c4_Conditional>(new( std::nothrow ) _1aaeea1c4_Conditional((*this)._method_build_if(_50142_tokens),jule::Slice<jule::Ref<_1aaeea1c4_If>>(),jule::Ref<_1aaeea1c4_Else>()));
	if ((!(jule::real(_50217_chain->_field_head)))) {
		return jule::Any(nullptr);
	}
	_iter_begin_4440928352:;
	if (!(_50142_tokens != nullptr)) { goto _iter_end_4440928352; }
	{
		if (_50142_tokens[0LL]._field_id != 17LLU) {
			goto _iter_end_4440928352;
		}
		if ((_50142_tokens.len() > 1LL) && (_50142_tokens[1LL]._field_id == 16LLU)) {
			_50142_tokens=_50142_tokens.slice(1LL);
			jule::Ref<_1aaeea1c4_If> _51425_elif = (*this)._method_build_if(_50142_tokens);
			_50217_chain->_field_tail=jule::append(_50217_chain->_field_tail,jule::Slice<jule::Ref<_1aaeea1c4_If>>({_51425_elif}));
			goto _iter_next_4440928352;
		}
		_50217_chain->_field_default=(*this)._method_build_else(_50142_tokens);
		goto _iter_end_4440928352;
	}
	_iter_next_4440928352:;
	goto _iter_begin_4440928352;
	_iter_end_4440928352:;
	return jule::Any(_50217_chain);
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_comment_st(_1ab0277b7_Token _52435_token) {
	return jule::Any(_1ac1ba56e_build_comment(_52435_token));
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_call_st(jule::Slice<_1ab0277b7_Token> _52836_tokens) {
	_1ab0277b7_Token _52913_token = _52836_tokens[0LL];
	if (_1ab060d50_is_fn_call(_52836_tokens) == nullptr) {
		(*this)._method_push_err(_52913_token,jule::Str("statement must have function call expression", 44));
	}
	jule::Ref<_1aaeea1c4_Expr> _53317_expr = (*this)._field_p->_method_build_expr(_52836_tokens);
	if (jule::real(_53317_expr) && (!(_53317_expr->_method_is_fn_call()))) {
		(*this)._method_push_err(_52913_token,jule::Str("invalid syntax", 14));
	}
	return jule::Any(_53317_expr);
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_co_call_st(jule::Slice<_1ab0277b7_Token> _54039_tokens) {
	_54039_tokens=_54039_tokens.slice(1LL);
	jule::Any _54217_cc = (*this)._method_build_call_st(_54039_tokens);
	_54217_cc.operator jule::Ref<_1aaeea1c4_Expr>()->_field_kind.operator jule::Ref<_1aaeea1c4_FnCallExpr>()->_field_concurrent=true;
	return _54217_cc;
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_goto_st(jule::Slice<_1ab0277b7_Token> _54736_tokens) {
	jule::Ref<_1aaeea1c4_GotoSt> _54817_gt = jule::new_struct<_1aaeea1c4_GotoSt>(new( std::nothrow ) _1aaeea1c4_GotoSt(_54736_tokens[0LL],_1ab0277b7_Token()));
	if (_54736_tokens.len() == 1LL) {
		(*this)._method_push_err(_54817_gt->_field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if (_54736_tokens.len() > 2LL) {
		(*this)._method_push_err(_54736_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_1ab0277b7_Token _55717_ident_token = _54736_tokens[1LL];
	if (_55717_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_55717_ident_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::Any(_54817_gt);
	}
	_54817_gt->_field_label=_55717_ident_token;
	return jule::Any(_54817_gt);
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_fall_st(jule::Slice<_1ab0277b7_Token> _56736_tokens) {
	jule::Ref<_1aaeea1c4_FallSt> _56817_fll = jule::new_struct<_1aaeea1c4_FallSt>(new( std::nothrow ) _1aaeea1c4_FallSt(_56736_tokens[0LL]));
	if (_56736_tokens.len() > 1LL) {
		(*this)._method_push_err(_56736_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_56817_fll);
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_type_alias_st(jule::Slice<_1ab0277b7_Token> _57742_tokens) {
	jule::Ref<_1aaeea1c4_TypeAliasDecl> _57817_tad = (*this)._field_p->_method_build_type_alias_decl(_57742_tokens);
	_57817_tad->_field_scope=(*this)._field_s;
	return jule::Any(_57817_tad);
}



inline void _1ab05bd18_ScopeParser::_method_push_case_expr(jule::Slice<_1ab0277b7_Token> _58337_tokens,_1ab0277b7_Token _58358_token,jule::Bool _5849_type_match,jule::Slice<jule::Ref<_1aaeea1c4_Expr>>& _58432_exprs) {
	if (_58337_tokens.len() == 0LL) {
		return;
	}
	if (_5849_type_match) {
		jule::Int _59021_i = 0LL;
		jule::Ref<_1aaeea1c4_TypeDecl> _59122_t;
		jule::Bool _59125_ok;
		std::tie(_59122_t,_59125_ok) = (*this)._field_p->_method_build_type(_58337_tokens,(&(_59021_i)),true);
		if (_59125_ok) {
			_58432_exprs=jule::append(_58432_exprs,jule::Slice<jule::Ref<_1aaeea1c4_Expr>>({jule::new_struct<_1aaeea1c4_Expr>(new( std::nothrow ) _1aaeea1c4_Expr(_58358_token,jule::Any(_59122_t)))}));
		}
		if (_59021_i < _58337_tokens.len()) {
			(*this)._method_push_err(_58337_tokens[static_cast<jule::Int>(_59021_i)],jule::Str("invalid syntax", 14));
		}
		return;
	}
	_58432_exprs=jule::append(_58432_exprs,jule::Slice<jule::Ref<_1aaeea1c4_Expr>>({(*this)._field_p->_method_build_expr(_58337_tokens)}));
}



inline jule::Slice<jule::Ref<_1aaeea1c4_Expr>> _1ab05bd18_ScopeParser::_method_build_case_exprs(jule::Slice<_1ab0277b7_Token>& _60640_tokens,jule::Bool _60657_type_match) {
	jule::Slice<jule::Ref<_1aaeea1c4_Expr>> _60717_exprs = nullptr;
	jule::Int _60917_brace_n = 0LL;
	jule::Int _61017_j = 0LL;
	{
		auto _range_expr = _60640_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab05bd18_i = 0;
			_1ab0277b7_Token _1ab05bd18_tok = *_range_begin;
			_iter_begin_4441005680:;
			{
				if (_1ab05bd18_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1ab05bd18_tok._field_kind };
						if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4441010048; }
						_case_begin_4441010048:;
						{
							(_60917_brace_n)++;
						}
						goto _match_end_4441008464;
						_case_end_4441010048:;
						_case_begin_4441009248:;
						{
							(_60917_brace_n)--;
						}
						goto _match_end_4441008464;
						_case_end_4441009248:;
						_match_end_4441008464:;
					}
					goto _iter_next_4441005680;
				} else if (_60917_brace_n != 0LL) {
					goto _iter_next_4441005680;
				}
				{
					if (!(((_1ab05bd18_tok._field_id == 7LLU) && (_1ab05bd18_tok._field_kind == jule::Str("|", 1))))) { goto _case_end_4441007968; }
					_case_begin_4441007968:;
					{
						(*this)._method_push_case_expr(_60640_tokens.slice(static_cast<jule::Int>(_61017_j),static_cast<jule::Int>(_1ab05bd18_i)),_1ab05bd18_tok,_60657_type_match,_60717_exprs);
						_61017_j=static_cast<jule::Int>(_1ab05bd18_i + 1LL);
					}
					goto _match_end_4441011344;
					_case_end_4441007968:;
					if (!((_1ab05bd18_tok._field_id == 11LLU))) { goto _case_end_4441008080; }
					_case_begin_4441008080:;
					{
						(*this)._method_push_case_expr(_60640_tokens.slice(static_cast<jule::Int>(_61017_j),static_cast<jule::Int>(_1ab05bd18_i)),_1ab05bd18_tok,_60657_type_match,_60717_exprs);
						_60640_tokens=_60640_tokens.slice(static_cast<jule::Int>(_1ab05bd18_i + 1LL));
						return _60717_exprs;
					}
					goto _match_end_4441011344;
					_case_end_4441008080:;
					_match_end_4441011344:;
				}
			}
			_iter_next_4441005680:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab05bd18_i; _1ab05bd18_tok = *_range_begin; goto _iter_begin_4441005680; }
			_iter_end_4441005680:;
		}
	}
	(*this)._method_push_err(_60640_tokens[0LL],jule::Str("invalid syntax", 14));
	_60640_tokens=nullptr;
	return nullptr;
}



inline jule::Ref<_1aaeea1c4_ScopeTree> _1ab05bd18_ScopeParser::_method_build_case_scope(jule::Slice<_1ab0277b7_Token>& _64240_tokens) {
	jule::Int _64317_n = 0LL;
	_iter_begin_4441024672:;
	{
		jule::Int _64521_i = 0LL;
		jule::Slice<_1ab0277b7_Token> _64622_next;
		std::tie(_64622_next,std::ignore) = _1ab05bd18_skip_st(_64521_i,_64240_tokens.slice(static_cast<jule::Int>(_64317_n)));
		if (_64622_next.len() == 0LL) {
			goto _iter_end_4441024672;
		}
		_1ab0277b7_Token _65017_tok = _64622_next[0LL];
		if ((_65017_tok._field_id != 7LLU) || (_65017_tok._field_kind != jule::Str("|", 1))) {
			_64317_n+=_64521_i;
			goto _iter_next_4441024672;
		}
		jule::Ref<_1aaeea1c4_ScopeTree> _65521_scope = (*this)._method_build_scope(_64240_tokens.slice(0LL,static_cast<jule::Int>(_64317_n)));
		_64240_tokens=_64240_tokens.slice(static_cast<jule::Int>(_64317_n));
		return _65521_scope;
	}
	_iter_next_4441024672:;
	goto _iter_begin_4441024672;
	_iter_end_4441024672:;
	jule::Ref<_1aaeea1c4_ScopeTree> _65917_scope = (*this)._method_build_scope(_64240_tokens);
	_64240_tokens=nullptr;
	return _65917_scope;
}



inline std::tuple<jule::Ref<_1aaeea1c4_Case>,jule::Bool> _1ab05bd18_ScopeParser::_method_build_case(jule::Slice<_1ab0277b7_Token>& _66434_tokens,jule::Bool _66451_type_match) {
	jule::Ref<_1aaeea1c4_Case> _66517_c = jule::new_struct<_1aaeea1c4_Case>(new( std::nothrow ) _1aaeea1c4_Case(_66434_tokens[0LL],jule::Ref<_1aaeea1c4_ScopeTree>(),jule::Slice<jule::Ref<_1aaeea1c4_Expr>>()));
	_66434_tokens=_66434_tokens.slice(1LL);
	_66517_c->_field_exprs=(*this)._method_build_case_exprs(_66434_tokens,_66451_type_match);
	_66517_c->_field_scope=(*this)._method_build_case_scope(_66434_tokens);
	jule::Bool _67113_is_default = _66517_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_66517_c,_67113_is_default);
}



inline std::tuple<jule::Slice<jule::Ref<_1aaeea1c4_Case>>,jule::Ref<_1aaeea1c4_Else>> _1ab05bd18_ScopeParser::_method_build_cases(jule::Slice<_1ab0277b7_Token> _67534_tokens,jule::Bool _67551_type_match) {
	jule::Slice<jule::Ref<_1aaeea1c4_Case>> _67617_cases = nullptr;
	jule::Ref<_1aaeea1c4_Else> _67717_def = jule::new_ref<_1aaeea1c4_Else>();
	_iter_begin_4441054848:;
	if (!(_67534_tokens.len() > 0LL)) { goto _iter_end_4441054848; }
	{
		_1ab0277b7_Token _67921_tok = _67534_tokens[0LL];
		if (_67921_tok._field_id == 18LLU) {
			_67534_tokens=_67534_tokens.slice(1LL);
			goto _iter_next_4441054848;
		}
		if ((_67921_tok._field_id != 7LLU) || (_67921_tok._field_kind != jule::Str("|", 1))) {
			(*this)._method_push_err(_67921_tok,jule::Str("invalid syntax", 14));
			goto _iter_end_4441054848;
		}
		jule::Ref<_1aaeea1c4_Case> _69022_c;
		jule::Bool _69025_is_default;
		std::tie(_69022_c,_69025_is_default) = (*this)._method_build_case(_67534_tokens,_67551_type_match);
		if (_69025_is_default) {
			_69022_c->_field_token=_67921_tok;
			if ((!(jule::real(_67717_def)))) {
				_67717_def=jule::new_struct<_1aaeea1c4_Else>(new( std::nothrow ) _1aaeea1c4_Else(_69022_c->_field_token,_69022_c->_field_scope));
			} else {
				(*this)._method_push_err(_67921_tok,jule::Str("invalid syntax", 14));
			}
		} else {
			_67617_cases=jule::append(_67617_cases,jule::Slice<jule::Ref<_1aaeea1c4_Case>>({_69022_c}));
		}
	}
	_iter_next_4441054848:;
	goto _iter_begin_4441054848;
	_iter_end_4441054848:;
	return std::make_tuple(_67617_cases,_67717_def);
}



inline jule::Ref<_1aaeea1c4_MatchCase> _1ab05bd18_ScopeParser::_method_build_match_case(jule::Slice<_1ab0277b7_Token> _70839_tokens) {
	jule::Ref<_1aaeea1c4_MatchCase> _70917_m = jule::new_struct<_1aaeea1c4_MatchCase>(new( std::nothrow ) _1aaeea1c4_MatchCase(_70839_tokens[0LL],jule::Bool(),jule::Ref<_1aaeea1c4_Expr>(),jule::Slice<jule::Ref<_1aaeea1c4_Case>>(),jule::Ref<_1aaeea1c4_Else>()));
	_70839_tokens=_70839_tokens.slice(1LL);
	if ((_70839_tokens.len() > 0LL) && (_70839_tokens[0LL]._field_id == 10LLU)) {
		_70917_m->_field_type_match=true;
		_70839_tokens=_70839_tokens.slice(1LL);
	}
	jule::Slice<_1ab0277b7_Token> _71917_expr_tokens = _1ab060d50_get_block_expr(_70839_tokens);
	if (_71917_expr_tokens.len() > 0LL) {
		_70917_m->_field_expr=(*this)._field_p->_method_build_expr(_71917_expr_tokens);
	} else if (_70917_m->_field_type_match) {
		(*this)._method_push_err(_70917_m->_field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _72617_i = _71917_expr_tokens.len();
	jule::Slice<_1ab0277b7_Token> _72717_block_toks = _1ac1ba56e_range(_72617_i,jule::Str("{", 1),jule::Str("}", 1),_70839_tokens);
	if (_72717_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_70917_m->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_MatchCase>();
	}
	std::tie(_70917_m->_field_cases,_70917_m->_field_default) = (*this)._method_build_cases(_72717_block_toks,_70917_m->_field_type_match);
	return _70917_m;
}



inline jule::Ref<_1aaeea1c4_ScopeTree> _1ab05bd18_ScopeParser::_method_build_scope_st(jule::Slice<_1ab0277b7_Token> _73937_tokens) {
	jule::Bool _74017_is_unsafe = false;
	jule::Bool _74117_is_deferred = false;
	_1ab0277b7_Token _74217_token = _73937_tokens[0LL];
	if (_74217_token._field_id == 35LLU) {
		_74017_is_unsafe=true;
		_73937_tokens=_73937_tokens.slice(1LL);
		if (_73937_tokens.len() == 0LL) {
			(*this)._method_push_err(_74217_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1aaeea1c4_ScopeTree>();
		}
		_74217_token=_73937_tokens[0LL];
		if (_74217_token._field_id == 37LLU) {
			_74117_is_deferred=true;
			_73937_tokens=_73937_tokens.slice(1LL);
			if (_73937_tokens.len() == 0LL) {
				(*this)._method_push_err(_74217_token,jule::Str("invalid syntax", 14));
				return jule::new_ref<_1aaeea1c4_ScopeTree>();
			}
		}
	} else if (_74217_token._field_id == 37LLU) {
		_74117_is_deferred=true;
		_73937_tokens=_73937_tokens.slice(1LL);
		if (_73937_tokens.len() == 0LL) {
			(*this)._method_push_err(_74217_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1aaeea1c4_ScopeTree>();
		}
	}
	jule::Int _76817_i = 0LL;
	jule::Slice<_1ab0277b7_Token> _76917_scope_tokens = _1ac1ba56e_range(_76817_i,jule::Str("{", 1),jule::Str("}", 1),_73937_tokens);
	if (_76917_scope_tokens == nullptr) {
		(*this)._method_push_err(_74217_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1aaeea1c4_ScopeTree>();
	} else if (_76817_i < _73937_tokens.len()) {
		(*this)._method_push_err(_73937_tokens[static_cast<jule::Int>(_76817_i)],jule::Str("invalid syntax", 14));
	}
	jule::Ref<_1aaeea1c4_ScopeTree> _77617_scope = (*this)._method_build_scope(_76917_scope_tokens);
	_77617_scope->_field_unsafety=_74017_is_unsafe;
	_77617_scope->_field_deferred=_74117_is_deferred;
	return _77617_scope;
}



inline jule::Ref<_1aaeea1c4_LabelSt> _1ab05bd18_ScopeParser::_method_build_label_st(jule::Slice<_1ab0277b7_Token> _78237_tokens) {
	jule::Ref<_1aaeea1c4_LabelSt> _78317_lbl = jule::new_struct<_1aaeea1c4_LabelSt>(new( std::nothrow ) _1aaeea1c4_LabelSt(_78237_tokens[0LL],_78237_tokens[0LL]._field_kind));
	if (_78237_tokens.len() > 2LL) {
		_78237_tokens=_78237_tokens.slice(2LL);
		(*this)._method_insert_as_next(_78237_tokens);
	}
	return _78317_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1ab05bd18_ScopeParser::_method_build_id_st(jule::Slice<_1ab0277b7_Token> _79734_tokens) {
	jule::Bool _79763_ok = jule::Bool();
	if (_79734_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_79763_ok);
	}
	_1ab0277b7_Token _80217_token = _79734_tokens[1LL];
	{
		auto _match_expr{ _80217_token._field_id };
		if (!((11LLU) == _match_expr)) { goto _case_end_4441126896; }
		_case_begin_4441126896:;
		{
			_79763_ok = true;
			return std::make_tuple(jule::Any((*this)._method_build_label_st(_79734_tokens)),_79763_ok);
		}
		goto _match_end_4441123856;
		_case_end_4441126896:;
		_match_end_4441123856:;
	}
	return std::make_tuple(jule::Any(),_79763_ok);
}



inline jule::Ref<_1ab09d6b7_AssignInfo> _1ab05bd18_ScopeParser::_method_build_assign_info(jule::Slice<_1ab0277b7_Token> _81140_tokens) {
	jule::Ref<_1ab09d6b7_AssignInfo> _81217_info = jule::new_struct<_1ab09d6b7_AssignInfo>(new( std::nothrow ) _1ab09d6b7_AssignInfo(jule::Slice<_1ab0277b7_Token>(),jule::Slice<_1ab0277b7_Token>(),_1ab0277b7_Token(),true));
	jule::Int _81517_brace_n = 0LL;
	{
		auto _range_expr = _81140_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab05bd18_i = 0;
			_1ab0277b7_Token _1ab05bd18_token = *_range_begin;
			_iter_begin_4441135168:;
			{
				if (_1ab05bd18_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1ab05bd18_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4441139632; }
						_case_begin_4441139632:;
						{
							(_81517_brace_n)++;
						}
						goto _match_end_4441138048;
						_case_end_4441139632:;
						_case_begin_4441138832:;
						{
							(_81517_brace_n)--;
						}
						goto _match_end_4441138048;
						_case_end_4441138832:;
						_match_end_4441138048:;
					}
				}
				{
					if (!((_81517_brace_n > 0LL))) { goto _case_end_4441140880; }
					_case_begin_4441140880:;
					{
						goto _iter_next_4441135168;
					}
					goto _match_end_4441140720;
					_case_end_4441140880:;
					if (!((_1ab05bd18_token._field_id != 7LLU))) { goto _case_end_4441140992; }
					_case_begin_4441140992:;
					{
						goto _iter_next_4441135168;
					}
					goto _match_end_4441140720;
					_case_end_4441140992:;
					if (!(((!(_1ab0277b7_is_assign_op(_1ab05bd18_token._field_kind)))))) { goto _case_end_4441137440; }
					_case_begin_4441137440:;
					{
						goto _iter_next_4441135168;
					}
					goto _match_end_4441140720;
					_case_end_4441137440:;
					_match_end_4441140720:;
				}
				_81217_info->_field_l=_81140_tokens.slice(0LL,static_cast<jule::Int>(_1ab05bd18_i));
				if (_81217_info->_field_l.len() == 0LL) {
					_81217_info->_field_ok=false;
				}
				_81217_info->_field_setter=_1ab05bd18_token;
				if ((_1ab05bd18_i + 1LL) >= _81140_tokens.len()) {
					_81217_info->_field_r=nullptr;
					_81217_info->_field_ok=_1ab0277b7_is_postfix_op(_81217_info->_field_setter._field_kind);
					goto _iter_end_4441135168;
				}
				_81217_info->_field_r=_81140_tokens.slice(static_cast<jule::Int>(_1ab05bd18_i + 1LL));
				if (_1ab0277b7_is_postfix_op(_81217_info->_field_setter._field_kind)) {
					if (_81217_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_81217_info->_field_r[0LL],jule::Str("invalid syntax", 14));
						_81217_info->_field_r=nullptr;
					}
				}
				goto _iter_end_4441135168;
			}
			_iter_next_4441135168:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab05bd18_i; _1ab05bd18_token = *_range_begin; goto _iter_begin_4441135168; }
			_iter_end_4441135168:;
		}
	}
	return _81217_info;
}



inline jule::Ref<_1aaeea1c4_AssignLeft> _1ab05bd18_ScopeParser::_method_build_assign_l(jule::Slice<_1ab0277b7_Token> _85837_tokens) {
	jule::Ref<_1aaeea1c4_AssignLeft> _85917_l = jule::new_struct<_1aaeea1c4_AssignLeft>(new( std::nothrow ) _1aaeea1c4_AssignLeft(_85837_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ref<_1aaeea1c4_Expr>()));
	if (_85837_tokens[0LL]._field_id == 2LLU) {
		_85917_l->_field_ident=_85917_l->_field_token._field_kind;
	}
	_85917_l->_field_expr=(*this)._field_p->_method_build_expr(_85837_tokens);
	return _85917_l;
}



inline jule::Slice<jule::Ref<_1aaeea1c4_AssignLeft>> _1ab05bd18_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_1ab0277b7_Token>> _87138_parts) {
	jule::Slice<jule::Ref<_1aaeea1c4_AssignLeft>> _87217_lefts = nullptr;
	{
		auto _range_expr = _87138_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1ab0277b7_Token> _1ab05bd18_part = *_range_begin;
			_iter_begin_4441166640:;
			{
				jule::Ref<_1aaeea1c4_AssignLeft> _87421_l = (*this)._method_build_assign_l(_1ab05bd18_part);
				_87217_lefts=jule::append(_87217_lefts,jule::Slice<jule::Ref<_1aaeea1c4_AssignLeft>>({_87421_l}));
			}
			_iter_next_4441166640:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab05bd18_part = *_range_begin; goto _iter_begin_4441166640; }
			_iter_end_4441166640:;
		}
	}
	return _87217_lefts;
}



inline std::tuple<jule::Ref<_1aaeea1c4_AssignSt>,jule::Bool> _1ab05bd18_ScopeParser::_method_build_plain_assign(jule::Slice<_1ab0277b7_Token> _88141_tokens) {
	jule::Ref<_1ab09d6b7_AssignInfo> _88217_info = (*this)._method_build_assign_info(_88141_tokens);
	if ((!(_88217_info->_field_ok))) {
		return std::make_tuple(jule::new_ref<_1aaeea1c4_AssignSt>(),false);
	}
	jule::Ref<_1aaeea1c4_AssignSt> _88717_assign = jule::new_struct<_1aaeea1c4_AssignSt>(new( std::nothrow ) _1aaeea1c4_AssignSt(jule::Bool(),_88217_info->_field_setter,jule::Slice<jule::Ref<_1aaeea1c4_AssignLeft>>(),jule::Ref<_1aaeea1c4_Expr>()));
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _89118_parts;
	jule::Slice<_1d068165a_Log> _89125_errs;
	std::tie(_89118_parts,_89125_errs) = _1ac1ba56e_parts(_88217_info->_field_l,8LLU,true);
	if (_89125_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_89125_errs);
		return std::make_tuple(jule::new_ref<_1aaeea1c4_AssignSt>(),false);
	}
	_88717_assign->_field_left=(*this)._method_build_assign_ls(_89118_parts);
	if (_88217_info->_field_r != nullptr) {
		_88717_assign->_field_right=(*this)._field_p->_method_build_expr(_88217_info->_field_r);
	}
	return std::make_tuple(_88717_assign,true);
}



inline std::tuple<jule::Ref<_1aaeea1c4_AssignSt>,jule::Bool> _1ab05bd18_ScopeParser::_method_build_decl_assign(jule::Slice<_1ab0277b7_Token> _90540_tokens) {
	if (_90540_tokens.len() < 1LL) {
		return std::make_tuple(jule::new_ref<_1aaeea1c4_AssignSt>(),false);
	}
	_90540_tokens=_90540_tokens.slice(1LL);
	_1ab0277b7_Token _91113_token = _90540_tokens[0LL];
	if ((_91113_token._field_id != 3LLU) || (_91113_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(jule::new_ref<_1aaeea1c4_AssignSt>(),false);
	}
	jule::Ref<_1aaeea1c4_AssignSt> _91617_assign = jule::new_struct<_1aaeea1c4_AssignSt>(new( std::nothrow ) _1aaeea1c4_AssignSt(true,_1ab0277b7_Token(),jule::Slice<jule::Ref<_1aaeea1c4_AssignLeft>>(),jule::Ref<_1aaeea1c4_Expr>()));
	jule::Int _92017_i = 0LL;
	jule::Slice<_1ab0277b7_Token> _92117_rang = _1ac1ba56e_range(_92017_i,jule::Str("(", 1),jule::Str(")", 1),_90540_tokens);
	if (_92117_rang == nullptr) {
		(*this)._method_push_err(_91113_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(jule::new_ref<_1aaeea1c4_AssignSt>(),false);
	} else if ((_92017_i + 1LL) < _90540_tokens.len()) {
		_91617_assign->_field_setter=_90540_tokens[static_cast<jule::Int>(_92017_i)];
		(_92017_i)++;
		_91617_assign->_field_right=(*this)._field_p->_method_build_expr(_90540_tokens.slice(static_cast<jule::Int>(_92017_i)));
	}
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _93218_parts;
	jule::Slice<_1d068165a_Log> _93225_errs;
	std::tie(_93218_parts,_93225_errs) = _1ac1ba56e_parts(_92117_rang,8LLU,true);
	if (_93225_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_93225_errs);
		return std::make_tuple(jule::new_ref<_1aaeea1c4_AssignSt>(),false);
	}
	{
		auto _range_expr = _93218_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1ab0277b7_Token> _1ab05bd18_part = *_range_begin;
			_iter_begin_4441208352:;
			{
				jule::Bool _93921_is_mut = false;
				jule::Bool _94021_is_ref = false;
				_1ab0277b7_Token _94217_token = _1ab05bd18_part[0LL];
				if (_94217_token._field_id == 36LLU) {
					_93921_is_mut=true;
					_1ab05bd18_part=_1ab05bd18_part.slice(1LL);
					if (_1ab05bd18_part.len() == 0LL) {
						(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4441208352;
					}
				}
				if ((_1ab05bd18_part[0LL]._field_id == 7LLU) && (_1ab05bd18_part[0LL]._field_kind == jule::Str("&", 1))) {
					_94021_is_ref=true;
					_1ab05bd18_part=_1ab05bd18_part.slice(1LL);
					if (_1ab05bd18_part.len() == 0LL) {
						(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4441208352;
					}
				}
				if (((_1ab05bd18_part[0LL]._field_id != 2LLU) && (_1ab05bd18_part[0LL]._field_id != 3LLU)) && (_1ab05bd18_part[0LL]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
					goto _iter_next_4441208352;
				}
				jule::Ref<_1aaeea1c4_AssignLeft> _96821_l = (*this)._method_build_assign_l(_1ab05bd18_part);
				_96821_l->_field_mutable=_93921_is_mut;
				_96821_l->_field_reference=_94021_is_ref;
				_91617_assign->_field_left=jule::append(_91617_assign->_field_left,jule::Slice<jule::Ref<_1aaeea1c4_AssignLeft>>({_96821_l}));
			}
			_iter_next_4441208352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab05bd18_part = *_range_begin; goto _iter_begin_4441208352; }
			_iter_end_4441208352:;
		}
	}
	return std::make_tuple(_91617_assign,true);
}



inline std::tuple<jule::Ref<_1aaeea1c4_AssignSt>,jule::Bool> _1ab05bd18_ScopeParser::_method_build_assign_st(jule::Slice<_1ab0277b7_Token> _97738_tokens) {
	jule::Ref<_1aaeea1c4_AssignSt> _97757_st = jule::Ref<_1aaeea1c4_AssignSt>();
	jule::Bool _97772_ok = jule::Bool();
	if ((!(_1ab09d6b7_check_assign_tokens(_97738_tokens)))) {
		_97757_st = jule::new_ref<_1aaeea1c4_AssignSt>();
		_97772_ok = false;
		return std::make_tuple(_97757_st,_97772_ok);
	}
	{
		auto _match_expr{ _97738_tokens[0LL]._field_id };
		if (!((34LLU) == _match_expr)) { goto _case_end_4441240800; }
		_case_begin_4441240800:;
		{
			std::tie(_97757_st,_97772_ok) = (*this)._method_build_decl_assign(_97738_tokens);
		}
		goto _match_end_4441237088;
		_case_end_4441240800:;
		_case_begin_4441236480:;
		{
			std::tie(_97757_st,_97772_ok) = (*this)._method_build_plain_assign(_97738_tokens);
		}
		goto _match_end_4441237088;
		_case_end_4441236480:;
		_match_end_4441237088:;
	}
	return std::make_tuple(_97757_st,_97772_ok);
}



inline jule::Any _1ab05bd18_ScopeParser::_method_build_st(jule::Ref<_1ab05bd18_Stmt> _99031_st) {
	_1ab0277b7_Token _99117_token = _99031_st->_field_tokens[0LL];
	if (_99117_token._field_id == 2LLU) {
		jule::Any _99322_s;
		jule::Bool _99325_ok;
		std::tie(_99322_s,_99325_ok) = (*this)._method_build_id_st(_99031_st->_field_tokens);
		if (_99325_ok) {
			return _99322_s;
		}
	}
	jule::Ref<_1aaeea1c4_AssignSt> _99918_s;
	jule::Bool _99921_ok;
	std::tie(_99918_s,_99921_ok) = (*this)._method_build_assign_st(_99031_st->_field_tokens);
	if (_99921_ok) {
		return jule::Any(_99918_s);
	}
	{
		auto _match_expr{ _99117_token._field_id };
		if (!((38LLU) == _match_expr || (9LLU) == _match_expr || (34LLU) == _match_expr || (36LLU) == _match_expr)) { goto _case_end_4441253376; }
		_case_begin_4441253376:;
		{
			return (*this)._method_build_var_st(_99031_st->_field_tokens);
		}
		goto _match_end_4441251696;
		_case_end_4441253376:;
		if (!((4LLU) == _match_expr)) { goto _case_end_4441252080; }
		_case_begin_4441252080:;
		{
			return (*this)._method_build_ret_st(_99031_st->_field_tokens);
		}
		goto _match_end_4441251696;
		_case_end_4441252080:;
		if (!((12LLU) == _match_expr)) { goto _case_end_4441252192; }
		_case_begin_4441252192:;
		{
			return (*this)._method_buid_iter_st(_99031_st);
		}
		goto _match_end_4441251696;
		_case_end_4441252192:;
		if (!((13LLU) == _match_expr)) { goto _case_end_4441252304; }
		_case_begin_4441252304:;
		{
			return (*this)._method_build_break_st(_99031_st->_field_tokens);
		}
		goto _match_end_4441251696;
		_case_end_4441252304:;
		if (!((14LLU) == _match_expr)) { goto _case_end_4441252416; }
		_case_begin_4441252416:;
		{
			return (*this)._method_build_cont_st(_99031_st->_field_tokens);
		}
		goto _match_end_4441251696;
		_case_end_4441252416:;
		if (!((16LLU) == _match_expr)) { goto _case_end_4441252528; }
		_case_begin_4441252528:;
		{
			return (*this)._method_build_if_else_chain(_99031_st->_field_tokens);
		}
		goto _match_end_4441251696;
		_case_end_4441252528:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4441252640; }
		_case_begin_4441252640:;
		{
			return (*this)._method_build_comment_st(_99117_token);
		}
		goto _match_end_4441251696;
		_case_end_4441252640:;
		if (!((26LLU) == _match_expr)) { goto _case_end_4441252752; }
		_case_begin_4441252752:;
		{
			return (*this)._method_build_co_call_st(_99031_st->_field_tokens);
		}
		goto _match_end_4441251696;
		_case_end_4441252752:;
		if (!((22LLU) == _match_expr)) { goto _case_end_4441252864; }
		_case_begin_4441252864:;
		{
			return (*this)._method_build_goto_st(_99031_st->_field_tokens);
		}
		goto _match_end_4441251696;
		_case_end_4441252864:;
		if (!((32LLU) == _match_expr)) { goto _case_end_4441255440; }
		_case_begin_4441255440:;
		{
			return (*this)._method_build_fall_st(_99031_st->_field_tokens);
		}
		goto _match_end_4441251696;
		_case_end_4441255440:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4441255552; }
		_case_begin_4441255552:;
		{
			return (*this)._method_build_type_alias_st(_99031_st->_field_tokens);
		}
		goto _match_end_4441251696;
		_case_end_4441255552:;
		if (!((27LLU) == _match_expr)) { goto _case_end_4441255664; }
		_case_begin_4441255664:;
		{
			return jule::Any((*this)._method_build_match_case(_99031_st->_field_tokens));
		}
		goto _match_end_4441251696;
		_case_end_4441255664:;
		if (!((35LLU) == _match_expr || (37LLU) == _match_expr)) { goto _case_end_4441255776; }
		_case_begin_4441255776:;
		{
			return jule::Any((*this)._method_build_scope_st(_99031_st->_field_tokens));
		}
		goto _match_end_4441251696;
		_case_end_4441255776:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4441255888; }
		_case_begin_4441255888:;
		{
			if (_99117_token._field_kind == jule::Str("{", 1)) {
				return jule::Any((*this)._method_build_scope_st(_99031_st->_field_tokens));
			}
		}
		goto _match_end_4441251696;
		_case_end_4441255888:;
		_case_begin_4441249360:;
		{
			if (_1ab060d50_is_fn_call(_99031_st->_field_tokens) != nullptr) {
				return (*this)._method_build_call_st(_99031_st->_field_tokens);
			}
		}
		goto _match_end_4441251696;
		_case_end_4441249360:;
		_match_end_4441251696:;
	}
	(*this)._method_push_err(_99117_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _1ab05bd18_ScopeParser::_method_build(jule::Slice<_1ab0277b7_Token> _106628_tokens,jule::Ref<_1aaeea1c4_ScopeTree> _106649_s) {
	if ((!(jule::real(_106649_s)))) {
		return;
	}
	(*this)._field_stms=_1ab05bd18_split_stms(_106628_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_106649_s;
	_iter_begin_4441278512:;
	if (!((!((*this)._method_is_last_st())) && (!((*this)._method_finished())))) { goto _iter_end_4441278512; }
	{
		jule::Ref<_1ab05bd18_Stmt> _107521_st = (*this)._method_next();
		jule::Any _107621_data = (*this)._method_build_st(_107521_st);
		if (_107621_data != nullptr) {
			(*this)._field_s->_field_stmts=jule::append((*this)._field_s->_field_stmts,jule::Slice<jule::Any>({_107621_data}));
		}
		if ((*this)._method_stopped()) {
			goto _iter_end_4441278512;
		}
	}
	_iter_next_4441278512:;
	goto _iter_begin_4441278512;
	_iter_end_4441278512:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab05bd18_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stms:" << _Src._field_stms << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab060d50_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1ab060d50_Precedencer::_method_set(jule::Int _15522_level,jule::Any _15534_expr) {
	{
		auto _range_expr = (*this)._field_pairs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab060d50_i = 0;
			jule::Slice<jule::Any> _1ab060d50_pair = *_range_begin;
			_iter_begin_4441287984:;
			{
				jule::Int _15717_pair_level = _1ab060d50_pair[0LL].operator jule::Int();
				if (_15522_level > _15717_pair_level) {
					jule::Slice<jule::Slice<jule::Any>> _15925_first = (*this)._field_pairs.slice(0LL,static_cast<jule::Int>(_1ab060d50_i));
					jule::Slice<jule::Slice<jule::Any>> _16025_buffer = jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15522_level),_15534_expr})});
					jule::Slice<jule::Slice<jule::Any>> _16125_appended = jule::append(_16025_buffer,(*this)._field_pairs.slice(static_cast<jule::Int>(_1ab060d50_i)));
					(*this)._field_pairs=jule::append(_15925_first,_16125_appended);
					return;
				}
			}
			_iter_next_4441287984:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab060d50_i; _1ab060d50_pair = *_range_begin; goto _iter_begin_4441287984; }
			_iter_end_4441287984:;
		}
	}
	(*this)._field_pairs=jule::append((*this)._field_pairs,jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15522_level),_15534_expr})}));
}



inline jule::Any _1ab060d50_Precedencer::_method_get_lower(void) {
	jule::I64 _17017_i = (*this)._field_pairs.len() - 1LL;
	_iter_begin_4441301504:;
	if (!(_17017_i >= 0LL)) { goto _iter_end_4441301504; }
	{
		jule::Any _17221_data = (*this)._field_pairs[static_cast<jule::Int>(_17017_i)][1LL];
		if (_17221_data != nullptr) {
			return _17221_data;
		}
	}
	_iter_next_4441301504:;
	(_17017_i)--;
	goto _iter_begin_4441301504;
	_iter_end_4441301504:;
	return jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab060d50_Precedencer &_Src) {
	_Stream << "Precedencer{";
	_Stream << "pairs:" << _Src._field_pairs;
	_Stream << "}";
	return _Stream;
}



inline void _1ab060d50_ExprBuilder::_method_push_err(_1ab0277b7_Token _28727_token,jule::Str _28741_fmt,jule::Slice<jule::Any> _28754_args) {
	(*this)._field_p->_method_push_err(_28727_token,_28741_fmt,_28754_args);
}



inline void _1ab060d50_ExprBuilder::_method_push_suggestion(jule::Str _29234_fmt,jule::Slice<jule::Any> _29247_args) {
	(*this)._field_p->_method_push_suggestion(_29234_fmt,_29247_args);
}



inline jule::Ref<_1aaeea1c4_TupleExpr> _1ab060d50_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_1ab0277b7_Token>> _29634_parts) {
	jule::Ref<_1aaeea1c4_TupleExpr> _29717_tuple = jule::new_struct<_1aaeea1c4_TupleExpr>(new( std::nothrow ) _1aaeea1c4_TupleExpr(jule::Slice<jule::Ref<_1aaeea1c4_Expr>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_29634_parts.len())))));
	{
		auto _range_expr = _29634_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab060d50_i = 0;
			jule::Slice<_1ab0277b7_Token> _1ab060d50_part = *_range_begin;
			_iter_begin_4441339520:;
			{
				_29717_tuple->_field_expr[static_cast<jule::Int>(_1ab060d50_i)]=(*this)._method_build_from_tokens(_1ab060d50_part);
			}
			_iter_next_4441339520:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab060d50_i; _1ab060d50_part = *_range_begin; goto _iter_begin_4441339520; }
			_iter_end_4441339520:;
		}
	}
	return _29717_tuple;
}



inline jule::Ref<_1aaeea1c4_LitExpr> _1ab060d50_ExprBuilder::_method_build_lit(_1ab0277b7_Token _30628_token) {
	return jule::new_struct<_1aaeea1c4_LitExpr>(new( std::nothrow ) _1aaeea1c4_LitExpr(_30628_token,_30628_token._field_kind));
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ab060d50_ExprBuilder::_method_build_primitive_type(_1ab0277b7_Token _31339_token) {
	return _1ac308844_build_prim_type(_31339_token);
}



inline jule::Any _1ab060d50_ExprBuilder::_method_build_single(_1ab0277b7_Token _31735_token) {
	{
		auto _match_expr{ _31735_token._field_id };
		if (!((6LLU) == _match_expr)) { goto _case_end_4441355184; }
		_case_begin_4441355184:;
		{
			return jule::Any((*this)._method_build_lit(_31735_token));
		}
		goto _match_end_4441351408;
		_case_end_4441355184:;
		if (!((2LLU) == _match_expr || (28LLU) == _match_expr)) { goto _case_end_4441352384; }
		_case_begin_4441352384:;
		{
			return jule::Any(_1ab060d50_build_ident_expr(_31735_token));
		}
		goto _match_end_4441351408;
		_case_end_4441352384:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4441352496; }
		_case_begin_4441352496:;
		{
			return jule::Any((*this)._method_build_primitive_type(_31735_token));
		}
		goto _match_end_4441351408;
		_case_end_4441352496:;
		_case_begin_4441352080:;
		{
			(*this)._method_push_err(_31735_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4441351408;
		_case_end_4441352080:;
		_match_end_4441351408:;
	}
}



inline jule::Ref<_1aaeea1c4_IdentExpr> _1ab060d50_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_1ab0277b7_Token> _33545_tokens) {
	if (_33545_tokens[0LL]._field_id != 31LLU) {
		return jule::new_ref<_1aaeea1c4_IdentExpr>();
	} else if (_33545_tokens[1LL]._field_id != 20LLU) {
		(*this)._method_push_err(_33545_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_IdentExpr>();
	}
	_1ab0277b7_Token _34317_token = _33545_tokens[2LL];
	if (_34317_token._field_id != 2LLU) {
		(*this)._method_push_err(_33545_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_IdentExpr>();
	}
	jule::Ref<_1aaeea1c4_IdentExpr> _34917_expr = _1ab060d50_build_ident_expr(_34317_token);
	_34917_expr->_field_cpp_linked=true;
	return _34917_expr;
}



inline jule::Ref<_1aaeea1c4_UnaryExpr> _1ab060d50_ExprBuilder::_method_build_unary(jule::Slice<_1ab0277b7_Token> _35434_tokens) {
	_1ab0277b7_Token _35517_op = _35434_tokens[0LL];
	if (_35434_tokens.len() == 1LL) {
		(*this)._method_push_err(_35517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_UnaryExpr>();
	} else if ((!(_1ab0277b7_is_unary_op(_35517_op._field_kind)))) {
		(*this)._method_push_err(_35517_op,jule::Str("invalid_operator_for_unary: @", 29),jule::Slice<jule::Any>({jule::Any(_35517_op._field_kind)}));
		return jule::new_ref<_1aaeea1c4_UnaryExpr>();
	}
	_35434_tokens=_35434_tokens.slice(1LL);
	return jule::new_struct<_1aaeea1c4_UnaryExpr>(new( std::nothrow ) _1aaeea1c4_UnaryExpr(_35517_op,(*this)._method_build(_35434_tokens)));
}



inline jule::Ref<_1aaeea1c4_SubIdentExpr> _1ab060d50_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_1ab0277b7_Token> _37542_tokens) {
	jule::I64 _37617_i = _37542_tokens.len() - 1LL;
	_1ab0277b7_Token _37717_ident_token = _37542_tokens[static_cast<jule::Int>(_37617_i)];
	(_37617_i)--;
	_37542_tokens=_37542_tokens.slice(0LL,static_cast<jule::Int>(_37617_i));
	if (_37542_tokens.len() == 0LL) {
		(*this)._method_push_err(_37717_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_SubIdentExpr>();
	}
	return jule::new_struct<_1aaeea1c4_SubIdentExpr>(new( std::nothrow ) _1aaeea1c4_SubIdentExpr(jule::Bool(),(*this)._method_build(_37542_tokens),_37717_ident_token));
}



inline jule::Ref<_1aaeea1c4_NsSelectionExpr> _1ab060d50_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_1ab0277b7_Token> _39041_tokens) {
	jule::Ref<_1aaeea1c4_NsSelectionExpr> _39117_ns = jule::new_struct<_1aaeea1c4_NsSelectionExpr>(new( std::nothrow ) _1aaeea1c4_NsSelectionExpr());
	{
		auto _range_expr = _39041_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab060d50_i = 0;
			_1ab0277b7_Token _1ab060d50_token = *_range_begin;
			_iter_begin_4441396416:;
			{
				if (jule::mod(_1ab060d50_i,2LL) == 0LL) {
					if (_1ab060d50_token._field_id != 2LLU) {
						(*this)._method_push_err(_1ab060d50_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					}
					_39117_ns->_field_ns=jule::append(_39117_ns->_field_ns,jule::Slice<_1ab0277b7_Token>({_1ab060d50_token}));
				} else if (_1ab060d50_token._field_id != 23LLU) {
					(*this)._method_push_err(_1ab060d50_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>({}));
				}
			}
			_iter_next_4441396416:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab060d50_i; _1ab060d50_token = *_range_begin; goto _iter_begin_4441396416; }
			_iter_end_4441396416:;
		}
	}
	_39117_ns->_field_ident=_39117_ns->_field_ns[static_cast<jule::Int>(_39117_ns->_field_ns.len() - 1LL)];
	_39117_ns->_field_ns=_39117_ns->_field_ns.slice(0LL,static_cast<jule::Int>(_39117_ns->_field_ns.len() - 1LL));
	return _39117_ns;
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ab060d50_ExprBuilder::_method_build_type(jule::Slice<_1ab0277b7_Token> _40933_tokens) {
	jule::Int _41017_i = 0LL;
	jule::Ref<_1aaeea1c4_TypeDecl> _41118_t;
	jule::Bool _41121_ok;
	std::tie(_41118_t,_41121_ok) = (*this)._field_p->_method_build_type(_40933_tokens,(&(_41017_i)),false);
	if ((!(_41121_ok))) {
		(*this)._method_push_err(_40933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	}
	if (_41017_i < _40933_tokens.len()) {
		(*this)._method_push_err(_40933_tokens[static_cast<jule::Int>(_41017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _41118_t;
}



inline jule::Any _1ab060d50_ExprBuilder::_method_build_sub_ident(jule::Slice<_1ab0277b7_Token> _42338_tokens) {
	jule::I64 _42413_i = _42338_tokens.len() - 2LL;
	_1ab0277b7_Token _42513_token = _42338_tokens[static_cast<jule::Int>(_42413_i)];
	{
		auto _match_expr{ _42513_token._field_id };
		if (!((20LLU) == _match_expr)) { goto _case_end_4441425872; }
		_case_begin_4441425872:;
		{
			return jule::Any((*this)._method_build_obj_sub_ident(_42338_tokens));
		}
		goto _match_end_4441423792;
		_case_end_4441425872:;
		if (!((23LLU) == _match_expr)) { goto _case_end_4441425984; }
		_case_begin_4441425984:;
		{
			return jule::Any((*this)._method_build_ns_sub_ident(_42338_tokens));
		}
		goto _match_end_4441423792;
		_case_end_4441425984:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4441426096; }
		_case_begin_4441426096:;
		{
			if (_42513_token._field_kind == jule::Str("]", 1)) {
				return jule::Any((*this)._method_build_type(_42338_tokens));
			}
		}
		goto _match_end_4441423792;
		_case_end_4441426096:;
		_match_end_4441423792:;
	}
	(*this)._method_push_err(_42513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_1aaeea1c4_VariadicExpr> _1ab060d50_ExprBuilder::_method_build_variadic(jule::Slice<_1ab0277b7_Token> _44437_tokens) {
	_1ab0277b7_Token _44517_token = _44437_tokens[static_cast<jule::Int>(_44437_tokens.len() - 1LL)];
	_44437_tokens=_44437_tokens.slice(0LL,static_cast<jule::Int>(_44437_tokens.len() - 1LL));
	return jule::new_struct<_1aaeea1c4_VariadicExpr>(new( std::nothrow ) _1aaeea1c4_VariadicExpr(_44517_token,(*this)._method_build(_44437_tokens)));
}



inline jule::Any _1ab060d50_ExprBuilder::_method_build_op_right(jule::Slice<_1ab0277b7_Token> _45337_tokens) {
	_1ab0277b7_Token _45417_token = _45337_tokens[static_cast<jule::Int>(_45337_tokens.len() - 1LL)];
	{
		auto _match_expr{ _45417_token._field_kind };
		if (!((jule::Str("...", 3)) == _match_expr)) { goto _case_end_4441444576; }
		_case_begin_4441444576:;
		{
			return jule::Any((*this)._method_build_variadic(_45337_tokens));
		}
		goto _match_end_4441442208;
		_case_end_4441444576:;
		_case_begin_4441443776:;
		{
			(*this)._method_push_err(_45417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4441442208;
		_case_end_4441443776:;
		_match_end_4441442208:;
	}
}



inline jule::Any _1ab060d50_ExprBuilder::_method_build_between_parentheses(jule::Slice<_1ab0277b7_Token> _46548_tokens) {
	_1ab0277b7_Token _46613_token = _46548_tokens[0LL];
	_46548_tokens=_46548_tokens.slice(1LL,static_cast<jule::Int>(_46548_tokens.len() - 1LL));
	if (_46548_tokens.len() == 0LL) {
		(*this)._method_push_err(_46613_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_46548_tokens);
}



inline jule::Ref<_1aaeea1c4_CastExpr> _1ab060d50_ExprBuilder::_method_try_build_cast(jule::Slice<_1ab0277b7_Token> _47637_tokens) {
	jule::Int _47717_range_n = 0LL;
	{
		auto _range_expr = _47637_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab060d50_i = 0;
			_1ab0277b7_Token _1ab060d50_token = *_range_begin;
			_iter_begin_4441459792:;
			{
				if (_1ab060d50_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1ab060d50_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4441464144; }
						_case_begin_4441464144:;
						{
							(_47717_range_n)++;
							goto _iter_next_4441459792;
						}
						goto _match_end_4441462560;
						_case_end_4441464144:;
						_case_begin_4441463344:;
						{
							(_47717_range_n)--;
						}
						goto _match_end_4441462560;
						_case_end_4441463344:;
						_match_end_4441462560:;
					}
				}
				if (_47717_range_n > 0LL) {
					goto _iter_next_4441459792;
				} else if ((_1ab060d50_i + 1LL) == _47637_tokens.len()) {
					return jule::new_ref<_1aaeea1c4_CastExpr>();
				}
				jule::Slice<_1ab0277b7_Token> _49821_type_tokens = _47637_tokens.slice(0LL,static_cast<jule::Int>(_1ab060d50_i + 1LL));
				jule::Slice<_1ab0277b7_Token> _49921_expr_tokens = _47637_tokens.slice(static_cast<jule::Int>(_1ab060d50_i + 1LL));
				if (_49921_expr_tokens.len() == 0LL) {
					return jule::new_ref<_1aaeea1c4_CastExpr>();
				}
				_1ab0277b7_Token _50617_token = _49921_expr_tokens[0LL];
				if ((_50617_token._field_id != 3LLU) || (_50617_token._field_kind != jule::Str("(", 1))) {
					return jule::new_ref<_1aaeea1c4_CastExpr>();
				}
				jule::Ref<_1aaeea1c4_CastExpr> _51121_cast = jule::new_struct<_1aaeea1c4_CastExpr>(new( std::nothrow ) _1aaeea1c4_CastExpr());
				if (_49921_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_49921_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>({}));
				}
				if (_49821_type_tokens.len() == 2LL) {
					(*this)._method_push_err(_49821_type_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>({}));
				} else {
					_49821_type_tokens=_49821_type_tokens.slice(1LL,static_cast<jule::Int>(_49821_type_tokens.len() - 1LL));
					jule::Int _52525_type_index = 0LL;
					jule::Ref<_1aaeea1c4_TypeDecl> _52626_t;
					jule::Bool _52629_ok;
					std::tie(_52626_t,_52629_ok) = (*this)._field_p->_method_build_type(_49821_type_tokens,(&(_52525_type_index)),true);
					if (_52629_ok && (_52525_type_index < _49821_type_tokens.len())) {
						(*this)._method_push_err(_49821_type_tokens[static_cast<jule::Int>(_52525_type_index)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					} else if ((!(_52629_ok))) {
						return _51121_cast;
					}
					_51121_cast->_field_kind=_52626_t;
					if (_49921_expr_tokens.len() > 2LL) {
						jule::Int _53629_i = 0LL;
						_1ac1ba56e_range(_53629_i,jule::Str("(", 1),jule::Str(")", 1),_49921_expr_tokens);
						if (_53629_i < _49921_expr_tokens.len()) {
							return jule::new_ref<_1aaeea1c4_CastExpr>();
						}
						_51121_cast->_field_expr=(*this)._method_build(_49921_expr_tokens.slice(0LL,static_cast<jule::Int>(_53629_i)));
					}
				}
				return _51121_cast;
			}
			_iter_next_4441459792:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab060d50_i; _1ab060d50_token = *_range_begin; goto _iter_begin_4441459792; }
			_iter_end_4441459792:;
		}
	}
	return jule::new_ref<_1aaeea1c4_CastExpr>();
}



inline void _1ab060d50_ExprBuilder::_method_push_arg(jule::Slice<jule::Ref<_1aaeea1c4_Expr>>& _55032_args,jule::Slice<_1ab0277b7_Token> _55051_tokens,_1ab0277b7_Token _55068_err_token) {
	if (_55051_tokens.len() == 0LL) {
		(*this)._method_push_err(_55068_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_55032_args=jule::append(_55032_args,jule::Slice<jule::Ref<_1aaeea1c4_Expr>>({(*this)._method_build_from_tokens(_55051_tokens)}));
}



inline jule::Slice<jule::Ref<_1aaeea1c4_Expr>> _1ab060d50_ExprBuilder::_method_build_args(jule::Slice<_1ab0277b7_Token> _55933_tokens) {
	if (_55933_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1aaeea1c4_Expr>> _56517_args = nullptr;
	jule::Int _56617_last = 0LL;
	jule::Int _56717_range_n = 0LL;
	_55933_tokens=_55933_tokens.slice(1LL,static_cast<jule::Int>(_55933_tokens.len() - 1LL));
	{
		auto _range_expr = _55933_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab060d50_i = 0;
			_1ab0277b7_Token _1ab060d50_token = *_range_begin;
			_iter_begin_4441512016:;
			{
				if (_1ab060d50_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1ab060d50_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4441517584; }
						_case_begin_4441517584:;
						{
							(_56717_range_n)++;
						}
						goto _match_end_4441516000;
						_case_end_4441517584:;
						_case_begin_4441516784:;
						{
							(_56717_range_n)--;
						}
						goto _match_end_4441516000;
						_case_end_4441516784:;
						_match_end_4441516000:;
					}
				}
				if ((_56717_range_n > 0LL) || (_1ab060d50_token._field_id != 8LLU)) {
					goto _iter_next_4441512016;
				}
				(*this)._method_push_arg(_56517_args,_55933_tokens.slice(static_cast<jule::Int>(_56617_last),static_cast<jule::Int>(_1ab060d50_i)),_1ab060d50_token);
				_56617_last=static_cast<jule::Int>(_1ab060d50_i + 1LL);
			}
			_iter_next_4441512016:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab060d50_i; _1ab060d50_token = *_range_begin; goto _iter_begin_4441512016; }
			_iter_end_4441512016:;
		}
	}
	if (_56617_last < _55933_tokens.len()) {
		if (_56617_last == 0LL) {
			if (_55933_tokens.len() > 0LL) {
				(*this)._method_push_arg(_56517_args,_55933_tokens.slice(static_cast<jule::Int>(_56617_last)),_55933_tokens[static_cast<jule::Int>(_56617_last)]);
			}
		} else {
			(*this)._method_push_arg(_56517_args,_55933_tokens.slice(static_cast<jule::Int>(_56617_last)),_55933_tokens[static_cast<jule::Int>(_56617_last - 1LL)]);
		}
	}
	return _56517_args;
}



inline jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>> _1ab060d50_ExprBuilder::_method_build_call_generics(jule::Slice<_1ab0277b7_Token> _60242_tokens) {
	if (_60242_tokens.len() == 0LL) {
		return nullptr;
	}
	_60242_tokens=_60242_tokens.slice(1LL,static_cast<jule::Int>(_60242_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _60818_parts;
	jule::Slice<_1d068165a_Log> _60825_errs;
	std::tie(_60818_parts,_60825_errs) = _1ac1ba56e_parts(_60242_tokens,8LLU,true);
	jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>> _60917_generics = jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_60818_parts.len())));
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_60825_errs);
	{
		auto _range_expr = _60818_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab060d50_i = 0;
			jule::Slice<_1ab0277b7_Token> _1ab060d50_part = *_range_begin;
			_iter_begin_4441536416:;
			{
				if (_1ab060d50_part.len() == 0LL) {
					goto _iter_next_4441536416;
				}
				jule::Int _61521_j = 0LL;
				jule::Ref<_1aaeea1c4_TypeDecl> _61622_generic;
				std::tie(_61622_generic,std::ignore) = (*this)._field_p->_method_build_type(_1ab060d50_part,(&(_61521_j)),true);
				if (_61521_j < _1ab060d50_part.len()) {
					(*this)._method_push_err(_1ab060d50_part[static_cast<jule::Int>(_61521_j)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_60917_generics[static_cast<jule::Int>(_1ab060d50_i)]=_61622_generic;
			}
			_iter_next_4441536416:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab060d50_i; _1ab060d50_part = *_range_begin; goto _iter_begin_4441536416; }
			_iter_end_4441536416:;
		}
	}
	return _60917_generics;
}



inline jule::Ref<_1aaeea1c4_FnCallExpr> _1ab060d50_ExprBuilder::_method_build_fn_call(_1ab0277b7_Token _62636_token,jule::Ref<_1ab060d50_CallData> _62654_data) {
	return jule::new_struct<_1aaeea1c4_FnCallExpr>(new( std::nothrow ) _1aaeea1c4_FnCallExpr(_62636_token,(*this)._method_build_from_tokens(_62654_data->_field_expr_tokens),(*this)._method_build_call_generics(_62654_data->_field_generics_tokens),(*this)._method_build_args(_62654_data->_field_args_tokens),jule::Bool()));
}



inline jule::Any _1ab060d50_ExprBuilder::_method_build_parentheses_range(jule::Slice<_1ab0277b7_Token> _63546_tokens) {
	_1ab0277b7_Token _63617_token = _63546_tokens[0LL];
	{
		auto _match_expr{ _63617_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4441560816; }
		_case_begin_4441560816:;
		{
			{
				auto _match_expr{ _63617_token._field_kind };
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4441562544; }
				_case_begin_4441562544:;
				{
					jule::Ref<_1aaeea1c4_CastExpr> _64125_expr = (*this)._method_try_build_cast(_63546_tokens);
					if (jule::real(_64125_expr)) {
						return jule::Any(_64125_expr);
					}
				}
				goto _match_end_4441561392;
				_case_end_4441562544:;
				_match_end_4441561392:;
			}
		}
		goto _match_end_4441559952;
		_case_end_4441560816:;
		_match_end_4441559952:;
	}
	jule::Ref<_1ab060d50_CallData> _64817_data = _1ab060d50_get_call_data(_63546_tokens);
	if (_64817_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_64817_data->_field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_63617_token,_64817_data));
}



inline jule::Ref<_1aaeea1c4_UnsafeExpr> _1ab060d50_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_1ab0277b7_Token> _65940_tokens) {
	_1ab0277b7_Token _66017_token = _65940_tokens[0LL];
	_65940_tokens=_65940_tokens.slice(1LL);
	jule::Int _66217_i = 0LL;
	jule::Slice<_1ab0277b7_Token> _66317_range_tokens = _1ac1ba56e_range(_66217_i,jule::Str("{", 1),jule::Str("}", 1),_65940_tokens);
	if (_66317_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_65940_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_UnsafeExpr>();
	}
	return jule::new_struct<_1aaeea1c4_UnsafeExpr>(new( std::nothrow ) _1aaeea1c4_UnsafeExpr(_66017_token,(*this)._method_build_from_tokens(_66317_range_tokens)->_field_kind));
}



inline jule::Ref<_1aaeea1c4_FnDecl> _1ab060d50_ExprBuilder::_method_build_anon_fn(jule::Slice<_1ab0277b7_Token> _67436_tokens) {
	jule::Ref<_1aaeea1c4_FnDecl> _67517_f = (*this)._field_p->_method_build_fn(_67436_tokens,false,false);
	if ((!(_67517_f->_method_is_anon()))) {
		(*this)._method_push_err(_67517_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>({}));
	}
	return _67517_f;
}



inline jule::Any _1ab060d50_ExprBuilder::_method_build_unsafe(jule::Slice<_1ab0277b7_Token> _68335_tokens) {
	{
		auto _match_expr{ _68335_tokens[1LL]._field_id };
		if (!((33LLU) == _match_expr)) { goto _case_end_4441592736; }
		_case_begin_4441592736:;
		{
			return jule::Any((*this)._method_build_anon_fn(_68335_tokens));
		}
		goto _match_end_4441590512;
		_case_end_4441592736:;
		_case_begin_4441591472:;
		{
			return jule::Any((*this)._method_build_unsafe_expr(_68335_tokens));
		}
		goto _match_end_4441590512;
		_case_end_4441591472:;
		_match_end_4441590512:;
	}
}



inline void _1ab060d50_ExprBuilder::_method_push_range_lit_part(jule::Slice<_1ab0277b7_Token> _69442_part,_1ab0277b7_Token _6959_error_token,jule::Slice<jule::Slice<_1ab0277b7_Token>>& _69534_parts) {
	if (_69442_part.len() == 0LL) {
		(*this)._method_push_err(_6959_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_69534_parts=jule::append(_69534_parts,jule::Slice<jule::Slice<_1ab0277b7_Token>>({_69442_part}));
}



inline jule::Slice<jule::Slice<_1ab0277b7_Token>> _1ab060d50_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_1ab0277b7_Token> _70553_tokens) {
	if (_70553_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _71117_parts = nullptr;
	jule::Int _71317_last = 0LL;
	jule::Int _71417_range_n = 0LL;
	_70553_tokens=_70553_tokens.slice(1LL,static_cast<jule::Int>(_70553_tokens.len() - 1LL));
	{
		auto _range_expr = _70553_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab060d50_i = 0;
			_1ab0277b7_Token _1ab060d50_token = *_range_begin;
			_iter_begin_4441609824:;
			{
				if (_1ab060d50_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1ab060d50_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4441615392; }
						_case_begin_4441615392:;
						{
							(_71417_range_n)++;
						}
						goto _match_end_4441613808;
						_case_end_4441615392:;
						_case_begin_4441614592:;
						{
							(_71417_range_n)--;
						}
						goto _match_end_4441613808;
						_case_end_4441614592:;
						_match_end_4441613808:;
					}
				}
				if ((_71417_range_n > 0LL) || (_1ab060d50_token._field_id != 8LLU)) {
					goto _iter_next_4441609824;
				}
				(*this)._method_push_range_lit_part(_70553_tokens.slice(static_cast<jule::Int>(_71317_last),static_cast<jule::Int>(_1ab060d50_i)),_1ab060d50_token,_71117_parts);
				_71317_last=static_cast<jule::Int>(_1ab060d50_i + 1LL);
			}
			_iter_next_4441609824:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab060d50_i; _1ab060d50_token = *_range_begin; goto _iter_begin_4441609824; }
			_iter_end_4441609824:;
		}
	}
	if (_71317_last < _70553_tokens.len()) {
		if (_71317_last == 0LL) {
			if (_70553_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_70553_tokens.slice(static_cast<jule::Int>(_71317_last)),_70553_tokens[static_cast<jule::Int>(_71317_last)],_71117_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_70553_tokens.slice(static_cast<jule::Int>(_71317_last)),_70553_tokens[static_cast<jule::Int>(_71317_last - 1LL)],_71117_parts);
		}
	}
	return _71117_parts;
}



inline jule::Ref<_1aaeea1c4_FieldExprPair> _1ab060d50_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_1ab0277b7_Token> _74844_tokens) {
	jule::Ref<_1aaeea1c4_FieldExprPair> _74917_pair = jule::new_struct<_1aaeea1c4_FieldExprPair>(new( std::nothrow ) _1aaeea1c4_FieldExprPair(_74844_tokens[0LL],jule::Any()));
	_74844_tokens=_74844_tokens.slice(2LL);
	_74917_pair->_field_expr=(*this)._method_build_from_tokens(_74844_tokens)->_field_kind;
	return _74917_pair;
}



inline jule::Any _1ab060d50_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_1ab0277b7_Token> _75744_tokens) {
	_1ab0277b7_Token _75813_token = _75744_tokens[0LL];
	if (_75813_token._field_id == 2LLU) {
		if (_75744_tokens.len() > 1LL) {
			_1ab0277b7_Token _76121_token = _75744_tokens[1LL];
			if (_76121_token._field_id == 11LLU) {
				return jule::Any((*this)._method_build_field_expr_pair(_75744_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_75744_tokens));
}



inline jule::Slice<jule::Any> _1ab060d50_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_1ab0277b7_Token> _77045_tokens) {
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _77117_parts = (*this)._method_get_brace_range_lit_expr_parts(_77045_tokens);
	if (_77117_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _77617_pairs = jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_77117_parts.len())));
	{
		auto _range_expr = _77117_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab060d50_i = 0;
			jule::Slice<_1ab0277b7_Token> _1ab060d50_part = *_range_begin;
			_iter_begin_4441648736:;
			{
				_77617_pairs[static_cast<jule::Int>(_1ab060d50_i)]=(*this)._method_build_struct_lit_expr(_1ab060d50_part);
			}
			_iter_next_4441648736:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab060d50_i; _1ab060d50_part = *_range_begin; goto _iter_begin_4441648736; }
			_iter_end_4441648736:;
		}
	}
	return _77617_pairs;
}



inline jule::Ref<_1aaeea1c4_StructLit> _1ab060d50_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_1ab0277b7_Token> _78349_tokens) {
	jule::Int _78417_i = 0LL;
	jule::Ref<_1aaeea1c4_TypeDecl> _78518_t;
	jule::Bool _78521_ok;
	std::tie(_78518_t,_78521_ok) = (*this)._field_p->_method_build_type(_78349_tokens,(&(_78417_i)),true);
	if ((!(_78521_ok))) {
		return jule::new_ref<_1aaeea1c4_StructLit>();
	} else if (_78417_i >= _78349_tokens.len()) {
		(*this)._method_push_err(_78349_tokens[static_cast<jule::Int>(_78417_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_StructLit>();
	}
	_78349_tokens=_78349_tokens.slice(static_cast<jule::Int>(_78417_i));
	_1ab0277b7_Token _79413_token = _78349_tokens[0LL];
	if ((_79413_token._field_id != 3LLU) || (_79413_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_79413_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_StructLit>();
	}
	return jule::new_struct<_1aaeea1c4_StructLit>(new( std::nothrow ) _1aaeea1c4_StructLit(_78518_t,(*this)._method_build_struct_lit_exprs(_78349_tokens)));
}



inline jule::Any _1ab060d50_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_1ab0277b7_Token> _80643_tokens) {
	jule::Slice<_1ab0277b7_Token> _80718_l;
	jule::Slice<_1ab0277b7_Token> _80725_r;
	std::tie(_80718_l,_80725_r) = _1ab060d50_split_colon(_80643_tokens);
	if (_80718_l != nullptr) {
		return jule::Any(jule::new_struct<_1aaeea1c4_KeyValPair>(new( std::nothrow ) _1aaeea1c4_KeyValPair((*this)._method_build_from_tokens(_80718_l)->_field_kind,(*this)._method_build_from_tokens(_80725_r)->_field_kind,_80643_tokens[static_cast<jule::Int>(_80718_l.len())])));
	}
	return jule::Any((*this)._method_build_from_tokens(_80643_tokens));
}



inline jule::Ref<_1aaeea1c4_BraceLit> _1ab060d50_ExprBuilder::_method_build_brace_lit(jule::Slice<_1ab0277b7_Token> _81938_tokens) {
	jule::Ref<_1aaeea1c4_BraceLit> _82017_lit = jule::new_struct<_1aaeea1c4_BraceLit>(new( std::nothrow ) _1aaeea1c4_BraceLit(_81938_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _82417_parts = (*this)._method_get_brace_range_lit_expr_parts(_81938_tokens);
	if (_82417_parts == nullptr) {
		return _82017_lit;
	}
	_82017_lit->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_82417_parts.len())));
	{
		auto _range_expr = _82417_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab060d50_i = 0;
			jule::Slice<_1ab0277b7_Token> _1ab060d50_part = *_range_begin;
			_iter_begin_4441683792:;
			{
				_82017_lit->_field_exprs[static_cast<jule::Int>(_1ab060d50_i)]=(*this)._method_build_brace_lit_part(_1ab060d50_part);
			}
			_iter_next_4441683792:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab060d50_i; _1ab060d50_part = *_range_begin; goto _iter_begin_4441683792; }
			_iter_end_4441683792:;
		}
	}
	return _82017_lit;
}



inline jule::Any _1ab060d50_ExprBuilder::_method_build_brace_range(jule::Slice<_1ab0277b7_Token> _83740_tokens) {
	jule::Slice<_1ab0277b7_Token> _83814_expr_tokens;
	jule::Int _83827_range_n;
	std::tie(_83814_expr_tokens,_83827_range_n) = _1ab060d50_get_range_expr_tokens(_83740_tokens);
	{
		if (!((_83814_expr_tokens.len() == 0LL))) { goto _case_end_4441691424; }
		_case_begin_4441691424:;
		{
			return jule::Any((*this)._method_build_brace_lit(_83740_tokens));
		}
		goto _match_end_4441691280;
		_case_end_4441691424:;
		if (!((_83827_range_n > 0LL))) { goto _case_end_4441691552; }
		_case_begin_4441691552:;
		{
			(*this)._method_push_err(_83740_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4441691280;
		_case_end_4441691552:;
		_match_end_4441691280:;
	}
	{
		auto _match_expr{ _83814_expr_tokens[0LL]._field_id };
		if (!((35LLU) == _match_expr)) { goto _case_end_4441699088; }
		_case_begin_4441699088:;
		{
			return (*this)._method_build_unsafe(_83740_tokens);
		}
		goto _match_end_4441695712;
		_case_end_4441699088:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4441698544; }
		_case_begin_4441698544:;
		{
			return jule::Any((*this)._method_build_anon_fn(_83740_tokens));
		}
		goto _match_end_4441695712;
		_case_end_4441698544:;
		if (!((2LLU) == _match_expr || (31LLU) == _match_expr)) { goto _case_end_4441698656; }
		_case_begin_4441698656:;
		{
			return jule::Any((*this)._method_build_typed_struct_literal(_83740_tokens));
		}
		goto _match_end_4441695712;
		_case_end_4441698656:;
		_case_begin_4441694464:;
		{
			(*this)._method_push_err(_83814_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4441695712;
		_case_end_4441694464:;
		_match_end_4441695712:;
	}
}



inline jule::Slice<jule::Slice<_1ab0277b7_Token>> _1ab060d50_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_1ab0277b7_Token> _86743_tokens) {
	_86743_tokens=_86743_tokens.slice(1LL,static_cast<jule::Int>(_86743_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _86918_parts;
	jule::Slice<_1d068165a_Log> _86925_errors;
	std::tie(_86918_parts,_86925_errors) = _1ac1ba56e_parts(_86743_tokens,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_86925_errors);
	return _86918_parts;
}



inline jule::Ref<_1aaeea1c4_SliceExpr> _1ab060d50_ExprBuilder::_method_build_slice(jule::Slice<_1ab0277b7_Token> _87434_tokens) {
	jule::Ref<_1aaeea1c4_SliceExpr> _87517_slc = jule::new_struct<_1aaeea1c4_SliceExpr>(new( std::nothrow ) _1aaeea1c4_SliceExpr(_87434_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _87917_parts = (*this)._method_get_enumerable_parts(_87434_tokens);
	if (_87917_parts.len() == 0LL) {
		return _87517_slc;
	}
	_87517_slc->_field_elems=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_87917_parts.len())));
	{
		auto _range_expr = _87917_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab060d50_i = 0;
			jule::Slice<_1ab0277b7_Token> _1ab060d50_p = *_range_begin;
			_iter_begin_4441714800:;
			{
				_87517_slc->_field_elems[static_cast<jule::Int>(_1ab060d50_i)]=(*this)._method_build_from_tokens(_1ab060d50_p)->_field_kind;
			}
			_iter_next_4441714800:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab060d50_i; _1ab060d50_p = *_range_begin; goto _iter_begin_4441714800; }
			_iter_end_4441714800:;
		}
	}
	return _87517_slc;
}



inline jule::Ref<_1aaeea1c4_IndexingExpr> _1ab060d50_ExprBuilder::_method_build_indexing(jule::Slice<_1ab0277b7_Token> _89237_expr_tokens,jule::Slice<_1ab0277b7_Token> _89313_tokens,_1ab0277b7_Token _89334_error_token) {
	_89313_tokens=_89313_tokens.slice(1LL,static_cast<jule::Int>(_89313_tokens.len() - 1LL));
	return jule::new_struct<_1aaeea1c4_IndexingExpr>(new( std::nothrow ) _1aaeea1c4_IndexingExpr(_89334_error_token,(*this)._method_build_from_tokens(_89237_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_89313_tokens)->_field_kind));
}



inline jule::Ref<_1aaeea1c4_SlicingExpr> _1ab060d50_ExprBuilder::_method_build_slicing(jule::Slice<_1ab0277b7_Token> _90236_expr_tokens,jule::Slice<_1ab0277b7_Token> _90262_slicing_tokens,jule::Int _9039_colon,_1ab0277b7_Token _90321_error_token) {
	jule::Ref<_1aaeea1c4_SlicingExpr> _90417_slc = jule::new_struct<_1aaeea1c4_SlicingExpr>(new( std::nothrow ) _1aaeea1c4_SlicingExpr(_90321_error_token,(*this)._method_build_from_tokens(_90236_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_1ab0277b7_Token> _90917_start_expr_tokens = _90262_slicing_tokens.slice(0LL,static_cast<jule::Int>(_9039_colon));
	if (_90917_start_expr_tokens.len() > 0LL) {
		_90417_slc->_field_start=(*this)._method_build_from_tokens(_90917_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_1ab0277b7_Token> _91417_to_expr_tokens = _90262_slicing_tokens.slice(static_cast<jule::Int>(_9039_colon + 1LL));
	if (_91417_to_expr_tokens.len() > 0LL) {
		_90417_slc->_field_to=(*this)._method_build_from_tokens(_91417_to_expr_tokens)->_field_kind;
	}
	return _90417_slc;
}



inline jule::Any _1ab060d50_ExprBuilder::_method_build_bracket_range(jule::Slice<_1ab0277b7_Token> _92242_tokens) {
	_1ab0277b7_Token _92317_error_token = _92242_tokens[0LL];
	jule::Slice<_1ab0277b7_Token> _92418_expr_tokens;
	jule::Int _92431_range_n;
	std::tie(_92418_expr_tokens,_92431_range_n) = _1ab060d50_get_range_expr_tokens(_92242_tokens);
	{
		if (!((_92418_expr_tokens.len() == 0LL))) { goto _case_end_4441748112; }
		_case_begin_4441748112:;
		{
			return jule::Any((*this)._method_build_slice(_92242_tokens));
		}
		goto _match_end_4441747968;
		_case_end_4441748112:;
		if (!(((_92418_expr_tokens.len() == 0LL) || (_92431_range_n > 0LL)))) { goto _case_end_4441748224; }
		_case_begin_4441748224:;
		{
			(*this)._method_push_err(_92317_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4441747968;
		_case_end_4441748224:;
		_match_end_4441747968:;
	}
	_92242_tokens=_92242_tokens.slice(static_cast<jule::Int>(_92418_expr_tokens.len()));
	jule::Int _94317_i = 0LL;
	jule::Slice<_1ab0277b7_Token> _94418_slicing_tokens;
	jule::Int _94434_colon;
	std::tie(_94418_slicing_tokens,_94434_colon) = _1ac308844_split_map_range(_92242_tokens,_94317_i);
	if (_94434_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_92418_expr_tokens,_94418_slicing_tokens,_94434_colon,_92317_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_92418_expr_tokens,_92242_tokens,_92317_error_token));
}



inline jule::Any _1ab060d50_ExprBuilder::_method_build_data(jule::Slice<_1ab0277b7_Token> _95133_tokens) {
	{
		auto _match_expr{ _95133_tokens.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4441761712; }
		_case_begin_4441761712:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4441760880;
		_case_end_4441761712:;
		if (!((1LL) == _match_expr)) { goto _case_end_4441761824; }
		_case_begin_4441761824:;
		{
			return (*this)._method_build_single(_95133_tokens[0LL]);
		}
		goto _match_end_4441760880;
		_case_end_4441761824:;
		if (!((3LL) == _match_expr)) { goto _case_end_4441761936; }
		_case_begin_4441761936:;
		{
			if (_95133_tokens[0LL]._field_id == 31LLU) {
				return jule::Any((*this)._method_build_cpp_linked_ident(_95133_tokens));
			}
		}
		goto _match_end_4441760880;
		_case_end_4441761936:;
		_match_end_4441760880:;
	}
	_1ab0277b7_Token _96517_token = _95133_tokens[0LL];
	{
		auto _match_expr{ _96517_token._field_id };
		if (!((7LLU) == _match_expr)) { goto _case_end_4441767712; }
		_case_begin_4441767712:;
		{
			if ((_95133_tokens.len() > 1LL) && (_96517_token._field_kind == jule::Str("*", 1))) {
				_96517_token=_95133_tokens[1LL];
				if ((_96517_token._field_id == 1LLU) || (_96517_token._field_id == 35LLU)) {
					return jule::Any((*this)._method_build_type(_95133_tokens));
				}
			}
			return jule::Any((*this)._method_build_unary(_95133_tokens));
		}
		goto _match_end_4441766608;
		_case_end_4441767712:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4441767824; }
		_case_begin_4441767824:;
		{
			if ((_96517_token._field_kind != jule::Str("[", 1)) || (_95133_tokens.len() < 3LL)) {
				goto _match_end_4441766608;
			}
			_1ab0277b7_Token _98317_next = _95133_tokens[1LL];
			if ((_98317_next._field_id != 3LLU) || (_98317_next._field_kind != jule::Str("]", 1))) {
				goto _match_end_4441766608;
			}
			return jule::Any((*this)._method_build_type(_95133_tokens));
		}
		goto _match_end_4441766608;
		_case_end_4441767824:;
		_match_end_4441766608:;
	}
	_96517_token=_95133_tokens[static_cast<jule::Int>(_95133_tokens.len() - 1LL)];
	{
		auto _match_expr{ _96517_token._field_id };
		if (!((2LLU) == _match_expr)) { goto _case_end_4441795920; }
		_case_begin_4441795920:;
		{
			return (*this)._method_build_sub_ident(_95133_tokens);
		}
		goto _match_end_4441795104;
		_case_end_4441795920:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4441796064; }
		_case_begin_4441796064:;
		{
			return jule::Any((*this)._method_build_type(_95133_tokens));
		}
		goto _match_end_4441795104;
		_case_end_4441796064:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4441796176; }
		_case_begin_4441796176:;
		{
			return (*this)._method_build_op_right(_95133_tokens);
		}
		goto _match_end_4441795104;
		_case_end_4441796176:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4441796288; }
		_case_begin_4441796288:;
		{
			{
				auto _match_expr{ _96517_token._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4441800896; }
				_case_begin_4441800896:;
				{
					return (*this)._method_build_parentheses_range(_95133_tokens);
				}
				goto _match_end_4441799760;
				_case_end_4441800896:;
				if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4441801008; }
				_case_begin_4441801008:;
				{
					return (*this)._method_build_brace_range(_95133_tokens);
				}
				goto _match_end_4441799760;
				_case_end_4441801008:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4441801232; }
				_case_begin_4441801232:;
				{
					return (*this)._method_build_bracket_range(_95133_tokens);
				}
				goto _match_end_4441799760;
				_case_end_4441801232:;
				_match_end_4441799760:;
			}
		}
		goto _match_end_4441795104;
		_case_end_4441796288:;
		_match_end_4441795104:;
	}
	(*this)._method_push_err(_96517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_1aaeea1c4_BinopExpr> _1ab060d50_ExprBuilder::_method_build_binop(jule::Slice<_1ab0277b7_Token> _102034_tokens,jule::Int _102051_i) {
	jule::Slice<_1ab0277b7_Token> _102117_left_tokens = _102034_tokens.slice(0LL,static_cast<jule::Int>(_102051_i));
	jule::Slice<_1ab0277b7_Token> _102217_right_tokens = _102034_tokens.slice(static_cast<jule::Int>(_102051_i + 1LL));
	if (_102117_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_102034_tokens[static_cast<jule::Int>(_102051_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_BinopExpr>();
	}
	if (_102217_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_102034_tokens[static_cast<jule::Int>(_102051_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_BinopExpr>();
	}
	return jule::new_struct<_1aaeea1c4_BinopExpr>(new( std::nothrow ) _1aaeea1c4_BinopExpr((*this)._method_build(_102117_left_tokens),(*this)._method_build(_102217_right_tokens),_102034_tokens[static_cast<jule::Int>(_102051_i)]));
}



inline jule::Any _1ab060d50_ExprBuilder::_method_build(jule::Slice<_1ab0277b7_Token> _104328_tokens) {
	jule::Int _104413_i = _1ab060d50_find_lowest_prec_op(_104328_tokens);
	if (_104413_i == -1LL) {
		return (*this)._method_build_data(_104328_tokens);
	}
	return jule::Any((*this)._method_build_binop(_104328_tokens,_104413_i));
}



inline jule::Any _1ab060d50_ExprBuilder::_method_build_kind(jule::Slice<_1ab0277b7_Token> _105133_tokens) {
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _105218_parts;
	jule::Slice<_1d068165a_Log> _105225_errors;
	std::tie(_105218_parts,_105225_errors) = _1ac1ba56e_parts(_105133_tokens,8LLU,true);
	if (_105225_errors != nullptr) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_105225_errors);
		return jule::Any(nullptr);
	} else if (_105218_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_105218_parts));
	}
	return (*this)._method_build(_105133_tokens);
}



inline jule::Ref<_1aaeea1c4_Expr> _1ab060d50_ExprBuilder::_method_build_from_tokens(jule::Slice<_1ab0277b7_Token> _106240_tokens) {
	_106240_tokens=_1ab060d50_eliminate_comments(_106240_tokens);
	if (_106240_tokens.len() == 0LL) {
		return jule::new_ref<_1aaeea1c4_Expr>();
	}
	return jule::new_struct<_1aaeea1c4_Expr>(new( std::nothrow ) _1aaeea1c4_Expr(_106240_tokens[0LL],(*this)._method_build_kind(_106240_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab060d50_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab09d6b7_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1ac1ba56e_Parser::_method_stop(void) {
	jule::drop((*this)._field_ast);
}



inline jule::Bool _1ac1ba56e_Parser::_method_stopped(void) {
	return (!(jule::real((*this)._field_ast)));
}



inline void _1ac1ba56e_Parser::_method_push_err(_1ab0277b7_Token _24027_token,jule::Str _24041_fmt,jule::Slice<jule::Any> _24054_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1d068165a_Log>({_1ac1ba56e_compiler_err(_24027_token,_24041_fmt,_24054_args)}));
}



inline void _1ac1ba56e_Parser::_method_push_suggestion(jule::Str _24534_fmt,jule::Slice<jule::Any> _24547_args) {
	{
		_1ac1ba56e_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_24534_fmt,_24547_args);
	}
}



inline jule::Ref<_1aaeea1c4_Expr> _1ac1ba56e_Parser::_method_build_expr(jule::Slice<_1ab0277b7_Token> _24934_tokens) {
	jule::Ref<_1ab060d50_ExprBuilder> _25017_ep = jule::new_struct<_1ab060d50_ExprBuilder>(new( std::nothrow ) _1ab060d50_ExprBuilder(this->self));
	jule::Ref<_1aaeea1c4_Expr> _25117_expr = _25017_ep->_method_build_from_tokens(_24934_tokens);
	return _25117_expr;
}



inline jule::Ref<_1aaeea1c4_Directive> _1ac1ba56e_Parser::_method_get_directive(jule::Ref<_1aaeea1c4_Comment> _25528_c) {
	if (_25528_c->_field_text.len() <= jule::Str("jule:", 5).len()) {
		return jule::new_ref<_1aaeea1c4_Directive>();
	}
	jule::Ref<_1aaeea1c4_Directive> _26017_d = jule::new_struct<_1aaeea1c4_Directive>(new( std::nothrow ) _1aaeea1c4_Directive(_25528_c->_field_token,jule::Str(),jule::Slice<jule::Str>()));
	jule::Str _26413_pragma = _25528_c->_field_token._field_kind.slice(static_cast<jule::Int>(jule::Str("jule:", 5).len()));
	jule::Slice<jule::Str> _26517_parts = _26413_pragma.split(jule::Str(" ", 1),-1LL);
	_26017_d->_field_tag=_26517_parts[0LL];
	_26017_d->_field_args=_26517_parts.slice(1LL);
	jule::Bool _27117_ok = false;
	{
		auto _range_expr = _1b6b6baa4_DIRECTIVES;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1ac1ba56e_kind = *_range_begin;
			_iter_begin_4441870448:;
			{
				if (_26017_d->_field_tag == _1ac1ba56e_kind) {
					_27117_ok=true;
					goto _iter_end_4441870448;
				}
			}
			_iter_next_4441870448:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac1ba56e_kind = *_range_begin; goto _iter_begin_4441870448; }
			_iter_end_4441870448:;
		}
	}
	if ((!(_27117_ok))) {
		return jule::new_ref<_1aaeea1c4_Directive>();
	}
	return _26017_d;
}



inline void _1ac1ba56e_Parser::_method_push_directive(jule::Ref<_1aaeea1c4_Comment> _28533_c) {
	jule::Ref<_1aaeea1c4_Directive> _28617_d = (*this)._method_get_directive(_28533_c);
	if ((!(jule::real(_28617_d)))) {
		return;
	}
	{
		auto _range_expr = (*this)._field_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaeea1c4_Directive> _1ac1ba56e_pd = *_range_begin;
			_iter_begin_4441877440:;
			{
				if (_28617_d->_field_tag == _1ac1ba56e_pd->_field_tag) {
					return;
				}
			}
			_iter_next_4441877440:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac1ba56e_pd = *_range_begin; goto _iter_begin_4441877440; }
			_iter_end_4441877440:;
		}
	}
	(*this)._field_directives=jule::append((*this)._field_directives,jule::Slice<jule::Ref<_1aaeea1c4_Directive>>({_28617_d}));
}



inline void _1ac1ba56e_Parser::_method_process_comment(jule::Ref<_1aaeea1c4_Comment> _30138_c) {
	if (_30138_c->_method_is_directive()) {
		(*this)._method_push_directive(_30138_c);
		return;
	}
	if ((!(jule::real((*this)._field_comment_group)))) {
		(*this)._field_comment_group=jule::new_struct<_1aaeea1c4_CommentGroup>(new( std::nothrow ) _1aaeea1c4_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments=jule::append((*this)._field_comment_group->_field_comments,jule::Slice<jule::Ref<_1aaeea1c4_Comment>>({_30138_c}));
}



inline jule::Ref<_1aaeea1c4_ScopeTree> _1ac1ba56e_Parser::_method_build_scope(jule::Slice<_1ab0277b7_Token> _31235_tokens) {
	jule::Ref<_1aaeea1c4_ScopeTree> _31317_s = _1ab05bd18_new_scope();
	_1ab05bd18_ScopeParser _31417_sp = _1ab05bd18_ScopeParser(this->self,jule::Ref<_1aaeea1c4_ScopeTree>(),jule::Slice<jule::Ref<_1ab05bd18_Stmt>>(),jule::Int());
	_31417_sp._method_build(_31235_tokens,_31317_s);
	return _31317_s;
}



inline std::tuple<jule::Ref<_1aaeea1c4_TypeDecl>,jule::Bool> _1ac1ba56e_Parser::_method___build_type(jule::Slice<_1ab0277b7_Token> _32143_tokens,jule::Int* _32213_i,jule::Bool _32222_err) {
	_1ac308844_TypeBuilder _32317_tb = _1ac308844_TypeBuilder(this->self,_32143_tokens,_32213_i,_32222_err);
	jule::Ref<_1aaeea1c4_TypeDecl> _32918_decl;
	jule::Bool _32924_ok;
	std::tie(_32918_decl,_32924_ok) = _32317_tb._method_build();
	return std::make_tuple(_32918_decl,_32924_ok);
}



inline std::tuple<jule::Ref<_1aaeea1c4_TypeDecl>,jule::Bool> _1ac1ba56e_Parser::_method_build_type(jule::Slice<_1ab0277b7_Token> _33441_tokens,jule::Int* _33513_i,jule::Bool _33522_err) {
	_1ab0277b7_Token _33613_token = _33441_tokens[static_cast<jule::Int>((*(_33513_i)))];
	jule::Ref<_1aaeea1c4_TypeDecl> _33718_t;
	jule::Bool _33721_ok;
	std::tie(_33718_t,_33721_ok) = this->self->_method___build_type(_33441_tokens,_33513_i,_33522_err);
	if (_33522_err && (!(_33721_ok))) {
		this->self->_method_push_err(_33613_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
	}
	return std::make_tuple(_33718_t,_33721_ok);
}



inline jule::Ref<_1aaeea1c4_TypeAliasDecl> _1ac1ba56e_Parser::_method_build_type_alias_decl(jule::Slice<_1ab0277b7_Token> _34445_tokens) {
	jule::Int _34517_i = 1LL;
	if (_34517_i >= _34445_tokens.len()) {
		this->self->_method_push_err(_34445_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_TypeAliasDecl>();
	}
	jule::Ref<_1aaeea1c4_TypeAliasDecl> _35017_tad = jule::new_struct<_1aaeea1c4_TypeAliasDecl>(new( std::nothrow ) _1aaeea1c4_TypeAliasDecl(jule::Ref<_1aaeea1c4_ScopeTree>(),jule::Bool(),jule::Bool(),_34445_tokens[1LL],_34445_tokens[1LL]._field_kind,jule::Ref<_1aaeea1c4_TypeDecl>(),jule::Ref<_1aaeea1c4_CommentGroup>()));
	_1ab0277b7_Token _35417_token = _34445_tokens[static_cast<jule::Int>(_34517_i)];
	if (_35417_token._field_id != 2LLU) {
		this->self->_method_push_err(_35417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_34517_i)++;
	if (_34517_i >= _34445_tokens.len()) {
		this->self->_method_push_err(_34445_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	_35417_token=_34445_tokens[static_cast<jule::Int>(_34517_i)];
	if (_35417_token._field_id != 11LLU) {
		this->self->_method_push_err(_34445_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	(_34517_i)++;
	if (_34517_i >= _34445_tokens.len()) {
		this->self->_method_push_err(_34445_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	jule::Ref<_1aaeea1c4_TypeDecl> _37518_t;
	jule::Bool _37521_ok;
	std::tie(_37518_t,_37521_ok) = this->self->_method_build_type(_34445_tokens,(&(_34517_i)),true);
	_35017_tad->_field_kind=_37518_t;
	if (_37521_ok && (_34517_i < _34445_tokens.len())) {
		this->self->_method_push_err(_34445_tokens[static_cast<jule::Int>(_34517_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _35017_tad;
}



inline void _1ac1ba56e_Parser::_method_build_var_type_and_expr(jule::Ref<_1aaeea1c4_VarDecl> _38347_v,jule::Slice<_1ab0277b7_Token> _38364_tokens) {
	jule::Int _38417_i = 0LL;
	_1ab0277b7_Token _38517_tok = _38364_tokens[static_cast<jule::Int>(_38417_i)];
	if (_38517_tok._field_id == 11LLU) {
		(_38417_i)++;
		if ((_38417_i >= _38364_tokens.len()) || ((_38364_tokens[static_cast<jule::Int>(_38417_i)]._field_id == 7LLU) && (_38364_tokens[static_cast<jule::Int>(_38417_i)]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_38517_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Ref<_1aaeea1c4_TypeDecl> _39322_t;
		jule::Bool _39325_ok;
		std::tie(_39322_t,_39325_ok) = this->self->_method_build_type(_38364_tokens,(&(_38417_i)),true);
		if (_39325_ok) {
			_38347_v->_field_kind=_39322_t;
			if (_38417_i >= _38364_tokens.len()) {
				return;
			}
			_38517_tok=_38364_tokens[static_cast<jule::Int>(_38417_i)];
		}
	}
	if (_38517_tok._field_id == 7LLU) {
		if (_38517_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Slice<_1ab0277b7_Token> _40821_expr_tokens = _38364_tokens.slice(static_cast<jule::Int>(_38417_i + 1LL));
		if (_40821_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_38517_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
			return;
		}
		_38347_v->_field_expr=this->self->_method_build_expr(_40821_expr_tokens);
	} else {
		this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _1ac1ba56e_Parser::_method_build_var_common(jule::Ref<_1aaeea1c4_VarDecl> _41940_v,jule::Slice<_1ab0277b7_Token> _41957_tokens) {
	_41940_v->_field_token=_41957_tokens[0LL];
	if (_41940_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_41940_v->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	_41940_v->_field_ident=_41940_v->_field_token._field_kind;
	jule::drop(_41940_v->_field_kind);
	if (_41957_tokens.len() > 1LL) {
		_41957_tokens=_41957_tokens.slice(1LL);
		this->self->_method_build_var_type_and_expr(_41940_v,_41957_tokens);
	}
}



inline void _1ac1ba56e_Parser::_method_build_var_begin(jule::Ref<_1aaeea1c4_VarDecl> _43438_v,jule::Ref<jule::Int> _43455_i,jule::Slice<_1ab0277b7_Token> _43464_tokens) {
	_1ab0277b7_Token _43513_tok = _43464_tokens[static_cast<jule::Int>(_43455_i)];
	{
		auto _match_expr{ _43513_tok._field_id };
		if (!((38LLU) == _match_expr)) { goto _case_end_4441992352; }
		_case_begin_4441992352:;
		{
			_43438_v->_field_statically=true;
			goto _case_begin_4441992464;
		}
		goto _match_end_4441991152;
		_case_end_4441992352:;
		if (!((34LLU) == _match_expr)) { goto _case_end_4441992464; }
		_case_begin_4441992464:;
		{
			(_43455_i)++;
			if (_43455_i >= _43464_tokens.len()) {
				(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			if (_43464_tokens[static_cast<jule::Int>(_43455_i)]._field_id == 36LLU) {
				_43438_v->_field_mutable=true;
				(_43455_i)++;
			}
		}
		goto _match_end_4441991152;
		_case_end_4441992464:;
		if (!((9LLU) == _match_expr)) { goto _case_end_4441992576; }
		_case_begin_4441992576:;
		{
			(_43455_i)++;
			_43438_v->_field_constant=true;
		}
		goto _match_end_4441991152;
		_case_end_4441992576:;
		_case_begin_4441992048:;
		{
			(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4441991152;
		_case_end_4441992048:;
		_match_end_4441991152:;
	}
	if (_43455_i >= _43464_tokens.len()) {
		(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline jule::Ref<_1aaeea1c4_VarDecl> _1ac1ba56e_Parser::_method_build_var(jule::Slice<_1ab0277b7_Token> _46833_tokens) {
	jule::Ref<jule::Int> _46917_i = jule::new_ref<jule::Int>(0LL);
	jule::Ref<_1aaeea1c4_VarDecl> _47017_v = jule::new_struct<_1aaeea1c4_VarDecl>(new( std::nothrow ) _1aaeea1c4_VarDecl(jule::Ref<_1aaeea1c4_ScopeTree>(),_46833_tokens[static_cast<jule::Int>(_46917_i)],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1aaeea1c4_Directive>>(),jule::Ref<_1aaeea1c4_CommentGroup>(),jule::Ref<_1aaeea1c4_TypeDecl>(),jule::Ref<_1aaeea1c4_Expr>()));
	this->self->_method_build_var_begin(_47017_v,_46917_i,_46833_tokens);
	if (_46917_i >= _46833_tokens.len()) {
		return jule::new_ref<_1aaeea1c4_VarDecl>();
	}
	_46833_tokens=_46833_tokens.slice(static_cast<jule::Int>(_46917_i));
	if ((_46833_tokens[0LL]._field_id == 7LLU) && (_46833_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_47017_v->_field_reference=true;
		if (_46833_tokens.len() == 1LL) {
			return jule::new_ref<_1aaeea1c4_VarDecl>();
		}
		_46833_tokens=_46833_tokens.slice(1LL);
	}
	this->self->_method_build_var_common(_47017_v,_46833_tokens);
	return _47017_v;
}



inline jule::Ref<_1aaeea1c4_GenericDecl> _1ac1ba56e_Parser::_method_build_generic(jule::Slice<_1ab0277b7_Token> _49036_tokens) {
	if (_49036_tokens.len() > 1LL) {
		(*this)._method_push_err(_49036_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1aaeea1c4_GenericDecl> _49417_g = jule::new_struct<_1aaeea1c4_GenericDecl>(new( std::nothrow ) _1aaeea1c4_GenericDecl(_49036_tokens[0LL],jule::Str()));
	if (_49417_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_49417_g->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_49417_g->_field_ident=_49417_g->_field_token._field_kind;
	return _49417_g;
}



inline jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> _1ac1ba56e_Parser::_method_build_generics(jule::Slice<_1ab0277b7_Token> _50537_tokens,_1ab0277b7_Token _50554_error_token) {
	if (_50537_tokens.len() == 0LL) {
		(*this)._method_push_err(_50554_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _51118_parts;
	jule::Slice<_1d068165a_Log> _51125_errors;
	std::tie(_51118_parts,_51125_errors) = _1ac1ba56e_parts(_50537_tokens,8LLU,true);
	(*this)._field_errors=jule::append((*this)._field_errors,_51125_errors);
	jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> _51417_generics = jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_51118_parts.len())));
	{
		auto _range_expr = _51118_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac1ba56e_i = 0;
			jule::Slice<_1ab0277b7_Token> _1ac1ba56e_part = *_range_begin;
			_iter_begin_4442034688:;
			{
				if (_51118_parts.len() > 0LL) {
					_51417_generics[static_cast<jule::Int>(_1ac1ba56e_i)]=(*this)._method_build_generic(_1ac1ba56e_part);
				}
			}
			_iter_next_4442034688:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac1ba56e_i; _1ac1ba56e_part = *_range_begin; goto _iter_begin_4442034688; }
			_iter_end_4442034688:;
		}
	}
	return _51417_generics;
}



inline jule::Ref<_1aaeea1c4_ParamDecl> _1ac1ba56e_Parser::_method_build_self_param(jule::Slice<_1ab0277b7_Token> _52439_tokens) {
	if (_52439_tokens.len() == 0LL) {
		return jule::new_ref<_1aaeea1c4_ParamDecl>();
	}
	jule::Ref<_1aaeea1c4_ParamDecl> _52917_param = jule::new_struct<_1aaeea1c4_ParamDecl>(new( std::nothrow ) _1aaeea1c4_ParamDecl());
	jule::Int _53217_i = 0LL;
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_id == 36LLU) {
		_52917_param->_field_mutable=true;
		(_53217_i)++;
		if (_53217_i >= _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1aaeea1c4_ParamDecl>();
		}
	}
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_kind == jule::Str("&", 1)) {
		_52917_param->_field_ident=jule::Str("&", 1);
		(_53217_i)++;
		if (_53217_i >= _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1aaeea1c4_ParamDecl>();
		}
	}
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_id == 28LLU) {
		_52917_param->_field_ident+=jule::Str("self", 4);
		_52917_param->_field_token=_52439_tokens[static_cast<jule::Int>(_53217_i)];
		(_53217_i)++;
		if (_53217_i < _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	}
	return _52917_param;
}



inline void _1ac1ba56e_Parser::_method_param_type_begin(jule::Ref<_1aaeea1c4_ParamDecl> _56339_param,jule::Int& _56363_i,jule::Slice<_1ab0277b7_Token> _56371_tokens) {
	_iter_begin_4442065056:;
	if (!(_56363_i < _56371_tokens.len())) { goto _iter_end_4442065056; }
	{
		_1ab0277b7_Token _56517_token = _56371_tokens[static_cast<jule::Int>(_56363_i)];
		if (_56517_token._field_id != 7LLU) {
			return;
		} else if (_56517_token._field_kind != jule::Str("...", 3)) {
			return;
		}
		if (_56339_param->_field_variadic) {
			(*this)._method_push_err(_56517_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>({}));
			goto _iter_next_4442065056;
		}
		_56339_param->_field_variadic=true;
	}
	_iter_next_4442065056:;
	(_56363_i)++;
	goto _iter_begin_4442065056;
	_iter_end_4442065056:;
}



inline void _1ac1ba56e_Parser::_method_build_param_type(jule::Ref<_1aaeea1c4_ParamDecl> _58040_param,jule::Slice<_1ab0277b7_Token> _58063_tokens,jule::Bool _58080_must_pure) {
	jule::Int _58117_i = 0LL;
	if ((!(_58080_must_pure))) {
		this->self->_method_param_type_begin(_58040_param,_58117_i,_58063_tokens);
		if (_58117_i >= _58063_tokens.len()) {
			return;
		}
	}
	std::tie(_58040_param->_field_kind,std::ignore) = this->self->_method_build_type(_58063_tokens,(&(_58117_i)),true);
	if (_58117_i < _58063_tokens.len()) {
		this->self->_method_push_err(_58063_tokens[static_cast<jule::Int>(_58117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _1ac1ba56e_Parser::_method_param_body_id(jule::Ref<_1aaeea1c4_ParamDecl> _59432_param,_1ab0277b7_Token _59451_token) {
	if (_1ab0277b7_is_ignore_ident(_59451_token._field_kind)) {
		_59432_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_59432_param->_field_ident=_59451_token._field_kind;
}



inline void _1ac1ba56e_Parser::_method_build_param_body(jule::Ref<_1aaeea1c4_ParamDecl> _60240_param,jule::Ref<jule::Int> _60263_i,jule::Slice<_1ab0277b7_Token> _60276_tokens,jule::Bool _60293_must_pure) {
	this->self->_method_param_body_id(_60240_param,_60276_tokens[static_cast<jule::Int>(_60263_i)]);
	_1ab0277b7_Token _60417_tok = _60276_tokens[static_cast<jule::Int>(_60263_i)];
	if ((_60263_i + 1LL) >= _60276_tokens.len()) {
		return;
	} else if (((_60276_tokens.len() - _60263_i) - 1LL) < 2LL) {
		this->self->_method_push_err(_60417_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return;
	}
	_60417_tok=_60276_tokens[static_cast<jule::Int>(_60263_i + 1LL)];
	if (_60417_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_60240_param,_60276_tokens,_60293_must_pure);
		return;
	}
	_60276_tokens=_60276_tokens.slice(static_cast<jule::Int>(_60263_i + 2LL));
	this->self->_method_build_param_type(_60240_param,_60276_tokens,_60293_must_pure);
}



inline jule::Ref<_1aaeea1c4_ParamDecl> _1ac1ba56e_Parser::_method_build_param(jule::Slice<_1ab0277b7_Token> _62335_tokens,jule::Bool _62352_must_pure) {
	jule::Ref<_1aaeea1c4_ParamDecl> _62417_param = jule::new_struct<_1aaeea1c4_ParamDecl>(new( std::nothrow ) _1aaeea1c4_ParamDecl(_62335_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1aaeea1c4_TypeDecl>(),jule::Str()));
	if (_62417_param->_field_token._field_id == 36LLU) {
		_62417_param->_field_mutable=true;
		if (_62335_tokens.len() == 1LL) {
			this->self->_method_push_err(_62335_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1aaeea1c4_ParamDecl>();
		}
		_62335_tokens=_62335_tokens.slice(1LL);
		_62417_param->_field_token=_62335_tokens[0LL];
	}
	if (_62335_tokens.len() >= 3LL) {
		if ((_62417_param->_field_token._field_id == 7LLU) && (_62417_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_62335_tokens.len() == 1LL) {
				this->self->_method_push_err(_62335_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1aaeea1c4_ParamDecl>();
			}
			if ((_62335_tokens[1LL]._field_id == 2LLU) && (_62335_tokens[2LL]._field_id == 11LLU)) {
				_62417_param->_field_reference=true;
				_62335_tokens=_62335_tokens.slice(1LL);
				_62417_param->_field_token=_62335_tokens[0LL];
			}
		}
	}
	if (_62417_param->_field_token._field_id != 2LLU) {
		_62417_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_62417_param,_62335_tokens,_62352_must_pure);
	} else {
		jule::Ref<jule::Int> _66021_i = jule::new_ref<jule::Int>(0LL);
		this->self->_method_build_param_body(_62417_param,_66021_i,_62335_tokens,_62352_must_pure);
	}
	return _62417_param;
}



inline void _1ac1ba56e_Parser::_method_check_params(jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>> _66735_params) {
	{
		auto _range_expr = _66735_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaeea1c4_ParamDecl> _1ac1ba56e_param = *_range_begin;
			_iter_begin_4442131088:;
			{
				if (_1ac1ba56e_param->_method_is_self() || jule::real(_1ac1ba56e_param->_field_kind)) {
					goto _iter_next_4442131088;
				}
				if (_1ac1ba56e_param->_field_token._field_id == 0LLU) {
					(*this)._method_push_err(_1ac1ba56e_param->_field_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				} else {
					_1ac1ba56e_param->_field_kind=jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_1ac1ba56e_param->_field_token,jule::Any(jule::new_struct<_1aaeea1c4_IdentTypeDecl>(new( std::nothrow ) _1aaeea1c4_IdentTypeDecl(_1ac1ba56e_param->_field_token,_1ac1ba56e_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>())))));
					_1ac1ba56e_param->_field_ident=jule::Str("<anonymous>", 11);
					_1ac1ba56e_param->_field_token=_1ab0277b7_Token();
				}
			}
			_iter_next_4442131088:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac1ba56e_param = *_range_begin; goto _iter_begin_4442131088; }
			_iter_end_4442131088:;
		}
	}
}



inline jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>> _1ac1ba56e_Parser::_method_build_params(jule::Slice<_1ab0277b7_Token> _68836_tokens,jule::Bool _68853_method,jule::Bool _68867_must_pure) {
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _68918_parts;
	jule::Slice<_1d068165a_Log> _68925_errs;
	std::tie(_68918_parts,_68925_errs) = _1ac1ba56e_parts(_68836_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_68925_errs);
	if (_68918_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>> _69517_params = nullptr;
	if (_68853_method && (_68918_parts.len() > 0LL)) {
		jule::Ref<_1aaeea1c4_ParamDecl> _69721_param = this->self->_method_build_self_param(_68918_parts[0LL]);
		if (jule::real(_69721_param) && _69721_param->_method_is_self()) {
			_69517_params=jule::append(_69517_params,jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>>({_69721_param}));
			_68918_parts=_68918_parts.slice(1LL);
		}
	}
	{
		auto _range_expr = _68918_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1ab0277b7_Token> _1ac1ba56e_part = *_range_begin;
			_iter_begin_4442150368:;
			{
				jule::Ref<_1aaeea1c4_ParamDecl> _70521_param = this->self->_method_build_param(_1ac1ba56e_part,_68867_must_pure);
				if (jule::real(_70521_param)) {
					_69517_params=jule::append(_69517_params,jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>>({_70521_param}));
				}
			}
			_iter_next_4442150368:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac1ba56e_part = *_range_begin; goto _iter_begin_4442150368; }
			_iter_end_4442150368:;
		}
	}
	this->self->_method_check_params(_69517_params);
	return _69517_params;
}



inline std::tuple<jule::Ref<_1aaeea1c4_RetTypeDecl>,jule::Bool> _1ac1ba56e_Parser::_method_build_multi_ret_type(jule::Slice<_1ab0277b7_Token> _71544_tokens,jule::Int& _71566_i) {
	jule::Ref<_1aaeea1c4_RetTypeDecl> _71576_t = jule::Ref<_1aaeea1c4_RetTypeDecl>();
	jule::Bool _71593_ok = jule::Bool();
	_71576_t=jule::new_struct<_1aaeea1c4_RetTypeDecl>(new( std::nothrow ) _1aaeea1c4_RetTypeDecl());
	(_71566_i)++;
	if (_71566_i >= _71544_tokens.len()) {
		(_71566_i)--;
		std::tie(_71576_t->_field_kind,_71593_ok) = this->self->_method_build_type(_71544_tokens,(&(_71566_i)),false);
		return std::make_tuple(_71576_t,_71593_ok);
	}
	(_71566_i)--;
	jule::Slice<_1ab0277b7_Token> _72517_range_tokens = _1ac1ba56e_range(_71566_i,jule::Str("(", 1),jule::Str(")", 1),_71544_tokens);
	jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>> _72617_params = this->self->_method_build_params(_72517_range_tokens,false,true);
	jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>> _72817_types = jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_72617_params.len())));
	{
		auto _range_expr = _72617_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac1ba56e_i = 0;
			jule::Ref<_1aaeea1c4_ParamDecl> _1ac1ba56e_param = *_range_begin;
			_iter_begin_4442173584:;
			{
				_72817_types[static_cast<jule::Int>(_1ac1ba56e_i)]=_1ac1ba56e_param->_field_kind;
				if (_1ac1ba56e_param->_field_ident != jule::Str("<anonymous>", 11)) {
					_1ac1ba56e_param->_field_token._field_kind=_1ac1ba56e_param->_field_ident;
				} else {
					_1ac1ba56e_param->_field_token._field_kind=jule::Str("_", 1);
				}
				_71576_t->_field_idents=jule::append(_71576_t->_field_idents,jule::Slice<_1ab0277b7_Token>({_1ac1ba56e_param->_field_token}));
			}
			_iter_next_4442173584:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac1ba56e_i; _1ac1ba56e_param = *_range_begin; goto _iter_begin_4442173584; }
			_iter_end_4442173584:;
		}
	}
	if (_72817_types.len() > 1LL) {
		_71576_t->_field_kind=jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_71544_tokens[0LL],jule::Any(jule::new_struct<_1aaeea1c4_TupleTypeDecl>(new( std::nothrow ) _1aaeea1c4_TupleTypeDecl(_72817_types)))));
	} else {
		_71576_t->_field_kind=_72817_types[0LL];
	}
	_71593_ok=true;
	return std::make_tuple(_71576_t,_71593_ok);
}



inline std::tuple<jule::Ref<_1aaeea1c4_RetTypeDecl>,jule::Bool> _1ac1ba56e_Parser::_method_build_ret_type(jule::Slice<_1ab0277b7_Token> _75538_tokens,jule::Int& _75560_i) {
	jule::Ref<_1aaeea1c4_RetTypeDecl> _75570_t = jule::Ref<_1aaeea1c4_RetTypeDecl>();
	jule::Bool _75587_ok = jule::Bool();
	_75570_t=jule::new_struct<_1aaeea1c4_RetTypeDecl>(new( std::nothrow ) _1aaeea1c4_RetTypeDecl());
	if (_75560_i >= _75538_tokens.len()) {
		return std::make_tuple(_75570_t,_75587_ok);
	}
	_1ab0277b7_Token _76117_token = _75538_tokens[static_cast<jule::Int>(_75560_i)];
	{
		auto _match_expr{ _76117_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4442192464; }
		_case_begin_4442192464:;
		{
			if (_76117_token._field_kind == jule::Str("{", 1)) {
				return std::make_tuple(_75570_t,_75587_ok);
			}
		}
		goto _match_end_4442191040;
		_case_end_4442192464:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4442192576; }
		_case_begin_4442192576:;
		{
			if (_76117_token._field_kind == jule::Str("=", 1)) {
				return std::make_tuple(_75570_t,_75587_ok);
			}
		}
		goto _match_end_4442191040;
		_case_end_4442192576:;
		if (!((11LLU) == _match_expr)) { goto _case_end_4442192688; }
		_case_begin_4442192688:;
		{
			if ((_75560_i + 1LL) >= _75538_tokens.len()) {
				this->self->_method_push_err(_76117_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				return std::make_tuple(_75570_t,_75587_ok);
			}
			(_75560_i)++;
			_76117_token=_75538_tokens[static_cast<jule::Int>(_75560_i)];
			if (_76117_token._field_id == 3LLU) {
				{
					auto _match_expr{ _76117_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4442200944; }
					_case_begin_4442200944:;
					{
						jule::Ref<_1aaeea1c4_RetTypeDecl> _78430_decl;
						jule::Bool _78436_ok;
						std::tie(_78430_decl,_78436_ok) = this->self->_method_build_multi_ret_type(_75538_tokens,_75560_i);
						_75570_t = _78430_decl;
						_75587_ok = _78436_ok;
						return std::make_tuple(_75570_t,_75587_ok);
					}
					goto _match_end_4442199872;
					_case_end_4442200944:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4442201056; }
					_case_begin_4442201056:;
					{
						this->self->_method_push_err(_76117_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
						return std::make_tuple(_75570_t,_75587_ok);
					}
					goto _match_end_4442199872;
					_case_end_4442201056:;
					_match_end_4442199872:;
				}
			}
			std::tie(_75570_t->_field_kind,_75587_ok) = this->self->_method_build_type(_75538_tokens,(&(_75560_i)),true);
			return std::make_tuple(_75570_t,_75587_ok);
		}
		goto _match_end_4442191040;
		_case_end_4442192688:;
		_match_end_4442191040:;
	}
	(_75560_i)++;
	this->self->_method_push_err(_76117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return std::make_tuple(_75570_t,_75587_ok);
}



inline jule::Ref<_1aaeea1c4_FnDecl> _1ac1ba56e_Parser::_method_build_fn_prototype(jule::Slice<_1ab0277b7_Token> _80342_tokens,jule::Int& _80364_i,jule::Bool _80372_method) {
	jule::Ref<_1aaeea1c4_FnDecl> _80417_f = jule::new_struct<_1aaeea1c4_FnDecl>(new( std::nothrow ) _1aaeea1c4_FnDecl(_80342_tokens[static_cast<jule::Int>(_80364_i)],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1aaeea1c4_Directive>>(),jule::Ref<_1aaeea1c4_CommentGroup>(),jule::Ref<_1aaeea1c4_ScopeTree>(),jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>(),jule::Ref<_1aaeea1c4_RetTypeDecl>(),jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>>()));
	if (_80417_f->_field_token._field_id == 38LLU) {
		_80417_f->_field_statically=true;
		(_80364_i)++;
		if (_80364_i >= _80342_tokens.len()) {
			this->self->_method_push_err(_80417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1aaeea1c4_FnDecl>();
		}
		_80417_f->_field_token=_80342_tokens[static_cast<jule::Int>(_80364_i)];
	}
	if (_80417_f->_field_token._field_id == 35LLU) {
		_80417_f->_field_unsafety=true;
		(_80364_i)++;
		if (_80364_i >= _80342_tokens.len()) {
			this->self->_method_push_err(_80417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1aaeea1c4_FnDecl>();
		}
		_80417_f->_field_token=_80342_tokens[static_cast<jule::Int>(_80364_i)];
	}
	(_80364_i)++;
	if (_80364_i >= _80342_tokens.len()) {
		this->self->_method_push_err(_80417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_FnDecl>();
	}
	_1ab0277b7_Token _83713_tok = _80342_tokens[static_cast<jule::Int>(_80364_i)];
	if (_83713_tok._field_id == 2LLU) {
		(_80364_i)++;
		if (_80364_i >= _80342_tokens.len()) {
			this->self->_method_push_err(_80417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1aaeea1c4_FnDecl>();
		}
		_80417_f->_field_ident=_83713_tok._field_kind;
	} else {
		_80417_f->_field_ident=jule::Str("<anonymous>", 11);
	}
	_1ab0277b7_Token _84913_error_token = _80342_tokens[static_cast<jule::Int>(_80364_i)];
	jule::Slice<_1ab0277b7_Token> _85017_generics_tokens = _1ac1ba56e_range(_80364_i,jule::Str("[", 1),jule::Str("]", 1),_80342_tokens);
	if (_85017_generics_tokens != nullptr) {
		_80417_f->_field_generics=this->self->_method_build_generics(_85017_generics_tokens,_84913_error_token);
	}
	if (_80342_tokens[static_cast<jule::Int>(_80364_i)]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_80342_tokens[static_cast<jule::Int>(_80364_i)],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_FnDecl>();
	}
	jule::Slice<_1ab0277b7_Token> _86017_params_toks = _1ac1ba56e_range(_80364_i,jule::Str("(", 1),jule::Str(")", 1),_80342_tokens);
	if (_86017_params_toks.len() > 0LL) {
		_80417_f->_field_params=this->self->_method_build_params(_86017_params_toks,_80372_method,false);
	}
	std::tie(_80417_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_80342_tokens,_80364_i);
	return _80417_f;
}



inline jule::Ref<_1aaeea1c4_FnDecl> _1ac1ba56e_Parser::_method_build_fn(jule::Slice<_1ab0277b7_Token> _87132_tokens,jule::Bool _87149_method,jule::Bool _87163_prototype) {
	jule::Int _87217_i = 0LL;
	jule::Ref<_1aaeea1c4_FnDecl> _87317_f = this->self->_method_build_fn_prototype(_87132_tokens,_87217_i,_87149_method);
	if (_87163_prototype) {
		if (_87217_i < _87132_tokens.len()) {
			this->self->_method_push_err(_87132_tokens[static_cast<jule::Int>(_87217_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		return _87317_f;
	} else if ((!(jule::real(_87317_f)))) {
		return _87317_f;
	}
	if (_87217_i >= _87132_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_87317_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_FnDecl>();
	}
	jule::Slice<_1ab0277b7_Token> _88917_block_tokens = _1ac1ba56e_range(_87217_i,jule::Str("{", 1),jule::Str("}", 1),_87132_tokens);
	if (_88917_block_tokens != nullptr) {
		_87317_f->_field_scope=this->self->_method_build_scope(_88917_block_tokens);
		_87317_f->_field_scope->_field_unsafety=_87317_f->_field_unsafety;
		if (_87217_i < _87132_tokens.len()) {
			this->self->_method_push_err(_87132_tokens[static_cast<jule::Int>(_87217_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_87317_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_FnDecl>();
	}
	return _87317_f;
}



inline jule::Slice<_1ab0277b7_Token> _1ac1ba56e_Parser::_method_get_use_decl_selectors(jule::Slice<_1ab0277b7_Token> _90545_tokens) {
	jule::Int _90617_i = 0LL;
	_90545_tokens=_1ac1ba56e_range(_90617_i,jule::Str("{", 1),jule::Str("}", 1),_90545_tokens);
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _90818_parts;
	jule::Slice<_1d068165a_Log> _90825_errs;
	std::tie(_90818_parts,_90825_errs) = _1ac1ba56e_parts(_90545_tokens,8LLU,true);
	if (_90825_errs.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_90825_errs);
		return nullptr;
	}
	jule::Slice<_1ab0277b7_Token> _91417_selectors = jule::Slice<_1ab0277b7_Token>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_90818_parts.len())));
	{
		auto _range_expr = _90818_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac1ba56e_i = 0;
			jule::Slice<_1ab0277b7_Token> _1ac1ba56e_part = *_range_begin;
			_iter_begin_4442273344:;
			{
				if (_1ac1ba56e_part.len() > 1LL) {
					(*this)._method_push_err(_1ac1ba56e_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_1ab0277b7_Token _91921_tok = _1ac1ba56e_part[0LL];
				if ((_91921_tok._field_id != 2LLU) && (_91921_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_91921_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					goto _iter_next_4442273344;
				}
				_91417_selectors[static_cast<jule::Int>(_1ac1ba56e_i)]=_91921_tok;
			}
			_iter_next_4442273344:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac1ba56e_i; _1ac1ba56e_part = *_range_begin; goto _iter_begin_4442273344; }
			_iter_end_4442273344:;
		}
	}
	return _91417_selectors;
}



inline void _1ac1ba56e_Parser::_method_build_cpp_use_decl(jule::Ref<_1aaeea1c4_UseDecl> _93041_decl,jule::Slice<_1ab0277b7_Token> _93057_tokens) {
	if (_93057_tokens.len() > 1LL) {
		(*this)._method_push_err(_93057_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_1ab0277b7_Token _93413_token = _93057_tokens[0LL];
	if ((_93413_token._field_id != 6LLU) || ((_93413_token._field_kind[0LL] != '`') && (_93413_token._field_kind[0LL] != '\"'))) {
		(*this)._method_push_err(_93413_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return;
	}
	_93041_decl->_field_cpp_linked=true;
	_93041_decl->_field_link_path=_93413_token._field_kind.slice(1LL,static_cast<jule::Int>(_93413_token._field_kind.len() - 1LL));
	if ((!(_1d068267d_is_std_header_path(_93041_decl->_field_link_path)))) {
		_93041_decl->_field_link_path=_1d05b5e41_join(jule::Slice<jule::Str>({_93413_token._field_file->_method_dir(),_93041_decl->_field_link_path}));
	}
}



inline void _1ac1ba56e_Parser::_method_build_std_use_decl(jule::Ref<_1aaeea1c4_UseDecl> _94641_decl,jule::Slice<_1ab0277b7_Token> _94661_tokens) {
	_94641_decl->_field_std=true;
	_1ab0277b7_Token _94917_token = _94661_tokens[0LL];
	if (_94661_tokens.len() < 3LL) {
		(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_94661_tokens=_94661_tokens.slice(2LL);
	_94917_token=_94661_tokens[static_cast<jule::Int>(_94661_tokens.len() - 1LL)];
	{
		auto _match_expr{ _94917_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4442312960; }
		_case_begin_4442312960:;
		{
			(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4442309168;
		_case_end_4442312960:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4442313072; }
		_case_begin_4442313072:;
		{
			if (_94917_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_1ab0277b7_Token> _96721_selectors = nullptr;
			std::tie(_94661_tokens,_96721_selectors) = _1ac1ba56e_range_last(_94661_tokens);
			_94641_decl->_field_selected=(*this)._method_get_use_decl_selectors(_96721_selectors);
			if (_94661_tokens.len() == 0LL) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_94917_token=_94661_tokens[static_cast<jule::Int>(_94661_tokens.len() - 1LL)];
			if (_94917_token._field_id != 23LLU) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_94661_tokens=_94661_tokens.slice(0LL,static_cast<jule::Int>(_94661_tokens.len() - 1LL));
			if (_94661_tokens.len() == 0LL) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4442309168;
		_case_end_4442313072:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4442313184; }
		_case_begin_4442313184:;
		{
			if (_94917_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_94661_tokens=_94661_tokens.slice(0LL,static_cast<jule::Int>(_94661_tokens.len() - 1LL));
			if (_94661_tokens.len() == 0LL) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_94917_token=_94661_tokens[static_cast<jule::Int>(_94661_tokens.len() - 1LL)];
			if (_94917_token._field_id != 23LLU) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_94661_tokens=_94661_tokens.slice(0LL,static_cast<jule::Int>(_94661_tokens.len() - 1LL));
			if (_94661_tokens.len() == 0LL) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_94641_decl->_field_full=true;
		}
		goto _match_end_4442309168;
		_case_end_4442313184:;
		_match_end_4442309168:;
	}
	_94641_decl->_field_link_path=jule::Str("std::", 5) + _1ac1ba56e_tokstoa(_94661_tokens);
}



inline void _1ac1ba56e_Parser::_method_build_ident_use_decl(jule::Ref<_1aaeea1c4_UseDecl> _101043_decl,jule::Slice<_1ab0277b7_Token> _101063_tokens) {
	_101043_decl->_field_std=false;
	_1ab0277b7_Token _101317_token = _101063_tokens[static_cast<jule::Int>(_101063_tokens.len() - 1LL)];
	{
		auto _match_expr{ _101317_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4442348080; }
		_case_begin_4442348080:;
		{
			(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4442344944;
		_case_end_4442348080:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4442348192; }
		_case_begin_4442348192:;
		{
			if (_101317_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_1ab0277b7_Token> _102521_selectors = nullptr;
			std::tie(_101063_tokens,_102521_selectors) = _1ac1ba56e_range_last(_101063_tokens);
			_101043_decl->_field_selected=(*this)._method_get_use_decl_selectors(_102521_selectors);
			if (_101063_tokens.len() == 0LL) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101317_token=_101063_tokens[static_cast<jule::Int>(_101063_tokens.len() - 1LL)];
			if (_101317_token._field_id != 23LLU) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101063_tokens=_101063_tokens.slice(0LL,static_cast<jule::Int>(_101063_tokens.len() - 1LL));
			if (_101063_tokens.len() == 0LL) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4442344944;
		_case_end_4442348192:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4442348304; }
		_case_begin_4442348304:;
		{
			if (_101317_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101063_tokens=_101063_tokens.slice(0LL,static_cast<jule::Int>(_101063_tokens.len() - 1LL));
			if (_101063_tokens.len() == 0LL) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101317_token=_101063_tokens[static_cast<jule::Int>(_101063_tokens.len() - 1LL)];
			if (_101317_token._field_id != 23LLU) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101063_tokens=_101063_tokens.slice(0LL,static_cast<jule::Int>(_101063_tokens.len() - 1LL));
			if (_101063_tokens.len() == 0LL) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101043_decl->_field_full=true;
		}
		goto _match_end_4442344944;
		_case_end_4442348304:;
		_match_end_4442344944:;
	}
	_101043_decl->_field_link_path=_1ac1ba56e_tokstoa(_101063_tokens);
}



inline void _1ac1ba56e_Parser::_method_parse_use_decl(jule::Ref<_1aaeea1c4_UseDecl> _107537_decl,jule::Slice<_1ab0277b7_Token> _107557_tokens) {
	if (_107537_decl->_field_cpp_linked) {
		(*this)._method_build_cpp_use_decl(_107537_decl,_107557_tokens);
		return;
	}
	_1ab0277b7_Token _108117_token = _107557_tokens[0LL];
	if (_108117_token._field_id != 2LLU) {
		(*this)._method_push_err(_108117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	if ((_107557_tokens.len() > 2LL) && (_107557_tokens[1LL]._field_id == 12LLU)) {
		_107537_decl->_field_alias=_108117_token._field_kind;
		if (_107557_tokens[2LL]._field_id != 2LLU) {
			(*this)._method_push_err(_108117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			return;
		}
		_107557_tokens=_107557_tokens.slice(2LL);
		_108117_token=_107557_tokens[0LL];
	}
	
	{
		if (!((_108117_token._field_kind == jule::Str("std", 3)))) { goto _case_end_4442393728; }
		_case_begin_4442393728:;
		{
			(*this)._method_build_std_use_decl(_107537_decl,_107557_tokens);
		}
		goto _match_end_4442392768;
		_case_end_4442393728:;
		_case_begin_4442392896:;
		{
			(*this)._method_build_ident_use_decl(_107537_decl,_107557_tokens);
		}
		goto _match_end_4442392768;
		_case_end_4442392896:;
		_match_end_4442392768:;
	}
}



inline jule::Ref<_1aaeea1c4_UseDecl> _1ac1ba56e_Parser::_method_build_use_decl(jule::Slice<_1ab0277b7_Token> _111037_tokens,jule::Bool _111054_cpp_linked) {
	jule::Ref<_1aaeea1c4_UseDecl> _111117_decl = jule::new_struct<_1aaeea1c4_UseDecl>(new( std::nothrow ) _1aaeea1c4_UseDecl(_111037_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_1ab0277b7_Token>(),_111054_cpp_linked,jule::Bool()));
	if (_111037_tokens.len() < 2LL) {
		(*this)._method_push_err(_111117_decl->_field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_UseDecl>();
	}
	_111037_tokens=_111037_tokens.slice(1LL);
	(*this)._method_parse_use_decl(_111117_decl,_111037_tokens);
	return _111117_decl;
}



inline jule::Ref<_1aaeea1c4_Expr> _1ac1ba56e_Parser::_method_build_enum_item_expr(jule::Ref<jule::Int> _112444_i,jule::Slice<_1ab0277b7_Token> _112457_tokens) {
	jule::Int _112517_brace_n = 0LL;
	jule::Int _112613_expr_start = _112444_i;
	_iter_begin_4442411008:;
	if (!(_112444_i < _112457_tokens.len())) { goto _iter_end_4442411008; }
	{
		_1ab0277b7_Token _112817_t = _112457_tokens[static_cast<jule::Int>(_112444_i)];
		if (_112817_t._field_id == 3LLU) {
			{
				auto _match_expr{ _112817_t._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4442415872; }
				_case_begin_4442415872:;
				{
					(_112517_brace_n)++;
					goto _iter_next_4442411008;
				}
				goto _match_end_4442414288;
				_case_end_4442415872:;
				_case_begin_4442415072:;
				{
					(_112517_brace_n)--;
				}
				goto _match_end_4442414288;
				_case_end_4442415072:;
				_match_end_4442414288:;
			}
		}
		if (_112517_brace_n > 0LL) {
			goto _iter_next_4442411008;
		}
		if ((_112817_t._field_id == 8LLU) || ((_112444_i + 1LL) >= _112457_tokens.len())) {
			jule::Slice<_1ab0277b7_Token> _114725_expr_tokens = nullptr;
			if (_112817_t._field_id == 8LLU) {
				_114725_expr_tokens=_112457_tokens.slice(static_cast<jule::Int>(_112613_expr_start),static_cast<jule::Int>(_112444_i));
			} else {
				_114725_expr_tokens=_112457_tokens.slice(static_cast<jule::Int>(_112613_expr_start));
			}
			return this->self->_method_build_expr(_114725_expr_tokens);
		}
	}
	_iter_next_4442411008:;
	(_112444_i)++;
	goto _iter_begin_4442411008;
	_iter_end_4442411008:;
	return jule::new_ref<_1aaeea1c4_Expr>();
}



inline jule::Slice<jule::Ref<_1aaeea1c4_EnumItemDecl>> _1ac1ba56e_Parser::_method_build_enum_items(jule::Slice<_1ab0277b7_Token> _115940_tokens) {
	jule::Slice<jule::Ref<_1aaeea1c4_EnumItemDecl>> _116017_items = jule::Slice<jule::Ref<_1aaeea1c4_EnumItemDecl>>::alloc(0LL);
	jule::Ref<jule::Int> _116117_i = jule::new_ref<jule::Int>(0LL);
	_iter_begin_4442430656:;
	if (!(_116117_i < _115940_tokens.len())) { goto _iter_end_4442430656; }
	{
		_1ab0277b7_Token _116321_t = _115940_tokens[static_cast<jule::Int>(_116117_i)];
		if (_116321_t._field_id == 18LLU) {
			goto _iter_next_4442430656;
		}
		jule::Ref<_1aaeea1c4_EnumItemDecl> _116821_item = jule::new_struct<_1aaeea1c4_EnumItemDecl>(new( std::nothrow ) _1aaeea1c4_EnumItemDecl());
		_116821_item->_field_token=_116321_t;
		if (_116821_item->_field_token._field_id != 2LLU) {
			this->self->_method_push_err(_116821_item->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		}
		_116821_item->_field_ident=_116821_item->_field_token._field_kind;
		if (((_116117_i + 1LL) >= _115940_tokens.len()) || (_115940_tokens[static_cast<jule::Int>(_116117_i + 1LL)]._field_id == 8LLU)) {
			if ((_116117_i + 1LL) < _115940_tokens.len()) {
				(_116117_i)++;
			}
			_116017_items=jule::append(_116017_items,jule::Slice<jule::Ref<_1aaeea1c4_EnumItemDecl>>({_116821_item}));
			goto _iter_next_4442430656;
		}
		(_116117_i)++;
		_116321_t=_115940_tokens[static_cast<jule::Int>(_116117_i)];
		(_116117_i)++;
		if ((_116321_t._field_id != 7LLU) || (_116321_t._field_kind != jule::Str("=", 1))) {
			this->self->_method_push_err(_116321_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>({}));
			goto _iter_next_4442430656;
		}
		if ((_116117_i >= _115940_tokens.len()) || (_115940_tokens[static_cast<jule::Int>(_116117_i)]._field_id == 8LLU)) {
			this->self->_method_push_err(_116321_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
			goto _iter_next_4442430656;
		}
		_116821_item->_field_expr=this->self->_method_build_enum_item_expr(_116117_i,_115940_tokens);
		_116017_items=jule::append(_116017_items,jule::Slice<jule::Ref<_1aaeea1c4_EnumItemDecl>>({_116821_item}));
	}
	_iter_next_4442430656:;
	(_116117_i)++;
	goto _iter_begin_4442430656;
	_iter_end_4442430656:;
	return _116017_items;
}



inline jule::Ref<_1aaeea1c4_EnumDecl> _1ac1ba56e_Parser::_method_build_enum_decl(jule::Slice<_1ab0277b7_Token> _120039_tokens) {
	if ((_120039_tokens.len() < 2LL) || (_120039_tokens.len() < 3LL)) {
		this->self->_method_push_err(_120039_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_EnumDecl>();
	}
	jule::Ref<_1aaeea1c4_EnumDecl> _120517_e = jule::new_struct<_1aaeea1c4_EnumDecl>(new( std::nothrow ) _1aaeea1c4_EnumDecl(_120039_tokens[1LL],jule::Bool(),jule::Str(),jule::Ref<_1aaeea1c4_TypeDecl>(),jule::Slice<jule::Ref<_1aaeea1c4_EnumItemDecl>>(),jule::Ref<_1aaeea1c4_CommentGroup>()));
	if (_120517_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_120517_e->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_120517_e->_field_ident=_120517_e->_field_token._field_kind;
	jule::Int _121317_i = 2LL;
	if (_120039_tokens[static_cast<jule::Int>(_121317_i)]._field_id == 11LLU) {
		(_121317_i)++;
		if (_121317_i >= _120039_tokens.len()) {
			this->self->_method_push_err(_120039_tokens[static_cast<jule::Int>(_121317_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return _120517_e;
		}
		std::tie(_120517_e->_field_kind,std::ignore) = this->self->_method_build_type(_120039_tokens,(&(_121317_i)),true);
		if (_121317_i >= _120039_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_120517_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
			return _120517_e;
		}
	} else {
		jule::drop(_120517_e->_field_kind);
	}
	jule::Slice<_1ab0277b7_Token> _123017_item_tokens = _1ac1ba56e_range(_121317_i,jule::Str("{", 1),jule::Str("}", 1),_120039_tokens);
	if (_123017_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_120517_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _120517_e;
	} else if (_121317_i < _120039_tokens.len()) {
		this->self->_method_push_err(_120039_tokens[static_cast<jule::Int>(_121317_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_120517_e->_field_items=this->self->_method_build_enum_items(_123017_item_tokens);
	return _120517_e;
}



inline jule::Ref<_1aaeea1c4_FieldDecl> _1ac1ba56e_Parser::_method_build_field(jule::Slice<_1ab0277b7_Token> _124335_tokens) {
	jule::Ref<_1aaeea1c4_FieldDecl> _124417_f = jule::new_struct<_1aaeea1c4_FieldDecl>(new( std::nothrow ) _1aaeea1c4_FieldDecl());
	_124417_f->_field_public=_124335_tokens[0LL]._field_id == 21LLU;
	if (_124417_f->_field_public) {
		if (_124335_tokens.len() == 1LL) {
			this->self->_method_push_err(_124335_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1aaeea1c4_FieldDecl>();
		}
		_124335_tokens=_124335_tokens.slice(1LL);
	}
	_124417_f->_field_mutable=_124335_tokens[0LL]._field_id == 36LLU;
	if (_124417_f->_field_mutable) {
		if (_124335_tokens.len() == 1LL) {
			this->self->_method_push_err(_124335_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1aaeea1c4_FieldDecl>();
		}
		_124335_tokens=_124335_tokens.slice(1LL);
	}
	_124417_f->_field_token=_124335_tokens[0LL];
	if (_124417_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_124417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_FieldDecl>();
	}
	_124417_f->_field_ident=_124417_f->_field_token._field_kind;
	if (_124335_tokens.len() == 1LL) {
		this->self->_method_push_err(_124335_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_FieldDecl>();
	} else if (_124335_tokens[1LL]._field_id != 11LLU) {
		this->self->_method_push_err(_124335_tokens[1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_FieldDecl>();
	}
	_124335_tokens=_124335_tokens.slice(2LL);
	jule::Int _128117_i = 0LL;
	std::tie(_124417_f->_field_kind,std::ignore) = this->self->_method_build_type(_124335_tokens,(&(_128117_i)),true);
	if (_128117_i < _124335_tokens.len()) {
		this->self->_method_push_err(_124335_tokens[static_cast<jule::Int>(_128117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_FieldDecl>();
	}
	return _124417_f;
}



inline jule::Slice<jule::Ref<_1aaeea1c4_FieldDecl>> _1ac1ba56e_Parser::_method_build_struct_decl_fields(jule::Slice<_1ab0277b7_Token> _129148_tokens) {
	jule::Slice<jule::Ref<_1aaeea1c4_FieldDecl>> _129217_fields = nullptr;
	jule::Slice<jule::Ref<_1ab05bd18_Stmt>> _129317_stms = _1ab05bd18_split_stms(_129148_tokens);
	{
		auto _range_expr = _129317_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab05bd18_Stmt> _1ac1ba56e_st = *_range_begin;
			_iter_begin_4442518608:;
			{
				jule::Slice<_1ab0277b7_Token> _129521_tokens = _1ac1ba56e_st->_field_tokens;
				if (_129521_tokens[0LL]._field_id == 18LLU) {
					goto _iter_next_4442518608;
				}
				jule::Ref<_1aaeea1c4_FieldDecl> _129921_f = this->self->_method_build_field(_129521_tokens);
				_129217_fields=jule::append(_129217_fields,jule::Slice<jule::Ref<_1aaeea1c4_FieldDecl>>({_129921_f}));
			}
			_iter_next_4442518608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac1ba56e_st = *_range_begin; goto _iter_begin_4442518608; }
			_iter_end_4442518608:;
		}
	}
	return _129217_fields;
}



inline jule::Ref<_1aaeea1c4_StructDecl> _1ac1ba56e_Parser::_method_build_struct_decl(jule::Slice<_1ab0277b7_Token> _130541_tokens) {
	if (_130541_tokens.len() < 3LL) {
		this->self->_method_push_err(_130541_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_StructDecl>();
	}
	jule::Int _131117_i = 1LL;
	jule::Ref<_1aaeea1c4_StructDecl> _131217_s = jule::new_struct<_1aaeea1c4_StructDecl>(new( std::nothrow ) _1aaeea1c4_StructDecl(_130541_tokens[static_cast<jule::Int>(_131117_i)],jule::Str(),jule::Slice<jule::Ref<_1aaeea1c4_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1aaeea1c4_Directive>>(),jule::Ref<_1aaeea1c4_CommentGroup>(),jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>()));
	if (_131217_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_131217_s->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_131117_i)++;
	if (_131117_i >= _130541_tokens.len()) {
		this->self->_method_push_err(_130541_tokens[static_cast<jule::Int>(_131117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _131217_s;
	}
	_131217_s->_field_ident=_131217_s->_field_token._field_kind;
	_1ab0277b7_Token _132613_error_token = _130541_tokens[static_cast<jule::Int>(_131117_i)];
	jule::Slice<_1ab0277b7_Token> _132717_generics_tokens = _1ac1ba56e_range(_131117_i,jule::Str("[", 1),jule::Str("]", 1),_130541_tokens);
	if (_132717_generics_tokens != nullptr) {
		_131217_s->_field_generics=this->self->_method_build_generics(_132717_generics_tokens,_132613_error_token);
	}
	if (_131117_i >= _130541_tokens.len()) {
		this->self->_method_push_err(_130541_tokens[static_cast<jule::Int>(_131117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _131217_s;
	}
	jule::Slice<_1ab0277b7_Token> _133617_body_tokens = _1ac1ba56e_range(_131117_i,jule::Str("{", 1),jule::Str("}", 1),_130541_tokens);
	if (_133617_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_131217_s->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _131217_s;
	}
	if (_131117_i < _130541_tokens.len()) {
		this->self->_method_push_err(_130541_tokens[static_cast<jule::Int>(_131117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_131217_s->_field_fields=this->self->_method_build_struct_decl_fields(_133617_body_tokens);
	return _131217_s;
}



inline void _1ac1ba56e_Parser::_method_check_method_receiver(jule::Ref<_1aaeea1c4_FnDecl> _135040_f) {
	if (_135040_f->_field_statically) {
		if ((_135040_f->_field_params.len() > 0LL) && _135040_f->_field_params[0LL]->_method_is_self()) {
			(*this)._method_push_err(_135040_f->_field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>({}));
		}
		return;
	}
	if (_135040_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_135040_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1aaeea1c4_ParamDecl> _136313_param = _135040_f->_field_params[0LL];
	if ((!(_136313_param->_method_is_self()))) {
		(*this)._method_push_err(_135040_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
}



inline jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>> _1ac1ba56e_Parser::_method_build_trait_methods(jule::Slice<_1ab0277b7_Token> _137043_tokens) {
	jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>> _137117_methods = nullptr;
	jule::Slice<jule::Ref<_1ab05bd18_Stmt>> _137217_stms = _1ab05bd18_split_stms(_137043_tokens);
	{
		auto _range_expr = _137217_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab05bd18_Stmt> _1ac1ba56e_st = *_range_begin;
			_iter_begin_4442573792:;
			{
				jule::Slice<_1ab0277b7_Token> _137421_tokens = _1ab060d50_eliminate_comments(_1ac1ba56e_st->_field_tokens);
				if (_137421_tokens.len() == 0LL) {
					goto _iter_next_4442573792;
				}
				jule::Bool _137921_is_pub = false;
				if (_137421_tokens[0LL]._field_id == 21LLU) {
					_137921_is_pub=true;
					if (_137421_tokens.len() == 1LL) {
						this->self->_method_push_err(_137421_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4442573792;
					}
					_137421_tokens=_137421_tokens.slice(1LL);
				}
				jule::Ref<_1aaeea1c4_FnDecl> _138921_f = this->self->_method_build_fn(_137421_tokens,true,true);
				if (jule::real(_138921_f)) {
					if (_138921_f->_method_is_anon()) {
						this->self->_method_push_err(_138921_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_method_receiver(_138921_f);
					if (_138921_f->_field_generics.len() > 0LL) {
						this->self->_method_push_err(_138921_f->_field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>({}));
					}
					_138921_f->_field_public=_137921_is_pub;
					_137117_methods=jule::append(_137117_methods,jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>>({_138921_f}));
				}
			}
			_iter_next_4442573792:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac1ba56e_st = *_range_begin; goto _iter_begin_4442573792; }
			_iter_end_4442573792:;
		}
	}
	return _137117_methods;
}



inline jule::Ref<_1aaeea1c4_TraitDecl> _1ac1ba56e_Parser::_method_build_trait_decl(jule::Slice<_1ab0277b7_Token> _140540_tokens) {
	if (_140540_tokens.len() < 3LL) {
		this->self->_method_push_err(_140540_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_TraitDecl>();
	}
	jule::Ref<_1aaeea1c4_TraitDecl> _141017_t = jule::new_struct<_1aaeea1c4_TraitDecl>(new( std::nothrow ) _1aaeea1c4_TraitDecl(_140540_tokens[1LL],jule::Str(),jule::Bool(),jule::Ref<_1aaeea1c4_CommentGroup>(),jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>>()));
	if (_141017_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_141017_t->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_141017_t->_field_ident=_141017_t->_field_token._field_kind;
	jule::Int _141817_i = 2LL;
	jule::Slice<_1ab0277b7_Token> _141917_body_tokens = _1ac1ba56e_range(_141817_i,jule::Str("{", 1),jule::Str("}", 1),_140540_tokens);
	if (_141917_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_141017_t->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_TraitDecl>();
	}
	if (_141817_i < _140540_tokens.len()) {
		this->self->_method_push_err(_140540_tokens[static_cast<jule::Int>(_141817_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_141017_t->_field_methods=this->self->_method_build_trait_methods(_141917_body_tokens);
	return _141017_t;
}



inline jule::Ref<_1aaeea1c4_FnDecl> _1ac1ba56e_Parser::_method_build_cpp_link_fn(jule::Slice<_1ab0277b7_Token> _143341_tokens) {
	_143341_tokens=_143341_tokens.slice(1LL);
	jule::Ref<_1aaeea1c4_FnDecl> _143517_f = this->self->_method_build_fn(_143341_tokens,false,true);
	if (jule::real(_143517_f)) {
		if (_143517_f->_method_is_anon()) {
			this->self->_method_push_err(_143517_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		_143517_f->_field_cpp_linked=true;
	}
	return _143517_f;
}



inline jule::Ref<_1aaeea1c4_VarDecl> _1ac1ba56e_Parser::_method_build_cpp_link_var(jule::Slice<_1ab0277b7_Token> _144542_tokens) {
	_144542_tokens=_144542_tokens.slice(1LL);
	jule::Ref<_1aaeea1c4_VarDecl> _144717_v = this->self->_method_build_var(_144542_tokens);
	if (jule::real(_144717_v)) {
		_144717_v->_field_cpp_linked=true;
		if (jule::real(_144717_v->_field_expr)) {
			this->self->_method_push_err(_144717_v->_field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>({}));
		}
	}
	return _144717_v;
}



inline jule::Ref<_1aaeea1c4_StructDecl> _1ac1ba56e_Parser::_method_build_cpp_link_struct(jule::Slice<_1ab0277b7_Token> _145745_tokens) {
	_145745_tokens=_145745_tokens.slice(1LL);
	jule::Ref<_1aaeea1c4_StructDecl> _145917_s = this->self->_method_build_struct_decl(_145745_tokens);
	if (jule::real(_145917_s)) {
		_145917_s->_field_cpp_linked=true;
	}
	return _145917_s;
}



inline jule::Ref<_1aaeea1c4_TypeAliasDecl> _1ac1ba56e_Parser::_method_build_cpp_link_type_alias(jule::Slice<_1ab0277b7_Token> _146649_tokens) {
	_146649_tokens=_146649_tokens.slice(1LL);
	jule::Ref<_1aaeea1c4_TypeAliasDecl> _146817_t = this->self->_method_build_type_alias_decl(_146649_tokens);
	if (jule::real(_146817_t)) {
		_146817_t->_field_cpp_linked=true;
	}
	return _146817_t;
}



inline jule::Ref<_1aaeea1c4_UseDecl> _1ac1ba56e_Parser::_method_build_cpp_link_use(jule::Slice<_1ab0277b7_Token> _147542_tokens) {
	if (_147542_tokens.len() == 1LL) {
		this->self->_method_push_err(_147542_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_UseDecl>();
	}
	_147542_tokens=_147542_tokens.slice(1LL);
	
	return this->self->_method_build_use_decl(_147542_tokens,true);
}



inline jule::Any _1ac1ba56e_Parser::_method_build_cpp_link(jule::Slice<_1ab0277b7_Token> _148638_tokens) {
	_1ab0277b7_Token _148717_token = _148638_tokens[0LL];
	if (_148638_tokens.len() == 1LL) {
		this->self->_method_push_err(_148717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	_148717_token=_148638_tokens[1LL];
	{
		auto _match_expr{ _148717_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4442654144; }
		_case_begin_4442654144:;
		{
			return jule::Any(this->self->_method_build_cpp_link_use(_148638_tokens));
		}
		goto _match_end_4442650368;
		_case_end_4442654144:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4442654256; }
		_case_begin_4442654256:;
		{
			return jule::Any(this->self->_method_build_cpp_link_fn(_148638_tokens));
		}
		goto _match_end_4442650368;
		_case_end_4442654256:;
		if (!((9LLU) == _match_expr || (34LLU) == _match_expr)) { goto _case_end_4442654368; }
		_case_begin_4442654368:;
		{
			return jule::Any(this->self->_method_build_cpp_link_var(_148638_tokens));
		}
		goto _match_end_4442650368;
		_case_end_4442654368:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4442655856; }
		_case_begin_4442655856:;
		{
			return jule::Any(this->self->_method_build_cpp_link_struct(_148638_tokens));
		}
		goto _match_end_4442650368;
		_case_end_4442655856:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4442655968; }
		_case_begin_4442655968:;
		{
			return jule::Any(this->self->_method_build_cpp_link_type_alias(_148638_tokens));
		}
		goto _match_end_4442650368;
		_case_end_4442655968:;
		_case_begin_4442650784:;
		{
			this->self->_method_push_err(_148717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4442650368;
		_case_end_4442650784:;
		_match_end_4442650368:;
	}
	return jule::Any(nullptr);
}



inline jule::Ref<_1aaeea1c4_FnDecl> _1ac1ba56e_Parser::_method_get_method(jule::Slice<_1ab0277b7_Token> _151734_tokens) {
	jule::Int _151817_i = 0LL;
	_1ab0277b7_Token _151917_token = _151734_tokens[static_cast<jule::Int>(_151817_i)];
	if (_151917_token._field_id == 38LLU) {
		if ((_151817_i + 1LL) >= _151734_tokens.len()) {
			this->self->_method_push_err(_151917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1aaeea1c4_FnDecl>();
		}
		(_151817_i)++;
		_151917_token=_151734_tokens[static_cast<jule::Int>(_151817_i)];
	}
	if (_151917_token._field_id == 35LLU) {
		if ((_151817_i + 1LL) >= _151734_tokens.len()) {
			this->self->_method_push_err(_151917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1aaeea1c4_FnDecl>();
		}
		(_151817_i)++;
		_151917_token=_151734_tokens[static_cast<jule::Int>(_151817_i)];
	}
	if (_151917_token._field_id != 33LLU) {
		this->self->_method_push_err(_151917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_FnDecl>();
	}
	jule::Ref<_1aaeea1c4_FnDecl> _154317_f = this->self->_method_build_fn(_151734_tokens,true,false);
	if (jule::real(_154317_f) && _154317_f->_method_is_anon()) {
		this->self->_method_push_err(_154317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _154317_f;
}



inline void _1ac1ba56e_Parser::_method_parse_impl_trait(jule::Ref<_1aaeea1c4_Impl> _155040_ipl,jule::Slice<_1ab0277b7_Token> _155056_tokens) {
	jule::Slice<jule::Ref<_1ab05bd18_Stmt>> _155117_stms = _1ab05bd18_split_stms(_155056_tokens);
	{
		auto _range_expr = _155117_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab05bd18_Stmt> _1ac1ba56e_st = *_range_begin;
			_iter_begin_4442685840:;
			{
				jule::Slice<_1ab0277b7_Token> _155321_tokens = _1ac1ba56e_st->_field_tokens;
				_1ab0277b7_Token _155421_token = _155321_tokens[0LL];
				jule::Bool _155521_is_pub = false;
				{
					auto _match_expr{ _155421_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_4442691152; }
					_case_begin_4442691152:;
					{
						goto _iter_next_4442685840;
					}
					goto _match_end_4442690400;
					_case_end_4442691152:;
					if (!((21LLU) == _match_expr)) { goto _case_end_4442691264; }
					_case_begin_4442691264:;
					{
						_155521_is_pub=true;
						if (_155321_tokens.len() == 1LL) {
							this->self->_method_push_err(_155321_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_4442685840;
						}
						_155321_tokens=_155321_tokens.slice(1LL);
						if (_155321_tokens.len() > 0LL) {
							_155421_token=_155321_tokens[0LL];
						}
					}
					goto _match_end_4442690400;
					_case_end_4442691264:;
					_match_end_4442690400:;
				}
				{
					auto _match_expr{ _155421_token._field_id };
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4442692736; }
					_case_begin_4442692736:;
					{
						jule::Ref<_1aaeea1c4_FnDecl> _157725_f = this->self->_method_get_method(_155321_tokens);
						if (jule::real(_157725_f)) {
							_157725_f->_field_public=_155521_is_pub;
							this->self->_method_check_method_receiver(_157725_f);
							_155040_ipl->_field_methods=jule::append(_155040_ipl->_field_methods,jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>>({_157725_f}));
						}
					}
					goto _match_end_4442697440;
					_case_end_4442692736:;
					_case_begin_4442692208:;
					{
						this->self->_method_push_err(_155421_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4442685840;
					}
					goto _match_end_4442697440;
					_case_end_4442692208:;
					_match_end_4442697440:;
				}
			}
			_iter_next_4442685840:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac1ba56e_st = *_range_begin; goto _iter_begin_4442685840; }
			_iter_end_4442685840:;
		}
	}
}



inline void _1ac1ba56e_Parser::_method_parse_impl_struct(jule::Ref<_1aaeea1c4_Impl> _159141_ipl,jule::Slice<_1ab0277b7_Token> _159157_tokens) {
	jule::Slice<jule::Ref<_1ab05bd18_Stmt>> _159217_stms = _1ab05bd18_split_stms(_159157_tokens);
	{
		auto _range_expr = _159217_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab05bd18_Stmt> _1ac1ba56e_st = *_range_begin;
			_iter_begin_4442708400:;
			{
				jule::Slice<_1ab0277b7_Token> _159421_tokens = _1ac1ba56e_st->_field_tokens;
				_1ab0277b7_Token _159521_token = _159421_tokens[0LL];
				jule::Bool _159621_is_pub = false;
				{
					auto _match_expr{ _159521_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_4442713712; }
					_case_begin_4442713712:;
					{
						goto _iter_next_4442708400;
					}
					goto _match_end_4442712960;
					_case_end_4442713712:;
					if (!((21LLU) == _match_expr)) { goto _case_end_4442713824; }
					_case_begin_4442713824:;
					{
						_159621_is_pub=true;
						if (_159421_tokens.len() == 1LL) {
							this->self->_method_push_err(_159421_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_4442708400;
						}
						_159421_tokens=_159421_tokens.slice(1LL);
						if (_159421_tokens.len() > 0LL) {
							_159521_token=_159421_tokens[0LL];
						}
					}
					goto _match_end_4442712960;
					_case_end_4442713824:;
					_match_end_4442712960:;
				}
				{
					auto _match_expr{ _159521_token._field_id };
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4442715296; }
					_case_begin_4442715296:;
					{
						jule::Ref<_1aaeea1c4_FnDecl> _161825_f = this->self->_method_get_method(_159421_tokens);
						if (jule::real(_161825_f)) {
							_161825_f->_field_public=_159621_is_pub;
							this->self->_method_check_method_receiver(_161825_f);
							_159141_ipl->_field_methods=jule::append(_159141_ipl->_field_methods,jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>>({_161825_f}));
						}
					}
					goto _match_end_4442720000;
					_case_end_4442715296:;
					_case_begin_4442714768:;
					{
						this->self->_method_push_err(_159521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4442708400;
					}
					goto _match_end_4442720000;
					_case_end_4442714768:;
					_match_end_4442720000:;
				}
			}
			_iter_next_4442708400:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac1ba56e_st = *_range_begin; goto _iter_begin_4442708400; }
			_iter_end_4442708400:;
		}
	}
}



inline void _1ac1ba56e_Parser::_method_parse_impl_body(jule::Ref<_1aaeea1c4_Impl> _163239_ipl,jule::Slice<_1ab0277b7_Token> _163255_tokens) {
	if (_163239_ipl->_method_is_trait_impl()) {
		this->self->_method_parse_impl_trait(_163239_ipl,_163255_tokens);
		return;
	}
	this->self->_method_parse_impl_struct(_163239_ipl,_163255_tokens);
}



inline jule::Ref<_1aaeea1c4_Impl> _1ac1ba56e_Parser::_method_build_impl(jule::Slice<_1ab0277b7_Token> _164034_tokens) {
	_1ab0277b7_Token _164117_token = _164034_tokens[0LL];
	if (_164034_tokens.len() < 2LL) {
		this->self->_method_push_err(_164117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_Impl>();
	}
	_164117_token=_164034_tokens[1LL];
	if (_164117_token._field_id != 2LLU) {
		this->self->_method_push_err(_164117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_Impl>();
	}
	if (_164034_tokens.len() < 3LL) {
		this->self->_method_push_err(_164117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_Impl>();
	}
	jule::Ref<_1aaeea1c4_Impl> _165617_ipl = jule::new_struct<_1aaeea1c4_Impl>(new( std::nothrow ) _1aaeea1c4_Impl(_164117_token,_1ab0277b7_Token(),jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>>()));
	_164117_token=_164034_tokens[2LL];
	if (_164117_token._field_id != 12LLU) {
		if ((_164117_token._field_id == 3LLU) && (_164117_token._field_kind == jule::Str("{", 1))) {
			std::tie(_165617_ipl->_field_base,_165617_ipl->_field_dest) = std::make_tuple(_165617_ipl->_field_dest,_165617_ipl->_field_base);
			_164034_tokens=_164034_tokens.slice(2LL);
			goto _julec_label_body;
		}
		this->self->_method_push_err(_164117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_Impl>();
	}
	if (_164034_tokens.len() < 4LL) {
		this->self->_method_push_err(_164117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_Impl>();
	}
	_164117_token=_164034_tokens[3LL];
	if (_164117_token._field_id != 2LLU) {
		this->self->_method_push_err(_164117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_Impl>();
	}
	_165617_ipl->_field_dest=_164117_token;
	_164034_tokens=_164034_tokens.slice(4LL);
	_julec_label_body:;
	jule::Int _168617_i = 0LL;
	jule::Slice<_1ab0277b7_Token> _168717_body_tokens = _1ac1ba56e_range(_168617_i,jule::Str("{", 1),jule::Str("}", 1),_164034_tokens);
	if (_168717_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_165617_ipl->_field_base,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1aaeea1c4_Impl>();
	}
	if (_168617_i < _164034_tokens.len()) {
		this->self->_method_push_err(_164034_tokens[static_cast<jule::Int>(_168617_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	this->self->_method_parse_impl_body(_165617_ipl,_168717_body_tokens);
	return _165617_ipl;
}



inline jule::Any _1ac1ba56e_Parser::_method_build_node_data(jule::Slice<_1ab0277b7_Token> _170139_tokens) {
	_1ab0277b7_Token _170217_token = _170139_tokens[0LL];
	{
		auto _match_expr{ _170217_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4442775888; }
		_case_begin_4442775888:;
		{
			
			return jule::Any(this->self->_method_build_use_decl(_170139_tokens,false));
		}
		goto _match_end_4442774224;
		_case_end_4442775888:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4442777440; }
		_case_begin_4442777440:;
		{
			jule::Ref<_1aaeea1c4_FnDecl> _171021_f = this->self->_method_build_fn(_170139_tokens,false,false);
			if (jule::real(_171021_f)) {
				_171021_f->_field_global=true;
				if (_171021_f->_method_is_anon()) {
					this->self->_method_push_err(_171021_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
			}
			return jule::Any(_171021_f);
		}
		goto _match_end_4442774224;
		_case_end_4442777440:;
		if (!((34LLU) == _match_expr || (9LLU) == _match_expr || (36LLU) == _match_expr || (38LLU) == _match_expr)) { goto _case_end_4442777552; }
		_case_begin_4442777552:;
		{
			return jule::Any(this->self->_method_build_var(_170139_tokens));
		}
		goto _match_end_4442774224;
		_case_end_4442777552:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4442775392; }
		_case_begin_4442775392:;
		{
			return jule::Any(this->self->_method_build_type_alias_decl(_170139_tokens));
		}
		goto _match_end_4442774224;
		_case_end_4442775392:;
		if (!((24LLU) == _match_expr)) { goto _case_end_4442775504; }
		_case_begin_4442775504:;
		{
			return jule::Any(this->self->_method_build_enum_decl(_170139_tokens));
		}
		goto _match_end_4442774224;
		_case_end_4442775504:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4442775616; }
		_case_begin_4442775616:;
		{
			return jule::Any(this->self->_method_build_struct_decl(_170139_tokens));
		}
		goto _match_end_4442774224;
		_case_end_4442775616:;
		if (!((29LLU) == _match_expr)) { goto _case_end_4442778304; }
		_case_begin_4442778304:;
		{
			return jule::Any(this->self->_method_build_trait_decl(_170139_tokens));
		}
		goto _match_end_4442774224;
		_case_end_4442778304:;
		if (!((30LLU) == _match_expr)) { goto _case_end_4442778416; }
		_case_begin_4442778416:;
		{
			return jule::Any(this->self->_method_build_impl(_170139_tokens));
		}
		goto _match_end_4442774224;
		_case_end_4442778416:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4442778528; }
		_case_begin_4442778528:;
		{
			return this->self->_method_build_cpp_link(_170139_tokens);
		}
		goto _match_end_4442774224;
		_case_end_4442778528:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4442778640; }
		_case_begin_4442778640:;
		{
			jule::Ref<_1aaeea1c4_Comment> _174721_c = _1ac1ba56e_build_comment(_170217_token);
			this->self->_method_process_comment(_174721_c);
			return jule::Any(_174721_c);
		}
		goto _match_end_4442774224;
		_case_end_4442778640:;
		_case_begin_4442775088:;
		{
			this->self->_method_push_err(_170217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4442774224;
		_case_end_4442775088:;
		_match_end_4442774224:;
	}
}



inline void _1ac1ba56e_Parser::_method_check_comment_group(_1aaeea1c4_Node _175738_node) {
	if ((!(jule::real((*this)._field_comment_group)))) {
		return;
	}
	{
		auto _match_expr{ _175738_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_Comment>>() || _match_expr.type_is<jule::Ref<_1aaeea1c4_Directive>>())) { goto _case_end_4442800240; }
		goto _match_end_4442798800;
		_case_end_4442800240:;
		_case_begin_4442799264:;
		{
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4442798800;
		_case_end_4442799264:;
		_match_end_4442798800:;
	}
}



inline void _1ac1ba56e_Parser::_method_check_directive(_1aaeea1c4_Node _177134_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto _match_expr{ _177134_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_Directive>>() || _match_expr.type_is<jule::Ref<_1aaeea1c4_Comment>>())) { goto _case_end_4442806784; }
		goto _match_end_4442804400;
		_case_end_4442806784:;
		_case_begin_4442803856:;
		{
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4442804400;
		_case_end_4442803856:;
		_match_end_4442804400:;
	}
}



inline void _1ac1ba56e_Parser::_method_apply_meta(_1aaeea1c4_Node _178633_node,jule::Bool _178649_is_pub) {
	{
		auto _match_expr{ _178633_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_VarDecl>>())) { goto _case_end_4442810432; }
		_case_begin_4442810432:;
		{
			jule::Ref<_1aaeea1c4_VarDecl> _178921_v = _178633_node._field_data.operator jule::Ref<_1aaeea1c4_VarDecl>();
			if ((!(jule::real(_178921_v)))) {
				return;
			}
			_178921_v->_field_public=_178649_is_pub;
			_178649_is_pub=false;
			_178921_v->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_178921_v->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4442809696;
		_case_end_4442810432:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_FnDecl>>())) { goto _case_end_4442810544; }
		_case_begin_4442810544:;
		{
			jule::Ref<_1aaeea1c4_FnDecl> _180321_f = _178633_node._field_data.operator jule::Ref<_1aaeea1c4_FnDecl>();
			if ((!(jule::real(_180321_f)))) {
				return;
			}
			_180321_f->_field_public=_178649_is_pub;
			_178649_is_pub=false;
			_180321_f->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_180321_f->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4442809696;
		_case_end_4442810544:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_TypeAliasDecl>>())) { goto _case_end_4442810672; }
		_case_begin_4442810672:;
		{
			jule::Ref<_1aaeea1c4_TypeAliasDecl> _181621_tad = _178633_node._field_data.operator jule::Ref<_1aaeea1c4_TypeAliasDecl>();
			if ((!(jule::real(_181621_tad)))) {
				return;
			}
			_181621_tad->_field_public=_178649_is_pub;
			_178649_is_pub=false;
			_181621_tad->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4442809696;
		_case_end_4442810672:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_EnumDecl>>())) { goto _case_end_4442810800; }
		_case_begin_4442810800:;
		{
			jule::Ref<_1aaeea1c4_EnumDecl> _182621_ed = _178633_node._field_data.operator jule::Ref<_1aaeea1c4_EnumDecl>();
			if ((!(jule::real(_182621_ed)))) {
				return;
			}
			_182621_ed->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_182621_ed->_field_public=_178649_is_pub;
			_178649_is_pub=false;
		}
		goto _match_end_4442809696;
		_case_end_4442810800:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_StructDecl>>())) { goto _case_end_4442810928; }
		_case_begin_4442810928:;
		{
			jule::Ref<_1aaeea1c4_StructDecl> _183621_sd = _178633_node._field_data.operator jule::Ref<_1aaeea1c4_StructDecl>();
			if ((!(jule::real(_183621_sd)))) {
				return;
			}
			_183621_sd->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_183621_sd->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_183621_sd->_field_public=_178649_is_pub;
			_178649_is_pub=false;
		}
		goto _match_end_4442809696;
		_case_end_4442810928:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_TraitDecl>>())) { goto _case_end_4442811056; }
		_case_begin_4442811056:;
		{
			jule::Ref<_1aaeea1c4_TraitDecl> _184821_td = _178633_node._field_data.operator jule::Ref<_1aaeea1c4_TraitDecl>();
			if ((!(jule::real(_184821_td)))) {
				return;
			}
			_184821_td->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_184821_td->_field_public=_178649_is_pub;
			_178649_is_pub=false;
		}
		goto _match_end_4442809696;
		_case_end_4442811056:;
		_match_end_4442809696:;
	}
	if (_178649_is_pub) {
		(*this)._method_push_err(_178633_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>({}));
	}
}



inline void _1ac1ba56e_Parser::_method_check_use_decl(_1aaeea1c4_Node _186233_node) {
	{
		auto _match_expr{ _186233_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_UseDecl>>())) { goto _case_end_4442863920; }
		goto _match_end_4442862240;
		_case_end_4442863920:;
		_case_begin_4442862896:;
		{
			return;
		}
		goto _match_end_4442862240;
		_case_end_4442862896:;
		_match_end_4442862240:;
	}
	if ((*this)._field_ast->_field_decls.len() > 0LL) {
		(*this)._method_push_err(_186233_node._field_token,jule::Str("use declarations must declared before other declarations", 56),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>({}));
	}
}



inline std::tuple<jule::Bool,jule::Any> _1ac1ba56e_Parser::_method_build_general_scope_node_data(jule::Slice<_1ab0277b7_Token> _187753_st) {
	jule::Bool _187768_is_pub = jule::Bool();
	jule::Any _187782_data = jule::Any();
	if (_187753_st[0LL]._field_id == 21LLU) {
		_187768_is_pub=true;
		_187753_st=_187753_st.slice(1LL);
		if (_187753_st.len() == 0LL) {
			this->self->_method_push_err(_187753_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return std::make_tuple(_187768_is_pub,_187782_data);
		}
	}
	_187782_data=this->self->_method_build_node_data(_187753_st);
	_187768_is_pub = _187768_is_pub;
	_187782_data = _187782_data;
	return std::make_tuple(_187768_is_pub,_187782_data);
}



inline _1aaeea1c4_Node _1ac1ba56e_Parser::_method_parse_node(jule::Slice<_1ab0277b7_Token> _189234_st) {
	_1aaeea1c4_Node _189317_node = _1aaeea1c4_Node(_189234_st[0LL],jule::Any());
	jule::Bool _189714_is_pub;
	jule::Any _189726_data;
	std::tie(_189714_is_pub,_189726_data) = this->self->_method_build_general_scope_node_data(_189234_st);
	if (_189726_data == nullptr) {
		return _189317_node;
	}
	_189317_node._field_data=_189726_data;
	this->self->_method_apply_meta(_189317_node,_189714_is_pub);
	this->self->_method_check_comment_group(_189317_node);
	this->self->_method_check_directive(_189317_node);
	this->self->_method_check_use_decl(_189317_node);
	return _189317_node;
}



inline void _1ac1ba56e_Parser::_method_append_node(jule::Slice<_1ab0277b7_Token> _191135_st) {
	if (_191135_st.len() == 0LL) {
		return;
	}
	_1aaeea1c4_Node _191617_node = this->self->_method_parse_node(_191135_st);
	if ((_191617_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (!((_191617_node._method_is_use_decl()))) { goto _case_end_4442896144; }
		_case_begin_4442896144:;
		{
			this->self->_field_ast->_field_use_decls=jule::append(this->self->_field_ast->_field_use_decls,jule::Slice<jule::Ref<_1aaeea1c4_UseDecl>>({_191617_node._field_data.operator jule::Ref<_1aaeea1c4_UseDecl>()}));
		}
		goto _match_end_4442894800;
		_case_end_4442896144:;
		if (!((_191617_node._method_is_decl()))) { goto _case_end_4442897856; }
		_case_begin_4442897856:;
		{
			this->self->_field_ast->_field_decls=jule::append(this->self->_field_ast->_field_decls,jule::Slice<_1aaeea1c4_Node>({_191617_node}));
		}
		goto _match_end_4442894800;
		_case_end_4442897856:;
		if (!((_191617_node._method_is_comment()))) { goto _case_end_4442895632; }
		_case_begin_4442895632:;
		{
			jule::Ref<_1aaeea1c4_Comment> _193121_c = _191617_node._field_data.operator jule::Ref<_1aaeea1c4_Comment>();
			this->self->_field_ast->_field_comments=jule::append(this->self->_field_ast->_field_comments,jule::Slice<jule::Ref<_1aaeea1c4_Comment>>({_193121_c}));
		}
		goto _match_end_4442894800;
		_case_end_4442895632:;
		if (!((_191617_node._method_is_impl()))) { goto _case_end_4442895744; }
		_case_begin_4442895744:;
		{
			this->self->_field_ast->_field_impls=jule::append(this->self->_field_ast->_field_impls,jule::Slice<jule::Ref<_1aaeea1c4_Impl>>({_191617_node._field_data.operator jule::Ref<_1aaeea1c4_Impl>()}));
		}
		goto _match_end_4442894800;
		_case_end_4442895744:;
		_case_begin_4442895328:;
		{
			this->self->_method_push_err(_191617_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4442894800;
		_case_end_4442895328:;
		_match_end_4442894800:;
	}
}



inline void _1ac1ba56e_Parser::_method_remove_range(jule::Int _194231_i,jule::Str _194239_kind,jule::Slice<_1ab0277b7_Token>& _194251_tokens,jule::Slice<jule::Int>& _194273_ranges) {
	jule::Str _194313_close = _1ac1ba56e_get_close_kind_of_brace(_194239_kind);
	_iter_begin_4442889136:;
	if (!(_194231_i >= 0LL)) { goto _iter_end_4442889136; }
	{
		_1ab0277b7_Token _194517_tok = _194251_tokens[static_cast<jule::Int>(_194273_ranges[static_cast<jule::Int>(_194231_i)])];
		if (_194517_tok._field_kind != _194313_close) {
			goto _iter_next_4442889136;
		}
		_194273_ranges=jule::append(_194273_ranges.slice(0LL,static_cast<jule::Int>(_194231_i)),_194273_ranges.slice(static_cast<jule::Int>(_194231_i + 1LL)));
		goto _iter_end_4442889136;
	}
	_iter_next_4442889136:;
	(_194231_i)--;
	goto _iter_begin_4442889136;
	_iter_end_4442889136:;
}



inline void _1ac1ba56e_Parser::_method_push_wrong_order_close_err(_1ab0277b7_Token _195545_t,jule::Slice<_1ab0277b7_Token>& _195556_tokens,jule::Slice<jule::Int>& _195574_ranges) {
	{
		auto _match_expr{ _195556_tokens[static_cast<jule::Int>(_195574_ranges[static_cast<jule::Int>(_195574_ranges.len() - 1LL)])]._field_kind };
		if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4442928784; }
		_case_begin_4442928784:;
		{
			(*this)._method_push_err(_195545_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4442926592;
		_case_end_4442928784:;
		if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4442928896; }
		_case_begin_4442928896:;
		{
			(*this)._method_push_err(_195545_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4442926592;
		_case_end_4442928896:;
		if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4442929008; }
		_case_begin_4442929008:;
		{
			(*this)._method_push_err(_195545_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4442926592;
		_case_end_4442929008:;
		_match_end_4442926592:;
	}
}



inline void _1ac1ba56e_Parser::_method_push_range_close(_1ab0277b7_Token _196335_t,jule::Str _196345_left,jule::Slice<_1ab0277b7_Token>& _196357_tokens,jule::Slice<jule::Int>& _196379_ranges) {
	jule::I64 _196413_n = _196379_ranges.len();
	if (_196413_n == 0LL) {
		{
			auto _match_expr{ _196335_t._field_kind };
			if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4442941536; }
			_case_begin_4442941536:;
			{
				(*this)._method_push_err(_196335_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4442940784;
			_case_end_4442941536:;
			if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4442941648; }
			_case_begin_4442941648:;
			{
				(*this)._method_push_err(_196335_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4442940784;
			_case_end_4442941648:;
			if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4442941776; }
			_case_begin_4442941776:;
			{
				(*this)._method_push_err(_196335_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4442940784;
			_case_end_4442941776:;
			_match_end_4442940784:;
		}
		return;
	} else if (_196357_tokens[static_cast<jule::Int>(_196379_ranges[static_cast<jule::Int>(_196413_n - 1LL)])]._field_kind != _196345_left) {
		(*this)._method_push_wrong_order_close_err(_196335_t,_196357_tokens,_196379_ranges);
	}
	(*this)._method_remove_range(static_cast<jule::I64>(_196413_n - 1LL),_196335_t._field_kind,_196357_tokens,_196379_ranges);
}



inline void _1ac1ba56e_Parser::_method_check_ranges(jule::Slice<_1ab0277b7_Token>& _197832_tokens) {
	jule::Slice<jule::Int> _197917_ranges = nullptr;
	{
		auto _range_expr = _197832_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac1ba56e_i = 0;
			_1ab0277b7_Token _1ac1ba56e_token = *_range_begin;
			_iter_begin_4442954272:;
			{
				if (_1ac1ba56e_token._field_id != 3LLU) {
					goto _iter_next_4442954272;
				}
				{
					auto _match_expr{ _1ac1ba56e_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4442957536; }
					_case_begin_4442957536:;
					{
						_197917_ranges=jule::append(_197917_ranges,jule::Slice<jule::Int>({_1ac1ba56e_i}));
					}
					goto _match_end_4442957760;
					_case_end_4442957536:;
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4442958032; }
					_case_begin_4442958032:;
					{
						(*this)._method_push_range_close(_1ac1ba56e_token,jule::Str("(", 1),_197832_tokens,_197917_ranges);
					}
					goto _match_end_4442957760;
					_case_end_4442958032:;
					if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4442958144; }
					_case_begin_4442958144:;
					{
						(*this)._method_push_range_close(_1ac1ba56e_token,jule::Str("{", 1),_197832_tokens,_197917_ranges);
					}
					goto _match_end_4442957760;
					_case_end_4442958144:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4442958256; }
					_case_begin_4442958256:;
					{
						(*this)._method_push_range_close(_1ac1ba56e_token,jule::Str("[", 1),_197832_tokens,_197917_ranges);
					}
					goto _match_end_4442957760;
					_case_end_4442958256:;
					_match_end_4442957760:;
				}
			}
			_iter_next_4442954272:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac1ba56e_i; _1ac1ba56e_token = *_range_begin; goto _iter_begin_4442954272; }
			_iter_end_4442954272:;
		}
	}
	{
		auto _range_expr = _197917_ranges;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac1ba56e_i = *_range_begin;
			_iter_begin_4442960608:;
			{
				_1ab0277b7_Token _200417_token = _197832_tokens[static_cast<jule::Int>(_1ac1ba56e_i)];
				{
					auto _match_expr{ _200417_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4442967360; }
					_case_begin_4442967360:;
					{
						(*this)._method_push_err(_200417_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4442966208;
					_case_end_4442967360:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4442967472; }
					_case_begin_4442967472:;
					{
						(*this)._method_push_err(_200417_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4442966208;
					_case_end_4442967472:;
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4442967584; }
					_case_begin_4442967584:;
					{
						(*this)._method_push_err(_200417_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4442966208;
					_case_end_4442967584:;
					_match_end_4442966208:;
				}
			}
			_iter_next_4442960608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac1ba56e_i = *_range_begin; goto _iter_begin_4442960608; }
			_iter_end_4442960608:;
		}
	}
}



inline void _1ac1ba56e_Parser::_method_parse(jule::Ref<_1ab029324_File> _201329_f) {
	this->self->_field_ast=jule::new_struct<_1ab026d8d_Ast>(new( std::nothrow ) _1ab026d8d_Ast(_201329_f,jule::Slice<jule::Ref<_1aaeea1c4_Directive>>(),jule::Slice<jule::Ref<_1aaeea1c4_UseDecl>>(),jule::Slice<jule::Ref<_1aaeea1c4_Impl>>(),jule::Slice<jule::Ref<_1aaeea1c4_Comment>>(),jule::Slice<_1aaeea1c4_Node>()));
	jule::Slice<_1ab0277b7_Token> _201817_tokens = _201329_f->_method_tokens();
	this->self->_method_check_ranges(_201817_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_1ab05bd18_Stmt>> _202417_stms = _1ab05bd18_split_stms(_201817_tokens);
	jule::Int _202717_i = 0LL;
	_iter_begin_4442973472:;
	if (!(_202717_i < _202417_stms.len())) { goto _iter_end_4442973472; }
	{
		jule::Ref<_1ab05bd18_Stmt> _202921_st = _202417_stms[static_cast<jule::Int>(_202717_i)];
		if (_202921_st->_field_tokens.len() == 0LL) {
			return;
		}
		jule::Any _203425_data;
		std::tie(std::ignore,_203425_data) = this->self->_method_build_general_scope_node_data(_202921_st->_field_tokens);
		if (_203425_data == nullptr) {
			goto _iter_end_4442973472;
		}
		if (this->self->_method_stopped()) {
			return;
		}
		_1aaeea1c4_Node _204321_node = _1aaeea1c4_Node(_1ab0277b7_Token(),_203425_data);
		if (_204321_node._method_is_comment()) {
			jule::Ref<_1aaeea1c4_Directive> _204525_d = this->self->_method_get_directive(_204321_node._field_data.operator jule::Ref<_1aaeea1c4_Comment>());
			if (jule::real(_204525_d) && _1b6b6baa4_is_top_directive(_204525_d->_field_tag)) {
				this->self->_field_ast->_field_top_directives=jule::append(this->self->_field_ast->_field_top_directives,jule::Slice<jule::Ref<_1aaeea1c4_Directive>>({_204525_d}));
			}
		} else {
			goto _iter_end_4442973472;
		}
	}
	_iter_next_4442973472:;
	(_202717_i)++;
	goto _iter_begin_4442973472;
	_iter_end_4442973472:;
	this->self->_field_errors=nullptr;
	_iter_begin_4442987936:;
	if (!(_202717_i < _202417_stms.len())) { goto _iter_end_4442987936; }
	{
		jule::Ref<_1ab05bd18_Stmt> _205821_st = _202417_stms[static_cast<jule::Int>(_202717_i)];
		this->self->_method_append_node(_205821_st->_field_tokens);
		if (this->self->_method_stopped()) {
			goto _iter_end_4442987936;
		}
	}
	_iter_next_4442987936:;
	(_202717_i)++;
	goto _iter_begin_4442987936;
	_iter_end_4442987936:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac1ba56e_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1ac308844_TypeBuilder::_method_push_err(_1ab0277b7_Token _7827_token,jule::Str _7841_fmt) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7827_token,_7841_fmt,jule::Slice<jule::Any>({}));
	}
}



inline void _1ac308844_TypeBuilder::_method_push_suggestion(jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_suggestion(_8534_fmt,_8547_args);
	}
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_TypeBuilder::_method_build_prim(void) {
	jule::Ref<_1aaeea1c4_TypeDecl> _9217_t = _1ac308844_build_prim_type((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]);
	((*((*this)._field_i)))++;
	return _9217_t;
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_TypeBuilder::_method_build_namespace(void) {
	jule::Ref<_1aaeea1c4_TypeDecl> _9817_t = jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Any()));
	jule::Ref<_1aaeea1c4_NamespaceTypeDecl> _10217_nst = jule::new_struct<_1aaeea1c4_NamespaceTypeDecl>(new( std::nothrow ) _1aaeea1c4_NamespaceTypeDecl());
	jule::Int _10317_n = 0LL;
	_iter_begin_4443017888:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_4443017888; }
	{
		_1ab0277b7_Token _10521_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if (jule::mod(_10317_n,2LL) == 0LL) {
			if (_10521_token._field_id != 2LLU) {
				(*this)._method_push_err(_10521_token,jule::Str("invalid syntax", 14));
				(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			}
			_10217_nst->_field_idents=jule::append(_10217_nst->_field_idents,jule::Slice<_1ab0277b7_Token>({_10521_token}));
		} else if (_10521_token._field_id != 23LLU) {
			goto _iter_end_4443017888;
		}
		(_10317_n)++;
	}
	_iter_next_4443017888:;
	((*((*this)._field_i)))++;
	goto _iter_begin_4443017888;
	_iter_end_4443017888:;
	_10217_nst->_field_idents=_10217_nst->_field_idents.slice(0LL,static_cast<jule::Int>(_10217_nst->_field_idents.len() - 1LL));
	((*((*this)._field_i)))--;
	_10217_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ref<_1aaeea1c4_IdentTypeDecl>();
	_9817_t->_field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>> _1ac308844_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_1ab0277b7_Token _13113_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_13113_token._field_id != 3LLU) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _13617_parts = (*this)._method_ident_generics();
	if (_13617_parts.len() == 0LL) {
		(*this)._method_push_err(_13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>> _14217_types = jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_13617_parts.len())));
	{
		auto _range_expr = _13617_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac308844_i = 0;
			jule::Slice<_1ab0277b7_Token> _1ac308844_part = *_range_begin;
			_iter_begin_4519407488:;
			{
				jule::Int _14421_j = 0LL;
				jule::Ref<_1aaeea1c4_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = (*this)._field_p->_method_build_type(_1ac308844_part,(&(_14421_j)),true);
				if (_14421_j < _1ac308844_part.len()) {
					(*this)._method_push_err(_1ac308844_part[static_cast<jule::Int>(_14421_j)],jule::Str("invalid syntax", 14));
				}
				_14217_types[static_cast<jule::Int>(_1ac308844_i)]=_14522_t;
			}
			_iter_next_4519407488:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac308844_i; _1ac308844_part = *_range_begin; goto _iter_begin_4519407488; }
			_iter_end_4519407488:;
		}
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_1ab0277b7_Token>> _1ac308844_TypeBuilder::_method_ident_generics(void) {
	jule::Int _15513_first = (*((*this)._field_i));
	jule::Int _15617_range_n = 0LL;
	_iter_begin_4519418384:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_4519418384; }
	{
		_1ab0277b7_Token _15817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if (_15817_token._field_id == 3LLU) {
			{
				auto _match_expr{ _15817_token._field_kind };
				if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4519440736; }
				_case_begin_4519440736:;
				{
					(_15617_range_n)++;
				}
				goto _match_end_4519417376;
				_case_end_4519440736:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4519441392; }
				_case_begin_4519441392:;
				{
					(_15617_range_n)--;
				}
				goto _match_end_4519417376;
				_case_end_4519441392:;
				_match_end_4519417376:;
			}
		}
		if (_15617_range_n == 0LL) {
			((*((*this)._field_i)))++;
			goto _iter_end_4519418384;
		}
	}
	_iter_next_4519418384:;
	((*((*this)._field_i)))++;
	goto _iter_begin_4519418384;
	_iter_end_4519418384:;
	jule::Slice<_1ab0277b7_Token> _17017_tokens = (*this)._field_tokens.slice(static_cast<jule::Int>(_15513_first + 1LL),static_cast<jule::Int>((*((*this)._field_i)) - 1LL));
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _17118_parts;
	jule::Slice<_1d068165a_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _1ac1ba56e_parts(_17017_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_1ab0277b7_Token _18217_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_1aaeea1c4_IdentTypeDecl> _18317_it = jule::new_struct<_1aaeea1c4_IdentTypeDecl>(new( std::nothrow ) _1aaeea1c4_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_18317_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_18217_token,jule::Any(_18317_it)));
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Str("invalid syntax", 14));
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	}
	(*((*this)._field_i))+=2LL;
	jule::Ref<_1aaeea1c4_TypeDecl> _20217_t = (*this)._method_build_ident();
	_20217_t->_field_kind.operator jule::Ref<_1aaeea1c4_IdentTypeDecl>()->_field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_TypeBuilder::_method_build_fn(void) {
	_1ab0277b7_Token _20817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_1aaeea1c4_FnDecl> _20917_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false);
	if ((!(jule::real(_20917_f)))) {
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	}
	if ((!(_20917_f->_method_is_anon()))) {
		(*this)._method_push_err(_20917_f->_field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_20817_token,jule::Any(_20917_f)));
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_TypeBuilder::_method_build_ptr(void) {
	_1ab0277b7_Token _22317_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_22317_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1aaeea1c4_PtrTypeDecl>(new( std::nothrow ) _1aaeea1c4_PtrTypeDecl(jule::new_ref<_1aaeea1c4_TypeDecl>())))));
	}
	jule::Ref<_1aaeea1c4_TypeDecl> _24017_elem = (*this)._method_step();
	if ((!(jule::real(_24017_elem)))) {
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	}
	return jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1aaeea1c4_PtrTypeDecl>(new( std::nothrow ) _1aaeea1c4_PtrTypeDecl(_24017_elem)))));
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_TypeBuilder::_method_build_ref(void) {
	_1ab0277b7_Token _25417_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_25417_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	jule::Ref<_1aaeea1c4_TypeDecl> _26117_elem = (*this)._method_step();
	if ((!(jule::real(_26117_elem)))) {
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	}
	return jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_25417_token,jule::Any(jule::new_struct<_1aaeea1c4_RefTypeDecl>(new( std::nothrow ) _1aaeea1c4_RefTypeDecl(_26117_elem)))));
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_TypeBuilder::_method_build_op(void) {
	_1ab0277b7_Token _27517_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto _match_expr{ _27517_token._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4519585312; }
		_case_begin_4519585312:;
		{
			return (*this)._method_build_ptr();
		}
		goto _match_end_4520281264;
		_case_end_4519585312:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4519585104; }
		_case_begin_4519585104:;
		{
			return (*this)._method_build_ref();
		}
		goto _match_end_4520281264;
		_case_end_4519585104:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4519379760; }
		_case_begin_4519379760:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("references cannot reference to another reference", 48));
			return (*this)._method_build_ref();
		}
		goto _match_end_4520281264;
		_case_end_4519379760:;
		_case_begin_4519606048:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1aaeea1c4_TypeDecl>();
		}
		goto _match_end_4520281264;
		_case_end_4519606048:;
		_match_end_4520281264:;
	}
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_TypeBuilder::_method_build_slc(void) {
	_1ab0277b7_Token _29417_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	((*((*this)._field_i)))++;
	jule::Ref<_1aaeea1c4_TypeDecl> _29617_elem = (*this)._method_step();
	if ((!(jule::real(_29617_elem)))) {
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	}
	return jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_29417_token,jule::Any(jule::new_struct<_1aaeea1c4_SlcTypeDecl>(new( std::nothrow ) _1aaeea1c4_SlcTypeDecl(_29617_elem)))));
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) - 1LL)],jule::Str("data-type missing", 17));
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	}
	jule::Int _31713_expr_delta = (*((*this)._field_i));
	jule::Ref<_1aaeea1c4_TypeDecl> _31917_elem = (*this)._method_step();
	if ((!(jule::real(_31917_elem)))) {
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	}
	jule::Ref<_1aaeea1c4_ArrTypeDecl> _32417_arrt = jule::new_struct<_1aaeea1c4_ArrTypeDecl>(new( std::nothrow ) _1aaeea1c4_ArrTypeDecl(_31917_elem,jule::Ref<_1aaeea1c4_Expr>()));
	jule::Slice<_1ab0277b7_Token> _32821_expr_tokens;
	std::tie(std::ignore,_32821_expr_tokens) = _1ac1ba56e_range_last((*this)._field_tokens.slice(0LL,static_cast<jule::Int>(_31713_expr_delta)));
	_32821_expr_tokens=_32821_expr_tokens.slice(1LL,static_cast<jule::Int>(_32821_expr_tokens.len() - 1LL));
	_1ab0277b7_Token _33017_token = _32821_expr_tokens[0LL];
	if (((_32821_expr_tokens.len() == 1LL) && (_33017_token._field_id == 7LLU)) && (_33017_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32417_arrt->_field_size=(*this)._field_p->_method_build_expr(_32821_expr_tokens);
	}
	return jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_33017_token,jule::Any(_32417_arrt)));
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_TypeBuilder::_method_build_map(jule::Int _34328_colon,jule::Slice<_1ab0277b7_Token> _34344_tokens) {
	_1ab0277b7_Token _34417_colon_token = (*this)._field_tokens[static_cast<jule::Int>(_34328_colon)];
	if ((_34328_colon == 0LL) || ((_34328_colon + 1LL) >= _34344_tokens.len())) {
		(*this)._method_push_err(_34417_colon_token,jule::Str("data-type missing", 17));
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	}
	jule::Slice<_1ab0277b7_Token> _34917_key_tokens = _34344_tokens.slice(0LL,static_cast<jule::Int>(_34328_colon));
	jule::Slice<_1ab0277b7_Token> _35017_val_tokens = _34344_tokens.slice(static_cast<jule::Int>(_34328_colon + 1LL));
	jule::Ref<_1aaeea1c4_MapTypeDecl> _35117_mapt = jule::new_struct<_1aaeea1c4_MapTypeDecl>(new( std::nothrow ) _1aaeea1c4_MapTypeDecl());
	jule::Int _35317_j = 0LL;
	jule::Ref<_1aaeea1c4_TypeDecl> _35418_keyt;
	jule::Bool _35428_ok;
	std::tie(_35418_keyt,_35428_ok) = (*this)._field_p->_method_build_type(_34917_key_tokens,(&(_35317_j)),(*this)._field_err);
	if ((!(_35428_ok))) {
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	} else if (_35317_j < _34917_key_tokens.len()) {
		(*this)._method_push_err(_34917_key_tokens[static_cast<jule::Int>(_35317_j)],jule::Str("invalid syntax", 14));
	}
	_35117_mapt->_field_key=_35418_keyt;
	_35317_j=0LL;
	jule::Ref<_1aaeea1c4_TypeDecl> _36318_valt;
	std::tie(_36318_valt,_35428_ok) = (*this)._field_p->_method_build_type(_35017_val_tokens,(&(_35317_j)),(*this)._field_err);
	if ((!(_35428_ok))) {
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	} else if (_35317_j < _35017_val_tokens.len()) {
		(*this)._method_push_err(_35017_val_tokens[static_cast<jule::Int>(_35317_j)],jule::Str("invalid syntax", 14));
	}
	_35117_mapt->_field_val=_36318_valt;
	return jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_34417_colon_token,jule::Any(_35117_mapt)));
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_TypeBuilder::_method_build_enumerable(void) {
	_1ab0277b7_Token _37817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_37817_token._field_id != 3LLU)) || (_37817_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_37817_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1aaeea1c4_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	_37817_token=(*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_37817_token._field_id == 3LLU) && (_37817_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_1ab0277b7_Token> _39218_map_tokens;
	jule::Int _39230_colon;
	std::tie(_39218_map_tokens,_39230_colon) = _1ac308844_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_39230_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_39230_colon,_39218_map_tokens);
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_TypeBuilder::_method_step(void) {
	_1ab0277b7_Token _40113_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto _match_expr{ _40113_token._field_id };
		if (!((1LLU) == _match_expr)) { goto _case_end_4378929216; }
		_case_begin_4378929216:;
		{
			return (*this)._method_build_prim();
		}
		goto _match_end_4378923680;
		_case_end_4378929216:;
		if (!((2LLU) == _match_expr)) { goto _case_end_4378925952; }
		_case_begin_4378925952:;
		{
			return (*this)._method_build_ident();
		}
		goto _match_end_4378923680;
		_case_end_4378925952:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4378926064; }
		_case_begin_4378926064:;
		{
			return (*this)._method_build_cpp_link();
		}
		goto _match_end_4378923680;
		_case_end_4378926064:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4378926176; }
		_case_begin_4378926176:;
		{
			return (*this)._method_build_fn();
		}
		goto _match_end_4378923680;
		_case_end_4378926176:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4378928368; }
		_case_begin_4378928368:;
		{
			return (*this)._method_build_op();
		}
		goto _match_end_4378923680;
		_case_end_4378928368:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4378928480; }
		_case_begin_4378928480:;
		{
			return (*this)._method_build_enumerable();
		}
		goto _match_end_4378923680;
		_case_end_4378928480:;
		_case_begin_4378925648:;
		{
			((*((*this)._field_i)))++;
			(*this)._method_push_err(_40113_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1aaeea1c4_TypeDecl>();
		}
		goto _match_end_4378923680;
		_case_end_4378925648:;
		_match_end_4378923680:;
	}
}



inline std::tuple<jule::Ref<_1aaeea1c4_TypeDecl>,jule::Bool> _1ac308844_TypeBuilder::_method_build(void) {
	jule::Bool _43044_ok = jule::Bool();
	jule::Ref<_1aaeea1c4_TypeDecl> _43117_root = (*this)._method_step();
	if ((!(jule::real(_43117_root)))) {
		_43044_ok = false;
		return std::make_tuple(_1ac308844_build_void_type(),_43044_ok);
	}
	_43044_ok = true;
	return std::make_tuple(_43117_root,_43044_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac308844_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ad6d5cec_Const> _1ad6d5cec_Const::_static_method_new_i64(jule::I64 _1327_x) {
	return jule::new_struct<_1ad6d5cec_Const>(new( std::nothrow ) _1ad6d5cec_Const(jule::Any(_1327_x)));
}



inline jule::Ref<_1ad6d5cec_Const> _1ad6d5cec_Const::_static_method_new_u64(jule::U64 _1527_x) {
	return jule::new_struct<_1ad6d5cec_Const>(new( std::nothrow ) _1ad6d5cec_Const(jule::Any(_1527_x)));
}



inline jule::Ref<_1ad6d5cec_Const> _1ad6d5cec_Const::_static_method_new_bool(jule::Bool _1728_x) {
	return jule::new_struct<_1ad6d5cec_Const>(new( std::nothrow ) _1ad6d5cec_Const(jule::Any(_1728_x)));
}



inline jule::Ref<_1ad6d5cec_Const> _1ad6d5cec_Const::_static_method_new_str(jule::Str _1927_x) {
	return jule::new_struct<_1ad6d5cec_Const>(new( std::nothrow ) _1ad6d5cec_Const(jule::Any(_1927_x)));
}



inline jule::Ref<_1ad6d5cec_Const> _1ad6d5cec_Const::_static_method_new_f64(jule::F64 _2127_x) {
	return jule::new_struct<_1ad6d5cec_Const>(new( std::nothrow ) _1ad6d5cec_Const(jule::Any(_2127_x)));
}



inline jule::Ref<_1ad6d5cec_Const> _1ad6d5cec_Const::_static_method_new_nil(void) {
	return jule::new_struct<_1ad6d5cec_Const>(new( std::nothrow ) _1ad6d5cec_Const(jule::Any(nullptr)));
}



inline jule::I64 _1ad6d5cec_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



inline jule::U64 _1ad6d5cec_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



inline jule::Bool _1ad6d5cec_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _1ad6d5cec_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str("", 0);
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _1ad6d5cec_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



inline jule::I64 _1ad6d5cec_Const::_method_as_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4379025600; }
		_case_begin_4379025600:;
		{
			return (*this)._field_data.operator jule::I64();
		}
		goto _match_end_4379023072;
		_case_end_4379025600:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4379025168; }
		_case_begin_4379025168:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4379023072;
		_case_end_4379025168:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4379025280; }
		_case_begin_4379025280:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4379023072;
		_case_end_4379025280:;
		_case_begin_4379023712:;
		{
			return 0LL;
		}
		goto _match_end_4379023072;
		_case_end_4379023712:;
		_match_end_4379023072:;
	}
}



inline jule::U64 _1ad6d5cec_Const::_method_as_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4379031968; }
		_case_begin_4379031968:;
		{
			return (*this)._field_data.operator jule::U64();
		}
		goto _match_end_4379029312;
		_case_end_4379031968:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4379031536; }
		_case_begin_4379031536:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4379029312;
		_case_end_4379031536:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4379031648; }
		_case_begin_4379031648:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4379029312;
		_case_end_4379031648:;
		_case_begin_4379025984:;
		{
			return 0LL;
		}
		goto _match_end_4379029312;
		_case_end_4379025984:;
		_match_end_4379029312:;
	}
}



inline jule::F64 _1ad6d5cec_Const::_method_as_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4379039152; }
		_case_begin_4379039152:;
		{
			return (*this)._field_data.operator jule::F64();
		}
		goto _match_end_4379036624;
		_case_end_4379039152:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4379038720; }
		_case_begin_4379038720:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4379036624;
		_case_end_4379038720:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4379038832; }
		_case_begin_4379038832:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4379036624;
		_case_end_4379038832:;
		_case_begin_4379037280:;
		{
			return 0LL;
		}
		goto _match_end_4379036624;
		_case_end_4379037280:;
		_match_end_4379036624:;
	}
}



inline void _1ad6d5cec_Const::_method_set_i64(jule::I64 _14030_x) {
	(*this)._field_data=jule::Any(_14030_x);
}



inline void _1ad6d5cec_Const::_method_set_u64(jule::U64 _14230_x) {
	(*this)._field_data=jule::Any(_14230_x);
}



inline void _1ad6d5cec_Const::_method_set_bool(jule::Bool _14431_x) {
	(*this)._field_data=jule::Any(_14431_x);
}



inline void _1ad6d5cec_Const::_method_set_str(jule::Str _14630_x) {
	(*this)._field_data=jule::Any(_14630_x);
}



inline void _1ad6d5cec_Const::_method_set_f64(jule::F64 _14830_x) {
	(*this)._field_data=jule::Any(_14830_x);
}



inline void _1ad6d5cec_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline void _1ad6d5cec_Const::_method_set_by_type(jule::F64 _15230_v,_1ad6d5cec_Const _15238_x) {
	{
		if (!((_15238_x._method_is_f64()))) { goto _case_end_4379062496; }
		_case_begin_4379062496:;
		{
			(*this)._method_set_f64(_15230_v);
		}
		goto _match_end_4379062224;
		_case_end_4379062496:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4379062624; }
		_case_begin_4379062624:;
		{
			(*this)._method_set_f64(_15230_v);
		}
		goto _match_end_4379062224;
		_case_end_4379062624:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4379062752; }
		_case_begin_4379062752:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>(_15230_v));
		}
		goto _match_end_4379062224;
		_case_end_4379062752:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4379062880; }
		_case_begin_4379062880:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>(_15230_v));
		}
		goto _match_end_4379062224;
		_case_end_4379062880:;
		_match_end_4379062224:;
	}
}



inline jule::Bool _1ad6d5cec_Const::_method_is_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4379071360; }
		_case_begin_4379071360:;
		{
			return true;
		}
		goto _match_end_4379061744;
		_case_end_4379071360:;
		_case_begin_4379070912:;
		{
			return false;
		}
		goto _match_end_4379061744;
		_case_end_4379070912:;
		_match_end_4379061744:;
	}
}



inline jule::Bool _1ad6d5cec_Const::_method_is_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4379073984; }
		_case_begin_4379073984:;
		{
			return true;
		}
		goto _match_end_4379072768;
		_case_end_4379073984:;
		_case_begin_4379073552:;
		{
			return false;
		}
		goto _match_end_4379072768;
		_case_end_4379073552:;
		_match_end_4379072768:;
	}
}



inline jule::Bool _1ad6d5cec_Const::_method_is_bool(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4379076592; }
		_case_begin_4379076592:;
		{
			return true;
		}
		goto _match_end_4379075376;
		_case_end_4379076592:;
		_case_begin_4379076160:;
		{
			return false;
		}
		goto _match_end_4379075376;
		_case_end_4379076160:;
		_match_end_4379075376:;
	}
}



inline jule::Bool _1ad6d5cec_Const::_method_is_str(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4379079200; }
		_case_begin_4379079200:;
		{
			return true;
		}
		goto _match_end_4379077984;
		_case_end_4379079200:;
		_case_begin_4379078768:;
		{
			return false;
		}
		goto _match_end_4379077984;
		_case_end_4379078768:;
		_match_end_4379077984:;
	}
}



inline jule::Bool _1ad6d5cec_Const::_method_is_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4379081808; }
		_case_begin_4379081808:;
		{
			return true;
		}
		goto _match_end_4379080592;
		_case_end_4379081808:;
		_case_begin_4379081376:;
		{
			return false;
		}
		goto _match_end_4379080592;
		_case_end_4379081376:;
		_match_end_4379080592:;
	}
}



inline jule::Bool _1ad6d5cec_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



inline jule::Bool _1ad6d5cec_Const::_method_are_same_types(_1ad6d5cec_Const _20933_x) {
	{
		if (!(((*this)._method_is_i64() == _20933_x._method_is_i64()))) { goto _case_end_4379088032; }
		_case_begin_4379088032:;
		{
			return true;
		}
		goto _match_end_4379087440;
		_case_end_4379088032:;
		if (!(((*this)._method_is_u64() == _20933_x._method_is_u64()))) { goto _case_end_4379088144; }
		_case_begin_4379088144:;
		{
			return true;
		}
		goto _match_end_4379087440;
		_case_end_4379088144:;
		if (!(((*this)._method_is_f64() == _20933_x._method_is_f64()))) { goto _case_end_4379089312; }
		_case_begin_4379089312:;
		{
			return true;
		}
		goto _match_end_4379087440;
		_case_end_4379089312:;
		if (!(((*this)._method_is_bool() == _20933_x._method_is_bool()))) { goto _case_end_4379089424; }
		_case_begin_4379089424:;
		{
			return true;
		}
		goto _match_end_4379087440;
		_case_end_4379089424:;
		if (!(((*this)._method_is_str() == _20933_x._method_is_str()))) { goto _case_end_4379089536; }
		_case_begin_4379089536:;
		{
			return true;
		}
		goto _match_end_4379087440;
		_case_end_4379089536:;
		if (!(((*this)._method_is_nil() == _20933_x._method_is_nil()))) { goto _case_end_4379089648; }
		_case_begin_4379089648:;
		{
			return true;
		}
		goto _match_end_4379087440;
		_case_end_4379089648:;
		_case_begin_4379087616:;
		{
			return false;
		}
		goto _match_end_4379087440;
		_case_end_4379087616:;
		_match_end_4379087440:;
	}
}



inline jule::Bool _1ad6d5cec_Const::_method_and(_1ad6d5cec_Const _22722_x) {
	{
		if (!(((*this)._method_is_bool() && _22722_x._method_is_bool()))) { goto _case_end_4379100128; }
		_case_begin_4379100128:;
		{
			return (*this)._method_read_bool() && _22722_x._method_read_bool();
		}
		goto _match_end_4379099648;
		_case_end_4379100128:;
		_case_begin_4379099824:;
		{
			return false;
		}
		goto _match_end_4379099648;
		_case_end_4379099824:;
		_match_end_4379099648:;
	}
}



inline jule::Bool _1ad6d5cec_Const::_method_or(_1ad6d5cec_Const _23921_x) {
	{
		if (!(((*this)._method_is_bool() && _23921_x._method_is_bool()))) { goto _case_end_4379105952; }
		_case_begin_4379105952:;
		{
			return (*this)._method_read_bool() || _23921_x._method_read_bool();
		}
		goto _match_end_4379105472;
		_case_end_4379105952:;
		_case_begin_4379105648:;
		{
			return false;
		}
		goto _match_end_4379105472;
		_case_end_4379105648:;
		_match_end_4379105472:;
	}
}



inline jule::Bool _1ad6d5cec_Const::_method_eqs(_1ad6d5cec_Const _25122_x) {
	{
		if (!(((*this)._method_is_nil()))) { goto _case_end_4379111728; }
		_case_begin_4379111728:;
		{
			return _25122_x._method_is_nil();
		}
		goto _match_end_4379111136;
		_case_end_4379111728:;
		if (!(((*this)._method_is_bool()))) { goto _case_end_4379111840; }
		_case_begin_4379111840:;
		{
			return _25122_x._method_is_bool() && ((*this)._method_read_bool() == _25122_x._method_read_bool());
		}
		goto _match_end_4379111136;
		_case_end_4379111840:;
		if (!(((*this)._method_is_str()))) { goto _case_end_4379113008; }
		_case_begin_4379113008:;
		{
			return _25122_x._method_is_str() && ((*this)._method_read_str() == _25122_x._method_read_str());
		}
		goto _match_end_4379111136;
		_case_end_4379113008:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4379113120; }
		_case_begin_4379113120:;
		{
			return (*this)._method_read_i64() == _25122_x._method_as_i64();
		}
		goto _match_end_4379111136;
		_case_end_4379113120:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4379113232; }
		_case_begin_4379113232:;
		{
			return (*this)._method_read_u64() == _25122_x._method_as_u64();
		}
		goto _match_end_4379111136;
		_case_end_4379113232:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4379113344; }
		_case_begin_4379113344:;
		{
			return (*this)._method_read_f64() == _25122_x._method_as_f64();
		}
		goto _match_end_4379111136;
		_case_end_4379113344:;
		_case_begin_4379111312:;
		{
			return false;
		}
		goto _match_end_4379111136;
		_case_end_4379111312:;
		_match_end_4379111136:;
	}
}



inline jule::Bool _1ad6d5cec_Const::_method_lt(_1ad6d5cec_Const _28321_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4379126704; }
		_case_begin_4379126704:;
		{
			return (*this)._method_read_i64() < _28321_x._method_as_i64();
		}
		goto _match_end_4379126160;
		_case_end_4379126704:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4379126816; }
		_case_begin_4379126816:;
		{
			return (*this)._method_read_u64() < _28321_x._method_as_u64();
		}
		goto _match_end_4379126160;
		_case_end_4379126816:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4379126928; }
		_case_begin_4379126928:;
		{
			return (*this)._method_read_f64() < _28321_x._method_as_f64();
		}
		goto _match_end_4379126160;
		_case_end_4379126928:;
		_case_begin_4379126336:;
		{
			return false;
		}
		goto _match_end_4379126160;
		_case_end_4379126336:;
		_match_end_4379126160:;
	}
}



inline jule::Bool _1ad6d5cec_Const::_method_gt(_1ad6d5cec_Const _30621_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4379135360; }
		_case_begin_4379135360:;
		{
			return (*this)._method_read_i64() > _30621_x._method_as_i64();
		}
		goto _match_end_4379134816;
		_case_end_4379135360:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4379135472; }
		_case_begin_4379135472:;
		{
			return (*this)._method_read_u64() > _30621_x._method_as_u64();
		}
		goto _match_end_4379134816;
		_case_end_4379135472:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4379135584; }
		_case_begin_4379135584:;
		{
			return (*this)._method_read_f64() > _30621_x._method_as_f64();
		}
		goto _match_end_4379134816;
		_case_end_4379135584:;
		_case_begin_4379134992:;
		{
			return false;
		}
		goto _match_end_4379134816;
		_case_end_4379134992:;
		_match_end_4379134816:;
	}
}



inline jule::Bool _1ad6d5cec_Const::_method_add(_1ad6d5cec_Const _32826_x) {
	{
		if (!(((*this)._method_is_str()))) { goto _case_end_4379144320; }
		_case_begin_4379144320:;
		{
			if ((!(_32826_x._method_is_str()))) {
				return false;
			}
			(*this)._method_set_str((*this)._method_read_str() + _32826_x._method_read_str());
		}
		goto _match_end_4379143792;
		_case_end_4379144320:;
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_4379144432; }
		_case_begin_4379144432:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() + _32826_x._method_as_f64()),_32826_x);
		}
		goto _match_end_4379143792;
		_case_end_4379144432:;
		_case_begin_4379143968:;
		{
			return false;
		}
		goto _match_end_4379143792;
		_case_end_4379143968:;
		_match_end_4379143792:;
	}
	return true;
}



inline jule::Bool _1ad6d5cec_Const::_method_sub(_1ad6d5cec_Const _34926_x) {
	{
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_4379155200; }
		_case_begin_4379155200:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() - _34926_x._method_as_f64()),_34926_x);
		}
		goto _match_end_4379154720;
		_case_end_4379155200:;
		_case_begin_4379154896:;
		{
			return false;
		}
		goto _match_end_4379154720;
		_case_end_4379154896:;
		_match_end_4379154720:;
	}
	return true;
}



inline jule::Bool _1ad6d5cec_Const::_method_mul(_1ad6d5cec_Const _36426_x) {
	{
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_4379162144; }
		_case_begin_4379162144:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() * _36426_x._method_as_f64()),_36426_x);
		}
		goto _match_end_4379161664;
		_case_end_4379162144:;
		_case_begin_4379161840:;
		{
			return false;
		}
		goto _match_end_4379161664;
		_case_end_4379161840:;
		_match_end_4379161664:;
	}
	return true;
}



inline jule::Bool _1ad6d5cec_Const::_method_div(_1ad6d5cec_Const _38326_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4379169216; }
		_case_begin_4379169216:;
		{
			jule::F64 _38617_l = _38326_x._method_as_f64();
			if (_38617_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_38617_l)));
		}
		goto _match_end_4379168672;
		_case_end_4379169216:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4379169328; }
		_case_begin_4379169328:;
		{
			jule::F64 _39317_l = _38326_x._method_as_f64();
			if (_39317_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_39317_l)));
		}
		goto _match_end_4379168672;
		_case_end_4379169328:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4379169440; }
		_case_begin_4379169440:;
		{
			jule::F64 _40017_l = _38326_x._method_as_f64();
			if (_40017_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_40017_l)));
		}
		goto _match_end_4379168672;
		_case_end_4379169440:;
		_case_begin_4379168848:;
		{
			return false;
		}
		goto _match_end_4379168672;
		_case_end_4379168848:;
		_match_end_4379168672:;
	}
	return true;
}



inline jule::Bool _1ad6d5cec_Const::_method_mod(_1ad6d5cec_Const _41526_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4379185520; }
		_case_begin_4379185520:;
		{
			jule::I64 _41817_l = _41526_x._method_as_i64();
			if (_41817_l == 0LL) {
				return false;
			}
			(*this)._method_set_i64(static_cast<jule::I64>(jule::mod((*this)._method_read_i64(),_41817_l)));
		}
		goto _match_end_4379184992;
		_case_end_4379185520:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4379185632; }
		_case_begin_4379185632:;
		{
			jule::U64 _42517_l = _41526_x._method_as_u64();
			if (_42517_l == 0LL) {
				return false;
			}
			(*this)._method_set_u64(static_cast<jule::U64>(jule::mod((*this)._method_read_u64(),_42517_l)));
		}
		goto _match_end_4379184992;
		_case_end_4379185632:;
		_case_begin_4379185168:;
		{
			return false;
		}
		goto _match_end_4379184992;
		_case_end_4379185168:;
		_match_end_4379184992:;
	}
	return true;
}



inline jule::Bool _1ad6d5cec_Const::_method_bitwise_and(_1ad6d5cec_Const _43934_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4379197376; }
		_case_begin_4379197376:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _43934_x._method_as_i64()));
		}
		goto _match_end_4379196848;
		_case_end_4379197376:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4379197488; }
		_case_begin_4379197488:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _43934_x._method_as_u64()));
		}
		goto _match_end_4379196848;
		_case_end_4379197488:;
		_case_begin_4379197024:;
		{
			return false;
		}
		goto _match_end_4379196848;
		_case_end_4379197024:;
		_match_end_4379196848:;
	}
	return true;
}



inline jule::Bool _1ad6d5cec_Const::_method_bitwise_or(_1ad6d5cec_Const _45533_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4379206192; }
		_case_begin_4379206192:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _45533_x._method_as_i64()));
		}
		goto _match_end_4379205664;
		_case_end_4379206192:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4379206304; }
		_case_begin_4379206304:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _45533_x._method_as_u64()));
		}
		goto _match_end_4379205664;
		_case_end_4379206304:;
		_case_begin_4379205840:;
		{
			return false;
		}
		goto _match_end_4379205664;
		_case_end_4379205840:;
		_match_end_4379205664:;
	}
	return true;
}



inline jule::Bool _1ad6d5cec_Const::_method_xor(_1ad6d5cec_Const _47126_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4379214816; }
		_case_begin_4379214816:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _47126_x._method_as_i64()));
		}
		goto _match_end_4379214288;
		_case_end_4379214816:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4379214928; }
		_case_begin_4379214928:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _47126_x._method_as_u64()));
		}
		goto _match_end_4379214288;
		_case_end_4379214928:;
		_case_begin_4379214464:;
		{
			return false;
		}
		goto _match_end_4379214288;
		_case_end_4379214464:;
		_match_end_4379214288:;
	}
	return true;
}



inline jule::Bool _1ad6d5cec_Const::_method_lshift(_1ad6d5cec_Const _48729_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4379223952; }
		_case_begin_4379223952:;
		{
			jule::I64 _49017_l = (*this)._method_as_i64();
			if (_49017_l < 0LL) {
				jule::U64 _49221_r = _48729_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_49017_l << _49221_r));
			} else {
				_1ad6d5cec_lshift_unsig((*this),_48729_x);
			}
		}
		goto _match_end_4379223424;
		_case_end_4379223952:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4379224064; }
		_case_begin_4379224064:;
		{
			_1ad6d5cec_lshift_unsig((*this),_48729_x);
		}
		goto _match_end_4379223424;
		_case_end_4379224064:;
		_case_begin_4379223600:;
		{
			return false;
		}
		goto _match_end_4379223424;
		_case_end_4379223600:;
		_match_end_4379223424:;
	}
	return true;
}



inline jule::Bool _1ad6d5cec_Const::_method_rshift(_1ad6d5cec_Const _51029_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4379235024; }
		_case_begin_4379235024:;
		{
			jule::I64 _51317_l = (*this)._method_as_i64();
			if (_51317_l < 0LL) {
				jule::U64 _51521_r = _51029_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_51317_l >> _51521_r));
			} else {
				_1ad6d5cec_rshift_unsig((*this),_51029_x);
			}
		}
		goto _match_end_4379234496;
		_case_end_4379235024:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4379235136; }
		_case_begin_4379235136:;
		{
			_1ad6d5cec_rshift_unsig((*this),_51029_x);
		}
		goto _match_end_4379234496;
		_case_end_4379235136:;
		_case_begin_4379234672:;
		{
			return false;
		}
		goto _match_end_4379234496;
		_case_end_4379234672:;
		_match_end_4379234496:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad6d5cec_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}





inline jule::Ref<_1ab064271_FieldIns> _1ab064271_Field::_method_instance(void) {
	return jule::new_struct<_1ab064271_FieldIns>(new( std::nothrow ) _1ab064271_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab064271_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ab064271_StructIns> _1ab064271_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	jule::Ref<_1ab064271_StructIns> _6617_ins = jule::new_struct<_1ab064271_StructIns>(new( std::nothrow ) _1ab064271_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab064271_FieldIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_fields.len()))),jule::Slice<jule::Ref<_1ab07a50c_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_methods.len()))),jule::Bool(),_1ac699a1a_ReferenceStack::_static_method_new()));
	{
		auto _range_expr = this->self->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab064271_i = 0;
			jule::Ref<_1ab064271_Field> _1ab064271_f = *_range_begin;
			_iter_begin_4445399984:;
			{
				_6617_ins->_field_fields[static_cast<jule::Int>(_1ab064271_i)]=_1ab064271_f->_method_instance();
				if (jule::real(_1ab064271_f->_field_kind->_field_kind) && _1ad3e617d_is_mut(_1ab064271_f->_field_kind->_field_kind)) {
					_6617_ins->_field_has_mut=true;
				}
			}
			_iter_next_4445399984:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab064271_i; _1ab064271_f = *_range_begin; goto _iter_begin_4445399984; }
			_iter_end_4445399984:;
		}
	}
	{
		auto _range_expr = this->self->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab064271_i = 0;
			jule::Ref<_1ab07a50c_Fn> _1ab064271_f = *_range_begin;
			_iter_begin_4445406224:;
			{
				jule::Ref<_1ab07a50c_Fn> _8121_fins = jule::new_struct<_1ab07a50c_Fn>(new( std::nothrow ) _1ab07a50c_Fn(_1ab064271_f->_field_sema,_1ab064271_f->_field_token,_1ab064271_f->_field_global,_1ab064271_f->_field_unsafety,_1ab064271_f->_field_public,_1ab064271_f->_field_cpp_linked,_1ab064271_f->_field_statically,_1ab064271_f->_field_ident,_1ab064271_f->_field_directives,_1ab064271_f->_field_doc,_1ab064271_f->_field_scope,_1ab064271_f->_field_generics,_1ab064271_f->_field_result,_1ab064271_f->_field_params,_1ab064271_f->_field_owner,nullptr));
				_6617_ins->_field_methods[static_cast<jule::Int>(_1ab064271_i)]=_8121_fins;
			}
			_iter_next_4445406224:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab064271_i; _1ab064271_f = *_range_begin; goto _iter_begin_4445406224; }
			_iter_end_4445406224:;
		}
	}
	return _6617_ins;
}



inline jule::Ref<_1ab064271_StructIns> _1ab064271_Struct::_method_append_instance(jule::Ref<_1ab064271_StructIns> _10738_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[0LL];
	}
	{
		auto _range_expr = (*this)._field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_StructIns> _1ab064271_ains = *_range_begin;
			_iter_begin_4445420384:;
			{
				{
					auto _range_expr = _1ab064271_ains->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1ab064271_i = 0;
						jule::Ref<_1ad3e617d_TypeKind> _1ab064271_ag = *_range_begin;
						_iter_begin_4445422096:;
						{
							if (_1ab064271_ag->_method_equals(_10738_ins->_field_generics[static_cast<jule::Int>(_1ab064271_i)])) {
								return _1ab064271_ains;
							}
						}
						_iter_next_4445422096:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1ab064271_i; _1ab064271_ag = *_range_begin; goto _iter_begin_4445422096; }
						_iter_end_4445422096:;
					}
				}
			}
			_iter_next_4445420384:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab064271_ains = *_range_begin; goto _iter_begin_4445420384; }
			_iter_end_4445420384:;
		}
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1ab064271_StructIns>>({_10738_ins}));
	return jule::new_ref<_1ab064271_StructIns>();
}



inline jule::Ref<_1ab07a50c_Fn> _1ab064271_Struct::_method_find_method(jule::Str _12834_ident,jule::Bool _12846_statically) {
	{
		auto _range_expr = (*this)._field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1ab064271_f = *_range_begin;
			_iter_begin_4445431312:;
			{
				if ((_1ab064271_f->_field_statically == _12846_statically) && (_1ab064271_f->_field_ident == _12834_ident)) {
					return _1ab064271_f;
				}
			}
			_iter_next_4445431312:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab064271_f = *_range_begin; goto _iter_begin_4445431312; }
			_iter_end_4445431312:;
		}
	}
	return jule::new_ref<_1ab07a50c_Fn>();
}



inline jule::Ref<_1ab064271_Field> _1ab064271_Struct::_method_find_field(jule::Str _13933_ident) {
	{
		auto _range_expr = (*this)._field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Field> _1ab064271_f = *_range_begin;
			_iter_begin_4445436912:;
			{
				if (_1ab064271_f->_field_ident == _13933_ident) {
					return _1ab064271_f;
				}
			}
			_iter_next_4445436912:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab064271_f = *_range_begin; goto _iter_begin_4445436912; }
			_iter_end_4445436912:;
		}
	}
	return jule::new_ref<_1ab064271_Field>();
}



inline jule::Bool _1ab064271_Struct::_method_is_implements(jule::Ref<_1ac276c57_Trait> _14932_t) {
	{
		auto _range_expr = (*this)._field_implements;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac276c57_Trait> _1ab064271_it = *_range_begin;
			_iter_begin_4445440928:;
			{
				if ((_14932_t).alloc == (_1ab064271_it).alloc) {
					return true;
				}
			}
			_iter_next_4445440928:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab064271_it = *_range_begin; goto _iter_begin_4445440928; }
			_iter_end_4445440928:;
		}
	}
	return false;
}



inline jule::Bool _1ab064271_Struct::_method_is_derives(jule::Str _15929_ident) {
	{
		auto _range_expr = (*this)._field_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaeea1c4_Directive> _1ab064271_d = *_range_begin;
			_iter_begin_4445444608:;
			{
				if (_1ab064271_d->_field_tag == jule::Str("derive", 6)) {
					if ((_1ab064271_d->_field_args.len() == 1LL) && (_1ab064271_d->_field_args[0LL] == _15929_ident)) {
						return true;
					}
				}
			}
			_iter_next_4445444608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab064271_d = *_range_begin; goto _iter_begin_4445444608; }
			_iter_end_4445444608:;
		}
	}
	return false;
}



inline jule::Bool _1ab064271_Struct::_method_is_uses(jule::Ref<_1ab064271_Struct> _17126_s) {
	{
		auto _range_expr = (*this)._field_uses;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1ab064271_u = *_range_begin;
			_iter_begin_4445451424:;
			{
				_iter_begin_4445452720:;
				if (!((_17126_s).alloc == (_1ab064271_u).alloc)) { goto _iter_end_4445452720; }
				{
					return true;
				}
				_iter_next_4445452720:;
				goto _iter_begin_4445452720;
				_iter_end_4445452720:;
			}
			_iter_next_4445451424:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab064271_u = *_range_begin; goto _iter_begin_4445451424; }
			_iter_end_4445451424:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab064271_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab064271_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab064271_StructIns::_method_to_str(void) {
	jule::Str _20217_kind = jule::Str("", 0);
	_20217_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_20217_kind+=jule::Str("[", 1);
		{
			auto _range_expr = (*this)._field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ad3e617d_TypeKind> _1ab064271_g = *_range_begin;
				_iter_begin_4445457776:;
				{
					_20217_kind+=_1ab064271_g->_method_to_str();
					_20217_kind+=jule::Str(",", 1);
				}
				_iter_next_4445457776:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ab064271_g = *_range_begin; goto _iter_begin_4445457776; }
				_iter_end_4445457776:;
			}
		}
		_20217_kind=_20217_kind.slice(0LL,static_cast<jule::Int>(_20217_kind.len() - 1LL));
		_20217_kind+=jule::Str("]", 1);
	}
	return _20217_kind;
}



inline jule::Bool _1ab064271_StructIns::_method_equals(jule::Ref<_1ad3e617d_TypeKind> _21721_other) {
	jule::Ref<_1ab064271_StructIns> _21813_s = (_21721_other).alloc->_method_strct();
	if ((!(jule::real(_21813_s)))) {
		return false;
	}
	if (((*this)._field_decl).alloc != (_21813_s->_field_decl).alloc) {
		return false;
	}
	if ((*this)._field_generics.len() != _21813_s->_field_generics.len()) {
		return false;
	}
	jule::Int _23117_i = 0LL;
	_iter_begin_4445467248:;
	if (!(_23117_i < (*this)._field_generics.len())) { goto _iter_end_4445467248; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_23117_i)]->_method_equals(_21813_s->_field_generics[static_cast<jule::Int>(_23117_i)])))) {
			return false;
		}
	}
	_iter_next_4445467248:;
	(_23117_i)++;
	goto _iter_begin_4445467248;
	_iter_end_4445467248:;
	return true;
}



inline jule::Ref<_1ab07a50c_Fn> _1ab064271_StructIns::_method_find_method(jule::Str _24534_ident,jule::Bool _24546_statically) {
	{
		auto _range_expr = (*this)._field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1ab064271_f = *_range_begin;
			_iter_begin_4445478080:;
			{
				if ((_1ab064271_f->_field_statically == _24546_statically) && (_1ab064271_f->_field_ident == _24534_ident)) {
					return _1ab064271_f;
				}
			}
			_iter_next_4445478080:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab064271_f = *_range_begin; goto _iter_begin_4445478080; }
			_iter_end_4445478080:;
		}
	}
	return jule::new_ref<_1ab07a50c_Fn>();
}



inline jule::Ref<_1ab064271_FieldIns> _1ab064271_StructIns::_method_find_field(jule::Str _25633_ident) {
	{
		auto _range_expr = (*this)._field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_FieldIns> _1ab064271_f = *_range_begin;
			_iter_begin_4445483680:;
			{
				if (_1ab064271_f->_field_decl->_field_ident == _25633_ident) {
					return _1ab064271_f;
				}
			}
			_iter_next_4445483680:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab064271_f = *_range_begin; goto _iter_begin_4445483680; }
			_iter_end_4445483680:;
		}
	}
	return jule::new_ref<_1ab064271_FieldIns>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab064271_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "has_mut:" << _Src._field_has_mut << ", ";
	_Stream << "references:" << _Src._field_references;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab07a50c_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ab07a50c_ParamIns> _1ab07a50c_Param::_method_instance(void) {
	return jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(this->self,jule::Ref<_1ad3e617d_TypeKind>()));
}



inline jule::Bool _1ab07a50c_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _1ab07a50c_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab07a50c_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab07a50c_Fn::_method_is_void(void) {
	return (!(jule::real((*this)._field_result)));
}



inline jule::Bool _1ab07a50c_Fn::_method_is_method(void) {
	return jule::real((*this)._field_owner);
}



inline jule::Bool _1ab07a50c_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



inline jule::Bool _1ab07a50c_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



inline jule::Bool _1ab07a50c_Fn::_method_is_anon(void) {
	return _1ab0277b7_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _1ab07a50c_Fn::_method_any_var(void) {
	return jule::real((*this)._field_result) && ((*this)._field_result->_field_idents.len() > 0LL);
}



inline jule::Bool _1ab07a50c_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto _range_expr = (*this)._field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Param> _1ab07a50c_p = *_range_begin;
			_iter_begin_4445507712:;
			{
				if (_1ab07a50c_p->_method_is_self()) {
					goto _iter_next_4445507712;
				}
				jule::Str _9317_pk = _1ab07a50c_p->_field_kind->_field_kind->_method_to_str();
				{
					auto _range_expr = (*this)._field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1aaeea1c4_GenericDecl> _1ab07a50c_g = *_range_begin;
						_iter_begin_4445512768:;
						{
							if (_9317_pk.find(_1ab07a50c_g->_field_ident) != -1LL) {
								return true;
							}
						}
						_iter_next_4445512768:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ab07a50c_g = *_range_begin; goto _iter_begin_4445512768; }
						_iter_end_4445512768:;
					}
				}
			}
			_iter_next_4445507712:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab07a50c_p = *_range_begin; goto _iter_begin_4445507712; }
			_iter_end_4445507712:;
		}
	}
	return false;
}



inline jule::Bool _1ab07a50c_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if ((!(jule::real((*this)._field_result->_field_kind))) || (!(jule::real((*this)._field_result->_field_kind->_field_kind)))) {
		return false;
	}
	jule::Str _11213_rk = (*this)._field_result->_field_kind->_field_kind->_method_to_str();
	{
		auto _range_expr = (*this)._field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaeea1c4_GenericDecl> _1ab07a50c_g = *_range_begin;
			_iter_begin_4445523776:;
			{
				if (_11213_rk.find(_1ab07a50c_g->_field_ident) != -1LL) {
					return true;
				}
			}
			_iter_next_4445523776:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab07a50c_g = *_range_begin; goto _iter_begin_4445523776; }
			_iter_end_4445523776:;
		}
	}
	return false;
}



inline jule::Ref<_1ab07a50c_FnIns> _1ab07a50c_Fn::_method_instance_force(void) {
	jule::Ref<_1ab07a50c_FnIns> _12417_ins = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),this->self,jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>(),jule::Ref<_1ad3e617d_TypeKind>(),jule::new_struct<_1ac77dd1e_Scope>(new( std::nothrow ) _1ac77dd1e_Scope()),_1ac699a1a_ReferenceStack::_static_method_new(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Fn<jule::Ref<_1acde49c3_Data>(jule::Ref<_1acde49c3_Eval>,jule::Ref<_1aaeea1c4_FnCallExpr>,jule::Ref<_1acde49c3_Data>)>(),jule::Bool(),jule::Bool()));
	if (this->self->_method_is_init()) {
		_12417_ins->_field_refers=_1ac699a1a_ReferenceStack::_static_method_new();
	}
	_12417_ins->_field_params=jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_params.len())));
	{
		auto _range_expr = this->self->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab07a50c_i = 0;
			jule::Ref<_1ab07a50c_Param> _1ab07a50c_p = *_range_begin;
			_iter_begin_4445534976:;
			{
				_12417_ins->_field_params[static_cast<jule::Int>(_1ab07a50c_i)]=_1ab07a50c_p->_method_instance();
			}
			_iter_next_4445534976:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab07a50c_i; _1ab07a50c_p = *_range_begin; goto _iter_begin_4445534976; }
			_iter_end_4445534976:;
		}
	}
	if (jule::real(_12417_ins->_field_decl->_field_result)) {
		_12417_ins->_field_result=_12417_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _12417_ins;
}



inline jule::Ref<_1ab07a50c_FnIns> _1ab07a50c_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	return this->self->_method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _1ab07a50c_Fn::_method_append_instance(jule::Ref<_1ab07a50c_FnIns> _15538_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1ab07a50c_FnIns>>({_15538_ins}));
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1ab07a50c_FnIns>>({_15538_ins}));
		return std::make_tuple(true,-1LL);
	}
	{
		auto _range_expr = (*this)._field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab07a50c_j = 0;
			jule::Ref<_1ab07a50c_FnIns> _1ab07a50c_ains = *_range_begin;
			_iter_begin_4445552448:;
			{
				{
					auto _range_expr = _1ab07a50c_ains->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1ab07a50c_i = 0;
						jule::Ref<_1ad3e617d_TypeKind> _1ab07a50c_ag = *_range_begin;
						_iter_begin_4445556768:;
						{
							if (_1ab07a50c_ag->_method_equals(_15538_ins->_field_generics[static_cast<jule::Int>(_1ab07a50c_i)])) {
								return std::make_tuple(false,_1ab07a50c_j);
							}
						}
						_iter_next_4445556768:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1ab07a50c_i; _1ab07a50c_ag = *_range_begin; goto _iter_begin_4445556768; }
						_iter_end_4445556768:;
					}
				}
			}
			_iter_next_4445552448:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab07a50c_j; _1ab07a50c_ains = *_range_begin; goto _iter_begin_4445552448; }
			_iter_end_4445552448:;
		}
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1ab07a50c_FnIns>>({_15538_ins}));
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab07a50c_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab07a50c_ParamIns::_method_to_str(void) {
	jule::Str _19517_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_mutable) {
		_19517_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_19517_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_19517_s+=jule::Str("&", 1);
		}
		_19517_s+=jule::Str("self", 4);
		return _19517_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_19517_s+=jule::Str("...", 3);
	}
	if (jule::real((*this)._field_kind)) {
		_19517_s+=(*this)._field_kind->_method_to_str();
	}
	return _19517_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab07a50c_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab07a50c_FnIns::_method_to_str(void) {
	
	return (*this)._method_get_kind_str(false);
}



inline jule::Bool _1ab07a50c_FnIns::_method_equals(jule::Ref<_1ad3e617d_TypeKind> _25021_other) {
	jule::Ref<_1ab07a50c_FnIns> _25113_f = (_25021_other).alloc->_method_fnc();
	if ((!(jule::real(_25113_f)))) {
		return false;
	}
	if ((*this)._field_decl->_field_statically != _25113_f->_field_decl->_field_statically) {
		return false;
	}
	if ((*this)._field_decl->_field_unsafety != _25113_f->_field_decl->_field_unsafety) {
		return false;
	}
	if ((*this)._field_generics.len() != _25113_f->_field_generics.len()) {
		return false;
	}
	if ((*this)._field_decl->_method_is_void() != _25113_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _27217_i = 0LL;
	_iter_begin_4445580768:;
	if (!(_27217_i < (*this)._field_generics.len())) { goto _iter_end_4445580768; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_27217_i)]->_method_equals(_25113_f->_field_generics[static_cast<jule::Int>(_27217_i)])))) {
			return false;
		}
	}
	_iter_next_4445580768:;
	(_27217_i)++;
	goto _iter_begin_4445580768;
	_iter_end_4445580768:;
	jule::Fn<jule::Bool(jule::Ref<_1ab07a50c_ParamIns>,jule::Ref<_1ab07a50c_ParamIns>)> _27913_check_params = jule::Fn<jule::Bool(jule::Ref<_1ab07a50c_ParamIns>,jule::Ref<_1ab07a50c_ParamIns>)>([=](jule::Ref<_1ab07a50c_ParamIns> _27931_p1,jule::Ref<_1ab07a50c_ParamIns> _27946_p2) mutable -> jule::Bool {
		if (_27931_p1->_field_decl->_field_mutable != _27946_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_27931_p1->_field_decl->_method_is_self()) {
			if ((!(_27946_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_27931_p1->_field_decl->_method_is_ref() != _27946_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_27931_p1->_field_decl->_field_reference != _27946_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_27931_p1->_field_decl->_field_variadic != _27946_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _27931_p1->_field_kind->_method_equals(_27946_p2->_field_kind);
	});
	_27217_i=0LL;
	_iter_begin_4445592944:;
	if (!(_27217_i < (*this)._field_params.len())) { goto _iter_end_4445592944; }
	{
		if ((!(_27913_check_params((*this)._field_params[static_cast<jule::Int>(_27217_i)],_25113_f->_field_params[static_cast<jule::Int>(_27217_i)])))) {
			return false;
		}
	}
	_iter_next_4445592944:;
	(_27217_i)++;
	goto _iter_begin_4445592944;
	_iter_end_4445592944:;
	if ((!((*this)._field_decl->_method_is_void()))) {
		if ((!((*this)._field_result->_method_equals(_25113_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _1ab07a50c_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != nullptr;
}



inline jule::Bool _1ab07a50c_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (jule::real((*this)._field_decl) && (*this)._field_decl->_method_is_anon());
}



inline jule::Str _1ab07a50c_FnIns::_method_get_kind_str(jule::Bool _33431_ident) {
	jule::Str _33517_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_statically) {
		_33517_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_33517_s+=jule::Str("unsafe ", 7);
	}
	_33517_s+=jule::Str("fn", 2);
	if (_33431_ident && jule::real((*this)._field_decl)) {
		_33517_s+=jule::Str(" ", 1) + (*this)._field_decl->_field_ident;
	}
	if ((*this)._field_generics.len() > 0LL) {
		_33517_s+=jule::Str("[", 1);
		{
			auto _range_expr = (*this)._field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1ab07a50c_i = 0;
				jule::Ref<_1ad3e617d_TypeKind> _1ab07a50c_t = *_range_begin;
				_iter_begin_4445625728:;
				{
					_33517_s+=_1ab07a50c_t->_method_to_str();
					if ((_1ab07a50c_i + 1LL) < (*this)._field_generics.len()) {
						_33517_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4445625728:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1ab07a50c_i; _1ab07a50c_t = *_range_begin; goto _iter_begin_4445625728; }
				_iter_end_4445625728:;
			}
		}
		_33517_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_33517_s+=jule::Str("[", 1);
		{
			auto _range_expr = (*this)._field_decl->_field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1ab07a50c_i = 0;
				jule::Ref<_1aaeea1c4_GenericDecl> _1ab07a50c_g = *_range_begin;
				_iter_begin_4445633376:;
				{
					_33517_s+=_1ab07a50c_g->_field_ident;
					if ((_1ab07a50c_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_33517_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4445633376:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1ab07a50c_i; _1ab07a50c_g = *_range_begin; goto _iter_begin_4445633376; }
				_iter_end_4445633376:;
			}
		}
		_33517_s+=jule::Str("]", 1);
	}
	_33517_s+=jule::Str("(", 1);
	jule::I64 _37213_n = (*this)._field_params.len();
	if (_37213_n > 0LL) {
		{
			auto _range_expr = (*this)._field_params;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab07a50c_ParamIns> _1ab07a50c_p = *_range_begin;
				_iter_begin_4445640704:;
				{
					_33517_s+=_1ab07a50c_p->_method_to_str();
					_33517_s+=jule::Str(",", 1);
				}
				_iter_next_4445640704:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ab07a50c_p = *_range_begin; goto _iter_begin_4445640704; }
				_iter_end_4445640704:;
			}
		}
		_33517_s=_33517_s.slice(0LL,static_cast<jule::Int>(_33517_s.len() - 1LL));
	}
	_33517_s+=jule::Str(")", 1);
	if ((!((*this)._field_decl->_method_is_void()))) {
		_33517_s+=jule::Str(":", 1);
		_33517_s+=(*this)._field_result->_method_to_str();
	}
	return _33517_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab07a50c_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ac699a1a_ReferenceStack> _1ac699a1a_ReferenceStack::_static_method_new(void) {
	return jule::new_struct<_1ac699a1a_ReferenceStack>(new( std::nothrow ) _1ac699a1a_ReferenceStack());
}



inline jule::Int _1ac699a1a_ReferenceStack::_method_len(void) {
	return static_cast<jule::I64>((*this)._field_buffer.len());
}



inline jule::Any _1ac699a1a_ReferenceStack::_method_at(jule::Int _5825_i) {
	return (*this)._field_buffer[static_cast<jule::Int>(_5825_i)];
}



inline void _1ac699a1a_ReferenceStack::_method_push(jule::Any _6331_ref) {
	(*this)._field_buffer=jule::append((*this)._field_buffer,jule::Slice<jule::Any>({_6331_ref}));
}



inline jule::Bool _1ac699a1a_ReferenceStack::_method_exist_0(jule::Ref<_1aca3647d_Var> _6827_t) {
	{
		auto _range_expr = (*this)._field_buffer;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1ac699a1a_ref = *_range_begin;
			_iter_begin_4449286176:;
			{
				{
					auto _match_expr{ _1ac699a1a_ref };
					if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4449288048; }
					_case_begin_4449288048:;
					{
						if ((_1ac699a1a_ref.operator jule::Ref<_1aca3647d_Var>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4449287488;
					_case_end_4449288048:;
					_match_end_4449287488:;
				}
			}
			_iter_next_4449286176:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac699a1a_ref = *_range_begin; goto _iter_begin_4449286176; }
			_iter_end_4449286176:;
		}
	}
	return false;
}

inline jule::Bool _1ac699a1a_ReferenceStack::_method_exist_1(jule::Ref<_1ab07a50c_FnIns> _6827_t) {
	{
		auto _range_expr = (*this)._field_buffer;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1ac699a1a_ref = *_range_begin;
			_iter_begin_4449297712:;
			{
				{
					auto _match_expr{ _1ac699a1a_ref };
					if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_FnIns>>())) { goto _case_end_4449299584; }
					_case_begin_4449299584:;
					{
						if ((_1ac699a1a_ref.operator jule::Ref<_1ab07a50c_FnIns>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4449299024;
					_case_end_4449299584:;
					_match_end_4449299024:;
				}
			}
			_iter_next_4449297712:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac699a1a_ref = *_range_begin; goto _iter_begin_4449297712; }
			_iter_end_4449297712:;
		}
	}
	return false;
}

inline jule::Bool _1ac699a1a_ReferenceStack::_method_exist_2(jule::Ref<_1ab064271_StructIns> _6827_t) {
	{
		auto _range_expr = (*this)._field_buffer;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1ac699a1a_ref = *_range_begin;
			_iter_begin_4449338464:;
			{
				{
					auto _match_expr{ _1ac699a1a_ref };
					if (!(_match_expr.type_is<jule::Ref<_1ab064271_StructIns>>())) { goto _case_end_4449340336; }
					_case_begin_4449340336:;
					{
						if ((_1ac699a1a_ref.operator jule::Ref<_1ab064271_StructIns>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4449339776;
					_case_end_4449340336:;
					_match_end_4449339776:;
				}
			}
			_iter_next_4449338464:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac699a1a_ref = *_range_begin; goto _iter_begin_4449338464; }
			_iter_end_4449338464:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac699a1a_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac699a1a_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ac699a1a_SymbolBuilder> _1ac699a1a_SymbolBuilder::_method_get_root(void) {
	jule::Ref<_1ac699a1a_SymbolBuilder> _30517_root = this->self;
	_iter_begin_4445655760:;
	if (!(jule::real(_30517_root->_field_owner))) { goto _iter_end_4445655760; }
	{
		_30517_root=_30517_root->_field_owner;
	}
	_iter_next_4445655760:;
	goto _iter_begin_4445655760;
	_iter_end_4445655760:;
	return _30517_root;
}



inline void _1ac699a1a_SymbolBuilder::_method_push_err(_1ab0277b7_Token _31227_token,jule::Str _31241_fmt,jule::Slice<jule::Any> _31254_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1d068165a_Log>({_1ac7ccb09_compiler_err(_31227_token,true,_31241_fmt,_31254_args)}));
}



inline void _1ac699a1a_SymbolBuilder::_method_push_err_text(_1ab0277b7_Token _31632_token,jule::Str _31646_fmt,jule::Slice<jule::Any> _31659_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1d068165a_Log>({_1ac7ccb09_compiler_err(_31632_token,false,_31646_fmt,_31659_args)}));
}



inline void _1ac699a1a_SymbolBuilder::_method_push_suggestion(jule::Str _32134_fmt,jule::Slice<jule::Any> _32147_args) {
	{
		_1ac7ccb09_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_32134_fmt,_32147_args);
	}
}



inline jule::Bool _1ac699a1a_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ref<_1aaeea1c4_UseDecl> _32542_decl) {
	jule::Bool _32560_ok = jule::Bool();
	if (_1d068267d_is_std_header_path(_32542_decl->_field_link_path)) {
		_32560_ok = true;
		return _32560_ok;
	}
	jule::Str _33013_ext = _1d05b5e41_ext(_32542_decl->_field_link_path);
	if ((!(_1d068267d_is_valid_header_ext(_33013_ext))) && (!(_1d068267d_is_valid_cpp_ext(_33013_ext)))) {
		(*this)._method_push_err(_32542_decl->_field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_33013_ext)}));
		_32560_ok = false;
		return _32560_ok;
	}
	jule::Ref<_1ab004a80_Status> _33614_info;
	jule::Int _33620_err;
	std::tie(_33614_info,_33620_err) = _1aaed9867_stat(_32542_decl->_field_link_path);
	if ((_33620_err != 0LLU) || _33614_info->_method_is_dir()) {
		(*this)._method_push_err(_32542_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_32542_decl->_field_link_path)}));
		_32560_ok = false;
		return _32560_ok;
	}
	_32560_ok = true;
	return _32560_ok;
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1ac699a1a_SymbolBuilder::_method_build_cpp_header_import(jule::Ref<_1aaeea1c4_UseDecl> _34646_decl) {
	jule::Str _34717_path = _34646_decl->_field_link_path;
	if ((!(_1d068267d_is_std_header_path(_34646_decl->_field_link_path)))) {
		jule::Bool _35021_ok = (*this)._method_check_cpp_use_decl_path(_34646_decl);
		if ((!(_35021_ok))) {
			return jule::new_ref<_1ac78be4d_ImportInfo>();
		}
		std::tie(_34717_path,_35021_ok) = _1d05b5e41_abs(_34646_decl->_field_link_path);
		if ((!(_35021_ok))) {
			(*this)._method_push_err(_34646_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_34646_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_1ac78be4d_ImportInfo>(new( std::nothrow ) _1ac78be4d_ImportInfo(_34646_decl->_field_token,_34717_path,_34646_decl->_field_link_path,jule::Str("", 0),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_1ab0277b7_Token>(),jule::new_ref<_1ac78be4d_Package>()));
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1ac699a1a_SymbolBuilder::_method_build_std_import(jule::Ref<_1aaeea1c4_UseDecl> _37339_decl) {
	jule::Str _37417_path = _37339_decl->_field_link_path.slice(static_cast<jule::Int>(jule::Str("std::", 5).len()));
	_37417_path=_37417_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_37417_path=_1d05b5e41_join(jule::Slice<jule::Str>({_1d0595937_PATH_STDLIB,_37417_path}));
	jule::Bool _37720_ok;
	std::tie(_37417_path,_37720_ok) = _1d05b5e41_abs(_37417_path);
	if ((!(_37720_ok))) {
		(*this)._method_push_err(_37339_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_37339_decl->_field_link_path)}));
		return jule::new_ref<_1ac78be4d_ImportInfo>();
	}
	jule::Ref<_1ab004a80_Status> _38314_info;
	jule::Int _38320_err;
	std::tie(_38314_info,_38320_err) = _1aaed9867_stat(_37417_path);
	if ((_38320_err != 0LLU) || (!(_38314_info->_method_is_dir()))) {
		(*this)._method_push_err(_37339_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_37339_decl->_field_link_path)}));
		return jule::new_ref<_1ac78be4d_ImportInfo>();
	}
	jule::Str _39113_ident = _37339_decl->_field_link_path.slice(static_cast<jule::Int>(_37339_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_1ac78be4d_ImportInfo>(new( std::nothrow ) _1ac78be4d_ImportInfo(_37339_decl->_field_token,_37417_path,_37339_decl->_field_link_path,_39113_ident,_37339_decl->_field_alias,jule::Bool(),false,true,_37339_decl->_field_full,jule::Slice<_1ab0277b7_Token>(),jule::new_struct<_1ac78be4d_Package>(new( std::nothrow ) _1ac78be4d_Package(nullptr))));
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1ac699a1a_SymbolBuilder::_method_build_ident_import(jule::Ref<_1aaeea1c4_UseDecl> _40842_decl) {
	jule::Str _40917_path = _40842_decl->_field_link_path;
	_40917_path=_40917_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_40917_path=_1d05b5e41_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_40917_path}));
	jule::Bool _41320_ok;
	std::tie(_40917_path,_41320_ok) = _1d05b5e41_abs(_40917_path);
	if ((!(_41320_ok))) {
		this->self->_method_push_err(_40842_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_40842_decl->_field_link_path)}));
		return jule::new_ref<_1ac78be4d_ImportInfo>();
	}
	jule::Ref<_1ab004a80_Status> _41914_info;
	jule::Int _41920_err;
	std::tie(_41914_info,_41920_err) = _1aaed9867_stat(_40917_path);
	if ((_41920_err != 0LLU) || (!(_41914_info->_method_is_dir()))) {
		this->self->_method_push_err(_40842_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_40842_decl->_field_link_path)}));
		return jule::new_ref<_1ac78be4d_ImportInfo>();
	}
	jule::Str _42713_ident = _40842_decl->_field_link_path.slice(static_cast<jule::Int>(_40842_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_1ac78be4d_ImportInfo>(new( std::nothrow ) _1ac78be4d_ImportInfo(_40842_decl->_field_token,_40917_path,_40842_decl->_field_link_path,_42713_ident,_40842_decl->_field_alias,jule::Bool(),false,false,_40842_decl->_field_full,jule::Slice<_1ab0277b7_Token>(),jule::new_struct<_1ac78be4d_Package>(new( std::nothrow ) _1ac78be4d_Package(nullptr))));
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1ac699a1a_SymbolBuilder::_method_build_import(jule::Ref<_1aaeea1c4_UseDecl> _44436_decl) {
	{
		if (!((_44436_decl->_field_cpp_linked))) { goto _case_end_4445753536; }
		_case_begin_4445753536:;
		{
			return this->self->_method_build_cpp_header_import(_44436_decl);
		}
		goto _match_end_4445751904;
		_case_end_4445753536:;
		if (!((_44436_decl->_field_std))) { goto _case_end_4445753136; }
		_case_begin_4445753136:;
		{
			return this->self->_method_build_std_import(_44436_decl);
		}
		goto _match_end_4445751904;
		_case_end_4445753136:;
		_case_begin_4445752080:;
		{
			return this->self->_method_build_ident_import(_44436_decl);
		}
		goto _match_end_4445751904;
		_case_end_4445752080:;
		_match_end_4445751904:;
	}
}



inline jule::Bool _1ac699a1a_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ref<_1ac78be4d_ImportInfo> _45243_pkg) {
	jule::Bool _45263_ok = jule::Bool();
	jule::Ref<_1ac78be4d_ImportInfo> _45413_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)>([=](jule::Ref<_1ac78be4d_ImportInfo> _45449_spkg) mutable -> jule::Bool {
		return _45243_pkg->_field_path == _45449_spkg->_field_path;
	}));
	if ((!(jule::real(_45413_lpkg)))) {
		_45263_ok = true;
		return _45263_ok;
	}
	(*this)._method_push_err(_45243_pkg->_field_token,jule::Str("duplicate use declaration: @", 28),jule::Slice<jule::Any>({jule::Any(_45243_pkg->_field_link_path)}));
	(*this)._method_push_suggestion(jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>({}));
	_45263_ok = false;
	return _45263_ok;
}



inline void _1ac699a1a_SymbolBuilder::_method_impl_import_selections(jule::Ref<_1ac78be4d_ImportInfo> _46645_imp,jule::Ref<_1aaeea1c4_UseDecl> _46667_decl) {
	{
		auto _range_expr = _46667_decl->_field_selected;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1ab0277b7_Token _1ac699a1a_ident = *_range_begin;
			_iter_begin_4445774896:;
			{
				if (_46645_imp->_method_exist_ident(_1ac699a1a_ident._field_kind)) {
					(*this)._method_push_err(_1ac699a1a_ident,jule::Str("duplicated identifier selection: @", 34),jule::Slice<jule::Any>({jule::Any(_1ac699a1a_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>({}));
					goto _iter_next_4445774896;
				}
				_46645_imp->_field_selected=jule::append(_46645_imp->_field_selected,jule::Slice<_1ab0277b7_Token>({_1ac699a1a_ident}));
			}
			_iter_next_4445774896:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac699a1a_ident = *_range_begin; goto _iter_begin_4445774896; }
			_iter_end_4445774896:;
		}
	}
}



inline jule::Str _1ac699a1a_SymbolBuilder::_method_get_as_link_path(jule::Str _47840_path) {
	if (_47840_path.has_prefix(_1d0595937_PATH_STDLIB)) {
		_47840_path=_47840_path.slice(static_cast<jule::Int>(_1d0595937_PATH_STDLIB.len()));
		return jule::Str("std", 3) + _47840_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _48414_root;
	std::tie(_48414_root,std::ignore) = _1d05b5e41_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_47840_path=_47840_path.slice(static_cast<jule::Int>(_48414_root.len()));
	if (_47840_path[0LL] == 47LL) {
		_47840_path=_47840_path.slice(1LL);
	}
	return _47840_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _1ac699a1a_SymbolBuilder::_method_push_cycle_error(jule::Ref<_1ac699a1a_SymbolBuilder> _49236_sb,jule::Str _49256_path,jule::Str& _49272_message) {
	
	jule::Str _49513_refers_to = _1d068165a_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_49236_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_49256_path))}));
	_49272_message=((_1ac699a1a_str_repeat(jule::Str(" ", 1),4LL) + _49513_refers_to) + jule::Str("\n", 1)) + _49272_message;
}



inline void _1ac699a1a_SymbolBuilder::_method_push_cross_cycle_error(jule::Ref<_1ac699a1a_SymbolBuilder> _50242_target,jule::Ref<_1ac78be4d_ImportInfo> _50266_imp,_1ab0277b7_Token _50284_error_token) {
	jule::Str _50317_message = jule::Str("", 0);
	this->self->_method_push_cycle_error(this->self,_50266_imp->_field_path,_50317_message);
	jule::Ref<_1ac699a1a_SymbolBuilder> _50717_owner = this->self->_field_owner;
	jule::Ref<_1ac699a1a_SymbolBuilder> _50817_old = this->self;
	_iter_begin_4445815744:;
	if (!(jule::real(_50717_owner->_field_owner))) { goto _iter_end_4445815744; }
	{
		this->self->_method_push_cycle_error(_50817_old->_field_owner,_50817_old->_field_table->_field_file->_method_dir(),_50317_message);
		if ((_50717_owner->_field_owner).alloc == (_50242_target).alloc) {
			this->self->_method_push_cycle_error(_50242_target,_50717_owner->_field_table->_field_file->_method_dir(),_50317_message);
			goto _iter_end_4445815744;
		}
		_50817_old=_50717_owner;
		_50717_owner=_50717_owner->_field_owner;
	}
	_iter_next_4445815744:;
	goto _iter_begin_4445815744;
	_iter_end_4445815744:;
	this->self->_method_push_err(_50284_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_50317_message)}));
}



inline jule::Bool _1ac699a1a_SymbolBuilder::_method_check_import_cycles(jule::Ref<_1ac78be4d_ImportInfo> _52539_imp,jule::Ref<_1aaeea1c4_UseDecl> _52557_decl) {
	if (_52539_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_52557_decl->_field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_52539_imp->_field_path))}));
		return false;
	}
	if ((!(jule::real(this->self->_field_owner)))) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _52539_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_52539_imp,_52557_decl->_field_token);
		return false;
	}
	jule::Ref<_1ac699a1a_SymbolBuilder> _54017_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_54017_owner->_field_table->_field_file->_method_dir() == _52539_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_54017_owner,_52539_imp,_52557_decl->_field_token);
		return false;
	}
	if (jule::real(_54017_owner->_field_owner)) {
		_54017_owner=_54017_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline jule::Bool _1ac699a1a_SymbolBuilder::_method_import_package(jule::Ref<_1ac78be4d_ImportInfo>& _55539_imp,jule::Ref<_1aaeea1c4_UseDecl> _55561_decl) {
	jule::Bool _55579_ok = jule::Bool();
	if (_55539_imp->_field_cpp_linked) {
		_55579_ok = true;
		return _55579_ok;
	}
	jule::Ref<_1ac78be4d_ImportInfo> _56017_port = this->self->_field_importer.get()._method_get_import(_55539_imp->_field_path);
	if (jule::real(_56017_port)) {
		_55539_imp->_field_package=_56017_port->_field_package;
		_55539_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_55539_imp,_55561_decl)))) {
			_55579_ok = false;
			return _55579_ok;
		}
		jule::Slice<jule::Ref<_1ab026d8d_Ast>> _56922_asts;
		jule::Slice<_1d068165a_Log> _56928_errors;
		std::tie(_56922_asts,_56928_errors) = this->self->_field_importer.get()._method_import_package(_55539_imp->_field_path);
		if (_56928_errors.len() > 0LL) {
			this->self->_field_errors=jule::append(this->self->_field_errors,_56928_errors);
			_55579_ok = false;
			return _55579_ok;
		}
		{
			auto _range_expr = _56922_asts;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab026d8d_Ast> _1ac699a1a_ast = *_range_begin;
				_iter_begin_4445863024:;
				{
					jule::Ref<_1acd9639d_SymbolTable> _57626_table;
					jule::Slice<_1d068165a_Log> _57633_errors;
					std::tie(_57626_table,_57633_errors) = _1ad4a0886_build_symbols(_1ac699a1a_ast,this->self->_field_importer,this->self);
					if (_57633_errors.len() > 0LL) {
						this->self->_field_errors=jule::append(this->self->_field_errors,_57633_errors);
						this->self->_method_push_err_text(_55539_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_55539_imp->_field_link_path)}));
						_55579_ok = false;
						return _55579_ok;
					}
					_55539_imp->_field_package->_field_files=jule::append(_55539_imp->_field_package->_field_files,jule::Slice<jule::Ref<_1acd9639d_SymbolTable>>({_57626_table}));
				}
				_iter_next_4445863024:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ac699a1a_ast = *_range_begin; goto _iter_begin_4445863024; }
				_iter_end_4445863024:;
			}
		}
	}
	this->self->_method_impl_import_selections(_55539_imp,_55561_decl);
	_55579_ok = true;
	return _55579_ok;
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1ac699a1a_SymbolBuilder::_method_import_use_decl(jule::Ref<_1aaeea1c4_UseDecl> _59439_decl) {
	jule::Ref<_1ac78be4d_ImportInfo> _59517_imp = this->self->_method_build_import(_59439_decl);
	if ((!(jule::real(_59517_imp)))) {
		return jule::new_ref<_1ac78be4d_ImportInfo>();
	}
	jule::Bool _60117_ok = this->self->_method_check_duplicate_use_decl(_59517_imp);
	if ((!(_60117_ok))) {
		return jule::new_ref<_1ac78be4d_ImportInfo>();
	}
	if ((_59517_imp->_field_alias.len() != 0LL) && (_59439_decl->_field_selected.len() > 0LL)) {
		this->self->_method_push_err(_59439_decl->_field_token,jule::Str("use aliases cannot useable for selected package defines", 55),jule::Slice<jule::Any>({}));
	}
	_60117_ok=this->self->_method_import_package(_59517_imp,_59439_decl);
	this->self->_field_table->_field_imports=jule::append(this->self->_field_table->_field_imports,jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>>({_59517_imp}));
	if (_60117_ok) {
		this->self->_field_importer.get()._method_imported(_59517_imp);
		return _59517_imp;
	}
	return jule::new_ref<_1ac78be4d_ImportInfo>();
}



inline void _1ac699a1a_SymbolBuilder::_method_import_use_decls(void) {
	{
		auto _range_expr = this->self->_field_ast->_field_use_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaeea1c4_UseDecl> _1ac699a1a_decl = *_range_begin;
			_iter_begin_4445886704:;
			{
				this->self->_method_import_use_decl(_1ac699a1a_decl);
				if (this->self->_field_errors.len() > 0LL) {
					goto _iter_end_4445886704;
				}
			}
			_iter_next_4445886704:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac699a1a_decl = *_range_begin; goto _iter_begin_4445886704; }
			_iter_end_4445886704:;
		}
	}
}



inline void _1ac699a1a_SymbolBuilder::_method_append_decl(_1aaeea1c4_Node _63034_decl) {
	{
		auto _match_expr{ _63034_decl._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_TypeAliasDecl>>())) { goto _case_end_4445894736; }
		_case_begin_4445894736:;
		{
			jule::Ref<_1ad3e617d_TypeAlias> _63321_ta = _1ac699a1a_build_type_alias(_63034_decl._field_data.operator jule::Ref<_1aaeea1c4_TypeAliasDecl>());
			(*this)._field_table->_field_type_aliases=jule::append((*this)._field_table->_field_type_aliases,jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>({_63321_ta}));
		}
		goto _match_end_4445891568;
		_case_end_4445894736:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_StructDecl>>())) { goto _case_end_4445892560; }
		_case_begin_4445892560:;
		{
			jule::Ref<_1ab064271_Struct> _63721_srct = _1ac699a1a_build_struct(_63034_decl._field_data.operator jule::Ref<_1aaeea1c4_StructDecl>());
			(*this)._field_table->_field_structs=jule::append((*this)._field_table->_field_structs,jule::Slice<jule::Ref<_1ab064271_Struct>>({_63721_srct}));
		}
		goto _match_end_4445891568;
		_case_end_4445892560:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_FnDecl>>())) { goto _case_end_4445892672; }
		_case_begin_4445892672:;
		{
			jule::Ref<_1ab07a50c_Fn> _64121_f = _1ac699a1a_build_fn(_63034_decl._field_data.operator jule::Ref<_1aaeea1c4_FnDecl>());
			(*this)._field_table->_field_funcs=jule::append((*this)._field_table->_field_funcs,jule::Slice<jule::Ref<_1ab07a50c_Fn>>({_64121_f}));
		}
		goto _match_end_4445891568;
		_case_end_4445892672:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_TraitDecl>>())) { goto _case_end_4445892784; }
		_case_begin_4445892784:;
		{
			jule::Ref<_1ac276c57_Trait> _64521_t = _1ac699a1a_build_trait(_63034_decl._field_data.operator jule::Ref<_1aaeea1c4_TraitDecl>());
			(*this)._field_table->_field_traits=jule::append((*this)._field_table->_field_traits,jule::Slice<jule::Ref<_1ac276c57_Trait>>({_64521_t}));
		}
		goto _match_end_4445891568;
		_case_end_4445892784:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_VarDecl>>())) { goto _case_end_4445894912; }
		_case_begin_4445894912:;
		{
			jule::Ref<_1aca3647d_Var> _64921_v = _1ac699a1a_build_var(_63034_decl._field_data.operator jule::Ref<_1aaeea1c4_VarDecl>());
			(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ref<_1aca3647d_Var>>({_64921_v}));
		}
		goto _match_end_4445891568;
		_case_end_4445894912:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_EnumDecl>>())) { goto _case_end_4445895024; }
		_case_begin_4445895024:;
		{
			jule::Ref<_1ac7804a2_Enum> _65321_e = _1ac699a1a_build_enum(_63034_decl._field_data.operator jule::Ref<_1aaeea1c4_EnumDecl>());
			(*this)._field_table->_field_enums=jule::append((*this)._field_table->_field_enums,jule::Slice<jule::Ref<_1ac7804a2_Enum>>({_65321_e}));
		}
		goto _match_end_4445891568;
		_case_end_4445895024:;
		_case_begin_4445892256:;
		{
			(*this)._method_push_err(_63034_decl._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4445891568;
		_case_end_4445892256:;
		_match_end_4445891568:;
	}
}



inline void _1ac699a1a_SymbolBuilder::_method_append_decls(void) {
	{
		auto _range_expr = (*this)._field_ast->_field_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1aaeea1c4_Node _1ac699a1a_decl = *_range_begin;
			_iter_begin_4445917376:;
			{
				(*this)._method_append_decl(_1ac699a1a_decl);
			}
			_iter_next_4445917376:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac699a1a_decl = *_range_begin; goto _iter_begin_4445917376; }
			_iter_end_4445917376:;
		}
	}
}



inline void _1ac699a1a_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=jule::Slice<jule::Ref<_1ac780837_Impl>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_ast->_field_impls.len())));
	{
		auto _range_expr = (*this)._field_ast->_field_impls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaeea1c4_Impl> _1ac699a1a_decl = *_range_begin;
			_iter_begin_4445923776:;
			{
				(*this)._field_table->_field_impls=jule::append((*this)._field_table->_field_impls,jule::Slice<jule::Ref<_1ac780837_Impl>>({_1ac699a1a_build_impl(_1ac699a1a_decl)}));
			}
			_iter_next_4445923776:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac699a1a_decl = *_range_begin; goto _iter_begin_4445923776; }
			_iter_end_4445923776:;
		}
	}
}



inline void _1ac699a1a_SymbolBuilder::_method_push_directive_pass(jule::Ref<_1aaeea1c4_Directive> _67442_d) {
	_1ac699a1a_Pass _67517_pass = _1ac699a1a_Pass(_67442_d->_field_token,jule::Str());
	{
		auto _range_expr = _67442_d->_field_args;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1ac699a1a_arg = *_range_begin;
			_iter_begin_4445932432:;
			{
				if (_1ac699a1a_arg != jule::Str("", 0)) {
					_67517_pass._field_text+=_1ac699a1a_arg + jule::Str(" ", 1);
				}
			}
			_iter_next_4445932432:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac699a1a_arg = *_range_begin; goto _iter_begin_4445932432; }
			_iter_end_4445932432:;
		}
	}
	_67517_pass._field_text=_67517_pass._field_text.trim(jule::Str(" \n\r\t\v", 5));
	(*this)._field_table->_field_passes=jule::append((*this)._field_table->_field_passes,jule::Slice<_1ac699a1a_Pass>({_67517_pass}));
}



inline void _1ac699a1a_SymbolBuilder::_method_append_top_directives(void) {
	{
		auto _range_expr = (*this)._field_ast->_field_top_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaeea1c4_Directive> _1ac699a1a_d = *_range_begin;
			_iter_begin_4445937744:;
			{
				{
					auto _match_expr{ _1ac699a1a_d->_field_tag };
					if (!((jule::Str("pass", 4)) == _match_expr)) { goto _case_end_4445941680; }
					_case_begin_4445941680:;
					{
						(*this)._method_push_directive_pass(_1ac699a1a_d);
					}
					goto _match_end_4445940896;
					_case_end_4445941680:;
					_match_end_4445940896:;
				}
			}
			_iter_next_4445937744:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac699a1a_d = *_range_begin; goto _iter_begin_4445937744; }
			_iter_end_4445937744:;
		}
	}
}



inline void _1ac699a1a_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_1acd9639d_SymbolTable>(new( std::nothrow ) _1acd9639d_SymbolTable(this->self->_field_ast->_field_file,jule::Slice<_1ac699a1a_Pass>(),jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>>(),jule::Slice<jule::Ref<_1aca3647d_Var>>(),jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>(),jule::Slice<jule::Ref<_1ab064271_Struct>>(),jule::Slice<jule::Ref<_1ab07a50c_Fn>>(),jule::Slice<jule::Ref<_1ac276c57_Trait>>(),jule::Slice<jule::Ref<_1ac7804a2_Enum>>(),jule::Slice<jule::Ref<_1ac780837_Impl>>()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac699a1a_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac276c57_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1ac276c57_Trait::_method_equals(jule::Ref<_1ad3e617d_TypeKind> _2421_other) {
	jule::Ref<_1ac276c57_Trait> _2513_trt = (_2421_other).alloc->_method_trt();
	if ((!(jule::real(_2513_trt)))) {
		return false;
	}
	return (&((*this))) == (_2513_trt).alloc;
}



inline jule::Bool _1ac276c57_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



inline jule::Ref<_1ab07a50c_Fn> _1ac276c57_Trait::_method_find_method(jule::Str _3934_ident) {
	{
		auto _range_expr = (*this)._field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1ac276c57_f = *_range_begin;
			_iter_begin_4445961584:;
			{
				if (_1ac276c57_f->_field_ident == _3934_ident) {
					return _1ac276c57_f;
				}
			}
			_iter_next_4445961584:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac276c57_f = *_range_begin; goto _iter_begin_4445961584; }
			_iter_end_4445961584:;
		}
	}
	return jule::new_ref<_1ab07a50c_Fn>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac276c57_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac7804a2_EnumItem::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_value)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac7804a2_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac7804a2_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1ac7804a2_Enum::_method_equals(jule::Ref<_1ad3e617d_TypeKind> _3521_other) {
	jule::Ref<_1ac7804a2_Enum> _3613_enm = (_3521_other).alloc->_method_enm();
	if ((!(jule::real(_3613_enm)))) {
		return false;
	}
	return (&((*this))) == (_3613_enm).alloc;
}



inline jule::Ref<_1ac7804a2_EnumItem> _1ac7804a2_Enum::_method_find_item(jule::Str _4732_ident) {
	{
		auto _range_expr = (*this)._field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac7804a2_EnumItem> _1ac7804a2_item = *_range_begin;
			_iter_begin_4445992400:;
			{
				if (_1ac7804a2_item->_field_ident == _4732_ident) {
					return _1ac7804a2_item;
				}
			}
			_iter_next_4445992400:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7804a2_item = *_range_begin; goto _iter_begin_4445992400; }
			_iter_end_4445992400:;
		}
	}
	return jule::new_ref<_1ac7804a2_EnumItem>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac7804a2_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac780837_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1ac780837_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac780837_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac77dd1e_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac77dd1e_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_Recover &_Src) {
	_Stream << "Recover{";
	_Stream << "handler:" << _Src._field_handler << ", ";
	_Stream << "handler_expr:" << _Src._field_handler_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "scope_owner:" << _Src._field_scope_owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1ac77dd1e_ScopeChecker::_method_find_package(jule::Str _37735_ident) {
	return (*this)._field_s->_method_find_package(_37735_ident);
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1ac77dd1e_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)> _38737_selector) {
	return (*this)._field_s->_method_select_package(_38737_selector);
}



inline jule::Ref<_1aca3647d_Var> _1ac77dd1e_ScopeChecker::_method_find_var(jule::Str _39831_ident,jule::Bool _39843_cpp_linked) {
	
	jule::Ref<_1aca3647d_Var> _40117_v = (*this)._field_table->_method___find_var(_39831_ident,_39843_cpp_linked,true);
	if (jule::real(_40117_v)) {
		return _40117_v;
	}
	jule::Ref<_1ac77dd1e_ScopeChecker> _40617_parent = (*this)._field_parent;
	_iter_begin_4446026576:;
	if (!(jule::real(_40617_parent))) { goto _iter_end_4446026576; }
	{
		jule::Ref<_1aca3647d_Var> _40821_v = _40617_parent->_field_table->_method___find_var(_39831_ident,_39843_cpp_linked,true);
		if (jule::real(_40821_v)) {
			return _40821_v;
		}
		_40617_parent=_40617_parent->_field_parent;
	}
	_iter_next_4446026576:;
	goto _iter_begin_4446026576;
	_iter_end_4446026576:;
	return (*this)._field_s->_method_find_var(_39831_ident,_39843_cpp_linked);
}



inline jule::Ref<_1ad3e617d_TypeAlias> _1ac77dd1e_ScopeChecker::_method_find_type_alias(jule::Str _42538_ident,jule::Bool _42550_cpp_linked) {
	
	jule::Ref<_1ad3e617d_TypeAlias> _42817_ta = (*this)._field_table->_method___find_type_alias(_42538_ident,_42550_cpp_linked,true);
	if (jule::real(_42817_ta)) {
		return _42817_ta;
	}
	jule::Ref<_1ac77dd1e_ScopeChecker> _43317_parent = (*this)._field_parent;
	_iter_begin_4446041680:;
	if (!(jule::real(_43317_parent))) { goto _iter_end_4446041680; }
	{
		jule::Ref<_1ad3e617d_TypeAlias> _43521_ta = _43317_parent->_field_table->_method___find_type_alias(_42538_ident,_42550_cpp_linked,true);
		if (jule::real(_43521_ta)) {
			return _43521_ta;
		}
		_43317_parent=_43317_parent->_field_parent;
	}
	_iter_next_4446041680:;
	goto _iter_begin_4446041680;
	_iter_end_4446041680:;
	return (*this)._field_s->_method_find_type_alias(_42538_ident,_42550_cpp_linked);
}



inline jule::Ref<_1ab064271_Struct> _1ac77dd1e_ScopeChecker::_method_find_struct(jule::Str _45034_ident,jule::Bool _45046_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_45034_ident,_45046_cpp_linked);
}



inline jule::Ref<_1ab07a50c_Fn> _1ac77dd1e_ScopeChecker::_method_find_fn(jule::Str _45930_ident,jule::Bool _45942_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_45930_ident,_45942_cpp_linked);
}



inline jule::Ref<_1ac276c57_Trait> _1ac77dd1e_ScopeChecker::_method_find_trait(jule::Str _46833_ident) {
	return (*this)._field_s->_method_find_trait(_46833_ident);
}



inline jule::Ref<_1ac7804a2_Enum> _1ac77dd1e_ScopeChecker::_method_find_enum(jule::Str _47732_ident) {
	return (*this)._field_s->_method_find_enum(_47732_ident);
}



inline jule::Bool _1ac77dd1e_ScopeChecker::_method_is_unsafe(void) {
	jule::Ref<_1ac77dd1e_ScopeChecker> _48517_scope = this->self;
	_julec_label_iter:;
	if (_48517_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (jule::real(_48517_scope->_field_parent)) {
		_48517_scope=_48517_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1ac77dd1e_ScopeChecker::_method_is_root(void) {
	return (!(jule::real((*this)._field_parent))) || jule::real((*this)._field_owner);
}



inline jule::Ref<_1ac77dd1e_ScopeChecker> _1ac77dd1e_ScopeChecker::_method_get_root(void) {
	jule::Ref<_1ac77dd1e_ScopeChecker> _50717_root = this->self;
	_iter_begin_4446081728:;
	if (!(jule::real(_50717_root->_field_parent) && (!(jule::real(_50717_root->_field_owner))))) { goto _iter_end_4446081728; }
	{
		_50717_root=_50717_root->_field_parent;
	}
	_iter_next_4446081728:;
	goto _iter_begin_4446081728;
	_iter_end_4446081728:;
	return _50717_root;
}



inline jule::Ref<_1ac77dd1e_Label> _1ac77dd1e_ScopeChecker::_method_find_label(jule::Str _51729_ident) {
	{
		auto _range_expr = (*this)._field_scope->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1ac77dd1e_st = *_range_begin;
			_iter_begin_4446087056:;
			{
				{
					auto _match_expr{ _1ac77dd1e_st };
					if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Label>>())) { goto _case_end_4446088944; }
					_case_begin_4446088944:;
					{
						jule::Ref<_1ac77dd1e_Label> _52125_label = _1ac77dd1e_st.operator jule::Ref<_1ac77dd1e_Label>();
						if (_52125_label->_field_ident == _51729_ident) {
							return _52125_label;
						}
					}
					goto _match_end_4446088384;
					_case_end_4446088944:;
					_match_end_4446088384:;
				}
			}
			_iter_next_4446087056:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac77dd1e_st = *_range_begin; goto _iter_begin_4446087056; }
			_iter_end_4446087056:;
		}
	}
	return jule::new_ref<_1ac77dd1e_Label>();
}



inline jule::Ref<_1ac77dd1e_ScopeLabel> _1ac77dd1e_ScopeChecker::_method_find_label_scope(jule::Str _53336_ident) {
	jule::Ref<_1ac77dd1e_ScopeLabel> _53417_label = this->self->_method_find_label_all(_53336_ident);
	if (jule::real(_53417_label) && ((_53417_label->_field_scope).alloc == (this->self).alloc)) {
		return _53417_label;
	}
	return jule::new_ref<_1ac77dd1e_ScopeLabel>();
}



inline jule::Ref<_1ac77dd1e_ScopeLabel> _1ac77dd1e_ScopeChecker::_method_find_label_all(jule::Str _54533_ident) {
	{
		auto _range_expr = (*this)._field_labels.get();
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac77dd1e_ScopeLabel> _1ac77dd1e_lbl = *_range_begin;
			_iter_begin_4446098992:;
			{
				if (_1ac77dd1e_lbl->_field_label->_field_ident == _54533_ident) {
					return _1ac77dd1e_lbl;
				}
			}
			_iter_next_4446098992:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac77dd1e_lbl = *_range_begin; goto _iter_begin_4446098992; }
			_iter_end_4446098992:;
		}
	}
	return jule::new_ref<_1ac77dd1e_ScopeLabel>();
}



inline jule::Bool _1ac77dd1e_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _55738_itself,jule::Str _55755_ident) {
	jule::Ref<_1aca3647d_Var> _55813_v = (*this)._method_find_var(_55755_ident,false);
	if ((jule::real(_55813_v) && (((jule::Uintptr)((_55813_v).alloc)) != _55738_itself)) && ((_55813_v->_field_scope).alloc == ((*this)._field_scope).alloc)) {
		return true;
	}
	jule::Ref<_1ad3e617d_TypeAlias> _56313_ta = (*this)._method_find_type_alias(_55755_ident,false);
	if ((jule::real(_56313_ta) && (((jule::Uintptr)((_56313_ta).alloc)) != _55738_itself)) && ((_56313_ta->_field_scope).alloc == ((*this)._field_tree).alloc)) {
		return true;
	}
	return false;
}



inline void _1ac77dd1e_ScopeChecker::_method_check_var_decl(jule::Ref<_1aaeea1c4_VarDecl> _57138_decl) {
	jule::Ref<_1aca3647d_Var> _57217_v = _1ac699a1a_build_var(_57138_decl);
	_57217_v->_field_scope=this->self->_field_scope;
	__JULE_DEFER({
		this->self->_field_table->_field_vars=jule::append(this->self->_field_table->_field_vars,jule::Slice<jule::Ref<_1aca3647d_Var>>({_57217_v}));
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_57217_v)}));
	});
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_57217_v).alloc)),_57217_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_57217_v->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_57217_v->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_var_decl(_57217_v,this->self);
	if ((!(_57217_v->_method_is_type_inferred())) && ((!(jule::real(_57217_v->_field_kind))) || (!(jule::real(_57217_v->_field_kind->_field_kind))))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_57217_v,this->self);
}



inline void _1ac77dd1e_ScopeChecker::_method_check_type_alias_decl(jule::Ref<_1aaeea1c4_TypeAliasDecl> _59345_decl) {
	jule::Ref<_1ad3e617d_TypeAlias> _59417_ta = _1ac699a1a_build_type_alias(_59345_decl);
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_59417_ta).alloc)),_59417_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_59417_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_59417_ta->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_type_alias_decl(_59417_ta,this->self);
	this->self->_field_table->_field_type_aliases=jule::append(this->self->_field_table->_field_type_aliases,jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>({_59417_ta}));
}



inline jule::Ref<_1ac77dd1e_Scope> _1ac77dd1e_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_1ac77dd1e_Scope>(new( std::nothrow ) _1ac77dd1e_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _1ac77dd1e_ScopeChecker::_method_check_child_ssc(jule::Ref<_1aaeea1c4_ScopeTree> _61039_tree,jule::Ref<_1ac77dd1e_Scope> _61061_s,jule::Ref<_1ac77dd1e_ScopeChecker> _61076_ssc) {
	_61076_ssc->_field_parent=this->self;
	_61076_ssc->_method_check(_61039_tree,_61061_s);
}



inline jule::Ref<_1ac77dd1e_Scope> _1ac77dd1e_ScopeChecker::_method_check_child_sc(jule::Ref<_1aaeea1c4_ScopeTree> _61538_tree,jule::Ref<_1ac77dd1e_ScopeChecker> _61560_ssc) {
	jule::Ref<_1ac77dd1e_Scope> _61617_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_61538_tree,_61617_s,_61560_ssc);
	return _61617_s;
}



inline jule::Ref<_1ac77dd1e_Scope> _1ac77dd1e_ScopeChecker::_method_check_child(jule::Ref<_1aaeea1c4_ScopeTree> _62135_tree) {
	jule::Ref<_1ac77dd1e_ScopeChecker> _62217_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_62135_tree,_62217_ssc);
}



inline void _1ac77dd1e_ScopeChecker::_method_check_anon_scope(jule::Ref<_1aaeea1c4_ScopeTree> _62640_tree) {
	jule::Ref<_1ac77dd1e_Scope> _62717_s = this->self->_method_check_child(_62640_tree);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_62717_s)}));
}



inline jule::Bool _1ac77dd1e_ScopeChecker::_method_try_call_recover(jule::Ref<_1acde49c3_Data> _63140_d) {
	{
		auto _match_expr{ _63140_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Recover>>())) { goto _case_end_4446176576; }
		goto _match_end_4446175600;
		_case_end_4446176576:;
		_case_begin_4446176240:;
		{
			return false;
		}
		goto _match_end_4446175600;
		_case_end_4446176240:;
		_match_end_4446175600:;
	}
	jule::Ref<_1ac77dd1e_Recover> _63717_rec = _63140_d->_field_model.operator jule::Ref<_1ac77dd1e_Recover>();
	_63717_rec->_field_handler=_63140_d->_field_kind->_method_fnc();
	_63717_rec->_field_scope=jule::new_struct<_1ac77dd1e_Scope>(new( std::nothrow ) _1ac77dd1e_Scope());
	_63717_rec->_field_scope_owner=this->self->_method_get_root()->_field_owner;
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_63717_rec)}));
	this->self->_field_tree->_field_stmts=this->self->_field_tree->_field_stmts.slice(static_cast<jule::Int>(this->self->_field_i + 1LL));
	this->self->_field_scope=_63717_rec->_field_scope;
	this->self->_method_check_tree();
	return true;
}



inline void _1ac77dd1e_ScopeChecker::_method_check_expr(jule::Ref<_1aaeea1c4_Expr> _65034_expr) {
	jule::Ref<_1acde49c3_Data> _65117_d = this->self->_field_s->_method_eval(_65034_expr,this->self);
	if ((!(jule::real(_65117_d)))) {
		return;
	}
	if (_65034_expr->_method_is_fn_call()) {
		jule::Bool _65717_ok = this->self->_method_try_call_recover(_65117_d);
		if (_65717_ok) {
			return;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_65117_d)}));
}



inline jule::Ref<_1ac77dd1e_If> _1ac77dd1e_ScopeChecker::_method_check_if(jule::Ref<_1aaeea1c4_If> _66632_i) {
	jule::Ref<_1ac77dd1e_Scope> _66717_s = this->self->_method_check_child(_66632_i->_field_scope);
	jule::Ref<_1acde49c3_Data> _66917_d = this->self->_field_s->_method_eval(_66632_i->_field_expr,this->self);
	if ((!(jule::real(_66917_d)))) {
		return jule::new_ref<_1ac77dd1e_If>();
	}
	jule::Ref<_1ad3e617d_Prim> _67413_prim = _66917_d->_field_kind->_method_prim();
	if ((!(jule::real(_67413_prim)))) {
		this->self->_field_s->_method_push_err(_66632_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ac77dd1e_If>();
	}
	if ((!(_67413_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_66632_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ac77dd1e_If>();
	}
	return jule::new_struct<_1ac77dd1e_If>(new( std::nothrow ) _1ac77dd1e_If(_66917_d->_field_model,_66717_s));
}



inline jule::Ref<_1ac77dd1e_Else> _1ac77dd1e_ScopeChecker::_method_check_else(jule::Ref<_1aaeea1c4_Else> _69134_e) {
	jule::Ref<_1ac77dd1e_Scope> _69217_s = this->self->_method_check_child(_69134_e->_field_scope);
	return jule::new_struct<_1ac77dd1e_Else>(new( std::nothrow ) _1ac77dd1e_Else(_69217_s));
}



inline void _1ac77dd1e_ScopeChecker::_method_check_conditional(jule::Ref<_1aaeea1c4_Conditional> _69841_conditional) {
	jule::Ref<_1ac77dd1e_Conditional> _69917_c = jule::new_struct<_1ac77dd1e_Conditional>(new( std::nothrow ) _1ac77dd1e_Conditional());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_69917_c)}));
	_69917_c->_field_elifs=jule::Slice<jule::Ref<_1ac77dd1e_If>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_69841_conditional->_field_tail.len() + 1LL)));
	_69917_c->_field_elifs[0LL]=this->self->_method_check_if(_69841_conditional->_field_head);
	{
		auto _range_expr = _69841_conditional->_field_tail;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac77dd1e_i = 0;
			jule::Ref<_1aaeea1c4_If> _1ac77dd1e_elif = *_range_begin;
			_iter_begin_4446228096:;
			{
				_69917_c->_field_elifs[static_cast<jule::Int>(_1ac77dd1e_i + 1LL)]=this->self->_method_check_if(_1ac77dd1e_elif);
			}
			_iter_next_4446228096:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac77dd1e_i; _1ac77dd1e_elif = *_range_begin; goto _iter_begin_4446228096; }
			_iter_end_4446228096:;
		}
	}
	if (jule::real(_69841_conditional->_field_default)) {
		_69917_c->_field_default=this->self->_method_check_else(_69841_conditional->_field_default);
	}
}



inline jule::Ref<_1ac77dd1e_Scope> _1ac77dd1e_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _71439_it,jule::Ref<_1aaeea1c4_ScopeTree> _71456_tree,jule::Ref<_1ac77dd1e_ScopeChecker> _71478_ssc) {
	_71478_ssc->_field_it=_71439_it;
	return this->self->_method_check_child_sc(_71456_tree,_71478_ssc);
}



inline jule::Ref<_1ac77dd1e_Scope> _1ac77dd1e_ScopeChecker::_method_check_iter_scope(jule::Uintptr _71936_it,jule::Ref<_1aaeea1c4_ScopeTree> _71953_tree) {
	jule::Ref<_1ac77dd1e_ScopeChecker> _72017_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_71936_it,_71953_tree,_72017_ssc);
}



inline void _1ac77dd1e_ScopeChecker::_method_check_inf_iter(jule::Ref<_1aaeea1c4_Iter> _72438_it) {
	jule::Ref<_1ac77dd1e_InfIter> _72517_kind = jule::new_struct<_1ac77dd1e_InfIter>(new( std::nothrow ) _1ac77dd1e_InfIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_72517_kind)}));
	_72517_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_72517_kind).alloc)),_72438_it->_field_scope);
}



inline void _1ac77dd1e_ScopeChecker::_method_check_while_iter(jule::Ref<_1aaeea1c4_Iter> _73240_it) {
	jule::Ref<_1aaeea1c4_WhileKind> _73317_wh = _73240_it->_field_kind.operator jule::Ref<_1aaeea1c4_WhileKind>();
	if ((!(jule::real(_73317_wh->_field_expr))) && (_73317_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_73240_it);
		return;
	}
	jule::Ref<_1ac77dd1e_WhileIter> _73917_kind = jule::new_struct<_1ac77dd1e_WhileIter>(new( std::nothrow ) _1ac77dd1e_WhileIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_73917_kind)}));
	_73917_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_73917_kind).alloc)),_73240_it->_field_scope);
	if (jule::real(_73317_wh->_field_expr)) {
		jule::Ref<_1acde49c3_Data> _74621_d = this->self->_field_s->_method_eval(_73317_wh->_field_expr,this->self);
		if ((!(jule::real(_74621_d)))) {
			return;
		}
		jule::Ref<_1ad3e617d_Prim> _75117_prim = _74621_d->_field_kind->_method_prim();
		if ((!(jule::real(_75117_prim)))) {
			this->self->_field_s->_method_push_err(_73240_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		if ((!(_75117_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_73240_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		_73917_kind->_field_expr=_74621_d->_field_model;
	}
	if (_73317_wh->_method_is_while_next()) {
		if ((!(_1ac77dd1e_is_valid_ast_st_for_next_st(_73317_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_73317_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			return;
		}
		jule::I64 _77117_n = this->self->_field_scope->_field_stmts.len();
		this->self->_method_check_node(_73317_wh->_field_next);
		if (_77117_n < this->self->_field_scope->_field_stmts.len()) {
			jule::Any _77425_st = this->self->_field_scope->_field_stmts[static_cast<jule::Int>(_77117_n)];
			this->self->_field_scope->_field_stmts=this->self->_field_scope->_field_stmts.slice(0LL,static_cast<jule::Int>(_77117_n));
			if ((!(_1ac77dd1e_is_valid_st_for_next_st(_77425_st)))) {
				this->self->_field_s->_method_push_err(_73317_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			}
			_73917_kind->_field_next=_77425_st;
		}
	}
}



inline void _1ac77dd1e_ScopeChecker::_method_check_range_iter(jule::Ref<_1aaeea1c4_Iter> _78540_it) {
	jule::Ref<_1aaeea1c4_RangeKind> _78617_rang = _78540_it->_field_kind.operator jule::Ref<_1aaeea1c4_RangeKind>();
	jule::Ref<_1acde49c3_Data> _78817_d = this->self->_field_s->_method_eval(_78617_rang->_field_expr,this->self);
	if ((!(jule::real(_78817_d)))) {
		return;
	}
	jule::Ref<_1ac77dd1e_RangeIter> _79317_kind = jule::new_struct<_1ac77dd1e_RangeIter>(new( std::nothrow ) _1ac77dd1e_RangeIter(_78817_d,jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1aca3647d_Var>(),jule::Ref<_1aca3647d_Var>()));
	_1acc33119_RangeChecker _79717_rc = _1acc33119_RangeChecker(this->self,_78617_rang,_79317_kind,_78817_d);
	jule::Bool _80313_ok = _79717_rc._method_check();
	if ((!(_80313_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_79317_kind)}));
	jule::Ref<_1ac77dd1e_ScopeChecker> _81017_ssc = this->self->_method_new_child_checker();
	if (jule::real(_79317_kind->_field_key_a)) {
		_81017_ssc->_field_table->_field_vars=jule::append(_81017_ssc->_field_table->_field_vars,jule::Slice<jule::Ref<_1aca3647d_Var>>({_79317_kind->_field_key_a}));
	}
	if (jule::real(_79317_kind->_field_key_b)) {
		_81017_ssc->_field_table->_field_vars=jule::append(_81017_ssc->_field_table->_field_vars,jule::Slice<jule::Ref<_1aca3647d_Var>>({_79317_kind->_field_key_b}));
	}
	_79317_kind->_field_scope=this->self->_method_check_iter_scope_sc(((jule::Uintptr)((_79317_kind).alloc)),_78540_it->_field_scope,_81017_ssc);
}



inline void _1ac77dd1e_ScopeChecker::_method_check_iter(jule::Ref<_1aaeea1c4_Iter> _82334_it) {
	if (_82334_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_82334_it);
		return;
	}
	{
		auto _match_expr{ _82334_it->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_WhileKind>>())) { goto _case_end_4446321840; }
		_case_begin_4446321840:;
		{
			this->self->_method_check_while_iter(_82334_it);
		}
		goto _match_end_4446320000;
		_case_end_4446321840:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_RangeKind>>())) { goto _case_end_4446321312; }
		_case_begin_4446321312:;
		{
			this->self->_method_check_range_iter(_82334_it);
		}
		goto _match_end_4446320000;
		_case_end_4446321312:;
		_case_begin_4446318560:;
		{
			jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
		}
		goto _match_end_4446320000;
		_case_end_4446318560:;
		_match_end_4446320000:;
	}
}



inline jule::Bool _1ac77dd1e_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _83642_it) {
	jule::Ref<_1ac77dd1e_ScopeChecker> _83717_scope = this->self;
	_julec_label_iter:;
	if (_83717_scope->_field_it == _83642_it) {
		return true;
	}
	if (jule::real(_83717_scope->_field_parent)) {
		_83717_scope=_83717_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1ac77dd1e_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _85243_ptr) {
	jule::Ref<_1ac77dd1e_ScopeChecker> _85317_scope = this->self;
	_julec_label_iter:;
	if (_85317_scope->_field_it == _85243_ptr) {
		return true;
	}
	if (_85317_scope->_field_cse != 0LL) {
		jule::Uintptr _86117_mtch = ((jule::Uintptr)((((_1ac77dd1e_Case*)(_85317_scope->_field_cse))->_field_owner).alloc));
		if (_86117_mtch == _85243_ptr) {
			return true;
		}
	}
	if (jule::real(_85317_scope->_field_parent)) {
		_85317_scope=_85317_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ref<_1ac77dd1e_ContSt> _1ac77dd1e_ScopeChecker::_method_check_cont_valid_scope(jule::Ref<_1aaeea1c4_ContSt> _87541_c) {
	if (_87541_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_1ac77dd1e_ContSt>(new( std::nothrow ) _1ac77dd1e_ContSt());
	}
	_1ac77dd1e_ScopeChecker _88017_scope = (*this);
	_julec_label_iter:;
	{
		if (!((((_88017_scope._field_it == 0LL) && jule::real(_88017_scope._field_parent)) && (!(jule::real(_88017_scope._field_owner)))))) { goto _case_end_4446349632; }
		_case_begin_4446349632:;
		{
			_88017_scope=_88017_scope._field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4446349456;
		_case_end_4446349632:;
		if (!((_88017_scope._field_it != 0LL))) { goto _case_end_4446349760; }
		_case_begin_4446349760:;
		{
			return jule::new_struct<_1ac77dd1e_ContSt>(new( std::nothrow ) _1ac77dd1e_ContSt(_88017_scope._field_it));
		}
		goto _match_end_4446349456;
		_case_end_4446349760:;
		_match_end_4446349456:;
	}
	(*this)._field_s->_method_push_err(_87541_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>({}));
	return jule::new_ref<_1ac77dd1e_ContSt>();
}



inline void _1ac77dd1e_ScopeChecker::_method_check_cont(jule::Ref<_1aaeea1c4_ContSt> _89530_c) {
	jule::Ref<_1ac77dd1e_ContSt> _89617_cont = this->self->_method_check_cont_valid_scope(_89530_c);
	if ((!(jule::real(_89617_cont)))) {
		return;
	}
	if (_89530_c->_field_label._field_id != 0LLU) {
		jule::Ref<_1ac77dd1e_ScopeLabel> _90221_label = _1ac77dd1e_find_label_parent(_89530_c->_field_label._field_kind,this->self->_field_parent);
		if ((!(jule::real(_90221_label)))) {
			this->self->_field_s->_method_push_err(_89530_c->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_89530_c->_field_label._field_kind)}));
			return;
		}
		_90221_label->_field_used=true;
		if ((_90221_label->_field_pos + 1LL) >= _90221_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_89530_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _91517_i = _90221_label->_field_pos + 1LL;
		if (_91517_i >= _90221_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_89530_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		} else {
			jule::Any _91925_st = _90221_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_91517_i)];
			{
				auto _match_expr{ _91925_st };
				if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_InfIter>>())) { goto _case_end_4446381520; }
				_case_begin_4446381520:;
				{
					_89617_cont->_field_it=((jule::Uintptr)((_91925_st.operator jule::Ref<_1ac77dd1e_InfIter>()).alloc));
				}
				goto _match_end_4446378400;
				_case_end_4446381520:;
				if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_RangeIter>>())) { goto _case_end_4446379216; }
				_case_begin_4446379216:;
				{
					_89617_cont->_field_it=((jule::Uintptr)((_91925_st.operator jule::Ref<_1ac77dd1e_RangeIter>()).alloc));
				}
				goto _match_end_4446378400;
				_case_end_4446379216:;
				if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_WhileIter>>())) { goto _case_end_4446379328; }
				_case_begin_4446379328:;
				{
					_89617_cont->_field_it=((jule::Uintptr)((_91925_st.operator jule::Ref<_1ac77dd1e_WhileIter>()).alloc));
				}
				goto _match_end_4446378400;
				_case_end_4446379328:;
				_case_begin_4446378800:;
				{
					this->self->_field_s->_method_push_err(_89530_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4446378400;
				_case_end_4446378800:;
				_match_end_4446378400:;
			}
		}
	}
	if (_89617_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_89617_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_89530_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_89617_cont)}));
}



inline void _1ac77dd1e_ScopeChecker::_method_check_label(jule::Ref<_1aaeea1c4_LabelSt> _93835_l) {
	if (jule::real(this->self->_method_find_label(_93835_l->_field_ident))) {
		this->self->_field_s->_method_push_err(_93835_l->_field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_93835_l->_field_ident)}));
		return;
	}
	jule::Ref<_1ac77dd1e_Label> _94417_label = jule::new_struct<_1ac77dd1e_Label>(new( std::nothrow ) _1ac77dd1e_Label(_93835_l->_field_ident));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_94417_label)}));
	this->self->_field_labels=jule::append(this->self->_field_labels.get(),jule::Slice<jule::Ref<_1ac77dd1e_ScopeLabel>>({jule::new_struct<_1ac77dd1e_ScopeLabel>(new( std::nothrow ) _1ac77dd1e_ScopeLabel(_93835_l->_field_token,_94417_label,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL),this->self,jule::Bool()))}));
}



inline void _1ac77dd1e_ScopeChecker::_method_push_goto(jule::Ref<_1aaeea1c4_GotoSt> _95733_gt) {
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1ac77dd1e_GotoSt>(new( std::nothrow ) _1ac77dd1e_GotoSt(_95733_gt->_field_label._field_kind)))}));
	this->self->_field_gotos=jule::append(this->self->_field_gotos.get(),jule::Slice<jule::Ref<_1ac77dd1e_ScopeGoto>>({jule::new_struct<_1ac77dd1e_ScopeGoto>(new( std::nothrow ) _1ac77dd1e_ScopeGoto(_95733_gt,this->self,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL)))}));
}



inline void _1ac77dd1e_ScopeChecker::_method_check_postfix(jule::Ref<_1aaeea1c4_AssignSt> _96937_a) {
	if (_96937_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_96937_a->_field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1acde49c3_Data> _97517_d = this->self->_field_s->_method_eval(_96937_a->_field_left[0LL]->_field_expr,this->self);
	if ((!(jule::real(_97517_d)))) {
		return;
	}
	_1ac77dd1e_check_assign(this->self->_field_s,_97517_d,jule::new_ref<_1acde49c3_Data>(),_96937_a->_field_setter);
	if (jule::real(_97517_d->_field_kind->_method_ptr())) {
		jule::Ref<_1ad3e617d_Ptr> _98321_ptr = _97517_d->_field_kind->_method_ptr();
		if ((!(_98321_ptr->_method_is_unsafe())) && (!(this->self->_method_is_unsafe()))) {
			this->self->_field_s->_method_push_err(_96937_a->_field_left[0LL]->_field_expr->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			return;
		}
	}
	jule::Ref<_1ad3e617d_TypeKind> _99017_check_t = _97517_d->_field_kind;
	if (jule::real(_97517_d->_field_kind->_method_ref())) {
		_99017_check_t=_97517_d->_field_kind->_method_ref()->_field_elem;
	}
	if ((!(jule::real(_99017_check_t->_method_prim()))) || (!(_1ad70d41d_is_num(_99017_check_t->_method_prim()->_field_kind)))) {
		this->self->_field_s->_method_push_err(_96937_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_96937_a->_field_setter._field_kind),jule::Any(_97517_d->_field_kind->_method_to_str())}));
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1ac77dd1e_Postfix>(new( std::nothrow ) _1ac77dd1e_Postfix(_97517_d->_field_model,_96937_a->_field_setter._field_kind)))}));
}



inline jule::Bool _1ac77dd1e_ScopeChecker::_method_is_new_assign_ident(jule::Str _100638_ident) {
	if (_1ab0277b7_is_ignore_ident(_100638_ident) || (_100638_ident == jule::Str("", 0))) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_100638_ident,false) == nullptr;
}



inline void _1ac77dd1e_ScopeChecker::_method_check_single_assign(jule::Ref<_1aaeea1c4_AssignSt> _101443_a) {
	jule::Ref<_1acde49c3_Data> _101517_l = jule::new_ref<_1acde49c3_Data>();
	jule::Ref<_1acde49c3_Data> _101617_r = jule::new_ref<_1acde49c3_Data>();
	if ((!(_1ab0277b7_is_ignore_ident(_101443_a->_field_left[0LL]->_field_ident)))) {
		_101517_l=this->self->_field_s->_method_eval(_101443_a->_field_left[0LL]->_field_expr,this->self);
		if ((!(jule::real(_101517_l)))) {
			return;
		}
	}
	if (jule::real(_101517_l)) {
		_101617_r=this->self->_field_s->_method_evalp(_101443_a->_field_right,this->self,_101517_l->_field_kind);
	} else {
		_101617_r=this->self->_field_s->_method_eval(_101443_a->_field_right,this->self);
	}
	if ((!(jule::real(_101617_r)))) {
		return;
	}
	if ((!(jule::real(_101517_l)))) {
		if (_101617_r->_field_kind->_method_is_void()) {
			this->self->_field_s->_method_push_err(_101443_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_101617_r)}));
		return;
	}
	if ((!(_1ac77dd1e_check_assign(this->self->_field_s,_101517_l,_101617_r,_101443_a->_field_setter)))) {
		return;
	}
	if (jule::real(_101617_r->_field_kind->_method_tup())) {
		this->self->_field_s->_method_push_err(_101443_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1ac77dd1e_Assign>(new( std::nothrow ) _1ac77dd1e_Assign(_101517_l->_field_model,_101617_r->_field_model,_101443_a->_field_setter._field_kind)))}));
	if ((_101443_a->_field_setter._field_kind != jule::Str("=", 1)) && (!(_101617_r->_method_is_const()))) {
		_101443_a->_field_setter._field_kind=_101443_a->_field_setter._field_kind.slice(0LL,static_cast<jule::Int>(_101443_a->_field_setter._field_kind.len() - 1LL));
		_1acde49c3_BinopSolver _106121_solver = _1acde49c3_BinopSolver(jule::new_struct<_1acde49c3_Eval>(new( std::nothrow ) _1acde49c3_Eval(this->self->_field_s,this->self,jule::Ref<_1ad3e617d_TypeKind>(),this->self->_method_is_unsafe(),jule::Ref<_1aca3647d_Var>())),jule::Ref<_1acde49c3_Data>(),jule::Ref<_1acde49c3_Data>(),_101443_a->_field_setter);
		_101617_r=_106121_solver._method_solve_explicit(_101517_l,_101617_r);
		if ((!(jule::real(_101617_r)))) {
			return;
		}
		_101443_a->_field_setter._field_kind+=jule::Str("=", 1);
	}
	_1acc33119_AssignTypeChecker _107717_checker = _1acc33119_AssignTypeChecker(this->self->_field_s,_101517_l->_field_kind,_101617_r,_101443_a->_field_setter,true);
	_107717_checker._method_check();
}



inline void _1ac77dd1e_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ref<_1ac77dd1e_MultiAssign> _108757_st,jule::Ref<_1aaeea1c4_AssignSt> _108813_a,jule::Ref<_1aaeea1c4_AssignLeft> _108827_lexpr,jule::Ref<_1acde49c3_Data> _108851_l,jule::Ref<_1acde49c3_Data> _108865_r) {
	if (_1ab0277b7_is_ignore_ident(_108827_lexpr->_field_ident)) {
		if (_108865_r->_field_kind->_method_is_void()) {
			(*this)._field_s->_method_push_err(_108813_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		_108757_st->_field_l=jule::append(_108757_st->_field_l,jule::Slice<jule::Any>({jule::Any(nullptr)}));
		return;
	}
	if (_108813_a->_field_declarative && (*this)._method_is_new_assign_ident(_108827_lexpr->_field_ident)) {
		jule::Ref<_1aca3647d_Var> _110021_v = jule::new_struct<_1aca3647d_Var>(new( std::nothrow ) _1aca3647d_Var((*this)._field_scope,_108827_lexpr->_field_token,_108827_lexpr->_field_ident,jule::Bool(),jule::Bool(),_108827_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_108827_lexpr->_field_reference,jule::Str(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::new_struct<_1acde49c3_Value>(new( std::nothrow ) _1acde49c3_Value(_108813_a->_field_right,_108865_r)),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Slice<jule::Ref<_1aaeea1c4_Directive>>(),jule::Slice<jule::Ref<_1aca3647d_Var>>()));
		(*this)._field_s->_method_check_var(_110021_v);
		_108757_st->_field_l=jule::append(_108757_st->_field_l,jule::Slice<jule::Any>({jule::Any(_110021_v)}));
		(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ref<_1aca3647d_Var>>({_110021_v}));
		(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_110021_v)}));
		return;
	}
	if (_108827_lexpr->_field_mutable || _108827_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_108827_lexpr->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_108827_lexpr->_field_ident)}));
		(*this)._field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if ((!(_1ac77dd1e_check_assign((*this)._field_s,_108851_l,_108865_r,_108813_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_108851_l->_field_mutable,false,_108851_l->_field_kind,_108865_r,_108813_a->_field_setter);
	_1acc33119_AssignTypeChecker _113517_checker = _1acc33119_AssignTypeChecker((*this)._field_s,_108851_l->_field_kind,_108865_r,_108813_a->_field_setter,true);
	_113517_checker._method_check();
	_108757_st->_field_l=jule::append(_108757_st->_field_l,jule::Slice<jule::Any>({_108851_l->_field_model}));
}



inline void _1ac77dd1e_ScopeChecker::_method_check_ret_multi_assign(jule::Ref<_1aaeea1c4_AssignSt> _114746_a) {
	jule::Ref<_1acde49c3_Data> _114817_rd = this->self->_field_s->_method_eval(_114746_a->_field_right,this->self);
	if ((!(jule::real(_114817_rd)))) {
		return;
	}
	jule::Slice<jule::Ref<_1acde49c3_Data>> _115317_r = _1ac77dd1e_get_datas_from_tuple_data(_114817_rd);
	{
		if (!((_114746_a->_field_left.len() > _115317_r.len()))) { goto _case_end_4446549424; }
		_case_begin_4446549424:;
		{
			this->self->_field_s->_method_push_err(_114746_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4446549280;
		_case_end_4446549424:;
		if (!((_114746_a->_field_left.len() < _115317_r.len()))) { goto _case_end_4446549552; }
		_case_begin_4446549552:;
		{
			this->self->_field_s->_method_push_err(_114746_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4446549280;
		_case_end_4446549552:;
		_match_end_4446549280:;
	}
	jule::Ref<_1ac77dd1e_MultiAssign> _116517_st = jule::new_struct<_1ac77dd1e_MultiAssign>(new( std::nothrow ) _1ac77dd1e_MultiAssign(jule::Slice<jule::Any>(),_114817_rd->_field_model));
	if ((!(jule::real(_114817_rd->_field_kind->_method_tup())))) {
		_116517_st->_field_r=jule::Any(jule::new_struct<_1ab0a4954_TupleExprModel>(new( std::nothrow ) _1ab0a4954_TupleExprModel(_115317_r)));
	}
	{
		auto _range_expr = _114746_a->_field_left;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac77dd1e_i = 0;
			_iter_begin_4446559840:;
			{
				jule::Ref<_1aaeea1c4_AssignLeft> _117421_lexpr = _114746_a->_field_left[static_cast<jule::Int>(_1ac77dd1e_i)];
				jule::Ref<_1acde49c3_Data> _117521_l = jule::new_ref<_1acde49c3_Data>();
				jule::Ref<_1acde49c3_Data> _117621_r = _115317_r[static_cast<jule::Int>(_1ac77dd1e_i)];
				if ((!(_1ab0277b7_is_ignore_ident(_117421_lexpr->_field_ident))) && ((!(_114746_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_117421_lexpr->_field_ident))))) {
					_117521_l=this->self->_field_s->_method_eval(_117421_lexpr->_field_expr,this->self);
					if ((!(jule::real(_117521_l)))) {
						goto _iter_next_4446559840;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_116517_st,_114746_a,_117421_lexpr,_117521_l,_117621_r);
			}
			_iter_next_4446559840:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac77dd1e_i; goto _iter_begin_4446559840; }
			_iter_end_4446559840:;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_116517_st)}));
}



inline void _1ac77dd1e_ScopeChecker::_method_check_multi_assign(jule::Ref<_1aaeea1c4_AssignSt> _119142_a) {
	{
		auto _match_expr{ _119142_a->_field_right->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_FnCallExpr>>())) { goto _case_end_4446576800; }
		_case_begin_4446576800:;
		{
			this->self->_method_check_ret_multi_assign(_119142_a);
			return;
		}
		goto _match_end_4446575904;
		_case_end_4446576800:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_UnsafeExpr>>())) { goto _case_end_4446576928; }
		_case_begin_4446576928:;
		{
			{
				auto _match_expr{ _119142_a->_field_right->_field_kind.operator jule::Ref<_1aaeea1c4_UnsafeExpr>()->_field_expr };
				if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_FnCallExpr>>())) { goto _case_end_4446581232; }
				_case_begin_4446581232:;
				{
					this->self->_method_check_ret_multi_assign(_119142_a);
					return;
				}
				goto _match_end_4446578752;
				_case_end_4446581232:;
				_match_end_4446578752:;
			}
		}
		goto _match_end_4446575904;
		_case_end_4446576928:;
		_match_end_4446575904:;
	}
	jule::Slice<jule::Any> _120517_right = _1ac77dd1e_get_expr_models(_119142_a->_field_right->_field_kind);
	{
		if (!((_119142_a->_field_left.len() > _120517_right.len()))) { goto _case_end_4446584208; }
		_case_begin_4446584208:;
		{
			this->self->_field_s->_method_push_err(_119142_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4446582416;
		_case_end_4446584208:;
		if (!((_119142_a->_field_left.len() < _120517_right.len()))) { goto _case_end_4446584320; }
		_case_begin_4446584320:;
		{
			this->self->_field_s->_method_push_err(_119142_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4446582416;
		_case_end_4446584320:;
		_match_end_4446582416:;
	}
	jule::Ref<_1ab0a4954_TupleExprModel> _121717_right_tuple = jule::new_struct<_1ab0a4954_TupleExprModel>(new( std::nothrow ) _1ab0a4954_TupleExprModel());
	jule::Ref<_1ac77dd1e_MultiAssign> _121917_st = jule::new_struct<_1ac77dd1e_MultiAssign>(new( std::nothrow ) _1ac77dd1e_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_121717_right_tuple)));
	{
		auto _range_expr = _119142_a->_field_left;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac77dd1e_i = 0;
			_iter_begin_4446593424:;
			{
				jule::Ref<_1aaeea1c4_AssignLeft> _122421_lexpr = _119142_a->_field_left[static_cast<jule::Int>(_1ac77dd1e_i)];
				jule::Ref<_1acde49c3_Data> _122521_l = jule::new_ref<_1acde49c3_Data>();
				jule::Ref<_1acde49c3_Data> _122621_r = jule::new_ref<_1acde49c3_Data>();
				if ((!(_1ab0277b7_is_ignore_ident(_122421_lexpr->_field_ident))) && ((!(_119142_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_122421_lexpr->_field_ident))))) {
					_122521_l=this->self->_field_s->_method_eval(_122421_lexpr->_field_expr,this->self);
					if ((!(jule::real(_122521_l)))) {
						goto _iter_next_4446593424;
					}
				}
				if (jule::real(_122521_l)) {
					jule::Ref<_1aaeea1c4_Expr> _123625_expr = jule::new_struct<_1aaeea1c4_Expr>(new( std::nothrow ) _1aaeea1c4_Expr(_119142_a->_field_right->_field_token,_120517_right[static_cast<jule::Int>(_1ac77dd1e_i)]));
					_122621_r=this->self->_field_s->_method_evalp(_123625_expr,this->self,_122521_l->_field_kind);
				} else {
					jule::Ref<_1aaeea1c4_Expr> _123925_expr = jule::new_struct<_1aaeea1c4_Expr>(new( std::nothrow ) _1aaeea1c4_Expr(_119142_a->_field_right->_field_token,_120517_right[static_cast<jule::Int>(_1ac77dd1e_i)]));
					_122621_r=this->self->_field_s->_method_eval(_123925_expr,this->self);
				}
				if ((!(jule::real(_122621_r)))) {
					goto _iter_next_4446593424;
				}
				_121717_right_tuple->_field_datas=jule::append(_121717_right_tuple->_field_datas,jule::Slice<jule::Ref<_1acde49c3_Data>>({_122621_r}));
				this->self->_method___process_end_part_of_multi_assign(_121917_st,_119142_a,_122421_lexpr,_122521_l,_122621_r);
			}
			_iter_next_4446593424:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac77dd1e_i; goto _iter_begin_4446593424; }
			_iter_end_4446593424:;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_121917_st)}));
}



inline void _1ac77dd1e_ScopeChecker::_method_check_assign_st(jule::Ref<_1aaeea1c4_AssignSt> _125439_a) {
	if (_1ab0277b7_is_postfix_op(_125439_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_125439_a);
		return;
	}
	if ((_125439_a->_field_left.len() == 1LL) && (!(_125439_a->_field_declarative))) {
		this->self->_method_check_single_assign(_125439_a);
		return;
	}
	this->self->_method_check_multi_assign(_125439_a);
}



inline jule::Ref<_1ac77dd1e_Scope> _1ac77dd1e_ScopeChecker::_method_check_case_scope(jule::Ref<_1ac77dd1e_Case> _126836_c,jule::Ref<_1aaeea1c4_ScopeTree> _126850_tree) {
	jule::Ref<_1ac77dd1e_ScopeChecker> _126917_ssc = this->self->_method_new_child_checker();
	_126917_ssc->_field_cse=((jule::Uintptr)((_126836_c).alloc));
	return this->self->_method_check_child_sc(_126850_tree,_126917_ssc);
}



inline jule::Ref<_1ac77dd1e_Case> _1ac77dd1e_ScopeChecker::_method_check_case(jule::Ref<_1ac77dd1e_Match> _127434_m,jule::Int _127445_i,jule::Ref<_1aaeea1c4_Case> _127457_c,jule::Ref<_1acde49c3_Data> _127487_expr) {
	jule::Ref<_1ac77dd1e_Case> _127517__case = _127434_m->_field_cases[static_cast<jule::Int>(_127445_i)];
	_127517__case->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_127457_c->_field_exprs.len())));
	{
		auto _range_expr = _127457_c->_field_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac77dd1e_i = 0;
			jule::Ref<_1aaeea1c4_Expr> _1ac77dd1e_e = *_range_begin;
			_iter_begin_4444243872:;
			{
				if (_127434_m->_field_type_match) {
					jule::Ref<_1acde49c3_Eval> _128025_eval = jule::new_struct<_1acde49c3_Eval>(new( std::nothrow ) _1acde49c3_Eval(this->self->_field_s,this->self,jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Ref<_1aca3647d_Var>()));
					jule::Ref<_1acde49c3_Data> _128525_d = _128025_eval->_method_eval(_1ac77dd1e_e);
					if (jule::real(_128525_d)) {
						_127517__case->_field_exprs[static_cast<jule::Int>(_1ac77dd1e_i)]=jule::Any(_128525_d->_field_kind);
						if (_1ac77dd1e_count_match_type(_127434_m,_128525_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_1ac77dd1e_e->_field_token,jule::Str("type is already checked: @", 26),jule::Slice<jule::Any>({jule::Any(_128525_d->_field_kind->_method_to_str())}));
						}
					}
					jule::Ref<_1ac276c57_Trait> _129321_trt = _127487_expr->_field_kind->_method_trt();
					if (jule::real(_129321_trt)) {
						this->self->_field_s->_method_check_type_compatibility(_127487_expr->_field_kind,_128525_d->_field_kind,_1ac77dd1e_e->_field_token,false);
					}
					goto _iter_next_4444243872;
				}
				jule::Ref<_1acde49c3_Data> _130121_d = this->self->_field_s->_method_eval(_1ac77dd1e_e,this->self);
				if ((!(jule::real(_130121_d)))) {
					goto _iter_next_4444243872;
				}
				_127517__case->_field_exprs[static_cast<jule::Int>(_1ac77dd1e_i)]=_130121_d->_field_model;
				_1acc33119_AssignTypeChecker _130821_checker = _1acc33119_AssignTypeChecker(this->self->_field_s,_127487_expr->_field_kind,_130121_d,_1ac77dd1e_e->_field_token,true);
				_130821_checker._method_check();
			}
			_iter_next_4444243872:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac77dd1e_i; _1ac77dd1e_e = *_range_begin; goto _iter_begin_4444243872; }
			_iter_end_4444243872:;
		}
	}
	_127517__case->_field_scope=this->self->_method_check_case_scope(_127517__case,_127457_c->_field_scope);
	return _127517__case;
}



inline void _1ac77dd1e_ScopeChecker::_method_check_cases(jule::Ref<_1aaeea1c4_MatchCase> _132235_m,jule::Ref<_1ac77dd1e_Match> _132270_rm,jule::Ref<_1acde49c3_Data> _132286_expr) {
	_132270_rm->_field_cases=jule::Slice<jule::Ref<_1ac77dd1e_Case>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_132235_m->_field_cases.len())));
	{
		auto _range_expr = _132235_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac77dd1e_i = 0;
			_iter_begin_4444279024:;
			{
				jule::Ref<_1ac77dd1e_Case> _132521__case = jule::new_struct<_1ac77dd1e_Case>(new( std::nothrow ) _1ac77dd1e_Case(_132270_rm,jule::Ref<_1ac77dd1e_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_1ac77dd1e_Case>()));
				if (_1ac77dd1e_i > 0LL) {
					_132270_rm->_field_cases[static_cast<jule::Int>(_1ac77dd1e_i - 1LL)]->_field_next=_132521__case;
				}
				_132270_rm->_field_cases[static_cast<jule::Int>(_1ac77dd1e_i)]=_132521__case;
			}
			_iter_next_4444279024:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac77dd1e_i; goto _iter_begin_4444279024; }
			_iter_end_4444279024:;
		}
	}
	if (jule::real(_132270_rm->_field_default) && (_132235_m->_field_cases.len() > 0LL)) {
		_132270_rm->_field_cases[static_cast<jule::Int>(_132270_rm->_field_cases.len() - 1LL)]->_field_next=_132270_rm->_field_default;
	}
	{
		auto _range_expr = _132235_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac77dd1e_i = 0;
			jule::Ref<_1aaeea1c4_Case> _1ac77dd1e_c = *_range_begin;
			_iter_begin_4444288128:;
			{
				this->self->_method_check_case(_132270_rm,_1ac77dd1e_i,_1ac77dd1e_c,_132286_expr);
			}
			_iter_next_4444288128:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac77dd1e_i; _1ac77dd1e_c = *_range_begin; goto _iter_begin_4444288128; }
			_iter_end_4444288128:;
		}
	}
}



inline jule::Ref<_1ac77dd1e_Case> _1ac77dd1e_ScopeChecker::_method_check_default(jule::Ref<_1ac77dd1e_Match> _134537_m,jule::Ref<_1aaeea1c4_Else> _134552_d) {
	jule::Ref<_1ac77dd1e_Case> _134617_def = jule::new_struct<_1ac77dd1e_Case>(new( std::nothrow ) _1ac77dd1e_Case(_134537_m,jule::Ref<_1ac77dd1e_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_1ac77dd1e_Case>()));
	_134617_def->_field_scope=this->self->_method_check_case_scope(_134617_def,_134552_d->_field_scope);
	return _134617_def;
}



inline void _1ac77dd1e_ScopeChecker::_method_check_type_match(jule::Ref<_1aaeea1c4_MatchCase> _135340_m) {
	jule::Ref<_1acde49c3_Data> _135417_d = this->self->_field_s->_method_eval(_135340_m->_field_expr,this->self);
	if ((!(jule::real(_135417_d)))) {
		return;
	}
	if ((!((jule::real(_135417_d->_field_kind->_method_prim()) && _135417_d->_field_kind->_method_prim()->_method_is_any()) || jule::real(_135417_d->_field_kind->_method_trt())))) {
		this->self->_field_s->_method_push_err(_135340_m->_field_expr->_field_token,jule::Str("type-case must be have <any> or trait typed expression", 54),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1ac77dd1e_Match> _136417_tm = jule::new_struct<_1ac77dd1e_Match>(new( std::nothrow ) _1ac77dd1e_Match(_135417_d,true,jule::Slice<jule::Ref<_1ac77dd1e_Case>>(),jule::Ref<_1ac77dd1e_Case>()));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_136417_tm)}));
	if (jule::real(_135340_m->_field_default)) {
		_136417_tm->_field_default=this->self->_method_check_default(_136417_tm,_135340_m->_field_default);
	}
	this->self->_method_check_cases(_135340_m,_136417_tm,_135417_d);
}



inline void _1ac77dd1e_ScopeChecker::_method_check_common_match(jule::Ref<_1aaeea1c4_MatchCase> _137742_m) {
	jule::Ref<_1acde49c3_Data> _137817_d = jule::new_ref<_1acde49c3_Data>();
	if ((!(jule::real(_137742_m->_field_expr)))) {
		_137817_d=jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1ad6d5cec_Const::_static_method_new_bool(true)));
		_137817_d->_field_model=jule::Any(_137817_d->_field_constant);
	} else {
		_137817_d=this->self->_field_s->_method_eval(_137742_m->_field_expr,this->self);
		if ((!(jule::real(_137817_d)))) {
			return;
		}
	}
	jule::Ref<_1ac77dd1e_Match> _139217_mc = jule::new_struct<_1ac77dd1e_Match>(new( std::nothrow ) _1ac77dd1e_Match(_137817_d,jule::Bool(),jule::Slice<jule::Ref<_1ac77dd1e_Case>>(),jule::Ref<_1ac77dd1e_Case>()));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_139217_mc)}));
	if (jule::real(_137742_m->_field_default)) {
		_139217_mc->_field_default=this->self->_method_check_default(_139217_mc,_137742_m->_field_default);
	}
	this->self->_method_check_cases(_137742_m,_139217_mc,_137817_d);
}



inline void _1ac77dd1e_ScopeChecker::_method_check_match(jule::Ref<_1aaeea1c4_MatchCase> _140435_m) {
	if (_140435_m->_field_type_match) {
		this->self->_method_check_type_match(_140435_m);
		return;
	}
	this->self->_method_check_common_match(_140435_m);
}



inline void _1ac77dd1e_ScopeChecker::_method_check_fall(jule::Ref<_1aaeea1c4_FallSt> _141229_f) {
	if (((*this)._field_cse == 0LL) || (((*this)._field_scope->_field_stmts.len() + 1LL) < (*this)._field_scope->_field_stmts.len())) {
		(*this)._field_s->_method_push_err(_141229_f->_field_token,jule::Str("fallthrough keyword can only useable at end of the case scopes", 62),jule::Slice<jule::Any>({}));
		return;
	}
	_1ac77dd1e_Case* _141817__case = ((_1ac77dd1e_Case*)((*this)._field_cse));
	if ((!(jule::real(_141817__case->_field_next)))) {
		(*this)._field_s->_method_push_err(_141229_f->_field_token,jule::Str("fallthrough cannot useable at final case", 40),jule::Slice<jule::Any>({}));
		(*this)._field_s->_method_push_suggestion(jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>({}));
		return;
	}
	(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1ac77dd1e_FallSt>(new( std::nothrow ) _1ac77dd1e_FallSt(static_cast<jule::Uintptr>(((jule::Uintptr)((_141817__case->_field_next).alloc))))))}));
}



inline jule::Ref<_1ac77dd1e_BreakSt> _1ac77dd1e_ScopeChecker::_method_check_break_with_label(jule::Ref<_1aaeea1c4_BreakSt> _143042_b) {
	jule::Ref<_1ac77dd1e_BreakSt> _143117_brk = this->self->_method_check_plain_break(_143042_b);
	if ((!(jule::real(_143117_brk)))) {
		return jule::new_ref<_1ac77dd1e_BreakSt>();
	}
	_143117_brk->_field_it=0LL;
	_143117_brk->_field_mtch=0LL;
	jule::Ref<_1ac77dd1e_ScopeLabel> _144117_label = _1ac77dd1e_find_label_parent(_143042_b->_field_label._field_kind,this->self->_field_parent);
	if ((!(jule::real(_144117_label)))) {
		this->self->_field_s->_method_push_err(_143042_b->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_143042_b->_field_label._field_kind)}));
		return jule::new_ref<_1ac77dd1e_BreakSt>();
	}
	_144117_label->_field_used=true;
	if ((_144117_label->_field_pos + 1LL) >= _144117_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_143042_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ac77dd1e_BreakSt>();
	}
	jule::Int _145413_i = _144117_label->_field_pos + 1LL;
	if (_145413_i >= _144117_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_143042_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
	} else {
		jule::Any _145821_st = _144117_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_145413_i)];
		{
			auto _match_expr{ _145821_st };
			if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_InfIter>>())) { goto _case_end_4444375552; }
			_case_begin_4444375552:;
			{
				_143117_brk->_field_it=((jule::Uintptr)((_145821_st.operator jule::Ref<_1ac77dd1e_InfIter>()).alloc));
			}
			goto _match_end_4444372432;
			_case_end_4444375552:;
			if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_RangeIter>>())) { goto _case_end_4444373248; }
			_case_begin_4444373248:;
			{
				_143117_brk->_field_it=((jule::Uintptr)((_145821_st.operator jule::Ref<_1ac77dd1e_RangeIter>()).alloc));
			}
			goto _match_end_4444372432;
			_case_end_4444373248:;
			if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_WhileIter>>())) { goto _case_end_4444373360; }
			_case_begin_4444373360:;
			{
				_143117_brk->_field_it=((jule::Uintptr)((_145821_st.operator jule::Ref<_1ac77dd1e_WhileIter>()).alloc));
			}
			goto _match_end_4444372432;
			_case_end_4444373360:;
			if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Match>>())) { goto _case_end_4444373472; }
			_case_begin_4444373472:;
			{
				_143117_brk->_field_mtch=((jule::Uintptr)((_145821_st.operator jule::Ref<_1ac77dd1e_Match>()).alloc));
			}
			goto _match_end_4444372432;
			_case_end_4444373472:;
			_case_begin_4444372832:;
			{
				this->self->_field_s->_method_push_err(_143042_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4444372432;
			_case_end_4444372832:;
			_match_end_4444372432:;
		}
	}
	if (_143117_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_143117_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_143042_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	if (_143117_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_143117_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_143042_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	return _143117_brk;
}



inline jule::Ref<_1ac77dd1e_BreakSt> _1ac77dd1e_ScopeChecker::_method_check_plain_break(jule::Ref<_1aaeea1c4_BreakSt> _148337_b) {
	jule::Ref<_1ac77dd1e_ScopeChecker> _148417_scope = this->self;
	_julec_label_iter:;
	{
		if (!(((((_148417_scope->_field_it == 0LL) && (_148417_scope->_field_cse == 0LL)) && jule::real(_148417_scope->_field_parent)) && (!(jule::real(_148417_scope->_field_owner)))))) { goto _case_end_4444393104; }
		_case_begin_4444393104:;
		{
			_148417_scope=_148417_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4444392848;
		_case_end_4444393104:;
		if (!((_148417_scope->_field_it != 0LL))) { goto _case_end_4444393232; }
		_case_begin_4444393232:;
		{
			return jule::new_struct<_1ac77dd1e_BreakSt>(new( std::nothrow ) _1ac77dd1e_BreakSt(_148417_scope->_field_it,jule::Uintptr()));
		}
		goto _match_end_4444392848;
		_case_end_4444393232:;
		if (!((_148417_scope->_field_cse != 0LL))) { goto _case_end_4444393360; }
		_case_begin_4444393360:;
		{
			return jule::new_struct<_1ac77dd1e_BreakSt>(new( std::nothrow ) _1ac77dd1e_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(((jule::Uintptr)((((_1ac77dd1e_Case*)(_148417_scope->_field_cse))->_field_owner).alloc)))));
		}
		goto _match_end_4444392848;
		_case_end_4444393360:;
		_match_end_4444392848:;
	}
	this->self->_field_s->_method_push_err(_148337_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>({}));
	return jule::new_ref<_1ac77dd1e_BreakSt>();
}



inline void _1ac77dd1e_ScopeChecker::_method_check_break(jule::Ref<_1aaeea1c4_BreakSt> _150231_b) {
	if (_150231_b->_field_label._field_id != 0LLU) {
		jule::Ref<_1ac77dd1e_BreakSt> _150421_brk = this->self->_method_check_break_with_label(_150231_b);
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_150421_brk)}));
		return;
	}
	jule::Ref<_1ac77dd1e_BreakSt> _150917_brk = this->self->_method_check_plain_break(_150231_b);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_150917_brk)}));
}



inline void _1ac77dd1e_ScopeChecker::_method_check_ret(jule::Ref<_1aaeea1c4_RetSt> _151333_r) {
	jule::Ref<_1ac77dd1e_RetSt> _151417_rt = jule::new_struct<_1ac77dd1e_RetSt>(new( std::nothrow ) _1ac77dd1e_RetSt());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_151417_rt)}));
	jule::Ref<_1acc33119_RetTypeChecker> _151717_rtc = jule::new_struct<_1acc33119_RetTypeChecker>(new( std::nothrow ) _1acc33119_RetTypeChecker(this->self,this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1aaeea1c4_Expr>>(),jule::Slice<jule::Ref<_1aca3647d_Var>>(),_151333_r->_field_token,jule::Any()));
	jule::Bool _152213_ok = _151717_rtc->_method_check(_151333_r->_field_expr);
	if ((!(_152213_ok))) {
		return;
	}
	if ((!(jule::real(_151333_r->_field_expr))) && (_151717_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_151417_rt->_field_vars=_151717_rtc->_field_vars;
	if (jule::real(_151333_r->_field_expr)) {
		_151417_rt->_field_expr=_151717_rtc->_field_model;
	}
}



inline void _1ac77dd1e_ScopeChecker::_method_check_node(jule::Any _153834_node) {
	{
		auto _match_expr{ _153834_node };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_Comment>>())) { goto _case_end_4444436784; }
		_case_begin_4444436784:;
		{
			goto _match_end_4444435360;
		}
		goto _match_end_4444435360;
		_case_end_4444436784:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_ScopeTree>>())) { goto _case_end_4444437296; }
		_case_begin_4444437296:;
		{
			this->self->_method_check_anon_scope(_153834_node.operator jule::Ref<_1aaeea1c4_ScopeTree>());
		}
		goto _match_end_4444435360;
		_case_end_4444437296:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_VarDecl>>())) { goto _case_end_4444436464; }
		_case_begin_4444436464:;
		{
			this->self->_method_check_var_decl(_153834_node.operator jule::Ref<_1aaeea1c4_VarDecl>());
		}
		goto _match_end_4444435360;
		_case_end_4444436464:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_TypeAliasDecl>>())) { goto _case_end_4444436576; }
		_case_begin_4444436576:;
		{
			this->self->_method_check_type_alias_decl(_153834_node.operator jule::Ref<_1aaeea1c4_TypeAliasDecl>());
		}
		goto _match_end_4444435360;
		_case_end_4444436576:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_Expr>>())) { goto _case_end_4444437840; }
		_case_begin_4444437840:;
		{
			this->self->_method_check_expr(_153834_node.operator jule::Ref<_1aaeea1c4_Expr>());
		}
		goto _match_end_4444435360;
		_case_end_4444437840:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_Conditional>>())) { goto _case_end_4444437952; }
		_case_begin_4444437952:;
		{
			this->self->_method_check_conditional(_153834_node.operator jule::Ref<_1aaeea1c4_Conditional>());
		}
		goto _match_end_4444435360;
		_case_end_4444437952:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_Iter>>())) { goto _case_end_4444438064; }
		_case_begin_4444438064:;
		{
			this->self->_method_check_iter(_153834_node.operator jule::Ref<_1aaeea1c4_Iter>());
		}
		goto _match_end_4444435360;
		_case_end_4444438064:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_ContSt>>())) { goto _case_end_4444438176; }
		_case_begin_4444438176:;
		{
			this->self->_method_check_cont(_153834_node.operator jule::Ref<_1aaeea1c4_ContSt>());
		}
		goto _match_end_4444435360;
		_case_end_4444438176:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_LabelSt>>())) { goto _case_end_4444438288; }
		_case_begin_4444438288:;
		{
			this->self->_method_check_label(_153834_node.operator jule::Ref<_1aaeea1c4_LabelSt>());
		}
		goto _match_end_4444435360;
		_case_end_4444438288:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_GotoSt>>())) { goto _case_end_4444438400; }
		_case_begin_4444438400:;
		{
			this->self->_method_push_goto(_153834_node.operator jule::Ref<_1aaeea1c4_GotoSt>());
		}
		goto _match_end_4444435360;
		_case_end_4444438400:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_AssignSt>>())) { goto _case_end_4444438512; }
		_case_begin_4444438512:;
		{
			this->self->_method_check_assign_st(_153834_node.operator jule::Ref<_1aaeea1c4_AssignSt>());
		}
		goto _match_end_4444435360;
		_case_end_4444438512:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_MatchCase>>())) { goto _case_end_4444438624; }
		_case_begin_4444438624:;
		{
			this->self->_method_check_match(_153834_node.operator jule::Ref<_1aaeea1c4_MatchCase>());
		}
		goto _match_end_4444435360;
		_case_end_4444438624:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_FallSt>>())) { goto _case_end_4444438736; }
		_case_begin_4444438736:;
		{
			this->self->_method_check_fall(_153834_node.operator jule::Ref<_1aaeea1c4_FallSt>());
		}
		goto _match_end_4444435360;
		_case_end_4444438736:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_BreakSt>>())) { goto _case_end_4444438848; }
		_case_begin_4444438848:;
		{
			this->self->_method_check_break(_153834_node.operator jule::Ref<_1aaeea1c4_BreakSt>());
		}
		goto _match_end_4444435360;
		_case_end_4444438848:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_RetSt>>())) { goto _case_end_4444438960; }
		_case_begin_4444438960:;
		{
			this->self->_method_check_ret(_153834_node.operator jule::Ref<_1aaeea1c4_RetSt>());
		}
		goto _match_end_4444435360;
		_case_end_4444438960:;
		_case_begin_4444435824:;
		{
			jule::outln(jule::Str("error <unimplemented scope node>", 32));
		}
		goto _match_end_4444435360;
		_case_end_4444435824:;
		_match_end_4444435360:;
	}
}



inline void _1ac77dd1e_ScopeChecker::_method_check_tree(void) {
	{
		auto _range_expr = this->self->_field_tree->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1ac77dd1e_stmt = *_range_begin;
			_iter_begin_4444467648:;
			{
				this->self->_method_check_node(_1ac77dd1e_stmt);
			}
			_iter_next_4444467648:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac77dd1e_stmt = *_range_begin; goto _iter_begin_4444467648; }
			_iter_end_4444467648:;
		}
	}
}



inline void _1ac77dd1e_ScopeChecker::_method_check_same_scope_goto(jule::Ref<_1ac77dd1e_ScopeGoto> _156540_gt,jule::Ref<_1ac77dd1e_ScopeLabel> _156560_label) {
	if (_156560_label->_field_pos < _156540_gt->_field_pos) {
		return;
	}
	jule::Int _157017_i = _156560_label->_field_pos;
	_iter_begin_4444473392:;
	if (!(_157017_i > _156540_gt->_field_pos)) { goto _iter_end_4444473392; }
	{
		jule::Any _157217_stmt = _156560_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_157017_i)];
		if (_1ac77dd1e_st_is_def(_157217_stmt)) {
			(*this)._field_s->_method_push_err(_156540_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_156540_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_4444473392;
		}
	}
	_iter_next_4444473392:;
	(_157017_i)--;
	goto _iter_begin_4444473392;
	_iter_end_4444473392:;
}



inline jule::Bool _1ac77dd1e_ScopeChecker::_method_check_label_parents(jule::Ref<_1ac77dd1e_ScopeGoto> _158038_gt,jule::Ref<_1ac77dd1e_ScopeLabel> _158058_label) {
	jule::Ref<_1ac77dd1e_ScopeChecker> _158117_scope = _158058_label->_field_scope;
	_julec_label_parent_scopes:;
	if (jule::real(_158117_scope->_field_parent) && ((_158117_scope->_field_parent).alloc != (_158038_gt->_field_scope).alloc)) {
		_158117_scope=_158117_scope->_field_parent;
		{
			auto _range_expr = _158117_scope->_field_scope->_field_stmts;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1ac77dd1e_i = 0;
				jule::Any _1ac77dd1e_stmt = *_range_begin;
				_iter_begin_4444488848:;
				{
					{
						if (!((_1ac77dd1e_i >= _158058_label->_field_pos))) { goto _case_end_4444491344; }
						_case_begin_4444491344:;
						{
							return true;
						}
						goto _match_end_4444491104;
						_case_end_4444491344:;
						if (!((_1ac77dd1e_st_is_def(_1ac77dd1e_stmt)))) { goto _case_end_4444491472; }
						_case_begin_4444491472:;
						{
							(*this)._field_s->_method_push_err(_158038_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_158038_gt->_field_gt->_field_label._field_kind)}));
							return false;
						}
						goto _match_end_4444491104;
						_case_end_4444491472:;
						_match_end_4444491104:;
					}
				}
				_iter_next_4444488848:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1ac77dd1e_i; _1ac77dd1e_stmt = *_range_begin; goto _iter_begin_4444488848; }
				_iter_end_4444488848:;
			}
		}
		goto _julec_label_parent_scopes;
	}
	return true;
}



inline void _1ac77dd1e_ScopeChecker::_method_check_goto_scope(jule::Ref<_1ac77dd1e_ScopeGoto> _160339_gt,jule::Ref<_1ac77dd1e_ScopeLabel> _160355_label) {
	jule::Int _160417_i = _160339_gt->_field_pos;
	_iter_begin_4444501616:;
	if (!(_160417_i < _160339_gt->_field_scope->_field_scope->_field_stmts.len())) { goto _iter_end_4444501616; }
	{
		{
			if (!((_160417_i >= _160355_label->_field_pos))) { goto _case_end_4444503712; }
			_case_begin_4444503712:;
			{
				return;
			}
			goto _match_end_4444503472;
			_case_end_4444503712:;
			if (!((_1ac77dd1e_st_is_def(_160339_gt->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_160417_i)])))) { goto _case_end_4444503840; }
			_case_begin_4444503840:;
			{
				(*this)._field_s->_method_push_err(_160339_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_160339_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
			goto _match_end_4444503472;
			_case_end_4444503840:;
			_match_end_4444503472:;
		}
	}
	_iter_next_4444501616:;
	(_160417_i)++;
	goto _iter_begin_4444501616;
	_iter_end_4444501616:;
}



inline void _1ac77dd1e_ScopeChecker::_method_check_diff_scope_goto(jule::Ref<_1ac77dd1e_ScopeGoto> _161744_gt,jule::Ref<_1ac77dd1e_ScopeLabel> _161764_label) {
	{
		if (!(((_161764_label->_field_scope->_field_child_index > 0LL) && (_161744_gt->_field_scope->_field_child_index == 0LL)))) { goto _case_end_4444513904; }
		_case_begin_4444513904:;
		{
			if ((!((*this)._method_check_label_parents(_161744_gt,_161764_label)))) {
				return;
			}
		}
		goto _match_end_4444513664;
		_case_end_4444513904:;
		if (!((_161764_label->_field_scope->_field_child_index < _161744_gt->_field_scope->_field_child_index))) { goto _case_end_4444514032; }
		_case_begin_4444514032:;
		{
			return;
		}
		goto _match_end_4444513664;
		_case_end_4444514032:;
		_match_end_4444513664:;
	}
	jule::Ref<_1ac77dd1e_ScopeChecker> _162817_scope = _161764_label->_field_scope;
	jule::Int _162917_i = _161764_label->_field_pos - 1LL;
	_iter_begin_4444513760:;
	if (!(_162917_i >= 0LL)) { goto _iter_end_4444513760; }
	{
		jule::Any _163117_s = _162817_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_162917_i)];
		{
			auto _match_expr{ _163117_s };
			if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Scope>>())) { goto _case_end_4444524000; }
			_case_begin_4444524000:;
			{
				if (_162917_i <= _161744_gt->_field_pos) {
					return;
				}
			}
			goto _match_end_4444523072;
			_case_end_4444524000:;
			_match_end_4444523072:;
		}
		if (_1ac77dd1e_st_is_def(_163117_s)) {
			(*this)._field_s->_method_push_err(_161744_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_161744_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_4444513760;
		}
	}
	_iter_next_4444513760:;
	(_162917_i)--;
	goto _iter_begin_4444513760;
	_iter_end_4444513760:;
	if (jule::real(_162817_scope->_field_parent) && ((_162817_scope->_field_parent).alloc != (_161744_gt->_field_scope).alloc)) {
		(*this)._method_check_label_parents(_161744_gt,_161764_label);
	} else {
		(*this)._method_check_goto_scope(_161744_gt,_161764_label);
	}
}



inline void _1ac77dd1e_ScopeChecker::_method_check_goto(jule::Ref<_1ac77dd1e_ScopeGoto> _165333_gt,jule::Ref<_1ac77dd1e_ScopeLabel> _165353_label) {
	{
		if (!(((_165333_gt->_field_scope).alloc == (_165353_label->_field_scope).alloc))) { goto _case_end_4444535872; }
		_case_begin_4444535872:;
		{
			(*this)._method_check_same_scope_goto(_165333_gt,_165353_label);
		}
		goto _match_end_4444535632;
		_case_end_4444535872:;
		if (!((_165353_label->_field_scope->_field_child_index > 0LL))) { goto _case_end_4444536000; }
		_case_begin_4444536000:;
		{
			(*this)._method_check_diff_scope_goto(_165333_gt,_165353_label);
		}
		goto _match_end_4444535632;
		_case_end_4444536000:;
		_match_end_4444535632:;
	}
}



inline void _1ac77dd1e_ScopeChecker::_method_check_gotos(void) {
	{
		auto _range_expr = (*this)._field_gotos.get();
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac77dd1e_ScopeGoto> _1ac77dd1e_gt = *_range_begin;
			_iter_begin_4444541584:;
			{
				jule::Ref<_1ac77dd1e_ScopeLabel> _166521_label = (*this)._method_find_label_all(_1ac77dd1e_gt->_field_gt->_field_label._field_kind);
				if ((!(jule::real(_166521_label)))) {
					(*this)._field_s->_method_push_err(_1ac77dd1e_gt->_field_gt->_field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_1ac77dd1e_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_4444541584;
				}
				_166521_label->_field_used=true;
				(*this)._method_check_goto(_1ac77dd1e_gt,_166521_label);
			}
			_iter_next_4444541584:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac77dd1e_gt = *_range_begin; goto _iter_begin_4444541584; }
			_iter_end_4444541584:;
		}
	}
}



inline void _1ac77dd1e_ScopeChecker::_method_check_labels(void) {
	{
		auto _range_expr = (*this)._field_labels.get();
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac77dd1e_ScopeLabel> _1ac77dd1e_l = *_range_begin;
			_iter_begin_4444552384:;
			{
				if ((!(_1ac77dd1e_l->_field_used))) {
					(*this)._field_s->_method_push_err(_1ac77dd1e_l->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1ac77dd1e_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_4444552384:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac77dd1e_l = *_range_begin; goto _iter_begin_4444552384; }
			_iter_end_4444552384:;
		}
	}
}



inline void _1ac77dd1e_ScopeChecker::_method_check_vars(void) {
	{
		auto _range_expr = (*this)._field_table->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aca3647d_Var> _1ac77dd1e_v = *_range_begin;
			_iter_begin_4444558352:;
			{
				if ((((!(_1ac77dd1e_v->_field_used)) && (!(_1ab0277b7_is_ignore_ident(_1ac77dd1e_v->_field_ident)))) && (!(_1ab0277b7_is_anon_ident(_1ac77dd1e_v->_field_ident)))) && (_1ac77dd1e_v->_field_ident != jule::Str("self", 4))) {
					(*this)._field_s->_method_push_err(_1ac77dd1e_v->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1ac77dd1e_v->_field_ident)}));
				}
			}
			_iter_next_4444558352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac77dd1e_v = *_range_begin; goto _iter_begin_4444558352; }
			_iter_end_4444558352:;
		}
	}
}



inline void _1ac77dd1e_ScopeChecker::_method_check_aliases(void) {
	{
		auto _range_expr = (*this)._field_table->_field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ad3e617d_TypeAlias> _1ac77dd1e_a = *_range_begin;
			_iter_begin_4444565936:;
			{
				if (((!(_1ac77dd1e_a->_field_used)) && (!(_1ab0277b7_is_ignore_ident(_1ac77dd1e_a->_field_ident)))) && (!(_1ab0277b7_is_anon_ident(_1ac77dd1e_a->_field_ident)))) {
					(*this)._field_s->_method_push_err(_1ac77dd1e_a->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1ac77dd1e_a->_field_ident)}));
				}
			}
			_iter_next_4444565936:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac77dd1e_a = *_range_begin; goto _iter_begin_4444565936; }
			_iter_end_4444565936:;
		}
	}
}



inline void _1ac77dd1e_ScopeChecker::_method_check(jule::Ref<_1aaeea1c4_ScopeTree> _170129_tree,jule::Ref<_1ac77dd1e_Scope> _170151_s) {
	_170151_s->_field_deferred=_170129_tree->_field_deferred;
	_170151_s->_field_unsafety=_170129_tree->_field_unsafety;
	jule::I64 _170513_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_170129_tree;
	this->self->_field_scope=_170151_s;
	this->self->_method_check_tree();
	if (_170513_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
	}
	if (this->self->_method_is_root()) {
		this->self->_method_check_gotos();
		this->self->_method_check_labels();
	}
}



inline jule::Ref<_1ac77dd1e_ScopeChecker> _1ac77dd1e_ScopeChecker::_method_new_child_checker(void) {
	jule::Ref<_1ac77dd1e_ScopeChecker> _172517_base = _1ac77dd1e_new_scope_checker_base(this->self->_field_s,jule::new_ref<_1ab07a50c_FnIns>());
	_172517_base->_field_parent=this->self;
	_172517_base->_field_labels=this->self->_field_labels;
	_172517_base->_field_gotos=this->self->_field_gotos;
	_172517_base->_field_child_index=static_cast<jule::Int>(this->self->_field_child_index + 1LL);
	return _172517_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac77dd1e_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_GetRefPtrExprModel &_Src) {
	_Stream << "GetRefPtrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_BuiltinRealCallExprModel &_Src) {
	_Stream << "BuiltinRealCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_BuiltinDropCallExprModel &_Src) {
	_Stream << "BuiltinDropCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_BuiltinAppendCallExprModel &_Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_BuiltinErrorTraitSubIdentExprModel &_Src) {
	_Stream << "BuiltinErrorTraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0a4954_ExplicitDerefExprModel &_Src) {
	_Stream << "ExplicitDerefExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1ac78be4d_ImportInfo::_method_find_package(jule::Str ) {
	return jule::new_ref<_1ac78be4d_ImportInfo>();
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1ac78be4d_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)> ) {
	return jule::new_ref<_1ac78be4d_ImportInfo>();
}



inline jule::Ref<_1aca3647d_Var> _1ac78be4d_ImportInfo::_method_find_var(jule::Str _14731_ident,jule::Bool _14743_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14731_ident)))) {
		return jule::new_ref<_1aca3647d_Var>();
	}
	return _1ac78be4d_find_var_in_package((*this)._field_package->_field_files,_14731_ident,false);
}



inline jule::Ref<_1ad3e617d_TypeAlias> _1ac78be4d_ImportInfo::_method_find_type_alias(jule::Str _16038_ident,jule::Bool _16050_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_16038_ident)))) {
		return jule::new_ref<_1ad3e617d_TypeAlias>();
	}
	return _1ac78be4d_find_type_alias_in_package((*this)._field_package->_field_files,_16038_ident,false);
}



inline jule::Ref<_1ab064271_Struct> _1ac78be4d_ImportInfo::_method_find_struct(jule::Str _17334_ident,jule::Bool _17346_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17334_ident)))) {
		return jule::new_ref<_1ab064271_Struct>();
	}
	return _1ac78be4d_find_struct_in_package((*this)._field_package->_field_files,_17334_ident,false);
}



inline jule::Ref<_1ab07a50c_Fn> _1ac78be4d_ImportInfo::_method_find_fn(jule::Str _18630_ident,jule::Bool _18642_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18630_ident)))) {
		return jule::new_ref<_1ab07a50c_Fn>();
	}
	return _1ac78be4d_find_fn_in_package((*this)._field_package->_field_files,_18630_ident,false);
}



inline jule::Ref<_1ac276c57_Trait> _1ac78be4d_ImportInfo::_method_find_trait(jule::Str _19833_ident) {
	if ((!((*this)._method_is_lookupable(_19833_ident)))) {
		return jule::new_ref<_1ac276c57_Trait>();
	}
	return _1ac78be4d_find_trait_in_package((*this)._field_package->_field_files,_19833_ident);
}



inline jule::Ref<_1ac7804a2_Enum> _1ac78be4d_ImportInfo::_method_find_enum(jule::Str _21032_ident) {
	if ((!((*this)._method_is_lookupable(_21032_ident)))) {
		return jule::new_ref<_1ac7804a2_Enum>();
	}
	return _1ac78be4d_find_enum_in_package((*this)._field_package->_field_files,_21032_ident);
}



inline jule::Bool _1ac78be4d_ImportInfo::_method_is_lookupable(jule::Str _22028_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_22028_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _1ac78be4d_ImportInfo::_method_exist_ident(jule::Str _24026_ident) {
	{
		auto _range_expr = (*this)._field_selected;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1ab0277b7_Token _1ac78be4d_sident = *_range_begin;
			_iter_begin_4444642912:;
			{
				if (_1ac78be4d_sident._field_kind == _24026_ident) {
					return true;
				}
			}
			_iter_next_4444642912:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac78be4d_sident = *_range_begin; goto _iter_begin_4444642912; }
			_iter_end_4444642912:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac78be4d_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1ac78be4d_Package::_method_find_package(jule::Str ) {
	return jule::new_ref<_1ac78be4d_ImportInfo>();
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1ac78be4d_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)> ) {
	return jule::new_ref<_1ac78be4d_ImportInfo>();
}



inline jule::Ref<_1aca3647d_Var> _1ac78be4d_Package::_method_find_var(jule::Str _26631_ident,jule::Bool _26643_cpp_linked) {
	return _1ac78be4d_find_var_in_package((*this)._field_files,_26631_ident,_26643_cpp_linked);
}



inline jule::Ref<_1ad3e617d_TypeAlias> _1ac78be4d_Package::_method_find_type_alias(jule::Str _27238_ident,jule::Bool _27250_cpp_linked) {
	return _1ac78be4d_find_type_alias_in_package((*this)._field_files,_27238_ident,_27250_cpp_linked);
}



inline jule::Ref<_1ab064271_Struct> _1ac78be4d_Package::_method_find_struct(jule::Str _27834_ident,jule::Bool _27846_cpp_linked) {
	return _1ac78be4d_find_struct_in_package((*this)._field_files,_27834_ident,_27846_cpp_linked);
}



inline jule::Ref<_1ab07a50c_Fn> _1ac78be4d_Package::_method_find_fn(jule::Str _28430_ident,jule::Bool _28442_cpp_linked) {
	return _1ac78be4d_find_fn_in_package((*this)._field_files,_28430_ident,_28442_cpp_linked);
}



inline jule::Ref<_1ac276c57_Trait> _1ac78be4d_Package::_method_find_trait(jule::Str _29033_ident) {
	return _1ac78be4d_find_trait_in_package((*this)._field_files,_29033_ident);
}



inline jule::Ref<_1ac7804a2_Enum> _1ac78be4d_Package::_method_find_enum(jule::Str _29632_ident) {
	return _1ac78be4d_find_enum_in_package((*this)._field_files,_29632_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac78be4d_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1ac7ccb09_Sema::_method_find_package(jule::Str _30535_ident) {
	return (*this)._field_file->_method_find_package(_30535_ident);
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1ac7ccb09_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)> _31537_selector) {
	return (*this)._field_file->_method_select_package(_31537_selector);
}



inline jule::Ref<_1aca3647d_Var> _1ac7ccb09_Sema::_method_find_var(jule::Str _32531_ident,jule::Bool _32543_cpp_linked) {
	jule::Ref<_1aca3647d_Var> _32717_v = _1ac78be4d_find_var_in_package((*this)._field_files,_32531_ident,_32543_cpp_linked);
	if (jule::real(_32717_v)) {
		return _32717_v;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1ac7ccb09_imp = *_range_begin;
			_iter_begin_4444683600:;
			{
				if ((!(_1ac7ccb09_imp_is_lookupable(_1ac7ccb09_imp,_32531_ident)))) {
					goto _iter_next_4444683600;
				}
				jule::Ref<_1aca3647d_Var> _33721_v = _1ac7ccb09_imp->_method_find_var(_32531_ident,_32543_cpp_linked);
				if (jule::real(_33721_v) && (*this)._method_is_accessible_define(_33721_v->_field_public,_33721_v->_field_token)) {
					return _33721_v;
				}
			}
			_iter_next_4444683600:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_imp = *_range_begin; goto _iter_begin_4444683600; }
			_iter_end_4444683600:;
		}
	}
	return jule::new_ref<_1aca3647d_Var>();
}



inline jule::Ref<_1ad3e617d_TypeAlias> _1ac7ccb09_Sema::_method_find_type_alias(jule::Str _35238_ident,jule::Bool _35250_cpp_linked) {
	jule::Ref<_1ad3e617d_TypeAlias> _35417_ta = _1ac78be4d_find_type_alias_in_package((*this)._field_files,_35238_ident,_35250_cpp_linked);
	if (jule::real(_35417_ta)) {
		return _35417_ta;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1ac7ccb09_imp = *_range_begin;
			_iter_begin_4444696352:;
			{
				if ((!(_1ac7ccb09_imp_is_lookupable(_1ac7ccb09_imp,_35238_ident)))) {
					goto _iter_next_4444696352;
				}
				jule::Ref<_1ad3e617d_TypeAlias> _36421_ta = _1ac7ccb09_imp->_method_find_type_alias(_35238_ident,_35250_cpp_linked);
				if (jule::real(_36421_ta) && (*this)._method_is_accessible_define(_36421_ta->_field_public,_36421_ta->_field_token)) {
					return _36421_ta;
				}
			}
			_iter_next_4444696352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_imp = *_range_begin; goto _iter_begin_4444696352; }
			_iter_end_4444696352:;
		}
	}
	return jule::new_ref<_1ad3e617d_TypeAlias>();
}



inline jule::Ref<_1ab064271_Struct> _1ac7ccb09_Sema::_method_find_struct(jule::Str _37934_ident,jule::Bool _37946_cpp_linked) {
	jule::Ref<_1ab064271_Struct> _38117_strct = _1ac78be4d_find_struct_in_package((*this)._field_files,_37934_ident,_37946_cpp_linked);
	if (jule::real(_38117_strct)) {
		return _38117_strct;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1ac7ccb09_imp = *_range_begin;
			_iter_begin_4444707824:;
			{
				if ((!(_1ac7ccb09_imp_is_lookupable(_1ac7ccb09_imp,_37934_ident)))) {
					goto _iter_next_4444707824;
				}
				jule::Ref<_1ab064271_Struct> _39121_strct = _1ac7ccb09_imp->_method_find_struct(_37934_ident,_37946_cpp_linked);
				if (jule::real(_39121_strct) && (*this)._method_is_accessible_define(_39121_strct->_field_public,_39121_strct->_field_token)) {
					return _39121_strct;
				}
			}
			_iter_next_4444707824:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_imp = *_range_begin; goto _iter_begin_4444707824; }
			_iter_end_4444707824:;
		}
	}
	return jule::new_ref<_1ab064271_Struct>();
}



inline jule::Ref<_1ab07a50c_Fn> _1ac7ccb09_Sema::_method_find_fn(jule::Str _40630_ident,jule::Bool _40642_cpp_linked) {
	jule::Ref<_1ab07a50c_Fn> _40817_f = _1ac78be4d_find_fn_in_package((*this)._field_files,_40630_ident,_40642_cpp_linked);
	if (jule::real(_40817_f)) {
		return _40817_f;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1ac7ccb09_imp = *_range_begin;
			_iter_begin_4444719328:;
			{
				if ((!(_1ac7ccb09_imp_is_lookupable(_1ac7ccb09_imp,_40630_ident)))) {
					goto _iter_next_4444719328;
				}
				jule::Ref<_1ab07a50c_Fn> _41821_f = _1ac7ccb09_imp->_method_find_fn(_40630_ident,_40642_cpp_linked);
				if (jule::real(_41821_f) && (*this)._method_is_accessible_define(_41821_f->_field_public,_41821_f->_field_token)) {
					return _41821_f;
				}
			}
			_iter_next_4444719328:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_imp = *_range_begin; goto _iter_begin_4444719328; }
			_iter_end_4444719328:;
		}
	}
	return jule::new_ref<_1ab07a50c_Fn>();
}



inline jule::Ref<_1ac276c57_Trait> _1ac7ccb09_Sema::_method_find_trait(jule::Str _43333_ident) {
	jule::Ref<_1ac276c57_Trait> _43517_t = _1ac78be4d_find_trait_in_package((*this)._field_files,_43333_ident);
	if (jule::real(_43517_t)) {
		return _43517_t;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1ac7ccb09_imp = *_range_begin;
			_iter_begin_4444729504:;
			{
				if ((!(_1ac7ccb09_imp_is_lookupable(_1ac7ccb09_imp,_43333_ident)))) {
					goto _iter_next_4444729504;
				}
				jule::Ref<_1ac276c57_Trait> _44521_t = _1ac7ccb09_imp->_method_find_trait(_43333_ident);
				if (jule::real(_44521_t) && (*this)._method_is_accessible_define(_44521_t->_field_public,_44521_t->_field_token)) {
					return _44521_t;
				}
			}
			_iter_next_4444729504:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_imp = *_range_begin; goto _iter_begin_4444729504; }
			_iter_end_4444729504:;
		}
	}
	return jule::new_ref<_1ac276c57_Trait>();
}



inline jule::Ref<_1ac7804a2_Enum> _1ac7ccb09_Sema::_method_find_enum(jule::Str _46032_ident) {
	jule::Ref<_1ac7804a2_Enum> _46217_e = _1ac78be4d_find_enum_in_package((*this)._field_files,_46032_ident);
	if (jule::real(_46217_e)) {
		return _46217_e;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1ac7ccb09_imp = *_range_begin;
			_iter_begin_4444740064:;
			{
				if ((!(_1ac7ccb09_imp_is_lookupable(_1ac7ccb09_imp,_46032_ident)))) {
					goto _iter_next_4444740064;
				}
				jule::Ref<_1ac7804a2_Enum> _47221_e = _1ac7ccb09_imp->_method_find_enum(_46032_ident);
				if (jule::real(_47221_e) && (*this)._method_is_accessible_define(_47221_e->_field_public,_47221_e->_field_token)) {
					return _47221_e;
				}
			}
			_iter_next_4444740064:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_imp = *_range_begin; goto _iter_begin_4444740064; }
			_iter_end_4444740064:;
		}
	}
	return jule::new_ref<_1ac7804a2_Enum>();
}



inline void _1ac7ccb09_Sema::_method_set_current_file(jule::Ref<_1acd9639d_SymbolTable> _48339_f) {
	(*this)._field_file=_48339_f;
}



inline void _1ac7ccb09_Sema::_method_push_err(_1ab0277b7_Token _48527_token,jule::Str _48541_fmt,jule::Slice<jule::Any> _48554_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1d068165a_Log>({_1ac7ccb09_compiler_err(_48527_token,true,_48541_fmt,_48554_args)}));
}



inline void _1ac7ccb09_Sema::_method_push_suggestion(jule::Str _49034_fmt,jule::Slice<jule::Any> _49047_args) {
	{
		_1ac7ccb09_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_49034_fmt,_49047_args);
	}
}



inline jule::Bool _1ac7ccb09_Sema::_method_is_accessible_define(jule::Bool _49535_public,_1ab0277b7_Token _49549_token) {
	return (_49535_public || (!(jule::real(_49549_token._field_file)))) || ((*this)._field_file->_field_file->_method_dir() == _49549_token._field_file->_method_dir());
}



inline jule::Bool _1ac7ccb09_Sema::_method_is_duplicated_ident(jule::Uintptr _50234_itself,jule::Str _50251_ident,jule::Bool _50263_cpp_linked) {
	{
		auto _range_expr = (*this)._field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4444769184:;
			{
				if (_1ac7ccb09_f->_method_is_duplicated_ident(_50234_itself,_50251_ident,_50263_cpp_linked)) {
					return true;
				}
				{
					auto _range_expr = _1ac7ccb09_f->_field_imports;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ac78be4d_ImportInfo> _1ac7ccb09_imp = *_range_begin;
						_iter_begin_4444774160:;
						{
							{
								auto _range_expr = _1ac7ccb09_imp->_field_selected;
								if (_range_expr.begin() != _range_expr.end()) {
									auto _range_begin = _range_expr.begin();
									const auto _range_end = _range_expr.end();
									_1ab0277b7_Token _1ac7ccb09_selected = *_range_begin;
									_iter_begin_4444775936:;
									{
										if (_1ac7ccb09_selected._field_kind == _50251_ident) {
											return true;
										}
									}
									_iter_next_4444775936:;
									++_range_begin;
									if (_range_begin != _range_end) { _1ac7ccb09_selected = *_range_begin; goto _iter_begin_4444775936; }
									_iter_end_4444775936:;
								}
							}
						}
						_iter_next_4444774160:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ac7ccb09_imp = *_range_begin; goto _iter_begin_4444774160; }
						_iter_end_4444774160:;
					}
				}
			}
			_iter_next_4444769184:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4444769184; }
			_iter_end_4444769184:;
		}
	}
	return false;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_generic_quantity(jule::Int _51941_required,jule::Int _51956_given,_1ab0277b7_Token _51968_error_token) {
	jule::Bool _51990_ok = jule::Bool();
	{
		if (!(((_51941_required == 0LL) && (_51956_given > 0LL)))) { goto _case_end_4444783088; }
		_case_begin_4444783088:;
		{
			(*this)._method_push_err(_51968_error_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
			_51990_ok = false;
			return _51990_ok;
		}
		goto _match_end_4444781888;
		_case_end_4444783088:;
		if (!(((_51941_required > 0LL) && (_51956_given == 0LL)))) { goto _case_end_4444783200; }
		_case_begin_4444783200:;
		{
			(*this)._method_push_err(_51968_error_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			_51990_ok = false;
			return _51990_ok;
		}
		goto _match_end_4444781888;
		_case_end_4444783200:;
		if (!((_51941_required < _51956_given))) { goto _case_end_4444783312; }
		_case_begin_4444783312:;
		{
			(*this)._method_push_err(_51968_error_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>({}));
			_51990_ok = false;
			return _51990_ok;
		}
		goto _match_end_4444781888;
		_case_end_4444783312:;
		if (!((_51941_required > _51956_given))) { goto _case_end_4444782336; }
		_case_begin_4444782336:;
		{
			(*this)._method_push_err(_51968_error_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>({}));
			_51990_ok = false;
			return _51990_ok;
		}
		goto _match_end_4444781888;
		_case_end_4444782336:;
		_case_begin_4444782032:;
		{
			_51990_ok = true;
			return _51990_ok;
		}
		goto _match_end_4444781888;
		_case_end_4444782032:;
		_match_end_4444781888:;
	}
}



inline jule::Bool _1ac7ccb09_Sema::_method_is_duplicated_import_selection(jule::Uintptr _54245_itself,jule::Str _54262_ident) {
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1ac7ccb09_imp = *_range_begin;
			_iter_begin_4444794640:;
			{
				if (((jule::Uintptr)((_1ac7ccb09_imp).alloc)) == _54245_itself) {
					goto _iter_end_4444794640;
				}
				if (_1ac7ccb09_imp->_method_exist_ident(_54262_ident)) {
					return true;
				}
			}
			_iter_next_4444794640:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_imp = *_range_begin; goto _iter_begin_4444794640; }
			_iter_end_4444794640:;
		}
	}
	return false;
}



inline jule::Any _1ac7ccb09_Sema::_method_get_import_def(jule::Str _55729_ident,jule::Ref<_1ac78be4d_ImportInfo>& _55746_imp) {
	if (_1ad5a38bd_find_package_builtin_def(_55746_imp->_field_link_path,_55729_ident) != nullptr) {
		return jule::Any(true);
	}
	{
		auto _range_expr = _55746_imp->_field_package->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4444804032:;
			{
				
				jule::Any _56421_def = _1ac7ccb09_f->_method_def_by_ident(_55729_ident,false);
				if (_56421_def != nullptr) {
					return _56421_def;
				}
			}
			_iter_next_4444804032:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4444804032; }
			_iter_end_4444804032:;
		}
	}
	return jule::Any(nullptr);
}



inline void _1ac7ccb09_Sema::_method_check_import_selections(jule::Ref<_1ac78be4d_ImportInfo> _57346_imp) {
	{
		auto _range_expr = _57346_imp->_field_selected;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1ab0277b7_Token _1ac7ccb09_ident = *_range_begin;
			_iter_begin_4444810384:;
			{
				if (_1ac7ccb09_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_4444810384;
				}
				if ((*this)._method_is_duplicated_import_selection(((jule::Uintptr)((_57346_imp).alloc)),_1ac7ccb09_ident._field_kind)) {
					(*this)._method_push_err(_1ac7ccb09_ident,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ac7ccb09_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
					goto _iter_next_4444810384;
				}
				jule::Any _58521_def = (*this)._method_get_import_def(_1ac7ccb09_ident._field_kind,_57346_imp);
				{
					auto _match_expr{ _58521_def };
					if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4444820016; }
					_case_begin_4444820016:;
					{
						goto _iter_next_4444810384;
					}
					goto _match_end_4444814208;
					_case_end_4444820016:;
					if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4444820128; }
					_case_begin_4444820128:;
					{
						jule::Ref<_1aca3647d_Var> _59225_v = _58521_def.operator jule::Ref<_1aca3647d_Var>();
						if ((*this)._method_is_accessible_define(_59225_v->_field_public,_59225_v->_field_token)) {
							goto _iter_next_4444810384;
						}
					}
					goto _match_end_4444814208;
					_case_end_4444820128:;
					if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_TypeAlias>>())) { goto _case_end_4444820240; }
					_case_begin_4444820240:;
					{
						jule::Ref<_1ad3e617d_TypeAlias> _59825_ta = _58521_def.operator jule::Ref<_1ad3e617d_TypeAlias>();
						if ((*this)._method_is_accessible_define(_59825_ta->_field_public,_59825_ta->_field_token)) {
							goto _iter_next_4444810384;
						}
					}
					goto _match_end_4444814208;
					_case_end_4444820240:;
					if (!(_match_expr.type_is<jule::Ref<_1ab064271_Struct>>())) { goto _case_end_4444822192; }
					_case_begin_4444822192:;
					{
						jule::Ref<_1ab064271_Struct> _60425_strct = _58521_def.operator jule::Ref<_1ab064271_Struct>();
						if ((*this)._method_is_accessible_define(_60425_strct->_field_public,_60425_strct->_field_token)) {
							goto _iter_next_4444810384;
						}
					}
					goto _match_end_4444814208;
					_case_end_4444822192:;
					if (!(_match_expr.type_is<jule::Ref<_1ac276c57_Trait>>())) { goto _case_end_4444822304; }
					_case_begin_4444822304:;
					{
						jule::Ref<_1ac276c57_Trait> _61025_t = _58521_def.operator jule::Ref<_1ac276c57_Trait>();
						if ((*this)._method_is_accessible_define(_61025_t->_field_public,_61025_t->_field_token)) {
							goto _iter_next_4444810384;
						}
					}
					goto _match_end_4444814208;
					_case_end_4444822304:;
					if (!(_match_expr.type_is<jule::Ref<_1ac7804a2_Enum>>())) { goto _case_end_4444822416; }
					_case_begin_4444822416:;
					{
						jule::Ref<_1ac7804a2_Enum> _61625_e = _58521_def.operator jule::Ref<_1ac7804a2_Enum>();
						if ((*this)._method_is_accessible_define(_61625_e->_field_public,_61625_e->_field_token)) {
							goto _iter_next_4444810384;
						}
					}
					goto _match_end_4444814208;
					_case_end_4444822416:;
					if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_Fn>>())) { goto _case_end_4444822528; }
					_case_begin_4444822528:;
					{
						jule::Ref<_1ab07a50c_Fn> _62225_f = _58521_def.operator jule::Ref<_1ab07a50c_Fn>();
						if ((*this)._method_is_accessible_define(_62225_f->_field_public,_62225_f->_field_token)) {
							goto _iter_next_4444810384;
						}
					}
					goto _match_end_4444814208;
					_case_end_4444822528:;
					_case_begin_4444819424:;
					{
						(*this)._method_push_err(_1ac7ccb09_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_1ac7ccb09_ident._field_kind)}));
						goto _iter_next_4444810384;
					}
					goto _match_end_4444814208;
					_case_end_4444819424:;
					_match_end_4444814208:;
				}
				(*this)._method_push_err(_1ac7ccb09_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_1ac7ccb09_ident._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
			}
			_iter_next_4444810384:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_ident = *_range_begin; goto _iter_begin_4444810384; }
			_iter_end_4444810384:;
		}
	}
}



inline jule::Bool _1ac7ccb09_Sema::_method_is_use_alias_duplication(jule::Ref<_1ac78be4d_ImportInfo>& _63744_imp) {
	if (_63744_imp->_field_alias.len() == 0LL) {
		return false;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1ac7ccb09_imp2 = *_range_begin;
			_iter_begin_4444849248:;
			{
				if ((_1ac7ccb09_imp2).alloc == (_63744_imp).alloc) {
					goto _iter_end_4444849248;
				}
				if (_1ac7ccb09_imp2->_field_alias == _63744_imp->_field_alias) {
					return true;
				}
			}
			_iter_next_4444849248:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_imp2 = *_range_begin; goto _iter_begin_4444849248; }
			_iter_end_4444849248:;
		}
	}
	return false;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_import(jule::Ref<_1ac78be4d_ImportInfo> _65335_imp) {
	if (_65335_imp->_field_cpp_linked || (_65335_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	if ((*this)._method_is_use_alias_duplication(_65335_imp)) {
		(*this)._method_push_err(_65335_imp->_field_token,jule::Str("identifier \"@\" is already used for another use declaration", 58),jule::Slice<jule::Any>({jule::Any(_65335_imp->_field_alias)}));
		(*this)._method_push_suggestion(jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>({}));
	}
	if (_65335_imp->_field_duplicate) {
		return true;
	}
	jule::Ref<_1ac7ccb09_Sema> _66717_sema = jule::new_struct<_1ac7ccb09_Sema>(new( std::nothrow ) _1ac7ccb09_Sema());
	_66717_sema->_method_check(_65335_imp->_field_package->_field_files);
	if (_66717_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_66717_sema->_field_errors);
		return false;
	}
	(*this)._method_check_import_selections(_65335_imp);
	return true;
}



inline void _1ac7ccb09_Sema::_method_check_imports(void) {
	{
		auto _range_expr = (*this)._field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_file = *_range_begin;
			_iter_begin_4444868080:;
			{
				(*this)._method_set_current_file(_1ac7ccb09_file);
				{
					auto _range_expr = _1ac7ccb09_file->_field_imports;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ac78be4d_ImportInfo> _1ac7ccb09_imp = *_range_begin;
						_iter_begin_4444872864:;
						{
							jule::Bool _68321_ok = (*this)._method_check_import(_1ac7ccb09_imp);
							if ((!(_68321_ok))) {
								(*this)._method_push_err(_1ac7ccb09_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_1ac7ccb09_imp->_field_link_path)}));
								return;
							}
						}
						_iter_next_4444872864:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ac7ccb09_imp = *_range_begin; goto _iter_begin_4444872864; }
						_iter_end_4444872864:;
					}
				}
			}
			_iter_next_4444868080:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_file = *_range_begin; goto _iter_begin_4444868080; }
			_iter_end_4444868080:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_impl_file_impls(void) {
	{
		auto _range_expr = this->self->_field_file->_field_impls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac780837_Impl> _1ac7ccb09_imp = *_range_begin;
			_iter_begin_4444874048:;
			{
				this->self->_method_impl_impl(_1ac7ccb09_imp);
			}
			_iter_next_4444874048:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_imp = *_range_begin; goto _iter_begin_4444874048; }
			_iter_end_4444874048:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_impl_impls(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_file = *_range_begin;
			_iter_begin_4444884192:;
			{
				this->self->_method_set_current_file(_1ac7ccb09_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_4444884192:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_file = *_range_begin; goto _iter_begin_4444884192; }
			_iter_end_4444884192:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_check_enums(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_file = *_range_begin;
			_iter_begin_4444888624:;
			{
				this->self->_method_set_current_file(_1ac7ccb09_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_4444888624:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_file = *_range_begin; goto _iter_begin_4444888624; }
			_iter_end_4444888624:;
		}
	}
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_type_with_refers(jule::Ref<_1ad3e617d_TypeSymbol> _71646_t,jule::Trait<_1acde4cc0_Lookup> _7179_l,jule::Ref<_1ad3e617d_Referencer> _71720_referencer) {
	jule::Bool _71747_ok = jule::Bool();
	if (_71646_t->_method_checked()) {
		_71747_ok = true;
		return _71747_ok;
	}
	_1ad3e617d_TypeChecker _72117_tc = _1ad3e617d_TypeChecker(this->self,_7179_l,_71720_referencer,_1ab0277b7_Token(),jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>(),jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>(),jule::Bool());
	_72117_tc._method_check(_71646_t);
	_71747_ok = _71646_t->_method_checked();
	return _71747_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_type(jule::Ref<_1ad3e617d_TypeSymbol> _73234_t,jule::Trait<_1acde4cc0_Lookup> _73250_l) {
	jule::Bool _73263_ok = jule::Bool();
	_73263_ok = this->self->_method_check_type_with_refers(_73234_t,_73250_l,jule::new_ref<_1ad3e617d_Referencer>());
	return _73263_ok;
}



inline jule::Ref<_1ad3e617d_TypeKind> _1ac7ccb09_Sema::_method_build_type_with_generics(jule::Ref<_1aaeea1c4_TypeDecl> _73848_t,jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>> _7399_generics) {
	jule::Ref<_1ad3e617d_TypeChecker> _74017_tc = jule::new_struct<_1ad3e617d_TypeChecker>(new( std::nothrow ) _1ad3e617d_TypeChecker(this->self,this->self,jule::Ref<_1ad3e617d_Referencer>(),_1ab0277b7_Token(),jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>(),_7399_generics,jule::Bool()));
	return _74017_tc->_method_check_decl(_73848_t);
}



inline jule::Ref<_1ad3e617d_TypeKind> _1ac7ccb09_Sema::_method_build_type(jule::Ref<_1aaeea1c4_TypeDecl> _74934_t) {
	return this->self->_method_build_type_with_generics(_74934_t,nullptr);
}



inline jule::Ref<_1acde49c3_Data> _1ac7ccb09_Sema::_method_evalpd(jule::Ref<_1aaeea1c4_Expr> _75530_expr,jule::Trait<_1acde4cc0_Lookup> _75547_l,jule::Ref<_1ad3e617d_TypeKind> _75613_p,jule::Ref<_1aca3647d_Var> _75627_owner) {
	jule::Ref<_1acde49c3_Eval> _75717_e = jule::new_struct<_1acde49c3_Eval>(new( std::nothrow ) _1acde49c3_Eval(this->self,_75547_l,jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),_75627_owner));
	{
		auto _match_expr{ _75547_l };
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_ScopeChecker>>())) { goto _case_end_4447055776; }
		_case_begin_4447055776:;
		{
			_75717_e->_field_unsafety=_75547_l.operator jule::Ref<_1ac77dd1e_ScopeChecker>()->_method_is_unsafe();
		}
		goto _match_end_4447049952;
		_case_end_4447055776:;
		_match_end_4447049952:;
	}
	_75717_e->_field_prefix=_75613_p;
	return _75717_e->_method_eval_expr(_75530_expr);
}



inline jule::Ref<_1acde49c3_Data> _1ac7ccb09_Sema::_method_evalp(jule::Ref<_1aaeea1c4_Expr> _77429_expr,jule::Trait<_1acde4cc0_Lookup> _77446_l,jule::Ref<_1ad3e617d_TypeKind> _77461_p) {
	return this->self->_method_evalpd(_77429_expr,_77446_l,_77461_p,jule::new_ref<_1aca3647d_Var>());
}



inline jule::Ref<_1acde49c3_Data> _1ac7ccb09_Sema::_method_eval(jule::Ref<_1aaeea1c4_Expr> _77928_expr,jule::Trait<_1acde4cc0_Lookup> _77945_l) {
	return this->self->_method_evalp(_77928_expr,_77945_l,jule::new_ref<_1ad3e617d_TypeKind>());
}



inline void _1ac7ccb09_Sema::_method_check_assign_type(jule::Ref<_1ad3e617d_TypeKind> _78341_dest,jule::Ref<_1acde49c3_Data> _78362_d,_1ab0277b7_Token _7849_error_token,jule::Bool _78429_deref) {
	jule::Ref<_1acc33119_AssignTypeChecker> _78517_atc = jule::new_struct<_1acc33119_AssignTypeChecker>(new( std::nothrow ) _1acc33119_AssignTypeChecker(this->self,_78341_dest,_78362_d,_7849_error_token,_78429_deref));
	jule::Bool _79213_ok = _78517_atc->_method_check();
	if ((!(_79213_ok))) {
		return;
	}
	if ((!(_78362_d->_method_is_const())) || (!(jule::real(_78341_dest->_method_prim())))) {
		return;
	}
	jule::Str _80117_kind = _78341_dest->_method_prim()->_field_kind;
	{
		if (!((_1ad70d41d_is_sig_int(_80117_kind)))) { goto _case_end_4447077200; }
		_case_begin_4447077200:;
		{
			_78362_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_78362_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4447077008;
		_case_end_4447077200:;
		if (!((_1ad70d41d_is_unsig_int(_80117_kind)))) { goto _case_end_4447077328; }
		_case_begin_4447077328:;
		{
			_78362_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_78362_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4447077008;
		_case_end_4447077328:;
		if (!((_1ad70d41d_is_float(_80117_kind)))) { goto _case_end_4447077456; }
		_case_begin_4447077456:;
		{
			_78362_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_78362_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4447077008;
		_case_end_4447077456:;
		_match_end_4447077008:;
	}
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_type_compatibility(jule::Ref<_1ad3e617d_TypeKind> _81048_dest,jule::Ref<_1ad3e617d_TypeKind> _81113_src,_1ab0277b7_Token _81129_error_token,jule::Bool _81149_deref) {
	if (jule::real(_81113_src->_method_tup())) {
		this->self->_method_push_err(_81129_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_81048_dest->_method_to_str()),jule::Any(_81113_src->_method_to_str())}));
		return false;
	}
	jule::Ref<_1acc33119_TypeCompatibilityChecker> _81917_tcc = jule::new_struct<_1acc33119_TypeCompatibilityChecker>(new( std::nothrow ) _1acc33119_TypeCompatibilityChecker(this->self,_81048_dest,_81113_src,_81129_error_token,jule::Bool(),_81149_deref,jule::Bool()));
	jule::Bool _82613_ok = _81917_tcc->_method_check();
	if ((!(_82613_ok))) {
		this->self->_method_push_err(_81129_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_81048_dest->_method_to_str()),jule::Any(_81113_src->_method_to_str())}));
	}
	return _82613_ok;
}



inline jule::Ref<_1ad3e617d_TypeKind> _1ac7ccb09_Sema::_method_build_non_generic_type_kind(jule::Ref<_1aaeea1c4_TypeDecl> _84051_ast,jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> _8419_generics) {
	jule::Ref<_1ad3e617d_TypeChecker> _84217_tc = jule::new_struct<_1ad3e617d_TypeChecker>(new( std::nothrow ) _1ad3e617d_TypeChecker(this->self,this->self,jule::Ref<_1ad3e617d_Referencer>(),_1ab0277b7_Token(),_8419_generics,jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>(),jule::Bool()));
	return _84217_tc->_method_check_decl(_84051_ast);
}



inline void _1ac7ccb09_Sema::_method_build_fn_non_generic_type_kinds(jule::Ref<_1ab07a50c_FnIns> _85055_f) {
	jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> _85117_generics = nullptr;
	if (_85055_f->_field_decl->_method_is_method()) {
		_85117_generics=jule::append(_85055_f->_field_decl->_field_generics,_85055_f->_field_decl->_field_owner->_field_generics);
	} else {
		_85117_generics=_85055_f->_field_decl->_field_generics;
	}
	{
		auto _range_expr = _85055_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_ParamIns> _1ac7ccb09_p = *_range_begin;
			_iter_begin_4447116464:;
			{
				if ((!(_1ac7ccb09_p->_field_decl->_method_is_self()))) {
					_1ac7ccb09_p->_field_kind=this->self->_method_build_non_generic_type_kind(_1ac7ccb09_p->_field_decl->_field_kind->_field_decl,_85117_generics);
				}
			}
			_iter_next_4447116464:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_p = *_range_begin; goto _iter_begin_4447116464; }
			_iter_end_4447116464:;
		}
	}
	if ((!(_85055_f->_field_decl->_method_is_void()))) {
		_85055_f->_field_result=this->self->_method_build_non_generic_type_kind(_85055_f->_field_decl->_field_result->_field_kind->_field_decl,_85117_generics);
	}
}



inline jule::Ref<_1ab07a50c_FnIns> _1ac7ccb09_Sema::_method_get_trait_check_fn_kind(jule::Ref<_1ab07a50c_Fn> _86847_f) {
	jule::Ref<_1ab07a50c_FnIns> _86917_ins = _86847_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_86917_ins);
	return _86917_ins;
}



inline jule::Bool _1ac7ccb09_Sema::_method_reload_fn_ins_types(jule::Ref<_1ab07a50c_FnIns> _87443_f) {
	jule::Bool _87456_ok = jule::Bool();
	if (_87443_f->_method_is_builtin() || _87443_f->_method_is_anon()) {
		_87456_ok = true;
		return _87456_ok;
	}
	jule::Ref<_1ac7ccb09_Sema> _87917_sema = _87443_f->_field_decl->_field_sema;
	jule::Ref<_1acd9639d_SymbolTable> _88117_old = _87443_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_87443_f->_field_decl->_field_sema->_method_set_current_file(_88117_old);
	});
	jule::Ref<_1acd9639d_SymbolTable> _88317_file = _1ac7ccb09_find_file(_87443_f->_field_decl->_field_sema->_field_files,_87443_f->_field_decl->_field_token._field_file);
	if (jule::real(_88317_file)) {
		_87443_f->_field_decl->_field_sema->_method_set_current_file(_88317_file);
	}
	jule::I64 _88817_size = _87443_f->_field_generics.len();
	if (jule::real(_87443_f->_field_decl) && jule::real(_87443_f->_field_decl->_field_owner)) {
		_88817_size+=static_cast<jule::I64>(_87443_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>> _89317_generics = jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>::alloc(0LL,static_cast<jule::Int>(_88817_size));
	{
		auto _range_expr = _87443_f->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac7ccb09_i = 0;
			jule::Ref<_1ad3e617d_TypeKind> _1ac7ccb09_g = *_range_begin;
			_iter_begin_4447151056:;
			{
				_89317_generics=jule::append(_89317_generics,jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>({jule::new_struct<_1ad3e617d_TypeAlias>(new( std::nothrow ) _1ad3e617d_TypeAlias(jule::Ref<_1aaeea1c4_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_1ab0277b7_Token(),_87443_f->_field_decl->_field_generics[static_cast<jule::Int>(_1ac7ccb09_i)]->_field_ident,jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),_1ac7ccb09_g)),jule::Str(),jule::Slice<jule::Any>()))}));
			}
			_iter_next_4447151056:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac7ccb09_i; _1ac7ccb09_g = *_range_begin; goto _iter_begin_4447151056; }
			_iter_end_4447151056:;
		}
	}
	if (jule::real(_87443_f->_field_decl) && jule::real(_87443_f->_field_decl->_field_owner)) {
		jule::Ref<_1ab064271_StructIns> _90521_owner = _87443_f->_field_owner;
		{
			auto _range_expr = _90521_owner->_field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1ac7ccb09_i = 0;
				jule::Ref<_1ad3e617d_TypeKind> _1ac7ccb09_g = *_range_begin;
				_iter_begin_4447159136:;
				{
					_89317_generics=jule::append(_89317_generics,jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>({jule::new_struct<_1ad3e617d_TypeAlias>(new( std::nothrow ) _1ad3e617d_TypeAlias(jule::Ref<_1aaeea1c4_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_1ab0277b7_Token(),_90521_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1ac7ccb09_i)]->_field_ident,jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),_1ac7ccb09_g)),jule::Str(),jule::Slice<jule::Any>()))}));
				}
				_iter_next_4447159136:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1ac7ccb09_i; _1ac7ccb09_g = *_range_begin; goto _iter_begin_4447159136; }
				_iter_end_4447159136:;
			}
		}
	}
	_87456_ok=true;
	{
		auto _range_expr = _87443_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_ParamIns> _1ac7ccb09_p = *_range_begin;
			_iter_begin_4447160832:;
			{
				if ((!(_1ac7ccb09_p->_field_decl->_method_is_self()))) {
					_1ac7ccb09_p->_field_kind=_87917_sema->_method_build_type_with_generics(_1ac7ccb09_p->_field_decl->_field_kind->_field_decl,_89317_generics);
					_87456_ok=jule::real(_1ac7ccb09_p->_field_kind) && _87456_ok;
				}
			}
			_iter_next_4447160832:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_p = *_range_begin; goto _iter_begin_4447160832; }
			_iter_end_4447160832:;
		}
	}
	if ((!(_87443_f->_field_decl->_method_is_void()))) {
		_87443_f->_field_result=_87917_sema->_method_build_type_with_generics(_87443_f->_field_decl->_field_result->_field_kind->_field_decl,_89317_generics);
		_87456_ok=jule::real(_87443_f->_field_result) && _87456_ok;
	}
	if ((_87917_sema).alloc != (this->self).alloc) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_87917_sema->_field_errors);
	}
	_87456_ok = _87456_ok;
	return _87456_ok;
}



inline void _1ac7ccb09_Sema::_method_check_validity_for_init_expr(jule::Bool _93648_left_mut,jule::Bool _93664_left_ref,jule::Ref<_1ad3e617d_TypeKind> _9379_left_kind,jule::Ref<_1acde49c3_Data> _93735_d,_1ab0277b7_Token _93745_error_token) {
	if ((_93648_left_mut && (!(_93735_d->_field_mutable))) && _1ad3e617d_is_mut(_93735_d->_field_kind)) {
		this->self->_method_push_err(_93745_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
	}
	if (_93664_left_ref) {
		{
			auto _match_expr{ _93735_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>() || _match_expr.type_is<jule::Ref<_1ab0a4954_TraitSubIdentExprModel>>() || _match_expr.type_is<jule::Ref<_1ab0a4954_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ref<_1ab0a4954_StructSubIdentExprModel>>() || _match_expr.type_is<jule::Ref<_1ab0a4954_CommonSubIdentExprModel>>())) { goto _case_end_4447182640; }
			goto _match_end_4447180816;
			_case_end_4447182640:;
			if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_UnaryExprModel>>())) { goto _case_end_4447182160; }
			_case_begin_4447182160:;
			{
				jule::Ref<_1ab0a4954_UnaryExprModel> _95121_unary = _93735_d->_field_model.operator jule::Ref<_1ab0a4954_UnaryExprModel>();
				if (_95121_unary->_field_op == jule::Str("*", 1)) {
					goto _match_end_4447180816;
				}
				goto _case_begin_4447181856;
			}
			goto _match_end_4447180816;
			_case_end_4447182160:;
			_case_begin_4447181856:;
			{
				this->self->_method_push_err(_93745_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4447180816;
			_case_end_4447181856:;
			_match_end_4447180816:;
		}
		if (_93648_left_mut && (!(_93735_d->_field_mutable))) {
			this->self->_method_push_err(_93745_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>({}));
		}
	}
	jule::Ref<_1acc33119_AssignTypeChecker> _96717_atc = jule::new_struct<_1acc33119_AssignTypeChecker>(new( std::nothrow ) _1acc33119_AssignTypeChecker(this->self,jule::Ref<_1ad3e617d_TypeKind>(),_93735_d,_93745_error_token,jule::Bool()));
	_96717_atc->_method_check_validity();
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_type_alias_decl_kind(jule::Ref<_1ad3e617d_TypeAlias> _97550_ta,jule::Trait<_1acde4cc0_Lookup> _97566_l) {
	jule::Bool _97579_ok = jule::Bool();
	jule::Ref<_1acd9639d_SymbolTable> _97617_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_97617_old);
	});
	jule::Ref<_1acd9639d_SymbolTable> _97817_file = _1ac7ccb09_find_file(this->self->_field_files,_97550_ta->_field_token._field_file);
	if (jule::real(_97817_file)) {
		this->self->_method_set_current_file(_97817_file);
	}
	_97579_ok=this->self->_method_check_type_with_refers(_97550_ta->_field_kind,_97566_l,jule::new_struct<_1ad3e617d_Referencer>(new( std::nothrow ) _1ad3e617d_Referencer(_97550_ta->_field_ident,jule::Any(_97550_ta),(&(_97550_ta->_field_refers)))));
	if ((_97579_ok && jule::real(_97550_ta->_field_kind->_field_kind->_method_arr())) && _97550_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_97550_ta->_field_kind->_field_decl->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
		_97579_ok=false;
	}
	return _97579_ok;
}



inline void _1ac7ccb09_Sema::_method_check_type_alias_decl(jule::Ref<_1ad3e617d_TypeAlias> _99545_ta,jule::Trait<_1acde4cc0_Lookup> _99561_l) {
	if (_1ab0277b7_is_ignore_ident(_99545_ta->_field_ident)) {
		this->self->_method_push_err(_99545_ta->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_99545_ta,_99561_l);
}



inline void _1ac7ccb09_Sema::_method_check_type_alias_decl_dup(jule::Ref<_1ad3e617d_TypeAlias> _100349_ta) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_100349_ta).alloc)),_100349_ta->_field_ident,_100349_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_100349_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_100349_ta->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_100349_ta,this->self);
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _101244_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ad3e617d_TypeAlias> _1ac7ccb09_ta = *_range_begin;
			_iter_begin_4447224784:;
			{
				this->self->_method_check_type_alias_decl_dup(_1ac7ccb09_ta);
				if (this->self->_field_errors.len() > 0LL) {
					_101244_ok = false;
					return _101244_ok;
				}
			}
			_iter_next_4447224784:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_ta = *_range_begin; goto _iter_begin_4447224784; }
			_iter_end_4447224784:;
		}
	}
	_101244_ok = true;
	return _101244_ok;
}



inline void _1ac7ccb09_Sema::_method_check_enum_items_dup(jule::Ref<_1ac7804a2_Enum> _102439_e) {
	{
		auto _range_expr = _102439_e->_field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac7804a2_EnumItem> _1ac7ccb09_item = *_range_begin;
			_iter_begin_4447230960:;
			{
				if (_1ab0277b7_is_ignore_ident(_1ac7ccb09_item->_field_ident)) {
					(*this)._method_push_err(_1ac7ccb09_item->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
				} else {
					{
						auto _range_expr = _102439_e->_field_items;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_1ac7804a2_EnumItem> _1ac7ccb09_citem = *_range_begin;
							_iter_begin_4447233024:;
							{
								if (_1ac7ccb09_item == _1ac7ccb09_citem) {
									goto _iter_end_4447233024;
								} else if (_1ac7ccb09_item->_field_ident == _1ac7ccb09_citem->_field_ident) {
									(*this)._method_push_err(_1ac7ccb09_item->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ac7ccb09_item->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_4447233024;
								}
							}
							_iter_next_4447233024:;
							++_range_begin;
							if (_range_begin != _range_end) { _1ac7ccb09_citem = *_range_begin; goto _iter_begin_4447233024; }
							_iter_end_4447233024:;
						}
					}
				}
			}
			_iter_next_4447230960:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_item = *_range_begin; goto _iter_begin_4447230960; }
			_iter_end_4447230960:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_check_enum_items_str(jule::Ref<_1ac7804a2_Enum> _104244_e) {
	{
		auto _range_expr = _104244_e->_field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac7804a2_EnumItem> _1ac7ccb09_item = *_range_begin;
			_iter_begin_4447242960:;
			{
				if (_1ac7ccb09_item->_method_auto_expr()) {
					_1ac7ccb09_item->_field_value=jule::new_struct<_1acde49c3_Value>(new( std::nothrow ) _1acde49c3_Value(jule::Ref<_1aaeea1c4_Expr>(),jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::Ref<_1ad3e617d_TypeKind>(),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1ad6d5cec_Const::_static_method_new_str(_1ac7ccb09_item->_field_ident)))));
					_1ac7ccb09_item->_field_value->_field_data->_field_model=jule::Any(_1ac7ccb09_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_1acde49c3_Data> _105225_d = this->self->_method_eval(_1ac7ccb09_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_105225_d)))) {
						goto _iter_next_4447242960;
					}
					if ((!(_105225_d->_method_is_const()))) {
						this->self->_method_push_err(_1ac7ccb09_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(_104244_e->_field_kind->_field_kind,_105225_d,_1ac7ccb09_item->_field_token,false);
					_1ac7ccb09_item->_field_value->_field_data=_105225_d;
				}
			}
			_iter_next_4447242960:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_item = *_range_begin; goto _iter_begin_4447242960; }
			_iter_end_4447242960:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_check_enum_items_int(jule::Ref<_1ac7804a2_Enum> _106744_e) {
	jule::U64 _106817_max = static_cast<jule::U64>(_1ad6d61a4_max(_106744_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		auto _range_expr = _106744_e->_field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac7ccb09_i = 0;
			jule::Ref<_1ac7804a2_EnumItem> _1ac7ccb09_item = *_range_begin;
			_iter_begin_4447262960:;
			{
				if (_106817_max == 0LL) {
					this->self->_method_push_err(_1ac7ccb09_item->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				} else {
					(_106817_max)--;
				}
				if (_1ac7ccb09_item->_method_auto_expr()) {
					_1ac7ccb09_item->_field_value=jule::new_struct<_1acde49c3_Value>(new( std::nothrow ) _1acde49c3_Value(jule::Ref<_1aaeea1c4_Expr>(),jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::Ref<_1ad3e617d_TypeKind>(),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1ad6d5cec_Const::_static_method_new_u64(static_cast<jule::U64>(_106817_max - (_106817_max - static_cast<jule::U64>(_1ac7ccb09_i))))))));
					_1ac7ccb09_item->_field_value->_field_data->_field_model=jule::Any(_1ac7ccb09_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_1acde49c3_Data> _108425_d = this->self->_method_eval(_1ac7ccb09_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_108425_d)))) {
						goto _iter_next_4447262960;
					}
					if ((!(_108425_d->_method_is_const()))) {
						this->self->_method_push_err(_1ac7ccb09_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(_106744_e->_field_kind->_field_kind,_108425_d,_1ac7ccb09_item->_field_token,false);
					_1ac7ccb09_item->_field_value->_field_data=_108425_d;
				}
			}
			_iter_next_4447262960:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac7ccb09_i; _1ac7ccb09_item = *_range_begin; goto _iter_begin_4447262960; }
			_iter_end_4447262960:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_check_enum_decl(jule::Ref<_1ac7804a2_Enum> _109939_e) {
	if (_1ab0277b7_is_ignore_ident(_109939_e->_field_ident)) {
		this->self->_method_push_err(_109939_e->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_109939_e).alloc)),_109939_e->_field_ident,false)) {
		this->self->_method_push_err(_109939_e->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_109939_e->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_109939_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_109939_e->_field_token,jule::Str("there is no member for enum: @", 30),jule::Slice<jule::Any>({jule::Any(_109939_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_109939_e);
	if (jule::real(_109939_e->_field_kind)) {
		if ((!(this->self->_method_check_type(_109939_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_109939_e->_field_kind=jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ref<_1ad3e617d_Prim> _112617_t = _109939_e->_field_kind->_field_kind->_method_prim();
	if ((!(jule::real(_112617_t)))) {
		this->self->_method_push_err(_109939_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!((_112617_t->_method_is_str()))) { goto _case_end_4447304128; }
		_case_begin_4447304128:;
		{
			this->self->_method_check_enum_items_str(_109939_e);
		}
		goto _match_end_4447301728;
		_case_end_4447304128:;
		if (!((_1ad70d41d_is_int(_112617_t->_method_to_str())))) { goto _case_end_4447302064; }
		_case_begin_4447302064:;
		{
			this->self->_method_check_enum_items_int(_109939_e);
		}
		goto _match_end_4447301728;
		_case_end_4447302064:;
		_case_begin_4447294096:;
		{
			this->self->_method_push_err(_109939_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4447301728;
		_case_end_4447294096:;
		_match_end_4447301728:;
	}
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_enum_decls(void) {
	jule::Bool _114638_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac7804a2_Enum> _1ac7ccb09_e = *_range_begin;
			_iter_begin_4447309856:;
			{
				this->self->_method_check_enum_decl(_1ac7ccb09_e);
				if (this->self->_field_errors.len() > 0LL) {
					_114638_ok = false;
					return _114638_ok;
				}
			}
			_iter_next_4447309856:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_e = *_range_begin; goto _iter_begin_4447309856; }
			_iter_end_4447309856:;
		}
	}
	_114638_ok = true;
	return _114638_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_decl_generics(jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> _115838_generics) {
	jule::Bool _115866_ok = jule::Bool();
	_115866_ok=true;
	{
		auto _range_expr = _115838_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac7ccb09_i = 0;
			jule::Ref<_1aaeea1c4_GenericDecl> _1ac7ccb09_g = *_range_begin;
			_iter_begin_4447316688:;
			{
				if (_1ab0277b7_is_ignore_ident(_1ac7ccb09_g->_field_ident)) {
					(*this)._method_push_err(_1ac7ccb09_g->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
					_115866_ok=false;
					goto _iter_next_4447316688;
				}
				_julec_label_duplication_lookup:;
				{
					auto _range_expr = _115838_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1ac7ccb09_j = 0;
						jule::Ref<_1aaeea1c4_GenericDecl> _1ac7ccb09_ct = *_range_begin;
						_iter_begin_4447319520:;
						{
							{
								if (!((_1ac7ccb09_j >= _1ac7ccb09_i))) { goto _case_end_4447325040; }
								_case_begin_4447325040:;
								{
									goto _iter_end_4447319520;
								}
								goto _match_end_4447324800;
								_case_end_4447325040:;
								if (!((_1ac7ccb09_g->_field_ident == _1ac7ccb09_ct->_field_ident))) { goto _case_end_4447325168; }
								_case_begin_4447325168:;
								{
									(*this)._method_push_err(_1ac7ccb09_g->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ac7ccb09_g->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									_115866_ok=false;
									goto _iter_end_4447319520;
								}
								goto _match_end_4447324800;
								_case_end_4447325168:;
								_match_end_4447324800:;
							}
						}
						_iter_next_4447319520:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1ac7ccb09_j; _1ac7ccb09_ct = *_range_begin; goto _iter_begin_4447319520; }
						_iter_end_4447319520:;
					}
				}
			}
			_iter_next_4447316688:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac7ccb09_i; _1ac7ccb09_g = *_range_begin; goto _iter_begin_4447316688; }
			_iter_end_4447316688:;
		}
	}
	return _115866_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_fn_decl_params_dup(jule::Ref<_1ab07a50c_Fn> _118643_f) {
	jule::Bool _118653_ok = jule::Bool();
	_118653_ok=true;
	_julec_label_check:;
	{
		auto _range_expr = _118643_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac7ccb09_i = 0;
			jule::Ref<_1ab07a50c_Param> _1ac7ccb09_p = *_range_begin;
			_iter_begin_4447334064:;
			{
				{
					auto _range_expr = _118643_f->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1aaeea1c4_GenericDecl> _1ac7ccb09_g = *_range_begin;
						_iter_begin_4447337312:;
						{
							if (_1ac7ccb09_p->_field_ident == _1ac7ccb09_g->_field_ident) {
								_118653_ok=false;
								(*this)._method_push_err(_1ac7ccb09_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ac7ccb09_p->_field_ident)}));
								(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								goto _iter_next_4447334064;
							}
						}
						_iter_next_4447337312:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ac7ccb09_g = *_range_begin; goto _iter_begin_4447337312; }
						_iter_end_4447337312:;
					}
				}
				_julec_label_params_lookup:;
				{
					auto _range_expr = _118643_f->_field_params;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1ac7ccb09_j = 0;
						jule::Ref<_1ab07a50c_Param> _1ac7ccb09_jp = *_range_begin;
						_iter_begin_4447337936:;
						{
							{
								if (!((_1ac7ccb09_j >= _1ac7ccb09_i))) { goto _case_end_4447345776; }
								_case_begin_4447345776:;
								{
									goto _iter_end_4447337936;
								}
								goto _match_end_4447345520;
								_case_end_4447345776:;
								if (!((_1ab0277b7_is_anon_ident(_1ac7ccb09_p->_field_ident) || _1ab0277b7_is_anon_ident(_1ac7ccb09_jp->_field_ident)))) { goto _case_end_4447345904; }
								_case_begin_4447345904:;
								{
									goto _iter_end_4447337936;
								}
								goto _match_end_4447345520;
								_case_end_4447345904:;
								if (!((_1ac7ccb09_p->_field_ident == _1ac7ccb09_jp->_field_ident))) { goto _case_end_4447346032; }
								_case_begin_4447346032:;
								{
									_118653_ok=false;
									(*this)._method_push_err(_1ac7ccb09_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ac7ccb09_p->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_next_4447334064;
								}
								goto _match_end_4447345520;
								_case_end_4447346032:;
								_match_end_4447345520:;
							}
						}
						_iter_next_4447337936:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1ac7ccb09_j; _1ac7ccb09_jp = *_range_begin; goto _iter_begin_4447337936; }
						_iter_end_4447337936:;
					}
				}
			}
			_iter_next_4447334064:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac7ccb09_i; _1ac7ccb09_p = *_range_begin; goto _iter_begin_4447334064; }
			_iter_end_4447334064:;
		}
	}
	return _118653_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_fn_decl_result_dup(jule::Ref<_1ab07a50c_Fn> _122243_f) {
	jule::Bool _122253_ok = jule::Bool();
	_122253_ok=true;
	if (_122243_f->_method_is_void()) {
		return _122253_ok;
	}
	{
		auto _range_expr = _122243_f->_field_result->_field_idents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac7ccb09_i = 0;
			_1ab0277b7_Token _1ac7ccb09_v = *_range_begin;
			_iter_begin_4447357616:;
			{
				if (_1ab0277b7_is_ignore_ident(_1ac7ccb09_v._field_kind)) {
					goto _iter_next_4447357616;
				}
				{
					auto _range_expr = _122243_f->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1aaeea1c4_GenericDecl> _1ac7ccb09_g = *_range_begin;
						_iter_begin_4447361360:;
						{
							if (_1ac7ccb09_v._field_kind == _1ac7ccb09_g->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4447361360:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ac7ccb09_g = *_range_begin; goto _iter_begin_4447361360; }
						_iter_end_4447361360:;
					}
				}
				{
					auto _range_expr = _122243_f->_field_params;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ab07a50c_Param> _1ac7ccb09_p = *_range_begin;
						_iter_begin_4447364976:;
						{
							if (_1ac7ccb09_v._field_kind == _1ac7ccb09_p->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4447364976:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ac7ccb09_p = *_range_begin; goto _iter_begin_4447364976; }
						_iter_end_4447364976:;
					}
				}
				_julec_label_itself_lookup:;
				{
					auto _range_expr = _122243_f->_field_result->_field_idents;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1ac7ccb09_j = 0;
						_1ab0277b7_Token _1ac7ccb09_jv = *_range_begin;
						_iter_begin_4447369440:;
						{
							{
								if (!((_1ac7ccb09_j >= _1ac7ccb09_i))) { goto _case_end_4447371952; }
								_case_begin_4447371952:;
								{
									goto _iter_end_4447369440;
								}
								goto _match_end_4447371712;
								_case_end_4447371952:;
								if (!((_1ac7ccb09_jv._field_kind == _1ac7ccb09_v._field_kind))) { goto _case_end_4447372080; }
								_case_begin_4447372080:;
								{
									goto _julec_label_exist;
								}
								goto _match_end_4447371712;
								_case_end_4447372080:;
								_match_end_4447371712:;
							}
						}
						_iter_next_4447369440:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1ac7ccb09_j; _1ac7ccb09_jv = *_range_begin; goto _iter_begin_4447369440; }
						_iter_end_4447369440:;
					}
				}
				goto _iter_next_4447357616;
				_julec_label_exist:;
				(*this)._method_push_err(_1ac7ccb09_v,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ac7ccb09_v._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
				_122253_ok=false;
			}
			_iter_next_4447357616:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac7ccb09_i; _1ac7ccb09_v = *_range_begin; goto _iter_begin_4447357616; }
			_iter_end_4447357616:;
		}
	}
	return _122253_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_fn_decl_types(jule::Ref<_1ab07a50c_Fn> _127143_f) {
	jule::Bool _127153_ok = jule::Bool();
	_127153_ok=true;
	jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>> _127417_generics = _127143_f->_field_generics;
	if (jule::real(_127143_f->_field_owner)) {
		_127417_generics=jule::append(_127417_generics,_127143_f->_field_owner->_field_generics);
	}
	{
		auto _range_expr = _127143_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Param> _1ac7ccb09_p = *_range_begin;
			_iter_begin_4447387680:;
			{
				if ((!(_1ac7ccb09_p->_method_is_self()))) {
					jule::Ref<_1ad3e617d_TypeKind> _128125_kind = this->self->_method_build_non_generic_type_kind(_1ac7ccb09_p->_field_kind->_field_decl,_127417_generics);
					_127153_ok=jule::real(_128125_kind) && _127153_ok;
					_1ac7ccb09_p->_field_kind->_field_kind=_128125_kind;
				}
			}
			_iter_next_4447387680:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_p = *_range_begin; goto _iter_begin_4447387680; }
			_iter_end_4447387680:;
		}
	}
	if ((!(_127143_f->_method_is_void()))) {
		jule::Ref<_1ad3e617d_TypeKind> _128821_kind = this->self->_method_build_non_generic_type_kind(_127143_f->_field_result->_field_kind->_field_decl,_127417_generics);
		_127153_ok=jule::real(_128821_kind) && _127153_ok;
		_127143_f->_field_result->_field_kind->_field_kind=_128821_kind;
	}
	_127153_ok = _127153_ok;
	return _127153_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_fn_decl_prototype(jule::Ref<_1ab07a50c_Fn> _129847_f) {
	jule::Bool _129857_ok = jule::Bool();
	{
		if (!(((!(this->self->_method_check_decl_generics(_129847_f->_field_generics)))))) { goto _case_end_4447398896; }
		_case_begin_4447398896:;
		{
			_129857_ok = false;
			return _129857_ok;
		}
		goto _match_end_4447397664;
		_case_end_4447398896:;
		if (!(((!(this->self->_method_check_fn_decl_params_dup(_129847_f)))))) { goto _case_end_4447399008; }
		_case_begin_4447399008:;
		{
			_129857_ok = false;
			return _129857_ok;
		}
		goto _match_end_4447397664;
		_case_end_4447399008:;
		if (!(((!(this->self->_method_check_fn_decl_result_dup(_129847_f)))))) { goto _case_end_4447399120; }
		_case_begin_4447399120:;
		{
			_129857_ok = false;
			return _129857_ok;
		}
		goto _match_end_4447397664;
		_case_end_4447399120:;
		if (!(((!(this->self->_method_check_fn_decl_types(_129847_f)))))) { goto _case_end_4447398144; }
		_case_begin_4447398144:;
		{
			_129857_ok = false;
			return _129857_ok;
		}
		goto _match_end_4447397664;
		_case_end_4447398144:;
		_case_begin_4447397840:;
		{
			_129857_ok = true;
			return _129857_ok;
		}
		goto _match_end_4447397664;
		_case_end_4447397840:;
		_match_end_4447397664:;
	}
}



inline void _1ac7ccb09_Sema::_method_check_trait_decl_method(jule::Ref<_1ab07a50c_Fn> _130847_f) {
	if (_1ab0277b7_is_ignore_ident(_130847_f->_field_ident)) {
		this->self->_method_push_err(_130847_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_fn_decl_prototype(_130847_f);
	_130847_f->_field_sema=this->self;
}



inline void _1ac7ccb09_Sema::_method_check_trait_decl_methods(jule::Ref<_1ac276c57_Trait> _131748_t) {
	{
		auto _range_expr = _131748_t->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac7ccb09_i = 0;
			jule::Ref<_1ab07a50c_Fn> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4447413248:;
			{
				this->self->_method_check_trait_decl_method(_1ac7ccb09_f);
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto _range_expr = _131748_t->_field_methods;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1ac7ccb09_j = 0;
						jule::Ref<_1ab07a50c_Fn> _1ac7ccb09_jf = *_range_begin;
						_iter_begin_4447418432:;
						{
							{
								if (!((_1ac7ccb09_j >= _1ac7ccb09_i))) { goto _case_end_4447420960; }
								_case_begin_4447420960:;
								{
									goto _iter_end_4447418432;
								}
								goto _match_end_4447420720;
								_case_end_4447420960:;
								if (!((_1ac7ccb09_f->_field_ident == _1ac7ccb09_jf->_field_ident))) { goto _case_end_4447421088; }
								_case_begin_4447421088:;
								{
									this->self->_method_push_err(_1ac7ccb09_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ac7ccb09_f->_field_ident)}));
									this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_4447418432;
								}
								goto _match_end_4447420720;
								_case_end_4447421088:;
								_match_end_4447420720:;
							}
						}
						_iter_next_4447418432:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1ac7ccb09_j; _1ac7ccb09_jf = *_range_begin; goto _iter_begin_4447418432; }
						_iter_end_4447418432:;
					}
				}
			}
			_iter_next_4447413248:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac7ccb09_i; _1ac7ccb09_f = *_range_begin; goto _iter_begin_4447413248; }
			_iter_end_4447413248:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_check_trait_decl(jule::Ref<_1ac276c57_Trait> _134840_t) {
	if (_1ab0277b7_is_ignore_ident(_134840_t->_field_ident)) {
		this->self->_method_push_err(_134840_t->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_134840_t).alloc)),_134840_t->_field_ident,false)) {
		this->self->_method_push_err(_134840_t->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_134840_t->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_trait_decl_methods(_134840_t);
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_trait_decls(void) {
	jule::Bool _136039_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac276c57_Trait> _1ac7ccb09_t = *_range_begin;
			_iter_begin_4447439472:;
			{
				this->self->_method_check_trait_decl(_1ac7ccb09_t);
				if (this->self->_field_errors.len() > 0LL) {
					_136039_ok = false;
					return _136039_ok;
				}
			}
			_iter_next_4447439472:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_t = *_range_begin; goto _iter_begin_4447439472; }
			_iter_end_4447439472:;
		}
	}
	_136039_ok = true;
	return _136039_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_trait_impl_methods(jule::Ref<_1ac276c57_Trait> _137247_base,jule::Ref<_1ac780837_Impl> _137261_ipl) {
	jule::Bool _137275_ok = jule::Bool();
	_137275_ok=true;
	{
		auto _range_expr = _137261_ipl->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4447447536:;
			{
				if ((!(jule::real(_137247_base->_method_find_method(_1ac7ccb09_f->_field_ident))))) {
					(*this)._method_push_err(_1ac7ccb09_f->_field_token,jule::Str("trait @ have not any define in this identifier: @", 49),jule::Slice<jule::Any>({jule::Any(_137247_base->_field_ident),jule::Any(_1ac7ccb09_f->_field_ident)}));
					_137275_ok=false;
				}
			}
			_iter_next_4447447536:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4447447536; }
			_iter_end_4447447536:;
		}
	}
	return _137275_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_impl_to_struct(jule::Ref<_1ab064271_Struct> _138338_dest,jule::Ref<_1ac780837_Impl> _138357_ipl) {
	jule::Bool _138371_ok = jule::Bool();
	_138371_ok=true;
	{
		auto _range_expr = _138357_ipl->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4447457456:;
			{
				if (jule::real(_138338_dest->_method_find_method(_1ac7ccb09_f->_field_ident,_1ac7ccb09_f->_field_statically)) || jule::real(_138338_dest->_method_find_field(_1ac7ccb09_f->_field_ident))) {
					this->self->_method_push_err(_1ac7ccb09_f->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_138338_dest->_field_ident),jule::Any(_1ac7ccb09_f->_field_ident)}));
					_138371_ok=false;
					goto _iter_next_4447457456;
				}
				if ((_138338_dest->_field_generics.len() > 0LL) && (_1ac7ccb09_f->_field_generics.len() > 0LL)) {
					{
						auto _range_expr = _1ac7ccb09_f->_field_generics;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_1aaeea1c4_GenericDecl> _1ac7ccb09_fg = *_range_begin;
							_iter_begin_4447465792:;
							{
								{
									auto _range_expr = _138338_dest->_field_generics;
									if (_range_expr.begin() != _range_expr.end()) {
										auto _range_begin = _range_expr.begin();
										const auto _range_end = _range_expr.end();
										jule::Ref<_1aaeea1c4_GenericDecl> _1ac7ccb09_dg = *_range_begin;
										_iter_begin_4447467776:;
										{
											if (_1ac7ccb09_fg->_field_ident == _1ac7ccb09_dg->_field_ident) {
												this->self->_method_push_err(_1ac7ccb09_fg->_field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>({}));
												_138371_ok=false;
											}
										}
										_iter_next_4447467776:;
										++_range_begin;
										if (_range_begin != _range_end) { _1ac7ccb09_dg = *_range_begin; goto _iter_begin_4447467776; }
										_iter_end_4447467776:;
									}
								}
							}
							_iter_next_4447465792:;
							++_range_begin;
							if (_range_begin != _range_end) { _1ac7ccb09_fg = *_range_begin; goto _iter_begin_4447465792; }
							_iter_end_4447465792:;
						}
					}
				}
				_1ac7ccb09_f->_field_sema=this->self;
				_1ac7ccb09_f->_field_owner=_138338_dest;
				_138338_dest->_field_methods=jule::append(_138338_dest->_field_methods,jule::Slice<jule::Ref<_1ab07a50c_Fn>>({_1ac7ccb09_f}));
			}
			_iter_next_4447457456:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4447457456; }
			_iter_end_4447457456:;
		}
	}
	return _138371_ok;
}



inline void _1ac7ccb09_Sema::_method_impl_trait(jule::Ref<_1ac780837_Impl> _141134_decl) {
	jule::Ref<_1ac276c57_Trait> _141217_base = this->self->_method_find_trait(_141134_decl->_field_base._field_kind);
	if ((!(jule::real(_141217_base)))) {
		_141217_base=_1ad5a38bd_find_builtin_trait(_141134_decl->_field_base._field_kind);
	}
	if ((!(jule::real(_141217_base)))) {
		this->self->_method_push_err(_141134_decl->_field_base,jule::Str("any valid base definition is not exist in this identifier: @", 60),jule::Slice<jule::Any>({jule::Any(_141134_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ref<_1ab064271_Struct> _142517_dest = this->self->_method_find_struct(_141134_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_142517_dest)))) {
		this->self->_method_push_err(_141134_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_141134_decl->_field_dest._field_kind)}));
		return;
	}
	if (_142517_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_141134_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	_141217_base->_field_implemented=jule::append(_141217_base->_field_implemented,jule::Slice<jule::Ref<_1ab064271_Struct>>({_142517_dest}));
	_142517_dest->_field_implements=jule::append(_142517_dest->_field_implements,jule::Slice<jule::Ref<_1ac276c57_Trait>>({_141217_base}));
	{
		if (!(((!(this->self->_method_check_trait_impl_methods(_141217_base,_141134_decl)))))) { goto _case_end_4447492112; }
		_case_begin_4447492112:;
		{
			return;
		}
		goto _match_end_4447492016;
		_case_end_4447492112:;
		if (!(((!(this->self->_method_impl_to_struct(_142517_dest,_141134_decl)))))) { goto _case_end_4447495184; }
		_case_begin_4447495184:;
		{
			return;
		}
		goto _match_end_4447492016;
		_case_end_4447495184:;
		_match_end_4447492016:;
	}
}



inline void _1ac7ccb09_Sema::_method_impl_struct(jule::Ref<_1ac780837_Impl> _144535_decl) {
	
	jule::Ref<_1ab064271_Struct> _145017_dest = this->self->_method_find_struct(_144535_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_145017_dest)))) {
		this->self->_method_push_err(_144535_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_144535_decl->_field_dest._field_kind)}));
		return;
	}
	if (_145017_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_144535_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!(((!(this->self->_method_impl_to_struct(_145017_dest,_144535_decl)))))) { goto _case_end_4447509072; }
		_case_begin_4447509072:;
		{
			return;
		}
		goto _match_end_4447507792;
		_case_end_4447509072:;
		_match_end_4447507792:;
	}
}



inline void _1ac7ccb09_Sema::_method_impl_impl(jule::Ref<_1ac780837_Impl> _146833_decl) {
	{
		if (!((_146833_decl->_method_is_trait_impl()))) { goto _case_end_4447512176; }
		_case_begin_4447512176:;
		{
			this->self->_method_impl_trait(_146833_decl);
		}
		goto _match_end_4447511952;
		_case_end_4447512176:;
		if (!((_146833_decl->_method_is_struct_impl()))) { goto _case_end_4447512304; }
		_case_begin_4447512304:;
		{
			this->self->_method_impl_struct(_146833_decl);
		}
		goto _match_end_4447511952;
		_case_end_4447512304:;
		_match_end_4447511952:;
	}
}



inline void _1ac7ccb09_Sema::_method_check_var_decl(jule::Ref<_1aca3647d_Var> _147738_decl,jule::Trait<_1acde4cc0_Lookup> _147750_l) {
	if (_1ab0277b7_is_ignore_ident(_147738_decl->_field_ident)) {
		this->self->_method_push_err(_147738_decl->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	if (_147738_decl->_method_is_type_inferred()) {
		if (_147738_decl->_field_statically) {
			this->self->_method_push_err(_147738_decl->_field_token,jule::Str("static variables must be have type annotation", 45),jule::Slice<jule::Any>({}));
		}
		if ((!(_147738_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_147738_decl->_field_token,jule::Str("type inference declarations should have a initializer", 53),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_check_type(_147738_decl->_field_kind,_147750_l);
	}
	if (_147738_decl->_field_constant && _147738_decl->_field_reference) {
		this->self->_method_push_err(_147738_decl->_field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>({}));
	}
	if ((!(_147738_decl->_method_is_initialized()))) {
		if (_147738_decl->_field_constant) {
			this->self->_method_push_err(_147738_decl->_field_token,jule::Str("constant variable must have initialize expression", 49),jule::Slice<jule::Any>({}));
		}
		if (_147738_decl->_field_statically) {
			this->self->_method_push_err(_147738_decl->_field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>({}));
		}
		if (_147738_decl->_field_reference) {
			this->self->_method_push_err(_147738_decl->_field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>({}));
		}
	}
}



inline void _1ac7ccb09_Sema::_method_check_global_var_decl(jule::Ref<_1aca3647d_Var> _151445_decl) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_151445_decl).alloc)),_151445_decl->_field_ident,_151445_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_151445_decl->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_151445_decl->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_151445_decl->_field_cpp_linked && _151445_decl->_field_constant) {
		this->self->_method_push_err(_151445_decl->_field_token,jule::Str("cpp linked variables cannot constant", 36),jule::Slice<jule::Any>({}));
	}
	if (((!(_151445_decl->_field_cpp_linked)) && (!(_151445_decl->_field_constant))) && (!(_151445_decl->_field_statically))) {
		this->self->_method_push_err(_151445_decl->_field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_var_decl(_151445_decl,this->self);
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_global_decls(void) {
	jule::Bool _153140_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aca3647d_Var> _1ac7ccb09_decl = *_range_begin;
			_iter_begin_4447553808:;
			{
				this->self->_method_check_global_var_decl(_1ac7ccb09_decl);
				if (this->self->_field_errors.len() > 0LL) {
					_153140_ok = false;
					return _153140_ok;
				}
			}
			_iter_next_4447553808:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_decl = *_range_begin; goto _iter_begin_4447553808; }
			_iter_end_4447553808:;
		}
	}
	_153140_ok = true;
	return _153140_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_struct_trait_impl(jule::Ref<_1ab064271_Struct> _154347_strct,jule::Ref<_1ac276c57_Trait> _154367_trt) {
	jule::Bool _154382_ok = jule::Bool();
	{
		auto _range_expr = _154367_trt->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1ac7ccb09_tf = *_range_begin;
			_iter_begin_4447562160:;
			{
				jule::Bool _154521_exist = false;
				jule::Ref<_1ab07a50c_Fn> _154621_sf = _154347_strct->_method_find_method(_1ac7ccb09_tf->_field_ident,_1ac7ccb09_tf->_field_statically);
				jule::Ref<_1ab07a50c_FnIns> _154717_tf_k = this->self->_method_get_trait_check_fn_kind(_1ac7ccb09_tf);
				if (jule::real(_154621_sf)) {
					jule::Ref<_1ab07a50c_FnIns> _154921_sf_k = this->self->_method_get_trait_check_fn_kind(_154621_sf);
					_154521_exist=((_154717_tf_k->_field_decl->_field_public == _154921_sf_k->_field_decl->_field_public) && (_154717_tf_k->_field_decl->_field_ident == _154921_sf_k->_field_decl->_field_ident)) && _154717_tf_k->_method_equals(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_154921_sf_k)));
				}
				if ((!(_154521_exist))) {
					
					jule::Str _155825_s = _154717_tf_k->_method_get_kind_str(true);
					if (_1ac7ccb09_tf->_field_public) {
						_155825_s=jule::Str("pub ", 4) + _155825_s;
					}
					this->self->_method_push_err(_154347_strct->_field_token,jule::Str("trait @ derived but not implemented trait's \"@\" define", 54),jule::Slice<jule::Any>({jule::Any(_154367_trt->_field_ident),jule::Any(_155825_s)}));
					_154382_ok=false;
				}
			}
			_iter_next_4447562160:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_tf = *_range_begin; goto _iter_begin_4447562160; }
			_iter_end_4447562160:;
		}
	}
	return _154382_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_struct_impls(jule::Ref<_1ab064271_Struct> _156942_s) {
	jule::Bool _156956_ok = jule::Bool();
	_156956_ok=true;
	{
		auto _range_expr = _156942_s->_field_implements;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac276c57_Trait> _1ac7ccb09_trt = *_range_begin;
			_iter_begin_4447582080:;
			{
				_156956_ok=this->self->_method_check_struct_trait_impl(_156942_s,_1ac7ccb09_trt) && _156956_ok;
			}
			_iter_next_4447582080:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_trt = *_range_begin; goto _iter_begin_4447582080; }
			_iter_end_4447582080:;
		}
	}
	_156956_ok = _156956_ok;
	return _156956_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_struct_fields(jule::Ref<_1ab064271_Struct> _157743_st) {
	jule::Bool _157758_ok = jule::Bool();
	_157758_ok=true;
	jule::Ref<_1ad3e617d_TypeChecker> _158017_tc = jule::new_struct<_1ad3e617d_TypeChecker>(new( std::nothrow ) _1ad3e617d_TypeChecker(this->self,this->self,jule::new_struct<_1ad3e617d_Referencer>(new( std::nothrow ) _1ad3e617d_Referencer(_157743_st->_field_ident,jule::Any(_157743_st),nullptr)),_1ab0277b7_Token(),_157743_st->_field_generics,jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>(),jule::Bool()));
	jule::I64 _159013_n = _157743_st->_field_instances.len();
	{
		auto _range_expr = _157743_st->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Field> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4447592528:;
			{
				_1ac7ccb09_f->_field_owner=_157743_st;
				_1ac7ccb09_f->_field_kind->_field_kind=_158017_tc->_method_check_decl(_1ac7ccb09_f->_field_kind->_field_decl);
				_157758_ok=jule::real(_1ac7ccb09_f->_field_kind->_field_kind) && _157758_ok;
				{
					auto _range_expr = _157743_st->_field_fields;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ab064271_Field> _1ac7ccb09_cf = *_range_begin;
						_iter_begin_4447597296:;
						{
							if (_1ac7ccb09_f == _1ac7ccb09_cf) {
								goto _iter_end_4447597296;
							} else if (_1ac7ccb09_f->_field_ident == _1ac7ccb09_cf->_field_ident) {
								this->self->_method_push_err(_1ac7ccb09_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ac7ccb09_f->_field_ident)}));
								this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								_157758_ok=false;
							}
						}
						_iter_next_4447597296:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ac7ccb09_cf = *_range_begin; goto _iter_begin_4447597296; }
						_iter_end_4447597296:;
					}
				}
			}
			_iter_next_4447592528:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4447592528; }
			_iter_end_4447592528:;
		}
	}
	if (_157758_ok && (_159013_n != _157743_st->_field_instances.len())) {
		jule::drop(_158017_tc->_field_referencer);
		_157743_st->_field_instances=_157743_st->_field_instances.slice(0LL,static_cast<jule::Int>(_159013_n));
		{
			auto _range_expr = _157743_st->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab064271_Field> _1ac7ccb09_f = *_range_begin;
				_iter_begin_4788327664:;
				{
					_1ac7ccb09_f->_field_kind->_field_kind=_158017_tc->_method_check_decl(_1ac7ccb09_f->_field_kind->_field_decl);
				}
				_iter_next_4788327664:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4788327664; }
				_iter_end_4788327664:;
			}
		}
	}
	_157758_ok = _157758_ok;
	return _157758_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_struct_decl_methods(jule::Ref<_1ab064271_Struct> _161949_s) {
	jule::Bool _161963_ok = jule::Bool();
	{
		auto _range_expr = _161949_s->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1ac7ccb09_m = *_range_begin;
			_iter_begin_4369691488:;
			{
				if ((!(this->self->_method_check_fn_decl_types(_1ac7ccb09_m)))) {
					_161963_ok = false;
					return _161963_ok;
				}
			}
			_iter_next_4369691488:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_m = *_range_begin; goto _iter_begin_4369691488; }
			_iter_end_4369691488:;
		}
	}
	_161963_ok = true;
	return _161963_ok;
}



inline void _1ac7ccb09_Sema::_method_check_struct_decl(jule::Ref<_1ab064271_Struct> _162841_s) {
	if (_1ab0277b7_is_ignore_ident(_162841_s->_field_ident)) {
		this->self->_method_push_err(_162841_s->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_162841_s).alloc)),_162841_s->_field_ident,_162841_s->_field_cpp_linked)) {
		this->self->_method_push_err(_162841_s->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_162841_s->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_162841_s->_field_sema=this->self;
	{
		if (!(((!(this->self->_method_check_decl_generics(_162841_s->_field_generics)))))) { goto _case_end_4788343392; }
		_case_begin_4788343392:;
		{
			return;
		}
		goto _match_end_4370377936;
		_case_end_4788343392:;
		if (!(((!(this->self->_method_check_struct_fields(_162841_s)))))) { goto _case_end_4788343504; }
		_case_begin_4788343504:;
		{
			return;
		}
		goto _match_end_4370377936;
		_case_end_4788343504:;
		if (!(((!(this->self->_method_check_struct_decl_methods(_162841_s)))))) { goto _case_end_4788412944; }
		_case_begin_4788412944:;
		{
			return;
		}
		goto _match_end_4370377936;
		_case_end_4788412944:;
		if (!(((!(this->self->_method_check_struct_impls(_162841_s)))))) { goto _case_end_4788413056; }
		_case_begin_4788413056:;
		{
			return;
		}
		goto _match_end_4370377936;
		_case_end_4788413056:;
		_match_end_4370377936:;
	}
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_struct_decls(void) {
	jule::Bool _164640_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1ac7ccb09_s = *_range_begin;
			_iter_begin_4788342320:;
			{
				this->self->_method_check_struct_decl(_1ac7ccb09_s);
				if (this->self->_field_errors.len() > 0LL) {
					_164640_ok = false;
					return _164640_ok;
				}
			}
			_iter_next_4788342320:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_s = *_range_begin; goto _iter_begin_4788342320; }
			_iter_end_4788342320:;
		}
	}
	_164640_ok = true;
	return _164640_ok;
}



inline void _1ac7ccb09_Sema::_method_check_fn_decl(jule::Ref<_1ab07a50c_Fn> _165937_f) {
	if (_1ab0277b7_is_ignore_ident(_165937_f->_field_ident)) {
		this->self->_method_push_err(_165937_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_165937_f).alloc)),_165937_f->_field_ident,_165937_f->_field_cpp_linked)) {
		this->self->_method_push_err(_165937_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_165937_f->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_165937_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_165937_f);
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_fn_decls(void) {
	jule::Bool _167236_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4369777248:;
			{
				this->self->_method_check_fn_decl(_1ac7ccb09_f);
				if (this->self->_field_errors.len() > 0LL) {
					_167236_ok = false;
					return _167236_ok;
				}
			}
			_iter_next_4369777248:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4369777248; }
			_iter_end_4369777248:;
		}
	}
	_167236_ok = true;
	return _167236_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_directive_pass(_1ac699a1a_Pass _168439_pass) {
	jule::Bool _168453_ok = jule::Bool();
	if (_168439_pass._field_text == jule::Str("", 0)) {
		_168453_ok = true;
		return _168453_ok;
	}
	if (_168439_pass._field_text[0LL] != '-') {
		(*this)._method_push_err(_168439_pass._field_token,jule::Str("the pass directive must be start with dash", 42),jule::Slice<jule::Any>({}));
		_168453_ok = false;
		return _168453_ok;
	}
	_168453_ok = true;
	return _168453_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_passes(void) {
	jule::Bool _169733_ok = jule::Bool();
	_169733_ok=true;
	{
		auto _range_expr = (*this)._field_file->_field_passes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1ac699a1a_Pass _1ac7ccb09_pass = *_range_begin;
			_iter_begin_4369671904:;
			{
				_169733_ok=(*this)._method_check_directive_pass(_1ac7ccb09_pass) && _169733_ok;
			}
			_iter_next_4369671904:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_pass = *_range_begin; goto _iter_begin_4369671904; }
			_iter_end_4369671904:;
		}
	}
	return _169733_ok;
}



inline void _1ac7ccb09_Sema::_method_push_cycle_error(jule::Ref<_1ab064271_Struct> _170531_st1,jule::Ref<_1ab064271_Struct> _170545_st2,jule::Str& _170564_message) {
	
	jule::Str _170813_refers_to = _1d068165a_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_170531_st1->_field_ident),jule::Any(_170545_st2->_field_ident)}));
	_170564_message=((_1ac699a1a_str_repeat(jule::Str(" ", 1),4LL) + _170813_refers_to) + jule::Str("\n", 1)) + _170564_message;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_cross_cycle(jule::Ref<_1ab064271_Struct> _171232_st1,jule::Ref<_1ab064271_Struct> _171246_st2,jule::Str& _171265_message) {
	{
		auto _range_expr = _171246_st2->_field_uses;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1ac7ccb09_u = *_range_begin;
			_iter_begin_4370384528:;
			{
				if ((_1ac7ccb09_u).alloc == (_171232_st1).alloc) {
					(*this)._method_push_cycle_error(_171246_st2,_1ac7ccb09_u,_171265_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_171232_st1,_1ac7ccb09_u,_171265_message)))) {
					(*this)._method_push_cycle_error(_171246_st2,_1ac7ccb09_u,_171265_message);
					return false;
				}
			}
			_iter_next_4370384528:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_u = *_range_begin; goto _iter_begin_4370384528; }
			_iter_end_4370384528:;
		}
	}
	return true;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _172853_derive,jule::Ref<_1ab064271_Struct> _172866_st1,jule::Ref<_1ad3e617d_TypeKind> _172884_k) {
	jule::Bool _1728100_ok = jule::Bool();
	jule::Ref<_1ab064271_Struct> _172917_st2 = _1ad3e617d_get_struct_from_kind(_172884_k);
	if ((!(jule::real(_172917_st2)))) {
		_1728100_ok = true;
		return _1728100_ok;
	}
	if ((_172866_st1).alloc == (_172917_st2).alloc) {
		(*this)._method_push_err(_172866_st1->_field_token,jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57),jule::Slice<jule::Any>({jule::Any(_172853_derive),jule::Any(_172866_st1->_field_ident)}));
		_1728100_ok = false;
		return _1728100_ok;
	}
	jule::Str _174117_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_172866_st1,_172917_st2,_174117_message)))) {
		jule::Str _174421_err_msg = _174117_message;
		_174117_message=jule::Str("", 0);
		(*this)._method_push_cycle_error(_172866_st1,_172917_st2,_174117_message);
		_174421_err_msg=_174421_err_msg + _174117_message;
		(*this)._method_push_err(_172866_st1->_field_token,jule::Str("illegal cross cycle for \"@\" derive;\n@", 37),jule::Slice<jule::Any>({jule::Any(_172853_derive),jule::Any(_174421_err_msg)}));
		_1728100_ok = false;
		return _1728100_ok;
	}
	_1728100_ok = true;
	return _1728100_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_struct_ins_derive_clone(jule::Ref<_1ab064271_StructIns> _175552_st) {
	jule::Bool _175570_ok = jule::Bool();
	if ((!(_175552_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_175570_ok = true;
		return _175570_ok;
	}
	{
		auto _range_expr = _175552_st->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_FieldIns> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4370415984:;
			{
				if ((!(jule::real(_1ac7ccb09_f->_field_kind))) || (!(_1ad3e617d_is_mut(_1ac7ccb09_f->_field_kind)))) {
					goto _iter_next_4370415984;
				}
				if ((!(_1ad3e617d_supports_cloning(_1ac7ccb09_f->_field_kind)))) {
					(*this)._method_push_err(_175552_st->_field_decl->_field_token,jule::Str("type \"@\" is not compatible to derive \"@\"", 40),jule::Slice<jule::Any>({jule::Any(_1ac7ccb09_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_175570_ok = false;
					return _175570_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_175552_st->_field_decl,_1ac7ccb09_f->_field_kind)))) {
					_175570_ok = false;
					return _175570_ok;
				}
			}
			_iter_next_4370415984:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4370415984; }
			_iter_end_4370415984:;
		}
	}
	_175570_ok = true;
	return _175570_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_struct_derive_clone(jule::Ref<_1ab064271_Struct> _177848_st) {
	jule::Bool _177863_ok = jule::Bool();
	_177863_ok = (*this)._method_check_struct_ins_derive_clone(_177848_st->_method_instance());
	return _177863_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_file_derives(void) {
	jule::Bool _178239_ok = jule::Bool();
	{
		auto _range_expr = (*this)._field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1ac7ccb09_st = *_range_begin;
			_iter_begin_4370434944:;
			{
				jule::Bool _178517_ok = (*this)._method_check_struct_derive_clone(_1ac7ccb09_st);
				if ((!(_178517_ok))) {
					_178239_ok = false;
					return _178239_ok;
				}
			}
			_iter_next_4370434944:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_st = *_range_begin; goto _iter_begin_4370434944; }
			_iter_end_4370434944:;
		}
	}
	_178239_ok = true;
	return _178239_ok;
}



inline void _1ac7ccb09_Sema::_method_check_package_derives(void) {
	{
		auto _range_expr = (*this)._field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4370439936:;
			{
				(*this)._method_set_current_file(_1ac7ccb09_f);
				jule::Bool _179717_ok = (*this)._method_check_file_derives();
				if ((!(_179717_ok))) {
					return;
				}
			}
			_iter_next_4370439936:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4370439936; }
			_iter_end_4370439936:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_check_package_decls(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4370445472:;
			{
				this->self->_method_set_current_file(_1ac7ccb09_f);
				if ((!(this->self->_method_check_passes()))) {
					return;
				}
			}
			_iter_next_4370445472:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4370445472; }
			_iter_end_4370445472:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4370446496:;
			{
				this->self->_method_set_current_file(_1ac7ccb09_f);
				if ((!(this->self->_method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_4370446496:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4370446496; }
			_iter_end_4370446496:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4370450080:;
			{
				this->self->_method_set_current_file(_1ac7ccb09_f);
				if ((!(this->self->_method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_4370450080:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4370450080; }
			_iter_end_4370450080:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4370453328:;
			{
				this->self->_method_set_current_file(_1ac7ccb09_f);
				if ((!(this->self->_method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_4370453328:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4370453328; }
			_iter_end_4370453328:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4370456416:;
			{
				this->self->_method_set_current_file(_1ac7ccb09_f);
				if ((!(this->self->_method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_4370456416:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4370456416; }
			_iter_end_4370456416:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4370459552:;
			{
				this->self->_method_set_current_file(_1ac7ccb09_f);
				if ((!(this->self->_method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_4370459552:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4370459552; }
			_iter_end_4370459552:;
		}
	}
	this->self->_method_check_package_derives();
}



inline void _1ac7ccb09_Sema::_method_check_data_for_type_inference(jule::Ref<_1acde49c3_Data> _185248_d,_1ab0277b7_Token _185258_err_token) {
	{
		if (!((_185248_d->_method_is_nil()))) { goto _case_end_4448080240; }
		_case_begin_4448080240:;
		{
			(*this)._method_push_err(_185258_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4448079984;
		_case_end_4448080240:;
		if (!((_185248_d->_method_is_void()))) { goto _case_end_4448080368; }
		_case_begin_4448080368:;
		{
			(*this)._method_push_err(_185258_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4448079984;
		_case_end_4448080368:;
		if (!((_185248_d->_field_kind->_field_variadic))) { goto _case_end_4448080496; }
		_case_begin_4448080496:;
		{
			(*this)._method_push_err(_185258_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4448079984;
		_case_end_4448080496:;
		_match_end_4448079984:;
	}
}



inline void _1ac7ccb09_Sema::_method_check_var(jule::Ref<_1aca3647d_Var> _186533_v) {
	if (_186533_v->_field_cpp_linked) {
		return;
	}
	if (_186533_v->_method_is_type_inferred()) {
		_186533_v->_field_kind=jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),_186533_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_type_inference(_186533_v->_field_value->_field_data,_186533_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ref<_1ad3e617d_Arr> _187721_arr = _186533_v->_field_kind->_field_kind->_method_arr();
		if (jule::real(_187721_arr)) {
			if (_187721_arr->_field_auto) {
				jule::Ref<_1ad3e617d_Arr> _188025_data_arr = _186533_v->_field_value->_field_data->_field_kind->_method_arr();
				if (jule::real(_188025_data_arr)) {
					_187721_arr->_field_n=_188025_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_186533_v->_field_kind->_field_kind,_186533_v->_field_value->_field_data,_186533_v->_field_value->_field_expr->_field_token,false);
	}
	this->self->_method_check_validity_for_init_expr(_186533_v->_field_mutable,_186533_v->_field_reference,_186533_v->_field_kind->_field_kind,_186533_v->_field_value->_field_data,_186533_v->_field_value->_field_expr->_field_token);
	if ((!(_186533_v->_field_constant))) {
		jule::drop(_186533_v->_field_value->_field_data->_field_constant);
	}
	if (jule::real(_186533_v->_field_kind->_field_kind->_method_tup())) {
		jule::drop(_186533_v->_field_kind->_field_kind);
	}
}



inline void _1ac7ccb09_Sema::_method_check_type_var(jule::Ref<_1aca3647d_Var> _190838_decl,jule::Trait<_1acde4cc0_Lookup> _190850_l) {
	if (_190838_decl->_field_cpp_linked || (!(_190838_decl->_method_is_initialized()))) {
		return;
	}
	if (jule::real(_190838_decl->_field_kind)) {
		_190838_decl->_field_value->_field_data=this->self->_method_evalpd(_190838_decl->_field_value->_field_expr,_190850_l,_190838_decl->_field_kind->_field_kind,_190838_decl);
	} else {
		_190838_decl->_field_value->_field_data=this->self->_method_evalpd(_190838_decl->_field_value->_field_expr,_190850_l,jule::new_ref<_1ad3e617d_TypeKind>(),_190838_decl);
	}
	if ((!(jule::real(_190838_decl->_field_value->_field_data)))) {
		return;
	}
	this->self->_method_check_var(_190838_decl);
}



inline void _1ac7ccb09_Sema::_method_check_global_types(void) {
	{
		auto _range_expr = this->self->_field_file->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aca3647d_Var> _1ac7ccb09_decl = *_range_begin;
			_iter_begin_4448121440:;
			{
				this->self->_method_check_type_var(_1ac7ccb09_decl,this->self);
			}
			_iter_next_4448121440:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_decl = *_range_begin; goto _iter_begin_4448121440; }
			_iter_end_4448121440:;
		}
	}
	{
		auto _range_expr = this->self->_field_file->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aca3647d_Var> _1ac7ccb09_decl = *_range_begin;
			_iter_begin_4448122608:;
			{
				if (_1ac7ccb09_decl->_method_is_initialized() && (_1ac7ccb09_decl->_field_depends.len() > 0LL)) {
					this->self->_method_check_type_var(_1ac7ccb09_decl,this->self);
				}
			}
			_iter_next_4448122608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_decl = *_range_begin; goto _iter_begin_4448122608; }
			_iter_end_4448122608:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_check_type_method(jule::Ref<_1ab064271_StructIns> _194141_strct,jule::Ref<_1ab07a50c_Fn> _194164_f) {
	if (_194164_f->_field_cpp_linked) {
		return;
	}
	if (_194164_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_194164_f->_field_instances.len() == 0LL) {
		jule::Ref<_1ab07a50c_FnIns> _195221_ins = _194164_f->_method_instance();
		_195221_ins->_field_owner=_194141_strct;
		_194164_f->_method_append_instance(_195221_ins);
		this->self->_method_reload_fn_ins_types(_195221_ins);
		_195221_ins->_field_reloaded=true;
	}
	{
		auto _range_expr = _194164_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_FnIns> _1ac7ccb09_ins = *_range_begin;
			_iter_begin_4448133216:;
			{
				if (_1ac7ccb09_ins->_field_scope->_field_stmts.len() > 0LL) {
					goto _iter_next_4448133216;
				}
				this->self->_method_check_fn_ins(_1ac7ccb09_ins);
			}
			_iter_next_4448133216:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_ins = *_range_begin; goto _iter_begin_4448133216; }
			_iter_end_4448133216:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_check_type_struct(jule::Ref<_1ab064271_Struct> _196841_strct) {
	if (_196841_strct->_field_cpp_linked) {
		return;
	}
	if ((_196841_strct->_field_generics.len() == 0LL) && (_196841_strct->_field_instances.len() == 0LL)) {
		jule::Ref<_1ab064271_StructIns> _197421_ins = _196841_strct->_method_instance();
		_197421_ins->_field_checked=true;
		_196841_strct->_method_append_instance(_197421_ins);
	}
	{
		auto _range_expr = _196841_strct->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_StructIns> _1ac7ccb09_ins = *_range_begin;
			_iter_begin_4448150640:;
			{
				{
					auto _range_expr = _1ac7ccb09_ins->_field_methods;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ab07a50c_Fn> _1ac7ccb09_f = *_range_begin;
						_iter_begin_4448153168:;
						{
							this->self->_method_check_type_method(_1ac7ccb09_ins,_1ac7ccb09_f);
						}
						_iter_next_4448153168:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4448153168; }
						_iter_end_4448153168:;
					}
				}
			}
			_iter_next_4448150640:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_ins = *_range_begin; goto _iter_begin_4448150640; }
			_iter_end_4448150640:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_check_struct_types(void) {
	{
		auto _range_expr = this->self->_field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1ac7ccb09_s = *_range_begin;
			_iter_begin_4448156528:;
			{
				this->self->_method_check_type_struct(_1ac7ccb09_s);
			}
			_iter_next_4448156528:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_s = *_range_begin; goto _iter_begin_4448156528; }
			_iter_end_4448156528:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_check_rets(jule::Ref<_1ab07a50c_FnIns> _199233_f) {
	if (_199233_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _199713_ok = _1ac7ccb09_has_ret(_199233_f->_field_scope);
	if ((!(_199713_ok))) {
		(*this)._method_push_err(_199233_f->_field_decl->_field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>({}));
	}
}



inline void _1ac7ccb09_Sema::_method_check_fn_ins_sc(jule::Ref<_1ab07a50c_FnIns> _200338_f,jule::Ref<_1ac77dd1e_ScopeChecker> _200353_sc) {
	if (_200338_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ref<_1aca3647d_Var>> _200817_vars = _1ac7ccb09_build_ret_vars(_200338_f);
	_200353_sc->_field_table->_field_vars=jule::append(_200353_sc->_field_table->_field_vars,_200817_vars);
	_200353_sc->_field_table->_field_vars=jule::append(_200353_sc->_field_table->_field_vars,_1ac7ccb09_build_param_vars(_200338_f));
	_200353_sc->_field_table->_field_type_aliases=jule::append(_200353_sc->_field_table->_field_type_aliases,_1ac7ccb09_build_generic_type_aliases(_200338_f));
	_200353_sc->_method_check(_200338_f->_field_decl->_field_scope,_200338_f->_field_scope);
	if (_200817_vars.len() > 0LL) {
		jule::Slice<jule::Any> _201821_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_200338_f->_field_scope->_field_stmts.len() + _200817_vars.len())));
		{
			auto _range_expr = _200817_vars;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1aca3647d_Var> _1ac7ccb09_v = *_range_begin;
				_iter_begin_4448180912:;
				{
					_201821_stmts=jule::append(_201821_stmts,jule::Slice<jule::Any>({jule::Any(_1ac7ccb09_v)}));
				}
				_iter_next_4448180912:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ac7ccb09_v = *_range_begin; goto _iter_begin_4448180912; }
				_iter_end_4448180912:;
			}
		}
		_201821_stmts=jule::append(_201821_stmts,_200338_f->_field_scope->_field_stmts);
		_200338_f->_field_scope->_field_stmts=_201821_stmts;
	}
	(*this)._method_check_rets(_200338_f);
}



inline void _1ac7ccb09_Sema::_method_check_fn_ins(jule::Ref<_1ab07a50c_FnIns> _203035_f) {
	if (_203035_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ref<_1acd9639d_SymbolTable> _203517_old = _203035_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_203035_f->_field_decl->_field_sema->_method_set_current_file(_203517_old);
	});
	jule::Ref<_1acd9639d_SymbolTable> _203717_file = _1ac7ccb09_find_file(_203035_f->_field_decl->_field_sema->_field_files,_203035_f->_field_decl->_field_token._field_file);
	if (jule::real(_203717_file)) {
		_203035_f->_field_decl->_field_sema->_method_set_current_file(_203717_file);
	}
	jule::Ref<_1ac77dd1e_ScopeChecker> _204217_sc = _1ac77dd1e_new_scope_checker(_203035_f->_field_decl->_field_sema,_203035_f);
	(*this)._method_check_fn_ins_sc(_203035_f,_204217_sc);
	if ((_203035_f->_field_decl->_field_sema).alloc != (&((*this)))) {
		(*this)._field_errors=jule::append((*this)._field_errors,_203035_f->_field_decl->_field_sema->_field_errors);
	}
}



inline void _1ac7ccb09_Sema::_method_check_type_fn(jule::Ref<_1ab07a50c_Fn> _205037_f) {
	if (_205037_f->_field_cpp_linked) {
		return;
	}
	if (_205037_f->_field_generics.len() > 0LL) {
		return;
	}
	{
		auto _range_expr = _205037_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_FnIns> _1ac7ccb09_ins = *_range_begin;
			_iter_begin_4448203232:;
			{
				this->self->_method_check_fn_ins(_1ac7ccb09_ins);
			}
			_iter_next_4448203232:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_ins = *_range_begin; goto _iter_begin_4448203232; }
			_iter_end_4448203232:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_precheck_type_fn(jule::Ref<_1ab07a50c_Fn> _206540_f) {
	if (_206540_f->_field_cpp_linked) {
		return;
	}
	if (_206540_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_206540_f->_field_instances.len() == 0LL) {
		jule::Ref<_1ab07a50c_FnIns> _207621_ins = _206540_f->_method_instance();
		_206540_f->_field_instances=jule::append(_206540_f->_field_instances,jule::Slice<jule::Ref<_1ab07a50c_FnIns>>({_207621_ins}));
		this->self->_method_reload_fn_ins_types(_207621_ins);
		_207621_ins->_field_reloaded=true;
	}
}



inline jule::Bool _1ac7ccb09_Sema::_method_precheck_fn_types(void) {
	jule::Bool _208439_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1ac7ccb09_decl = *_range_begin;
			_iter_begin_4448217616:;
			{
				this->self->_method_precheck_type_fn(_1ac7ccb09_decl);
			}
			_iter_next_4448217616:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_decl = *_range_begin; goto _iter_begin_4448217616; }
			_iter_end_4448217616:;
		}
	}
	_208439_ok = true;
	return _208439_ok;
}



inline jule::Bool _1ac7ccb09_Sema::_method_check_fn_types(void) {
	jule::Bool _209236_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1ac7ccb09_decl = *_range_begin;
			_iter_begin_4448222608:;
			{
				this->self->_method_check_type_fn(_1ac7ccb09_decl);
			}
			_iter_next_4448222608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_decl = *_range_begin; goto _iter_begin_4448222608; }
			_iter_end_4448222608:;
		}
	}
	_209236_ok = true;
	return _209236_ok;
}



inline void _1ac7ccb09_Sema::_method_check_package_types(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4448226576:;
			{
				this->self->_method_set_current_file(_1ac7ccb09_f);
				this->self->_method_check_global_types();
			}
			_iter_next_4448226576:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4448226576; }
			_iter_end_4448226576:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4448227504:;
			{
				this->self->_method_set_current_file(_1ac7ccb09_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_4448227504:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4448227504; }
			_iter_end_4448227504:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4448230528:;
			{
				this->self->_method_set_current_file(_1ac7ccb09_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_4448230528:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4448230528; }
			_iter_end_4448230528:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4448233376:;
			{
				this->self->_method_set_current_file(_1ac7ccb09_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_4448233376:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4448233376; }
			_iter_end_4448233376:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_set_file_sema_fields(void) {
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1ac7ccb09_f = *_range_begin;
			_iter_begin_4448239472:;
			{
				_1ac7ccb09_f->_field_sema=this->self;
			}
			_iter_next_4448239472:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_f = *_range_begin; goto _iter_begin_4448239472; }
			_iter_end_4448239472:;
		}
	}
	{
		auto _range_expr = this->self->_field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1ac7ccb09_st = *_range_begin;
			_iter_begin_4448240288:;
			{
				_1ac7ccb09_st->_field_sema=this->self;
			}
			_iter_next_4448240288:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_st = *_range_begin; goto _iter_begin_4448240288; }
			_iter_end_4448240288:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_set_sema_fields(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_file = *_range_begin;
			_iter_begin_4448244608:;
			{
				this->self->_method_set_current_file(_1ac7ccb09_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_4448244608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_file = *_range_begin; goto _iter_begin_4448244608; }
			_iter_end_4448244608:;
		}
	}
}



inline void _1ac7ccb09_Sema::_method_check(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>> _214029_files) {
	this->self->_field_files=_214029_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac7ccb09_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aca3647d_Var::_method_is_initialized(void) {
	return jule::real((*this)._field_value);
}



inline jule::Bool _1aca3647d_Var::_method_is_type_inferred(void) {
	return (!(jule::real((*this)._field_kind))) || (!(jule::real((*this)._field_kind->_field_decl)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1aca3647d_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline void _1acc33119_TypeCompatibilityChecker::_method_push_err(jule::Str _13927_fmt,jule::Slice<jule::Any> _13940_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_13927_fmt,_13940_args);
}



inline jule::Bool _1acc33119_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _14332_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_14332_ok = true;
		return _14332_ok;
	}
	jule::Ref<_1ac276c57_Trait> _14813_trt = (*this)._field_dest->_method_trt();
	jule::Bool _14917_ref = false;
	{
		if (!((jule::real((*this)._field_src->_method_ref())))) { goto _case_end_4448274336; }
		_case_begin_4448274336:;
		{
			_14917_ref=true;
			(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
			if (jule::real((*this)._field_src->_method_strct())) {
				_14332_ok = false;
				return _14332_ok;
			}
			goto _case_begin_4448273840;
		}
		goto _match_end_4448272656;
		_case_end_4448274336:;
		if (!((jule::real((*this)._field_src->_method_strct())))) { goto _case_end_4448273840; }
		_case_begin_4448273840:;
		{
			jule::Ref<_1ab064271_StructIns> _16017_s = (*this)._field_src->_method_strct();
			if ((!(_16017_s->_field_decl->_method_is_implements(_14813_trt)))) {
				_14332_ok = false;
				return _14332_ok;
			}
			if (_1acc33119_trait_has_reference_receiver(_14813_trt) && (!(_14917_ref))) {
				(*this)._method_push_err(jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>({}));
				_14332_ok = false;
				return _14332_ok;
			}
			_14332_ok = true;
			return _14332_ok;
		}
		goto _match_end_4448272656;
		_case_end_4448273840:;
		if (!((jule::real((*this)._field_src->_method_trt())))) { goto _case_end_4448273952; }
		_case_begin_4448273952:;
		{
			_14332_ok = _14813_trt == (*this)._field_src->_method_trt();
			return _14332_ok;
		}
		goto _match_end_4448272656;
		_case_end_4448273952:;
		_case_begin_4448272784:;
		{
			_14332_ok = false;
			return _14332_ok;
		}
		goto _match_end_4448272656;
		_case_end_4448272784:;
		_match_end_4448272656:;
	}
}



inline jule::Bool _1acc33119_TypeCompatibilityChecker::_method_check_ref(void) {
	jule::Bool _18030_ok = jule::Bool();
	if ((*this)._field_dest->_method_to_str() == (*this)._field_src->_method_to_str()) {
		_18030_ok = true;
		return _18030_ok;
	} else if ((!((*this)._field_deref))) {
		_18030_ok = false;
		return _18030_ok;
	} else if ((!(jule::real((*this)._field_src->_method_ref())))) {
		(*this)._field_dest=(*this)._field_dest->_method_ref()->_field_elem;
		_18030_ok = (*this)._method_check();
		return _18030_ok;
	}
	(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	_18030_ok = (*this)._method_check();
	return _18030_ok;
}



inline jule::Bool _1acc33119_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _19430_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_19430_ok = true;
		return _19430_ok;
	}
	jule::Ref<_1ad3e617d_Ptr> _19917_src = (*this)._field_src->_method_ptr();
	if ((!(jule::real(_19917_src)))) {
		_19430_ok = false;
		return _19430_ok;
	}
	jule::Ref<_1ad3e617d_Ptr> _20417_dest = (*this)._field_dest->_method_ptr();
	if (_20417_dest->_method_is_unsafe()) {
		_19430_ok = true;
		return _19430_ok;
	}
	_1acc33119_TypeCompatibilityChecker _21017_sub = _1acc33119_TypeCompatibilityChecker((*this)._field_s,_20417_dest->_field_elem,_19917_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_19430_ok = _21017_sub._method_check();
	return _19430_ok;
}



inline jule::Bool _1acc33119_TypeCompatibilityChecker::_method_check_slc(void) {
	jule::Bool _22130_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_22130_ok = true;
		return _22130_ok;
	}
	jule::Ref<_1ad3e617d_Slc> _22617_src = (*this)._field_src->_method_slc();
	if ((!(jule::real(_22617_src)))) {
		_22130_ok = false;
		return _22130_ok;
	}
	jule::Ref<_1ad3e617d_Slc> _23017_dest = (*this)._field_dest->_method_slc();
	_1acc33119_TypeCompatibilityChecker _23217_sub = _1acc33119_TypeCompatibilityChecker((*this)._field_s,_23017_dest->_field_elem,_22617_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_22130_ok = _23217_sub._method_check();
	return _22130_ok;
}



inline jule::Bool _1acc33119_TypeCompatibilityChecker::_method_check_arr(void) {
	jule::Bool _24330_ok = jule::Bool();
	jule::Ref<_1ad3e617d_Arr> _24417_src = (*this)._field_src->_method_arr();
	if ((!(jule::real(_24417_src)))) {
		_24330_ok = false;
		return _24330_ok;
	}
	jule::Ref<_1ad3e617d_Arr> _24817_dest = (*this)._field_dest->_method_arr();
	if (_24817_dest->_field_n != _24417_src->_field_n) {
		_24330_ok = false;
		return _24330_ok;
	}
	_1acc33119_TypeCompatibilityChecker _25317_sub = _1acc33119_TypeCompatibilityChecker((*this)._field_s,_24817_dest->_field_elem,_24417_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_24330_ok = _25317_sub._method_check();
	return _24330_ok;
}



inline jule::Bool _1acc33119_TypeCompatibilityChecker::_method_check_map(void) {
	jule::Bool _26430_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_26430_ok = true;
		return _26430_ok;
	}
	jule::Ref<_1ad3e617d_Map> _26917_src = (*this)._field_src->_method_map();
	if ((!(jule::real(_26917_src)))) {
		_26430_ok = false;
		return _26430_ok;
	}
	jule::Ref<_1ad3e617d_Map> _27417_dest = (*this)._field_dest->_method_map();
	_1acc33119_TypeCompatibilityChecker _27617_sub = _1acc33119_TypeCompatibilityChecker((*this)._field_s,_27417_dest->_field_key,_26917_src->_field_key,(*this)._field_error_token,jule::Bool(),jule::Bool(),true);
	if ((!(_27617_sub._method_check()))) {
		_26430_ok = false;
		return _26430_ok;
	}
	_27617_sub._field_src=_26917_src->_field_val;
	_27617_sub._field_dest=_27417_dest->_field_val;
	_26430_ok = _27617_sub._method_check();
	return _26430_ok;
}



inline jule::Bool _1acc33119_TypeCompatibilityChecker::_method_check_struct(void) {
	jule::Bool _29233_ok = jule::Bool();
	jule::Ref<_1ab064271_StructIns> _29317_src = (*this)._field_src->_method_strct();
	if ((!(jule::real(_29317_src)))) {
		_29233_ok = false;
		return _29233_ok;
	}
	jule::Ref<_1ab064271_StructIns> _29717_dest = (*this)._field_dest->_method_strct();
	{
		if (!(((_29717_dest->_field_decl).alloc != (_29317_src->_field_decl).alloc))) { goto _case_end_4448346416; }
		_case_begin_4448346416:;
		{
			_29233_ok = false;
			return _29233_ok;
		}
		goto _match_end_4448346272;
		_case_end_4448346416:;
		if (!((_29717_dest->_field_generics.len() == 0LL))) { goto _case_end_4448346528; }
		_case_begin_4448346528:;
		{
			_29233_ok = true;
			return _29233_ok;
		}
		goto _match_end_4448346272;
		_case_end_4448346528:;
		_match_end_4448346272:;
	}
	{
		auto _range_expr = _29717_dest->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acc33119_i = 0;
			jule::Ref<_1ad3e617d_TypeKind> _1acc33119_dg = *_range_begin;
			_iter_begin_4448349792:;
			{
				jule::Ref<_1ad3e617d_TypeKind> _30721_sg = _29317_src->_field_generics[static_cast<jule::Int>(_1acc33119_i)];
				_1acc33119_TypeCompatibilityChecker _30821_sub = _1acc33119_TypeCompatibilityChecker((*this)._field_s,_1acc33119_dg,_30721_sg,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
				if ((!(_30821_sub._method_check()))) {
					_29233_ok = false;
					return _29233_ok;
				}
			}
			_iter_next_4448349792:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acc33119_i; _1acc33119_dg = *_range_begin; goto _iter_begin_4448349792; }
			_iter_end_4448349792:;
		}
	}
	_29233_ok = true;
	return _29233_ok;
}



inline jule::Bool _1acc33119_TypeCompatibilityChecker::_method_check_fn(void) {
	jule::Bool _32129_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_32129_ok = true;
		return _32129_ok;
	}
	jule::Ref<_1ab07a50c_FnIns> _32617_src = (*this)._field_src->_method_fnc();
	if ((!(jule::real(_32617_src)))) {
		_32129_ok = false;
		return _32129_ok;
	}
	jule::Ref<_1ab07a50c_FnIns> _33117_dest = (*this)._field_dest->_method_fnc();
	if (jule::real(_32617_src->_field_result) != jule::real(_33117_dest->_field_result)) {
		_32129_ok = false;
		return _32129_ok;
	}
	if (_32617_src->_field_params.len() != _33117_dest->_field_params.len()) {
		_32129_ok = false;
		return _32129_ok;
	}
	{
		auto _range_expr = _32617_src->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acc33119_i = 0;
			_iter_begin_4448366864:;
			{
				jule::Ref<_1ab07a50c_ParamIns> _34021_srcp = _32617_src->_field_params[static_cast<jule::Int>(_1acc33119_i)];
				jule::Ref<_1ab07a50c_ParamIns> _34121_destp = _33117_dest->_field_params[static_cast<jule::Int>(_1acc33119_i)];
				if (jule::real(_34021_srcp) != jule::real(_34121_destp)) {
					_32129_ok = false;
					return _32129_ok;
				}
				_1acc33119_TypeCompatibilityChecker _34621_sub = _1acc33119_TypeCompatibilityChecker((*this)._field_s,_34121_destp->_field_kind,_34021_srcp->_field_kind,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
				if ((!(_34621_sub._method_check()))) {
					_32129_ok = false;
					return _32129_ok;
				}
			}
			_iter_next_4448366864:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acc33119_i; goto _iter_begin_4448366864; }
			_iter_end_4448366864:;
		}
	}
	if (jule::real(_32617_src->_field_result)) {
		_1acc33119_TypeCompatibilityChecker _35821_sub = _1acc33119_TypeCompatibilityChecker((*this)._field_s,_33117_dest->_field_result,_32617_src->_field_result,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
		if ((!(_35821_sub._method_check()))) {
			_32129_ok = false;
			return _32129_ok;
		}
	}
	_32129_ok = true;
	return _32129_ok;
}



inline jule::Bool _1acc33119_TypeCompatibilityChecker::_method_check_enum(void) {
	jule::Bool _37231_ok = jule::Bool();
	jule::Ref<_1ac7804a2_Enum> _37313_r = (*this)._field_src->_method_enm();
	if ((!(jule::real(_37313_r)))) {
		_37231_ok = false;
		return _37231_ok;
	}
	_37231_ok = ((*this)._field_dest->_method_enm()).alloc == (_37313_r).alloc;
	return _37231_ok;
}



inline jule::Bool _1acc33119_TypeCompatibilityChecker::_method_check_prim(void) {
	jule::Bool _38031_ok = jule::Bool();
	jule::Ref<_1ad3e617d_Prim> _38113_dest = (*this)._field_dest->_method_prim();
	jule::Ref<_1ad3e617d_Prim> _38217_src = (*this)._field_src->_method_prim();
	if ((!(jule::real(_38217_src)))) {
		_38031_ok = _38113_dest->_method_is_any();
		return _38031_ok;
	}
	if (_38113_dest->_method_is_any()) {
		_38031_ok = (!((*this)._field_ignore_any)) || _38217_src->_method_is_any();
		return _38031_ok;
	}
	_38031_ok = _1ad7937e4_types_are_compatible(_38113_dest->_method_to_str(),_38217_src->_method_to_str());
	return _38031_ok;
}



inline jule::Bool _1acc33119_TypeCompatibilityChecker::_method_check_cpp_linked(void) {
	jule::Bool _39237_ok = jule::Bool();
	_39237_ok = (*this)._field_src->_method_is_cpp_linked() && ((*this)._field_dest->_field_cpp_ident == (*this)._field_src->_field_cpp_ident);
	return _39237_ok;
}



inline jule::Bool _1acc33119_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _39726_ok = jule::Bool();
	if ((!(jule::real((*this)._field_src)))) {
		_39726_ok = false;
		return _39726_ok;
	}
	if ((*this)._field_dest->_field_variadic != (*this)._field_src->_field_variadic) {
		_39726_ok = false;
		return _39726_ok;
	} else if ((*this)._field_dest->_field_variadic) {
		(*this)._field_ignore_any=true;
	}
	if (jule::real((*this)._field_dest->_method_ref())) {
		_39726_ok = (*this)._method_check_ref();
		return _39726_ok;
	}
	if ((!((*this)._field_sub_check)) && jule::real((*this)._field_src->_method_ref())) {
		(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real((*this)._field_dest->_method_prim())))) { goto _case_end_4448410592; }
		_case_begin_4448410592:;
		{
			_39726_ok = (*this)._method_check_prim();
			return _39726_ok;
		}
		goto _match_end_4448409184;
		_case_end_4448410592:;
		if (!(((*this)._field_dest->_method_is_cpp_linked()))) { goto _case_end_4448410160; }
		_case_begin_4448410160:;
		{
			_39726_ok = (*this)._method_check_cpp_linked();
			return _39726_ok;
		}
		goto _match_end_4448409184;
		_case_end_4448410160:;
		if (!((jule::real((*this)._field_dest->_method_trt())))) { goto _case_end_4448410272; }
		_case_begin_4448410272:;
		{
			_39726_ok = (*this)._method_check_trait();
			return _39726_ok;
		}
		goto _match_end_4448409184;
		_case_end_4448410272:;
		if (!((jule::real((*this)._field_dest->_method_ptr())))) { goto _case_end_4448410384; }
		_case_begin_4448410384:;
		{
			_39726_ok = (*this)._method_check_ptr();
			return _39726_ok;
		}
		goto _match_end_4448409184;
		_case_end_4448410384:;
		if (!((jule::real((*this)._field_dest->_method_slc())))) { goto _case_end_4448409488; }
		_case_begin_4448409488:;
		{
			_39726_ok = (*this)._method_check_slc();
			return _39726_ok;
		}
		goto _match_end_4448409184;
		_case_end_4448409488:;
		if (!((jule::real((*this)._field_dest->_method_arr())))) { goto _case_end_4448409600; }
		_case_begin_4448409600:;
		{
			_39726_ok = (*this)._method_check_arr();
			return _39726_ok;
		}
		goto _match_end_4448409184;
		_case_end_4448409600:;
		if (!((jule::real((*this)._field_dest->_method_map())))) { goto _case_end_4448409712; }
		_case_begin_4448409712:;
		{
			_39726_ok = (*this)._method_check_map();
			return _39726_ok;
		}
		goto _match_end_4448409184;
		_case_end_4448409712:;
		if (!((jule::real((*this)._field_dest->_method_enm())))) { goto _case_end_4448410848; }
		_case_begin_4448410848:;
		{
			_39726_ok = (*this)._method_check_enum();
			return _39726_ok;
		}
		goto _match_end_4448409184;
		_case_end_4448410848:;
		if (!((jule::real((*this)._field_dest->_method_strct())))) { goto _case_end_4448410960; }
		_case_begin_4448410960:;
		{
			_39726_ok = (*this)._method_check_struct();
			return _39726_ok;
		}
		goto _match_end_4448409184;
		_case_end_4448410960:;
		if (!((jule::real((*this)._field_dest->_method_fnc())))) { goto _case_end_4448411072; }
		_case_begin_4448411072:;
		{
			_39726_ok = (*this)._method_check_fn();
			return _39726_ok;
		}
		goto _match_end_4448409184;
		_case_end_4448411072:;
		if (!((_1ad3e617d_is_nil_compatible((*this)._field_dest)))) { goto _case_end_4448411184; }
		_case_begin_4448411184:;
		{
			_39726_ok = (*this)._field_src->_method_is_nil();
			return _39726_ok;
		}
		goto _match_end_4448409184;
		_case_end_4448411184:;
		_case_begin_4448405680:;
		{
			_39726_ok = false;
			return _39726_ok;
		}
		goto _match_end_4448409184;
		_case_end_4448405680:;
		_match_end_4448409184:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1acc33119_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_any:" << _Src._field_ignore_any << ", ";
	_Stream << "deref:" << _Src._field_deref << ", ";
	_Stream << "sub_check:" << _Src._field_sub_check;
	_Stream << "}";
	return _Stream;
}



inline void _1acc33119_AssignTypeChecker::_method_push_err(jule::Str _44327_fmt,jule::Slice<jule::Any> _44340_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_44327_fmt,_44340_args);
}



inline jule::Bool _1acc33119_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _44817_valid = true;
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_fnc())))) { goto _case_end_4448436192; }
		_case_begin_4448436192:;
		{
			jule::Ref<_1ab07a50c_FnIns> _45217_f = (*this)._field_d->_field_kind->_method_fnc();
			{
				if (!((_45217_f->_method_is_builtin()))) { goto _case_end_4448440352; }
				_case_begin_4448440352:;
				{
					(*this)._method_push_err(jule::Str("built-in define cannot use as anonymous function", 48),jule::Slice<jule::Any>({}));
					_44817_valid=false;
				}
				goto _match_end_4448440160;
				_case_end_4448440352:;
				if (!((_45217_f->_field_decl->_method_is_method()))) { goto _case_end_4448440480; }
				_case_begin_4448440480:;
				{
					(*this)._method_push_err(jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>({}));
					_44817_valid=false;
				}
				goto _match_end_4448440160;
				_case_end_4448440480:;
				if (!((_45217_f->_field_decl->_field_generics.len() > 0LL))) { goto _case_end_4448440608; }
				_case_begin_4448440608:;
				{
					(*this)._method_push_err(jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
					_44817_valid=false;
				}
				goto _match_end_4448440160;
				_case_end_4448440608:;
				_match_end_4448440160:;
			}
		}
		goto _match_end_4448436016;
		_case_end_4448436192:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_tup())))) { goto _case_end_4448436320; }
		_case_begin_4448436320:;
		{
			(*this)._method_push_err(jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>({}));
			_44817_valid=false;
		}
		goto _match_end_4448436016;
		_case_end_4448436320:;
		_match_end_4448436016:;
	}
	return _44817_valid;
}



inline jule::Bool _1acc33119_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || (!(jule::real((*this)._field_dest->_method_prim())))) || (!(jule::real((*this)._field_d->_field_kind->_method_prim())))) || (!(_1ad70d41d_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _48413_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (!((_1ad70d41d_is_float(_48413_kind)))) { goto _case_end_4448458832; }
		_case_begin_4448458832:;
		{
			if ((!(_1acc33119_float_assignable(_48413_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4448458224;
		_case_end_4448458832:;
		if (!((_1ad70d41d_is_int(_48413_kind)))) { goto _case_end_4448458944; }
		_case_begin_4448458944:;
		{
			if ((!(_1acc33119_int_assignable(_48413_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4448458224;
		_case_end_4448458944:;
		_case_begin_4448458480:;
		{
			return false;
		}
		goto _match_end_4448458224;
		_case_end_4448458480:;
		_match_end_4448458224:;
	}
	return true;
}



inline jule::Bool _1acc33119_AssignTypeChecker::_method_check(void) {
	{
		if (!(((!(jule::real((*this)._field_d)))))) { goto _case_end_4448467632; }
		_case_begin_4448467632:;
		{
			return false;
		}
		goto _match_end_4448463840;
		_case_end_4448467632:;
		if (!(((!((*this)._method_check_validity()))))) { goto _case_end_4448467232; }
		_case_begin_4448467232:;
		{
			return false;
		}
		goto _match_end_4448463840;
		_case_end_4448467232:;
		if (!(((*this)._method_check_const()))) { goto _case_end_4448467344; }
		_case_begin_4448467344:;
		{
			return true;
		}
		goto _match_end_4448463840;
		_case_end_4448467344:;
		_case_begin_4448464032:;
		{
			return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token,(*this)._field_deref);
		}
		goto _match_end_4448463840;
		_case_end_4448464032:;
		_match_end_4448463840:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1acc33119_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "deref:" << _Src._field_deref;
	_Stream << "}";
	return _Stream;
}



inline void _1acc33119_DynamicTypeAnnotation::_method_push_generic(jule::Ref<_1ad3e617d_TypeKind> _53435_k,jule::Int _53449_i) {
	(*this)._field_f->_field_generics[static_cast<jule::Int>(_53449_i)]=_53435_k;
}



inline jule::Bool _1acc33119_DynamicTypeAnnotation::_method_annotate_prim(jule::Ref<_1ad3e617d_TypeKind> _53843_k) {
	jule::Bool _53859_ok = jule::Bool();
	jule::Str _53913_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto _range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acc33119_i = 0;
			jule::Ref<_1aaeea1c4_GenericDecl> _1acc33119_g = *_range_begin;
			_iter_begin_4448487392:;
			{
				if (_53913_kind != _1acc33119_g->_field_ident) {
					goto _iter_next_4448487392;
				}
				jule::Ref<_1ad3e617d_TypeKind> _54517_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_1acc33119_i)];
				{
					if (!(((!(jule::real(_54517_t)))))) { goto _case_end_4448492864; }
					_case_begin_4448492864:;
					{
						(*this)._method_push_generic(_53843_k,_1acc33119_i);
					}
					goto _match_end_4448492656;
					_case_end_4448492864:;
					if (!((_54517_t->_method_to_str() != _53843_k->_method_to_str()))) { goto _case_end_4448492976; }
					_case_begin_4448492976:;
					{
						_53859_ok = false;
						return _53859_ok;
					}
					goto _match_end_4448492656;
					_case_end_4448492976:;
					_match_end_4448492656:;
				}
				(*((*this)._field_k))->_field_kind=_53843_k->_field_kind;
				_53859_ok = true;
				return _53859_ok;
			}
			_iter_next_4448487392:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acc33119_i; _1acc33119_g = *_range_begin; goto _iter_begin_4448487392; }
			_iter_end_4448487392:;
		}
	}
	_53859_ok = false;
	return _53859_ok;
}



inline jule::Bool _1acc33119_DynamicTypeAnnotation::_method_annotate_slc(jule::Ref<_1ad3e617d_TypeKind> _56242_k) {
	jule::Bool _56258_ok = jule::Bool();
	jule::Ref<_1ad3e617d_Slc> _56317_pslc = (*((*this)._field_k))->_method_slc();
	if ((!(jule::real(_56317_pslc)))) {
		_56258_ok = false;
		return _56258_ok;
	}
	jule::Ref<_1ad3e617d_Slc> _56817_slc = _56242_k->_method_slc();
	_1ad3e617d_TypeKind* _56917_kk = (_56317_pslc->_field_elem).alloc;
	(*this)._field_k=(&(_56917_kk));
	_56258_ok = (*this)._method_annotate_kind(_56817_slc->_field_elem);
	return _56258_ok;
}



inline jule::Bool _1acc33119_DynamicTypeAnnotation::_method_check_map_key(_1ad3e617d_TypeKind** _57443_k,jule::Ref<_1ad3e617d_TypeKind> _57462_ck) {
	jule::Bool _57479_ok = jule::Bool();
	_1ad3e617d_TypeKind** _57517_old = (*this)._field_k;
	(*this)._field_k=_57443_k;
	_57479_ok=(*this)._method_annotate_kind(_57462_ck);
	(*this)._field_k=_57517_old;
	_57479_ok = _57479_ok;
	return _57479_ok;
}



inline jule::Bool _1acc33119_DynamicTypeAnnotation::_method_annotate_map(jule::Ref<_1ad3e617d_TypeKind> _58242_k) {
	jule::Bool _58258_ok = jule::Bool();
	jule::Ref<_1ad3e617d_Map> _58317_pmap = (*((*this)._field_k))->_method_map();
	if ((!(jule::real(_58317_pmap)))) {
		_58258_ok = false;
		return _58258_ok;
	}
	jule::Ref<_1ad3e617d_Map> _58817_m = _58242_k->_method_map();
	_1ad3e617d_TypeKind* _59017_key = (_58317_pmap->_field_key).alloc;
	_1ad3e617d_TypeKind* _59117_val = (_58317_pmap->_field_val).alloc;
	_58258_ok = (*this)._method_check_map_key((&(_59017_key)),_58817_m->_field_key) && (*this)._method_check_map_key((&(_59117_val)),_58817_m->_field_val);
	return _58258_ok;
}



inline jule::Bool _1acc33119_DynamicTypeAnnotation::_method_annotate_fn(jule::Ref<_1ad3e617d_TypeKind> _59541_k) {
	jule::Bool _59557_ok = jule::Bool();
	jule::Ref<_1ab07a50c_FnIns> _59617_pf = (*((*this)._field_k))->_method_fnc();
	if ((!(jule::real(_59617_pf)))) {
		_59557_ok = false;
		return _59557_ok;
	}
	jule::Ref<_1ab07a50c_FnIns> _60017_f = _59541_k->_method_fnc();
	{
		if (!((_59617_pf->_field_params.len() != _60017_f->_field_params.len()))) { goto _case_end_4448534096; }
		_case_begin_4448534096:;
		{
			_59557_ok = false;
			return _59557_ok;
		}
		goto _match_end_4448533920;
		_case_end_4448534096:;
		if (!((_59617_pf->_field_decl->_method_is_void() != _60017_f->_field_decl->_method_is_void()))) { goto _case_end_4448534224; }
		_case_begin_4448534224:;
		{
			_59557_ok = false;
			return _59557_ok;
		}
		goto _match_end_4448533920;
		_case_end_4448534224:;
		_match_end_4448533920:;
	}
	_59557_ok=true;
	_1ad3e617d_TypeKind** _61017_old = (*this)._field_k;
	{
		auto _range_expr = _60017_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acc33119_i = 0;
			jule::Ref<_1ab07a50c_ParamIns> _1acc33119_fp = *_range_begin;
			_iter_begin_4448538720:;
			{
				_1ad3e617d_TypeKind* _61221_pfp = (_59617_pf->_field_params[static_cast<jule::Int>(_1acc33119_i)]->_field_kind).alloc;
				(*this)._field_k=(&(_61221_pfp));
				_59557_ok=(*this)._method_annotate_kind(_1acc33119_fp->_field_kind) && _59557_ok;
			}
			_iter_next_4448538720:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acc33119_i; _1acc33119_fp = *_range_begin; goto _iter_begin_4448538720; }
			_iter_end_4448538720:;
		}
	}
	if ((!(_59617_pf->_field_decl->_method_is_void()))) {
		_1ad3e617d_TypeKind* _61821_result = (_59617_pf->_field_result).alloc;
		(*this)._field_k=(&(_61821_result));
		_59557_ok=(*this)._method_annotate_kind(_60017_f->_field_result) && _59557_ok;
	}
	(*this)._field_k=_61017_old;
	_59557_ok = _59557_ok;
	return _59557_ok;
}



inline jule::Bool _1acc33119_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ref<_1ad3e617d_TypeKind> _62742_k) {
	jule::Bool _62758_ok = jule::Bool();
	jule::Ref<_1ad3e617d_Ptr> _62817_pptr = (*((*this)._field_k))->_method_ptr();
	if ((!(jule::real(_62817_pptr)))) {
		_62758_ok = false;
		return _62758_ok;
	}
	jule::Ref<_1ad3e617d_Ptr> _63317_ptr = _62742_k->_method_ptr();
	_1ad3e617d_TypeKind* _63417_cpptr = (_62817_pptr->_field_elem).alloc;
	(*this)._field_k=(&(_63417_cpptr));
	_62758_ok = (*this)._method_annotate_kind(_63317_ptr->_field_elem);
	return _62758_ok;
}



inline jule::Bool _1acc33119_DynamicTypeAnnotation::_method_annotate_ref(jule::Ref<_1ad3e617d_TypeKind> _63942_k) {
	jule::Bool _63958_ok = jule::Bool();
	jule::Ref<_1ad3e617d_Ref> _64017_rref = (*((*this)._field_k))->_method_ref();
	if ((!(jule::real(_64017_rref)))) {
		_63958_ok = false;
		return _63958_ok;
	}
	jule::Ref<_1ad3e617d_Ref> _64517_ref = _63942_k->_method_ref();
	_1ad3e617d_TypeKind* _64617_crref = (_64017_rref->_field_elem).alloc;
	(*this)._field_k=(&(_64617_crref));
	_63958_ok = (*this)._method_annotate_kind(_64517_ref->_field_elem);
	return _63958_ok;
}



inline jule::Bool _1acc33119_DynamicTypeAnnotation::_method_annotate_any(jule::Ref<_1ad3e617d_TypeKind> _65142_k) {
	jule::Bool _65158_ok = jule::Bool();
	jule::Str _65213_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto _range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acc33119_i = 0;
			jule::Ref<_1aaeea1c4_GenericDecl> _1acc33119_g = *_range_begin;
			_iter_begin_4448573152:;
			{
				if (_65213_kind != _1acc33119_g->_field_ident) {
					goto _iter_next_4448573152;
				}
				jule::Ref<_1ad3e617d_TypeKind> _65817_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_1acc33119_i)];
				{
					if (!(((!(jule::real(_65817_t)))))) { goto _case_end_4448578624; }
					_case_begin_4448578624:;
					{
						(*this)._method_push_generic(_65142_k,_1acc33119_i);
					}
					goto _match_end_4448578416;
					_case_end_4448578624:;
					if (!((_65817_t->_method_to_str() != _65142_k->_method_to_str()))) { goto _case_end_4448578736; }
					_case_begin_4448578736:;
					{
						_65158_ok = false;
						return _65158_ok;
					}
					goto _match_end_4448578416;
					_case_end_4448578736:;
					_match_end_4448578416:;
				}
				(*((*this)._field_k))->_field_kind=_65142_k->_field_kind;
				_65158_ok = true;
				return _65158_ok;
			}
			_iter_next_4448573152:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acc33119_i; _1acc33119_g = *_range_begin; goto _iter_begin_4448573152; }
			_iter_end_4448573152:;
		}
	}
	_65158_ok = false;
	return _65158_ok;
}



inline jule::Bool _1acc33119_DynamicTypeAnnotation::_method_annotate_kind(jule::Ref<_1ad3e617d_TypeKind> _67543_k) {
	jule::Bool _67559_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _67559_ok;
	}
	{
		if (!(((*this)._method_annotate_any(_67543_k)))) { goto _case_end_4448588784; }
		_case_begin_4448588784:;
		{
			_67559_ok = true;
			return _67559_ok;
		}
		goto _match_end_4448587184;
		_case_end_4448588784:;
		if (!((jule::real(_67543_k->_method_prim())))) { goto _case_end_4448588896; }
		_case_begin_4448588896:;
		{
			_67559_ok = (*this)._method_annotate_prim(_67543_k);
			return _67559_ok;
		}
		goto _match_end_4448587184;
		_case_end_4448588896:;
		if (!((jule::real(_67543_k->_method_slc())))) { goto _case_end_4448589008; }
		_case_begin_4448589008:;
		{
			_67559_ok = (*this)._method_annotate_slc(_67543_k);
			return _67559_ok;
		}
		goto _match_end_4448587184;
		_case_end_4448589008:;
		if (!((jule::real(_67543_k->_method_map())))) { goto _case_end_4448588192; }
		_case_begin_4448588192:;
		{
			_67559_ok = (*this)._method_annotate_map(_67543_k);
			return _67559_ok;
		}
		goto _match_end_4448587184;
		_case_end_4448588192:;
		if (!((jule::real(_67543_k->_method_fnc())))) { goto _case_end_4448588304; }
		_case_begin_4448588304:;
		{
			_67559_ok = (*this)._method_annotate_fn(_67543_k);
			return _67559_ok;
		}
		goto _match_end_4448587184;
		_case_end_4448588304:;
		if (!((jule::real(_67543_k->_method_ptr())))) { goto _case_end_4448588416; }
		_case_begin_4448588416:;
		{
			_67559_ok = (*this)._method_annotate_ptr(_67543_k);
			return _67559_ok;
		}
		goto _match_end_4448587184;
		_case_end_4448588416:;
		if (!((jule::real(_67543_k->_method_ref())))) { goto _case_end_4448589472; }
		_case_begin_4448589472:;
		{
			_67559_ok = (*this)._method_annotate_ref(_67543_k);
			return _67559_ok;
		}
		goto _match_end_4448587184;
		_case_end_4448589472:;
		_case_begin_4448587600:;
		{
			_67559_ok = false;
			return _67559_ok;
		}
		goto _match_end_4448587184;
		_case_end_4448587600:;
		_match_end_4448587184:;
	}
}



inline jule::Bool _1acc33119_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _69236_ok = jule::Bool();
	_1ad3e617d_TypeKind* _69317_pk = ((*this)._field_p->_field_kind).alloc;
	(*this)._field_k=(&(_69317_pk));
	_69236_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _69236_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1acc33119_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1acc33119_FnCallArgChecker::_method_push_err_token(_1ab0277b7_Token _71033_token,jule::Str _71047_fmt,jule::Slice<jule::Any> _71060_args) {
	(*this)._field_e->_field_s->_method_push_err(_71033_token,_71047_fmt,_71060_args);
}



inline void _1acc33119_FnCallArgChecker::_method_push_err(jule::Str _71427_fmt,jule::Slice<jule::Any> _71440_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_71427_fmt,_71440_args);
}



inline jule::Slice<jule::Ref<_1ab07a50c_ParamIns>> _1acc33119_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && jule::real((*this)._field_f->_field_params[0LL]->_field_decl)) && (*this)._field_f->_field_params[0LL]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(1LL);
	}
	return (*this)._field_f->_field_params;
}



inline jule::Bool _1acc33119_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ref<_1ab07a50c_ParamIns>> _72531_params) {
	jule::Bool _72554_ok = jule::Bool();
	jule::I64 _72617_n = _72531_params.len();
	if ((_72617_n > 0LL) && _72531_params[0LL]->_field_decl->_method_is_self()) {
		(_72617_n)--;
	}
	jule::I64 _73117_diff = _72617_n - (*this)._field_args.len();
	{
		if (!((_73117_diff == 0LL))) { goto _case_end_4448629120; }
		_case_begin_4448629120:;
		{
			_72554_ok = true;
			return _72554_ok;
		}
		goto _match_end_4448628960;
		_case_end_4448629120:;
		if (!(((_72617_n > 0LL) && _72531_params[static_cast<jule::Int>(_72617_n - 1LL)]->_field_decl->_field_variadic))) { goto _case_end_4448629232; }
		_case_begin_4448629232:;
		{
			_72554_ok = true;
			return _72554_ok;
		}
		goto _match_end_4448628960;
		_case_end_4448629232:;
		if (!(((_73117_diff < 0LL) || (_73117_diff > _72531_params.len())))) { goto _case_end_4448629344; }
		_case_begin_4448629344:;
		{
			(*this)._method_push_err(jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
			_72554_ok = false;
			return _72554_ok;
		}
		goto _match_end_4448628960;
		_case_end_4448629344:;
		_match_end_4448628960:;
	}
	jule::Str _74417_idents = jule::Str("", 0);
	_iter_begin_4448632496:;
	if (!(_73117_diff > 0LL)) { goto _iter_end_4448632496; }
	{
		_74417_idents+=jule::Str(", ", 2) + _72531_params[static_cast<jule::Int>(_72617_n - _73117_diff)]->_field_decl->_field_ident;
	}
	_iter_next_4448632496:;
	(_73117_diff)--;
	goto _iter_begin_4448632496;
	_iter_end_4448632496:;
	_74417_idents=_74417_idents.slice(2LL);
	(*this)._method_push_err(jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_74417_idents)}));
	_72554_ok = false;
	return _72554_ok;
}



inline jule::Bool _1acc33119_FnCallArgChecker::_method_check_arg(jule::Ref<_1ab07a50c_ParamIns> _75432_p,jule::Ref<_1acde49c3_Data> _75450_arg,_1ab0277b7_Token _75466_error_token) {
	jule::Bool _75488_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation) {
		_1acc33119_DynamicTypeAnnotation _75621_dta = _1acc33119_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_75432_p,_75450_arg,_75466_error_token,nullptr);
		_75488_ok=_75621_dta._method_annotate();
		if ((!(_75488_ok))) {
			(*this)._method_push_err_token(_75466_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
			_75488_ok = false;
			return _75488_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_75432_p->_field_decl->_field_mutable,_75432_p->_field_decl->_field_reference,_75432_p->_field_kind,_75450_arg,_75466_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_75432_p->_field_kind,_75450_arg,_75466_error_token,false);
	_75488_ok = true;
	return _75488_ok;
}



inline jule::Bool _1acc33119_FnCallArgChecker::_method_push(jule::Ref<_1ab07a50c_ParamIns> _77627_p,jule::Ref<_1aaeea1c4_Expr> _77645_arg) {
	jule::Bool _77659_ok = jule::Bool();
	jule::Ref<_1acde49c3_Data> _77717_d = jule::new_ref<_1acde49c3_Data>();
	if ((!((*this)._field_dynamic_annotation)) && (!(_77627_p->_field_decl->_field_variadic))) {
		jule::Ref<_1ad3e617d_TypeKind> _77921_old = (*this)._field_e->_field_prefix;
		(*this)._field_e->_field_prefix=_77627_p->_field_kind;
		_77717_d=(*this)._field_e->_method_eval_expr_kind(_77645_arg->_field_kind);
		(*this)._field_e->_field_prefix=_77921_old;
	} else {
		jule::Ref<_1ad3e617d_TypeKind> _78421_old = (*this)._field_e->_field_prefix;
		jule::drop((*this)._field_e->_field_prefix);
		_77717_d=(*this)._field_e->_method_eval_expr_kind(_77645_arg->_field_kind);
		(*this)._field_e->_field_prefix=_78421_old;
	}
	if ((!(jule::real(_77717_d)))) {
		_77659_ok = false;
		return _77659_ok;
	}
	(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_77717_d->_field_model}));
	_77659_ok = (*this)._method_check_arg(_77627_p,_77717_d,_77645_arg->_field_token);
	return _77659_ok;
}



inline jule::Bool _1acc33119_FnCallArgChecker::_method_push_variadic(jule::Ref<_1ab07a50c_ParamIns> _79636_p,jule::Int _79654_i) {
	jule::Bool _79664_ok = jule::Bool();
	_79664_ok=true;
	jule::Bool _79817_variadiced = false;
	jule::Bool _79913_more = (_79654_i + 1LL) < (*this)._field_args.len();
	jule::Ref<_1ab0a4954_SliceExprModel> _80017_model = jule::new_struct<_1ab0a4954_SliceExprModel>(new( std::nothrow ) _1ab0a4954_SliceExprModel(_79636_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ref<_1ad3e617d_TypeKind> _80417_old = (*this)._field_e->_field_prefix;
	_iter_begin_4448680992:;
	if (!(_79654_i < (*this)._field_args.len())) { goto _iter_end_4448680992; }
	{
		jule::Ref<_1aaeea1c4_Expr> _80621_arg = (*this)._field_args[static_cast<jule::Int>(_79654_i)];
		{
			auto _match_expr{ _80621_arg->_field_kind };
			if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_VariadicExpr>>())) { goto _case_end_4448687104; }
			_case_begin_4448687104:;
			{
				(*this)._field_e->_field_prefix=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ad3e617d_Slc>(new( std::nothrow ) _1ad3e617d_Slc(_79636_p->_field_kind))));
			}
			goto _match_end_4448684224;
			_case_end_4448687104:;
			_case_begin_4448685296:;
			{
				(*this)._field_e->_field_prefix=_79636_p->_field_kind;
			}
			goto _match_end_4448684224;
			_case_end_4448685296:;
			_match_end_4448684224:;
		}
		jule::Ref<_1acde49c3_Data> _81621_d = (*this)._field_e->_method_eval_expr_kind(_80621_arg->_field_kind);
		if ((!(jule::real(_81621_d)))) {
			_79664_ok=false;
			goto _iter_next_4448680992;
		}
		if (_81621_d->_field_variadiced) {
			_79817_variadiced=true;
			_81621_d->_field_variadiced=false;
			_79636_p->_field_kind->_field_variadic=true;
			_81621_d->_field_kind->_field_variadic=true;
			__JULE_DEFER({
				_81621_d->_field_kind->_field_variadic=false;
				_79636_p->_field_kind->_field_variadic=false;
			});
			{
				auto _match_expr{ _81621_d->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_SliceExprModel>>())) { goto _case_end_4448695584; }
				_case_begin_4448695584:;
				{
					_80017_model=_81621_d->_field_model.operator jule::Ref<_1ab0a4954_SliceExprModel>();
					_80017_model->_field_elem_kind=_79636_p->_field_kind;
				}
				goto _match_end_4448696672;
				_case_end_4448695584:;
				_case_begin_4448696864:;
				{
					jule::drop(_80017_model);
					(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_81621_d->_field_model}));
				}
				goto _match_end_4448696672;
				_case_end_4448696864:;
				_match_end_4448696672:;
			}
			_79664_ok=(*this)._method_check_arg(_79636_p,_81621_d,_80621_arg->_field_token) && _79664_ok;
			goto _iter_next_4448680992;
		}
		_80017_model->_field_elems=jule::append(_80017_model->_field_elems,jule::Slice<jule::Any>({_81621_d->_field_model}));
		_79664_ok=(*this)._method_check_arg(_79636_p,_81621_d,_80621_arg->_field_token) && _79664_ok;
	}
	_iter_next_4448680992:;
	(_79654_i)++;
	goto _iter_begin_4448680992;
	_iter_end_4448680992:;
	(*this)._field_e->_field_prefix=_80417_old;
	if (_79817_variadiced && _79913_more) {
		(*this)._method_push_err(jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>({}));
	}
	if (jule::real(_80017_model)) {
		(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({jule::Any(_80017_model)}));
	}
	_79664_ok = _79664_ok;
	return _79664_ok;
}



inline jule::Bool _1acc33119_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ref<_1ab07a50c_ParamIns>> _86233_params) {
	jule::Bool _86256_ok = jule::Bool();
	_86256_ok=true;
	jule::Int _86417_i = 0LL;
	_julec_label_iter:;
	_iter_begin_4448714688:;
	if (!(_86417_i < _86233_params.len())) { goto _iter_end_4448714688; }
	{
		jule::Ref<_1ab07a50c_ParamIns> _86721_p = _86233_params[static_cast<jule::Int>(_86417_i)];
		{
			if (!((_86721_p->_field_decl->_method_is_self()))) { goto _case_end_4448718320; }
			goto _match_end_4448717360;
			_case_end_4448718320:;
			if (!((_86721_p->_field_decl->_field_variadic))) { goto _case_end_4448718640; }
			_case_begin_4448718640:;
			{
				_86256_ok=(*this)._method_push_variadic(_86721_p,_86417_i) && _86256_ok;
				goto _iter_end_4448714688;
			}
			goto _match_end_4448717360;
			_case_end_4448718640:;
			if (!(((*this)._field_args.len() <= _86417_i))) { goto _case_end_4448718752; }
			_case_begin_4448718752:;
			{
				_86256_ok=false;
				goto _iter_end_4448714688;
			}
			goto _match_end_4448717360;
			_case_end_4448718752:;
			_case_begin_4448717488:;
			{
				_86256_ok=(*this)._method_push(_86721_p,(*this)._field_args[static_cast<jule::Int>(_86417_i)]) && _86256_ok;
			}
			goto _match_end_4448717360;
			_case_end_4448717488:;
			_match_end_4448717360:;
		}
		(_86417_i)++;
	}
	_iter_next_4448714688:;
	goto _iter_begin_4448714688;
	_iter_end_4448714688:;
	_86256_ok = _86256_ok;
	return _86256_ok;
}



inline jule::Bool _1acc33119_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _88950_ok = jule::Bool();
	{
		auto _range_expr = (*this)._field_f->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ad3e617d_TypeKind> _1acc33119_g = *_range_begin;
			_iter_begin_4448726976:;
			{
				if ((!(jule::real(_1acc33119_g)))) {
					(*this)._method_push_err(jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
					_88950_ok = false;
					return _88950_ok;
				}
			}
			_iter_next_4448726976:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acc33119_g = *_range_begin; goto _iter_begin_4448726976; }
			_iter_end_4448726976:;
		}
	}
	_88950_ok = true;
	return _88950_ok;
}



inline jule::Bool _1acc33119_FnCallArgChecker::_method_check(void) {
	jule::Bool _89926_ok = jule::Bool();
	jule::Slice<jule::Ref<_1ab07a50c_ParamIns>> _90017_params = (*this)._method_get_params();
	_89926_ok=(*this)._method_check_counts(_90017_params);
	if ((!(_89926_ok))) {
		_89926_ok = false;
		return _89926_ok;
	}
	_89926_ok=(*this)._method_check_args(_90017_params);
	if (_89926_ok && (*this)._field_dynamic_annotation) {
		_89926_ok=(*this)._method_check_dynamic_type_annotation();
	}
	_89926_ok = _89926_ok;
	return _89926_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1acc33119_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1acc33119_StructLitChecker::_method_push_err(_1ab0277b7_Token _92327_token,jule::Str _92341_fmt,jule::Slice<jule::Any> _92354_args) {
	(*this)._field_e->_method_push_err(_92327_token,_92341_fmt,_92354_args);
}



inline void _1acc33119_StructLitChecker::_method_push_suggestion(jule::Str _92834_fmt,jule::Slice<jule::Any> _92847_args) {
	(*this)._field_e->_method_push_suggestion(_92834_fmt,_92847_args);
}



inline void _1acc33119_StructLitChecker::_method_push_match(jule::Ref<_1ab064271_FieldIns> _93233_f,jule::Ref<_1acde49c3_Data> _93251_d,_1ab0277b7_Token _93261_error_token) {
	(*this)._field_args=jule::append((*this)._field_args,jule::Slice<jule::Ref<_1ab0a4954_StructArgExprModel>>({jule::new_struct<_1ab0a4954_StructArgExprModel>(new( std::nothrow ) _1ab0a4954_StructArgExprModel(_93233_f,_93251_d->_field_model))}));
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_93233_f->_field_decl->_field_mutable,false,_93233_f->_field_kind,_93251_d,_93261_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_93233_f->_field_kind,_93251_d,_93261_error_token,false);
}



inline void _1acc33119_StructLitChecker::_method_check_pair(jule::Ref<_1aaeea1c4_FieldExprPair> _94333_pair,jule::Slice<jule::Any> _94359_exprs) {
	jule::Ref<_1ab064271_FieldIns> _94517_f = (*this)._field_s->_method_find_field(_94333_pair->_field_field._field_kind);
	if ((!(jule::real(_94517_f)))) {
		(*this)._method_push_err(_94333_pair->_field_field,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_94333_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_94517_f->_field_decl->_field_public,_94517_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_94333_pair->_field_field,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_94333_pair->_field_field._field_kind)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
	}
	_julec_label_dup_lookup:;
	{
		auto _range_expr = _94359_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1acc33119_expr = *_range_begin;
			_iter_begin_4448775152:;
			{
				{
					auto _match_expr{ _1acc33119_expr };
					if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_FieldExprPair>>())) { goto _case_end_4448776880; }
					_case_begin_4448776880:;
					{
						jule::Ref<_1aaeea1c4_FieldExprPair> _96125_dpair = _1acc33119_expr.operator jule::Ref<_1aaeea1c4_FieldExprPair>();
						{
							if (!((_94333_pair == _96125_dpair))) { goto _case_end_4448780000; }
							_case_begin_4448780000:;
							{
								goto _iter_end_4448775152;
							}
							goto _match_end_4448779824;
							_case_end_4448780000:;
							if (!((_94333_pair->_field_field._field_kind == _96125_dpair->_field_field._field_kind))) { goto _case_end_4448780128; }
							_case_begin_4448780128:;
							{
								(*this)._method_push_err(_94333_pair->_field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_94333_pair->_field_field._field_kind)}));
								goto _iter_end_4448775152;
							}
							goto _match_end_4448779824;
							_case_end_4448780128:;
							_match_end_4448779824:;
						}
					}
					goto _match_end_4448775728;
					_case_end_4448776880:;
					_match_end_4448775728:;
				}
			}
			_iter_next_4448775152:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acc33119_expr = *_range_begin; goto _iter_begin_4448775152; }
			_iter_end_4448775152:;
		}
	}
	jule::Ref<_1ad3e617d_TypeKind> _97317_prefix = (*this)._field_e->_field_prefix;
	__JULE_DEFER({
		(*this)._field_e->_field_prefix=_97317_prefix;
	});
	(*this)._field_e->_field_prefix=_94517_f->_field_kind;
	jule::Ref<_1acde49c3_Data> _97717_d = (*this)._field_e->_method_eval_expr_kind(_94333_pair->_field_expr);
	if ((!(jule::real(_97717_d)))) {
		return;
	}
	(*this)._method_push_match(_94517_f,_97717_d,_94333_pair->_field_field);
}



inline jule::Bool _1acc33119_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any> _98434_exprs) {
	jule::Bool _98517_ok = true;
	{
		auto _range_expr = _98434_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acc33119_i = 0;
			jule::Any _1acc33119_expr = *_range_begin;
			_iter_begin_4448794144:;
			{
				{
					auto _match_expr{ _1acc33119_expr };
					if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_KeyValPair>>())) { goto _case_end_4448796544; }
					_case_begin_4448796544:;
					{
						jule::Ref<_1aaeea1c4_KeyValPair> _98925_pair = _1acc33119_expr.operator jule::Ref<_1aaeea1c4_KeyValPair>();
						{
							auto _match_expr{ _98925_pair->_field_key };
							if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_IdentExpr>>())) { goto _case_end_4448800144; }
							goto _match_end_4448799136;
							_case_end_4448800144:;
							_case_begin_4448799840:;
							{
								(*this)._method_push_err(_98925_pair->_field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
								_98517_ok=false;
								goto _iter_next_4448794144;
							}
							goto _match_end_4448799136;
							_case_end_4448799840:;
							_match_end_4448799136:;
						}
						_98434_exprs[static_cast<jule::Int>(_1acc33119_i)]=jule::Any(jule::new_struct<_1aaeea1c4_FieldExprPair>(new( std::nothrow ) _1aaeea1c4_FieldExprPair(_98925_pair->_field_key.operator jule::Ref<_1aaeea1c4_IdentExpr>()->_field_token,_98925_pair->_field_val)));
					}
					goto _match_end_4448795984;
					_case_end_4448796544:;
					_match_end_4448795984:;
				}
			}
			_iter_next_4448794144:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acc33119_i; _1acc33119_expr = *_range_begin; goto _iter_begin_4448794144; }
			_iter_end_4448794144:;
		}
	}
	return _98517_ok;
}



inline void _1acc33119_StructLitChecker::_method_check(jule::Slice<jule::Any> _101028_exprs) {
	if (_101028_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_101028_exprs)))) {
		return;
	}
	jule::Bool _101917_paired = false;
	{
		auto _range_expr = _101028_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acc33119_i = 0;
			jule::Any _1acc33119_expr = *_range_begin;
			_iter_begin_4448809952:;
			{
				{
					auto _match_expr{ _1acc33119_expr };
					if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_FieldExprPair>>())) { goto _case_end_4448813952; }
					_case_begin_4448813952:;
					{
						jule::Ref<_1aaeea1c4_FieldExprPair> _102325_pair = _1acc33119_expr.operator jule::Ref<_1aaeea1c4_FieldExprPair>();
						if ((_1acc33119_i > 0LL) && (!(_101917_paired))) {
							(*this)._method_push_err(_102325_pair->_field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						}
						_101917_paired=true;
						(*this)._method_check_pair(_102325_pair,_101028_exprs);
					}
					goto _match_end_4448813280;
					_case_end_4448813952:;
					if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_Expr>>())) { goto _case_end_4448814064; }
					_case_begin_4448814064:;
					{
						jule::Ref<_1aaeea1c4_Expr> _103125_e = _1acc33119_expr.operator jule::Ref<_1aaeea1c4_Expr>();
						if (_101917_paired) {
							(*this)._method_push_err(_103125_e->_field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>({}));
						}
						if (_1acc33119_i >= (*this)._field_s->_field_fields.len()) {
							(*this)._method_push_err(_103125_e->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_4448809952;
						}
						jule::Ref<_1ab064271_FieldIns> _104025_field = (*this)._field_s->_field_fields[static_cast<jule::Int>(_1acc33119_i)];
						jule::Ref<_1ad3e617d_TypeKind> _104225_prefix = (*this)._field_e->_field_prefix;
						__JULE_DEFER({
							(*this)._field_e->_field_prefix=_104225_prefix;
						});
						(*this)._field_e->_field_prefix=_104025_field->_field_kind;
						jule::Ref<_1acde49c3_Data> _104625_d = (*this)._field_e->_method_eval_expr_kind(_103125_e->_field_kind);
						if ((!(jule::real(_104625_d)))) {
							goto _iter_next_4448809952;
						}
						(*this)._method_push_match(_104025_field,_104625_d,_103125_e->_field_token);
					}
					goto _match_end_4448813280;
					_case_end_4448814064:;
					_match_end_4448813280:;
				}
			}
			_iter_next_4448809952:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acc33119_i; _1acc33119_expr = *_range_begin; goto _iter_begin_4448809952; }
			_iter_end_4448809952:;
		}
	}
	if ((!(_101917_paired))) {
		jule::I64 _105717_n = (*this)._field_s->_field_fields.len();
		jule::I64 _105821_diff = _105717_n - _101028_exprs.len();
		{
			if (!((_105821_diff <= 0LL))) { goto _case_end_4448838160; }
			_case_begin_4448838160:;
			{
				return;
			}
			goto _match_end_4448837920;
			_case_end_4448838160:;
			_match_end_4448837920:;
		}
		jule::Str _106421_idents = jule::Str("", 0);
		_iter_begin_4448838864:;
		if (!(_105821_diff > 0LL)) { goto _iter_end_4448838864; }
		{
			_106421_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[static_cast<jule::Int>(_105717_n - _105821_diff)]->_field_decl->_field_ident;
		}
		_iter_next_4448838864:;
		(_105821_diff)--;
		goto _iter_begin_4448838864;
		_iter_end_4448838864:;
		_106421_idents=_106421_idents.slice(2LL);
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_106421_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1acc33119_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1aca3647d_Var> _1acc33119_RangeChecker::_method_build_var(jule::Ref<_1aaeea1c4_VarDecl> _108328_decl) {
	jule::Ref<_1aca3647d_Var> _108417_v = _1ac699a1a_build_var(_108328_decl);
	return _108417_v;
}



inline void _1acc33119_RangeChecker::_method_set_size_key(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _1ab0277b7_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("int", 3))))));
}



inline void _1acc33119_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1ab0277b7_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1ad3e617d_Slc> _110717_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),_110717_slc->_field_elem));
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,(*this)._field_d,(*this)._field_rang->_field_in_token);
}



inline void _1acc33119_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1ab0277b7_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1ad3e617d_Arr> _112417_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),_112417_arr->_field_elem));
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,(*this)._field_d,(*this)._field_rang->_field_in_token);
}



inline void _1acc33119_RangeChecker::_method_check_map_key_a(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _1ab0277b7_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ref<_1ad3e617d_Map> _114017_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),_114017_m->_field_key));
	jule::Ref<_1acde49c3_Data> _114417_d = jule::new_ref<_1acde49c3_Data>((*this)._field_d.get());
	_114417_d->_field_kind=_114017_m->_field_key;
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_a->_field_mutable,(*this)._field_kind->_field_key_a->_field_reference,(*this)._field_kind->_field_key_a->_field_kind->_field_kind,_114417_d,(*this)._field_rang->_field_in_token);
}



inline void _1acc33119_RangeChecker::_method_check_map_key_b(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1ab0277b7_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1ad3e617d_Map> _115917_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),_115917_m->_field_val));
	jule::Ref<_1acde49c3_Data> _116317_d = jule::new_ref<_1acde49c3_Data>((*this)._field_d.get());
	_116317_d->_field_kind=_115917_m->_field_val;
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,_116317_d,(*this)._field_rang->_field_in_token);
}



inline void _1acc33119_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _1acc33119_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1ab0277b7_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _1acc33119_RangeChecker::_method_check(void) {
	if (jule::real((*this)._field_d->_field_kind->_method_ref())) {
		(*this)._field_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_ExplicitDerefExprModel>(new( std::nothrow ) _1ab0a4954_ExplicitDerefExprModel((*this)._field_d->_field_model)));
		(*this)._field_d->_field_kind=(*this)._field_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_slc())))) { goto _case_end_4448928448; }
		_case_begin_4448928448:;
		{
			(*this)._method_check_slice();
			return true;
		}
		goto _match_end_4448927952;
		_case_end_4448928448:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_arr())))) { goto _case_end_4448928576; }
		_case_begin_4448928576:;
		{
			(*this)._method_check_array();
			return true;
		}
		goto _match_end_4448927952;
		_case_end_4448928576:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_map())))) { goto _case_end_4448928704; }
		_case_begin_4448928704:;
		{
			(*this)._method_check_map();
			return true;
		}
		goto _match_end_4448927952;
		_case_end_4448928704:;
		_match_end_4448927952:;
	}
	jule::Ref<_1ad3e617d_Prim> _121413_prim = (*this)._field_d->_field_kind->_method_prim();
	if (jule::real(_121413_prim) && _121413_prim->_method_is_str()) {
		(*this)._method_check_str();
		return true;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>({}));
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1acc33119_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1acc33119_RetTypeChecker::_method_prepare_types(void) {
	(*this)._field_types=_1acc33119_get_fn_result_types((*this)._field_f);
}



inline void _1acc33119_RetTypeChecker::_method_prepare_exprs(jule::Ref<_1aaeea1c4_Expr> _124136_e) {
	if ((!(jule::real(_124136_e)))) {
		return;
	}
	{
		auto _match_expr{ _124136_e->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_TupleExpr>>())) { goto _case_end_4448948080; }
		_case_begin_4448948080:;
		{
			(*this)._field_exprs=_124136_e->_field_kind.operator jule::Ref<_1aaeea1c4_TupleExpr>()->_field_expr;
		}
		goto _match_end_4448946896;
		_case_end_4448948080:;
		_case_begin_4448946288:;
		{
			(*this)._field_exprs=jule::append((*this)._field_exprs,jule::Slice<jule::Ref<_1aaeea1c4_Expr>>({_124136_e}));
		}
		goto _match_end_4448946896;
		_case_end_4448946288:;
		_match_end_4448946896:;
	}
}



inline void _1acc33119_RetTypeChecker::_method_ret_vars(void) {
	if ((*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ref<_1aca3647d_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len())));
	jule::Ref<_1ac77dd1e_ScopeChecker> _126117_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _126317_j = 0LL;
	{
		auto _range_expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acc33119_i = 0;
			_1ab0277b7_Token _1acc33119_ident = *_range_begin;
			_iter_begin_4448959280:;
			{
				if ((!(_1ab0277b7_is_ignore_ident(_1acc33119_ident._field_kind)))) {
					(*this)._field_vars[static_cast<jule::Int>(_1acc33119_i)]=_126117_root_scope->_field_table->_field_vars[static_cast<jule::Int>(_126317_j)];
					(_126317_j)++;
				} else {
					(*this)._field_vars[static_cast<jule::Int>(_1acc33119_i)]=jule::new_struct<_1aca3647d_Var>(new( std::nothrow ) _1aca3647d_Var(jule::Ref<_1ac77dd1e_Scope>(),_1ab0277b7_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),(*this)._field_types[static_cast<jule::Int>(_1acc33119_i)])),jule::Ref<_1acde49c3_Value>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Slice<jule::Ref<_1aaeea1c4_Directive>>(),jule::Slice<jule::Ref<_1aca3647d_Var>>()));
				}
			}
			_iter_next_4448959280:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acc33119_i; _1acc33119_ident = *_range_begin; goto _iter_begin_4448959280; }
			_iter_end_4448959280:;
		}
	}
	if (_126317_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



inline void _1acc33119_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_1acde49c3_Data>> _128717_datas = jule::Slice<jule::Ref<_1acde49c3_Data>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_exprs.len())));
	{
		auto _range_expr = (*this)._field_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acc33119_i = 0;
			jule::Ref<_1aaeea1c4_Expr> _1acc33119_expr = *_range_begin;
			_iter_begin_4448972800:;
			{
				if (_1acc33119_i >= (*this)._field_types.len()) {
					goto _iter_end_4448972800;
				}
				jule::Ref<_1ad3e617d_TypeKind> _129421_t = (*this)._field_types[static_cast<jule::Int>(_1acc33119_i)];
				jule::Ref<_1acde49c3_Data> _129621_d = (*this)._field_sc->_field_s->_method_evalp(_1acc33119_expr,(*this)._field_sc,_129421_t);
				if ((!(jule::real(_129621_d)))) {
					goto _iter_next_4448972800;
				}
				_128717_datas=jule::append(_128717_datas,jule::Slice<jule::Ref<_1acde49c3_Data>>({_129621_d}));
				if ((!(_129621_d->_field_mutable)) && _1ad3e617d_is_mut(_129621_d->_field_kind)) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>({}));
					return;
				}
				_1acc33119_AssignTypeChecker _130821_ac = _1acc33119_AssignTypeChecker((*this)._field_sc->_field_s,_129421_t,_129621_d,(*this)._field_error_token,jule::Bool());
				_130821_ac._method_check();
			}
			_iter_next_4448972800:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acc33119_i; _1acc33119_expr = *_range_begin; goto _iter_begin_4448972800; }
			_iter_end_4448972800:;
		}
	}
	if (_128717_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_1ab0a4954_TupleExprModel>(new( std::nothrow ) _1ab0a4954_TupleExprModel(_128717_datas)));
	} else if (_128717_datas.len() == 1LL) {
		(*this)._field_model=_128717_datas[0LL]->_field_model;
	}
}



inline jule::Bool _1acc33119_RetTypeChecker::_method_check(jule::Ref<_1aaeea1c4_Expr> _132728_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_132728_e);
	(*this)._method_ret_vars();
	jule::I64 _133213_n = (*this)._field_exprs.len();
	if ((_133213_n == 0LL) && (!((*this)._field_f->_field_decl->_method_is_void()))) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>({}));
			return false;
		}
		return true;
	}
	if ((_133213_n > 0LL) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>({}));
		return false;
	}
	if (_133213_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>({}));
	} else if (_133213_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing return expressions for multi return", 43),jule::Slice<jule::Any>({}));
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1acc33119_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1acd9639d_SymbolTable::_method_find_package(jule::Str _2535_ident) {
	{
		auto _range_expr = (*this)._field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1acd9639d_pkg = *_range_begin;
			_iter_begin_4449013904:;
			{
				if (_1acd9639d_pkg->_field_ident == _2535_ident) {
					return _1acd9639d_pkg;
				}
			}
			_iter_next_4449013904:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_pkg = *_range_begin; goto _iter_begin_4449013904; }
			_iter_end_4449013904:;
		}
	}
	return jule::new_ref<_1ac78be4d_ImportInfo>();
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1acd9639d_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)> _3737_selector) {
	if (_3737_selector == nullptr) {
		return jule::new_ref<_1ac78be4d_ImportInfo>();
	}
	{
		auto _range_expr = (*this)._field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1acd9639d_pkg = *_range_begin;
			_iter_begin_4449018960:;
			{
				if (_3737_selector(_1acd9639d_pkg)) {
					return _1acd9639d_pkg;
				}
			}
			_iter_next_4449018960:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_pkg = *_range_begin; goto _iter_begin_4449018960; }
			_iter_end_4449018960:;
		}
	}
	return jule::new_ref<_1ac78be4d_ImportInfo>();
}



inline jule::Ref<_1aca3647d_Var> _1acd9639d_SymbolTable::_method_find_var(jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return (*this)._method___find_var(_5231_ident,_5243_cpp_linked,false);
}



inline jule::Ref<_1ad3e617d_TypeAlias> _1acd9639d_SymbolTable::_method_find_type_alias(jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return (*this)._method___find_type_alias(_5838_ident,_5850_cpp_linked,false);
}



inline jule::Ref<_1ab064271_Struct> _1acd9639d_SymbolTable::_method_find_struct(jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto _range_expr = (*this)._field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1acd9639d_s = *_range_begin;
			_iter_begin_4449029104:;
			{
				if ((_1acd9639d_s->_field_ident == _6434_ident) && (_1acd9639d_s->_field_cpp_linked == _6446_cpp_linked)) {
					return _1acd9639d_s;
				}
			}
			_iter_next_4449029104:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_s = *_range_begin; goto _iter_begin_4449029104; }
			_iter_end_4449029104:;
		}
	}
	return jule::new_ref<_1ab064271_Struct>();
}



inline jule::Ref<_1ab07a50c_Fn> _1acd9639d_SymbolTable::_method_find_fn(jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto _range_expr = (*this)._field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1acd9639d_f = *_range_begin;
			_iter_begin_4449034304:;
			{
				if ((_1acd9639d_f->_field_ident == _7530_ident) && (_1acd9639d_f->_field_cpp_linked == _7542_cpp_linked)) {
					return _1acd9639d_f;
				}
			}
			_iter_next_4449034304:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_f = *_range_begin; goto _iter_begin_4449034304; }
			_iter_end_4449034304:;
		}
	}
	return jule::new_ref<_1ab07a50c_Fn>();
}



inline jule::Ref<_1ac276c57_Trait> _1acd9639d_SymbolTable::_method_find_trait(jule::Str _8633_ident) {
	{
		auto _range_expr = (*this)._field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac276c57_Trait> _1acd9639d_t = *_range_begin;
			_iter_begin_4449038672:;
			{
				if (_1acd9639d_t->_field_ident == _8633_ident) {
					return _1acd9639d_t;
				}
			}
			_iter_next_4449038672:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_t = *_range_begin; goto _iter_begin_4449038672; }
			_iter_end_4449038672:;
		}
	}
	return jule::new_ref<_1ac276c57_Trait>();
}



inline jule::Ref<_1ac7804a2_Enum> _1acd9639d_SymbolTable::_method_find_enum(jule::Str _9732_ident) {
	{
		auto _range_expr = (*this)._field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac7804a2_Enum> _1acd9639d_e = *_range_begin;
			_iter_begin_4449042656:;
			{
				if (_1acd9639d_e->_field_ident == _9732_ident) {
					return _1acd9639d_e;
				}
			}
			_iter_next_4449042656:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_e = *_range_begin; goto _iter_begin_4449042656; }
			_iter_end_4449042656:;
		}
	}
	return jule::new_ref<_1ac7804a2_Enum>();
}



inline jule::Ref<_1aca3647d_Var> _1acd9639d_SymbolTable::_method___find_var(jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = (*this)._field_vars.len() - 1LL;
		_iter_begin_4449048704:;
		if (!(_11021_i >= 0LL)) { goto _iter_end_4449048704; }
		{
			jule::Ref<_1aca3647d_Var> _11225_v = (*this)._field_vars[static_cast<jule::Int>(_11021_i)];
			if ((_11225_v->_field_ident == _10829_ident) && (_11225_v->_field_cpp_linked == _10841_cpp_linked)) {
				return _11225_v;
			}
		}
		_iter_next_4449048704:;
		(_11021_i)--;
		goto _iter_begin_4449048704;
		_iter_end_4449048704:;
	} else {
		{
			auto _range_expr = (*this)._field_vars;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1aca3647d_Var> _1acd9639d_v = *_range_begin;
				_iter_begin_4449047568:;
				{
					if ((_1acd9639d_v->_field_ident == _10829_ident) && (_1acd9639d_v->_field_cpp_linked == _10841_cpp_linked)) {
						return _1acd9639d_v;
					}
				}
				_iter_next_4449047568:;
				++_range_begin;
				if (_range_begin != _range_end) { _1acd9639d_v = *_range_begin; goto _iter_begin_4449047568; }
				_iter_end_4449047568:;
			}
		}
	}
	return jule::new_ref<_1aca3647d_Var>();
}



inline jule::Ref<_1ad3e617d_TypeAlias> _1acd9639d_SymbolTable::_method___find_type_alias(jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = (*this)._field_type_aliases.len() - 1LL;
		_iter_begin_4449060304:;
		if (!(_12921_i >= 0LL)) { goto _iter_end_4449060304; }
		{
			jule::Ref<_1ad3e617d_TypeAlias> _13125_ta = (*this)._field_type_aliases[static_cast<jule::Int>(_12921_i)];
			if ((_13125_ta->_field_ident == _12736_ident) && (_13125_ta->_field_cpp_linked == _12748_cpp_linked)) {
				return _13125_ta;
			}
		}
		_iter_next_4449060304:;
		(_12921_i)--;
		goto _iter_begin_4449060304;
		_iter_end_4449060304:;
	} else {
		{
			auto _range_expr = (*this)._field_type_aliases;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ad3e617d_TypeAlias> _1acd9639d_ta = *_range_begin;
				_iter_begin_4449059168:;
				{
					if ((_1acd9639d_ta->_field_ident == _12736_ident) && (_1acd9639d_ta->_field_cpp_linked == _12748_cpp_linked)) {
						return _1acd9639d_ta;
					}
				}
				_iter_next_4449059168:;
				++_range_begin;
				if (_range_begin != _range_end) { _1acd9639d_ta = *_range_begin; goto _iter_begin_4449059168; }
				_iter_end_4449059168:;
			}
		}
	}
	return jule::new_ref<_1ad3e617d_TypeAlias>();
}



inline jule::Any _1acd9639d_SymbolTable::_method_def_by_ident(jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto _range_expr = (*this)._field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aca3647d_Var> _1acd9639d_v = *_range_begin;
			_iter_begin_4449070448:;
			{
				if ((_1acd9639d_v->_field_ident == _14831_ident) && (_1acd9639d_v->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1acd9639d_v);
				}
			}
			_iter_next_4449070448:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_v = *_range_begin; goto _iter_begin_4449070448; }
			_iter_end_4449070448:;
		}
	}
	{
		auto _range_expr = (*this)._field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ad3e617d_TypeAlias> _1acd9639d_ta = *_range_begin;
			_iter_begin_4449071984:;
			{
				if ((_1acd9639d_ta->_field_ident == _14831_ident) && (_1acd9639d_ta->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1acd9639d_ta);
				}
			}
			_iter_next_4449071984:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_ta = *_range_begin; goto _iter_begin_4449071984; }
			_iter_end_4449071984:;
		}
	}
	{
		auto _range_expr = (*this)._field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1acd9639d_s = *_range_begin;
			_iter_begin_4449071456:;
			{
				if ((_1acd9639d_s->_field_ident == _14831_ident) && (_1acd9639d_s->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1acd9639d_s);
				}
			}
			_iter_next_4449071456:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_s = *_range_begin; goto _iter_begin_4449071456; }
			_iter_end_4449071456:;
		}
	}
	{
		auto _range_expr = (*this)._field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1acd9639d_f = *_range_begin;
			_iter_begin_4449079984:;
			{
				if ((_1acd9639d_f->_field_ident == _14831_ident) && (_1acd9639d_f->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1acd9639d_f);
				}
			}
			_iter_next_4449079984:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_f = *_range_begin; goto _iter_begin_4449079984; }
			_iter_end_4449079984:;
		}
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto _range_expr = (*this)._field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac276c57_Trait> _1acd9639d_t = *_range_begin;
			_iter_begin_4449083056:;
			{
				if (_1acd9639d_t->_field_ident == _14831_ident) {
					return jule::Any(_1acd9639d_t);
				}
			}
			_iter_next_4449083056:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_t = *_range_begin; goto _iter_begin_4449083056; }
			_iter_end_4449083056:;
		}
	}
	{
		auto _range_expr = (*this)._field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac7804a2_Enum> _1acd9639d_e = *_range_begin;
			_iter_begin_4449084288:;
			{
				if (_1acd9639d_e->_field_ident == _14831_ident) {
					return jule::Any(_1acd9639d_e);
				}
			}
			_iter_next_4449084288:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_e = *_range_begin; goto _iter_begin_4449084288; }
			_iter_end_4449084288:;
		}
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1acd9639d_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto _range_expr = (*this)._field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aca3647d_Var> _1acd9639d_v = *_range_begin;
			_iter_begin_4449090864:;
			{
				if (((((jule::Uintptr)((_1acd9639d_v).alloc)) != _19534_itself) && (_1acd9639d_v->_field_ident == _19551_ident)) && (_1acd9639d_v->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4449090864:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_v = *_range_begin; goto _iter_begin_4449090864; }
			_iter_end_4449090864:;
		}
	}
	{
		auto _range_expr = (*this)._field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ad3e617d_TypeAlias> _1acd9639d_ta = *_range_begin;
			_iter_begin_4449093584:;
			{
				if (((((jule::Uintptr)((_1acd9639d_ta).alloc)) != _19534_itself) && (_1acd9639d_ta->_field_ident == _19551_ident)) && (_1acd9639d_ta->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4449093584:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_ta = *_range_begin; goto _iter_begin_4449093584; }
			_iter_end_4449093584:;
		}
	}
	{
		auto _range_expr = (*this)._field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1acd9639d_s = *_range_begin;
			_iter_begin_4449091888:;
			{
				if (((((jule::Uintptr)((_1acd9639d_s).alloc)) != _19534_itself) && (_1acd9639d_s->_field_ident == _19551_ident)) && (_1acd9639d_s->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4449091888:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_s = *_range_begin; goto _iter_begin_4449091888; }
			_iter_end_4449091888:;
		}
	}
	{
		auto _range_expr = (*this)._field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1acd9639d_f = *_range_begin;
			_iter_begin_4449100880:;
			{
				if (((((jule::Uintptr)((_1acd9639d_f).alloc)) != _19534_itself) && (_1acd9639d_f->_field_ident == _19551_ident)) && (_1acd9639d_f->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4449100880:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_f = *_range_begin; goto _iter_begin_4449100880; }
			_iter_end_4449100880:;
		}
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto _range_expr = (*this)._field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac276c57_Trait> _1acd9639d_t = *_range_begin;
			_iter_begin_4449102912:;
			{
				if ((((jule::Uintptr)((_1acd9639d_t).alloc)) != _19534_itself) && (_1acd9639d_t->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4449102912:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_t = *_range_begin; goto _iter_begin_4449102912; }
			_iter_end_4449102912:;
		}
	}
	{
		auto _range_expr = (*this)._field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac7804a2_Enum> _1acd9639d_e = *_range_begin;
			_iter_begin_4449125104:;
			{
				if ((((jule::Uintptr)((_1acd9639d_e).alloc)) != _19534_itself) && (_1acd9639d_e->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4449125104:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acd9639d_e = *_range_begin; goto _iter_begin_4449125104; }
			_iter_end_4449125104:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1acd9639d_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acde49c3_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



inline jule::Bool _1acde49c3_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_is_void();
}



inline jule::Bool _1acde49c3_Data::_method_is_const(void) {
	return jule::real((*this)._field_constant);
}







std::ostream &operator<<(std::ostream &_Stream, const _1acde49c3_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "variadiced:" << _Src._field_variadiced << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1acde49c3_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1acde49c3_Eval::_method_push_err(_1ab0277b7_Token _25127_token,jule::Str _25141_fmt,jule::Slice<jule::Any> _25154_args) {
	(*this)._field_s->_method_push_err(_25127_token,_25141_fmt,_25154_args);
}



inline void _1acde49c3_Eval::_method_push_suggestion(jule::Str _25634_fmt,jule::Slice<jule::Any> _25647_args) {
	(*this)._field_s->_method_push_suggestion(_25634_fmt,_25647_args);
}



inline jule::Bool _1acde49c3_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _1acde49c3_Eval::_method_is_global(void) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ac7ccb09_Sema>>())) { goto _case_end_4449144480; }
		_case_begin_4449144480:;
		{
			return true;
		}
		goto _match_end_4449143536;
		_case_end_4449144480:;
		_case_begin_4449144176:;
		{
			return false;
		}
		goto _match_end_4449143536;
		_case_end_4449144176:;
		_match_end_4449143536:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_lit_nil(void) {
	jule::Ref<_1ad6d5cec_Const> _27517_constant = _1ad6d5cec_Const::_static_method_new_nil();
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),nullptr)),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_27517_constant),false,_27517_constant));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_lit_str(jule::Ref<_1aaeea1c4_LitExpr> _28622_lt) {
	jule::Str _28717_s = _28622_lt->_field_value.slice(1LL,static_cast<jule::Int>(_28622_lt->_field_value.len() - 1LL));
	if (_1ab0277b7_is_raw_str(_28622_lt->_field_value)) {
		_28717_s=_1ad903767_to_raw_str(static_cast<jule::Slice<jule::U8>>(_28717_s));
	} else {
		_28717_s=_1ad903767_to_str(static_cast<jule::Slice<jule::U8>>(_28717_s));
	}
	jule::Ref<_1ad6d5cec_Const> _29317_constant = _1ad6d5cec_Const::_static_method_new_str(_28717_s);
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("str", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_29317_constant),false,_29317_constant));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_lit_bool(jule::Ref<_1aaeea1c4_LitExpr> _30723_lit) {
	jule::Ref<_1ad6d5cec_Const> _30817_constant = _1ad6d5cec_Const::_static_method_new_bool(_30723_lit->_field_value == jule::Str("true", 4));
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_30817_constant),false,_30817_constant));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_lit_rune(jule::Ref<_1aaeea1c4_LitExpr> _32123_l) {
	
	
	jule::Str _32513_lt = _32123_l->_field_value.slice(1LL,static_cast<jule::Int>(_32123_l->_field_value.len() - 1LL));
	jule::I32 _32613_r = _1ad903767_to_rune(static_cast<jule::Slice<jule::U8>>(_32513_lt));
	jule::Ref<_1acde49c3_Data> _32717_data = jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::Ref<_1ad3e617d_TypeKind>(),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,_1ad6d5cec_Const::_static_method_new_i64(static_cast<jule::I64>(_32613_r))));
	jule::Bool _33417_is_byte;
	std::tie(std::ignore,_33417_is_byte) = _1ad903767_is_byte_lit(_32123_l->_field_value);
	if (_33417_is_byte) {
		_32717_data->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("u8", 2))));
	} else {
		_32717_data->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i32", 3))));
	}
	_32717_data->_field_model=jule::Any(jule::new_struct<_1ab0a4954_RuneExprModel>(new( std::nothrow ) _1ab0a4954_RuneExprModel(_32613_r)));
	_32717_data->_field_is_rune=true;
	return _32717_data;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_lit_float(jule::Ref<_1aaeea1c4_LitExpr> _35024_l) {
	
	jule::F64 _35314_f;
	std::tie(_35314_f,std::ignore) = _1a8977813_parse_float(_35024_l->_field_value,64LL);
	jule::Ref<_1ad6d5cec_Const> _35417_constant = _1ad6d5cec_Const::_static_method_new_f64(_35314_f);
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_35417_constant),false,_35417_constant));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_lit_int(jule::Ref<_1aaeea1c4_LitExpr> _36826_l) {
	
	jule::Str _37117_lit = _36826_l->_field_value;
	jule::Int _37217_base = 0LL;
	{
		if (!((_37117_lit.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4449198016; }
		_case_begin_4449198016:;
		{
			_37117_lit=_37117_lit.slice(2LL);
			_37217_base=16LL;
		}
		goto _match_end_4449196368;
		_case_end_4449198016:;
		if (!((_37117_lit.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4449197664; }
		_case_begin_4449197664:;
		{
			_37117_lit=_37117_lit.slice(2LL);
			_37217_base=2LL;
		}
		goto _match_end_4449196368;
		_case_end_4449197664:;
		if (!((_37117_lit.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4449197776; }
		_case_begin_4449197776:;
		{
			_37117_lit=_37117_lit.slice(2LL);
			_37217_base=8LL;
		}
		goto _match_end_4449196368;
		_case_end_4449197776:;
		if (!(((_37117_lit[0LL] == '0') && (_37117_lit.len() > 1LL)))) { goto _case_end_4449196784; }
		_case_begin_4449196784:;
		{
			_37117_lit=_37117_lit.slice(1LL);
			_37217_base=8LL;
		}
		goto _match_end_4449196368;
		_case_end_4449196784:;
		_case_begin_4449196480:;
		{
			_37217_base=10LL;
		}
		goto _match_end_4449196368;
		_case_end_4449196480:;
		_match_end_4449196368:;
	}
	jule::Ref<_1acde49c3_Data> _39517_d = jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::Ref<_1ad3e617d_TypeKind>(),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1ad6d5cec_Const>()));
	jule::Any _40117_value = jule::Any(nullptr);
	jule::I64 _40214_sig;
	jule::Int _40219_err;
	std::tie(_40214_sig,_40219_err) = _1a8943c85_parse_int(_37117_lit,_37217_base,64LL);
	if (_40219_err == 0LLU) {
		_40117_value=jule::Any(_40214_sig);
		_39517_d->_field_constant=_1ad6d5cec_Const::_static_method_new_i64(_40214_sig);
	} else {
		jule::U64 _40718_unsig;
		jule::Int _40725_err;
		std::tie(_40718_unsig,_40725_err) = _1a8943c85_parse_uint(_37117_lit,_37217_base,64LL);
		if (_40725_err != 0LLU) {
			(*this)._method_push_err(_36826_l->_field_token,jule::Str("arithmetic value overflow", 25),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>({}));
		}
		_39517_d->_field_constant=_1ad6d5cec_Const::_static_method_new_u64(_40718_unsig);
		_40117_value=jule::Any(_40718_unsig);
	}
	_39517_d->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(_1acde49c3_kind_by_bitsize(_40117_value))));
	_1acde49c3_normalize_bitsize(_39517_d);
	_39517_d->_field_model=jule::Any(_39517_d->_field_constant);
	return _39517_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_lit_num(jule::Ref<_1aaeea1c4_LitExpr> _42626_l) {
	{
		if (!((_1ab0277b7_is_float(_42626_l->_field_value)))) { goto _case_end_4449225888; }
		_case_begin_4449225888:;
		{
			return (*this)._method_lit_float(_42626_l);
		}
		goto _match_end_4449224256;
		_case_end_4449225888:;
		_case_begin_4449224432:;
		{
			return (*this)._method_lit_int(_42626_l);
		}
		goto _match_end_4449224256;
		_case_end_4449224432:;
		_match_end_4449224256:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_lit(jule::Ref<_1aaeea1c4_LitExpr> _43327_lit) {
	{
		if (!((_43327_lit->_method_is_nil()))) { goto _case_end_4449232688; }
		_case_begin_4449232688:;
		{
			return (*this)._method_lit_nil();
		}
		goto _match_end_4449230064;
		_case_end_4449232688:;
		if (!((_1ab0277b7_is_str(_43327_lit->_field_value)))) { goto _case_end_4449231696; }
		_case_begin_4449231696:;
		{
			return (*this)._method_lit_str(_43327_lit);
		}
		goto _match_end_4449230064;
		_case_end_4449231696:;
		if (!((_1ab0277b7_is_bool(_43327_lit->_field_value)))) { goto _case_end_4449231904; }
		_case_begin_4449231904:;
		{
			return (*this)._method_lit_bool(_43327_lit);
		}
		goto _match_end_4449230064;
		_case_end_4449231904:;
		if (!((_1ab0277b7_is_rune(_43327_lit->_field_value)))) { goto _case_end_4449232352; }
		_case_begin_4449232352:;
		{
			return (*this)._method_lit_rune(_43327_lit);
		}
		goto _match_end_4449230064;
		_case_end_4449232352:;
		if (!((_1ab0277b7_is_num(_43327_lit->_field_value)))) { goto _case_end_4449232464; }
		_case_begin_4449232464:;
		{
			return (*this)._method_lit_num(_43327_lit);
		}
		goto _match_end_4449230064;
		_case_end_4449232464:;
		_case_begin_4449230240:;
		{
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4449230064;
		_case_end_4449230240:;
		_match_end_4449230064:;
	}
}



inline jule::Any _1acde49c3_Eval::_method_find_builtins(jule::Str _44432_ident) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ac78be4d_ImportInfo>>())) { goto _case_end_4449241552; }
		_case_begin_4449241552:;
		{
			jule::Any _44721_def = _1acde49c3_find_builtins_import(_44432_ident,(*this)._field_lookup.operator jule::Ref<_1ac78be4d_ImportInfo>());
			if (_44721_def != nullptr) {
				return _44721_def;
			}
		}
		goto _match_end_4449240880;
		_case_end_4449241552:;
		if (!(_match_expr.type_is<jule::Ref<_1ac7ccb09_Sema>>())) { goto _case_end_4449241680; }
		_case_begin_4449241680:;
		{
			jule::Any _45321_def = _1acde49c3_find_builtins_sema(_44432_ident,(*this)._field_lookup.operator jule::Ref<_1ac7ccb09_Sema>());
			if (_45321_def != nullptr) {
				return _45321_def;
			}
		}
		goto _match_end_4449240880;
		_case_end_4449241680:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_ScopeChecker>>())) { goto _case_end_4449241808; }
		_case_begin_4449241808:;
		{
			jule::Any _45921_def = _1acde49c3_find_builtins_sema(_44432_ident,(*this)._field_lookup.operator jule::Ref<_1ac77dd1e_ScopeChecker>()->_field_s);
			if (_45921_def != nullptr) {
				return _45921_def;
			}
		}
		goto _match_end_4449240880;
		_case_end_4449241808:;
		_match_end_4449240880:;
	}
	return _1ad5a38bd_find_builtin_def(_44432_ident);
}



inline jule::Any _1acde49c3_Eval::_method_get_def(jule::Str _46826_ident,jule::Bool _46838_cpp_linked) {
	if ((!(_46838_cpp_linked))) {
		jule::Ref<_1ac7804a2_Enum> _47021_enm = (*this)._field_lookup.get()._method_find_enum(_46826_ident);
		if (jule::real(_47021_enm)) {
			return jule::Any(_47021_enm);
		}
	}
	jule::Ref<_1aca3647d_Var> _47617_v = (*this)._field_lookup.get()._method_find_var(_46826_ident,_46838_cpp_linked);
	if (jule::real(_47617_v)) {
		return jule::Any(_47617_v);
	}
	jule::Ref<_1ab07a50c_Fn> _48117_f = (*this)._field_lookup.get()._method_find_fn(_46826_ident,_46838_cpp_linked);
	if (jule::real(_48117_f)) {
		return jule::Any(_48117_f);
	}
	jule::Ref<_1ab064271_Struct> _48617_s = (*this)._field_lookup.get()._method_find_struct(_46826_ident,_46838_cpp_linked);
	if (jule::real(_48617_s)) {
		return jule::Any(_48617_s);
	}
	jule::Ref<_1ad3e617d_TypeAlias> _49117_ta = (*this)._field_lookup.get()._method_find_type_alias(_46826_ident,_46838_cpp_linked);
	if (jule::real(_49117_ta)) {
		return jule::Any(_49117_ta);
	}
	return (*this)._method_find_builtins(_46826_ident);
}



inline void _1acde49c3_Eval::_method_push_reference(jule::Ref<_1ac699a1a_ReferenceStack> _49937_references) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_ScopeChecker>>())) { goto _case_end_4449291568; }
		_case_begin_4449291568:;
		{
			jule::Ref<_1ac77dd1e_ScopeChecker> _50221_sc = (*this)._field_lookup.operator jule::Ref<_1ac77dd1e_ScopeChecker>()->_method_get_root();
			if ((!(_49937_references->_method_exist_1(_50221_sc->_field_owner)))) {
				_49937_references->_method_push(jule::Any(_50221_sc->_field_owner));
			}
		}
		goto _match_end_4449276912;
		_case_end_4449291568:;
		_case_begin_4449277536:;
		{
			if (jule::real((*this)._field_owner) && (!(_49937_references->_method_exist_0((*this)._field_owner)))) {
				_49937_references->_method_push(jule::Any((*this)._field_owner));
			}
		}
		goto _match_end_4449276912;
		_case_end_4449277536:;
		_match_end_4449276912:;
	}
}



inline void _1acde49c3_Eval::_method_push_reference_to_fn(jule::Ref<_1ab07a50c_FnIns> _51443_f) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_ScopeChecker>>())) { goto _case_end_4449295120; }
		_case_begin_4449295120:;
		{
			jule::Ref<_1ac77dd1e_ScopeChecker> _51721_sc = (*this)._field_lookup.operator jule::Ref<_1ac77dd1e_ScopeChecker>()->_method_get_root();
			if (_51721_sc->_field_owner->_field_decl->_method_is_init() && (!(_51721_sc->_field_owner->_field_references->_method_exist_1(_51443_f)))) {
				_51721_sc->_field_owner->_field_refers->_method_push(jule::Any(_51443_f));
			}
		}
		goto _match_end_4449300256;
		_case_end_4449295120:;
		_match_end_4449300256:;
	}
	(*this)._method_push_reference(_51443_f->_field_references);
}



inline void _1acde49c3_Eval::_method_push_reference_to_var(jule::Ref<_1aca3647d_Var> _52544_v) {
	if ((!(jule::real(_52544_v->_field_references)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_ScopeChecker>>())) { goto _case_end_4449314624; }
		_case_begin_4449314624:;
		{
			jule::Ref<_1ac77dd1e_ScopeChecker> _53221_sc = (*this)._field_lookup.operator jule::Ref<_1ac77dd1e_ScopeChecker>()->_method_get_root();
			if (_53221_sc->_field_owner->_field_decl->_method_is_init() && (!(_53221_sc->_field_owner->_field_references->_method_exist_0(_52544_v)))) {
				_53221_sc->_field_owner->_field_refers->_method_push(jule::Any(_52544_v));
			}
		}
		goto _match_end_4449314192;
		_case_end_4449314624:;
		_match_end_4449314192:;
	}
	(*this)._method_push_reference(_52544_v->_field_references);
}



inline void _1acde49c3_Eval::_method_push_reference_to_struct(jule::Ref<_1ab064271_StructIns> _54147_s) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_ScopeChecker>>())) { goto _case_end_4449326496; }
		_case_begin_4449326496:;
		{
			jule::Ref<_1ac77dd1e_ScopeChecker> _54421_sc = (*this)._field_lookup.operator jule::Ref<_1ac77dd1e_ScopeChecker>()->_method_get_root();
			if (_54421_sc->_field_owner->_field_decl->_method_is_init() && (!(_54421_sc->_field_owner->_field_references->_method_exist_2(_54147_s)))) {
				_54421_sc->_field_owner->_field_refers->_method_push(jule::Any(_54147_s));
			}
		}
		goto _match_end_4449325840;
		_case_end_4449326496:;
		_match_end_4449325840:;
	}
	(*this)._method_push_reference(_54147_s->_field_references);
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_enum(jule::Ref<_1ac7804a2_Enum> _55228_enm,_1ab0277b7_Token _55240_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_55228_enm->_field_public,_55228_enm->_field_token)))) {
		(*this)._method_push_err(_55240_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_55228_enm->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_55228_enm)),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),true,jule::new_ref<_1ad6d5cec_Const>()));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_struct(jule::Ref<_1ab064271_StructIns> _57034_s,_1ab0277b7_Token _57049_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_57034_s->_field_decl->_field_public,_57034_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_57049_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_57034_s->_field_decl->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_57034_s)),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_57034_s),true,jule::new_ref<_1ad6d5cec_Const>()));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_fn_ins(jule::Ref<_1ab07a50c_FnIns> _58930_f) {
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_58930_f)),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_58930_f),false,jule::new_ref<_1ad6d5cec_Const>()));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_fn(jule::Ref<_1ab07a50c_Fn> _60230_f,_1ab0277b7_Token _60238_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_60230_f->_field_public,_60230_f->_field_token)))) {
		(*this)._method_push_err(_60238_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_60230_f->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Ref<_1ab07a50c_FnIns> _61017_ins = _60230_f->_method_instance();
	(*this)._method_push_reference_to_fn(_61017_ins);
	return (*this)._method_eval_fn_ins(_61017_ins);
}



inline void _1acde49c3_Eval::_method_push_illegal_cycle_error(jule::Ref<_1aca3647d_Var> _61543_v1,jule::Ref<_1aca3647d_Var> _61553_v2,jule::Str& _61568_message) {
	
	jule::Str _61813_refers_to = _1d068165a_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_61543_v1->_field_ident),jule::Any(_61553_v2->_field_ident)}));
	_61568_message=((_1ac699a1a_str_repeat(jule::Str(" ", 1),4LL) + _61813_refers_to) + jule::Str("\n", 1)) + _61568_message;
}



inline jule::Bool _1acde49c3_Eval::_method_check_cross_cycle(jule::Ref<_1aca3647d_Var> _62236_v,jule::Str& _62250_message) {
	{
		auto _range_expr = _62236_v->_field_depends;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aca3647d_Var> _1acde49c3_d = *_range_begin;
			_iter_begin_4449388352:;
			{
				if ((_1acde49c3_d).alloc == ((*this)._field_owner).alloc) {
					(*this)._method_push_illegal_cycle_error(_62236_v,_1acde49c3_d,_62250_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_1acde49c3_d,_62250_message)))) {
					(*this)._method_push_illegal_cycle_error(_62236_v,_1acde49c3_d,_62250_message);
					return false;
				}
			}
			_iter_next_4449388352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde49c3_d = *_range_begin; goto _iter_begin_4449388352; }
			_iter_end_4449388352:;
		}
	}
	return true;
}



inline jule::Bool _1acde49c3_Eval::_method_check_illegal_cycles(jule::Ref<_1aca3647d_Var> _64143_v,_1ab0277b7_Token _64152_decl_token) {
	jule::Bool _64173_ok = jule::Bool();
	if ((!(jule::real((*this)._field_owner)))) {
		_64173_ok = true;
		return _64173_ok;
	}
	if (((*this)._field_owner).alloc == (_64143_v).alloc) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_64173_ok = false;
		return _64173_ok;
	}
	jule::Str _65317_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_64143_v,_65317_message)))) {
		jule::Str _65621_err_msg = _65317_message;
		_65317_message=jule::Str("", 0);
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_64143_v,_65317_message);
		_65621_err_msg=_65621_err_msg + _65317_message;
		(*this)._method_push_err(_64152_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_65621_err_msg)}));
		_64173_ok = false;
		return _64173_ok;
	}
	(*this)._field_owner->_field_depends=jule::append((*this)._field_owner->_field_depends,jule::Slice<jule::Ref<_1aca3647d_Var>>({_64143_v}));
	_64173_ok = true;
	return _64173_ok;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_var(jule::Ref<_1aca3647d_Var> _66831_v,_1ab0277b7_Token _66840_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_66831_v->_field_public,_66831_v->_field_token)))) {
		(*this)._method_push_err(_66840_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_66831_v->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	_66831_v->_field_used=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ac7ccb09_Sema>>())) { goto _case_end_4449419584; }
		_case_begin_4449419584:;
		{
			jule::Bool _68017_ok = (*this)._method_check_illegal_cycles(_66831_v,_66840_error_token);
			if ((!(_68017_ok))) {
				return jule::new_ref<_1acde49c3_Data>();
			}
		}
		goto _match_end_4449416672;
		_case_end_4449419584:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_ScopeChecker>>())) { goto _case_end_4449419696; }
		_case_begin_4449419696:;
		{
			if ((!(_66831_v->_field_reference)) || (*this)._method_is_unsafe()) {
				goto _match_end_4449416672;
			}
			jule::Ref<_1ac77dd1e_ScopeChecker> _69021_s = (*this)._field_lookup.operator jule::Ref<_1ac77dd1e_ScopeChecker>();
			_iter_begin_4449422800:;
			if (!((!(jule::real(_69021_s->_field_owner))) && jule::real(_69021_s->_field_parent))) { goto _iter_end_4449422800; }
			{
				_69021_s=_69021_s->_field_parent;
			}
			_iter_next_4449422800:;
			goto _iter_begin_4449422800;
			_iter_end_4449422800:;
			if ((jule::real(_69021_s->_field_owner) && _69021_s->_field_owner->_field_anon) && ((_66831_v->_field_scope).alloc != (_69021_s->_field_owner->_field_scope).alloc)) {
				(*this)._method_push_err(_66840_error_token,jule::Str("anonymous functions cannot access to reference \"@\" definition of parent scope", 77),jule::Slice<jule::Any>({jule::Any(_66831_v->_field_ident)}));
			}
		}
		goto _match_end_4449416672;
		_case_end_4449419696:;
		_match_end_4449416672:;
	}
	(*this)._method_push_reference_to_var(_66831_v);
	if ((!(_66831_v->_field_cpp_linked)) && ((!(jule::real(_66831_v->_field_value))) || (!(jule::real(_66831_v->_field_value->_field_data))))) {
		if (_66831_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_66831_v,(*this)._field_s);
			if ((!(jule::real(_66831_v->_field_value->_field_data)))) {
				return jule::new_ref<_1acde49c3_Data>();
			}
		}
	}
	if ((!(jule::real(_66831_v->_field_kind))) || (!(jule::real(_66831_v->_field_kind->_field_kind)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Ref<_1acde49c3_Data> _71617_d = jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(_66831_v->_field_kind->_field_kind->_method_clone(),jule::Ref<_1ad3e617d_TypeKind>(),_66831_v->_field_mutable,_66831_v->_field_reference,(!(_66831_v->_field_constant)),jule::Bool(),jule::Bool(),jule::Any(_66831_v),false,jule::Ref<_1ad6d5cec_Const>()));
	if (((!(_66831_v->_field_cpp_linked)) && _66831_v->_method_is_initialized()) && jule::real(_66831_v->_field_value->_field_data)) {
		_71617_d->_field_is_rune=_66831_v->_field_value->_field_data->_field_is_rune;
	}
	if (_66831_v->_field_constant && jule::real(_66831_v->_field_value->_field_data->_field_constant)) {
		_71617_d->_field_constant=jule::new_ref<_1ad6d5cec_Const>(_66831_v->_field_value->_field_data->_field_constant.get());
		_71617_d->_field_model=jule::Any(_71617_d->_field_constant);
	}
	if (jule::real(_71617_d->_field_kind->_method_fnc())) {
		jule::Ref<_1ab07a50c_FnIns> _73521_f = _71617_d->_field_kind->_method_fnc();
		if (jule::real(_73521_f->_field_decl)) {
			_73521_f->_field_decl->_field_ident=_66831_v->_field_ident;
		}
	}
	return _71617_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_type_alias(jule::Ref<_1ad3e617d_TypeAlias> _74638_ta,_1ab0277b7_Token _74654_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_74638_ta->_field_public,_74638_ta->_field_token)))) {
		(*this)._method_push_err(_74654_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_74638_ta->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	_74638_ta->_field_used=true;
	jule::Trait<_1ad3e617d_Kind> _75517_kind = _74638_ta->_field_kind->_field_kind->_field_kind;
	{
		auto _match_expr{ _75517_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ab064271_StructIns>>())) { goto _case_end_4449465248; }
		_case_begin_4449465248:;
		{
			return (*this)._method_eval_struct(_75517_kind.operator jule::Ref<_1ab064271_StructIns>(),_74654_error_token);
		}
		goto _match_end_4449464512;
		_case_end_4449465248:;
		if (!(_match_expr.type_is<jule::Ref<_1ac7804a2_Enum>>())) { goto _case_end_4449465360; }
		_case_begin_4449465360:;
		{
			return (*this)._method_eval_enum(_75517_kind.operator jule::Ref<_1ac7804a2_Enum>(),_74654_error_token);
		}
		goto _match_end_4449464512;
		_case_end_4449465360:;
		_case_begin_4449464896:;
		{
			jule::Ref<_1acde49c3_Data> _76421_d = jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(_74638_ta->_field_kind->_field_kind->_method_clone(),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ref<_1ad6d5cec_Const>()));
			if (_74638_ta->_field_cpp_linked) {
				_76421_d->_field_kind->_field_cpp_ident=_74638_ta->_field_ident;
			}
			_76421_d->_field_model=jule::Any(_76421_d->_field_kind);
			return _76421_d;
		}
		goto _match_end_4449464512;
		_case_end_4449464896:;
		_match_end_4449464512:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_def(jule::Any _77931_def,_1ab0277b7_Token _77941_ident) {
	{
		auto _match_expr{ _77931_def };
		if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4449482016; }
		_case_begin_4449482016:;
		{
			return (*this)._method_eval_var(_77931_def.operator jule::Ref<_1aca3647d_Var>(),_77941_ident);
		}
		goto _match_end_4449477584;
		_case_end_4449482016:;
		if (!(_match_expr.type_is<jule::Ref<_1ac7804a2_Enum>>())) { goto _case_end_4449481232; }
		_case_begin_4449481232:;
		{
			return (*this)._method_eval_enum(_77931_def.operator jule::Ref<_1ac7804a2_Enum>(),_77941_ident);
		}
		goto _match_end_4449477584;
		_case_end_4449481232:;
		if (!(_match_expr.type_is<jule::Ref<_1ab064271_Struct>>())) { goto _case_end_4449481680; }
		_case_begin_4449481680:;
		{
			return (*this)._method_eval_struct(_77931_def.operator jule::Ref<_1ab064271_Struct>()->_method_instance(),_77941_ident);
		}
		goto _match_end_4449477584;
		_case_end_4449481680:;
		if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_Fn>>())) { goto _case_end_4449481792; }
		_case_begin_4449481792:;
		{
			return (*this)._method_eval_fn(_77931_def.operator jule::Ref<_1ab07a50c_Fn>(),_77941_ident);
		}
		goto _match_end_4449477584;
		_case_end_4449481792:;
		if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_FnIns>>())) { goto _case_end_4449480832; }
		_case_begin_4449480832:;
		{
			return (*this)._method_eval_fn_ins(_77931_def.operator jule::Ref<_1ab07a50c_FnIns>());
		}
		goto _match_end_4449477584;
		_case_end_4449480832:;
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_TypeAlias>>())) { goto _case_end_4449480944; }
		_case_begin_4449480944:;
		{
			return (*this)._method_eval_type_alias(_77931_def.operator jule::Ref<_1ad3e617d_TypeAlias>(),_77941_ident);
		}
		goto _match_end_4449477584;
		_case_end_4449480944:;
		_case_begin_4449477984:;
		{
			(*this)._method_push_err(_77941_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_77941_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4449477584;
		_case_end_4449477984:;
		_match_end_4449477584:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_ident(jule::Ref<_1aaeea1c4_IdentExpr> _80529_ident) {
	jule::Any _80617_def = (*this)._method_get_def(_80529_ident->_field_ident,_80529_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_80617_def,_80529_ident->_field_token);
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_unary_minus(jule::Ref<_1acde49c3_Data> _81035_d) {
	jule::Ref<_1ad3e617d_Prim> _81113_t = _81035_d->_field_kind->_method_prim();
	if ((!(jule::real(_81113_t))) || (!(_1ad70d41d_is_num(_81113_t->_method_to_str())))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_81035_d->_method_is_const()) {
		{
			if (!((_81035_d->_field_constant->_method_is_f64()))) { goto _case_end_4449504144; }
			_case_begin_4449504144:;
			{
				_81035_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_81035_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4449503888;
			_case_end_4449504144:;
			if (!((_81035_d->_field_constant->_method_is_i64()))) { goto _case_end_4449504272; }
			_case_begin_4449504272:;
			{
				_81035_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_81035_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4449503888;
			_case_end_4449504272:;
			if (!((_81035_d->_field_constant->_method_is_u64()))) { goto _case_end_4449504400; }
			_case_begin_4449504400:;
			{
				_81035_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_81035_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4449503888;
			_case_end_4449504400:;
			_match_end_4449503888:;
		}
		_1acde49c3_normalize_type(_81035_d);
	}
	_81035_d->_field_lvalue=false;
	_81035_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_UnaryExprModel>(new( std::nothrow ) _1ab0a4954_UnaryExprModel(_81035_d->_field_model,jule::Str("-", 1))));
	return _81035_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_unary_plus(jule::Ref<_1acde49c3_Data> _83334_d) {
	jule::Ref<_1ad3e617d_Prim> _83413_t = _83334_d->_field_kind->_method_prim();
	if ((!(jule::real(_83413_t))) || (!(_1ad70d41d_is_num(_83413_t->_method_to_str())))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_83334_d->_method_is_const()) {
		{
			if (!((_83334_d->_field_constant->_method_is_f64()))) { goto _case_end_4449522176; }
			_case_begin_4449522176:;
			{
				_83334_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83334_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4449521920;
			_case_end_4449522176:;
			if (!((_83334_d->_field_constant->_method_is_i64()))) { goto _case_end_4449522304; }
			_case_begin_4449522304:;
			{
				_83334_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83334_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4449521920;
			_case_end_4449522304:;
			if (!((_83334_d->_field_constant->_method_is_u64()))) { goto _case_end_4449522432; }
			_case_begin_4449522432:;
			{
				_83334_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83334_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4449521920;
			_case_end_4449522432:;
			_match_end_4449521920:;
		}
		_1acde49c3_normalize_type(_83334_d);
	}
	_83334_d->_field_lvalue=false;
	_83334_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_UnaryExprModel>(new( std::nothrow ) _1ab0a4954_UnaryExprModel(_83334_d->_field_model,jule::Str("+", 1))));
	return _83334_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_unary_caret(jule::Ref<_1acde49c3_Data> _85635_d) {
	jule::Ref<_1ad3e617d_Prim> _85713_t = _85635_d->_field_kind->_method_prim();
	if ((!(jule::real(_85713_t))) || (!(_1ad70d41d_is_int(_85713_t->_method_to_str())))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_85635_d->_method_is_const()) {
		{
			if (!((_85635_d->_field_constant->_method_is_i64()))) { goto _case_end_4449540208; }
			_case_begin_4449540208:;
			{
				_85635_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_85635_d->_field_constant->_method_read_i64()))));
			}
			goto _match_end_4449539968;
			_case_end_4449540208:;
			if (!((_85635_d->_field_constant->_method_is_u64()))) { goto _case_end_4449540336; }
			_case_begin_4449540336:;
			{
				_85635_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_85635_d->_field_constant->_method_read_u64()))));
			}
			goto _match_end_4449539968;
			_case_end_4449540336:;
			_match_end_4449539968:;
		}
	}
	_85635_d->_field_lvalue=false;
	_85635_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_UnaryExprModel>(new( std::nothrow ) _1ab0a4954_UnaryExprModel(_85635_d->_field_model,jule::Str("^", 1))));
	return _85635_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_unary_excl(jule::Ref<_1acde49c3_Data> _88034_d) {
	jule::Ref<_1ad3e617d_Prim> _88113_t = _88034_d->_field_kind->_method_prim();
	if ((!(jule::real(_88113_t))) || (!(_88113_t->_method_is_bool()))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_88034_d->_method_is_const()) {
		{
			if (!((_88034_d->_field_constant->_method_is_bool()))) { goto _case_end_4449554416; }
			_case_begin_4449554416:;
			{
				_88034_d->_field_constant->_method_set_bool((!(_88034_d->_field_constant->_method_read_bool())));
			}
			goto _match_end_4449554192;
			_case_end_4449554416:;
			_match_end_4449554192:;
		}
	}
	_88034_d->_field_lvalue=false;
	_88034_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_UnaryExprModel>(new( std::nothrow ) _1ab0a4954_UnaryExprModel(_88034_d->_field_model,jule::Str("!", 1))));
	return _88034_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_unary_star(jule::Ref<_1acde49c3_Data> _90138_d,_1ab0277b7_Token _90148_op) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_90148_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ad3e617d_Ptr> _90617_t = _90138_d->_field_kind->_method_ptr();
	if ((!(jule::real(_90617_t))) || _90617_t->_method_is_unsafe()) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::drop(_90138_d->_field_constant);
	_90138_d->_field_lvalue=true;
	_90138_d->_field_kind=_90617_t->_field_elem;
	_90138_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_UnaryExprModel>(new( std::nothrow ) _1ab0a4954_UnaryExprModel(_90138_d->_field_model,jule::Str("*", 1))));
	return _90138_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_unary_amper(jule::Ref<_1acde49c3_Data> _92035_d) {
	{
		auto _match_expr{ _92035_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_StructLitExprModel>>())) { goto _case_end_4449581728; }
		_case_begin_4449581728:;
		{
			jule::Ref<_1ab0a4954_StructLitExprModel> _92321_lit = _92035_d->_field_model.operator jule::Ref<_1ab0a4954_StructLitExprModel>();
			_92035_d->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ad3e617d_Ref>(new( std::nothrow ) _1ad3e617d_Ref(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_92321_lit->_field_strct))))));
			_92035_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_AllocStructLitExprModel>(new( std::nothrow ) _1ab0a4954_AllocStructLitExprModel(_92321_lit)));
		}
		goto _match_end_4449573120;
		_case_end_4449581728:;
		_case_begin_4449573792:;
		{
			{
				if (!((jule::real(_92035_d->_field_kind->_method_ref())))) { goto _case_end_4449576656; }
				_case_begin_4449576656:;
				{
					_92035_d->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ad3e617d_Ptr>(new( std::nothrow ) _1ad3e617d_Ptr(_92035_d->_field_kind->_method_ref()->_field_elem->_method_clone()))));
					_92035_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_GetRefPtrExprModel>(new( std::nothrow ) _1ab0a4954_GetRefPtrExprModel(_92035_d->_field_model)));
				}
				goto _match_end_4449574992;
				_case_end_4449576656:;
				if (!((_1ad3e617d_can_get_ptr(_92035_d)))) { goto _case_end_4449576192; }
				_case_begin_4449576192:;
				{
					_92035_d->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ad3e617d_Ptr>(new( std::nothrow ) _1ad3e617d_Ptr(_92035_d->_field_kind->_method_clone()))));
					_92035_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_UnaryExprModel>(new( std::nothrow ) _1ab0a4954_UnaryExprModel(_92035_d->_field_model,jule::Str("&", 1))));
				}
				goto _match_end_4449574992;
				_case_end_4449576192:;
				_case_begin_4449575184:;
				{
					jule::drop(_92035_d);
				}
				goto _match_end_4449574992;
				_case_end_4449575184:;
				_match_end_4449574992:;
			}
		}
		goto _match_end_4449573120;
		_case_end_4449573792:;
		_match_end_4449573120:;
	}
	if (jule::real(_92035_d)) {
		jule::drop(_92035_d->_field_constant);
		_92035_d->_field_lvalue=true;
		_92035_d->_field_mutable=true;
	}
	return _92035_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_unary_type_decl(jule::Ref<_1acde49c3_Data> _96743_d,jule::Ref<_1aaeea1c4_UnaryExpr> _96753_u) {
	_1ad3e617d_TypeChecker _96817_tc = _1ad3e617d_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1ad3e617d_Referencer>(),_96753_u->_field_op,jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>(),jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>(),jule::Bool());
	{
		auto _match_expr{ _96753_u->_field_op._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4449600944; }
		_case_begin_4449600944:;
		{
			_96743_d->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_96817_tc._method_build_ptr_from_type(_96743_d->_field_kind)));
		}
		goto _match_end_4449594848;
		_case_end_4449600944:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4449601520; }
		_case_begin_4449601520:;
		{
			_96743_d->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_96817_tc._method_build_ref_from_type(_96743_d->_field_kind)));
		}
		goto _match_end_4449594848;
		_case_end_4449601520:;
		_case_begin_4449597104:;
		{
			(*this)._method_push_err(_96753_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_96753_u->_field_op._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4449594848;
		_case_end_4449597104:;
		_match_end_4449594848:;
	}
	_96743_d->_field_decl=true;
	return _96743_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_unary(jule::Ref<_1aaeea1c4_UnaryExpr> _99034_u) {
	jule::Ref<_1ad3e617d_TypeKind> _99117_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_99117_prefix;
	});
	jule::Ref<_1acde49c3_Data> _99517_d = this->self->_method_eval_expr_kind(_99034_u->_field_expr);
	if ((!(jule::real(_99517_d)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_99517_d->_field_decl) {
		return this->self->_method_eval_unary_type_decl(_99517_d,_99034_u);
	}
	jule::Ref<_1ad3e617d_TypeKind> _100417_cast_kind = _99517_d->_field_cast_kind;
	{
		auto _match_expr{ _99034_u->_field_op._field_kind };
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4449620208; }
		_case_begin_4449620208:;
		{
			_99517_d=this->self->_method_eval_unary_minus(_99517_d);
		}
		goto _match_end_4449614400;
		_case_end_4449620208:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4449619904; }
		_case_begin_4449619904:;
		{
			_99517_d=this->self->_method_eval_unary_plus(_99517_d);
		}
		goto _match_end_4449614400;
		_case_end_4449619904:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4449620016; }
		_case_begin_4449620016:;
		{
			_99517_d=this->self->_method_eval_unary_caret(_99517_d);
		}
		goto _match_end_4449614400;
		_case_end_4449620016:;
		if (!((jule::Str("!", 1)) == _match_expr)) { goto _case_end_4449619264; }
		_case_begin_4449619264:;
		{
			_99517_d=this->self->_method_eval_unary_excl(_99517_d);
		}
		goto _match_end_4449614400;
		_case_end_4449619264:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4449619376; }
		_case_begin_4449619376:;
		{
			_99517_d=this->self->_method_eval_unary_star(_99517_d,_99034_u->_field_op);
		}
		goto _match_end_4449614400;
		_case_end_4449619376:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4449619488; }
		_case_begin_4449619488:;
		{
			_99517_d=this->self->_method_eval_unary_amper(_99517_d);
		}
		goto _match_end_4449614400;
		_case_end_4449619488:;
		_case_begin_4449618960:;
		{
			jule::drop(_99517_d);
		}
		goto _match_end_4449614400;
		_case_end_4449618960:;
		_match_end_4449614400:;
	}
	if ((!(jule::real(_99517_d)))) {
		this->self->_method_push_err(_99034_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_99034_u->_field_op._field_kind)}));
	} else if (_99517_d->_method_is_const()) {
		_99517_d->_field_model=jule::Any(_99517_d->_field_constant);
	} else if (jule::real(_100417_cast_kind)) {
		_99517_d->_field_cast_kind=_100417_cast_kind;
		_1acde49c3_apply_cast_kind(_99517_d);
	}
	return _99517_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_variadic(jule::Ref<_1aaeea1c4_VariadicExpr> _102737_v) {
	jule::Ref<_1ad3e617d_TypeKind> _102817_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_102817_prefix;
	});
	jule::Ref<_1acde49c3_Data> _103217_d = this->self->_method_eval_expr_kind(_102737_v->_field_expr);
	if ((!(jule::real(_103217_d)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (jule::real(_103217_d->_field_kind->_method_ref())) {
		_103217_d->_field_kind=_103217_d->_field_kind->_method_ref()->_field_elem;
		_103217_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_ExplicitDerefExprModel>(new( std::nothrow ) _1ab0a4954_ExplicitDerefExprModel(_103217_d->_field_model)));
	}
	if ((!(_1ad3e617d_is_variadicable(_103217_d->_field_kind)))) {
		this->self->_method_push_err(_102737_v->_field_token,jule::Str("@ data-type is not variadicable", 31),jule::Slice<jule::Any>({jule::Any(_103217_d->_field_kind->_method_to_str())}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	_103217_d->_field_variadiced=true;
	_103217_d->_field_kind=_103217_d->_field_kind->_method_slc()->_field_elem;
	_103217_d->_field_kind->_field_variadic=true;
	return _103217_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_unsafe(jule::Ref<_1aaeea1c4_UnsafeExpr> _105535_u) {
	jule::Bool _105613_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ref<_1acde49c3_Data> _105917_d = this->self->_method_eval_expr_kind(_105535_u->_field_expr);
	this->self->_field_unsafety=_105613_unsafety;
	return _105917_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_arr(jule::Ref<_1aaeea1c4_SliceExpr> _106632_s) {
	jule::Ref<_1ad3e617d_Arr> _106817_pt = this->self->_field_prefix->_method_arr();
	jule::Ref<_1ad3e617d_Arr> _107017_arr = jule::new_struct<_1ad3e617d_Arr>(new( std::nothrow ) _1ad3e617d_Arr(false,0LL,_106817_pt->_field_elem));
	if (_106817_pt->_field_auto) {
		_107017_arr->_field_n=static_cast<jule::I64>(_106632_s->_field_elems.len());
	} else {
		_107017_arr->_field_n=static_cast<jule::I64>(_106632_s->_field_elems.len());
		if (_107017_arr->_field_n > _106817_pt->_field_n) {
			this->self->_method_push_err(_106632_s->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else if (_107017_arr->_field_n < _106817_pt->_field_n) {
			_107017_arr->_field_n=_106817_pt->_field_n;
		}
	}
	jule::Ref<_1ab0a4954_ArrayExprModel> _108717_model = jule::new_struct<_1ab0a4954_ArrayExprModel>(new( std::nothrow ) _1ab0a4954_ArrayExprModel(_107017_arr,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_106632_s->_field_elems.len())))));
	jule::Ref<_1ad3e617d_TypeKind> _109217_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_107017_arr->_field_elem;
	{
		auto _range_expr = _106632_s->_field_elems;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acde49c3_i = 0;
			jule::Any _1acde49c3_elem = *_range_begin;
			_iter_begin_4449674928:;
			{
				jule::Ref<_1acde49c3_Data> _109521_d = this->self->_method_eval_expr_kind(_1acde49c3_elem);
				if ((!(jule::real(_109521_d)))) {
					goto _iter_next_4449674928;
				}
				this->self->_field_s->_method_check_assign_type(_107017_arr->_field_elem,_109521_d,_106632_s->_field_token,true);
				_108717_model->_field_elems[static_cast<jule::Int>(_1acde49c3_i)]=_109521_d->_field_model;
			}
			_iter_next_4449674928:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acde49c3_i; _1acde49c3_elem = *_range_begin; goto _iter_begin_4449674928; }
			_iter_end_4449674928:;
		}
	}
	this->self->_field_prefix=_109217_prefix;
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_107017_arr)),jule::Ref<_1ad3e617d_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_108717_model),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_exp_slc(jule::Ref<_1aaeea1c4_SliceExpr> _111236_s,jule::Ref<_1ad3e617d_TypeKind> _111251_elem_type) {
	jule::Ref<_1ad3e617d_Slc> _111317_slc = jule::new_struct<_1ad3e617d_Slc>(new( std::nothrow ) _1ad3e617d_Slc(_111251_elem_type));
	jule::Ref<_1ab0a4954_SliceExprModel> _111717_model = jule::new_struct<_1ab0a4954_SliceExprModel>(new( std::nothrow ) _1ab0a4954_SliceExprModel(_111251_elem_type,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_111236_s->_field_elems.len())))));
	jule::Ref<_1ad3e617d_TypeKind> _112217_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_111317_slc->_field_elem;
	{
		auto _range_expr = _111236_s->_field_elems;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acde49c3_i = 0;
			jule::Any _1acde49c3_elem = *_range_begin;
			_iter_begin_4449695808:;
			{
				jule::Ref<_1acde49c3_Data> _112521_d = this->self->_method_eval_expr_kind(_1acde49c3_elem);
				if ((!(jule::real(_112521_d)))) {
					goto _iter_next_4449695808;
				}
				this->self->_field_s->_method_check_assign_type(_111317_slc->_field_elem,_112521_d,_111236_s->_field_token,true);
				_111717_model->_field_elems[static_cast<jule::Int>(_1acde49c3_i)]=_112521_d->_field_model;
			}
			_iter_next_4449695808:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acde49c3_i; _1acde49c3_elem = *_range_begin; goto _iter_begin_4449695808; }
			_iter_end_4449695808:;
		}
	}
	this->self->_field_prefix=_112217_prefix;
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_111317_slc)),jule::Ref<_1ad3e617d_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_111717_model),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_slice_expr(jule::Ref<_1aaeea1c4_SliceExpr> _114239_s) {
	if (jule::real(this->self->_field_prefix)) {
		{
			if (!((jule::real(this->self->_field_prefix->_method_arr())))) { goto _case_end_4449709792; }
			_case_begin_4449709792:;
			{
				return this->self->_method_eval_arr(_114239_s);
			}
			goto _match_end_4449709552;
			_case_end_4449709792:;
			if (!((jule::real(this->self->_field_prefix->_method_slc())))) { goto _case_end_4449709920; }
			_case_begin_4449709920:;
			{
				jule::Ref<_1ad3e617d_Slc> _114925_pt = this->self->_field_prefix->_method_slc();
				return this->self->_method_eval_exp_slc(_114239_s,_114925_pt->_field_elem);
			}
			goto _match_end_4449709552;
			_case_end_4449709920:;
			_match_end_4449709552:;
		}
	}
	jule::Ref<_1ad3e617d_TypeKind> _115417_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	if (_114239_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_114239_s->_field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Ref<_1acde49c3_Data> _116217_first_elem = this->self->_method_eval_expr_kind(_114239_s->_field_elems[0LL]);
	if ((!(jule::real(_116217_first_elem)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Ref<_1acde49c3_Data> _116717_d = this->self->_method_eval_exp_slc(_114239_s,_116217_first_elem->_field_kind);
	this->self->_field_prefix=_115417_prefix;
	return _116717_d;
}



inline void _1acde49c3_Eval::_method_check_integer_indexing_by_data(jule::Ref<_1acde49c3_Data> _117353_d,_1ab0277b7_Token _117363_token) {
	jule::Str _117413_err_key = _1acde49c3_check_data_for_integer_indexing(_117353_d);
	if (_117413_err_key != jule::Str("", 0)) {
		(*this)._method_push_err(_117363_token,_117413_err_key,jule::Slice<jule::Any>({}));
	}
}



inline void _1acde49c3_Eval::_method_indexing_ptr(jule::Ref<_1acde49c3_Data> _118035_d,jule::Ref<_1acde49c3_Data> _118049_index,jule::Ref<_1aaeea1c4_IndexingExpr> _118063_i) {
	(*this)._method_check_integer_indexing_by_data(_118049_index,_118063_i->_field_token);
	jule::Ref<_1ad3e617d_Ptr> _118317_ptr = _118035_d->_field_kind->_method_ptr();
	{
		if (!((_118317_ptr->_method_is_unsafe()))) { goto _case_end_4449737392; }
		_case_begin_4449737392:;
		{
			(*this)._method_push_err(_118063_i->_field_token,jule::Str("unsafe pointers not supports indexing", 37),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4449737136;
		_case_end_4449737392:;
		if (!(((!((*this)._method_is_unsafe()))))) { goto _case_end_4449737504; }
		_case_begin_4449737504:;
		{
			(*this)._method_push_err(_118063_i->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4449737136;
		_case_end_4449737504:;
		_match_end_4449737136:;
	}
	_118035_d->_field_kind=_118317_ptr->_field_elem->_method_clone();
}



inline void _1acde49c3_Eval::_method_indexing_arr(jule::Ref<_1acde49c3_Data> _119635_d,jule::Ref<_1acde49c3_Data> _119649_index,jule::Ref<_1aaeea1c4_IndexingExpr> _119663_i) {
	jule::Ref<_1ad3e617d_Arr> _119717_arr = _119635_d->_field_kind->_method_arr();
	_119635_d->_field_kind=_119717_arr->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_119649_index,_119663_i->_field_token);
	if (_119649_index->_method_is_const() && (_119649_index->_field_constant->_method_as_f64() >= _119717_arr->_field_n)) {
		(*this)._method_push_err(_119663_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
	}
}



inline void _1acde49c3_Eval::_method_indexing_slc(jule::Ref<_1acde49c3_Data> _120535_d,jule::Ref<_1acde49c3_Data> _120548_index,jule::Ref<_1aaeea1c4_IndexingExpr> _120562_i) {
	jule::Ref<_1ad3e617d_Slc> _120617_slc = _120535_d->_field_kind->_method_slc();
	_120535_d->_field_kind=_120617_slc->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_120548_index,_120562_i->_field_token);
}



inline void _1acde49c3_Eval::_method_indexing_map(jule::Ref<_1acde49c3_Data> _121135_d,jule::Ref<_1acde49c3_Data> _121149_index,jule::Ref<_1aaeea1c4_IndexingExpr> _121167_i) {
	if ((!(jule::real(_121149_index)))) {
		return;
	}
	jule::Ref<_1ad3e617d_Map> _121617_m = _121135_d->_field_kind->_method_map();
	_1acc33119_AssignTypeChecker _121717_atc = _1acc33119_AssignTypeChecker((*this)._field_s,_121617_m->_field_key,_121149_index,_121167_i->_field_token,true);
	_121717_atc._method_check();
	_121135_d->_field_kind=_121617_m->_field_val->_method_clone();
}



inline void _1acde49c3_Eval::_method_indexing_str(jule::Ref<_1acde49c3_Data> _122935_d,jule::Ref<_1acde49c3_Data> _122949_index,jule::Ref<_1aaeea1c4_IndexingExpr> _122963_i) {
	
	_122935_d->_field_kind->_field_kind=_1ad3e617d_build_prim_type(jule::Str("u8", 2));
	if ((!(jule::real(_122949_index)))) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_122949_index,_122963_i->_field_token);
	if ((!(_122949_index->_method_is_const()))) {
		jule::drop(_122935_d->_field_constant);
		return;
	}
	if (_122935_d->_method_is_const()) {
		_1ab0277b7_Token _124517_error_token = _122963_i->_field_token;
		jule::I64 _124617_i = _122949_index->_field_constant->_method_as_i64();
		jule::Str _124717_s = _122935_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_124617_i) >= _124717_s.len()) {
			(*this)._method_push_err(_124517_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else {
			_122935_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_124717_s[static_cast<jule::Int>(_124617_i)]));
		}
	}
}



inline void _1acde49c3_Eval::_method_to_indexing(jule::Ref<_1acde49c3_Data> _125634_d,jule::Ref<_1acde49c3_Data> _125648_index,jule::Ref<_1aaeea1c4_IndexingExpr> _125666_i) {
	{
		if (!((jule::real(_125634_d->_field_kind->_method_ptr())))) { goto _case_end_4449797024; }
		_case_begin_4449797024:;
		{
			(*this)._method_indexing_ptr(_125634_d,_125648_index,_125666_i);
			return;
		}
		goto _match_end_4449796784;
		_case_end_4449797024:;
		if (!((jule::real(_125634_d->_field_kind->_method_arr())))) { goto _case_end_4449797152; }
		_case_begin_4449797152:;
		{
			(*this)._method_indexing_arr(_125634_d,_125648_index,_125666_i);
			return;
		}
		goto _match_end_4449796784;
		_case_end_4449797152:;
		if (!((jule::real(_125634_d->_field_kind->_method_slc())))) { goto _case_end_4449797280; }
		_case_begin_4449797280:;
		{
			(*this)._method_indexing_slc(_125634_d,_125648_index,_125666_i);
			return;
		}
		goto _match_end_4449796784;
		_case_end_4449797280:;
		if (!((jule::real(_125634_d->_field_kind->_method_map())))) { goto _case_end_4449797408; }
		_case_begin_4449797408:;
		{
			(*this)._method_indexing_map(_125634_d,_125648_index,_125666_i);
			return;
		}
		goto _match_end_4449796784;
		_case_end_4449797408:;
		if (!((jule::real(_125634_d->_field_kind->_method_prim())))) { goto _case_end_4449797536; }
		_case_begin_4449797536:;
		{
			jule::Ref<_1ad3e617d_Prim> _127517_prim = _125634_d->_field_kind->_method_prim();
			{
				if (!((_127517_prim->_method_is_str()))) { goto _case_end_4449808960; }
				_case_begin_4449808960:;
				{
					(*this)._method_indexing_str(_125634_d,_125648_index,_125666_i);
					return;
				}
				goto _match_end_4449808800;
				_case_end_4449808960:;
				_match_end_4449808800:;
			}
		}
		goto _match_end_4449796784;
		_case_end_4449797536:;
		_match_end_4449796784:;
	}
	(*this)._method_push_err(_125666_i->_field_token,jule::Str("@ data type is not support indexing", 35),jule::Slice<jule::Any>({jule::Any(_125634_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_ident_decl_from_indexing(jule::Ref<_1aaeea1c4_IndexingExpr> _128653_i) {
	{
		auto _match_expr{ _128653_i->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_IdentExpr>>())) { goto _case_end_4449818352; }
		goto _match_end_4449815200;
		_case_end_4449818352:;
		_case_begin_4449815872:;
		{
			this->self->_method_push_err(_128653_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4449815200;
		_case_end_4449815872:;
		_match_end_4449815200:;
	}
	jule::Ref<_1aaeea1c4_IdentTypeDecl> _129417_decl = jule::new_struct<_1aaeea1c4_IdentTypeDecl>(new( std::nothrow ) _1aaeea1c4_IdentTypeDecl(_1ab0277b7_Token(),_128653_i->_field_expr.operator jule::Ref<_1aaeea1c4_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>()));
	{
		auto _match_expr{ _128653_i->_field_index };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_UnaryExpr>>())) { goto _case_end_4449823632; }
		_case_begin_4449823632:;
		{
			jule::Ref<_1acde49c3_Data> _130221_d = this->self->_method_eval_unary(_128653_i->_field_index.operator jule::Ref<_1aaeea1c4_UnaryExpr>());
			if ((!(_130221_d->_field_decl))) {
				this->self->_method_push_err(_128653_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1acde49c3_Data>();
			}
			_129417_decl->_field_generics=jule::append(_129417_decl->_field_generics,jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>({jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_1ab0277b7_Token(),jule::Any(_130221_d->_field_kind)))}));
		}
		goto _match_end_4449816304;
		_case_end_4449823632:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_TypeDecl>>())) { goto _case_end_4449824480; }
		_case_begin_4449824480:;
		{
			_129417_decl->_field_generics=jule::append(_129417_decl->_field_generics,jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>({_128653_i->_field_index.operator jule::Ref<_1aaeea1c4_TypeDecl>()}));
		}
		goto _match_end_4449816304;
		_case_end_4449824480:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_IdentExpr>>())) { goto _case_end_4449824592; }
		_case_begin_4449824592:;
		{
			_129417_decl->_field_generics=jule::append(_129417_decl->_field_generics,jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>({jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_1ab0277b7_Token(),jule::Any(jule::new_struct<_1aaeea1c4_IdentTypeDecl>(new( std::nothrow ) _1aaeea1c4_IdentTypeDecl(_1ab0277b7_Token(),_128653_i->_field_index.operator jule::Ref<_1aaeea1c4_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>())))))}));
		}
		goto _match_end_4449816304;
		_case_end_4449824592:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_TupleExpr>>())) { goto _case_end_4449821552; }
		_case_begin_4449821552:;
		{
			{
				auto _range_expr = _128653_i->_field_index.operator jule::Ref<_1aaeea1c4_TupleExpr>()->_field_expr;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_1aaeea1c4_Expr> _1acde49c3_expr = *_range_begin;
					_iter_begin_4449823872:;
					{
						{
							auto _match_expr{ _1acde49c3_expr->_field_kind };
							if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_TypeDecl>>())) { goto _case_end_4449840240; }
							_case_begin_4449840240:;
							{
								_129417_decl->_field_generics=jule::append(_129417_decl->_field_generics,jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>({_1acde49c3_expr->_field_kind.operator jule::Ref<_1aaeea1c4_TypeDecl>()}));
							}
							goto _match_end_4449830912;
							_case_end_4449840240:;
							if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_IdentExpr>>())) { goto _case_end_4449840352; }
							_case_begin_4449840352:;
							{
								_129417_decl->_field_generics=jule::append(_129417_decl->_field_generics,jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>({jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_1ab0277b7_Token(),jule::Any(jule::new_struct<_1aaeea1c4_IdentTypeDecl>(new( std::nothrow ) _1aaeea1c4_IdentTypeDecl(_1ab0277b7_Token(),_1acde49c3_expr->_field_kind.operator jule::Ref<_1aaeea1c4_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1aaeea1c4_TypeDecl>>())))))}));
							}
							goto _match_end_4449830912;
							_case_end_4449840352:;
							_match_end_4449830912:;
						}
					}
					_iter_next_4449823872:;
					++_range_begin;
					if (_range_begin != _range_end) { _1acde49c3_expr = *_range_begin; goto _iter_begin_4449823872; }
					_iter_end_4449823872:;
				}
			}
		}
		goto _match_end_4449816304;
		_case_end_4449821552:;
		_case_begin_4449821248:;
		{
			this->self->_method_push_err(_128653_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4449816304;
		_case_end_4449821248:;
		_match_end_4449816304:;
	}
	return this->self->_method_eval_type(jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_1ab0277b7_Token(),jule::Any(_129417_decl))));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_indexing(jule::Ref<_1aaeea1c4_IndexingExpr> _133837_i) {
	jule::Ref<_1ad3e617d_TypeKind> _133917_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_133917_prefix;
	});
	jule::Ref<_1acde49c3_Data> _134317_d = this->self->_method_eval_expr_kind(_133837_i->_field_expr);
	if ((!(jule::real(_134317_d)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_134317_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_133837_i);
	}
	jule::Any _135317_expr_model = _134317_d->_field_model;
	jule::Ref<_1acde49c3_Data> _135417_index = this->self->_method_eval_expr_kind(_133837_i->_field_index);
	this->self->_method_to_indexing(_134317_d,_135417_index,_133837_i);
	if (jule::real(_135417_index)) {
		if (_134317_d->_method_is_const()) {
			_134317_d->_field_model=jule::Any(_134317_d->_field_constant);
		} else {
			_134317_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_IndexigExprModel>(new( std::nothrow ) _1ab0a4954_IndexigExprModel(_135317_expr_model,_135417_index->_field_model)));
		}
	}
	return _134317_d;
}



inline std::tuple<jule::Ref<_1acde49c3_Data>,jule::Ref<_1acde49c3_Data>> _1acde49c3_Eval::_method_eval_slicing_exprs(jule::Ref<_1aaeea1c4_SlicingExpr> _137542_s) {
	jule::Ref<_1ad3e617d_TypeKind> _137617_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_137617_prefix;
	});
	jule::Ref<_1acde49c3_Data> _138017_l = jule::new_ref<_1acde49c3_Data>();
	jule::Ref<_1acde49c3_Data> _138117_r = jule::new_ref<_1acde49c3_Data>();
	if (_137542_s->_field_start != nullptr) {
		_138017_l=this->self->_method_eval_expr_kind(_137542_s->_field_start);
		if (jule::real(_138017_l)) {
			this->self->_method_check_integer_indexing_by_data(_138017_l,_137542_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_1acde49c3_Data>(),jule::new_ref<_1acde49c3_Data>());
		}
	} else {
		_138017_l=jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1ad6d5cec_Const::_static_method_new_i64(0LL)));
		_138017_l->_field_model=jule::Any(_138017_l->_field_constant);
	}
	if (_137542_s->_field_to != nullptr) {
		_138117_r=this->self->_method_eval_expr_kind(_137542_s->_field_to);
		if (jule::real(_138117_r)) {
			this->self->_method_check_integer_indexing_by_data(_138117_r,_137542_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_1acde49c3_Data>(),jule::new_ref<_1acde49c3_Data>());
		}
	}
	return std::make_tuple(_138017_l,_138117_r);
}



inline void _1acde49c3_Eval::_method_slicing_arr(jule::Ref<_1acde49c3_Data> _141030_d) {
	jule::Ref<_1ad3e617d_TypeKind> _141117_elem_type = _141030_d->_field_kind->_method_arr()->_field_elem->_method_clone();
	_141030_d->_field_kind->_field_kind=jule::new_struct<_1ad3e617d_Slc>(new( std::nothrow ) _1ad3e617d_Slc(_141117_elem_type));
	_141030_d->_field_lvalue=false;
	_141030_d->_field_mutable=_141030_d->_field_mutable || (!(_1ad3e617d_is_mut(_141117_elem_type)));
}



inline void _1acde49c3_Eval::_method_slicing_slc(jule::Ref<_1acde49c3_Data> _142130_d) {
	_142130_d->_field_lvalue=false;
}



inline void _1acde49c3_Eval::_method_slicing_str(jule::Ref<_1acde49c3_Data> _142530_d,jule::Ref<_1acde49c3_Data> _142540_l,jule::Ref<_1acde49c3_Data> _142550_r) {
	_142530_d->_field_lvalue=false;
	_142530_d->_field_mutable=true;
	if ((!(_142530_d->_method_is_const()))) {
		return;
	}
	if ((!(jule::real(_142540_l))) || (!(jule::real(_142550_r)))) {
		jule::drop(_142530_d->_field_constant);
		return;
	}
	if (_142540_l->_method_is_const() && _142550_r->_method_is_const()) {
		jule::I64 _143817_left = _142540_l->_field_constant->_method_as_i64();
		if (_143817_left < 0LL) {
			return;
		}
		jule::Str _144317_s = _142530_d->_field_constant->_method_read_str();
		jule::I64 _144421_right = 0LL;
		if ((!(jule::real(_142550_r)))) {
			_144421_right=static_cast<jule::I64>(_144317_s.len());
		} else {
			_144421_right=static_cast<jule::I64>(_142550_r->_field_constant->_method_as_i64());
		}
		if (_143817_left > _144421_right) {
			return;
		}
		_142530_d->_field_constant->_method_set_str(_144317_s.slice(static_cast<jule::Int>(_143817_left),static_cast<jule::Int>(_144421_right)));
	} else {
		jule::drop(_142530_d->_field_constant);
	}
}



inline void _1acde49c3_Eval::_method_check_slicing(jule::Ref<_1acde49c3_Data> _146036_d,jule::Ref<_1acde49c3_Data> _146046_l,jule::Ref<_1acde49c3_Data> _146056_r,jule::Ref<_1aaeea1c4_SlicingExpr> _146066_s) {
	{
		if (!((jule::real(_146036_d->_field_kind->_method_arr())))) { goto _case_end_4449918912; }
		_case_begin_4449918912:;
		{
			(*this)._method_slicing_arr(_146036_d);
			return;
		}
		goto _match_end_4449918656;
		_case_end_4449918912:;
		if (!((jule::real(_146036_d->_field_kind->_method_slc())))) { goto _case_end_4449919040; }
		_case_begin_4449919040:;
		{
			(*this)._method_slicing_slc(_146036_d);
			return;
		}
		goto _match_end_4449918656;
		_case_end_4449919040:;
		if (!((jule::real(_146036_d->_field_kind->_method_prim())))) { goto _case_end_4449919168; }
		_case_begin_4449919168:;
		{
			jule::Ref<_1ad3e617d_Prim> _147117_prim = _146036_d->_field_kind->_method_prim();
			{
				if (!((_147117_prim->_method_is_str()))) { goto _case_end_4449926464; }
				_case_begin_4449926464:;
				{
					(*this)._method_slicing_str(_146036_d,_146046_l,_146056_r);
					return;
				}
				goto _match_end_4449926304;
				_case_end_4449926464:;
				_match_end_4449926304:;
			}
		}
		goto _match_end_4449918656;
		_case_end_4449919168:;
		_match_end_4449918656:;
	}
	(*this)._method_push_err(_146066_s->_field_token,jule::Str("@ data type is not support slicing", 34),jule::Slice<jule::Any>({jule::Any(_146036_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_slicing(jule::Ref<_1aaeea1c4_SlicingExpr> _148236_s) {
	jule::Ref<_1acde49c3_Data> _148317_d = this->self->_method_eval_expr_kind(_148236_s->_field_expr);
	if ((!(jule::real(_148317_d)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Ref<_1acde49c3_Data> _148818_l;
	jule::Ref<_1acde49c3_Data> _148825_r;
	std::tie(_148818_l,_148825_r) = this->self->_method_eval_slicing_exprs(_148236_s);
	if ((!(jule::real(_148818_l)))) {
		return _148317_d;
	}
	this->self->_method_check_slicing(_148317_d,_148818_l,_148825_r,_148236_s);
	jule::drop(_148317_d->_field_cast_kind);
	jule::Ref<_1ab0a4954_SlicingExprModel> _149617_model = jule::new_struct<_1ab0a4954_SlicingExprModel>(new( std::nothrow ) _1ab0a4954_SlicingExprModel(_148317_d->_field_model,_148818_l->_field_model,jule::Any()));
	if (jule::real(_148825_r)) {
		_149617_model->_field_right=_148825_r->_field_model;
	}
	_148317_d->_field_model=jule::Any(_149617_model);
	return _148317_d;
}



inline void _1acde49c3_Eval::_method_cast_ptr(jule::Ref<_1ad3e617d_TypeKind> _150927_t,jule::Ref<_1acde49c3_Data> _150945_d,_1ab0277b7_Token _150955_error_token) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_150955_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1ad3e617d_Prim> _151513_prim = _150945_d->_field_kind->_method_prim();
	if ((!(jule::real(_150945_d->_field_kind->_method_ptr()))) && ((!(jule::real(_151513_prim))) || (!(_1ad70d41d_is_int(_151513_prim->_method_to_str()))))) {
		(*this)._method_push_err(_150955_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_150945_d->_field_kind->_method_to_str()),jule::Any(_150927_t->_method_to_str())}));
	}
	jule::drop(_150945_d->_field_constant);
}



inline void _1acde49c3_Eval::_method_cast_struct(jule::Ref<_1ad3e617d_TypeKind> _152334_t,jule::Ref<_1acde49c3_Data> _152352_d,_1ab0277b7_Token _152362_error_token) {
	jule::Ref<_1ac276c57_Trait> _152417_tr = _152352_d->_field_kind->_method_trt();
	if ((!(jule::real(_152417_tr)))) {
		(*this)._method_push_err(_152362_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_152352_d->_field_kind->_method_to_str()),jule::Any(_152334_t->_method_to_str())}));
		return;
	}
	jule::Ref<_1ab064271_StructIns> _153017_s = jule::new_ref<_1ab064271_StructIns>();
	if (jule::real(_152334_t->_method_ref())) {
		_153017_s=_152334_t->_method_ref()->_field_elem->_method_strct();
	} else {
		_153017_s=_152334_t->_method_strct();
	}
	(*this)._method_push_reference_to_struct(_153017_s);
	if ((!(_153017_s->_field_decl->_method_is_implements(_152417_tr)))) {
		(*this)._method_push_err(_152362_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_152352_d->_field_kind->_method_to_str()),jule::Any(_152334_t->_method_to_str())}));
	}
}



inline void _1acde49c3_Eval::_method_cast_ref(jule::Ref<_1ad3e617d_TypeKind> _154431_t,jule::Ref<_1acde49c3_Data> _154449_d,_1ab0277b7_Token _154459_error_token) {
	jule::Ref<_1ad3e617d_Ref> _154517_ref = _154431_t->_method_ref();
	if (jule::real(_154517_ref->_field_elem->_method_strct())) {
		(*this)._method_cast_struct(_154431_t,_154449_d,_154459_error_token);
		return;
	}
	(*this)._method_push_err(_154459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_154449_d->_field_kind->_method_to_str()),jule::Any(_154431_t->_method_to_str())}));
}



inline void _1acde49c3_Eval::_method_cast_slc(jule::Ref<_1ad3e617d_TypeKind> _155431_t,jule::Ref<_1acde49c3_Data> _155449_d,_1ab0277b7_Token _155459_error_token) {
	if (jule::real(_155449_d->_field_kind->_method_enm())) {
		if ((!(jule::real(_155449_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()))) || (!(_155449_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_155459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_155449_d->_field_kind->_method_to_str()),jule::Any(_155431_t->_method_to_str())}));
			return;
		}
	} else if ((!(jule::real(_155449_d->_field_kind->_method_prim()))) || (!(_155449_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_155459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_155449_d->_field_kind->_method_to_str()),jule::Any(_155431_t->_method_to_str())}));
		return;
	}
	_155431_t=_155431_t->_method_slc()->_field_elem;
	jule::Ref<_1ad3e617d_Prim> _156613_prim = _155431_t->_method_prim();
	if ((!(jule::real(_156613_prim))) || ((!(_156613_prim->_method_is_u8())) && (!(_156613_prim->_method_is_i32())))) {
		(*this)._method_push_err(_155459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_155449_d->_field_kind->_method_to_str()),jule::Any(_155431_t->_method_to_str())}));
	}
}



inline void _1acde49c3_Eval::_method_cast_str(jule::Ref<_1acde49c3_Data> _157231_d,_1ab0277b7_Token _157241_error_token) {
	if (jule::real(_157231_d->_field_kind->_method_enm())) {
		jule::Ref<_1ac7804a2_Enum> _157421_e = _157231_d->_field_kind->_method_enm();
		if (jule::real(_157421_e->_field_kind->_field_kind->_method_prim()) && _157421_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (jule::real(_157231_d->_field_kind->_method_prim())) {
		jule::Ref<_1ad3e617d_Prim> _158117_prim = _157231_d->_field_kind->_method_prim();
		if ((!(_158117_prim->_method_is_u8())) && (!(_158117_prim->_method_is_i32()))) {
			(*this)._method_push_err(_157241_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_157231_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if ((!(jule::real(_157231_d->_field_kind->_method_slc())))) {
		(*this)._method_push_err(_157241_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_157231_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ref<_1ad3e617d_TypeKind> _159317_t = _157231_d->_field_kind->_method_slc()->_field_elem;
	jule::Ref<_1ad3e617d_Prim> _159413_prim = _159317_t->_method_prim();
	if ((!(jule::real(_159413_prim))) || ((!(_159413_prim->_method_is_u8())) && (!(_159413_prim->_method_is_i32())))) {
		(*this)._method_push_err(_157241_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_157231_d->_field_kind->_method_to_str())}));
	}
}



inline void _1acde49c3_Eval::_method_cast_int(jule::Ref<_1ad3e617d_TypeKind> _160031_t,jule::Ref<_1acde49c3_Data> _160049_d,_1ab0277b7_Token _160059_error_token) {
	if (_160049_d->_method_is_const()) {
		jule::Ref<_1ad3e617d_Prim> _160217_prim = _160031_t->_method_prim();
		{
			if (!((_1ad70d41d_is_sig_int(_160217_prim->_field_kind)))) { goto _case_end_4450040000; }
			_case_begin_4450040000:;
			{
				_160049_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_160049_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4450039824;
			_case_end_4450040000:;
			if (!((_1ad70d41d_is_unsig_int(_160217_prim->_field_kind)))) { goto _case_end_4450040128; }
			_case_begin_4450040128:;
			{
				_160049_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_160049_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4450039824;
			_case_end_4450040128:;
			_match_end_4450039824:;
		}
	}
	if (jule::real(_160049_d->_field_kind->_method_enm())) {
		jule::Ref<_1ac7804a2_Enum> _161317_e = _160049_d->_field_kind->_method_enm();
		if (_1ad70d41d_is_num(_161317_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (jule::real(_160049_d->_field_kind->_method_ptr())) {
		jule::Ref<_1ad3e617d_Prim> _162017_prim = _160031_t->_method_prim();
		if (_162017_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_160059_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		} else if (((((!(_162017_prim->_method_is_i32())) && (!(_162017_prim->_method_is_i64()))) && (!(_162017_prim->_method_is_u16()))) && (!(_162017_prim->_method_is_u32()))) && (!(_162017_prim->_method_is_u64()))) {
			(*this)._method_push_err(_160059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_160049_d->_field_kind->_method_to_str()),jule::Any(_160031_t->_method_to_str())}));
		}
		return;
	}
	jule::Ref<_1ad3e617d_Prim> _163113_prim = _160049_d->_field_kind->_method_prim();
	if (jule::real(_163113_prim) && _1ad70d41d_is_num(_163113_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_160059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_160049_d->_field_kind->_method_to_str()),jule::Any(_160031_t->_method_to_str())}));
}



inline void _1acde49c3_Eval::_method_cast_num(jule::Ref<_1ad3e617d_TypeKind> _163931_t,jule::Ref<_1acde49c3_Data> _163949_d,_1ab0277b7_Token _163959_error_token) {
	if (_163949_d->_method_is_const()) {
		jule::Ref<_1ad3e617d_Prim> _164117_prim = _163931_t->_method_prim();
		{
			if (!((_1ad70d41d_is_float(_164117_prim->_field_kind)))) { goto _case_end_4450075808; }
			_case_begin_4450075808:;
			{
				_163949_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_163949_d->_field_constant->_method_as_f64()));
			}
			goto _match_end_4450075616;
			_case_end_4450075808:;
			if (!((_1ad70d41d_is_sig_int(_164117_prim->_field_kind)))) { goto _case_end_4450075936; }
			_case_begin_4450075936:;
			{
				_163949_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_163949_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4450075616;
			_case_end_4450075936:;
			if (!((_1ad70d41d_is_unsig_int(_164117_prim->_field_kind)))) { goto _case_end_4450076064; }
			_case_begin_4450076064:;
			{
				_163949_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_163949_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4450075616;
			_case_end_4450076064:;
			_match_end_4450075616:;
		}
	}
	if (jule::real(_163949_d->_field_kind->_method_enm())) {
		jule::Ref<_1ac7804a2_Enum> _165517_e = _163949_d->_field_kind->_method_enm();
		if (_1ad70d41d_is_num(_165517_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ref<_1ad3e617d_Prim> _166113_prim = _163949_d->_field_kind->_method_prim();
	if (jule::real(_166113_prim) && _1ad70d41d_is_num(_166113_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_163959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_163949_d->_field_kind->_method_to_str()),jule::Any(_163931_t->_method_to_str())}));
}



inline void _1acde49c3_Eval::_method_cast_prim(jule::Ref<_1ad3e617d_TypeKind> _166932_t,jule::Ref<_1acde49c3_Data> _166950_d,_1ab0277b7_Token _166960_error_token) {
	jule::Ref<_1ad3e617d_Prim> _167013_prim = _166932_t->_method_prim();
	{
		if (!((_167013_prim->_method_is_any()))) { goto _case_end_4450098848; }
		goto _match_end_4450097888;
		_case_end_4450098848:;
		if (!((_167013_prim->_method_is_str()))) { goto _case_end_4450098320; }
		_case_begin_4450098320:;
		{
			(*this)._method_cast_str(_166950_d,_166960_error_token);
		}
		goto _match_end_4450097888;
		_case_end_4450098320:;
		if (!((_1ad70d41d_is_int(_167013_prim->_method_to_str())))) { goto _case_end_4450098432; }
		_case_begin_4450098432:;
		{
			(*this)._method_cast_int(_166932_t,_166950_d,_166960_error_token);
		}
		goto _match_end_4450097888;
		_case_end_4450098432:;
		if (!((_1ad70d41d_is_num(_167013_prim->_method_to_str())))) { goto _case_end_4450098544; }
		_case_begin_4450098544:;
		{
			(*this)._method_cast_num(_166932_t,_166950_d,_166960_error_token);
		}
		goto _match_end_4450097888;
		_case_end_4450098544:;
		_case_begin_4450098016:;
		{
			(*this)._method_push_err(_166960_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_166932_t->_method_to_str())}));
		}
		goto _match_end_4450097888;
		_case_end_4450098016:;
		_match_end_4450097888:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_cast_by_type_n_data(jule::Ref<_1ad3e617d_TypeKind> _168947_t,jule::Ref<_1acde49c3_Data> _168965_d,_1ab0277b7_Token _168975_error_token) {
	{
		if (!((jule::real(_168965_d->_field_kind->_method_prim()) && _168965_d->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4450114784; }
		_case_begin_4450114784:;
		{
			if (jule::real(_168947_t->_method_enm())) {
				(*this)._method_push_err(_168975_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>({}));
				(*this)._method_push_suggestion(jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4450111504;
		_case_end_4450114784:;
		if (!((jule::real(_168947_t->_method_ptr())))) { goto _case_end_4450111952; }
		_case_begin_4450111952:;
		{
			(*this)._method_cast_ptr(_168947_t,_168965_d,_168975_error_token);
		}
		goto _match_end_4450111504;
		_case_end_4450111952:;
		if (!((jule::real(_168947_t->_method_ref())))) { goto _case_end_4450112064; }
		_case_begin_4450112064:;
		{
			(*this)._method_cast_ref(_168947_t,_168965_d,_168975_error_token);
		}
		goto _match_end_4450111504;
		_case_end_4450112064:;
		if (!((jule::real(_168947_t->_method_slc())))) { goto _case_end_4450112176; }
		_case_begin_4450112176:;
		{
			(*this)._method_cast_slc(_168947_t,_168965_d,_168975_error_token);
		}
		goto _match_end_4450111504;
		_case_end_4450112176:;
		if (!((jule::real(_168947_t->_method_strct())))) { goto _case_end_4450115248; }
		_case_begin_4450115248:;
		{
			(*this)._method_cast_struct(_168947_t,_168965_d,_168975_error_token);
		}
		goto _match_end_4450111504;
		_case_end_4450115248:;
		if (!((jule::real(_168947_t->_method_prim())))) { goto _case_end_4450115360; }
		_case_begin_4450115360:;
		{
			(*this)._method_cast_prim(_168947_t,_168965_d,_168975_error_token);
		}
		goto _match_end_4450111504;
		_case_end_4450115360:;
		_case_begin_4450111648:;
		{
			(*this)._method_push_err(_168975_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_168947_t->_method_to_str())}));
			jule::drop(_168965_d);
		}
		goto _match_end_4450111504;
		_case_end_4450111648:;
		_match_end_4450111504:;
	}
	if ((!(jule::real(_168965_d)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	_168965_d->_field_mutable=_168965_d->_field_mutable || ((!(_1ad3e617d_is_mut(_168965_d->_field_kind))) && _1ad3e617d_is_mut(_168947_t));
	_168965_d->_field_lvalue=_1ad3e617d_is_lvalue(_168947_t);
	_168965_d->_field_decl=false;
	if (jule::real(_168947_t->_method_prim()) && _168965_d->_method_is_const()) {
		_168965_d->_field_model=jule::Any(_168965_d->_field_constant);
	}
	if ((!(jule::real(_168965_d->_field_kind->_method_enm()))) || (_168965_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_to_str() != _168947_t->_method_to_str())) {
		_168965_d->_field_cast_kind=_168947_t;
	} else {
		_168965_d->_field_kind=_168947_t;
	}
	return _168965_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_cast(jule::Ref<_1aaeea1c4_CastExpr> _174133_c) {
	jule::Ref<_1ad3e617d_TypeSymbol> _174217_t = _1ac699a1a_build_type(_174133_c->_field_kind);
	jule::Bool _174313_ok = this->self->_field_s->_method_check_type(_174217_t,this->self->_field_lookup);
	if ((!(_174313_ok))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Ref<_1ad3e617d_TypeKind> _174817_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_174817_prefix;
	});
	jule::Ref<_1acde49c3_Data> _175217_d = this->self->_method_eval_expr_kind(_174133_c->_field_expr);
	if ((!(jule::real(_175217_d)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	_175217_d=this->self->_method_eval_cast_by_type_n_data(_174217_t->_field_kind,_175217_d,_174133_c->_field_kind->_field_token);
	return _175217_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_ns_selection(jule::Ref<_1aaeea1c4_NsSelectionExpr> _176236_s) {
	jule::Str _176313_path = _1ad3e617d_build_link_path_by_tokens(_176236_s->_field_ns);
	jule::Ref<_1ac78be4d_ImportInfo> _176417_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)>([=](jule::Ref<_1ac78be4d_ImportInfo> _176453_p) mutable -> jule::Bool {
		if ((_176236_s->_field_ns.len() == 1LL) && (_176453_p->_field_alias == _176313_path)) {
			return true;
		}
		return _176453_p->_field_link_path == _176313_path;
	}));
	if ((!(jule::real(_176417_imp))) || (!(_176417_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_176236_s->_field_ident,jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_176313_path)}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Trait<_1acde4cc0_Lookup> _177617_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_176417_imp;
	
	jule::Any _178017_def = (*this)._method_get_def(_176236_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_177617_lookup;
	jule::Ref<_1acde49c3_Data> _178317_d = (*this)._method_eval_def(_178017_def,_176236_s->_field_ident);
	return _178317_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_struct_lit_explicit(jule::Ref<_1ab064271_StructIns> _178848_s,jule::Slice<jule::Any> _178867_exprs,_1ab0277b7_Token _178886_error_token) {
	jule::Bool _178913_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_178848_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_178848_s->_field_generics.len()),_178886_error_token);
	if ((!(_178913_ok))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	this->self->_method_push_reference_to_struct(_178848_s);
	_1acc33119_StructLitChecker _179717_slc = _1acc33119_StructLitChecker(this->self,_178886_error_token,_178848_s,jule::Slice<jule::Ref<_1ab0a4954_StructArgExprModel>>());
	_179717_slc._method_check(_178867_exprs);
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_178848_s)),jule::Ref<_1ad3e617d_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_StructLitExprModel>(new( std::nothrow ) _1ab0a4954_StructLitExprModel(_178848_s,_179717_slc._field_args))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_struct_lit(jule::Ref<_1aaeea1c4_StructLit> _181439_lit) {
	jule::Ref<_1ad3e617d_TypeSymbol> _181517_t = _1ac699a1a_build_type(_181439_lit->_field_kind);
	jule::Bool _181613_ok = this->self->_field_s->_method_check_type(_181517_t,this->self->_field_lookup);
	if ((!(_181613_ok))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Ref<_1ab064271_StructIns> _182117_s = _181517_t->_field_kind->_method_strct();
	if ((!(jule::real(_182117_s)))) {
		this->self->_method_push_err(_181439_lit->_field_kind->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	return this->self->_method_eval_struct_lit_explicit(_182117_s,_181439_lit->_field_exprs,_181439_lit->_field_kind->_field_token);
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_type(jule::Ref<_1aaeea1c4_TypeDecl> _183032_t) {
	jule::Ref<_1ad3e617d_TypeSymbol> _183117_tk = _1ac699a1a_build_type(_183032_t);
	jule::Bool _183213_ok = (*this)._field_s->_method_check_type(_183117_tk,(*this)._field_lookup);
	if ((!(_183213_ok))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(_183117_tk->_field_kind,jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_183117_tk->_field_kind),true,jule::Ref<_1ad6d5cec_Const>()));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_call_type_fn(jule::Ref<_1aaeea1c4_FnCallExpr> _184436_fc,jule::Ref<_1acde49c3_Data> _184457_d) {
	if (_184436_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_184436_fc->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_184457_d->_field_kind->_method_to_str())}));
	} else if (_184436_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_184436_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_184436_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_184436_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	if (_184436_fc->_field_args.len() > 0LL) {
		jule::Ref<_1acde49c3_Data> _185421_arg = this->self->_method_eval_expr_kind(_184436_fc->_field_args[0LL]->_field_kind);
		if (jule::real(_185421_arg)) {
			_184457_d=this->self->_method_eval_cast_by_type_n_data(_184457_d->_field_kind,_185421_arg,_184436_fc->_field_args[0LL]->_field_token);
		}
	}
	_184457_d->_field_decl=false;
	return _184457_d;
}



inline std::tuple<jule::Bool,jule::Bool> _1acde49c3_Eval::_method_check_fn_call_generics(jule::Ref<_1ab07a50c_FnIns> _186545_f,jule::Ref<_1aaeea1c4_FnCallExpr> _186613_fc) {
	jule::Bool _186632_ok = jule::Bool();
	jule::Bool _186642_dynamic_annotation = jule::Bool();
	{
		if (!((((_186545_f->_field_decl->_field_generics.len() > 0LL) && (_186613_fc->_field_generics.len() == 0LL)) && (_186545_f->_field_params.len() > 0LL)))) { goto _case_end_4450260672; }
		_case_begin_4450260672:;
		{
			_186642_dynamic_annotation=true;
			_186545_f->_field_generics=jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_186545_f->_field_decl->_field_generics.len())));
			_186632_ok = true;
			_186642_dynamic_annotation = true;
			return std::make_tuple(_186632_ok,_186642_dynamic_annotation);
		}
		goto _match_end_4450248320;
		_case_end_4450260672:;
		if (!(((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_186545_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_186613_fc->_field_generics.len()),_186613_fc->_field_token)))))) { goto _case_end_4450253504; }
		_case_begin_4450253504:;
		{
			_186632_ok = false;
			_186642_dynamic_annotation = false;
			return std::make_tuple(_186632_ok,_186642_dynamic_annotation);
		}
		goto _match_end_4450248320;
		_case_end_4450253504:;
		_case_begin_4450248512:;
		{
			_186545_f->_field_generics=jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_186545_f->_field_decl->_field_generics.len())));
			{
				auto _range_expr = _186613_fc->_field_generics;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Int _1acde49c3_i = 0;
					jule::Ref<_1aaeea1c4_TypeDecl> _1acde49c3_g = *_range_begin;
					_iter_begin_4450252288:;
					{
						jule::Ref<_1ad3e617d_TypeSymbol> _188125_k = _1ac699a1a_build_type(_1acde49c3_g);
						jule::Bool _188221_ok = (*this)._field_s->_method_check_type(_188125_k,(*this)._field_lookup);
						if ((!(_188221_ok))) {
							_186632_ok = false;
							_186642_dynamic_annotation = false;
							return std::make_tuple(_186632_ok,_186642_dynamic_annotation);
						}
						_186545_f->_field_generics[static_cast<jule::Int>(_1acde49c3_i)]=_188125_k->_field_kind;
					}
					_iter_next_4450252288:;
					++_range_begin;
					if (_range_begin != _range_end) { ++_1acde49c3_i; _1acde49c3_g = *_range_begin; goto _iter_begin_4450252288; }
					_iter_end_4450252288:;
				}
			}
			_186632_ok = true;
			_186642_dynamic_annotation = false;
			return std::make_tuple(_186632_ok,_186642_dynamic_annotation);
		}
		goto _match_end_4450248320;
		_case_end_4450248512:;
		_match_end_4450248320:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_call_builtin_fn(jule::Ref<_1aaeea1c4_FnCallExpr> _189339_fc,jule::Ref<_1acde49c3_Data> _189360_d) {
	jule::Ref<_1ab07a50c_FnIns> _189417_f = _189360_d->_field_kind->_method_fnc();
	_189360_d=_189417_f->_field_caller(this->self,_189339_fc,_189360_d);
	if ((!(jule::real(_189360_d)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	_189360_d->_field_mutable=true;
	return _189360_d;
}



inline void _1acde49c3_Eval::_method_check_fn_of_concurrent_call(jule::Ref<_1ab07a50c_FnIns>& _190547_f,_1ab0277b7_Token _190558_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto _range_expr = _190547_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_ParamIns> _1acde49c3_p = *_range_begin;
			_iter_begin_4450282528:;
			{
				if (_1acde49c3_p->_field_decl->_field_reference) {
					(*this)._method_push_err(_190558_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>({}));
					return;
				}
			}
			_iter_next_4450282528:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde49c3_p = *_range_begin; goto _iter_begin_4450282528; }
			_iter_end_4450282528:;
		}
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_call_fn(jule::Ref<_1aaeea1c4_FnCallExpr> _191831_fc,jule::Ref<_1acde49c3_Data> _191852_d) {
	jule::Ref<_1ab07a50c_FnIns> _191917_f = _191852_d->_field_kind->_method_fnc();
	if (_191917_f->_method_is_builtin()) {
		return this->self->_method_call_builtin_fn(_191831_fc,_191852_d);
	}
	if (_191831_fc->_field_concurrent) {
		this->self->_method_check_fn_of_concurrent_call(_191917_f,_191831_fc->_field_token);
	}
	if ((((!(_191852_d->_field_mutable)) && _191917_f->_field_decl->_method_is_method()) && (!(_191917_f->_field_decl->_field_statically))) && _191917_f->_field_decl->_field_params[0LL]->_field_mutable) {
		this->self->_method_push_err(_191831_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	} else if ((!(this->self->_method_is_unsafe())) && _191917_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_191831_fc->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Bool _193418_ok;
	jule::Bool _193422_dynamic_annotation;
	std::tie(_193418_ok,_193422_dynamic_annotation) = this->self->_method_check_fn_call_generics(_191917_f,_191831_fc);
	if ((!(_193418_ok))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Ref<_1ac7ccb09_Sema> _193917_old = this->self->_field_s;
	if (jule::real(_191917_f->_field_decl->_field_owner)) {
		this->self->_field_s=_191917_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if ((_193917_old).alloc != (this->self->_field_s).alloc) {
			_193917_old->_field_errors=jule::append(_193917_old->_field_errors,this->self->_field_s->_field_errors);
		}
		this->self->_field_s=_193917_old;
	});
	if ((!(_193422_dynamic_annotation))) {
		if ((!(_191917_f->_field_reloaded))) {
			jule::Bool _195321_ok = this->self->_field_s->_method_reload_fn_ins_types(_191917_f);
			if ((!(_195321_ok))) {
				return jule::new_ref<_1acde49c3_Data>();
			}
			_191917_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_191917_f);
	}
	_1acc33119_FnCallArgChecker _196317_fcac = _1acc33119_FnCallArgChecker(this->self,_191831_fc->_field_args,_191831_fc->_field_token,_191917_f,_193422_dynamic_annotation,jule::Slice<jule::Any>());
	if (jule::real(_191917_f->_field_decl->_field_owner)) {
		std::tie(_193917_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_193917_old);
		_193418_ok=_196317_fcac._method_check();
		std::tie(_193917_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_193917_old);
	} else {
		_193418_ok=_196317_fcac._method_check();
	}
	if ((!(_193418_ok)) && _193422_dynamic_annotation) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Bool _198214_is_unique_ins;
	jule::Int _198229_pos;
	std::tie(_198214_is_unique_ins,_198229_pos) = _191917_f->_field_decl->_method_append_instance(_191917_f);
	if ((!(_198214_is_unique_ins))) {
		_191917_f=_191917_f->_field_decl->_field_instances[static_cast<jule::Int>(_198229_pos)];
	}
	jule::Any _198717_call_model = _191852_d->_field_model;
	if (_191917_f->_field_decl->_method_is_void()) {
		_191852_d=_1acde49c3_build_void_data();
	} else {
		if (_193422_dynamic_annotation) {
			_193418_ok=this->self->_field_s->_method_reload_fn_ins_types(_191917_f);
			if ((!(_193418_ok))) {
				return jule::new_ref<_1acde49c3_Data>();
			}
			_191917_f->_field_reloaded=true;
		}
		_191852_d->_field_kind=_191917_f->_field_result;
		_191852_d->_field_lvalue=_1ad3e617d_is_lvalue(_191917_f->_field_result);
	}
	_191852_d->_field_mutable=true;
	_191852_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_FnCallExprModel>(new( std::nothrow ) _1ab0a4954_FnCallExprModel(_191917_f,_191831_fc->_field_concurrent,_198717_call_model,_196317_fcac._field_arg_models)));
	if ((_191917_f->_field_generics.len() > 0LL) && _198214_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_191917_f);
	}
	return _191852_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_fn_call(jule::Ref<_1aaeea1c4_FnCallExpr> _202036_fc) {
	jule::Ref<_1ad3e617d_TypeKind> _202117_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_202117_prefix;
	});
	jule::Ref<_1acde49c3_Data> _202517_d = this->self->_method_eval_expr_kind(_202036_fc->_field_expr->_field_kind);
	if ((!(jule::real(_202517_d)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_202517_d->_field_decl) {
		return this->self->_method_call_type_fn(_202036_fc,_202517_d);
	}
	if ((!(jule::real(_202517_d->_field_kind->_method_fnc())))) {
		this->self->_method_push_err(_202036_fc->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	return this->self->_method_call_fn(_202036_fc,_202517_d);
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_enum_static(jule::Ref<_1ac7804a2_Enum> _204239_enm,_1ab0277b7_Token _204251_ident) {
	jule::Ref<_1acde49c3_Data> _204317_d = jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_204239_enm)),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1ad6d5cec_Const>()));
	jule::Ref<_1ac7804a2_EnumItem> _205017_item = _204239_enm->_method_find_item(_204251_ident._field_kind);
	if ((!(jule::real(_205017_item)))) {
		(*this)._method_push_err(_204251_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_204251_ident._field_kind)}));
	} else {
		_204317_d->_field_constant=jule::new_ref<_1ad6d5cec_Const>(_205017_item->_field_value->_field_data->_field_constant.get());
		_204317_d->_field_model=jule::Any(_204317_d->_field_constant);
	}
	return _204317_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_struct_static(jule::Ref<_1ab064271_StructIns> _206141_s,_1ab0277b7_Token _206156_ident) {
	
	jule::Ref<_1ab07a50c_Fn> _206317_method = _206141_s->_method_find_method(_206156_ident._field_kind,true);
	if ((!(jule::real(_206317_method)))) {
		(*this)._method_push_err(_206156_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_206156_ident._field_kind)}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Ref<_1acde49c3_Data> _206917_d = jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::Ref<_1ad3e617d_TypeKind>(),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1ad6d5cec_Const>()));
	jule::Ref<_1ab07a50c_FnIns> _207617_ins = _206317_method->_method_instance();
	_207617_ins->_field_owner=_206141_s;
	(*this)._method_push_reference_to_fn(_207617_ins);
	_206917_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_StructStaticIdentExprModel>(new( std::nothrow ) _1ab0a4954_StructStaticIdentExprModel(_206141_s,_206917_d->_field_model,_207617_ins)));
	_206917_d->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_207617_ins));
	return _206917_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_trait_sub_ident(jule::Ref<_1acde49c3_Data> _208939_d,jule::Ref<_1ac276c57_Trait> _208953_trt,_1ab0277b7_Token _208966_ident) {
	jule::Ref<_1ab07a50c_Fn> _209017_f = _208953_trt->_method_find_method(_208966_ident._field_kind);
	if ((!(jule::real(_209017_f)))) {
		(*this)._method_push_err(_208966_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_208966_ident._field_kind)}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Any _209617_model = jule::Any(nullptr);
	if ((_208953_trt).alloc == (_1ad5a38bd_BUILTIN_TRAIT_ERROR).alloc) {
		_209617_model=jule::Any(jule::new_struct<_1ab0a4954_BuiltinErrorTraitSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_BuiltinErrorTraitSubIdentExprModel(_208939_d->_field_model,_208966_ident._field_kind)));
	} else {
		_209617_model=jule::Any(jule::new_struct<_1ab0a4954_TraitSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_TraitSubIdentExprModel(_208939_d->_field_model,_208966_ident._field_kind)));
	}
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_209017_f->_method_instance())),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_209617_model,false,jule::Ref<_1ad6d5cec_Const>()));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_struct_sub_ident(jule::Ref<_1acde49c3_Data> _211844_d,jule::Ref<_1ab064271_StructIns> _211858_s,jule::Ref<_1aaeea1c4_SubIdentExpr> _211873_si,jule::Bool _211892_ref) {
	jule::Ref<_1ab064271_FieldIns> _211917_f = _211858_s->_method_find_field(_211873_si->_field_ident._field_kind);
	if (jule::real(_211917_f)) {
		if ((!((*this)._field_s->_method_is_accessible_define(_211917_f->_field_decl->_field_public,_211917_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_211873_si->_field_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_211917_f->_field_decl->_field_ident)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		}
		jule::Ref<_1ab0a4954_StructSubIdentExprModel> _212621_model = jule::new_struct<_1ab0a4954_StructSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_StructSubIdentExprModel(_211844_d->_field_model,_211844_d->_field_kind,jule::Ref<_1ab07a50c_FnIns>(),_211917_f));
		_211844_d->_field_model=jule::Any(_212621_model);
		_211844_d->_field_kind=_211917_f->_field_kind->_method_clone();
		if (_211917_f->_field_decl->_field_mutable && (!(_211844_d->_field_mutable))) {
			{
				auto _match_expr{ (*this)._field_lookup };
				if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_ScopeChecker>>())) { goto _case_end_4450413472; }
				_case_begin_4450413472:;
				{
					jule::Ref<_1ac77dd1e_ScopeChecker> _213825_scope = (*this)._field_lookup.operator jule::Ref<_1ac77dd1e_ScopeChecker>();
					_211844_d->_field_mutable=jule::real(_213825_scope->_field_owner) && ((_213825_scope->_field_owner->_field_owner).alloc == (_211858_s).alloc);
					if (_211844_d->_field_mutable) {
						jule::Ref<_1aca3647d_Var> _214133_field = _212621_model->_field_expr.operator jule::Ref<_1aca3647d_Var>();
						jule::Ref<_1aca3647d_Var> _214233_v = jule::new_struct<_1aca3647d_Var>(new( std::nothrow ) _1aca3647d_Var(_214133_field->_field_scope,_214133_field->_field_token,_214133_field->_field_ident,_214133_field->_field_cpp_linked,_214133_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_214133_field->_field_kind,_214133_field->_field_value,jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Slice<jule::Ref<_1aaeea1c4_Directive>>(),jule::Slice<jule::Ref<_1aca3647d_Var>>()));
						_214233_v->_field_mutable=true;
						_212621_model->_field_expr=jule::Any(_214233_v);
					}
				}
				goto _match_end_4450411584;
				_case_end_4450413472:;
				_match_end_4450411584:;
			}
		}
		return _211844_d;
	}
	
	jule::Ref<_1ab07a50c_Fn> _216117_m = _211858_s->_method_find_method(_211873_si->_field_ident._field_kind,false);
	if ((!(jule::real(_216117_m)))) {
		(*this)._method_push_err(_211873_si->_field_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_211873_si->_field_ident._field_kind)}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_216117_m->_field_params[0LL]->_method_is_ref() && (!(_211892_ref))) {
		(*this)._method_push_err(_211873_si->_field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab07a50c_FnIns> _217217_ins = _216117_m->_method_instance();
	_217217_ins->_field_owner=_211858_s;
	(*this)._method_push_reference_to_fn(_217217_ins);
	_211844_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_StructSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_StructSubIdentExprModel(_211844_d->_field_model,_211844_d->_field_kind,_217217_ins,jule::Ref<_1ab064271_FieldIns>())));
	_211844_d->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_217217_ins));
	return _211844_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_slice_sub_ident(jule::Ref<_1acde49c3_Data> _218443_d,_1ab0277b7_Token _218453_ident) {
	{
		auto _match_expr{ _218453_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4450445312; }
		_case_begin_4450445312:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_218443_d->_field_kind,_218443_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450441216;
		_case_end_4450445312:;
		if (!((jule::Str("cap", 3)) == _match_expr)) { goto _case_end_4450445888; }
		_case_begin_4450445888:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_218443_d->_field_kind,_218443_d->_field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450441216;
		_case_end_4450445888:;
		_case_begin_4450441824:;
		{
			(*this)._method_push_err(_218453_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_218453_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450441216;
		_case_end_4450441824:;
		_match_end_4450441216:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_array_sub_ident(jule::Ref<_1acde49c3_Data> _221443_d,_1ab0277b7_Token _221453_ident) {
	{
		auto _match_expr{ _221453_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4450458384; }
		_case_begin_4450458384:;
		{
			jule::Ref<_1ad6d5cec_Const> _221721_c = _1ad6d5cec_Const::_static_method_new_i64(static_cast<jule::I64>(_221443_d->_field_kind->_method_arr()->_field_n));
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_221721_c),jule::Bool(),_221721_c));
		}
		goto _match_end_4450454288;
		_case_end_4450458384:;
		_case_begin_4450454896:;
		{
			(*this)._method_push_err(_221453_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_221453_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450454288;
		_case_end_4450454896:;
		_match_end_4450454288:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_map_sub_ident(jule::Ref<_1acde49c3_Data> _223141_d,_1ab0277b7_Token _223151_ident) {
	{
		auto _match_expr{ _223151_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4450470176; }
		_case_begin_4450470176:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_223141_d->_field_kind,_223141_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450465504;
		_case_end_4450470176:;
		if (!((jule::Str("clear", 5)) == _match_expr)) { goto _case_end_4450469392; }
		_case_begin_4450469392:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>(),jule::Ref<_1ad3e617d_TypeKind>(),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),_223141_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_223141_d->_field_kind,_223141_d->_field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450465504;
		_case_end_4450469392:;
		if (!((jule::Str("keys", 4)) == _match_expr)) { goto _case_end_4450469840; }
		_case_begin_4450469840:;
		{
			jule::Ref<_1ad3e617d_Map> _226021_m = _223141_d->_field_kind->_method_map();
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>(),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ad3e617d_Slc>(new( std::nothrow ) _1ad3e617d_Slc(_226021_m->_field_key)))),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),_223141_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_223141_d->_field_kind,_223141_d->_field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450465504;
		_case_end_4450469840:;
		if (!((jule::Str("values", 6)) == _match_expr)) { goto _case_end_4450469952; }
		_case_begin_4450469952:;
		{
			jule::Ref<_1ad3e617d_Map> _228121_m = _223141_d->_field_kind->_method_map();
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>(),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ad3e617d_Slc>(new( std::nothrow ) _1ad3e617d_Slc(_228121_m->_field_val)))),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),_223141_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_223141_d->_field_kind,_223141_d->_field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450465504;
		_case_end_4450469952:;
		if (!((jule::Str("has", 3)) == _match_expr)) { goto _case_end_4450468992; }
		_case_begin_4450468992:;
		{
			jule::Ref<_1ad3e617d_Map> _230221_m = _223141_d->_field_kind->_method_map();
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>({jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("key", 3))),_230221_m->_field_key))}),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),_223141_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_223141_d->_field_kind,_223141_d->_field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450465504;
		_case_end_4450468992:;
		if (!((jule::Str("del", 3)) == _match_expr)) { goto _case_end_4450469104; }
		_case_begin_4450469104:;
		{
			jule::Ref<_1ad3e617d_Map> _232721_m = _223141_d->_field_kind->_method_map();
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>({jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("key", 3))),_232721_m->_field_key))}),jule::Ref<_1ad3e617d_TypeKind>(),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),_223141_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_223141_d->_field_kind,_223141_d->_field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450465504;
		_case_end_4450469104:;
		_case_begin_4450466112:;
		{
			(*this)._method_push_err(_223151_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_223151_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450465504;
		_case_end_4450466112:;
		_match_end_4450465504:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_str_sub_ident(jule::Ref<_1acde49c3_Data> _235641_d,_1ab0277b7_Token _235651_ident) {
	{
		auto _match_expr{ _235651_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4450506464; }
		_case_begin_4450506464:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_235641_d->_field_kind,_235641_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450502368;
		_case_end_4450506464:;
		if (!((jule::Str("has_prefix", 10)) == _match_expr)) { goto _case_end_4450507040; }
		_case_begin_4450507040:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>({jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("sub", 3))),_235641_d->_field_kind))}),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_235641_d->_field_kind,_235641_d->_field_model,jule::Str("has_prefix", 10)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450502368;
		_case_end_4450507040:;
		if (!((jule::Str("has_suffix", 10)) == _match_expr)) { goto _case_end_4450506704; }
		_case_begin_4450506704:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>({jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("sub", 3))),_235641_d->_field_kind))}),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_235641_d->_field_kind,_235641_d->_field_model,jule::Str("has_suffix", 10)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450502368;
		_case_end_4450506704:;
		if (!((jule::Str("find", 4)) == _match_expr)) { goto _case_end_4450506816; }
		_case_begin_4450506816:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>({jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("sub", 3))),_235641_d->_field_kind))}),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_235641_d->_field_kind,_235641_d->_field_model,jule::Str("find", 4)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450502368;
		_case_end_4450506816:;
		if (!((jule::Str("rfind", 5)) == _match_expr)) { goto _case_end_4450505856; }
		_case_begin_4450505856:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>({jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("sub", 3))),_235641_d->_field_kind))}),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_235641_d->_field_kind,_235641_d->_field_model,jule::Str("rfind", 5)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450502368;
		_case_end_4450505856:;
		if (!((jule::Str("trim", 4)) == _match_expr)) { goto _case_end_4450505968; }
		_case_begin_4450505968:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>({jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("bytes", 5))),_235641_d->_field_kind))}),_235641_d->_field_kind,jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_235641_d->_field_kind,_235641_d->_field_model,jule::Str("trim", 4)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450502368;
		_case_end_4450505968:;
		if (!((jule::Str("ltrim", 5)) == _match_expr)) { goto _case_end_4450506080; }
		_case_begin_4450506080:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>({jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("bytes", 5))),_235641_d->_field_kind))}),_235641_d->_field_kind,jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_235641_d->_field_kind,_235641_d->_field_model,jule::Str("ltrim", 5)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450502368;
		_case_end_4450506080:;
		if (!((jule::Str("rtrim", 5)) == _match_expr)) { goto _case_end_4450503280; }
		_case_begin_4450503280:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>({jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("bytes", 5))),_235641_d->_field_kind))}),_235641_d->_field_kind,jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_235641_d->_field_kind,_235641_d->_field_model,jule::Str("rtrim", 5)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450502368;
		_case_end_4450503280:;
		if (!((jule::Str("split", 5)) == _match_expr)) { goto _case_end_4450503392; }
		_case_begin_4450503392:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>({jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("sub", 3))),_235641_d->_field_kind)),jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ad3e617d_Slc>(new( std::nothrow ) _1ad3e617d_Slc(_235641_d->_field_kind)))),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_235641_d->_field_kind,_235641_d->_field_model,jule::Str("split", 5)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450502368;
		_case_end_4450503392:;
		if (!((jule::Str("replace", 7)) == _match_expr)) { goto _case_end_4450503504; }
		_case_begin_4450503504:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>({jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("sub", 3))),_235641_d->_field_kind)),jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("new", 3))),_235641_d->_field_kind)),jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("int", 3))))))}),_235641_d->_field_kind,jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_CommonSubIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonSubIdentExprModel(_235641_d->_field_kind,_235641_d->_field_model,jule::Str("replace", 7)))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450502368;
		_case_end_4450503504:;
		_case_begin_4450502976:;
		{
			(*this)._method_push_err(_235651_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_235651_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450502368;
		_case_end_4450502976:;
		_match_end_4450502368:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_int_type_static(_1ab0277b7_Token _260439_ident) {
	
	{
		auto _match_expr{ _260439_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4450562816; }
		_case_begin_4450562816:;
		{
			jule::Ref<_1ad6d5cec_Const> _260921_c = _1ad6d5cec_Const::_static_method_new_i64(static_cast<jule::I64>(_1ad6d61a4_max(jule::Str("int", 3))));
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_260921_c),jule::Bool(),_260921_c));
		}
		goto _match_end_4450558192;
		_case_end_4450562816:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4450563392; }
		_case_begin_4450563392:;
		{
			jule::Ref<_1ad6d5cec_Const> _261721_c = _1ad6d5cec_Const::_static_method_new_i64(static_cast<jule::I64>(_1ad6d61a4_min(jule::Str("int", 3))));
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_261721_c),jule::Bool(),_261721_c));
		}
		goto _match_end_4450558192;
		_case_end_4450563392:;
		_case_begin_4450559088:;
		{
			(*this)._method_push_err(_260439_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_260439_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450558192;
		_case_end_4450559088:;
		_match_end_4450558192:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_uint_type_static(_1ab0277b7_Token _263040_ident) {
	
	{
		auto _match_expr{ _263040_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4450576720; }
		_case_begin_4450576720:;
		{
			jule::Ref<_1ad6d5cec_Const> _263521_c = _1ad6d5cec_Const::_static_method_new_u64(static_cast<jule::U64>(_1ad6d61a4_max(jule::Str("uint", 4))));
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_263521_c),jule::Bool(),_263521_c));
		}
		goto _match_end_4450572096;
		_case_end_4450576720:;
		_case_begin_4450572992:;
		{
			(*this)._method_push_err(_263040_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_263040_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450572096;
		_case_end_4450572992:;
		_match_end_4450572096:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_i8_type_static(_1ab0277b7_Token _264838_ident) {
	
	
	
	{
		auto _match_expr{ _264838_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4450589152; }
		_case_begin_4450589152:;
		{
			jule::Ref<_1ad6d5cec_Const> _265521_c = _1ad6d5cec_Const::_static_method_new_i64(127LL);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_265521_c),jule::Bool(),_265521_c));
		}
		goto _match_end_4450584000;
		_case_end_4450589152:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4450588816; }
		_case_begin_4450588816:;
		{
			jule::Ref<_1ad6d5cec_Const> _266321_c = _1ad6d5cec_Const::_static_method_new_i64(-128LL);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_266321_c),jule::Bool(),_266321_c));
		}
		goto _match_end_4450584000;
		_case_end_4450588816:;
		_case_begin_4450585840:;
		{
			(*this)._method_push_err(_264838_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_264838_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450584000;
		_case_end_4450585840:;
		_match_end_4450584000:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_i16_type_static(_1ab0277b7_Token _267639_ident) {
	
	
	
	{
		auto _match_expr{ _267639_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4450603824; }
		_case_begin_4450603824:;
		{
			jule::Ref<_1ad6d5cec_Const> _268321_c = _1ad6d5cec_Const::_static_method_new_i64(32767LL);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_268321_c),jule::Bool(),_268321_c));
		}
		goto _match_end_4450598240;
		_case_end_4450603824:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4450604400; }
		_case_begin_4450604400:;
		{
			jule::Ref<_1ad6d5cec_Const> _269121_c = _1ad6d5cec_Const::_static_method_new_i64(-32768LL);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_269121_c),jule::Bool(),_269121_c));
		}
		goto _match_end_4450598240;
		_case_end_4450604400:;
		_case_begin_4450600080:;
		{
			(*this)._method_push_err(_267639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_267639_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450598240;
		_case_end_4450600080:;
		_match_end_4450598240:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_i32_type_static(_1ab0277b7_Token _270439_ident) {
	
	
	
	{
		auto _match_expr{ _270439_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4450619200; }
		_case_begin_4450619200:;
		{
			jule::Ref<_1ad6d5cec_Const> _271121_c = _1ad6d5cec_Const::_static_method_new_i64(2147483647LL);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_271121_c),jule::Bool(),_271121_c));
		}
		goto _match_end_4450613616;
		_case_end_4450619200:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4450619776; }
		_case_begin_4450619776:;
		{
			jule::Ref<_1ad6d5cec_Const> _271921_c = _1ad6d5cec_Const::_static_method_new_i64(-2147483648LL);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_271921_c),jule::Bool(),_271921_c));
		}
		goto _match_end_4450613616;
		_case_end_4450619776:;
		_case_begin_4450615456:;
		{
			(*this)._method_push_err(_270439_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_270439_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450613616;
		_case_end_4450615456:;
		_match_end_4450613616:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_i64_type_static(_1ab0277b7_Token _273239_ident) {
	
	
	
	{
		auto _match_expr{ _273239_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4450634640; }
		_case_begin_4450634640:;
		{
			jule::Ref<_1ad6d5cec_Const> _273921_c = _1ad6d5cec_Const::_static_method_new_i64(jule::MIN_I64);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_273921_c),jule::Bool(),_273921_c));
		}
		goto _match_end_4450629216;
		_case_end_4450634640:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4450635216; }
		_case_begin_4450635216:;
		{
			jule::Ref<_1ad6d5cec_Const> _274721_c = _1ad6d5cec_Const::_static_method_new_i64(jule::MAX_I64);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_274721_c),jule::Bool(),_274721_c));
		}
		goto _match_end_4450629216;
		_case_end_4450635216:;
		_case_begin_4450630896:;
		{
			(*this)._method_push_err(_273239_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_273239_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450629216;
		_case_end_4450630896:;
		_match_end_4450629216:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_u8_type_static(_1ab0277b7_Token _276038_ident) {
	
	
	{
		auto _match_expr{ _276038_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4450648672; }
		_case_begin_4450648672:;
		{
			jule::Ref<_1ad6d5cec_Const> _276621_c = _1ad6d5cec_Const::_static_method_new_u64(255LLU);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("u8", 2)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_276621_c),jule::Bool(),_276621_c));
		}
		goto _match_end_4450643120;
		_case_end_4450648672:;
		_case_begin_4450644960:;
		{
			(*this)._method_push_err(_276038_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_276038_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450643120;
		_case_end_4450644960:;
		_match_end_4450643120:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_u16_type_static(_1ab0277b7_Token _277939_ident) {
	
	
	{
		auto _match_expr{ _277939_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4450659728; }
		_case_begin_4450659728:;
		{
			jule::Ref<_1ad6d5cec_Const> _278521_c = _1ad6d5cec_Const::_static_method_new_u64(65535LLU);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("u16", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_278521_c),jule::Bool(),_278521_c));
		}
		goto _match_end_4450654176;
		_case_end_4450659728:;
		_case_begin_4450656016:;
		{
			(*this)._method_push_err(_277939_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_277939_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450654176;
		_case_end_4450656016:;
		_match_end_4450654176:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_u32_type_static(_1ab0277b7_Token _279839_ident) {
	
	
	{
		auto _match_expr{ _279839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4450670784; }
		_case_begin_4450670784:;
		{
			jule::Ref<_1ad6d5cec_Const> _280421_c = _1ad6d5cec_Const::_static_method_new_u64(4294967295LLU);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("u32", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_280421_c),jule::Bool(),_280421_c));
		}
		goto _match_end_4450665232;
		_case_end_4450670784:;
		_case_begin_4450667072:;
		{
			(*this)._method_push_err(_279839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_279839_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450665232;
		_case_end_4450667072:;
		_match_end_4450665232:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_u64_type_static(_1ab0277b7_Token _281739_ident) {
	
	
	{
		auto _match_expr{ _281739_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4450681680; }
		_case_begin_4450681680:;
		{
			jule::Ref<_1ad6d5cec_Const> _282321_c = _1ad6d5cec_Const::_static_method_new_u64(jule::MAX_U64);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("u64", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_282321_c),jule::Bool(),_282321_c));
		}
		goto _match_end_4450676288;
		_case_end_4450681680:;
		_case_begin_4450677968:;
		{
			(*this)._method_push_err(_281739_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_281739_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450676288;
		_case_end_4450677968:;
		_match_end_4450676288:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_f32_type_tatic(_1ab0277b7_Token _283638_ident) {
	
	
	
	{
		auto _match_expr{ _283638_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4450693920; }
		_case_begin_4450693920:;
		{
			jule::Ref<_1ad6d5cec_Const> _284321_c = _1ad6d5cec_Const::_static_method_new_f64(340282346638528860000000000000000000000.0);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_284321_c),jule::Bool(),_284321_c));
		}
		goto _match_end_4450688384;
		_case_end_4450693920:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4450694496; }
		_case_begin_4450694496:;
		{
			jule::Ref<_1ad6d5cec_Const> _285121_c = _1ad6d5cec_Const::_static_method_new_f64(-340282346638528860000000000000000000000.0);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_285121_c),jule::Bool(),_285121_c));
		}
		goto _match_end_4450688384;
		_case_end_4450694496:;
		_case_begin_4450690192:;
		{
			(*this)._method_push_err(_283638_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_283638_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450688384;
		_case_end_4450690192:;
		_match_end_4450688384:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_f64_type_static(_1ab0277b7_Token _286439_ident) {
	
	
	
	{
		auto _match_expr{ _286439_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4450708688; }
		_case_begin_4450708688:;
		{
			jule::Ref<_1ad6d5cec_Const> _287121_c = _1ad6d5cec_Const::_static_method_new_f64(jule::MAX_F64);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287121_c),jule::Bool(),_287121_c));
		}
		goto _match_end_4450703312;
		_case_end_4450708688:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4450709264; }
		_case_begin_4450709264:;
		{
			jule::Ref<_1ad6d5cec_Const> _287921_c = _1ad6d5cec_Const::_static_method_new_f64(jule::MIN_F64);
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287921_c),jule::Bool(),_287921_c));
		}
		goto _match_end_4450703312;
		_case_end_4450709264:;
		_case_begin_4450704960:;
		{
			(*this)._method_push_err(_286439_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_286439_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450703312;
		_case_end_4450704960:;
		_match_end_4450703312:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_prim_static(jule::Str _289235_kind,_1ab0277b7_Token _289246_ident) {
	{
		auto _match_expr{ _289235_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4450721248; }
		_case_begin_4450721248:;
		{
			return (*this)._method_eval_int_type_static(_289246_ident);
		}
		goto _match_end_4450717152;
		_case_end_4450721248:;
		if (!((jule::Str("uint", 4)) == _match_expr)) { goto _case_end_4450721824; }
		_case_begin_4450721824:;
		{
			return (*this)._method_eval_uint_type_static(_289246_ident);
		}
		goto _match_end_4450717152;
		_case_end_4450721824:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4450721040; }
		_case_begin_4450721040:;
		{
			return (*this)._method_eval_i8_type_static(_289246_ident);
		}
		goto _match_end_4450717152;
		_case_end_4450721040:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4450720640; }
		_case_begin_4450720640:;
		{
			return (*this)._method_eval_i16_type_static(_289246_ident);
		}
		goto _match_end_4450717152;
		_case_end_4450720640:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4450720752; }
		_case_begin_4450720752:;
		{
			return (*this)._method_eval_i32_type_static(_289246_ident);
		}
		goto _match_end_4450717152;
		_case_end_4450720752:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4450720864; }
		_case_begin_4450720864:;
		{
			return (*this)._method_eval_i64_type_static(_289246_ident);
		}
		goto _match_end_4450717152;
		_case_end_4450720864:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4450717936; }
		_case_begin_4450717936:;
		{
			return (*this)._method_eval_u8_type_static(_289246_ident);
		}
		goto _match_end_4450717152;
		_case_end_4450717936:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4450718048; }
		_case_begin_4450718048:;
		{
			return (*this)._method_eval_u16_type_static(_289246_ident);
		}
		goto _match_end_4450717152;
		_case_end_4450718048:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4450718160; }
		_case_begin_4450718160:;
		{
			return (*this)._method_eval_u32_type_static(_289246_ident);
		}
		goto _match_end_4450717152;
		_case_end_4450718160:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4450721984; }
		_case_begin_4450721984:;
		{
			return (*this)._method_eval_u64_type_static(_289246_ident);
		}
		goto _match_end_4450717152;
		_case_end_4450721984:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4450722096; }
		_case_begin_4450722096:;
		{
			return (*this)._method_eval_f32_type_tatic(_289246_ident);
		}
		goto _match_end_4450717152;
		_case_end_4450722096:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4450722208; }
		_case_begin_4450722208:;
		{
			return (*this)._method_eval_f64_type_static(_289246_ident);
		}
		goto _match_end_4450717152;
		_case_end_4450722208:;
		_case_begin_4450717552:;
		{
			(*this)._method_push_err(_289246_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_289235_kind),jule::Any(_289246_ident._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450717152;
		_case_end_4450717552:;
		_match_end_4450717152:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_type_static(jule::Ref<_1acde49c3_Data> _291239_d,jule::Ref<_1aaeea1c4_SubIdentExpr> _291253_si) {
	{
		if (!((jule::real(_291239_d->_field_kind->_method_prim())))) { goto _case_end_4450741696; }
		_case_begin_4450741696:;
		{
			return (*this)._method_eval_prim_static(_291239_d->_field_kind->_method_prim()->_method_to_str(),_291253_si->_field_ident);
		}
		goto _match_end_4450737536;
		_case_end_4450741696:;
		if (!((jule::real(_291239_d->_field_kind->_method_enm())))) { goto _case_end_4450742272; }
		_case_begin_4450742272:;
		{
			return (*this)._method_eval_enum_static(_291239_d->_field_kind->_method_enm(),_291253_si->_field_ident);
		}
		goto _match_end_4450737536;
		_case_end_4450742272:;
		if (!((jule::real(_291239_d->_field_kind->_method_strct())))) { goto _case_end_4450741488; }
		_case_begin_4450741488:;
		{
			return (*this)._method_eval_struct_static(_291239_d->_field_kind->_method_strct(),_291253_si->_field_ident);
		}
		goto _match_end_4450737536;
		_case_end_4450741488:;
		_case_begin_4450737728:;
		{
			(*this)._method_push_err(_291253_si->_field_ident,jule::Str("type @ is not supports sub fields", 33),jule::Slice<jule::Any>({jule::Any(_291239_d->_field_kind->_method_to_str())}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450737536;
		_case_end_4450737728:;
		_match_end_4450737536:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_obj_sub_ident(jule::Ref<_1acde49c3_Data> _292941_d,jule::Ref<_1aaeea1c4_SubIdentExpr> _292955_si) {
	jule::Ref<_1ad3e617d_TypeKind> _293017_kind = _292941_d->_field_kind;
	if (jule::real(_292941_d->_field_kind->_method_ptr())) {
		jule::Ref<_1ad3e617d_Ptr> _293217_ptr = _292941_d->_field_kind->_method_ptr();
		if ((!(_293217_ptr->_method_is_unsafe()))) {
			if ((!(_292955_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_292955_si->_field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			}
			_293017_kind=_292941_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (jule::real(_292941_d->_field_kind->_method_ref())) {
		_293017_kind=_292941_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real(_292941_d->_field_kind->_method_trt())))) { goto _case_end_4450762944; }
		_case_begin_4450762944:;
		{
			return (*this)._method_eval_trait_sub_ident(_292941_d,_292941_d->_field_kind->_method_trt(),_292955_si->_field_ident);
		}
		goto _match_end_4450761328;
		_case_end_4450762944:;
		if (!((jule::real(_293017_kind->_method_strct())))) { goto _case_end_4450763056; }
		_case_begin_4450763056:;
		{
			jule::Ref<_1ab064271_StructIns> _294817_s = _293017_kind->_method_strct();
			if (_1acde49c3_is_instanced_struct(_294817_s)) {
				jule::Bool _295025_used_reference_elem = jule::real(_292941_d->_field_kind->_method_ref());
				return (*this)._method_eval_struct_sub_ident(_292941_d,_293017_kind->_method_strct(),_292955_si,_295025_used_reference_elem);
			}
		}
		goto _match_end_4450761328;
		_case_end_4450763056:;
		if (!((jule::real(_293017_kind->_method_slc())))) { goto _case_end_4450763168; }
		_case_begin_4450763168:;
		{
			return (*this)._method_eval_slice_sub_ident(_292941_d,_292955_si->_field_ident);
		}
		goto _match_end_4450761328;
		_case_end_4450763168:;
		if (!((jule::real(_293017_kind->_method_arr())))) { goto _case_end_4450763280; }
		_case_begin_4450763280:;
		{
			return (*this)._method_eval_array_sub_ident(_292941_d,_292955_si->_field_ident);
		}
		goto _match_end_4450761328;
		_case_end_4450763280:;
		if (!((jule::real(_293017_kind->_method_map())))) { goto _case_end_4450763392; }
		_case_begin_4450763392:;
		{
			return (*this)._method_eval_map_sub_ident(_292941_d,_292955_si->_field_ident);
		}
		goto _match_end_4450761328;
		_case_end_4450763392:;
		if (!((jule::real(_293017_kind->_method_prim())))) { goto _case_end_4450763504; }
		_case_begin_4450763504:;
		{
			jule::Ref<_1ad3e617d_Prim> _296417_p = _293017_kind->_method_prim();
			{
				auto _match_expr{ _296417_p->_field_kind };
				if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4450779184; }
				_case_begin_4450779184:;
				{
					return (*this)._method_eval_str_sub_ident(_292941_d,_292955_si->_field_ident);
				}
				goto _match_end_4450778528;
				_case_end_4450779184:;
				_match_end_4450778528:;
			}
		}
		goto _match_end_4450761328;
		_case_end_4450763504:;
		_match_end_4450761328:;
	}
	(*this)._method_push_err(_292955_si->_field_ident,jule::Str("object @ is not supports sub fields", 35),jule::Slice<jule::Any>({jule::Any(_292941_d->_field_kind->_method_to_str())}));
	return jule::new_ref<_1acde49c3_Data>();
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_sub_ident(jule::Ref<_1aaeea1c4_SubIdentExpr> _297538_si) {
	jule::Ref<_1ad3e617d_TypeKind> _297617_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_297617_prefix;
	});
	jule::Ref<_1acde49c3_Data> _298017_d = this->self->_method_eval_expr_kind(_297538_si->_field_expr);
	if ((!(jule::real(_298017_d)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_298017_d->_field_decl) {
		return this->self->_method_eval_type_static(_298017_d,_297538_si);
	}
	return this->self->_method_eval_obj_sub_ident(_298017_d,_297538_si);
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_tuple(jule::Ref<_1aaeea1c4_TupleExpr> _299234_tup) {
	jule::Ref<_1ad3e617d_Tuple> _299317_tup_t = jule::new_struct<_1ad3e617d_Tuple>(new( std::nothrow ) _1ad3e617d_Tuple());
	_299317_tup_t->_field_types=jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_299234_tup->_field_expr.len())));
	jule::Ref<_1ab0a4954_TupleExprModel> _299617_model = jule::new_struct<_1ab0a4954_TupleExprModel>(new( std::nothrow ) _1ab0a4954_TupleExprModel(jule::Slice<jule::Ref<_1acde49c3_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_299234_tup->_field_expr.len())))));
	jule::Bool _300017_ok = true;
	{
		auto _range_expr = _299234_tup->_field_expr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acde49c3_i = 0;
			jule::Ref<_1aaeea1c4_Expr> _1acde49c3_expr = *_range_begin;
			_iter_begin_4450802672:;
			{
				jule::Ref<_1acde49c3_Data> _300221_d = this->self->_method_eval_expr_kind(_1acde49c3_expr->_field_kind);
				if ((!(jule::real(_300221_d)))) {
					_300017_ok=false;
					goto _iter_next_4450802672;
				}
				_299317_tup_t->_field_types[static_cast<jule::Int>(_1acde49c3_i)]=_300221_d->_field_kind;
				_299617_model->_field_datas[static_cast<jule::Int>(_1acde49c3_i)]=_300221_d;
			}
			_iter_next_4450802672:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acde49c3_i; _1acde49c3_expr = *_range_begin; goto _iter_begin_4450802672; }
			_iter_end_4450802672:;
		}
	}
	if ((!(_300017_ok))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_299317_tup_t)),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_299617_model),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_map(jule::Ref<_1ad3e617d_Map> _302132_m,jule::Ref<_1aaeea1c4_BraceLit> _302145_lit) {
	jule::Ref<_1ab0a4954_MapExprModel> _302217_model = jule::new_struct<_1ab0a4954_MapExprModel>(new( std::nothrow ) _1ab0a4954_MapExprModel(_302132_m->_field_key,_302132_m->_field_val,jule::Slice<jule::Ref<_1ab0a4954_KeyValPairExprModel>>()));
	{
		auto _range_expr = _302145_lit->_field_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1acde49c3_expr = *_range_begin;
			_iter_begin_4450818624:;
			{
				{
					auto _match_expr{ _1acde49c3_expr };
					if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_KeyValPair>>())) { goto _case_end_4450822880; }
					goto _match_end_4450819840;
					_case_end_4450822880:;
					_case_begin_4450820368:;
					{
						this->self->_method_push_err(_302145_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						return jule::new_ref<_1acde49c3_Data>();
					}
					goto _match_end_4450819840;
					_case_end_4450820368:;
					_match_end_4450819840:;
				}
				jule::Ref<_1aaeea1c4_KeyValPair> _303721_pair = _1acde49c3_expr.operator jule::Ref<_1aaeea1c4_KeyValPair>();
				jule::Ref<_1acde49c3_Data> _303921_key = this->self->_method_eval_expr_kind(_303721_pair->_field_key);
				if ((!(jule::real(_303921_key)))) {
					return jule::new_ref<_1acde49c3_Data>();
				}
				jule::Ref<_1acde49c3_Data> _304421_val = this->self->_method_eval_expr_kind(_303721_pair->_field_val);
				if ((!(jule::real(_304421_val)))) {
					return jule::new_ref<_1acde49c3_Data>();
				}
				this->self->_field_s->_method_check_assign_type(_302132_m->_field_key,_303921_key,_303721_pair->_field_colon,true);
				this->self->_field_s->_method_check_assign_type(_302132_m->_field_val,_304421_val,_303721_pair->_field_colon,true);
				_302217_model->_field_entries=jule::append(_302217_model->_field_entries,jule::Slice<jule::Ref<_1ab0a4954_KeyValPairExprModel>>({jule::new_struct<_1ab0a4954_KeyValPairExprModel>(new( std::nothrow ) _1ab0a4954_KeyValPairExprModel(_303921_key->_field_model,_304421_val->_field_model))}));
			}
			_iter_next_4450818624:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde49c3_expr = *_range_begin; goto _iter_begin_4450818624; }
			_iter_end_4450818624:;
		}
	}
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_302132_m)),jule::Ref<_1ad3e617d_TypeKind>(),true,jule::Bool(),false,false,jule::Bool(),jule::Any(_302217_model),false,jule::Ref<_1ad6d5cec_Const>()));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_brace_lit(jule::Ref<_1aaeea1c4_BraceLit> _306838_lit) {
	{
		if (!(((!(jule::real(this->self->_field_prefix)))))) { goto _case_end_4450841040; }
		_case_begin_4450841040:;
		{
			this->self->_method_push_err(_306838_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450838320;
		_case_end_4450841040:;
		if (!((jule::real(this->self->_field_prefix->_method_map())))) { goto _case_end_4450842224; }
		_case_begin_4450842224:;
		{
			return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_306838_lit);
		}
		goto _match_end_4450838320;
		_case_end_4450842224:;
		if (!((jule::real(this->self->_field_prefix->_method_strct())))) { goto _case_end_4450841888; }
		_case_begin_4450841888:;
		{
			return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_306838_lit->_field_exprs,_306838_lit->_field_token);
		}
		goto _match_end_4450838320;
		_case_end_4450841888:;
		_case_begin_4450838496:;
		{
			this->self->_method_push_err(_306838_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450838320;
		_case_end_4450838496:;
		_match_end_4450838320:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_anon_fn(jule::Ref<_1aaeea1c4_FnDecl> _308635_decl) {
	_1ad3e617d_TypeChecker _308717_tc = _1ad3e617d_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1ad3e617d_Referencer>(),_1ab0277b7_Token(),jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>(),jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>(),jule::Bool());
	jule::Ref<_1ab07a50c_FnIns> _309117_ins = _308717_tc._method_build_fn(_308635_decl);
	_309117_ins->_field_anon=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_ScopeChecker>>())) { goto _case_end_4450858096; }
		_case_begin_4450858096:;
		{
			jule::Ref<_1ac77dd1e_ScopeChecker> _309621_sc = (*this)._field_lookup.operator jule::Ref<_1ac77dd1e_ScopeChecker>();
			jule::Ref<_1ac77dd1e_ScopeChecker> _309721_scc = _309621_sc->_method_new_child_checker();
			_309721_scc->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_1ac77dd1e_ScopeLabel>>>(nullptr);
			_309721_scc->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_1ac77dd1e_ScopeGoto>>>(nullptr);
			jule::drop(_309721_scc->_field_owner);
			_309721_scc->_field_child_index=0LL;
			_309721_scc->_field_it=0LL;
			_309721_scc->_field_cse=0LL;
			_309721_scc->_field_owner=_309117_ins;
			(*this)._field_s->_method_check_fn_ins_sc(_309117_ins,_309721_scc);
		}
		goto _match_end_4450854912;
		_case_end_4450858096:;
		_case_begin_4450856032:;
		{
			(*this)._field_s->_method_check_fn_ins(_309117_ins);
		}
		goto _match_end_4450854912;
		_case_end_4450856032:;
		_match_end_4450854912:;
	}
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_309117_ins)),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab0a4954_AnonFnExprModel>(new( std::nothrow ) _1ab0a4954_AnonFnExprModel(_309117_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_binop(jule::Ref<_1aaeea1c4_BinopExpr> _312034_op) {
	jule::Ref<_1ad3e617d_TypeKind> _312117_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_312117_prefix;
	});
	_1acde49c3_BinopSolver _312517_bs = _1acde49c3_BinopSolver(this->self,jule::Ref<_1acde49c3_Data>(),jule::Ref<_1acde49c3_Data>(),_1ab0277b7_Token());
	return _312517_bs._method_solve(_312034_op);
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_expr_kind(jule::Any _313138_kind) {
	jule::Ref<_1acde49c3_Data> _313217_d = jule::new_ref<_1acde49c3_Data>();
	{
		auto _match_expr{ _313138_kind };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_LitExpr>>())) { goto _case_end_4450881120; }
		_case_begin_4450881120:;
		{
			_313217_d=this->self->_method_eval_lit(_313138_kind.operator jule::Ref<_1aaeea1c4_LitExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450881120:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_IdentExpr>>())) { goto _case_end_4450880448; }
		_case_begin_4450880448:;
		{
			_313217_d=this->self->_method_eval_ident(_313138_kind.operator jule::Ref<_1aaeea1c4_IdentExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450880448:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_UnaryExpr>>())) { goto _case_end_4450880560; }
		_case_begin_4450880560:;
		{
			_313217_d=this->self->_method_eval_unary(_313138_kind.operator jule::Ref<_1aaeea1c4_UnaryExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450880560:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_VariadicExpr>>())) { goto _case_end_4450880672; }
		_case_begin_4450880672:;
		{
			_313217_d=this->self->_method_eval_variadic(_313138_kind.operator jule::Ref<_1aaeea1c4_VariadicExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450880672:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_UnsafeExpr>>())) { goto _case_end_4450881600; }
		_case_begin_4450881600:;
		{
			_313217_d=this->self->_method_eval_unsafe(_313138_kind.operator jule::Ref<_1aaeea1c4_UnsafeExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450881600:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_SliceExpr>>())) { goto _case_end_4450881712; }
		_case_begin_4450881712:;
		{
			_313217_d=this->self->_method_eval_slice_expr(_313138_kind.operator jule::Ref<_1aaeea1c4_SliceExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450881712:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_IndexingExpr>>())) { goto _case_end_4450881824; }
		_case_begin_4450881824:;
		{
			_313217_d=this->self->_method_eval_indexing(_313138_kind.operator jule::Ref<_1aaeea1c4_IndexingExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450881824:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_SlicingExpr>>())) { goto _case_end_4450881936; }
		_case_begin_4450881936:;
		{
			_313217_d=this->self->_method_eval_slicing(_313138_kind.operator jule::Ref<_1aaeea1c4_SlicingExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450881936:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_CastExpr>>())) { goto _case_end_4450882048; }
		_case_begin_4450882048:;
		{
			_313217_d=this->self->_method_eval_cast(_313138_kind.operator jule::Ref<_1aaeea1c4_CastExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450882048:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_NsSelectionExpr>>())) { goto _case_end_4450882160; }
		_case_begin_4450882160:;
		{
			_313217_d=this->self->_method_eval_ns_selection(_313138_kind.operator jule::Ref<_1aaeea1c4_NsSelectionExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450882160:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_StructLit>>())) { goto _case_end_4450882272; }
		_case_begin_4450882272:;
		{
			_313217_d=this->self->_method_eval_struct_lit(_313138_kind.operator jule::Ref<_1aaeea1c4_StructLit>());
		}
		goto _match_end_4450878784;
		_case_end_4450882272:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_TypeDecl>>())) { goto _case_end_4450882384; }
		_case_begin_4450882384:;
		{
			_313217_d=this->self->_method_eval_type(_313138_kind.operator jule::Ref<_1aaeea1c4_TypeDecl>());
		}
		goto _match_end_4450878784;
		_case_end_4450882384:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_FnCallExpr>>())) { goto _case_end_4450882496; }
		_case_begin_4450882496:;
		{
			_313217_d=this->self->_method_eval_fn_call(_313138_kind.operator jule::Ref<_1aaeea1c4_FnCallExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450882496:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_SubIdentExpr>>())) { goto _case_end_4450882608; }
		_case_begin_4450882608:;
		{
			_313217_d=this->self->_method_eval_sub_ident(_313138_kind.operator jule::Ref<_1aaeea1c4_SubIdentExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450882608:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_TupleExpr>>())) { goto _case_end_4450882720; }
		_case_begin_4450882720:;
		{
			_313217_d=this->self->_method_eval_tuple(_313138_kind.operator jule::Ref<_1aaeea1c4_TupleExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450882720:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_BraceLit>>())) { goto _case_end_4450882832; }
		_case_begin_4450882832:;
		{
			_313217_d=this->self->_method_eval_brace_lit(_313138_kind.operator jule::Ref<_1aaeea1c4_BraceLit>());
		}
		goto _match_end_4450878784;
		_case_end_4450882832:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_FnDecl>>())) { goto _case_end_4450882944; }
		_case_begin_4450882944:;
		{
			_313217_d=this->self->_method_eval_anon_fn(_313138_kind.operator jule::Ref<_1aaeea1c4_FnDecl>());
		}
		goto _match_end_4450878784;
		_case_end_4450882944:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_BinopExpr>>())) { goto _case_end_4450883072; }
		_case_begin_4450883072:;
		{
			_313217_d=this->self->_method_eval_binop(_313138_kind.operator jule::Ref<_1aaeea1c4_BinopExpr>());
		}
		goto _match_end_4450878784;
		_case_end_4450883072:;
		_case_begin_4450879728:;
		{
			jule::drop(_313217_d);
		}
		goto _match_end_4450878784;
		_case_end_4450879728:;
		_match_end_4450878784:;
	}
	if ((!(jule::real(_313217_d)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if ((!(jule::real(_313217_d->_field_kind)))) {
		return _313217_d;
	}
	if ((((!(jule::real(_313217_d->_field_cast_kind))) && _313217_d->_method_is_const()) && (!(_313217_d->_field_is_rune))) && jule::real(_313217_d->_field_kind->_method_prim())) {
		{
			if (!((_313217_d->_field_constant->_method_is_i64()))) { goto _case_end_4450916736; }
			_case_begin_4450916736:;
			{
				if (_1acc33119_int_assignable(jule::Str("int", 3),_313217_d)) {
					_313217_d->_field_kind->_field_kind=_1ad3e617d_build_prim_type(jule::Str("int", 3));
				}
			}
			goto _match_end_4450916512;
			_case_end_4450916736:;
			if (!((_313217_d->_field_constant->_method_is_u64()))) { goto _case_end_4450916864; }
			_case_begin_4450916864:;
			{
				if (_1acc33119_int_assignable(jule::Str("uint", 4),_313217_d)) {
					_313217_d->_field_kind->_field_kind=_1ad3e617d_build_prim_type(jule::Str("uint", 4));
				}
			}
			goto _match_end_4450916512;
			_case_end_4450916864:;
			_match_end_4450916512:;
		}
	}
	if ((!(_313217_d->_field_decl))) {
		if ((((((jule::real(this->self->_field_prefix) && (!(jule::real(_313217_d->_field_cast_kind)))) && (!(_313217_d->_field_variadiced))) && (!(_313217_d->_field_lvalue))) && (!(_313217_d->_method_is_const()))) && jule::real(_313217_d->_field_kind->_method_prim())) && _1ad70d41d_is_num(_313217_d->_field_kind->_method_prim()->_field_kind)) {
			_313217_d->_field_cast_kind=_313217_d->_field_kind;
		}
		_1acde49c3_apply_cast_kind(_313217_d);
		if ((!(jule::real(_313217_d->_field_kind->_method_prim()))) || (!(_313217_d->_field_kind->_method_prim()->_method_is_any()))) {
			if ((jule::real(this->self->_field_prefix) && jule::real(this->self->_field_prefix->_method_prim())) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_313217_d->_field_cast_kind=this->self->_field_prefix;
				_1acde49c3_apply_cast_kind_model(_313217_d);
				jule::drop(_313217_d->_field_cast_kind);
			}
		}
	}
	return _313217_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval(jule::Ref<_1aaeea1c4_Expr> _320528_expr) {
	jule::Ref<_1acde49c3_Data> _320617_d = this->self->_method_eval_expr_kind(_320528_expr->_field_kind);
	if ((!(jule::real(_320617_d))) || (!(jule::real(_320617_d->_field_kind)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		if (!((jule::real(_320617_d->_field_kind->_method_fnc())))) { goto _case_end_4450940960; }
		_case_begin_4450940960:;
		{
			jule::Ref<_1ab07a50c_FnIns> _321321_f = _320617_d->_field_kind->_method_fnc();
			if (_321321_f->_method_is_builtin()) {
				goto _match_end_4450940720;
			}
			if (_321321_f->_field_generics.len() != _321321_f->_field_decl->_field_generics.len()) {
				this->self->_field_s->_method_push_err(_320528_expr->_field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			}
			if (_321321_f->_field_decl->_method_is_method()) {
				this->self->_field_s->_method_push_err(_320528_expr->_field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4450940720;
		_case_end_4450940960:;
		_match_end_4450940720:;
	}
	return _320617_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_Eval::_method_eval_expr(jule::Ref<_1aaeea1c4_Expr> _323333_expr) {
	jule::Ref<_1acde49c3_Data> _323417_d = this->self->_method_eval(_323333_expr);
	{
		if (!(((!(jule::real(_323417_d)))))) { goto _case_end_4450955520; }
		_case_begin_4450955520:;
		{
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450953936;
		_case_end_4450955520:;
		if (!((_323417_d->_field_decl))) { goto _case_end_4450955872; }
		_case_begin_4450955872:;
		{
			this->self->_method_push_err(_323333_expr->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450953936;
		_case_end_4450955872:;
		_case_begin_4450954160:;
		{
			return _323417_d;
		}
		goto _match_end_4450953936;
		_case_end_4450954160:;
		_match_end_4450953936:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1acde49c3_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acde49c3_BinopSolver::_method_check_type_compatibility(void) {
	_1acc33119_TypeCompatibilityChecker _325817_tcc = _1acc33119_TypeCompatibilityChecker((*this)._field_e->_field_s,(*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op,jule::Bool(),true,jule::Bool());
	return _325817_tcc._method_check();
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_nil(void) {
	if ((!(_1ad3e617d_is_nil_compatible((*this)._field_r->_field_kind)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4450974208; }
		_case_begin_4450974208:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450969280;
		_case_end_4450974208:;
		_case_begin_4450964880:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450969280;
		_case_end_4450964880:;
		_match_end_4450969280:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_enum(void) {
	jule::Ref<_1ac7804a2_Enum> _329017_enm = (*this)._field_l->_field_kind->_method_enm();
	if ((!(jule::real((*this)._field_r->_field_kind->_method_enm()))) || ((_329017_enm).alloc != ((*this)._field_r->_field_kind->_method_enm()).alloc)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_329017_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4450989616; }
		_case_begin_4450989616:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4450979456;
		_case_end_4450989616:;
		if (!((jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr)) { goto _case_end_4450990192; }
		_case_begin_4450990192:;
		{
			if ((!(jule::real(_329017_enm->_field_kind->_field_kind->_method_prim()))) || (!(_1ad70d41d_is_int(_329017_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_329017_enm->_field_ident)}));
			}
			return (*this)._field_l;
		}
		goto _match_end_4450979456;
		_case_end_4450990192:;
		_case_begin_4450985040:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_329017_enm->_field_ident)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4450979456;
		_case_end_4450985040:;
		_match_end_4450979456:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_ptr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4451008752; }
		_case_begin_4451008752:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4451004080;
		_case_end_4451008752:;
		_case_begin_4450998496:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451004080;
		_case_end_4450998496:;
		_match_end_4451004080:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4451021712; }
		_case_begin_4451021712:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4451017136;
		_case_end_4451021712:;
		_case_begin_4451015968:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451017136;
		_case_end_4451015968:;
		_match_end_4451017136:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4451034288; }
		_case_begin_4451034288:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4451029648;
		_case_end_4451034288:;
		_case_begin_4451028656:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451029648;
		_case_end_4451028656:;
		_match_end_4451029648:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4451045792; }
		_case_begin_4451045792:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4451041216;
		_case_end_4451045792:;
		_case_begin_4449602032:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451041216;
		_case_end_4449602032:;
		_match_end_4451041216:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4451058304; }
		_case_begin_4451058304:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4451053728;
		_case_end_4451058304:;
		_case_begin_4451052560:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451053728;
		_case_end_4451052560:;
		_match_end_4451053728:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4451070816; }
		_case_begin_4451070816:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4451066240;
		_case_end_4451070816:;
		_case_begin_4451065072:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451066240;
		_case_end_4451065072:;
		_match_end_4451066240:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_any(void) {
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4451076960; }
		_case_begin_4451076960:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4451073280;
		_case_end_4451076960:;
		_case_begin_4451073632:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451073280;
		_case_end_4451073632:;
		_match_end_4451073280:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("&&", 2)) == _match_expr || (jule::Str("||", 2)) == _match_expr)) { goto _case_end_4451090832; }
		_case_begin_4451090832:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4451086128;
		_case_end_4451090832:;
		_case_begin_4451085056:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451086128;
		_case_end_4451085056:;
		_match_end_4451086128:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_str(void) {
	jule::Str _348417_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_348417_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_348417_rk)}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4451102160; }
		_case_begin_4451102160:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4451098992;
		_case_end_4451102160:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4451103024; }
		_case_begin_4451103024:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4451098992;
		_case_end_4451103024:;
		_case_begin_4451098240:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451098992;
		_case_end_4451098240:;
		_match_end_4451098992:;
	}
}



inline void _1acde49c3_BinopSolver::_method_set_type_to_greater(void) {
	if (((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!((*this)._field_l->_method_is_const())) && (!((*this)._field_r->_method_is_const())))) {
		jule::Str _351017_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _351117_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_1ad7937e4_is_greater(_351117_rk,_351017_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



inline void _1acde49c3_BinopSolver::_method_check_mod_data(jule::Ref<_1acde49c3_Data> _352637_d) {
	if ((!(_352637_d->_method_is_const()))) {
		if ((!(jule::real(_352637_d->_field_kind->_method_prim()))) || (!(_1ad70d41d_is_int(_352637_d->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		return;
	}
	{
		if (!((_1acc33119_sig_assignable(jule::Str("i64", 3),_352637_d)))) { goto _case_end_4451127776; }
		_case_begin_4451127776:;
		{
			_352637_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_352637_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4451120016;
		_case_end_4451127776:;
		if (!((_1acc33119_unsig_assignable(jule::Str("u64", 3),_352637_d)))) { goto _case_end_4451127888; }
		_case_begin_4451127888:;
		{
			_352637_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_352637_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4451120016;
		_case_end_4451127888:;
		_case_begin_4451120144:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4451120016;
		_case_end_4451120144:;
		_match_end_4451120016:;
	}
}



inline void _1acde49c3_BinopSolver::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_float(void) {
	jule::Str _355213_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _355313_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!(_1ad70d41d_is_num(_355213_lk))) || (!(_1ad70d41d_is_num(_355313_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_355213_lk),jule::Any(_355313_rk)}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4451141968; }
		_case_begin_4451141968:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4451145408;
		_case_end_4451141968:;
		_match_end_4451145408:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr)) { goto _case_end_4451152816; }
		_case_begin_4451152816:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4451148688;
		_case_end_4451152816:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4451153392; }
		_case_begin_4451153392:;
		{
			if ((!(_1ad70d41d_is_int(_355313_rk)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_355213_lk),jule::Any(_355313_rk)}));
				return jule::new_ref<_1acde49c3_Data>();
			}
			(*this)._method_mod();
			return (*this)._field_r;
		}
		goto _match_end_4451148688;
		_case_end_4451153392:;
		_case_begin_4451146240:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451148688;
		_case_end_4451146240:;
		_match_end_4451148688:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _359813_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _359913_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!(_1ad70d41d_is_num(_359813_lk))) || (!(_1ad70d41d_is_num(_359913_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_359813_lk),jule::Any(_359913_rk)}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4451163520; }
		_case_begin_4451163520:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4451167104;
		_case_end_4451163520:;
		_match_end_4451167104:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4451174512; }
		_case_begin_4451174512:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4451170384;
		_case_end_4451174512:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4451175088; }
		_case_begin_4451175088:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4451170384;
		_case_end_4451175088:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4451174304; }
		_case_begin_4451174304:;
		{
			if ((!(_1acde49c3_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1acde49c3_Data>();
			}
			if ((*this)._field_l->_method_is_const()) {
				(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
			}
			return (*this)._field_l;
		}
		goto _match_end_4451170384;
		_case_end_4451174304:;
		_case_begin_4451167936:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for unsigned integer type(s)", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451170384;
		_case_end_4451167936:;
		_match_end_4451170384:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _365713_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _365813_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!(_1ad70d41d_is_num(_365713_lk))) || (!(_1ad70d41d_is_num(_365813_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_365713_lk),jule::Any(_365813_rk)}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4451188864; }
		_case_begin_4451188864:;
		{
			return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
		}
		goto _match_end_4451192448;
		_case_end_4451188864:;
		_match_end_4451192448:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4451199840; }
		_case_begin_4451199840:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4451195728;
		_case_end_4451199840:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4451200416; }
		_case_begin_4451200416:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4451195728;
		_case_end_4451200416:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4451199632; }
		_case_begin_4451199632:;
		{
			if ((!(_1acde49c3_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1acde49c3_Data>();
			}
			return (*this)._field_l;
		}
		goto _match_end_4451195728;
		_case_end_4451199632:;
		_case_begin_4451193280:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451195728;
		_case_end_4451193280:;
		_match_end_4451195728:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval_prim(void) {
	jule::Ref<_1ad3e617d_Prim> _371213_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (!((_371213_prim->_method_is_any()))) { goto _case_end_4451227040; }
		_case_begin_4451227040:;
		{
			return (*this)._method_eval_any();
		}
		goto _match_end_4451226848;
		_case_end_4451227040:;
		if (!((_371213_prim->_method_is_bool()))) { goto _case_end_4451227168; }
		_case_begin_4451227168:;
		{
			return (*this)._method_eval_bool();
		}
		goto _match_end_4451226848;
		_case_end_4451227168:;
		if (!((_371213_prim->_method_is_str()))) { goto _case_end_4451227296; }
		_case_begin_4451227296:;
		{
			return (*this)._method_eval_str();
		}
		goto _match_end_4451226848;
		_case_end_4451227296:;
		_match_end_4451226848:;
	}
	jule::Ref<_1ad3e617d_Prim> _371913_rprim = (*this)._field_r->_field_kind->_method_prim();
	if ((!(jule::real(_371913_rprim)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_371213_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Str _372513_lk = _371213_prim->_method_to_str();
	{
		if (!((_1ad70d41d_is_float(_372513_lk)))) { goto _case_end_4451240912; }
		_case_begin_4451240912:;
		{
			return (*this)._method_eval_float();
		}
		goto _match_end_4451233296;
		_case_end_4451240912:;
		if (!((_1ad70d41d_is_unsig_int(_372513_lk)))) { goto _case_end_4451239920; }
		_case_begin_4451239920:;
		{
			return (*this)._method_eval_unsig_int();
		}
		goto _match_end_4451233296;
		_case_end_4451239920:;
		if (!((_1ad70d41d_is_sig_int(_372513_lk)))) { goto _case_end_4451240128; }
		_case_begin_4451240128:;
		{
			return (*this)._method_eval_sig_int();
		}
		goto _match_end_4451233296;
		_case_end_4451240128:;
		_case_begin_4451233424:;
		{
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451233296;
		_case_end_4451233424:;
		_match_end_4451233296:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_eval(void) {
	{
		if (!(((*this)._field_l->_field_kind->_method_is_void()))) { goto _case_end_4451247024; }
		_case_begin_4451247024:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451244960;
		_case_end_4451247024:;
		if (!(((*this)._field_l->_field_kind->_method_is_nil()))) { goto _case_end_4451247600; }
		_case_begin_4451247600:;
		{
			return (*this)._method_eval_nil();
		}
		goto _match_end_4451244960;
		_case_end_4451247600:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_enm())))) { goto _case_end_4451246816; }
		_case_begin_4451246816:;
		{
			return (*this)._method_eval_enum();
		}
		goto _match_end_4451244960;
		_case_end_4451246816:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_ptr())))) { goto _case_end_4451247264; }
		_case_begin_4451247264:;
		{
			return (*this)._method_eval_ptr();
		}
		goto _match_end_4451244960;
		_case_end_4451247264:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_arr())))) { goto _case_end_4451247376; }
		_case_begin_4451247376:;
		{
			return (*this)._method_eval_arr();
		}
		goto _match_end_4451244960;
		_case_end_4451247376:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_slc())))) { goto _case_end_4451246208; }
		_case_begin_4451246208:;
		{
			return (*this)._method_eval_slc();
		}
		goto _match_end_4451244960;
		_case_end_4451246208:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_fnc())))) { goto _case_end_4451246320; }
		_case_begin_4451246320:;
		{
			return (*this)._method_eval_fn();
		}
		goto _match_end_4451244960;
		_case_end_4451246320:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_trt()) || jule::real((*this)._field_r->_field_kind->_method_trt())))) { goto _case_end_4451246432; }
		_case_begin_4451246432:;
		{
			if (jule::real((*this)._field_r->_field_kind->_method_trt())) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			return (*this)._method_eval_trait();
		}
		goto _match_end_4451244960;
		_case_end_4451246432:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_strct())))) { goto _case_end_4451245456; }
		_case_begin_4451245456:;
		{
			return (*this)._method_eval_struct();
		}
		goto _match_end_4451244960;
		_case_end_4451245456:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_prim())))) { goto _case_end_4451245568; }
		_case_begin_4451245568:;
		{
			return (*this)._method_eval_prim();
		}
		goto _match_end_4451244960;
		_case_end_4451245568:;
		_case_begin_4451245152:;
		{
			return jule::new_ref<_1acde49c3_Data>();
		}
		goto _match_end_4451244960;
		_case_end_4451245152:;
		_match_end_4451244960:;
	}
}



inline void _1acde49c3_BinopSolver::_method_assign_shift(jule::Ref<_1acde49c3_Data> _377531_d,jule::F64 _377541_r) {
	{
		if (!((_377541_r <= 6LL))) { goto _case_end_4451275120; }
		_case_begin_4451275120:;
		{
			_377531_d->_field_kind->_method_prim()->_field_kind=jule::Str("i8", 2);
			_377531_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_377531_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4451274464;
		_case_end_4451275120:;
		if (!((_377541_r <= 7LL))) { goto _case_end_4451275232; }
		_case_begin_4451275232:;
		{
			_377531_d->_field_kind->_method_prim()->_field_kind=jule::Str("u8", 2);
			_377531_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_377531_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4451274464;
		_case_end_4451275232:;
		if (!((_377541_r <= 14LL))) { goto _case_end_4451279584; }
		_case_begin_4451279584:;
		{
			_377531_d->_field_kind->_method_prim()->_field_kind=jule::Str("i16", 3);
			_377531_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_377531_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4451274464;
		_case_end_4451279584:;
		if (!((_377541_r <= 15LL))) { goto _case_end_4451279696; }
		_case_begin_4451279696:;
		{
			_377531_d->_field_kind->_method_prim()->_field_kind=jule::Str("u16", 3);
			_377531_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_377531_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4451274464;
		_case_end_4451279696:;
		if (!((_377541_r <= 30LL))) { goto _case_end_4451279808; }
		_case_begin_4451279808:;
		{
			_377531_d->_field_kind->_method_prim()->_field_kind=jule::Str("i32", 3);
			_377531_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_377531_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4451274464;
		_case_end_4451279808:;
		if (!((_377541_r <= 31LL))) { goto _case_end_4451279920; }
		_case_begin_4451279920:;
		{
			_377531_d->_field_kind->_method_prim()->_field_kind=jule::Str("u32", 3);
			_377531_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_377531_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4451274464;
		_case_end_4451279920:;
		if (!((_377541_r <= 62LL))) { goto _case_end_4451280032; }
		_case_begin_4451280032:;
		{
			_377531_d->_field_kind->_method_prim()->_field_kind=jule::Str("i64", 3);
			_377531_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_377531_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4451274464;
		_case_end_4451280032:;
		if (!((_377541_r <= 63LL))) { goto _case_end_4451280144; }
		_case_begin_4451280144:;
		{
			_377531_d->_field_kind->_method_prim()->_field_kind=jule::Str("u64", 3);
			_377531_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_377531_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4451274464;
		_case_end_4451280144:;
		if (!((_377541_r <= 127LL))) { goto _case_end_4451280256; }
		_case_begin_4451280256:;
		{
			_377531_d->_field_kind->_method_prim()->_field_kind=jule::Str("f32", 3);
			_377531_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_377531_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4451274464;
		_case_end_4451280256:;
		_case_begin_4451274656:;
		{
			_377531_d->_field_kind->_method_prim()->_field_kind=jule::Str("f64", 3);
			_377531_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_377531_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4451274464;
		_case_end_4451274656:;
		_match_end_4451274464:;
	}
}



inline void _1acde49c3_BinopSolver::_method_solve_const(jule::Ref<_1acde49c3_Data> _381934_d) {
	{
		if (!(((!(jule::real(_381934_d)))))) { goto _case_end_4452301728; }
		_case_begin_4452301728:;
		{
			return;
		}
		goto _match_end_4452301504;
		_case_end_4452301728:;
		if (!(((!((*this)._field_l->_method_is_const()))) || ((!((*this)._field_r->_method_is_const()))))) { goto _case_end_4452301856; }
		_case_begin_4452301856:;
		{
			jule::drop(_381934_d->_field_constant);
			return;
		}
		goto _match_end_4452301504;
		_case_end_4452301856:;
		_match_end_4452301504:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr)) { goto _case_end_4452304912; }
		_case_begin_4452304912:;
		{
			_381934_d->_field_constant=_1ad6d5cec_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4452305552;
		_case_end_4452304912:;
		if (!((jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4452305040; }
		_case_begin_4452305040:;
		{
			_381934_d->_field_constant=_1ad6d5cec_Const::_static_method_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant))));
		}
		goto _match_end_4452305552;
		_case_end_4452305040:;
		if (!((jule::Str("::", 2)) == _match_expr)) { goto _case_end_4452306256; }
		_case_begin_4452306256:;
		{
			_381934_d->_field_constant=_1ad6d5cec_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_or((*this)._field_r->_field_constant));
		}
		goto _match_end_4452305552;
		_case_end_4452306256:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4452306384; }
		_case_begin_4452306384:;
		{
			_381934_d->_field_constant=_1ad6d5cec_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_and((*this)._field_r->_field_constant));
		}
		goto _match_end_4452305552;
		_case_end_4452306384:;
		if (!((jule::Str(">", 1)) == _match_expr)) { goto _case_end_4452306512; }
		_case_begin_4452306512:;
		{
			_381934_d->_field_constant=_1ad6d5cec_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant));
		}
		goto _match_end_4452305552;
		_case_end_4452306512:;
		if (!((jule::Str("<", 1)) == _match_expr)) { goto _case_end_4452306640; }
		_case_begin_4452306640:;
		{
			_381934_d->_field_constant=_1ad6d5cec_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant));
		}
		goto _match_end_4452305552;
		_case_end_4452306640:;
		if (!((jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4452306768; }
		_case_begin_4452306768:;
		{
			_381934_d->_field_constant=_1ad6d5cec_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4452305552;
		_case_end_4452306768:;
		if (!((jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4452306896; }
		_case_begin_4452306896:;
		{
			_381934_d->_field_constant=_1ad6d5cec_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4452305552;
		_case_end_4452306896:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4452307024; }
		_case_begin_4452307024:;
		{
			(*this)._field_l->_field_constant->_method_add((*this)._field_r->_field_constant);
			_381934_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4452305552;
		_case_end_4452307024:;
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4452307152; }
		_case_begin_4452307152:;
		{
			(*this)._field_l->_field_constant->_method_sub((*this)._field_r->_field_constant);
			_381934_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4452305552;
		_case_end_4452307152:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4452307280; }
		_case_begin_4452307280:;
		{
			(*this)._field_l->_field_constant->_method_mul((*this)._field_r->_field_constant);
			_381934_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4452305552;
		_case_end_4452307280:;
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4452307408; }
		_case_begin_4452307408:;
		{
			jule::Bool _386917_ok = (*this)._field_l->_field_constant->_method_div((*this)._field_r->_field_constant);
			if ((!(_386917_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_381934_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4452305552;
		_case_end_4452307408:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4452307536; }
		_case_begin_4452307536:;
		{
			jule::Bool _387617_ok = (*this)._field_l->_field_constant->_method_mod((*this)._field_r->_field_constant);
			if ((!(_387617_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_381934_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4452305552;
		_case_end_4452307536:;
		if (!((jule::Str("|", 1)) == _match_expr)) { goto _case_end_4452307664; }
		_case_begin_4452307664:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_or((*this)._field_r->_field_constant);
			_381934_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4452305552;
		_case_end_4452307664:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4452307792; }
		_case_begin_4452307792:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_and((*this)._field_r->_field_constant);
			_381934_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4452305552;
		_case_end_4452307792:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4452307920; }
		_case_begin_4452307920:;
		{
			(*this)._field_l->_field_constant->_method_xor((*this)._field_r->_field_constant);
			_381934_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4452305552;
		_case_end_4452307920:;
		if (!((jule::Str("<<", 2)) == _match_expr)) { goto _case_end_4452308048; }
		_case_begin_4452308048:;
		{
			_381934_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_lshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_381934_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_4452305552;
		_case_end_4452308048:;
		if (!((jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4452308176; }
		_case_begin_4452308176:;
		{
			_381934_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_rshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_381934_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_4452305552;
		_case_end_4452308176:;
		_match_end_4452305552:;
	}
	_381934_d->_field_model=jule::Any(_381934_d->_field_constant);
}



inline void _1acde49c3_BinopSolver::_method_post_const(jule::Ref<_1acde49c3_Data> _390829_d) {
	if ((!(jule::real(_390829_d)))) {
		return;
	}
	if ((!(_390829_d->_method_is_const()))) {
		return;
	}
	_1acde49c3_normalize_bitsize(_390829_d);
}



inline void _1acde49c3_BinopSolver::_method_prepare_data(jule::Ref<_1acde49c3_Data> _391931_d) {
	if (jule::real(_391931_d) && jule::real(_391931_d->_field_kind->_method_ref())) {
		_391931_d->_field_kind=_391931_d->_field_kind->_method_ref()->_field_elem;
	}
}



inline void _1acde49c3_BinopSolver::_method_prepare_eval(void) {
	(*this)._method_prepare_data((*this)._field_r);
	(*this)._method_prepare_data((*this)._field_l);
}



inline void _1acde49c3_BinopSolver::_method_check_data(jule::Ref<_1acde49c3_Data> _393033_d) {
	jule::Ref<_1ab07a50c_FnIns> _393113_f = _393033_d->_field_kind->_method_fnc();
	if ((jule::real(_393113_f) && jule::real(_393113_f->_field_decl)) && _393113_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>({}));
	}
}



inline void _1acde49c3_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_solve_explicit(jule::Ref<_1acde49c3_Data> _394237_l,jule::Ref<_1acde49c3_Data> _394251_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_394237_l,_394251_r);
	(*this)._method_prepare_eval();
	(*this)._method_check_datas();
	jule::Ref<_1acde49c3_Data> _394817_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_394237_l,_394251_r);
	(*this)._method_solve_const(_394817_d);
	(*this)._method_post_const(_394817_d);
	if (jule::real(_394817_d)) {
		_394817_d->_field_lvalue=_1ad3e617d_is_lvalue(_394817_d->_field_kind);
		if ((!(_394817_d->_method_is_const()))) {
			_394817_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_BinopExprModel>(new( std::nothrow ) _1ab0a4954_BinopExprModel(_394237_l->_field_model,_394251_r->_field_model,(*this)._field_op._field_kind)));
		}
	}
	return _394817_d;
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_BinopSolver::_method_solve(jule::Ref<_1aaeea1c4_BinopExpr> _396828_op) {
	jule::Ref<_1acde49c3_Data> _396917_l = (*this)._field_e->_method_eval_expr_kind(_396828_op->_field_left);
	if ((!(jule::real(_396917_l))) || (!(jule::real(_396917_l->_field_kind)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Ref<_1acde49c3_Data> _397417_r = (*this)._field_e->_method_eval_expr_kind(_396828_op->_field_right);
	if ((!(jule::real(_397417_r))) || (!(jule::real(_397417_r->_field_kind)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	(*this)._field_op=_396828_op->_field_op;
	jule::Ref<_1acde49c3_Data> _398117_d = (*this)._method_solve_explicit(_396917_l,_397417_r);
	if ((jule::real(_398117_d) && _396917_l->_field_is_rune) && _397417_r->_field_is_rune) {
		_398117_d->_field_is_rune=true;
	}
	return _398117_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _1acde49c3_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad3e617d_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad3e617d_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	jule::Str _6317_kind = jule::Str("", 0);
	if ((*this)._field_variadic) {
		_6317_kind+=jule::Str("...", 3);
	}
	if ((*this)._method_is_cpp_linked()) {
		_6317_kind+=jule::Str("cpp.", 4) + (*this)._field_cpp_ident;
	} else {
		_6317_kind+=(*this)._field_kind.get()._method_to_str();
	}
	return _6317_kind;
}



inline jule::Bool _1ad3e617d_TypeKind::_method_equals(jule::Ref<_1ad3e617d_TypeKind> _7821_other) {
	if ((*this)._method_is_nil()) {
		return _7821_other->_method_is_nil();
	}
	if ((*this)._method_is_cpp_linked()) {
		if ((!(_7821_other->_method_is_cpp_linked()))) {
			return false;
		}
		return (*this)._field_cpp_ident == _7821_other->_field_cpp_ident;
	}
	return (*this)._field_kind.get()._method_equals(_7821_other);
}



inline jule::Ref<_1ad3e617d_TypeKind> _1ad3e617d_TypeKind::_method_clone(void) {
	if ((!(jule::real(this->self)))) {
		return jule::new_ref<_1ad3e617d_TypeKind>();
	}
	jule::Ref<_1ad3e617d_TypeKind> _10117_kind = jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(this->self->_field_cpp_ident,jule::Bool(),this->self->_field_kind));
	return _10117_kind;
}



inline jule::Bool _1ad3e617d_TypeKind::_method_is_cpp_linked(void) {
	return (*this)._field_cpp_ident.len() != 0LL;
}



inline jule::Bool _1ad3e617d_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



inline jule::Bool _1ad3e617d_TypeKind::_method_is_void(void) {
	jule::Ref<_1ad3e617d_Prim> _11613_prim = (*((&((*this)))))._method_prim();
	return jule::real(_11613_prim) && (_11613_prim->_method_to_str() == jule::Str("void", 4));
}



inline jule::Ref<_1ad3e617d_Prim> _1ad3e617d_TypeKind::_method_prim(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_Prim>>())) { goto _case_end_4452444464; }
		_case_begin_4452444464:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ad3e617d_Prim>();
		}
		goto _match_end_4452441872;
		_case_end_4452444464:;
		_case_begin_4452442688:;
		{
			return jule::new_ref<_1ad3e617d_Prim>();
		}
		goto _match_end_4452441872;
		_case_end_4452442688:;
		_match_end_4452441872:;
	}
}



inline jule::Ref<_1ad3e617d_Ref> _1ad3e617d_TypeKind::_method_ref(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_Ref>>())) { goto _case_end_4452447984; }
		_case_begin_4452447984:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ad3e617d_Ref>();
		}
		goto _match_end_4452446160;
		_case_end_4452447984:;
		_case_begin_4452442992:;
		{
			return jule::new_ref<_1ad3e617d_Ref>();
		}
		goto _match_end_4452446160;
		_case_end_4452442992:;
		_match_end_4452446160:;
	}
}



inline jule::Ref<_1ad3e617d_Ptr> _1ad3e617d_TypeKind::_method_ptr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_Ptr>>())) { goto _case_end_4452451504; }
		_case_begin_4452451504:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ad3e617d_Ptr>();
		}
		goto _match_end_4452449680;
		_case_end_4452451504:;
		_case_begin_4452446528:;
		{
			return jule::new_ref<_1ad3e617d_Ptr>();
		}
		goto _match_end_4452449680;
		_case_end_4452446528:;
		_match_end_4452449680:;
	}
}



inline jule::Ref<_1ac7804a2_Enum> _1ad3e617d_TypeKind::_method_enm(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ac7804a2_Enum>>())) { goto _case_end_4452455024; }
		_case_begin_4452455024:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ac7804a2_Enum>();
		}
		goto _match_end_4452453200;
		_case_end_4452455024:;
		_case_begin_4452450048:;
		{
			return jule::new_ref<_1ac7804a2_Enum>();
		}
		goto _match_end_4452453200;
		_case_end_4452450048:;
		_match_end_4452453200:;
	}
}



inline jule::Ref<_1ad3e617d_Arr> _1ad3e617d_TypeKind::_method_arr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_Arr>>())) { goto _case_end_4452458704; }
		_case_begin_4452458704:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ad3e617d_Arr>();
		}
		goto _match_end_4452456896;
		_case_end_4452458704:;
		_case_begin_4452453648:;
		{
			return jule::new_ref<_1ad3e617d_Arr>();
		}
		goto _match_end_4452456896;
		_case_end_4452453648:;
		_match_end_4452456896:;
	}
}



inline jule::Ref<_1ad3e617d_Slc> _1ad3e617d_TypeKind::_method_slc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_Slc>>())) { goto _case_end_4452462224; }
		_case_begin_4452462224:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ad3e617d_Slc>();
		}
		goto _match_end_4452460400;
		_case_end_4452462224:;
		_case_begin_4452457248:;
		{
			return jule::new_ref<_1ad3e617d_Slc>();
		}
		goto _match_end_4452460400;
		_case_end_4452457248:;
		_match_end_4452460400:;
	}
}



inline jule::Ref<_1ab07a50c_FnIns> _1ad3e617d_TypeKind::_method_fnc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_FnIns>>())) { goto _case_end_4452466096; }
		_case_begin_4452466096:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ab07a50c_FnIns>();
		}
		goto _match_end_4452464272;
		_case_end_4452466096:;
		_case_begin_4452460768:;
		{
			return jule::new_ref<_1ab07a50c_FnIns>();
		}
		goto _match_end_4452464272;
		_case_end_4452460768:;
		_match_end_4452464272:;
	}
}



inline jule::Ref<_1ab064271_StructIns> _1ad3e617d_TypeKind::_method_strct(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ab064271_StructIns>>())) { goto _case_end_4452469616; }
		_case_begin_4452469616:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ab064271_StructIns>();
		}
		goto _match_end_4452467792;
		_case_end_4452469616:;
		_case_begin_4452464640:;
		{
			return jule::new_ref<_1ab064271_StructIns>();
		}
		goto _match_end_4452467792;
		_case_end_4452464640:;
		_match_end_4452467792:;
	}
}



inline jule::Ref<_1ac276c57_Trait> _1ad3e617d_TypeKind::_method_trt(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ac276c57_Trait>>())) { goto _case_end_4452473296; }
		_case_begin_4452473296:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ac276c57_Trait>();
		}
		goto _match_end_4452471488;
		_case_end_4452473296:;
		_case_begin_4452468240:;
		{
			return jule::new_ref<_1ac276c57_Trait>();
		}
		goto _match_end_4452471488;
		_case_end_4452468240:;
		_match_end_4452471488:;
	}
}



inline jule::Ref<_1ad3e617d_Map> _1ad3e617d_TypeKind::_method_map(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_Map>>())) { goto _case_end_4452476976; }
		_case_begin_4452476976:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ad3e617d_Map>();
		}
		goto _match_end_4452475168;
		_case_end_4452476976:;
		_case_begin_4452471920:;
		{
			return jule::new_ref<_1ad3e617d_Map>();
		}
		goto _match_end_4452475168;
		_case_end_4452471920:;
		_match_end_4452475168:;
	}
}



inline jule::Ref<_1ad3e617d_Tuple> _1ad3e617d_TypeKind::_method_tup(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_Tuple>>())) { goto _case_end_4452480560; }
		_case_begin_4452480560:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ad3e617d_Tuple>();
		}
		goto _match_end_4452478736;
		_case_end_4452480560:;
		_case_begin_4452475520:;
		{
			return jule::new_ref<_1ad3e617d_Tuple>();
		}
		goto _match_end_4452478736;
		_case_end_4452475520:;
		_match_end_4452478736:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad3e617d_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad3e617d_TypeSymbol::_method_checked(void) {
	return jule::real((*this)._field_kind);
}



inline void _1ad3e617d_TypeSymbol::_method_remove_kind(void) {
	jule::drop((*this)._field_kind);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad3e617d_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad3e617d_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _1ad3e617d_Prim::_method_equals(jule::Ref<_1ad3e617d_TypeKind> _23421_other) {
	jule::Ref<_1ad3e617d_Prim> _23513_prim = (_23421_other).alloc->_method_prim();
	if ((!(jule::real(_23513_prim)))) {
		return false;
	}
	return (*this)._field_kind == _23513_prim->_field_kind;
}



inline jule::Bool _1ad3e617d_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



inline jule::Bool _1ad3e617d_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad3e617d_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad3e617d_Ref::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1ad3e617d_Ref::_method_equals(jule::Ref<_1ad3e617d_TypeKind> _30321_other) {
	jule::Ref<_1ad3e617d_Ref> _30413_ref = (_30321_other).alloc->_method_ref();
	if ((!(jule::real(_30413_ref)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_30413_ref->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad3e617d_Ref &_Src) {
	_Stream << "Ref{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad3e617d_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1ad3e617d_Slc::_method_equals(jule::Ref<_1ad3e617d_TypeKind> _32221_other) {
	jule::Ref<_1ad3e617d_Slc> _32313_slc = (_32221_other).alloc->_method_slc();
	if ((!(jule::real(_32313_slc)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_32313_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad3e617d_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad3e617d_Tuple::_method_to_str(void) {
	jule::Str _33917_s = jule::Str("(", 1);
	_33917_s+=(*this)._field_types[0LL]->_method_to_str();
	{
		auto _range_expr = (*this)._field_types.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ad3e617d_TypeKind> _1ad3e617d_t = *_range_begin;
			_iter_begin_4452536512:;
			{
				_33917_s+=jule::Str(",", 1);
				_33917_s+=_1ad3e617d_t->_method_to_str();
			}
			_iter_next_4452536512:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ad3e617d_t = *_range_begin; goto _iter_begin_4452536512; }
			_iter_end_4452536512:;
		}
	}
	_33917_s+=jule::Str(")", 1);
	return _33917_s;
}



inline jule::Bool _1ad3e617d_Tuple::_method_equals(jule::Ref<_1ad3e617d_TypeKind> _35021_other) {
	jule::Ref<_1ad3e617d_Tuple> _35113_tup = (_35021_other).alloc->_method_tup();
	if ((!(jule::real(_35113_tup)))) {
		return false;
	}
	if ((*this)._field_types.len() != _35113_tup->_field_types.len()) {
		return false;
	}
	jule::Int _36017_i = 0LL;
	_iter_begin_4452544832:;
	if (!(_36017_i < (*this)._field_types.len())) { goto _iter_end_4452544832; }
	{
		if ((!((*this)._field_types[static_cast<jule::Int>(_36017_i)]->_method_equals(_35113_tup->_field_types[static_cast<jule::Int>(_36017_i)])))) {
			return false;
		}
	}
	_iter_next_4452544832:;
	(_36017_i)++;
	goto _iter_begin_4452544832;
	_iter_end_4452544832:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad3e617d_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad3e617d_Map::_method_to_str(void) {
	jule::Str _38017_s = jule::Str("[", 1);
	_38017_s+=(*this)._field_key->_method_to_str();
	_38017_s+=jule::Str(":", 1);
	_38017_s+=(*this)._field_val->_method_to_str();
	_38017_s+=jule::Str("]", 1);
	return _38017_s;
}



inline jule::Bool _1ad3e617d_Map::_method_equals(jule::Ref<_1ad3e617d_TypeKind> _38921_other) {
	jule::Ref<_1ad3e617d_Map> _39013_map = (_38921_other).alloc->_method_map();
	if ((!(jule::real(_39013_map)))) {
		return false;
	}
	return (*this)._field_key->_method_equals(_39013_map->_field_key) && (*this)._field_val->_method_equals(_39013_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad3e617d_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad3e617d_Arr::_method_to_str(void) {
	jule::Str _40817_s = jule::Str("[", 1);
	_40817_s+=_1a99c0d11_itoa((*this)._field_n);
	_40817_s+=jule::Str("]", 1);
	_40817_s+=(*this)._field_elem->_method_to_str();
	return _40817_s;
}



inline jule::Bool _1ad3e617d_Arr::_method_equals(jule::Ref<_1ad3e617d_TypeKind> _41621_other) {
	jule::Ref<_1ad3e617d_Arr> _41713_arr = (_41621_other).alloc->_method_arr();
	if ((!(jule::real(_41713_arr)))) {
		return false;
	}
	return ((*this)._field_n == _41713_arr->_field_n) && (*this)._field_elem->_method_equals(_41713_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad3e617d_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad3e617d_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1ad3e617d_Ptr::_method_equals(jule::Ref<_1ad3e617d_TypeKind> _44021_other) {
	jule::Ref<_1ad3e617d_Ptr> _44113_ptr = (_44021_other).alloc->_method_ptr();
	if ((!(jule::real(_44113_ptr)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_44113_ptr->_field_elem);
}



inline jule::Bool _1ad3e617d_Ptr::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad3e617d_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad3e617d_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1ad3e617d_TypeChecker::_method_push_err(_1ab0277b7_Token _65427_token,jule::Str _65441_fmt,jule::Slice<jule::Any> _65454_args) {
	(*this)._field_s->_method_push_err(_65427_token,_65441_fmt,_65454_args);
}



inline jule::Ref<_1ad3e617d_Prim> _1ad3e617d_TypeChecker::_method_build_prim(jule::Ref<_1aaeea1c4_IdentTypeDecl> _65829_decl) {
	if ((!(_1ad3e617d_is_prim(_65829_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ad3e617d_Prim>();
	}
	if (_65829_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_65829_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_65829_decl->_field_ident)}));
		return jule::new_ref<_1ad3e617d_Prim>();
	}
	return _1ad3e617d_build_prim_type(_65829_decl->_field_ident);
}



inline void _1ad3e617d_TypeChecker::_method_push_cycle_error(jule::Any _67231_def1,jule::Any _67242_def2,jule::Str& _67258_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _67513_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _67529_def) mutable -> jule::Str {
		{
			auto _match_expr{ _67529_def };
			if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_TypeAlias>>())) { goto _case_end_4452609168; }
			_case_begin_4452609168:;
			{
				return _67529_def.operator jule::Ref<_1ad3e617d_TypeAlias>()->_field_ident;
			}
			goto _match_end_4452608240;
			_case_end_4452609168:;
			if (!(_match_expr.type_is<jule::Ref<_1ab064271_Struct>>())) { goto _case_end_4452609280; }
			_case_begin_4452609280:;
			{
				return _67529_def.operator jule::Ref<_1ab064271_Struct>()->_field_ident;
			}
			goto _match_end_4452608240;
			_case_end_4452609280:;
			if (!(_match_expr.type_is<jule::Ref<_1ac7804a2_Enum>>())) { goto _case_end_4452609392; }
			_case_begin_4452609392:;
			{
				return _67529_def.operator jule::Ref<_1ac7804a2_Enum>()->_field_ident;
			}
			goto _match_end_4452608240;
			_case_end_4452609392:;
			_case_begin_4452608720:;
			{
				return jule::Str("", 0);
			}
			goto _match_end_4452608240;
			_case_end_4452608720:;
			_match_end_4452608240:;
		}
	});
	jule::Str _68413_def1_ident = _67513_get_ident(_67231_def1);
	jule::Str _68513_def2_ident = _67513_get_ident(_67242_def2);
	jule::Str _68613_refers_to = _1d068165a_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_68413_def1_ident),jule::Any(_68513_def2_ident)}));
	_67258_message=((_1ac699a1a_str_repeat(jule::Str(" ", 1),4LL) + _68613_refers_to) + jule::Str("\n", 1)) + _67258_message;
}



inline jule::Bool _1ad3e617d_TypeChecker::_method_are_equals_cross_cycle_data_0(jule::Any _69045_a,jule::Any _69053_b) {
	{
		auto _match_expr{ _69045_a };
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_TypeAlias>>())) { goto _case_end_4452636256; }
		_case_begin_4452636256:;
		{
			{
				auto _match_expr{ _69053_b };
				if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_TypeAlias>>())) { goto _case_end_4452638432; }
				_case_begin_4452638432:;
				{
					return (_69045_a.operator jule::Ref<_1ad3e617d_TypeAlias>()).alloc == (_69053_b.operator jule::Ref<_1ad3e617d_TypeAlias>()).alloc;
				}
				goto _match_end_4452636416;
				_case_end_4452638432:;
				_case_begin_4452638048:;
				{
					return false;
				}
				goto _match_end_4452636416;
				_case_end_4452638048:;
				_match_end_4452636416:;
			}
		}
		goto _match_end_4452635440;
		_case_end_4452636256:;
		_case_begin_4452635872:;
		{
			return false;
		}
		goto _match_end_4452635440;
		_case_end_4452635872:;
		_match_end_4452635440:;
	}
}

inline jule::Bool _1ad3e617d_TypeChecker::_method_are_equals_cross_cycle_data_1(jule::Any _69045_a,jule::Any _69053_b) {
	{
		auto _match_expr{ _69045_a };
		if (!(_match_expr.type_is<jule::Ref<_1ab064271_Struct>>())) { goto _case_end_4452651392; }
		_case_begin_4452651392:;
		{
			{
				auto _match_expr{ _69053_b };
				if (!(_match_expr.type_is<jule::Ref<_1ab064271_Struct>>())) { goto _case_end_4452653568; }
				_case_begin_4452653568:;
				{
					return (_69045_a.operator jule::Ref<_1ab064271_Struct>()).alloc == (_69053_b.operator jule::Ref<_1ab064271_Struct>()).alloc;
				}
				goto _match_end_4452651552;
				_case_end_4452653568:;
				_case_begin_4452653184:;
				{
					return false;
				}
				goto _match_end_4452651552;
				_case_end_4452653184:;
				_match_end_4452651552:;
			}
		}
		goto _match_end_4452650576;
		_case_end_4452651392:;
		_case_begin_4452651008:;
		{
			return false;
		}
		goto _match_end_4452650576;
		_case_end_4452651008:;
		_match_end_4452650576:;
	}
}



inline jule::Bool _1ad3e617d_TypeChecker::_method_check_cross_cycle(jule::Any _70332_decl,jule::Str& _70348_message) {
	{
		auto _match_expr{ _70332_decl };
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_TypeAlias>>())) { goto _case_end_4452621072; }
		_case_begin_4452621072:;
		{
			jule::Ref<_1ad3e617d_TypeAlias> _70617_ta = _70332_decl.operator jule::Ref<_1ad3e617d_TypeAlias>();
			{
				auto _range_expr = _70617_ta->_field_refers;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Any _1ad3e617d_d = *_range_begin;
					_iter_begin_4452624432:;
					{
						{
							auto _match_expr{ _1ad3e617d_d };
							if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_TypeAlias>>())) { goto _case_end_4452626224; }
							_case_begin_4452626224:;
							{
								if ((*this)._method_are_equals_cross_cycle_data_0(_1ad3e617d_d,(*this)._field_referencer->_field_owner)) {
									(*this)._method_push_cycle_error(jule::Any(_70617_ta),_1ad3e617d_d,_70348_message);
									return false;
								}
							}
							goto _match_end_4452625696;
							_case_end_4452626224:;
							_match_end_4452625696:;
						}
						if ((!((*this)._method_check_cross_cycle(_1ad3e617d_d,_70348_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_70617_ta),_1ad3e617d_d,_70348_message);
							return false;
						}
					}
					_iter_next_4452624432:;
					++_range_begin;
					if (_range_begin != _range_end) { _1ad3e617d_d = *_range_begin; goto _iter_begin_4452624432; }
					_iter_end_4452624432:;
				}
			}
		}
		goto _match_end_4452620624;
		_case_end_4452621072:;
		if (!(_match_expr.type_is<jule::Ref<_1ab064271_Struct>>())) { goto _case_end_4452621216; }
		_case_begin_4452621216:;
		{
			jule::Ref<_1ab064271_Struct> _72317_s = _70332_decl.operator jule::Ref<_1ab064271_Struct>();
			{
				auto _range_expr = _72317_s->_field_depends;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_1ab064271_Struct> _1ad3e617d_d = *_range_begin;
					_iter_begin_4452626992:;
					{
						if ((*this)._method_are_equals_cross_cycle_data_1(jule::Any(_1ad3e617d_d),(*this)._field_referencer->_field_owner)) {
							(*this)._method_push_cycle_error(jule::Any(_72317_s),jule::Any(_1ad3e617d_d),_70348_message);
							return false;
						}
						if ((!((*this)._method_check_cross_cycle(jule::Any(_1ad3e617d_d),_70348_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_72317_s),jule::Any(_1ad3e617d_d),_70348_message);
							return false;
						}
					}
					_iter_next_4452626992:;
					++_range_begin;
					if (_range_begin != _range_end) { _1ad3e617d_d = *_range_begin; goto _iter_begin_4452626992; }
					_iter_end_4452626992:;
				}
			}
		}
		goto _match_end_4452620624;
		_case_end_4452621216:;
		_match_end_4452620624:;
	}
	return true;
}



inline jule::Bool _1ad3e617d_TypeChecker::_method_check_illegal_cycles(jule::Ref<_1aaeea1c4_IdentTypeDecl> _74539_ident,jule::Any _74566_decl) {
	jule::Bool _74579_ok = jule::Bool();
	if ((!(jule::real((*this)._field_referencer)))) {
		_74579_ok = true;
		return _74579_ok;
	}
	{
		auto _match_expr{ _74566_decl };
		if (!(_match_expr.type_is<jule::Ref<_1ab064271_Struct>>())) { goto _case_end_4452660608; }
		_case_begin_4452660608:;
		{
			if ((*this)._field_not_plain) {
				_74579_ok = true;
				return _74579_ok;
			}
		}
		goto _match_end_4452659552;
		_case_end_4452660608:;
		_match_end_4452659552:;
	}
	if ((*this)._field_referencer->_field_owner == _74566_decl) {
		(*this)._method_push_err(_74539_ident->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_74579_ok = false;
		return _74579_ok;
	}
	jule::Str _76417_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_74566_decl,_76417_message)))) {
		jule::Str _76721_err_msg = _76417_message;
		_76417_message=jule::Str("", 0);
		(*this)._method_push_cycle_error((*this)._field_referencer->_field_owner,_74566_decl,_76417_message);
		_76721_err_msg=_76721_err_msg + _76417_message;
		(*this)._method_push_err(_74539_ident->_field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_76721_err_msg)}));
		_74579_ok = false;
		return _74579_ok;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_TypeAlias>>())) { goto _case_end_4452666432; }
		_case_begin_4452666432:;
		{
			{
				(*((*this)._field_referencer->_field_refs))=jule::append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_74566_decl}));
			}
		}
		goto _match_end_4452671760;
		_case_end_4452666432:;
		if (!(_match_expr.type_is<jule::Ref<_1ab064271_Struct>>())) { goto _case_end_4452672560; }
		_case_begin_4452672560:;
		{
			{
				auto _match_expr{ _74566_decl };
				if (!(_match_expr.type_is<jule::Ref<_1ab064271_Struct>>())) { goto _case_end_4452673568; }
				_case_begin_4452673568:;
				{
					jule::Ref<_1ab064271_Struct> _78225_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_1ab064271_Struct>();
					_78225_s->_field_depends=jule::append(_78225_s->_field_depends,jule::Slice<jule::Ref<_1ab064271_Struct>>({_74566_decl.operator jule::Ref<_1ab064271_Struct>()}));
				}
				goto _match_end_4452672672;
				_case_end_4452673568:;
				_match_end_4452672672:;
			}
		}
		goto _match_end_4452671760;
		_case_end_4452672560:;
		_match_end_4452671760:;
	}
	_74579_ok = true;
	return _74579_ok;
}



inline jule::Trait<_1ad3e617d_Kind> _1ad3e617d_TypeChecker::_method_from_type_alias(jule::Ref<_1aaeea1c4_IdentTypeDecl> _79034_decl,jule::Ref<_1ad3e617d_TypeAlias> _79060_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_79060_ta->_field_public,_79060_ta->_field_token)))) {
		(*this)._method_push_err(_79034_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_79034_decl->_field_ident)}));
		return nullptr;
	}
	_79060_ta->_field_used=true;
	if (_79034_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_79034_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_79034_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _80317_ok = (*this)._method_check_illegal_cycles(_79034_decl,jule::Any(_79060_ta));
	if ((!(_80317_ok))) {
		return nullptr;
	}
	_80317_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_79060_ta,(*this)._field_lookup);
	if ((!(_80317_ok))) {
		return nullptr;
	}
	jule::Ref<_1ad3e617d_TypeKind> _81417_kind = _79060_ta->_field_kind->_field_kind->_method_clone();
	if (_79060_ta->_field_cpp_linked) {
		_81417_kind->_field_cpp_ident=_79060_ta->_field_ident;
	}
	return _81417_kind;
}



inline jule::Ref<_1ac7804a2_Enum> _1ad3e617d_TypeChecker::_method_from_enum(jule::Ref<_1aaeea1c4_IdentTypeDecl> _82328_decl,jule::Ref<_1ac7804a2_Enum> _82354_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_82354_e->_field_public,_82354_e->_field_token)))) {
		(*this)._method_push_err(_82328_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_82328_decl->_field_ident)}));
		return jule::new_ref<_1ac7804a2_Enum>();
	}
	if (_82328_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_82328_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_82328_decl->_field_ident)}));
		return jule::new_ref<_1ac7804a2_Enum>();
	}
	return _82354_e;
}



inline jule::Bool _1ad3e617d_TypeChecker::_method_check_struct_ins(jule::Ref<_1ab064271_StructIns> _83739_ins,_1ab0277b7_Token _83756_error_token) {
	jule::Bool _83778_ok = jule::Bool();
	if (_83739_ins->_field_checked) {
		_83778_ok = true;
		return _83778_ok;
	}
	_83739_ins->_field_checked=true;
	if (jule::real((*this)._field_referencer) && ((*this)._field_referencer->_field_owner == _83739_ins->_field_decl)) {
		_83778_ok = true;
		return _83778_ok;
	}
	jule::Ref<_1acd9639d_SymbolTable> _85117_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_85117_old_file);
	});
	jule::Ref<_1acd9639d_SymbolTable> _85417_f = _1ac7ccb09_find_file((*this)._field_s->_field_files,_83739_ins->_field_decl->_field_token._field_file);
	if (jule::real(_85417_f)) {
		(*this)._field_s->_method_set_current_file(_85417_f);
	}
	jule::Ref<_1ad3e617d_Referencer> _85917_referencer = jule::new_struct<_1ad3e617d_Referencer>(new( std::nothrow ) _1ad3e617d_Referencer(_83739_ins->_field_decl->_field_ident,jule::Any(_83739_ins->_field_decl),nullptr));
	jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>> _86417_generics = jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_83739_ins->_field_generics.len())));
	{
		auto _range_expr = _83739_ins->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ad3e617d_i = 0;
			jule::Ref<_1ad3e617d_TypeKind> _1ad3e617d_g = *_range_begin;
			_iter_begin_4452729232:;
			{
				_86417_generics[static_cast<jule::Int>(_1ad3e617d_i)]=jule::new_struct<_1ad3e617d_TypeAlias>(new( std::nothrow ) _1ad3e617d_TypeAlias(jule::Ref<_1aaeea1c4_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_1ab0277b7_Token(),_83739_ins->_field_decl->_field_generics[static_cast<jule::Int>(_1ad3e617d_i)]->_field_ident,jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),_1ad3e617d_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_4452729232:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ad3e617d_i; _1ad3e617d_g = *_range_begin; goto _iter_begin_4452729232; }
			_iter_end_4452729232:;
		}
	}
	jule::Ref<_1acd9639d_SymbolTable> _87417_old_sema_file = _83739_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_83739_ins->_field_decl->_field_sema->_method_set_current_file(_87417_old_sema_file);
	});
	_1ad3e617d_TypeChecker _87717_tc = _1ad3e617d_TypeChecker(_83739_ins->_field_decl->_field_sema,_83739_ins->_field_decl->_field_sema,_85917_referencer,_1ab0277b7_Token(),jule::Slice<jule::Ref<_1aaeea1c4_GenericDecl>>(),_86417_generics,jule::Bool());
	{
		auto _range_expr = _83739_ins->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_FieldIns> _1ad3e617d_f = *_range_begin;
			_iter_begin_4452739808:;
			{
				jule::Ref<_1ad3e617d_TypeKind> _88621_kind = _87717_tc._method_check_decl(_1ad3e617d_f->_field_decl->_field_kind->_field_decl);
				_83778_ok=jule::real(_88621_kind);
				if ((jule::real(_83739_ins->_field_decl->_field_sema) && ((*this)._field_s != _83739_ins->_field_decl->_field_sema)) && (_83739_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
					(*this)._field_s->_field_errors=jule::append((*this)._field_s->_field_errors,_83739_ins->_field_decl->_field_sema->_field_errors);
				}
				if ((!(_83778_ok))) {
					_83778_ok = false;
					return _83778_ok;
				}
				_1ad3e617d_f->_field_kind=_88621_kind;
				if (_1ad3e617d_is_mut(_1ad3e617d_f->_field_kind)) {
					_83739_ins->_field_has_mut=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_83739_ins);
				}
			}
			_iter_next_4452739808:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ad3e617d_f = *_range_begin; goto _iter_begin_4452739808; }
			_iter_end_4452739808:;
		}
	}
	if (_83739_ins->_field_generics.len() > 0LL) {
		{
			auto _range_expr = _83739_ins->_field_methods;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab07a50c_Fn> _1ad3e617d_m = *_range_begin;
				_iter_begin_4452752592:;
				{
					if (_1ad3e617d_m->_field_generics.len() > 0LL) {
						goto _iter_next_4452752592;
					}
					(*this)._field_s->_method_check_type_method(_83739_ins,_1ad3e617d_m);
				}
				_iter_next_4452752592:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ad3e617d_m = *_range_begin; goto _iter_begin_4452752592; }
				_iter_end_4452752592:;
			}
		}
	}
	_83778_ok = true;
	return _83778_ok;
}



inline void _1ad3e617d_TypeChecker::_method_append_used_struct_reference(jule::Ref<_1ab064271_Struct> _91851_s) {
	if ((!(jule::real((*this)._field_referencer)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_1ab064271_Struct>>())) { goto _case_end_4452761872; }
		_case_begin_4452761872:;
		{
			jule::Ref<_1ab064271_Struct> _92521_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_1ab064271_Struct>();
			if ((!(_92521_ref_s->_method_is_uses(_91851_s)))) {
				_92521_ref_s->_field_uses=jule::append(_92521_ref_s->_field_uses,jule::Slice<jule::Ref<_1ab064271_Struct>>({_91851_s}));
			}
		}
		goto _match_end_4452761216;
		_case_end_4452761872:;
		_match_end_4452761216:;
	}
}



inline jule::Ref<_1ab064271_StructIns> _1ad3e617d_TypeChecker::_method_from_struct(jule::Ref<_1aaeea1c4_IdentTypeDecl> _93234_decl,jule::Ref<_1ab064271_Struct> _93260_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_93260_s->_field_public,_93260_s->_field_token)))) {
		(*this)._method_push_err(_93234_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_93234_decl->_field_ident)}));
		return jule::new_ref<_1ab064271_StructIns>();
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return jule::new_ref<_1ab064271_StructIns>();
	}
	jule::Bool _94317_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_93234_decl,jule::Any(_93260_s));
	if ((!(_94317_ok))) {
		return jule::new_ref<_1ab064271_StructIns>();
	}
	(*this)._method_append_used_struct_reference(_93260_s);
	jule::Ref<_1ab064271_StructIns> _94917_ins = _93260_s->_method_instance();
	_94917_ins->_field_generics=jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_93234_decl->_field_generics.len())));
	jule::Ref<_1ad3e617d_Referencer> _95117_referencer = (*this)._field_referencer;
	jule::drop((*this)._field_referencer);
	{
		auto _range_expr = _93234_decl->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ad3e617d_i = 0;
			jule::Ref<_1aaeea1c4_TypeDecl> _1ad3e617d_g = *_range_begin;
			_iter_begin_4452783552:;
			{
				jule::Ref<_1ad3e617d_TypeKind> _95421_kind = (*this)._method_build(_1ad3e617d_g->_field_kind);
				if ((!(jule::real(_95421_kind)))) {
					_94317_ok=false;
					goto _iter_next_4452783552;
				}
				_94917_ins->_field_generics[static_cast<jule::Int>(_1ad3e617d_i)]=_95421_kind;
			}
			_iter_next_4452783552:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ad3e617d_i; _1ad3e617d_g = *_range_begin; goto _iter_begin_4452783552; }
			_iter_end_4452783552:;
		}
	}
	(*this)._field_referencer=_95117_referencer;
	if ((!(_94317_ok))) {
		return jule::new_ref<_1ab064271_StructIns>();
	}
	_94317_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_94917_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_94917_ins->_field_generics.len()),_93234_decl->_field_token);
	if ((!(_94317_ok))) {
		return jule::new_ref<_1ab064271_StructIns>();
	}
	jule::Ref<_1ab064271_StructIns> _97317_exist_instance = _93260_s->_method_append_instance(_94917_ins);
	if (jule::real(_97317_exist_instance)) {
		return _97317_exist_instance;
	}
	_94317_ok=(*this)._method_check_struct_ins(_94917_ins,_93234_decl->_field_token);
	if ((!(_94317_ok))) {
		return jule::new_ref<_1ab064271_StructIns>();
	}
	return _94917_ins;
}



inline jule::Trait<_1ad3e617d_Kind> _1ad3e617d_TypeChecker::_method_get_def(jule::Ref<_1aaeea1c4_IdentTypeDecl> _98830_decl) {
	{
		auto _range_expr = (*this)._field_ignore_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaeea1c4_GenericDecl> _1ad3e617d_g = *_range_begin;
			_iter_begin_4452804032:;
			{
				if (_1ad3e617d_g->_field_ident == _98830_decl->_field_ident) {
					return _1ad3e617d_build_prim_type(_1ad3e617d_g->_field_ident);
				}
			}
			_iter_next_4452804032:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ad3e617d_g = *_range_begin; goto _iter_begin_4452804032; }
			_iter_end_4452804032:;
		}
	}
	{
		auto _range_expr = (*this)._field_use_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ad3e617d_TypeAlias> _1ad3e617d_g = *_range_begin;
			_iter_begin_4452806688:;
			{
				if (_1ad3e617d_g->_field_ident == _98830_decl->_field_ident) {
					jule::Ref<_1ab064271_StructIns> _99725_st = _1ad3e617d_g->_field_kind->_field_kind->_method_strct();
					if (jule::real(_99725_st)) {
						jule::Bool _99925_ok = (*this)._method_check_illegal_cycles(_98830_decl,jule::Any(_99725_st->_field_decl));
						if ((!(_99925_ok))) {
							return nullptr;
						}
					}
					return _1ad3e617d_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_4452806688:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ad3e617d_g = *_range_begin; goto _iter_begin_4452806688; }
			_iter_end_4452806688:;
		}
	}
	if ((!(_98830_decl->_field_cpp_linked))) {
		jule::Ref<_1ac7804a2_Enum> _100921_e = (*this)._field_lookup.get()._method_find_enum(_98830_decl->_field_ident);
		if (jule::real(_100921_e)) {
			return (*this)._method_from_enum(_98830_decl,_100921_e);
		}
		jule::Ref<_1ac276c57_Trait> _101421_t = (*this)._field_lookup.get()._method_find_trait(_98830_decl->_field_ident);
		if ((!(jule::real(_101421_t)))) {
			_101421_t=_1ad5a38bd_find_builtin_trait(_98830_decl->_field_ident);
		}
		if (jule::real(_101421_t)) {
			if ((!((*this)._field_s->_method_is_accessible_define(_101421_t->_field_public,_101421_t->_field_token)))) {
				(*this)._method_push_err(_98830_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_98830_decl->_field_ident)}));
				return nullptr;
			}
			if (_98830_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_98830_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_98830_decl->_field_ident)}));
				return nullptr;
			}
			return _101421_t;
		}
	}
	jule::Ref<_1ab064271_Struct> _103217_s = (*this)._field_lookup.get()._method_find_struct(_98830_decl->_field_ident,_98830_decl->_field_cpp_linked);
	if (jule::real(_103217_s)) {
		return (*this)._method_from_struct(_98830_decl,_103217_s);
	}
	jule::Ref<_1ad3e617d_TypeAlias> _103717_ta = (*this)._field_lookup.get()._method_find_type_alias(_98830_decl->_field_ident,_98830_decl->_field_cpp_linked);
	if ((!(jule::real(_103717_ta)))) {
		_103717_ta=_1ad5a38bd_find_builtin_type_alias(_98830_decl->_field_ident);
	}
	if (jule::real(_103717_ta)) {
		return (*this)._method_from_type_alias(_98830_decl,_103717_ta);
	}
	(*this)._method_push_err(_98830_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_98830_decl->_field_ident)}));
	return nullptr;
}



inline jule::Trait<_1ad3e617d_Kind> _1ad3e617d_TypeChecker::_method_build_ident(jule::Ref<_1aaeea1c4_IdentTypeDecl> _104934_decl) {
	{
		if (!((_1ad3e617d_is_prim(_104934_decl->_field_ident)))) { goto _case_end_4452842624; }
		_case_begin_4452842624:;
		{
			return (*this)._method_build_prim(_104934_decl);
		}
		goto _match_end_4452840992;
		_case_end_4452842624:;
		_case_begin_4452841168:;
		{
			return (*this)._method_get_def(_104934_decl);
		}
		goto _match_end_4452840992;
		_case_end_4452841168:;
		_match_end_4452840992:;
	}
}



inline jule::Ref<_1ad3e617d_Ref> _1ad3e617d_TypeChecker::_method_build_ref_from_type(jule::Ref<_1ad3e617d_TypeKind> _105642_elem) {
	{
		if (!(((!(jule::real(_105642_elem)))))) { goto _case_end_4452845712; }
		_case_begin_4452845712:;
		{
			return jule::new_ref<_1ad3e617d_Ref>();
		}
		goto _match_end_4452844176;
		_case_end_4452845712:;
		if (!((jule::real(_105642_elem->_method_strct())))) { goto _case_end_4452845840; }
		_case_begin_4452845840:;
		{
			jule::Ref<_1ab064271_StructIns> _106317_s = _105642_elem->_method_strct();
			if (jule::real(_106317_s->_field_decl) && _106317_s->_field_decl->_field_cpp_linked) {
				(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1ad3e617d_Ref>();
			}
		}
		goto _match_end_4452844176;
		_case_end_4452845840:;
		if (!((jule::real(_105642_elem->_method_ref())))) { goto _case_end_4452845968; }
		_case_begin_4452845968:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to another reference", 48),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ad3e617d_Ref>();
		}
		goto _match_end_4452844176;
		_case_end_4452845968:;
		if (!((jule::real(_105642_elem->_method_ptr())))) { goto _case_end_4452846096; }
		_case_begin_4452846096:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to pointer", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ad3e617d_Ref>();
		}
		goto _match_end_4452844176;
		_case_end_4452846096:;
		if (!((jule::real(_105642_elem->_method_enm())))) { goto _case_end_4452846224; }
		_case_begin_4452846224:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to enum", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ad3e617d_Ref>();
		}
		goto _match_end_4452844176;
		_case_end_4452846224:;
		if (!((jule::real(_105642_elem->_method_arr())))) { goto _case_end_4452846352; }
		_case_begin_4452846352:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to array", 36),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ad3e617d_Ref>();
		}
		goto _match_end_4452844176;
		_case_end_4452846352:;
		_match_end_4452844176:;
	}
	return jule::new_struct<_1ad3e617d_Ref>(new( std::nothrow ) _1ad3e617d_Ref(_105642_elem));
}



inline jule::Ref<_1ad3e617d_Ref> _1ad3e617d_TypeChecker::_method_build_ref(jule::Ref<_1aaeea1c4_RefTypeDecl> _109132_decl) {
	jule::Bool _109213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_109213_not_plain;
	});
	jule::Ref<_1ad3e617d_TypeKind> _109617_elem = (*this)._method_check_decl(_109132_decl->_field_elem);
	return (*this)._method_build_ref_from_type(_109617_elem);
}



inline jule::Ref<_1ad3e617d_Ptr> _1ad3e617d_TypeChecker::_method_build_ptr_from_type(jule::Ref<_1ad3e617d_TypeKind> _110042_elem) {
	{
		if (!(((!(jule::real(_110042_elem)))))) { goto _case_end_4452870544; }
		_case_begin_4452870544:;
		{
			return jule::new_ref<_1ad3e617d_Ptr>();
		}
		goto _match_end_4452870288;
		_case_end_4452870544:;
		if (!((jule::real(_110042_elem->_method_ref())))) { goto _case_end_4452870672; }
		_case_begin_4452870672:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to reference", 34),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ad3e617d_Ptr>();
		}
		goto _match_end_4452870288;
		_case_end_4452870672:;
		if (!((jule::real(_110042_elem->_method_enm())))) { goto _case_end_4452870800; }
		_case_begin_4452870800:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to enum", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ad3e617d_Ptr>();
		}
		goto _match_end_4452870288;
		_case_end_4452870800:;
		if (!((jule::real(_110042_elem->_method_arr()) && _110042_elem->_method_arr()->_field_auto))) { goto _case_end_4452870928; }
		_case_begin_4452870928:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ad3e617d_Ptr>();
		}
		goto _match_end_4452870288;
		_case_end_4452870928:;
		_match_end_4452870288:;
	}
	return jule::new_struct<_1ad3e617d_Ptr>(new( std::nothrow ) _1ad3e617d_Ptr(_110042_elem));
}



inline jule::Ref<_1ad3e617d_Ptr> _1ad3e617d_TypeChecker::_method_build_ptr(jule::Ref<_1aaeea1c4_PtrTypeDecl> _112432_decl) {
	jule::Bool _112513_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_112513_not_plain;
	});
	jule::Ref<_1ad3e617d_TypeKind> _112917_elem = jule::new_ref<_1ad3e617d_TypeKind>();
	if ((!(_112432_decl->_method_is_unsafe()))) {
		_112917_elem=(*this)._method_check_decl(_112432_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_112917_elem);
	}
	return jule::new_struct<_1ad3e617d_Ptr>(new( std::nothrow ) _1ad3e617d_Ptr(_112917_elem));
}



inline jule::Ref<_1ad3e617d_Slc> _1ad3e617d_TypeChecker::_method_build_slc(jule::Ref<_1aaeea1c4_SlcTypeDecl> _114132_decl) {
	jule::Bool _114213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_114213_not_plain;
	});
	jule::Ref<_1ad3e617d_TypeKind> _114617_elem = (*this)._method_check_decl(_114132_decl->_field_elem);
	{
		if (!(((!(jule::real(_114617_elem)))))) { goto _case_end_4452895872; }
		_case_begin_4452895872:;
		{
			return jule::new_ref<_1ad3e617d_Slc>();
		}
		goto _match_end_4452895648;
		_case_end_4452895872:;
		if (!((jule::real(_114617_elem->_method_arr()) && _114617_elem->_method_arr()->_field_auto))) { goto _case_end_4452895984; }
		_case_begin_4452895984:;
		{
			(*this)._method_push_err(_114132_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ad3e617d_Slc>();
		}
		goto _match_end_4452895648;
		_case_end_4452895984:;
		_match_end_4452895648:;
	}
	return jule::new_struct<_1ad3e617d_Slc>(new( std::nothrow ) _1ad3e617d_Slc(_114617_elem));
}



inline jule::Ref<_1ad3e617d_Arr> _1ad3e617d_TypeChecker::_method_build_arr(jule::Ref<_1aaeea1c4_ArrTypeDecl> _116332_decl) {
	jule::Bool _116413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_116413_not_plain;
	});
	jule::Int _116817_n = 0LL;
	if ((!(_116332_decl->_method_auto_sized()))) {
		jule::Ref<_1acde49c3_Data> _117121_size = (*this)._field_s->_method_eval(_116332_decl->_field_size,(*this)._field_lookup);
		if ((!(jule::real(_117121_size)))) {
			return jule::new_ref<_1ad3e617d_Arr>();
		}
		if ((!(_117121_size->_method_is_const()))) {
			(*this)._method_push_err(_116332_decl->_field_size->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ad3e617d_Arr>();
		} else if ((!(jule::real(_117121_size->_field_kind->_method_prim()))) || (!(_1ad70d41d_is_int(_117121_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_116332_decl->_field_size->_field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ad3e617d_Arr>();
		}
		_116817_n=static_cast<jule::Int>(_117121_size->_field_constant->_method_as_i64());
		if (_116817_n < 0LL) {
			(*this)._method_push_err(_116332_decl->_field_elem->_field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ad3e617d_Arr>();
		}
	}
	jule::Ref<_1ad3e617d_TypeKind> _119117_elem = (*this)._method_check_decl(_116332_decl->_field_elem);
	{
		if (!(((!(jule::real(_119117_elem)))))) { goto _case_end_4452922624; }
		_case_begin_4452922624:;
		{
			return jule::new_ref<_1ad3e617d_Arr>();
		}
		goto _match_end_4452922176;
		_case_end_4452922624:;
		if (!((jule::real(_119117_elem->_method_arr()) && _119117_elem->_method_arr()->_field_auto))) { goto _case_end_4452922736; }
		_case_begin_4452922736:;
		{
			(*this)._method_push_err(_116332_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ad3e617d_Arr>();
		}
		goto _match_end_4452922176;
		_case_end_4452922736:;
		_match_end_4452922176:;
	}
	return jule::new_struct<_1ad3e617d_Arr>(new( std::nothrow ) _1ad3e617d_Arr(_116332_decl->_method_auto_sized(),_116817_n,_119117_elem));
}



inline jule::Ref<_1ad3e617d_Map> _1ad3e617d_TypeChecker::_method_build_map(jule::Ref<_1aaeea1c4_MapTypeDecl> _121032_decl) {
	jule::Bool _121113_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_121113_not_plain;
	});
	jule::Ref<_1ad3e617d_TypeKind> _121517_key = (*this)._method_check_decl(_121032_decl->_field_key);
	if ((!(jule::real(_121517_key)))) {
		return jule::new_ref<_1ad3e617d_Map>();
	}
	jule::Ref<_1ad3e617d_TypeKind> _122017_val = (*this)._method_check_decl(_121032_decl->_field_val);
	if ((!(jule::real(_122017_val)))) {
		return jule::new_ref<_1ad3e617d_Map>();
	}
	if (jule::real(_122017_val->_method_enm())) {
		(*this)._method_push_err(_121032_decl->_field_val->_field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>({}));
	}
	return jule::new_struct<_1ad3e617d_Map>(new( std::nothrow ) _1ad3e617d_Map(_121517_key,_122017_val));
}



inline jule::Ref<_1ad3e617d_Tuple> _1ad3e617d_TypeChecker::_method_build_tuple(jule::Ref<_1aaeea1c4_TupleTypeDecl> _123434_decl) {
	jule::Slice<jule::Ref<_1ad3e617d_TypeKind>> _123517_types = jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_123434_decl->_field_types.len())));
	{
		auto _range_expr = _123434_decl->_field_types;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ad3e617d_i = 0;
			jule::Ref<_1aaeea1c4_TypeDecl> _1ad3e617d_t = *_range_begin;
			_iter_begin_4452945856:;
			{
				jule::Ref<_1ad3e617d_TypeKind> _123721_kind = (*this)._method_check_decl(_1ad3e617d_t);
				if ((!(jule::real(_123721_kind)))) {
					return jule::new_ref<_1ad3e617d_Tuple>();
				}
				_123517_types[static_cast<jule::Int>(_1ad3e617d_i)]=_123721_kind;
			}
			_iter_next_4452945856:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ad3e617d_i; _1ad3e617d_t = *_range_begin; goto _iter_begin_4452945856; }
			_iter_end_4452945856:;
		}
	}
	return jule::new_struct<_1ad3e617d_Tuple>(new( std::nothrow ) _1ad3e617d_Tuple(_123517_types));
}



inline jule::Bool _1ad3e617d_TypeChecker::_method_check_fn_types(jule::Ref<_1ab07a50c_FnIns> _124737_f) {
	jule::Bool _124750_ok = jule::Bool();
	{
		auto _range_expr = _124737_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_ParamIns> _1ad3e617d_p = *_range_begin;
			_iter_begin_4452954608:;
			{
				_1ad3e617d_p->_field_kind=(*this)._method_build(_1ad3e617d_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_124750_ok=jule::real(_1ad3e617d_p->_field_kind);
				if ((!(_124750_ok))) {
					_124750_ok = false;
					return _124750_ok;
				}
			}
			_iter_next_4452954608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ad3e617d_p = *_range_begin; goto _iter_begin_4452954608; }
			_iter_end_4452954608:;
		}
	}
	if ((!(_124737_f->_field_decl->_method_is_void()))) {
		_124737_f->_field_result=(*this)._method_build(_124737_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_124750_ok = jule::real(_124737_f->_field_result);
		return _124750_ok;
	}
	_124750_ok = true;
	return _124750_ok;
}



inline jule::Ref<_1ab07a50c_FnIns> _1ad3e617d_TypeChecker::_method_build_fn(jule::Ref<_1aaeea1c4_FnDecl> _126431_decl) {
	if (_126431_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_126431_decl->_field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab07a50c_FnIns>();
	}
	jule::Ref<_1ab07a50c_Fn> _127017_f = _1ac699a1a_build_fn(_126431_decl);
	jule::Ref<_1ab07a50c_FnIns> _127117_ins = _127017_f->_method_instance_force();
	_127117_ins->_field_anon=true;
	jule::Bool _127413_ok = (*this)._method_check_fn_types(_127117_ins);
	if ((!(_127413_ok))) {
		return jule::new_ref<_1ab07a50c_FnIns>();
	}
	return _127117_ins;
}



inline jule::Trait<_1ad3e617d_Kind> _1ad3e617d_TypeChecker::_method_build_by_namespace(jule::Ref<_1aaeea1c4_NamespaceTypeDecl> _128241_decl) {
	jule::Str _128313_path = _1ad3e617d_build_link_path_by_tokens(_128241_decl->_field_idents);
	jule::Ref<_1ac78be4d_ImportInfo> _128417_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ac78be4d_ImportInfo>)>([=](jule::Ref<_1ac78be4d_ImportInfo> _128453_imp) mutable -> jule::Bool {
		if ((_128241_decl->_field_idents.len() == 1LL) && (_128453_imp->_field_alias == _128313_path)) {
			return true;
		}
		return _128453_imp->_field_std && (_128453_imp->_field_link_path == _128313_path);
	}));
	if ((!(jule::real(_128417_imp))) || (!(_128417_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_128241_decl->_field_idents[0LL],jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_128313_path)}));
		return nullptr;
	}
	jule::Trait<_1acde4cc0_Lookup> _129617_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_128417_imp;
	jule::Trait<_1ad3e617d_Kind> _129917_kind = (*this)._method_build_ident(_128241_decl->_field_kind);
	(*this)._field_lookup=_129617_lookup;
	return _129917_kind;
}



inline jule::Ref<_1ad3e617d_TypeKind> _1ad3e617d_TypeChecker::_method_build(jule::Any _130628_decl_kind) {
	jule::Trait<_1ad3e617d_Kind> _130717_kind = nullptr;
	{
		auto _match_expr{ _130628_decl_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_TypeKind>>())) { goto _case_end_4452995552; }
		_case_begin_4452995552:;
		{
			_130717_kind=_130628_decl_kind.operator jule::Ref<_1ad3e617d_TypeKind>();
		}
		goto _match_end_4452992080;
		_case_end_4452995552:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_IdentTypeDecl>>())) { goto _case_end_4452996128; }
		_case_begin_4452996128:;
		{
			jule::Trait<_1ad3e617d_Kind> _131421_t = (*this)._method_build_ident(_130628_decl_kind.operator jule::Ref<_1aaeea1c4_IdentTypeDecl>());
			if (_131421_t != nullptr) {
				_130717_kind=_131421_t;
			}
		}
		goto _match_end_4452992080;
		_case_end_4452996128:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_RefTypeDecl>>())) { goto _case_end_4452995792; }
		_case_begin_4452995792:;
		{
			jule::Ref<_1ad3e617d_Ref> _132021_t = (*this)._method_build_ref(_130628_decl_kind.operator jule::Ref<_1aaeea1c4_RefTypeDecl>());
			if (jule::real(_132021_t)) {
				_130717_kind=_132021_t;
			}
		}
		goto _match_end_4452992080;
		_case_end_4452995792:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_PtrTypeDecl>>())) { goto _case_end_4452995904; }
		_case_begin_4452995904:;
		{
			jule::Ref<_1ad3e617d_Ptr> _132621_t = (*this)._method_build_ptr(_130628_decl_kind.operator jule::Ref<_1aaeea1c4_PtrTypeDecl>());
			if (jule::real(_132621_t)) {
				_130717_kind=_132621_t;
			}
		}
		goto _match_end_4452992080;
		_case_end_4452995904:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_SlcTypeDecl>>())) { goto _case_end_4452994944; }
		_case_begin_4452994944:;
		{
			jule::Ref<_1ad3e617d_Slc> _133221_t = (*this)._method_build_slc(_130628_decl_kind.operator jule::Ref<_1aaeea1c4_SlcTypeDecl>());
			if (jule::real(_133221_t)) {
				_130717_kind=_133221_t;
			}
		}
		goto _match_end_4452992080;
		_case_end_4452994944:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_ArrTypeDecl>>())) { goto _case_end_4452995056; }
		_case_begin_4452995056:;
		{
			jule::Ref<_1ad3e617d_Arr> _133821_t = (*this)._method_build_arr(_130628_decl_kind.operator jule::Ref<_1aaeea1c4_ArrTypeDecl>());
			if (jule::real(_133821_t)) {
				_130717_kind=_133821_t;
			}
		}
		goto _match_end_4452992080;
		_case_end_4452995056:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_MapTypeDecl>>())) { goto _case_end_4452995168; }
		_case_begin_4452995168:;
		{
			jule::Ref<_1ad3e617d_Map> _134421_t = (*this)._method_build_map(_130628_decl_kind.operator jule::Ref<_1aaeea1c4_MapTypeDecl>());
			if (jule::real(_134421_t)) {
				_130717_kind=_134421_t;
			}
		}
		goto _match_end_4452992080;
		_case_end_4452995168:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_TupleTypeDecl>>())) { goto _case_end_4452992912; }
		_case_begin_4452992912:;
		{
			jule::Ref<_1ad3e617d_Tuple> _135021_t = (*this)._method_build_tuple(_130628_decl_kind.operator jule::Ref<_1aaeea1c4_TupleTypeDecl>());
			if (jule::real(_135021_t)) {
				_130717_kind=_135021_t;
			}
		}
		goto _match_end_4452992080;
		_case_end_4452992912:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_FnDecl>>())) { goto _case_end_4452993024; }
		_case_begin_4452993024:;
		{
			jule::Ref<_1ab07a50c_FnIns> _135621_t = (*this)._method_build_fn(_130628_decl_kind.operator jule::Ref<_1aaeea1c4_FnDecl>());
			if (jule::real(_135621_t)) {
				_130717_kind=_135621_t;
			}
		}
		goto _match_end_4452992080;
		_case_end_4452993024:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_NamespaceTypeDecl>>())) { goto _case_end_4452993136; }
		_case_begin_4452993136:;
		{
			jule::Trait<_1ad3e617d_Kind> _136221_t = (*this)._method_build_by_namespace(_130628_decl_kind.operator jule::Ref<_1aaeea1c4_NamespaceTypeDecl>());
			if (_136221_t != nullptr) {
				_130717_kind=_136221_t;
			}
		}
		goto _match_end_4452992080;
		_case_end_4452993136:;
		_case_begin_4452992496:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ad3e617d_TypeKind>();
		}
		goto _match_end_4452992080;
		_case_end_4452992496:;
		_match_end_4452992080:;
	}
	if (_130717_kind == nullptr) {
		return jule::new_ref<_1ad3e617d_TypeKind>();
	}
	{
		auto _match_expr{ _130717_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_TypeKind>>())) { goto _case_end_4453026624; }
		_case_begin_4453026624:;
		{
			return _130717_kind.operator jule::Ref<_1ad3e617d_TypeKind>();
		}
		goto _match_end_4453023568;
		_case_end_4453026624:;
		_case_begin_4453025328:;
		{
			return jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_130717_kind));
		}
		goto _match_end_4453023568;
		_case_end_4453025328:;
		_match_end_4453023568:;
	}
}



inline jule::Ref<_1ad3e617d_TypeKind> _1ad3e617d_TypeChecker::_method_check_decl(jule::Ref<_1aaeea1c4_TypeDecl> _138733_decl) {
	_1ab0277b7_Token _138917_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_138733_decl->_field_token;
	jule::Ref<_1ad3e617d_TypeKind> _139217_kind = (*this)._method_build(_138733_decl->_field_kind);
	(*this)._field_error_token=_138917_error_token;
	return _139217_kind;
}



inline void _1ad3e617d_TypeChecker::_method_check(jule::Ref<_1ad3e617d_TypeSymbol> _139828_t) {
	if ((!(jule::real(_139828_t->_field_decl)))) {
		return;
	}
	jule::Ref<_1ad3e617d_TypeKind> _140317_kind = (*this)._method_check_decl(_139828_t->_field_decl);
	if ((!(jule::real(_140317_kind)))) {
		_139828_t->_method_remove_kind();
		return;
	}
	_139828_t->_field_kind=_140317_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad3e617d_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ac78be4d_ImportInfo> _1aae95878_PlainImporter::_method_get_import(jule::Str _10133_path) {
	{
		auto _range_expr = (*this)._field_all_packages;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1aae95878_p = *_range_begin;
			_iter_begin_4453159264:;
			{
				if (_1aae95878_p->_field_path == _10133_path) {
					return _1aae95878_p;
				}
			}
			_iter_next_4453159264:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae95878_p = *_range_begin; goto _iter_begin_4453159264; }
			_iter_end_4453159264:;
		}
	}
	return jule::new_ref<_1ac78be4d_ImportInfo>();
}



inline std::tuple<jule::Slice<jule::Ref<_1ab026d8d_Ast>>,jule::Slice<_1d068165a_Log>> _1aae95878_PlainImporter::_method_import_package(jule::Str _11137_path) {
	jule::Slice<jule::Ref<_1aaee94d1_DirEntry>> _11214_dirents;
	jule::Str _11223_err_msg;
	std::tie(_11214_dirents,_11223_err_msg) = _1aae95878_read_package_dirents(_11137_path);
	if (_11223_err_msg != jule::Str("", 0)) {
		jule::Slice<_1d068165a_Log> _11421_errors = jule::Slice<_1d068165a_Log>({_1aae95878_flat_compiler_err(_11223_err_msg)});
		return std::make_tuple(nullptr,_11421_errors);
	}
	jule::Slice<jule::Ref<_1ab026d8d_Ast>> _11817_asts = jule::Slice<jule::Ref<_1ab026d8d_Ast>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_11214_dirents.len())));
	{
		auto _range_expr = _11214_dirents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaee94d1_DirEntry> _1aae95878_dirent = *_range_begin;
			_iter_begin_4453170944:;
			{
				jule::Str _12017_path = _1d05b5e41_join(jule::Slice<jule::Str>({_11137_path,_1aae95878_dirent->_field_name}));
				jule::Ref<_1ab029324_File> _12121_file = _1ab029324_new_file_set(_12017_path);
				_12121_file->_method_fill(_1aae95878_read_buff(_12121_file->_method_path()));
				jule::Slice<_1d068165a_Log> _12321_errors = _1ab00b922_lex(_12121_file);
				if (_12321_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12321_errors);
				}
				jule::Ref<_1ab059068_FileInfo> _12821_finfo = _1ab059068_parse_file(_12121_file);
				if (_12821_finfo->_field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12821_finfo->_field_errors);
				}
				if ((!(_1d0682903_is_pass_file_annotation(_1aae95878_dirent->_field_name)))) {
					goto _iter_next_4453170944;
				}
				if ((!(_1aae95878_is_pass_build_directives(_12821_finfo->_field_ast)))) {
					goto _iter_next_4453170944;
				}
				_11817_asts=jule::append(_11817_asts,jule::Slice<jule::Ref<_1ab026d8d_Ast>>({_12821_finfo->_field_ast}));
			}
			_iter_next_4453170944:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae95878_dirent = *_range_begin; goto _iter_begin_4453170944; }
			_iter_end_4453170944:;
		}
	}
	return std::make_tuple(_11817_asts,nullptr);
}



inline void _1aae95878_PlainImporter::_method_imported(jule::Ref<_1ac78be4d_ImportInfo> _14935_imp) {
	{
		auto _range_expr = (*this)._field_all_packages;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1aae95878_p = *_range_begin;
			_iter_begin_4453191120:;
			{
				if ((_1aae95878_p->_field_cpp_linked == _14935_imp->_field_cpp_linked) && (_1aae95878_p->_field_link_path == _14935_imp->_field_link_path)) {
					return;
				}
			}
			_iter_next_4453191120:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae95878_p = *_range_begin; goto _iter_begin_4453191120; }
			_iter_end_4453191120:;
		}
	}
	(*this)._field_all_packages=jule::append((*this)._field_all_packages,jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>>({_14935_imp}));
}







std::ostream &operator<<(std::ostream &_Stream, const _1aae95878_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aae6a276_OrderedDefines &_Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ref<_1aae4981b_IR>,jule::Slice<_1d068165a_Log>> _1aae4981b_IR::_static_method_build(jule::Str _2525_path) {
	jule::Ref<_1aae95878_PlainImporter> _2617_importer = jule::new_struct<_1aae95878_PlainImporter>(new( std::nothrow ) _1aae95878_PlainImporter());
	jule::Slice<jule::Ref<_1ab026d8d_Ast>> _2718_files;
	jule::Slice<_1d068165a_Log> _2729_logs;
	std::tie(_2718_files,_2729_logs) = _2617_importer->_method_import_package(_2525_path);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1aae4981b_IR>(),_2729_logs);
	}
	if (_2718_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_1aae4981b_IR>(),nullptr);
	}
	jule::Ref<_1ac78be4d_Package> _3618_pkg;
	std::tie(_3618_pkg,_2729_logs) = _1ad4a0886_analyze_package(_2718_files,_2617_importer);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1aae4981b_IR>(),_2729_logs);
	}
	jule::Ref<_1aae4981b_IR> _4117_ir = jule::new_struct<_1aae4981b_IR>(new( std::nothrow ) _1aae4981b_IR(jule::Slice<jule::Str>(),_3618_pkg,_2617_importer->_field_all_packages,_1aae6a276_OrderedDefines()));
	_4117_ir->_field_passes=_1aae4981b_get_all_unique_passes(_4117_ir->_field_main,_4117_ir->_field_used);
	return std::make_tuple(_4117_ir,nullptr);
}



inline void _1aae4981b_IR::_method_append_structs(jule::Ref<_1ac78be4d_Package>& _5234_p,jule::Slice<jule::Ref<_1ab064271_Struct>>& _5258_buffer) {
	{
		auto _range_expr = _5234_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1aae4981b_f = *_range_begin;
			_iter_begin_4453251856:;
			{
				{
					auto _range_expr = _1aae4981b_f->_field_structs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ab064271_Struct> _1aae4981b_s = *_range_begin;
						_iter_begin_4453253808:;
						{
							if ((!(_1aae4981b_s->_field_cpp_linked))) {
								_5258_buffer=jule::append(_5258_buffer,jule::Slice<jule::Ref<_1ab064271_Struct>>({_1aae4981b_s}));
							}
						}
						_iter_next_4453253808:;
						++_range_begin;
						if (_range_begin != _range_end) { _1aae4981b_s = *_range_begin; goto _iter_begin_4453253808; }
						_iter_end_4453253808:;
					}
				}
			}
			_iter_next_4453251856:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae4981b_f = *_range_begin; goto _iter_begin_4453251856; }
			_iter_end_4453251856:;
		}
	}
}



inline jule::Slice<jule::Ref<_1ab064271_Struct>> _1aae4981b_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ref<_1ab064271_Struct>> _6517_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_6517_buffer);
	{
		auto _range_expr = (*this)._field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1aae4981b_u = *_range_begin;
			_iter_begin_4453259456:;
			{
				if ((!(_1aae4981b_u->_field_cpp_linked))) {
					(*this)._method_append_structs(_1aae4981b_u->_field_package,_6517_buffer);
				}
			}
			_iter_next_4453259456:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae4981b_u = *_range_begin; goto _iter_begin_4453259456; }
			_iter_end_4453259456:;
		}
	}
	return _6517_buffer;
}



inline void _1aae4981b_IR::_method_append_vars(jule::Ref<_1ac78be4d_Package>& _7831_p,jule::Slice<jule::Ref<_1aca3647d_Var>>& _7855_buffer) {
	{
		auto _range_expr = _7831_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1aae4981b_f = *_range_begin;
			_iter_begin_4453266240:;
			{
				{
					auto _range_expr = _1aae4981b_f->_field_vars;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1aca3647d_Var> _1aae4981b_v = *_range_begin;
						_iter_begin_4449578720:;
						{
							if ((!(_1aae4981b_v->_field_cpp_linked))) {
								_7855_buffer=jule::append(_7855_buffer,jule::Slice<jule::Ref<_1aca3647d_Var>>({_1aae4981b_v}));
							}
						}
						_iter_next_4449578720:;
						++_range_begin;
						if (_range_begin != _range_end) { _1aae4981b_v = *_range_begin; goto _iter_begin_4449578720; }
						_iter_end_4449578720:;
					}
				}
			}
			_iter_next_4453266240:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae4981b_f = *_range_begin; goto _iter_begin_4453266240; }
			_iter_end_4453266240:;
		}
	}
}



inline jule::Slice<jule::Ref<_1aca3647d_Var>> _1aae4981b_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ref<_1aca3647d_Var>> _9117_buffer = nullptr;
	(*this)._method_append_vars((*this)._field_main,_9117_buffer);
	{
		auto _range_expr = (*this)._field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1aae4981b_u = *_range_begin;
			_iter_begin_4451284624:;
			{
				if ((!(_1aae4981b_u->_field_cpp_linked))) {
					(*this)._method_append_vars(_1aae4981b_u->_field_package,_9117_buffer);
				}
			}
			_iter_next_4451284624:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae4981b_u = *_range_begin; goto _iter_begin_4451284624; }
			_iter_end_4451284624:;
		}
	}
	return _9117_buffer;
}



inline void _1aae4981b_IR::_method_order(void) {
	(*this)._field_ordered._field_structs=(*this)._method_get_all_structures();
	(*this)._field_ordered._field_globals=(*this)._method_get_all_variables();
	_1aae6a276_DefineOrderer::_static_method_order_variables((*this)._field_ordered._field_globals);
	_1aae6a276_DefineOrderer::_static_method_order_structures((*this)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1aae4981b_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aae6a276_DefineOrderer::_static_method_is_struct_ordered(jule::Slice<jule::Ref<_1ab064271_Struct>>& _1738_structs,jule::Ref<_1ab064271_Struct> _1758_s) {
	{
		auto _range_expr = _1758_s->_field_depends;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1aae6a276_d = *_range_begin;
			_iter_begin_4451303888:;
			{
				{
					auto _range_expr = _1738_structs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ab064271_Struct> _1aae6a276_ss = *_range_begin;
						_iter_begin_4451305664:;
						{
							if ((_1aae6a276_ss).alloc == (_1758_s).alloc) {
								return false;
							}
							if ((_1aae6a276_ss).alloc == (_1aae6a276_d).alloc) {
								goto _iter_end_4451305664;
							}
						}
						_iter_next_4451305664:;
						++_range_begin;
						if (_range_begin != _range_end) { _1aae6a276_ss = *_range_begin; goto _iter_begin_4451305664; }
						_iter_end_4451305664:;
					}
				}
			}
			_iter_next_4451303888:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae6a276_d = *_range_begin; goto _iter_begin_4451303888; }
			_iter_end_4451303888:;
		}
	}
	return true;
}



inline void _1aae6a276_DefineOrderer::_static_method_order_structures(jule::Slice<jule::Ref<_1ab064271_Struct>>& _3441_structs) {
	jule::I64 _3513_n = _3441_structs.len();
	_julec_label_repeat:;
	jule::Bool _3717_order_changed = false;
	jule::Int _3817_i = 0LL;
	_iter_begin_4451312272:;
	if (!(_3817_i < _3513_n)) { goto _iter_end_4451312272; }
	{
		jule::Bool _4021_swapped = false;
		jule::Int _4221_j = 0LL;
		_iter_begin_4451315104:;
		if (!(_4221_j < ((_3513_n - _3817_i) - 1LL))) { goto _iter_end_4451315104; }
		{
			if ((!(_1aae6a276_DefineOrderer::_static_method_is_struct_ordered(_3441_structs,_3441_structs[static_cast<jule::Int>(_4221_j)])))) {
				std::tie(_3441_structs[static_cast<jule::Int>(_4221_j)],_3441_structs[static_cast<jule::Int>(_4221_j + 1LL)]) = std::make_tuple(_3441_structs[static_cast<jule::Int>(_4221_j + 1LL)],_3441_structs[static_cast<jule::Int>(_4221_j)]);
				_4021_swapped=true;
				_3717_order_changed=true;
			}
		}
		_iter_next_4451315104:;
		(_4221_j)++;
		goto _iter_begin_4451315104;
		_iter_end_4451315104:;
		if ((!(_4021_swapped))) {
			goto _iter_end_4451312272;
		}
	}
	_iter_next_4451312272:;
	(_3817_i)++;
	goto _iter_begin_4451312272;
	_iter_end_4451312272:;
	if (_3717_order_changed) {
		goto _julec_label_repeat;
	}
}



inline jule::Bool _1aae6a276_DefineOrderer::_static_method_is_var_ordered(jule::Slice<jule::Ref<_1aca3647d_Var>>& _6135_vars,jule::Ref<_1aca3647d_Var> _6149_v) {
	{
		auto _range_expr = _6149_v->_field_depends;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aca3647d_Var> _1aae6a276_d = *_range_begin;
			_iter_begin_4451327808:;
			{
				{
					auto _range_expr = _6135_vars;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1aca3647d_Var> _1aae6a276_vv = *_range_begin;
						_iter_begin_4451329584:;
						{
							if ((_1aae6a276_vv).alloc == (_6149_v).alloc) {
								return false;
							}
							if ((_1aae6a276_vv).alloc == (_1aae6a276_d).alloc) {
								goto _iter_end_4451329584;
							}
						}
						_iter_next_4451329584:;
						++_range_begin;
						if (_range_begin != _range_end) { _1aae6a276_vv = *_range_begin; goto _iter_begin_4451329584; }
						_iter_end_4451329584:;
					}
				}
			}
			_iter_next_4451327808:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae6a276_d = *_range_begin; goto _iter_begin_4451327808; }
			_iter_end_4451327808:;
		}
	}
	return true;
}



inline void _1aae6a276_DefineOrderer::_static_method_order_variables(jule::Slice<jule::Ref<_1aca3647d_Var>>& _7840_vars) {
	jule::I64 _7913_n = _7840_vars.len();
	_julec_label_repeat:;
	jule::Bool _8117_order_changed = false;
	jule::Int _8217_i = 0LL;
	_iter_begin_4451336192:;
	if (!(_8217_i < _7913_n)) { goto _iter_end_4451336192; }
	{
		jule::Bool _8421_swapped = false;
		jule::Int _8621_j = 0LL;
		_iter_begin_4451339024:;
		if (!(_8621_j < ((_7913_n - _8217_i) - 1LL))) { goto _iter_end_4451339024; }
		{
			if ((!(_1aae6a276_DefineOrderer::_static_method_is_var_ordered(_7840_vars,_7840_vars[static_cast<jule::Int>(_8621_j)])))) {
				std::tie(_7840_vars[static_cast<jule::Int>(_8621_j)],_7840_vars[static_cast<jule::Int>(_8621_j + 1LL)]) = std::make_tuple(_7840_vars[static_cast<jule::Int>(_8621_j + 1LL)],_7840_vars[static_cast<jule::Int>(_8621_j)]);
				_8421_swapped=true;
				_8117_order_changed=true;
			}
		}
		_iter_next_4451339024:;
		(_8621_j)++;
		goto _iter_begin_4451339024;
		_iter_end_4451339024:;
		if ((!(_8421_swapped))) {
			goto _iter_end_4451336192;
		}
	}
	_iter_next_4451336192:;
	(_8217_i)++;
	goto _iter_begin_4451336192;
	_iter_end_4451336192:;
	if (_8117_order_changed) {
		goto _julec_label_repeat;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1aae6a276_DefineOrderer &_Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _1aae3b247_ScopeDeadCode::_method_optimize_child(jule::Ref<_1ac77dd1e_Scope>& _2239_s) {
	jule::Ref<_1aae3b247_ScopeDeadCode> _2317_sdc = jule::new_struct<_1aae3b247_ScopeDeadCode>(new( std::nothrow ) _1aae3b247_ScopeDeadCode(this->self,_2239_s,(&(_2239_s->_field_stmts)),jule::Int()));
	{
		_2317_sdc->_method_optimize_stmts();
	}
}



inline void _1aae3b247_ScopeDeadCode::_method_eliminate_followed(void) {
	(*((*this)._field_stmts))=(*((*this)._field_stmts)).slice(0LL,static_cast<jule::Int>((*this)._field_i + 1LL));
	jule::Ref<_1aae3b247_ScopeDeadCode> _3317_parent = (*this)._field_parent;
	_iter_begin_4451623808:;
	if (!(jule::real(_3317_parent))) { goto _iter_end_4451623808; }
	{
		(*(_3317_parent->_field_stmts))=(*(_3317_parent->_field_stmts)).slice(0LL,static_cast<jule::Int>(_3317_parent->_field_i + 1LL));
		_3317_parent=_3317_parent->_field_parent;
	}
	_iter_next_4451623808:;
	goto _iter_begin_4451623808;
	_iter_end_4451623808:;
}



inline void _1aae3b247_ScopeDeadCode::_method_optimize_stmt(jule::Any _4044_st) {
	{
		auto _match_expr{ _4044_st };
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Scope>>())) { goto _case_end_4451630992; }
		_case_begin_4451630992:;
		{
			jule::Ref<_1ac77dd1e_Scope> _4321_scope = _4044_st.operator jule::Ref<_1ac77dd1e_Scope>();
			if (_4321_scope->_field_deferred) {
				_1aae3b247_eliminate_dead_code_of_scope(_4321_scope);
			} else {
				this->self->_method_optimize_child(_4321_scope);
			}
		}
		goto _match_end_4451630656;
		_case_end_4451630992:;
		if (!(_match_expr.type_is<jule::Ref<_1acde49c3_Data>>())) { goto _case_end_4451631120; }
		_case_begin_4451631120:;
		{
			{
				auto _match_expr{ _4044_st.operator jule::Ref<_1acde49c3_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BuiltinPanicCallExprModel>>())) { goto _case_end_4451637872; }
				_case_begin_4451637872:;
				{
					this->self->_method_eliminate_followed();
				}
				goto _match_end_4451635136;
				_case_end_4451637872:;
				_match_end_4451635136:;
			}
		}
		goto _match_end_4451630656;
		_case_end_4451631120:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_RetSt>>())) { goto _case_end_4451631376; }
		_case_begin_4451631376:;
		{
			this->self->_method_eliminate_followed();
		}
		goto _match_end_4451630656;
		_case_end_4451631376:;
		_match_end_4451630656:;
	}
}



inline void _1aae3b247_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	_iter_begin_4451632240:;
	if (!(this->self->_field_i < this->self->_field_stmts->len())) { goto _iter_end_4451632240; }
	{
		this->self->_method_optimize_stmt((*(this->self->_field_stmts))[static_cast<jule::Int>(this->self->_field_i)]);
	}
	_iter_next_4451632240:;
	(this->self->_field_i)++;
	goto _iter_begin_4451632240;
	_iter_end_4451632240:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aae3b247_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aae7037a_IndexRangeSetter::_method_setup_vars(jule::Ref<_1aca3647d_Var> _4729_key_a,jule::Ref<_1aca3647d_Var> _4746_key_b) {
	jule::Str _4813_indent = _1adad79c3_indent();
	jule::Str _5017_obj = jule::Str("", 0);
	if (jule::real(_4729_key_a)) {
		_5017_obj+=_1adad79c3_gen_var_init_expr(_4729_key_a,jule::Str("0", 1));
		_5017_obj+=jule::Str("\n", 1);
		_5017_obj+=_4813_indent;
	}
	if (jule::real(_4746_key_b)) {
		_5017_obj+=_1adad79c3_gen_var_init_expr(_4746_key_b,jule::Str("*_range_begin", 13));
		_5017_obj+=jule::Str("\n", 1);
		_5017_obj+=_4813_indent;
	}
	return _5017_obj;
}



inline jule::Str _1aae7037a_IndexRangeSetter::_method_next_steps(jule::Ref<_1aca3647d_Var> _6629_key_a,jule::Ref<_1aca3647d_Var> _6646_key_b,jule::Str _6659_begin) {
	jule::Str _6713_indent = _1adad79c3_indent();
	jule::Str _6917_obj = jule::Str("++_range_begin;\n", 16);
	_6917_obj+=_6713_indent;
	_6917_obj+=jule::Str("if (_range_begin != _range_end) { ", 34);
	if (jule::real(_6629_key_a)) {
		_6917_obj+=(jule::Str("++", 2) + _1adaa2350_var_out_ident(_6629_key_a)) + jule::Str("; ", 2);
	}
	if (jule::real(_6646_key_b)) {
		_6917_obj+=_1adaa2350_var_out_ident(_6646_key_b) + jule::Str(" = *_range_begin; ", 18);
	}
	_6917_obj+=(jule::Str("goto ", 5) + _6659_begin) + jule::Str("; }\n", 4);
	return _6917_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aae7037a_IndexRangeSetter &_Src) {
	_Stream << "IndexRangeSetter{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aae7037a_MapRangeSetter::_method_setup_vars(jule::Ref<_1aca3647d_Var> _8829_key_a,jule::Ref<_1aca3647d_Var> _8846_key_b) {
	jule::Str _8913_indent = _1adad79c3_indent();
	jule::Str _9017_obj = jule::Str("", 0);
	if (jule::real(_8829_key_a)) {
		_9017_obj+=_1adad79c3_gen_var_init_expr(_8829_key_a,jule::Str("_range_begin->first", 19));
		_9017_obj+=jule::Str("\n", 1);
		_9017_obj+=_8913_indent;
	}
	if (jule::real(_8846_key_b)) {
		_9017_obj+=_1adad79c3_gen_var_init_expr(_8846_key_b,jule::Str("_range_begin->second", 20));
		_9017_obj+=jule::Str("\n", 1);
		_9017_obj+=_8913_indent;
	}
	return _9017_obj;
}



inline jule::Str _1aae7037a_MapRangeSetter::_method_next_steps(jule::Ref<_1aca3647d_Var> _10729_key_a,jule::Ref<_1aca3647d_Var> _10746_key_b,jule::Str _10759_begin) {
	jule::Str _10813_indent = _1adad79c3_indent();
	jule::Str _11017_obj = jule::Str("++_range_begin;\n", 16);
	_11017_obj+=_10813_indent;
	_11017_obj+=jule::Str("if (_range_begin != _range_end) { ", 34);
	if (jule::real(_10729_key_a)) {
		_11017_obj+=_1adaa2350_var_out_ident(_10729_key_a);
		_11017_obj+=jule::Str(" = _range_begin->first; ", 24);
	}
	if (jule::real(_10746_key_b)) {
		_11017_obj+=_1adaa2350_var_out_ident(_10746_key_b);
		_11017_obj+=jule::Str(" = _range_begin->second; ", 25);
	}
	_11017_obj+=(jule::Str("goto ", 5) + _10759_begin) + jule::Str("; }\n", 4);
	return _11017_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _1aae7037a_MapRangeSetter &_Src) {
	_Stream << "MapRangeSetter{";
	_Stream << "}";
	return _Stream;
}



inline jule::Int _1d0647599_get_last_errno(void) {
	return errno;
}



inline jule::Str _1a8908684_byte_ptr_to_str(jule::U8* _4831_s) {
	if (_4831_s == nullptr) {
		return jule::Str("", 0);
	}
	return __jule_str_from_byte_ptr(_4831_s);
}



inline jule::Int _1a8908684_stat(jule::U8* _5620_path,struct stat* _5637_stat) {
	return static_cast<jule::Int>(__jule_stat(((char*)(_5620_path)),_5637_stat));
}



inline jule::Int _1a8908684_open(jule::U8* _6120_path,jule::Int _6133_flag,jule::Int _6144_mode) {
	return static_cast<jule::Int>(open(((char*)(_6120_path)),_6133_flag,_6144_mode));
}



inline jule::U8* _1a8908684_getcwd(jule::U8* _6722_buff,jule::Uint _6735_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_6722_buff)),_6735_bufflen)));
}



inline DIR* _1a8908684_opendir(jule::U8* _7223_path) {
	return opendir(((char*)(_7223_path)));
}



inline struct dirent* _1a8908684_readdir(DIR* _7527_dir) {
	return readdir(_7527_dir);
}



inline jule::Int _1a8908684_closedir(DIR* _7828_dir) {
	return static_cast<jule::Int>(closedir(_7828_dir));
}



inline jule::Int _1a8908684_chdir(jule::U8* _8121_path) {
	return static_cast<jule::Int>(chdir(((char*)(_8121_path))));
}



inline jule::Int _1a8908684_remove(jule::U8* _8422_path) {
	return static_cast<jule::Int>(remove(((char*)(_8422_path))));
}



inline jule::Int _1a8908684_mkdir(jule::U8* _8721_path,jule::Int _8734_mode) {
	return static_cast<jule::Int>(mkdir(((char*)(_8721_path)),_8734_mode));
}



inline jule::Int _1a8908684_rmdir(jule::U8* _9221_path) {
	return static_cast<jule::Int>(rmdir(((char*)(_9221_path))));
}



inline jule::Int _1a8908684_unlink(jule::U8* _9522_path) {
	return static_cast<jule::Int>(unlink(((char*)(_9522_path))));
}



inline jule::I64 _1b6bcde9b_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::Int _1b6bcde9b_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::Int _1b6bcde9b_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



inline jule::Int _1b6bcde9b_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _1b6bcde9b_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline void* _1b6c0aa55_malloc(jule::Uint _1515_size) {
	return malloc(_1515_size);
}



inline void* _1b6c0aa55_calloc(jule::Uint _1915_size,jule::Uint _1927_n) {
	return calloc(_1915_size,_1927_n);
}



inline void* _1b6c0aa55_realloc(void* _2427_ptr,jule::Uint _2441_size) {
	return realloc(_2427_ptr,_2441_size);
}



inline void _1b6c0aa55_free(void* _2924_ptr) {
	free(_2924_ptr);
}



inline jule::Int _1d0635da1_get_last_os_error(void) {
	jule::Int _319_err = _1d0647599_get_last_errno();
	{
		auto _match_expr{ _319_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4429122160; }
		_case_begin_4429122160:;
		{
			return 1LLU;
		}
		goto _match_end_4429120656;
		_case_end_4429122160:;
		if (!((5LL) == _match_expr)) { goto _case_end_4429122272; }
		_case_begin_4429122272:;
		{
			return 2LLU;
		}
		goto _match_end_4429120656;
		_case_end_4429122272:;
		if (!((62LL) == _match_expr)) { goto _case_end_4429122384; }
		_case_begin_4429122384:;
		{
			return 3LLU;
		}
		goto _match_end_4429120656;
		_case_end_4429122384:;
		if (!((63LL) == _match_expr)) { goto _case_end_4429121440; }
		_case_begin_4429121440:;
		{
			return 4LLU;
		}
		goto _match_end_4429120656;
		_case_end_4429121440:;
		if (!((2LL) == _match_expr)) { goto _case_end_4429121552; }
		_case_begin_4429121552:;
		{
			return 5LLU;
		}
		goto _match_end_4429120656;
		_case_end_4429121552:;
		if (!((20LL) == _match_expr)) { goto _case_end_4429121664; }
		_case_begin_4429121664:;
		{
			return 6LLU;
		}
		goto _match_end_4429120656;
		_case_end_4429121664:;
		if (!((12LL) == _match_expr)) { goto _case_end_4429122768; }
		_case_begin_4429122768:;
		{
			return 7LLU;
		}
		goto _match_end_4429120656;
		_case_end_4429122768:;
		_case_begin_4429120992:;
		{
			return 0LLU;
		}
		goto _match_end_4429120656;
		_case_end_4429120992:;
		_match_end_4429120656:;
	}
}



inline std::tuple<jule::Str,jule::Int> _1d063b77a_working_dir(void) {
	jule::Str _3410_p;
	jule::Int _3413_err;
	std::tie(_3410_p,_3413_err) = _1d0642d25___getwd();
	return std::make_tuple(_3410_p,_3413_err);
}



inline jule::Int _1d063b77a_set_working_dir(jule::Str _4324_path) {
	if (_4324_path == jule::Str("", 0)) {
		return 6LLU;
	}
	return _1d0642d25___chdir(_4324_path);
}



inline void _1d063b77a_init(void) {
	{
		(*((&(_1d063b77a_ARGS))))=jule::command_line_args;
		(*((&(_1d063b77a_ENV))))=jule::environment_variables;
	}
}



inline std::tuple<jule::Str,jule::Int> _1d0642d25___getwd(void) {
	jule::U8* _1513_buff = _1a8908684_getcwd(nullptr,0LLU);
	if (_1513_buff == nullptr) {
		return std::make_tuple(jule::Str("", 0),_1d0635da1_get_last_os_error());
	}
	jule::Str _199_pwd = _1a8908684_byte_ptr_to_str(_1513_buff);
	{
		_1b6c0aa55_free(_1513_buff);
	}
	return std::make_tuple(_199_pwd,0LLU);
}



inline jule::Int _1d0642d25___chdir(jule::Str _2612_path) {
	if (_1a8908684_chdir((&(_2612_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1d0635da1_get_last_os_error();
}



inline jule::Str _1d05b5e41_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _1d05b6040_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(static_cast<jule::Int>(_1099_vol_len));
	if (_10718_path == jule::Str("", 0)) {
		if (((_1099_vol_len > 1LL) && _1d05b6040_is_path_sep(_1089_original_path[0LL])) && _1d05b6040_is_path_sep(_1089_original_path[1LL])) {
			return _1d05b5e41_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _1d05b6040_is_path_sep(_10718_path[0LL]);
	jule::I64 _1259_n = _10718_path.len();
	_1d05b5e41_LazyBuff _12613_out = _1d05b5e41_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(47LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	_iter_begin_4429203632:;
	if (!(_13114_r < _1259_n)) { goto _iter_end_4429203632; }
	{
		{
			if (!((_1d05b6040_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)])))) { goto _case_end_4429216320; }
			_case_begin_4429216320:;
			{
				(_13114_r)++;
			}
			goto _match_end_4429183424;
			_case_end_4429216320:;
			if (!(((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (((_13114_r + 1LL) == _1259_n) || _1d05b6040_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 1LL)]))))) { goto _case_end_4429217696; }
			_case_begin_4429217696:;
			{
				(_13114_r)++;
			}
			goto _match_end_4429183424;
			_case_end_4429217696:;
			if (!((((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (_10718_path[static_cast<jule::Int>(_13114_r + 1LL)] == '.')) && (((_13114_r + 2LL) == _1259_n) || _1d05b6040_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 2LL)]))))) { goto _case_end_4429216048; }
			_case_begin_4429216048:;
			{
				_13114_r+=2LL;
				{
					if (!((_12613_out._field_w > _13121_dotdot))) { goto _case_end_4429225920; }
					_case_begin_4429225920:;
					{
						(_12613_out._field_w)--;
						_iter_begin_4429227104:;
						if (!((_12613_out._field_w > _13121_dotdot) && (!(_1d05b6040_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w))))))) { goto _iter_end_4429227104; }
						{
							(_12613_out._field_w)--;
						}
						_iter_next_4429227104:;
						goto _iter_begin_4429227104;
						_iter_end_4429227104:;
					}
					goto _match_end_4429224416;
					_case_end_4429225920:;
					if (!(((!(_1189_rooted))))) { goto _case_end_4429226032; }
					_case_begin_4429226032:;
					{
						if (_12613_out._field_w > 0LL) {
							_12613_out._method_append(47LLU);
						}
						_12613_out._method_append('.');
						_12613_out._method_append('.');
						_13121_dotdot=_12613_out._field_w;
					}
					goto _match_end_4429224416;
					_case_end_4429226032:;
					_match_end_4429224416:;
				}
			}
			goto _match_end_4429183424;
			_case_end_4429216048:;
			_case_begin_4429203968:;
			{
				if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
					_12613_out._method_append(47LLU);
				}
				if (((false && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
					jule::Int _17425_i = _13114_r;
					_iter_begin_4429209216:;
					if (!((_17425_i < _1259_n) && (!(_1d05b6040_is_path_sep(_10718_path[static_cast<jule::Int>(_17425_i)]))))) { goto _iter_end_4429209216; }
					{
						if (_10718_path[static_cast<jule::Int>(_17425_i)] == ':') {
							_12613_out._method_append('.');
							_12613_out._method_append(47LLU);
							goto _iter_end_4429209216;
						}
					}
					_iter_next_4429209216:;
					(_17425_i)++;
					goto _iter_begin_4429209216;
					_iter_end_4429209216:;
				}
				_iter_begin_4429208672:;
				if (!((_13114_r < _1259_n) && (!(_1d05b6040_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)]))))) { goto _iter_end_4429208672; }
				{
					_12613_out._method_append(_10718_path[static_cast<jule::Int>(_13114_r)]);
				}
				_iter_next_4429208672:;
				(_13114_r)++;
				goto _iter_begin_4429208672;
				_iter_end_4429208672:;
			}
			goto _match_end_4429183424;
			_case_end_4429203968:;
			_match_end_4429183424:;
		}
	}
	_iter_next_4429203632:;
	goto _iter_begin_4429203632;
	_iter_end_4429203632:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _1d05b5e41_from_slash(_12613_out._method_string());
}



inline jule::Str _1d05b5e41_to_slash(jule::Str _20017_path) {
	if (true) {
		return _20017_path;
	}
	return _20017_path.replace(static_cast<jule::Str>(47LL),jule::Str("/", 1),-1LL);
}



inline jule::Str _1d05b5e41_from_slash(jule::Str _21019_path) {
	if (true) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _1d05b5e41_join(jule::Slice<jule::Str> _22413_elem) {
	return _1d05b6040___join(_22413_elem);
}



inline jule::Str _1d05b5e41_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	_iter_begin_4429241712:;
	if (!((_23013_i >= 0LL) && (!(_1d05b6040_is_path_sep(_22912_path[static_cast<jule::Int>(_23013_i)]))))) { goto _iter_end_4429241712; }
	{
		if (_22912_path[static_cast<jule::Int>(_23013_i)] == '.') {
			return _22912_path.slice(static_cast<jule::Int>(_23013_i));
		}
	}
	_iter_next_4429241712:;
	(_23013_i)--;
	goto _iter_begin_4429241712;
	_iter_end_4429241712:;
	return jule::Str("", 0);
}



inline std::tuple<jule::Str,jule::Bool> _1d05b5e41_abs(jule::Str _24412_path) {
	jule::Str _24510_abs_path;
	jule::Bool _24520_ok;
	std::tie(_24510_abs_path,_24520_ok) = _1d05b6040___abs(_24412_path);
	return std::make_tuple(_24510_abs_path,_24520_ok);
}



inline jule::Str _1d05b5e41_base(jule::Str _25317_path) {
	if (_25317_path == jule::Str("", 0)) {
		return jule::Str(".", 1);
	}
	_iter_begin_4429256592:;
	if (!((_25317_path.len() > 0LL) && _1d05b6040_is_path_sep(_25317_path[static_cast<jule::Int>(_25317_path.len() - 1LL)]))) { goto _iter_end_4429256592; }
	{
		_25317_path=_25317_path.slice(0LL,static_cast<jule::Int>(_25317_path.len() - 1LL));
	}
	_iter_next_4429256592:;
	goto _iter_begin_4429256592;
	_iter_end_4429256592:;
	_25317_path=_25317_path.slice(static_cast<jule::Int>(_1d05b5e41_volume_name(_25317_path).len()));
	jule::I64 _26413_i = _25317_path.len() - 1LL;
	_iter_begin_4429260304:;
	if (!((_26413_i >= 0LL) && (!(_1d05b6040_is_path_sep(_25317_path[static_cast<jule::Int>(_26413_i)]))))) { goto _iter_end_4429260304; }
	{
		(_26413_i)--;
	}
	_iter_next_4429260304:;
	goto _iter_begin_4429260304;
	_iter_end_4429260304:;
	if (_26413_i >= 0LL) {
		_25317_path=_25317_path.slice(static_cast<jule::Int>(_26413_i + 1LL));
	}
	if (_25317_path == jule::Str("", 0)) {
		return static_cast<jule::Str>(47LL);
	}
	return _25317_path;
}



inline jule::Str _1d05b5e41_dir(jule::Str _28412_path) {
	jule::Str _2859_vol = _1d05b5e41_volume_name(_28412_path);
	jule::I64 _28613_i = _28412_path.len() - 1LL;
	_iter_begin_4429266608:;
	if (!((_28613_i >= _2859_vol.len()) && (!(_1d05b6040_is_path_sep(_28412_path[static_cast<jule::Int>(_28613_i)]))))) { goto _iter_end_4429266608; }
	{
		(_28613_i)--;
	}
	_iter_next_4429266608:;
	goto _iter_begin_4429266608;
	_iter_end_4429266608:;
	jule::Str _2909_dir = _1d05b5e41_clean(_28412_path.slice(static_cast<jule::Int>(_2859_vol.len()),static_cast<jule::Int>(_28613_i + 1LL)));
	if ((_2909_dir == jule::Str(".", 1)) && (_2859_vol.len() > 2LL)) {
		return _2859_vol;
	}
	return _2859_vol + _2909_dir;
}



inline jule::Str _1d05b5e41_volume_name(jule::Str _30220_path) {
	return _1d05b5e41_from_slash(_30220_path.slice(0LL,static_cast<jule::Int>(_1d05b6040_volume_name_len(_30220_path))));
}



inline jule::Bool _1d05b6040_is_path_sep(jule::U8 _4720_c) {
	return 47LL == _4720_c;
}



inline jule::Bool _1d05b6040_is_abs(jule::Str _5215_path) {
	return _5215_path.has_prefix(jule::Str("/", 1));
}



inline jule::Int _1d05b6040_volume_name_len(jule::Str _5620_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _1d05b6040___abs(jule::Str _5810_path) {
	jule::Bool _5828_ok = jule::Bool();
	if (_1d05b6040_is_abs(_5810_path)) {
		_5828_ok = true;
		return std::make_tuple(_1d05b5e41_clean(_5810_path),_5828_ok);
	}
	jule::Str _6210_wd;
	jule::Int _6214_err;
	std::tie(_6210_wd,_6214_err) = _1d063b77a_working_dir();
	if (_6214_err != 0LLU) {
		_5828_ok = false;
		return std::make_tuple(jule::Str("", 0),_5828_ok);
	}
	_5828_ok = true;
	return std::make_tuple(_1d05b6040___join(jule::Slice<jule::Str>({_6210_wd,_5810_path})),_5828_ok);
}



inline jule::Str _1d05b6040_str_join(jule::Slice<jule::Str> _6913_elems,jule::Str _6927_sep) {
	{
		auto _match_expr{ _6913_elems.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4429291760; }
		_case_begin_4429291760:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4429290992;
		_case_end_4429291760:;
		if (!((1LL) == _match_expr)) { goto _case_end_4429291872; }
		_case_begin_4429291872:;
		{
			return _6913_elems[0LL];
		}
		goto _match_end_4429290992;
		_case_end_4429291872:;
		_match_end_4429290992:;
	}
	jule::Str _7513_s = _6913_elems[0LL];
	{
		auto _range_expr = _6913_elems.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d05b6040_elem = *_range_begin;
			_iter_begin_4429294048:;
			{
				_7513_s+=_6927_sep + _1d05b6040_elem;
			}
			_iter_next_4429294048:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d05b6040_elem = *_range_begin; goto _iter_begin_4429294048; }
			_iter_end_4429294048:;
		}
	}
	return _7513_s;
}



inline jule::Str _1d05b6040___join(jule::Slice<jule::Str> _8211_elem) {
	{
		auto _range_expr = _8211_elem;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d05b6040_i = 0;
			jule::Str _1d05b6040_e = *_range_begin;
			_iter_begin_4429296224:;
			{
				if (_1d05b6040_e != jule::Str("", 0)) {
					return _1d05b5e41_clean(_1d05b6040_str_join(_8211_elem.slice(static_cast<jule::Int>(_1d05b6040_i)),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_4429296224:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d05b6040_i; _1d05b6040_e = *_range_begin; goto _iter_begin_4429296224; }
			_iter_end_4429296224:;
		}
	}
	return jule::Str("", 0);
}



inline jule::Int _1aa1ac035_leading_zeros(jule::Uint _4922_x) {
	return static_cast<jule::Int>(64LL - _1aa1ac035_len(_4922_x));
}



inline jule::Int _1aa1ac035_leading_zeros8(jule::U8 _5223_x) {
	return static_cast<jule::Int>(8LL - _1aa1ac035_len8(_5223_x));
}



inline jule::Int _1aa1ac035_leading_zeros16(jule::U16 _5524_x) {
	return static_cast<jule::Int>(16LL - _1aa1ac035_len16(_5524_x));
}



inline jule::Int _1aa1ac035_leading_zeros32(jule::U32 _5824_x) {
	return static_cast<jule::Int>(32LL - _1aa1ac035_len32(_5824_x));
}



inline jule::Int _1aa1ac035_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - _1aa1ac035_len64(_6124_x));
}



inline jule::Int _1aa1ac035_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_1aa1ac035_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_1aa1ac035_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



inline jule::Int _1aa1ac035_trailing_zeros8(jule::U8 _9124_x) {
	return static_cast<jule::Int>(jule::Str("\b\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\a\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00", 256)[static_cast<jule::Int>(_9124_x)]);
}



inline jule::Int _1aa1ac035_trailing_zeros16(jule::U16 _9625_x) {
	if (_9625_x == 0LL) {
		return 16LL;
	}
	return static_cast<jule::Int>(_1aa1ac035_DE_BRUIJN32_TAB[static_cast<jule::Int>((static_cast<jule::U32>(_9625_x & (-(_9625_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _1aa1ac035_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_1aa1ac035_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _1aa1ac035_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_1aa1ac035_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



inline jule::Int _1aa1ac035_ones_count(jule::Uint _14119_x) {
	if (false) {
		return static_cast<jule::Int>(_1aa1ac035_ones_count32(static_cast<jule::U32>(_14119_x)));
	}
	return static_cast<jule::Int>(_1aa1ac035_ones_count64(static_cast<jule::U64>(_14119_x)));
}



inline jule::Int _1aa1ac035_ones_count8(jule::U8 _14920_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_14920_x)]);
}



inline jule::Int _1aa1ac035_ones_count16(jule::U16 _15421_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x >> 8LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x & 255LL)]);
}



inline jule::Int _1aa1ac035_ones_count32(jule::U32 _15921_x) {
	return static_cast<jule::Int>(((jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x >> 24LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 16LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 8LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x & 255LL)]);
}



inline jule::Int _1aa1ac035_ones_count64(jule::U64 _16425_x) {
	
	_16425_x=static_cast<jule::U64>(((_16425_x >> 1LL) & 6148914691236517205LL) + (_16425_x & 6148914691236517205LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 2LL) & 3689348814741910323LL) + (_16425_x & 3689348814741910323LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 4LL) + _16425_x) & 1085102592571150095LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 8LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 16LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 32LL);
	return static_cast<jule::Int>(static_cast<jule::Int>(_16425_x) & 127LLU);
}



inline jule::Uint _1aa1ac035_rotate_left(jule::Uint _20020_x,jule::Int _20029_k) {
	if (false) {
		return static_cast<jule::Uint>(_1aa1ac035_rotate_left32(static_cast<jule::U32>(_20020_x),_20029_k));
	}
	return static_cast<jule::Uint>(_1aa1ac035_rotate_left64(static_cast<jule::U64>(_20020_x),_20029_k));
}



inline jule::U8 _1aa1ac035_rotate_left8(jule::U8 _21121_x,jule::Int _21128_k) {
	
	jule::Uint _2139_s = static_cast<jule::Uint>(_21128_k) & 7LL;
	return static_cast<jule::U8>((_21121_x << _2139_s) | (_21121_x >> (8LL - _2139_s)));
}



inline jule::U16 _1aa1ac035_rotate_left16(jule::U16 _22122_x,jule::Int _22130_k) {
	
	jule::Uint _2239_s = static_cast<jule::Uint>(_22130_k) & 15LL;
	return static_cast<jule::U16>((_22122_x << _2239_s) | (_22122_x >> (16LL - _2239_s)));
}



inline jule::U32 _1aa1ac035_rotate_left32(jule::U32 _23122_x,jule::Int _23130_k) {
	
	jule::Uint _2339_s = static_cast<jule::Uint>(_23130_k) & 31LL;
	return static_cast<jule::U32>((_23122_x << _2339_s) | (_23122_x >> (32LL - _2339_s)));
}



inline jule::U64 _1aa1ac035_rotate_left64(jule::U64 _24122_x,jule::Int _24130_k) {
	
	jule::Uint _2439_s = static_cast<jule::Uint>(_24130_k) & 63LL;
	return static_cast<jule::U64>((_24122_x << _2439_s) | (_24122_x >> (64LL - _2439_s)));
}



inline jule::Uint _1aa1ac035_reverse(jule::Uint _25016_x) {
	if (false) {
		return static_cast<jule::Uint>(_1aa1ac035_reverse32(static_cast<jule::U32>(_25016_x)));
	}
	return static_cast<jule::Uint>(_1aa1ac035_reverse64(static_cast<jule::U64>(_25016_x)));
}



inline jule::U8 _1aa1ac035_reverse8(jule::U8 _25817_x) {
	return static_cast<jule::U8>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_25817_x)]);
}



inline jule::U16 _1aa1ac035_reverse16(jule::U16 _26318_x) {
	return static_cast<jule::U16>(static_cast<jule::U16>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_26318_x >> 8LL)]) | (static_cast<jule::U16>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_26318_x & 255LL)]) << 8LL));
}



inline jule::U32 _1aa1ac035_reverse32(jule::U32 _26822_x) {
	
	_26822_x=static_cast<jule::U32>(((_26822_x >> 1LL) & 1431655765LL) | ((_26822_x & 1431655765LL) << 1LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 2LL) & 858993459LL) | ((_26822_x & 858993459LL) << 2LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 4LL) & 252645135LL) | ((_26822_x & 252645135LL) << 4LL));
	return static_cast<jule::U32>(_1aa1ac035_reverse_bytes32(_26822_x));
}



inline jule::U64 _1aa1ac035_reverse64(jule::U64 _27722_x) {
	
	_27722_x=static_cast<jule::U64>(((_27722_x >> 1LL) & 6148914691236517205LL) | ((_27722_x & 6148914691236517205LL) << 1LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 2LL) & 3689348814741910323LL) | ((_27722_x & 3689348814741910323LL) << 2LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 4LL) & 1085102592571150095LL) | ((_27722_x & 1085102592571150095LL) << 4LL));
	return static_cast<jule::U64>(_1aa1ac035_reverse_bytes64(_27722_x));
}



inline jule::Uint _1aa1ac035_reverse_bytes(jule::Uint _29022_x) {
	if (false) {
		return static_cast<jule::Uint>(_1aa1ac035_reverse_bytes32(static_cast<jule::U32>(_29022_x)));
	}
	return static_cast<jule::Uint>(_1aa1ac035_reverse_bytes64(static_cast<jule::U64>(_29022_x)));
}



inline jule::U16 _1aa1ac035_reverse_bytes16(jule::U16 _30024_x) {
	return static_cast<jule::U16>((_30024_x >> 8LL) | (_30024_x << 8LL));
}



inline jule::U32 _1aa1ac035_reverse_bytes32(jule::U32 _30728_x) {
	
	_30728_x=static_cast<jule::U32>(((_30728_x >> 8LL) & 16711935LL) | ((_30728_x & 16711935LL) << 8LL));
	return static_cast<jule::U32>((_30728_x >> 16LL) | (_30728_x << 16LL));
}



inline jule::U64 _1aa1ac035_reverse_bytes64(jule::U64 _31628_x) {
	
	_31628_x=static_cast<jule::U64>(((_31628_x >> 8LL) & 71777214294589695LL) | ((_31628_x & 71777214294589695LL) << 8LL));
	_31628_x=static_cast<jule::U64>(((_31628_x >> 16LL) & 281470681808895LL) | ((_31628_x & 281470681808895LL) << 16LL));
	return static_cast<jule::U64>((_31628_x >> 32LL) | (_31628_x << 32LL));
}



inline jule::Int _1aa1ac035_len(jule::Uint _32712_x) {
	if (false) {
		return static_cast<jule::Int>(_1aa1ac035_len32(static_cast<jule::U32>(_32712_x)));
	}
	return static_cast<jule::Int>(_1aa1ac035_len64(static_cast<jule::U64>(_32712_x)));
}



inline jule::Int _1aa1ac035_len8(jule::U8 _33613_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_33613_x)]);
}



inline jule::Int _1aa1ac035_len16(jule::U16 _34218_x) {
	jule::Int _34228_n = jule::Int();
	if (_34218_x >= 256LL) {
		_34218_x>>=8LL;
		_34228_n=8LL;
	}
	_34228_n = static_cast<jule::Int>(_34228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_34218_x)]));
	return _34228_n;
}



inline jule::Int _1aa1ac035_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LL) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LL) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::Int>(_35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]));
	return _35228_n;
}



inline jule::Int _1aa1ac035_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LL) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LL) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LL) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::Int>(_36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]));
	return _36628_n;
}



inline std::tuple<jule::Uint,jule::Uint> _1aa1ac035_add(jule::Uint _38912_x,jule::Uint _38921_y,jule::Uint _38930_carry) {
	jule::Uint _38945_sum = jule::Uint();
	jule::Uint _38956_carry_out = jule::Uint();
	if (false) {
		jule::U32 _39114_s32;
		jule::U32 _39119_c32;
		std::tie(_39114_s32,_39119_c32) = _1aa1ac035_add32(static_cast<jule::U32>(_38912_x),static_cast<jule::U32>(_38921_y),static_cast<jule::U32>(_38930_carry));
		_38945_sum = static_cast<jule::Uint>(_39114_s32);
		_38956_carry_out = static_cast<jule::Uint>(_39119_c32);
		return std::make_tuple(_38945_sum,_38956_carry_out);
	}
	jule::U64 _39410_s64;
	jule::U64 _39415_c64;
	std::tie(_39410_s64,_39415_c64) = _1aa1ac035_add64(static_cast<jule::U64>(_38912_x),static_cast<jule::U64>(_38921_y),static_cast<jule::U64>(_38930_carry));
	_38945_sum = static_cast<jule::Uint>(_39410_s64);
	_38956_carry_out = static_cast<jule::Uint>(_39415_c64);
	return std::make_tuple(_38945_sum,_38956_carry_out);
}



inline std::tuple<jule::U32,jule::U32> _1aa1ac035_add32(jule::U32 _40314_x,jule::U32 _40322_y,jule::U32 _40330_carry) {
	jule::U32 _40344_sum = jule::U32();
	jule::U32 _40354_carryout = jule::U32();
	jule::U64 _4049_sum64 = (static_cast<jule::U64>(_40314_x) + static_cast<jule::U64>(_40322_y)) + static_cast<jule::U64>(_40330_carry);
	_40344_sum=static_cast<jule::U32>(_4049_sum64);
	_40354_carryout=static_cast<jule::U32>(_4049_sum64 >> 32LL);
	return std::make_tuple(_40344_sum,_40354_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1aa1ac035_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>((_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>(((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::Uint,jule::Uint> _1aa1ac035_sub(jule::Uint _43112_x,jule::Uint _43121_y,jule::Uint _43130_borrow) {
	jule::Uint _43146_diff = jule::Uint();
	jule::Uint _43158_borrow_out = jule::Uint();
	if (false) {
		jule::U32 _43314_d32;
		jule::U32 _43319_b32;
		std::tie(_43314_d32,_43319_b32) = _1aa1ac035_sub32(static_cast<jule::U32>(_43112_x),static_cast<jule::U32>(_43121_y),static_cast<jule::U32>(_43130_borrow));
		_43146_diff = static_cast<jule::Uint>(_43314_d32);
		_43158_borrow_out = static_cast<jule::Uint>(_43319_b32);
		return std::make_tuple(_43146_diff,_43158_borrow_out);
	}
	jule::U64 _43610_d64;
	jule::U64 _43615_b64;
	std::tie(_43610_d64,_43615_b64) = _1aa1ac035_sub64(static_cast<jule::U64>(_43112_x),static_cast<jule::U64>(_43121_y),static_cast<jule::U64>(_43130_borrow));
	_43146_diff = static_cast<jule::Uint>(_43610_d64);
	_43158_borrow_out = static_cast<jule::Uint>(_43615_b64);
	return std::make_tuple(_43146_diff,_43158_borrow_out);
}



inline std::tuple<jule::U32,jule::U32> _1aa1ac035_sub32(jule::U32 _44514_x,jule::U32 _44522_y,jule::U32 _44530_borrow) {
	jule::U32 _44545_diff = jule::U32();
	jule::U32 _44556_borrowout = jule::U32();
	_44545_diff=static_cast<jule::U32>((_44514_x - _44522_y) - _44530_borrow);
	_44556_borrowout=static_cast<jule::U32>((((~(_44514_x)) & _44522_y) | ((~(_44514_x ^ _44522_y)) & _44545_diff)) >> 31LL);
	return std::make_tuple(_44545_diff,_44556_borrowout);
}



inline std::tuple<jule::U64,jule::U64> _1aa1ac035_sub64(jule::U64 _46014_x,jule::U64 _46022_y,jule::U64 _46030_borrow) {
	jule::U64 _46045_diff = jule::U64();
	jule::U64 _46056_borrowout = jule::U64();
	_46045_diff=static_cast<jule::U64>((_46014_x - _46022_y) - _46030_borrow);
	_46056_borrowout=static_cast<jule::U64>((((~(_46014_x)) & _46022_y) | ((~(_46014_x ^ _46022_y)) & _46045_diff)) >> 63LL);
	return std::make_tuple(_46045_diff,_46056_borrowout);
}



inline std::tuple<jule::Uint,jule::Uint> _1aa1ac035_mul(jule::Uint _47412_x,jule::Uint _47421_y) {
	jule::Uint _47432_hi = jule::Uint();
	jule::Uint _47442_lo = jule::Uint();
	if (false) {
		jule::U32 _47614_h;
		jule::U32 _47617_l;
		std::tie(_47614_h,_47617_l) = _1aa1ac035_mul32(static_cast<jule::U32>(_47412_x),static_cast<jule::U32>(_47421_y));
		_47432_hi = static_cast<jule::Uint>(_47614_h);
		_47442_lo = static_cast<jule::Uint>(_47617_l);
		return std::make_tuple(_47432_hi,_47442_lo);
	}
	jule::U64 _47910_h;
	jule::U64 _47913_l;
	std::tie(_47910_h,_47913_l) = _1aa1ac035_mul64(static_cast<jule::U64>(_47412_x),static_cast<jule::U64>(_47421_y));
	_47432_hi = static_cast<jule::Uint>(_47910_h);
	_47442_lo = static_cast<jule::Uint>(_47913_l);
	return std::make_tuple(_47432_hi,_47442_lo);
}



inline std::tuple<jule::U32,jule::U32> _1aa1ac035_mul32(jule::U32 _48814_x,jule::U32 _48822_y) {
	jule::U32 _48832_hi = jule::U32();
	jule::U32 _48841_lo = jule::U32();
	jule::U64 _4899_tmp = static_cast<jule::U64>(_48814_x) * static_cast<jule::U64>(_48822_y);
	std::tie(_48832_hi,_48841_lo) = std::make_tuple(static_cast<jule::U32>(_4899_tmp >> 32LL),static_cast<jule::U32>(_4899_tmp));
	return std::make_tuple(_48832_hi,_48841_lo);
}



inline std::tuple<jule::U64,jule::U64> _1aa1ac035_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LL;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LL;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LL;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline std::tuple<jule::Uint,jule::Uint> _1aa1ac035_div(jule::Uint _52112_hi,jule::Uint _52122_lo,jule::Uint _52132_y) {
	jule::Uint _52143_quo = jule::Uint();
	jule::Uint _52154_rem = jule::Uint();
	if (false) {
		jule::U32 _52314_q;
		jule::U32 _52317_r;
		std::tie(_52314_q,_52317_r) = _1aa1ac035_div32(static_cast<jule::U32>(_52112_hi),static_cast<jule::U32>(_52122_lo),static_cast<jule::U32>(_52132_y));
		_52143_quo = static_cast<jule::Uint>(_52314_q);
		_52154_rem = static_cast<jule::Uint>(_52317_r);
		return std::make_tuple(_52143_quo,_52154_rem);
	}
	jule::U64 _52610_q;
	jule::U64 _52613_r;
	std::tie(_52610_q,_52613_r) = _1aa1ac035_div64(static_cast<jule::U64>(_52112_hi),static_cast<jule::U64>(_52122_lo),static_cast<jule::U64>(_52132_y));
	_52143_quo = static_cast<jule::Uint>(_52610_q);
	_52154_rem = static_cast<jule::Uint>(_52613_r);
	return std::make_tuple(_52143_quo,_52154_rem);
}



inline std::tuple<jule::U32,jule::U32> _1aa1ac035_div32(jule::U32 _53414_hi,jule::U32 _53423_lo,jule::U32 _53432_y) {
	jule::U32 _53442_quo = jule::U32();
	jule::U32 _53452_rem = jule::U32();
	if (_53432_y == 0LL) {
		jule::panic(_1aa1ade38_DIVIDE_ERROR);
	}
	if ((_53432_y != 0LL) && (_53432_y <= _53414_hi)) {
		jule::panic(_1aa1ade38_OVERFLOW_ERROR);
	}
	jule::U64 _5419_z = (static_cast<jule::U64>(_53414_hi) << 32LL) | static_cast<jule::U64>(_53423_lo);
	std::tie(_53442_quo,_53452_rem) = std::make_tuple(static_cast<jule::U32>(jule::div(_5419_z,static_cast<jule::U64>(_53432_y))),static_cast<jule::U32>(jule::mod(_5419_z,static_cast<jule::U64>(_53432_y))));
	return std::make_tuple(_53442_quo,_53452_rem);
}



inline std::tuple<jule::U64,jule::U64> _1aa1ac035_div64(jule::U64 _55014_hi,jule::U64 _55023_lo,jule::U64 _55036_y) {
	jule::U64 _55046_quo = jule::U64();
	jule::U64 _55056_rem = jule::U64();
	
	
	if (_55036_y == 0LL) {
		jule::panic(_1aa1ade38_DIVIDE_ERROR);
	}
	if (_55036_y <= _55014_hi) {
		jule::panic(_1aa1ade38_OVERFLOW_ERROR);
	}
	jule::Uint _5609_s = static_cast<jule::Uint>(_1aa1ac035_leading_zeros64(_55036_y));
	_55036_y<<=_5609_s;
	jule::U64 _5639_yn1 = _55036_y >> 32LL;
	jule::U64 _5649_yn0 = _55036_y & 4294967295LL;
	jule::U64 _5659_un32 = (_55014_hi << _5609_s) | (_55023_lo >> (64LL - _5609_s));
	jule::U64 _5669_un10 = _55023_lo << _5609_s;
	jule::U64 _5679_un1 = _5669_un10 >> 32LL;
	jule::U64 _5689_un0 = _5669_un10 & 4294967295LL;
	jule::U64 _56913_q1 = jule::div(_5659_un32,_5639_yn1);
	jule::U64 _57013_rhat = _5659_un32 - (_56913_q1 * _5639_yn1);
	_iter_begin_4429694736:;
	if (!((_56913_q1 >= 4294967296LL) || ((_56913_q1 * _5649_yn0) > ((4294967296LL * _57013_rhat) + _5679_un1)))) { goto _iter_end_4429694736; }
	{
		(_56913_q1)--;
		_57013_rhat+=_5639_yn1;
		if (_57013_rhat >= 4294967296LL) {
			goto _iter_end_4429694736;
		}
	}
	_iter_next_4429694736:;
	goto _iter_begin_4429694736;
	_iter_end_4429694736:;
	jule::U64 _5809_un21 = ((_5659_un32 * 4294967296LL) + _5679_un1) - (_56913_q1 * _55036_y);
	jule::U64 _58113_q0 = jule::div(_5809_un21,_5639_yn1);
	_57013_rhat=static_cast<jule::U64>(_5809_un21 - (_58113_q0 * _5639_yn1));
	_iter_begin_4429699552:;
	if (!((_58113_q0 >= 4294967296LL) || ((_58113_q0 * _5649_yn0) > ((4294967296LL * _57013_rhat) + _5689_un0)))) { goto _iter_end_4429699552; }
	{
		(_58113_q0)--;
		_57013_rhat+=_5639_yn1;
		if (_57013_rhat >= 4294967296LL) {
			goto _iter_end_4429699552;
		}
	}
	_iter_next_4429699552:;
	goto _iter_begin_4429699552;
	_iter_end_4429699552:;
	_55046_quo = static_cast<jule::U64>((_56913_q1 * 4294967296LL) + _58113_q0);
	_55056_rem = static_cast<jule::U64>((((_5809_un21 * 4294967296LL) + _5689_un0) - (_58113_q0 * _55036_y)) >> _5609_s);
	return std::make_tuple(_55046_quo,_55056_rem);
}



inline jule::Uint _1aa1ac035_rem(jule::Uint _59812_hi,jule::Uint _59822_lo,jule::Uint _59832_y) {
	if (false) {
		return static_cast<jule::Uint>(_1aa1ac035_rem32(static_cast<jule::U32>(_59812_hi),static_cast<jule::U32>(_59822_lo),static_cast<jule::U32>(_59832_y)));
	}
	return static_cast<jule::Uint>(_1aa1ac035_rem64(static_cast<jule::U64>(_59812_hi),static_cast<jule::U64>(_59822_lo),static_cast<jule::U64>(_59832_y)));
}



inline jule::U32 _1aa1ac035_rem32(jule::U32 _60814_hi,jule::U32 _60823_lo,jule::U32 _60832_y) {
	return static_cast<jule::U32>(jule::mod((static_cast<jule::U64>(_60814_hi) << 32LL) | static_cast<jule::U64>(_60823_lo),static_cast<jule::U64>(_60832_y)));
}



inline jule::U64 _1aa1ac035_rem64(jule::U64 _61514_hi,jule::U64 _61523_lo,jule::U64 _61532_y) {
	jule::U64 _62213_rem;
	std::tie(std::ignore,_62213_rem) = _1aa1ac035_div64(static_cast<jule::U64>(jule::mod(_61514_hi,_61532_y)),_61523_lo,_61532_y);
	return _62213_rem;
}



inline jule::F64 _1a9a031b7_atanh(jule::F64 _7818_x) {
	
	{
		if (!((_7818_x < -1LL) || (_7818_x > 1LL) || (_1a9ae7454_is_nan(_7818_x)))) { goto _case_end_4430002576; }
		_case_begin_4430002576:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4430002416;
		_case_end_4430002576:;
		if (!((_7818_x == 1LL))) { goto _case_end_4430002688; }
		_case_begin_4430002688:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
		}
		goto _match_end_4430002416;
		_case_end_4430002688:;
		if (!((_7818_x == -1LL))) { goto _case_end_4430002800; }
		_case_begin_4430002800:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(-1LL));
		}
		goto _match_end_4430002416;
		_case_end_4430002800:;
		_match_end_4430002416:;
	}
	jule::Bool _8913_sign = false;
	if (_7818_x < 0LL) {
		_7818_x=static_cast<jule::F64>((-(_7818_x)));
		_8913_sign=true;
	}
	jule::F64 _9413_temp = 0LL;
	{
		if (!((_7818_x < 0.0000000037252902984619141))) { goto _case_end_4430012928; }
		_case_begin_4430012928:;
		{
			_9413_temp=_7818_x;
		}
		goto _match_end_4430010272;
		_case_end_4430012928:;
		if (!((_7818_x < 0.5))) { goto _case_end_4430011200; }
		_case_begin_4430011200:;
		{
			_9413_temp=static_cast<jule::F64>(_7818_x + _7818_x);
			_9413_temp=static_cast<jule::F64>(0.5 * _1a9ec72c3_log1p(static_cast<jule::F64>(_9413_temp + jule::div(_9413_temp * _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4430010272;
		_case_end_4430011200:;
		_case_begin_4430010368:;
		{
			_9413_temp=static_cast<jule::F64>(0.5 * _1a9ec72c3_log1p(static_cast<jule::F64>(jule::div(_7818_x + _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4430010272;
		_case_end_4430010368:;
		_match_end_4430010272:;
	}
	if (_8913_sign) {
		_9413_temp=static_cast<jule::F64>((-(_9413_temp)));
	}
	return _9413_temp;
}



inline jule::U32 _1a9a223c3_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1a9a223c3_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1a9a223c3_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1a9a223c3_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline jule::F64 _1a9a2c4aa_cos(jule::F64 _14816_x) {
	
	
	
	if (_1a9ae7454_is_nan(_14816_x) || _1a9ae7454_is_inf(_14816_x,0LL)) {
		return static_cast<jule::F64>(_1a9ae7454_nan());
	}
	jule::Bool _15813_sign = false;
	_14816_x=static_cast<jule::F64>(_1a9b94d5e_abs(_14816_x));
	jule::U64 _16113_j = 0LLU;
	jule::F64 _16213_y = 0LL;
	jule::F64 _16313_z = 0LL;
	if (_14816_x >= 536870912LL) {
		std::tie(_16113_j,_16313_z) = _1a9aa7c50_trig_reduce(_14816_x);
	} else {
		_16113_j=static_cast<jule::U64>(_14816_x * 1.2732395447351628);
		_16213_y=static_cast<jule::F64>(_16113_j);
		if ((_16113_j & 1LL) == 1LL) {
			(_16113_j)++;
			(_16213_y)++;
		}
		_16113_j&=7LL;
		_16313_z=static_cast<jule::F64>(((_14816_x - (_16213_y * 0.78539812564849854)) - (_16213_y * 0.000000037748947079307982)) - (_16213_y * 0.0000000000000026951514290790595));
	}
	if (_16113_j > 3LL) {
		_16113_j-=4LL;
		_15813_sign=(!(_15813_sign));
	}
	if (_16113_j > 1LL) {
		_15813_sign=(!(_15813_sign));
	}
	jule::F64 _1879_zz = _16313_z * _16313_z;
	if ((_16113_j == 1LL) || (_16113_j == 2LL)) {
		_16213_y=static_cast<jule::F64>(_16313_z + ((_16313_z * _1879_zz) * ((((((((((_1a9a2c4aa__SIN[0LL] * _1879_zz) + _1a9a2c4aa__SIN[1LL]) * _1879_zz) + _1a9a2c4aa__SIN[2LL]) * _1879_zz) + _1a9a2c4aa__SIN[3LL]) * _1879_zz) + _1a9a2c4aa__SIN[4LL]) * _1879_zz) + _1a9a2c4aa__SIN[5LL])));
	} else {
		_16213_y=static_cast<jule::F64>((1LL - (0.5 * _1879_zz)) + ((_1879_zz * _1879_zz) * ((((((((((_1a9a2c4aa__COS[0LL] * _1879_zz) + _1a9a2c4aa__COS[1LL]) * _1879_zz) + _1a9a2c4aa__COS[2LL]) * _1879_zz) + _1a9a2c4aa__COS[3LL]) * _1879_zz) + _1a9a2c4aa__COS[4LL]) * _1879_zz) + _1a9a2c4aa__COS[5LL])));
	}
	if (_15813_sign) {
		_16213_y=static_cast<jule::F64>((-(_16213_y)));
	}
	return _16213_y;
}



inline jule::F64 _1a9a2c4aa_sin(jule::F64 _20516_x) {
	
	
	
	{
		if (!((_20516_x == 0LL) || (_1a9ae7454_is_nan(_20516_x)))) { goto _case_end_4430055904; }
		_case_begin_4430055904:;
		{
			return _20516_x;
		}
		goto _match_end_4430055744;
		_case_end_4430055904:;
		if (!((_1a9ae7454_is_inf(_20516_x,0LL)))) { goto _case_end_4430056032; }
		_case_begin_4430056032:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4430055744;
		_case_end_4430056032:;
		_match_end_4430055744:;
	}
	jule::Bool _21813_sign = false;
	if (_20516_x < 0LL) {
		_20516_x=static_cast<jule::F64>((-(_20516_x)));
		_21813_sign=true;
	}
	jule::U64 _22413_j = 0LLU;
	jule::F64 _22513_y = 0LL;
	jule::F64 _22613_z = 0LL;
	if (_20516_x >= 536870912LL) {
		std::tie(_22413_j,_22613_z) = _1a9aa7c50_trig_reduce(_20516_x);
	} else {
		_22413_j=static_cast<jule::U64>(_20516_x * 1.2732395447351628);
		_22513_y=static_cast<jule::F64>(_22413_j);
		if ((_22413_j & 1LL) == 1LL) {
			(_22413_j)++;
			(_22513_y)++;
		}
		_22413_j&=7LL;
		_22613_z=static_cast<jule::F64>(((_20516_x - (_22513_y * 0.78539812564849854)) - (_22513_y * 0.000000037748947079307982)) - (_22513_y * 0.0000000000000026951514290790595));
	}
	if (_22413_j > 3LL) {
		_21813_sign=(!(_21813_sign));
		_22413_j-=4LL;
	}
	jule::F64 _2469_zz = _22613_z * _22613_z;
	if ((_22413_j == 1LL) || (_22413_j == 2LL)) {
		_22513_y=static_cast<jule::F64>((1LL - (0.5 * _2469_zz)) + ((_2469_zz * _2469_zz) * ((((((((((_1a9a2c4aa__COS[0LL] * _2469_zz) + _1a9a2c4aa__COS[1LL]) * _2469_zz) + _1a9a2c4aa__COS[2LL]) * _2469_zz) + _1a9a2c4aa__COS[3LL]) * _2469_zz) + _1a9a2c4aa__COS[4LL]) * _2469_zz) + _1a9a2c4aa__COS[5LL])));
	} else {
		_22513_y=static_cast<jule::F64>(_22613_z + ((_22613_z * _2469_zz) * ((((((((((_1a9a2c4aa__SIN[0LL] * _2469_zz) + _1a9a2c4aa__SIN[1LL]) * _2469_zz) + _1a9a2c4aa__SIN[2LL]) * _2469_zz) + _1a9a2c4aa__SIN[3LL]) * _2469_zz) + _1a9a2c4aa__SIN[4LL]) * _2469_zz) + _1a9a2c4aa__SIN[5LL])));
	}
	if (_21813_sign) {
		_22513_y=static_cast<jule::F64>((-(_22513_y)));
	}
	return _22513_y;
}



inline jule::F64 _1a9a2cd07_tan(jule::F64 _11316_x) {
	
	
	
	{
		if (!((_11316_x == 0LL) || (_1a9ae7454_is_nan(_11316_x)))) { goto _case_end_4430084416; }
		_case_begin_4430084416:;
		{
			return _11316_x;
		}
		goto _match_end_4430084256;
		_case_end_4430084416:;
		if (!((_1a9ae7454_is_inf(_11316_x,0LL)))) { goto _case_end_4430084544; }
		_case_begin_4430084544:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4430084256;
		_case_end_4430084544:;
		_match_end_4430084256:;
	}
	jule::Bool _12613_sign = false;
	if (_11316_x < 0LL) {
		_11316_x=static_cast<jule::F64>((-(_11316_x)));
		_12613_sign=true;
	}
	jule::U64 _13113_j = 0LLU;
	jule::F64 _13213_y = 0LL;
	jule::F64 _13313_z = 0LL;
	if (_11316_x >= 536870912LL) {
		std::tie(_13113_j,_13313_z) = _1a9aa7c50_trig_reduce(_11316_x);
	} else {
		_13113_j=static_cast<jule::U64>(_11316_x * 1.2732395447351628);
		_13213_y=static_cast<jule::F64>(_13113_j);
		if ((_13113_j & 1LL) == 1LL) {
			(_13113_j)++;
			(_13213_y)++;
		}
		_13313_z=static_cast<jule::F64>(((_11316_x - (_13213_y * 0.78539812564849854)) - (_13213_y * 0.000000037748947079307982)) - (_13213_y * 0.0000000000000026951514290790595));
	}
	jule::F64 _1489_zz = _13313_z * _13313_z;
	if (_1489_zz > 0.00000000000001) {
		_13213_y=static_cast<jule::F64>(_13313_z + (_13313_z * jule::div(_1489_zz * ((((_1a9a2cd07__TAN_P[0LL] * _1489_zz) + _1a9a2cd07__TAN_P[1LL]) * _1489_zz) + _1a9a2cd07__TAN_P[2LL]),((((((_1489_zz + _1a9a2cd07__TAN_Q[1LL]) * _1489_zz) + _1a9a2cd07__TAN_Q[2LL]) * _1489_zz) + _1a9a2cd07__TAN_Q[3LL]) * _1489_zz) + _1a9a2cd07__TAN_Q[4LL])));
	} else {
		_13213_y=_13313_z;
	}
	if ((_13113_j & 2LL) == 2LL) {
		_13213_y=static_cast<jule::F64>(jule::div(-1LL,_13213_y));
	}
	if (_12613_sign) {
		_13213_y=static_cast<jule::F64>((-(_13213_y)));
	}
	return _13213_y;
}



inline jule::F64 _1a9a7a65c_mod(jule::F64 _5212_x,jule::F64 _5224_y) {
	if ((((_5224_y == 0LL) || _1a9ae7454_is_inf(_5212_x,0LL)) || _1a9ae7454_is_nan(_5212_x)) || _1a9ae7454_is_nan(_5224_y)) {
		return static_cast<jule::F64>(_1a9ae7454_nan());
	}
	_5224_y=static_cast<jule::F64>(_1a9b94d5e_abs(_5224_y));
	jule::F64 _5810_yfr;
	jule::Int _5815_yexp;
	std::tie(_5810_yfr,_5815_yexp) = _1a9a94852_frexp(_5224_y);
	jule::F64 _5913_r = _5212_x;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5212_x)));
	}
	_iter_begin_4430114448:;
	if (!(_5913_r >= _5224_y)) { goto _iter_end_4430114448; }
	{
		jule::F64 _6514_rfr;
		jule::Int _6523_rexp;
		std::tie(_6514_rfr,_6523_rexp) = _1a9a94852_frexp(_5913_r);
		if (_6514_rfr < _5810_yfr) {
			_6523_rexp=static_cast<jule::Int>(_6523_rexp - 1LL);
		}
		_5913_r=static_cast<jule::F64>(_5913_r - _1a9d8ac58_ldexp(_5224_y,static_cast<jule::Int>(_6523_rexp - _5815_yexp)));
	}
	_iter_next_4430114448:;
	goto _iter_begin_4430114448;
	_iter_end_4430114448:;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5913_r)));
	}
	return _5913_r;
}



inline std::tuple<jule::F64,jule::Int> _1a9a94852_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::Int _4739_exp = jule::Int();
	{
		if (!((_4718_f == 0LL))) { goto _case_end_4430121616; }
		_case_begin_4430121616:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4430121376;
		_case_end_4430121616:;
		if (!((_1a9ae7454_is_inf(_4718_f,0LL)) || (_1a9ae7454_is_nan(_4718_f)))) { goto _case_end_4430121744; }
		_case_begin_4430121744:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4430121376;
		_case_end_4430121744:;
		_match_end_4430121376:;
	}
	std::tie(_4718_f,_4739_exp) = _1a9ae7454_normalize(_4718_f);
	jule::U64 _5613_x = _1a9a223c3_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::Int>((static_cast<jule::Int>((_5613_x >> 52LL) & 2047LL) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>(_5613_x & -9218868437227405313LL);
	_5613_x|=4602678819172646912LL;
	_4728_frac=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F32 _1a9a7e980_nextafter32(jule::F32 _4420_x,jule::F32 _4428_y) {
	jule::F32 _4438_r = jule::F32();
	{
		if (!((_1a9ae7454_is_nan(static_cast<jule::F64>(_4420_x))) || (_1a9ae7454_is_nan(static_cast<jule::F64>(_4428_y))))) { goto _case_end_4430133264; }
		_case_begin_4430133264:;
		{
			_4438_r=static_cast<jule::F32>(_1a9ae7454_nan());
		}
		goto _match_end_4430132256;
		_case_end_4430133264:;
		if (!((_4420_x == _4428_y))) { goto _case_end_4430135040; }
		_case_begin_4430135040:;
		{
			_4438_r=_4420_x;
		}
		goto _match_end_4430132256;
		_case_end_4430135040:;
		if (!((_4420_x == 0LL))) { goto _case_end_4430133792; }
		_case_begin_4430133792:;
		{
			_4438_r=static_cast<jule::F32>(_1a9a6b7c4_copysign(static_cast<jule::F64>(_1a9a223c3_f32_from_bits(1LLU)),static_cast<jule::F64>(_4428_y)));
		}
		goto _match_end_4430132256;
		_case_end_4430133792:;
		if (!(((_4428_y > _4420_x) == (_4420_x > 0LL)))) { goto _case_end_4430132736; }
		_case_begin_4430132736:;
		{
			_4438_r=static_cast<jule::F32>(_1a9a223c3_f32_from_bits(static_cast<jule::U32>(_1a9a223c3_f32_bits(_4420_x) + 1LL)));
		}
		goto _match_end_4430132256;
		_case_end_4430132736:;
		_case_begin_4430132432:;
		{
			_4438_r=static_cast<jule::F32>(_1a9a223c3_f32_from_bits(static_cast<jule::U32>(_1a9a223c3_f32_bits(_4420_x) - 1LL)));
		}
		goto _match_end_4430132256;
		_case_end_4430132432:;
		_match_end_4430132256:;
	}
	return _4438_r;
}



inline jule::F64 _1a9a7e980_nextafter(jule::F64 _6618_x,jule::F64 _6626_y) {
	jule::F64 _6636_r = jule::F64();
	{
		if (!((_1a9ae7454_is_nan(_6618_x)) || (_1a9ae7454_is_nan(_6626_y)))) { goto _case_end_4430144688; }
		_case_begin_4430144688:;
		{
			_6636_r=static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4430143488;
		_case_end_4430144688:;
		if (!((_6618_x == _6626_y))) { goto _case_end_4430144992; }
		_case_begin_4430144992:;
		{
			_6636_r=_6618_x;
		}
		goto _match_end_4430143488;
		_case_end_4430144992:;
		if (!((_6618_x == 0LL))) { goto _case_end_4430144496; }
		_case_begin_4430144496:;
		{
			_6636_r=static_cast<jule::F64>(_1a9a6b7c4_copysign(static_cast<jule::F64>(_1a9a223c3_f64_from_bits(1LLU)),_6626_y));
		}
		goto _match_end_4430143488;
		_case_end_4430144496:;
		if (!(((_6626_y > _6618_x) == (_6618_x > 0LL)))) { goto _case_end_4430146080; }
		_case_begin_4430146080:;
		{
			_6636_r=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>(_1a9a223c3_f64_bits(_6618_x) + 1LL)));
		}
		goto _match_end_4430143488;
		_case_end_4430146080:;
		_case_begin_4430143664:;
		{
			_6636_r=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>(_1a9a223c3_f64_bits(_6618_x) - 1LL)));
		}
		goto _match_end_4430143488;
		_case_end_4430143664:;
		_match_end_4430143488:;
	}
	return _6636_r;
}



inline jule::F64 _1a9a6b7c4_copysign(jule::F64 _3917_f,jule::F64 _3925_sign) {
	
	return static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>((_1a9a223c3_f64_bits(_3917_f) & 9223372036854775807LLU) | (_1a9a223c3_f64_bits(_3925_sign) & 9223372036854775808LLU))));
}



inline std::tuple<jule::U64,jule::F64> _1a9aa7c50_trig_reduce(jule::F64 _6020_x) {
	jule::U64 _6030_j = jule::U64();
	jule::F64 _6038_z = jule::F64();
	
	if (_6020_x < 0.78539816339744828) {
		_6030_j = 0LL;
		_6038_z = _6020_x;
		return std::make_tuple(_6030_j,_6038_z);
	}
	jule::U64 _6713_ix = _1a9a223c3_f64_bits(_6020_x);
	jule::Int _689_exp = (static_cast<jule::Int>((_6713_ix >> 52LL) & 2047LL) - 1023LL) - 52LL;
	_6713_ix=static_cast<jule::U64>(_6713_ix & -9218868437227405313LL);
	_6713_ix|=4503599627370496LL;
	jule::Uint _7410_digit = jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	jule::Uint _7417_bitshift = jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	std::tie(_7410_digit,_7417_bitshift) = std::make_tuple(jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL),jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL));
	jule::U64 _759_z0 = (_1a9aa7c50_M_PI4[static_cast<jule::Int>(_7410_digit)] << _7417_bitshift) | (_1a9aa7c50_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] >> (64LL - _7417_bitshift));
	jule::U64 _769_z1 = (_1a9aa7c50_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] << _7417_bitshift) | (_1a9aa7c50_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] >> (64LL - _7417_bitshift));
	jule::U64 _779_z2 = (_1a9aa7c50_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] << _7417_bitshift) | (_1a9aa7c50_M_PI4[static_cast<jule::Int>(_7410_digit + 3LL)] >> (64LL - _7417_bitshift));
	jule::U64 _7910_z2hi;
	std::tie(_7910_z2hi,std::ignore) = _1aa1ac035_mul64(_779_z2,_6713_ix);
	jule::U64 _8010_z1hi;
	jule::U64 _8016_z1lo;
	std::tie(_8010_z1hi,_8016_z1lo) = _1aa1ac035_mul64(_769_z1,_6713_ix);
	jule::U64 _819_z0lo = _759_z0 * _6713_ix;
	jule::U64 _8210_lo;
	jule::U64 _8214_c;
	std::tie(_8210_lo,_8214_c) = _1aa1ac035_add64(_8016_z1lo,_7910_z2hi,0LLU);
	jule::U64 _8314_hi;
	std::tie(_8314_hi,std::ignore) = _1aa1ac035_add64(_819_z0lo,_8010_z1hi,_8214_c);
	_6030_j=static_cast<jule::U64>(_8314_hi >> 61LL);
	_8314_hi=static_cast<jule::U64>((_8314_hi << 3LL) | (_8210_lo >> 61LL));
	jule::Uint _889_lz = static_cast<jule::Uint>(_1aa1ac035_leading_zeros64(_8314_hi));
	jule::U64 _899_e = static_cast<jule::U64>(1023LL - (_889_lz + 1LL));
	_8314_hi=static_cast<jule::U64>((_8314_hi << (_889_lz + 1LL)) | (_8210_lo >> (64LL - (_889_lz + 1LL))));
	_8314_hi>>=12LL;
	_8314_hi|=static_cast<jule::U64>(_899_e << 52LL);
	_6038_z=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(_8314_hi));
	if ((_6030_j & 1LL) == 1LL) {
		(_6030_j)++;
		_6030_j&=7LL;
		(_6038_z)--;
	}
	_6030_j = _6030_j;
	_6038_z = static_cast<jule::F64>(_6038_z * 0.78539816339744828);
	return std::make_tuple(_6030_j,_6038_z);
}



inline jule::F64 _1a9aca228_atan2(jule::F64 _6014_y,jule::F64 _6022_x) {
	{
		if (!((_1a9ae7454_is_nan(_6014_y)) || (_1a9ae7454_is_nan(_6022_x)))) { goto _case_end_4430192576; }
		_case_begin_4430192576:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4430190240;
		_case_end_4430192576:;
		if (!((_6014_y == 0LL))) { goto _case_end_4430192704; }
		_case_begin_4430192704:;
		{
			if ((_6022_x >= 0LL) && (!(_1a9d10bde_signbit(_6022_x)))) {
				return static_cast<jule::F64>(_1a9a6b7c4_copysign(0LL,_6014_y));
			}
			return static_cast<jule::F64>(_1a9a6b7c4_copysign(3.1415926535897931,_6014_y));
		}
		goto _match_end_4430190240;
		_case_end_4430192704:;
		if (!((_6022_x == 0LL))) { goto _case_end_4430192832; }
		_case_begin_4430192832:;
		{
			return static_cast<jule::F64>(_1a9a6b7c4_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4430190240;
		_case_end_4430192832:;
		if (!((_1a9ae7454_is_inf(_6022_x,0LL)))) { goto _case_end_4430192960; }
		_case_begin_4430192960:;
		{
			if (_1a9ae7454_is_inf(_6022_x,1LL)) {
				{
					if (!((_1a9ae7454_is_inf(_6014_y,0LL)))) { goto _case_end_4430202080; }
					_case_begin_4430202080:;
					{
						return static_cast<jule::F64>(_1a9a6b7c4_copysign(0.78539816339744828,_6014_y));
					}
					goto _match_end_4430200432;
					_case_end_4430202080:;
					_case_begin_4430200624:;
					{
						return static_cast<jule::F64>(_1a9a6b7c4_copysign(0LL,_6014_y));
					}
					goto _match_end_4430200432;
					_case_end_4430200624:;
					_match_end_4430200432:;
				}
			}
			{
				if (!((_1a9ae7454_is_inf(_6014_y,0LL)))) { goto _case_end_4430203536; }
				_case_begin_4430203536:;
				{
					return static_cast<jule::F64>(_1a9a6b7c4_copysign(2.3561944901923448,_6014_y));
				}
				goto _match_end_4430198992;
				_case_end_4430203536:;
				_case_begin_4430202960:;
				{
					return static_cast<jule::F64>(_1a9a6b7c4_copysign(3.1415926535897931,_6014_y));
				}
				goto _match_end_4430198992;
				_case_end_4430202960:;
				_match_end_4430198992:;
			}
		}
		goto _match_end_4430190240;
		_case_end_4430192960:;
		if (!((_1a9ae7454_is_inf(_6014_y,0LL)))) { goto _case_end_4430193088; }
		_case_begin_4430193088:;
		{
			return static_cast<jule::F64>(_1a9a6b7c4_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4430190240;
		_case_end_4430193088:;
		_match_end_4430190240:;
	}
	jule::F64 _929_q = _1aa13c6d0_atan(static_cast<jule::F64>(jule::div(_6014_y,_6022_x)));
	if (_6022_x < 0LL) {
		if (_929_q <= 0LL) {
			return static_cast<jule::F64>(_929_q + 3.1415926535897931);
		}
		return static_cast<jule::F64>(_929_q - 3.1415926535897931);
	}
	return _929_q;
}



inline jule::F64 _1a9ac46b7_floor(jule::F64 _4414_x) {
	if (((_4414_x == 0LL) || _1a9ae7454_is_nan(_4414_x)) || _1a9ae7454_is_inf(_4414_x,0LL)) {
		return _4414_x;
	}
	if (_4414_x < 0LL) {
		jule::F64 _4918_d;
		jule::F64 _4921_fract;
		std::tie(_4918_d,_4921_fract) = _1a9c211a4_modf(static_cast<jule::F64>((-(_4414_x))));
		if (_4921_fract != 0LL) {
			_4918_d=static_cast<jule::F64>(_4918_d + 1LL);
		}
		return static_cast<jule::F64>((-(_4918_d)));
	}
	jule::F64 _5510_d;
	std::tie(_5510_d,std::ignore) = _1a9c211a4_modf(_4414_x);
	return _5510_d;
}



inline jule::F64 _1a9ac46b7_ceil(jule::F64 _6513_x) {
	return static_cast<jule::F64>((-(_1a9ac46b7_floor(static_cast<jule::F64>((-(_6513_x)))))));
}



inline jule::F64 _1a9ac46b7_trunc(jule::F64 _7314_x) {
	if (((_7314_x == 0LL) || _1a9ae7454_is_nan(_7314_x)) || _1a9ae7454_is_inf(_7314_x,0LL)) {
		return _7314_x;
	}
	jule::F64 _7710_d;
	std::tie(_7710_d,std::ignore) = _1a9c211a4_modf(_7314_x);
	return _7710_d;
}



inline jule::F64 _1a9ac46b7_round(jule::F64 _8714_x) {
	jule::U64 _9713_bits = _1a9a223c3_f64_bits(_8714_x);
	jule::Uint _9813_e = static_cast<jule::Uint>(_9713_bits >> 52LL) & 2047LL;
	if (_9813_e < 1023LL) {
		_9713_bits&=9223372036854775808LLU;
		if (_9813_e == 1022LL) {
			_9713_bits|=4607182418800017408LL;
		}
	} else if (_9813_e < 1075LL) {
		
		_9813_e-=1023LL;
		_9713_bits+=static_cast<jule::Int>(2251799813685248LL >> _9813_e);
		_9713_bits&=static_cast<jule::Int>((~(4503599627370495LL >> _9813_e)));
	}
	return static_cast<jule::F64>(_1a9a223c3_f64_from_bits(_9713_bits));
}



inline jule::F64 _1a9ac46b7_round_even(jule::F64 _12419_x) {
	jule::U64 _13613_bits = _1a9a223c3_f64_bits(_12419_x);
	jule::Uint _13713_e = static_cast<jule::Uint>(_13613_bits >> 52LL) & 2047LL;
	if (_13713_e >= 1023LL) {
		
		_13713_e-=1023LL;
		_13613_bits+=static_cast<jule::U64>((2251799813685247LL + ((_13613_bits >> (52LL - _13713_e)) & 1LL)) >> _13713_e);
		_13613_bits&=static_cast<jule::Int>((~(4503599627370495LL >> _13713_e)));
	} else if ((_13713_e == 1022LL) && ((_13613_bits & 4503599627370495LL) != 0LL)) {
		_13613_bits=static_cast<jule::U64>((_13613_bits & 9223372036854775808LLU) | 4607182418800017408LL);
	} else {
		_13613_bits&=9223372036854775808LLU;
	}
	return static_cast<jule::F64>(_1a9a223c3_f64_from_bits(_13613_bits));
}



inline jule::F64 _1a9ae7454_nan(void) {
	return static_cast<jule::F64>(_1a9a223c3_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1a9ae7454_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _1a9ae7454_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_1a9a223c3_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_1a9a223c3_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1a9ae7454_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline std::tuple<jule::F64,jule::Int> _1a9ae7454_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::Int _8232_exp = jule::Int();
	
	if (_1a9b94d5e_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_8224_y = static_cast<jule::F64>(_8214_x * 4503599627370496LL);
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline std::tuple<jule::F64,jule::F64> _1a9b368b1_sincos(jule::F64 _4619_x) {
	jule::F64 _4629_sin = jule::F64();
	jule::F64 _4639_cos = jule::F64();
	
	
	
	{
		if (!((_4619_x == 0LL))) { goto _case_end_4430276528; }
		_case_begin_4430276528:;
		{
			_4629_sin = _4619_x;
			_4639_cos = 1LL;
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4430276368;
		_case_end_4430276528:;
		if (!((_1a9ae7454_is_nan(_4619_x)) || (_1a9ae7454_is_inf(_4619_x,0LL)))) { goto _case_end_4430276656; }
		_case_begin_4430276656:;
		{
			_4629_sin = static_cast<jule::F64>(_1a9ae7454_nan());
			_4639_cos = static_cast<jule::F64>(_1a9ae7454_nan());
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4430276368;
		_case_end_4430276656:;
		_match_end_4430276368:;
	}
	jule::Bool _5914_sin_sign = false;
	jule::Bool _5928_cos_sign = false;
	std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple(false,false);
	if (_4619_x < 0LL) {
		_4619_x=static_cast<jule::F64>((-(_4619_x)));
		_5914_sin_sign=true;
	}
	jule::U64 _6513_j = 0LLU;
	jule::F64 _6613_y = 0LL;
	jule::F64 _6713_z = 0LL;
	if (_4619_x >= 536870912LL) {
		std::tie(_6513_j,_6713_z) = _1a9aa7c50_trig_reduce(_4619_x);
	} else {
		_6513_j=static_cast<jule::U64>(_4619_x * 1.2732395447351628);
		_6613_y=static_cast<jule::F64>(_6513_j);
		if ((_6513_j & 1LL) == 1LL) {
			(_6513_j)++;
			(_6613_y)++;
		}
		_6513_j&=7LL;
		_6713_z=static_cast<jule::F64>(((_4619_x - (_6613_y * 0.78539812564849854)) - (_6613_y * 0.000000037748947079307982)) - (_6613_y * 0.0000000000000026951514290790595));
	}
	if (_6513_j > 3LL) {
		_6513_j-=4LL;
		std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple((!(_5914_sin_sign)),(!(_5928_cos_sign)));
	}
	if (_6513_j > 1LL) {
		_5928_cos_sign=(!(_5928_cos_sign));
	}
	jule::F64 _899_zz = _6713_z * _6713_z;
	_4639_cos=static_cast<jule::F64>((1LL - (0.5 * _899_zz)) + ((_899_zz * _899_zz) * ((((((((((_1a9a2c4aa__COS[0LL] * _899_zz) + _1a9a2c4aa__COS[1LL]) * _899_zz) + _1a9a2c4aa__COS[2LL]) * _899_zz) + _1a9a2c4aa__COS[3LL]) * _899_zz) + _1a9a2c4aa__COS[4LL]) * _899_zz) + _1a9a2c4aa__COS[5LL])));
	_4629_sin=static_cast<jule::F64>(_6713_z + ((_6713_z * _899_zz) * ((((((((((_1a9a2c4aa__SIN[0LL] * _899_zz) + _1a9a2c4aa__SIN[1LL]) * _899_zz) + _1a9a2c4aa__SIN[2LL]) * _899_zz) + _1a9a2c4aa__SIN[3LL]) * _899_zz) + _1a9a2c4aa__SIN[4LL]) * _899_zz) + _1a9a2c4aa__SIN[5LL])));
	if ((_6513_j == 1LL) || (_6513_j == 2LL)) {
		std::tie(_4629_sin,_4639_cos) = std::make_tuple(_4639_cos,_4629_sin);
	}
	if (_5928_cos_sign) {
		_4639_cos=static_cast<jule::F64>((-(_4639_cos)));
	}
	if (_5914_sin_sign) {
		_4629_sin=static_cast<jule::F64>((-(_4629_sin)));
	}
	return std::make_tuple(_4629_sin,_4639_cos);
}



inline jule::F64 _1a9b1641d_dim(jule::F64 _4412_x,jule::F64 _4420_y) {
	jule::F64 _509_v = _4412_x - _4420_y;
	if (_509_v <= 0LL) {
		return 0LL;
	}
	return _509_v;
}



inline jule::F64 _1a9b1641d_max(jule::F64 _6612_x,jule::F64 _6620_y) {
	{
		if (!((_1a9ae7454_is_inf(_6612_x,1LL)) || (_1a9ae7454_is_inf(_6620_y,1LL)))) { goto _case_end_4430311792; }
		_case_begin_4430311792:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
		}
		goto _match_end_4430311552;
		_case_end_4430311792:;
		if (!((_1a9ae7454_is_nan(_6612_x)) || (_1a9ae7454_is_nan(_6620_y)))) { goto _case_end_4430311920; }
		_case_begin_4430311920:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4430311552;
		_case_end_4430311920:;
		if (!(((_6612_x == 0LL) && (_6612_x == _6620_y)))) { goto _case_end_4430312048; }
		_case_begin_4430312048:;
		{
			if (_1a9d10bde_signbit(_6612_x)) {
				return _6620_y;
			}
			return _6612_x;
		}
		goto _match_end_4430311552;
		_case_end_4430312048:;
		_match_end_4430311552:;
	}
	if (_6612_x > _6620_y) {
		return _6612_x;
	}
	return _6620_y;
}



inline jule::F64 _1a9b1641d_min(jule::F64 _9212_x,jule::F64 _9220_y) {
	{
		if (!((_1a9ae7454_is_inf(_9212_x,-1LL)) || (_1a9ae7454_is_inf(_9220_y,-1LL)))) { goto _case_end_4430319024; }
		_case_begin_4430319024:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(-1LL));
		}
		goto _match_end_4430318784;
		_case_end_4430319024:;
		if (!((_1a9ae7454_is_nan(_9212_x)) || (_1a9ae7454_is_nan(_9220_y)))) { goto _case_end_4430319152; }
		_case_begin_4430319152:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4430318784;
		_case_end_4430319152:;
		if (!(((_9212_x == 0LL) && (_9212_x == _9220_y)))) { goto _case_end_4430319280; }
		_case_begin_4430319280:;
		{
			if (_1a9d10bde_signbit(_9212_x)) {
				return _9212_x;
			}
			return _9220_y;
		}
		goto _match_end_4430318784;
		_case_end_4430319280:;
		_match_end_4430318784:;
	}
	if (_9212_x < _9220_y) {
		return _9212_x;
	}
	return _9220_y;
}



inline jule::F64 _1a9b7d386_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		if (!((_1a9ae7454_is_nan(_11112_x)) || (_1a9ae7454_is_inf(_11112_x,1LL)))) { goto _case_end_4430334544; }
		_case_begin_4430334544:;
		{
			return _11112_x;
		}
		goto _match_end_4430334352;
		_case_end_4430334544:;
		if (!((_11112_x < 0LL))) { goto _case_end_4430334672; }
		_case_begin_4430334672:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4430334352;
		_case_end_4430334672:;
		if (!((_11112_x == 0LL))) { goto _case_end_4430334800; }
		_case_begin_4430334800:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(-1LL));
		}
		goto _match_end_4430334352;
		_case_end_4430334800:;
		_match_end_4430334352:;
	}
	jule::F64 _13314_f1;
	jule::Int _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _1a9a94852_frexp(_11112_x);
	if (_13314_f1 < 0.70710678118654757) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = _13314_f1 - 1LL;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,2LL + _1389_f);
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * (0.66666666666667351 + (_1449_s4 * (0.28571428743662391 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586))))));
	jule::F64 _1469_t2 = _1449_s4 * (0.39999999999409419 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>((_1399_k * 0.69314718036912382) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f));
}



inline jule::F64 _1a9bac948_expm1(jule::F64 _15618_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1a9ae7454_is_inf(_15618_x,1LL)) || (_1a9ae7454_is_nan(_15618_x)))) { goto _case_end_4430368288; }
		_case_begin_4430368288:;
		{
			return _15618_x;
		}
		goto _match_end_4430368112;
		_case_end_4430368288:;
		if (!((_1a9ae7454_is_inf(_15618_x,-1LL)))) { goto _case_end_4430368416; }
		_case_begin_4430368416:;
		{
			return -1LL;
		}
		goto _match_end_4430368112;
		_case_end_4430368416:;
		_match_end_4430368112:;
	}
	jule::F64 _18013_absx = _15618_x;
	jule::Bool _18113_sign = false;
	if (_15618_x < 0LL) {
		_18013_absx=static_cast<jule::F64>((-(_18013_absx)));
		_18113_sign=true;
	}
	if (_18013_absx >= 38.816242111356935) {
		if (_18113_sign) {
			return -1LL;
		}
		if (_18013_absx >= 709.78271289338397) {
			return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
		}
	}
	jule::F64 _19813_c = 0LL;
	jule::Int _19913_k = 0LL;
	if (_18013_absx > 0.34657359027997264) {
		jule::F64 _20117_hi = 0LL;
		jule::F64 _20217_lo = 0LL;
		if (_18013_absx < 1.0397207708399179) {
			if ((!(_18113_sign))) {
				_20117_hi=static_cast<jule::F64>(_15618_x - 0.69314718036912382);
				_20217_lo=0.00000000019082149292705877;
				_19913_k=1LL;
			} else {
				_20117_hi=static_cast<jule::F64>(_15618_x + 0.69314718036912382);
				_20217_lo=-0.00000000019082149292705877;
				_19913_k=-1LL;
			}
		} else {
			if ((!(_18113_sign))) {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) + 0.5);
			} else {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) - 0.5);
			}
			jule::F64 _21917_t = static_cast<jule::F64>(_19913_k);
			_20117_hi=static_cast<jule::F64>(_15618_x - (_21917_t * 0.69314718036912382));
			_20217_lo=static_cast<jule::F64>(_21917_t * 0.00000000019082149292705877);
		}
		_15618_x=static_cast<jule::F64>(_20117_hi - _20217_lo);
		_19813_c=static_cast<jule::F64>((_20117_hi - _15618_x) - _20217_lo);
	} else if (_18013_absx < 0.000000000000000055511151231257827) {
		return _15618_x;
	} else {
		_19913_k=0LL;
	}
	jule::F64 _2329_hfx = 0.5 * _15618_x;
	jule::F64 _2339_hxs = _15618_x * _2329_hfx;
	jule::F64 _2349_r1 = 1LL + (_2339_hxs * (-0.033333333333333132 + (_2339_hxs * (0.0015873015872548146 + (_2339_hxs * (-0.000079365075786748794 + (_2339_hxs * (0.0000040082178273293624 + (_2339_hxs * -0.00000020109921818362437)))))))));
	jule::F64 _23513_t = 3LL - (_2349_r1 * _2329_hfx);
	jule::F64 _23613_e = _2339_hxs * jule::div(_2349_r1 - _23513_t,6LL - (_15618_x * _23513_t));
	if (_19913_k == 0LL) {
		return static_cast<jule::F64>(_15618_x - ((_15618_x * _23613_e) - _2339_hxs));
	}
	_23613_e=static_cast<jule::F64>((_15618_x * (_23613_e - _19813_c)) - _19813_c);
	_23613_e-=_2339_hxs;
	{
		if (!((_19913_k == -1LL))) { goto _case_end_4430402240; }
		_case_begin_4430402240:;
		{
			return static_cast<jule::F64>((0.5 * (_15618_x - _23613_e)) - 0.5);
		}
		goto _match_end_4430402704;
		_case_end_4430402240:;
		if (!((_19913_k == 1LL))) { goto _case_end_4430403680; }
		_case_begin_4430403680:;
		{
			if (_15618_x < -0.25) {
				return static_cast<jule::F64>(-2LL * (_23613_e - (_15618_x + 0.5)));
			}
			return static_cast<jule::F64>(1LL + (2LL * (_15618_x - _23613_e)));
		}
		goto _match_end_4430402704;
		_case_end_4430403680:;
		if (!((_19913_k <= -2LL) || (_19913_k > 56LL))) { goto _case_end_4430403840; }
		_case_begin_4430403840:;
		{
			jule::F64 _25117_y = 1LL - (_23613_e - _15618_x);
			_25117_y=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>(_1a9a223c3_f64_bits(_25117_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
			return static_cast<jule::F64>(_25117_y - 1LL);
		}
		goto _match_end_4430402704;
		_case_end_4430403840:;
		_match_end_4430402704:;
	}
	if (_19913_k < 20LL) {
		jule::F64 _25613_t = _1a9a223c3_f64_from_bits(static_cast<jule::U64>(4607182418800017408LL - (9007199254740992LL >> static_cast<jule::Uint>(_19913_k))));
		jule::F64 _25717_y = _25613_t - (_23613_e - _15618_x);
		_25717_y=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>(_1a9a223c3_f64_bits(_25717_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
		return _25717_y;
	}
	_23513_t=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>(static_cast<jule::U64>(1023LL - _19913_k) << 52LL)));
	jule::F64 _26213_y = _15618_x - (_23613_e + _23513_t);
	(_26213_y)++;
	_26213_y=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>(_1a9a223c3_f64_bits(_26213_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
	return _26213_y;
}



inline jule::F64 _1a9b94d5e_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>(_1a9a223c3_f64_bits(_4312_x) & 9223372036854775807LLU)));
}



inline jule::F64 _1a9bbccaa_j1(jule::F64 _10515_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1a9ae7454_is_nan(_10515_x)))) { goto _case_end_4430435792; }
		_case_begin_4430435792:;
		{
			return _10515_x;
		}
		goto _match_end_4430435616;
		_case_end_4430435792:;
		if (!((_1a9ae7454_is_inf(_10515_x,0LL)) || (_10515_x == 0LL))) { goto _case_end_4430435920; }
		_case_begin_4430435920:;
		{
			return 0LL;
		}
		goto _match_end_4430435616;
		_case_end_4430435920:;
		_match_end_4430435616:;
	}
	jule::Bool _12613_sign = false;
	if (_10515_x < 0LL) {
		_10515_x=static_cast<jule::F64>((-(_10515_x)));
		_12613_sign=true;
	}
	if (_10515_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _1a9b368b1_sincos(_10515_x);
		jule::F64 _13317_ss = (-(_13214_s)) - _13217_c;
		jule::F64 _13417_cc = _13214_s - _13217_c;
		if (_10515_x < 89884656743115785000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = _1a9a2c4aa_cos(static_cast<jule::F64>(_10515_x + _10515_x));
			if ((_13214_s * _13217_c) > 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10515_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.56418958354775628 * _13417_cc,_1d06ec7a3_sqrt(_10515_x)));
		} else {
			jule::F64 _15317_u = _1a9bbccaa_pone(_10515_x);
			jule::F64 _15417_v = _1a9bbccaa_qone(_10515_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.56418958354775628 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_1d06ec7a3_sqrt(_10515_x)));
		}
		if (_12613_sign) {
			return static_cast<jule::F64>((-(_14917_z)));
		}
		return _14917_z;
	}
	if (_10515_x < 0.0000000074505805969238281) {
		return static_cast<jule::F64>(0.5 * _10515_x);
	}
	jule::F64 _16613_z = _10515_x * _10515_x;
	jule::F64 _16713_r = _16613_z * (-0.0625 + (_16613_z * (0.0014070566695518971 + (_16613_z * (-0.00001599556310840356 + (_16613_z * 0.000000049672799960958445))))));
	jule::F64 _1689_s = 1LL + (_16613_z * (0.019153759953836346 + (_16613_z * (0.00018594678558863092 + (_16613_z * (0.0000011771846404262368 + (_16613_z * (0.0000000050463625707621704 + (_16613_z * 0.0000000000123542274426137914)))))))));
	_16713_r*=_10515_x;
	_16613_z=static_cast<jule::F64>((0.5 * _10515_x) + jule::div(_16713_r,_1689_s));
	if (_12613_sign) {
		return static_cast<jule::F64>((-(_16613_z)));
	}
	return _16613_z;
}



inline jule::F64 _1a9bbccaa_y1(jule::F64 _18411_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18411_x < 0LL) || (_1a9ae7454_is_nan(_18411_x)))) { goto _case_end_4430478496; }
		_case_begin_4430478496:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4430478304;
		_case_end_4430478496:;
		if (!((_1a9ae7454_is_inf(_18411_x,1LL)))) { goto _case_end_4430478624; }
		_case_begin_4430478624:;
		{
			return 0LL;
		}
		goto _match_end_4430478304;
		_case_end_4430478624:;
		if (!((_18411_x == 0LL))) { goto _case_end_4430478752; }
		_case_begin_4430478752:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(-1LL));
		}
		goto _match_end_4430478304;
		_case_end_4430478752:;
		_match_end_4430478304:;
	}
	if (_18411_x >= 2LL) {
		jule::F64 _20814_s;
		jule::F64 _20817_c;
		std::tie(_20814_s,_20817_c) = _1a9b368b1_sincos(_18411_x);
		jule::F64 _20917_ss = (-(_20814_s)) - _20817_c;
		jule::F64 _21017_cc = _20814_s - _20817_c;
		if (_18411_x < 89884656743115785000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _21417_z = _1a9a2c4aa_cos(static_cast<jule::F64>(_18411_x + _18411_x));
			if ((_20814_s * _20817_c) > 0LL) {
				_21017_cc=static_cast<jule::F64>(jule::div(_21417_z,_20917_ss));
			} else {
				_20917_ss=static_cast<jule::F64>(jule::div(_21417_z,_21017_cc));
			}
		}
		jule::F64 _23217_z = 0LL;
		if (_18411_x > 5188146770730811392LL) {
			_23217_z=static_cast<jule::F64>(jule::div(0.56418958354775628 * _20917_ss,_1d06ec7a3_sqrt(_18411_x)));
		} else {
			jule::F64 _23617_u = _1a9bbccaa_pone(_18411_x);
			jule::F64 _23717_v = _1a9bbccaa_qone(_18411_x);
			_23217_z=static_cast<jule::F64>(jule::div(0.56418958354775628 * ((_23617_u * _20917_ss) + (_23717_v * _21017_cc)),_1d06ec7a3_sqrt(_18411_x)));
		}
		return _23217_z;
	}
	if (_18411_x <= 0.000000000000000055511151231257827) {
		return static_cast<jule::F64>(jule::div(-0.63661977236758138,_18411_x));
	}
	jule::F64 _2459_z = _18411_x * _18411_x;
	jule::F64 _2469_u = -0.19605709064623894 + (_2459_z * (0.050443871663981128 + (_2459_z * (-0.0019125689587576355 + (_2459_z * (0.00002352526005616105 + (_2459_z * -0.000000091909915803987887)))))));
	jule::F64 _2479_v = 1LL + (_2459_z * (0.01991673182366499 + (_2459_z * (0.00020255258102513517 + (_2459_z * (0.0000013560880109751623 + (_2459_z * (0.000000006227414523646215 + (_2459_z * 0.000000000016655924620799208)))))))));
	return static_cast<jule::F64>((_18411_x * jule::div(_2469_u,_2479_v)) + (0.63661977236758138 * ((_1a9bbccaa_j1(_18411_x) * _1a9b7d386_log(_18411_x)) - jule::div(1LL,_18411_x))));
}



inline jule::F64 _1a9bbccaa_pone(jule::F64 _3289_x) {
	jule::Array<jule::F64,6>* _32913_p = nullptr;
	jule::Array<jule::F64,5>* _33013_q = nullptr;
	if (_3289_x >= 8LL) {
		_32913_p=(&(_1a9bbccaa_P_1R8));
		_33013_q=(&(_1a9bbccaa_P_1S8));
	} else if (_3289_x >= 4.5454) {
		_32913_p=(&(_1a9bbccaa_P_1R5));
		_33013_q=(&(_1a9bbccaa_P_1S5));
	} else if (_3289_x >= 2.8571) {
		_32913_p=(&(_1a9bbccaa_P_1R3));
		_33013_q=(&(_1a9bbccaa_P_1S3));
	} else if (_3289_x >= 2LL) {
		_32913_p=(&(_1a9bbccaa_P_1R2));
		_33013_q=(&(_1a9bbccaa_P_1S2));
	}
	{
		jule::F64 _34513_z = jule::div(1LL,_3289_x * _3289_x);
		jule::F64 _34613_r = (*(_32913_p))[0LL] + (_34513_z * ((*(_32913_p))[1LL] + (_34513_z * ((*(_32913_p))[2LL] + (_34513_z * ((*(_32913_p))[3LL] + (_34513_z * ((*(_32913_p))[4LL] + (_34513_z * (*(_32913_p))[5LL])))))))));
		jule::F64 _34713_s = 1LL + (_34513_z * ((*(_33013_q))[0LL] + (_34513_z * ((*(_33013_q))[1LL] + (_34513_z * ((*(_33013_q))[2LL] + (_34513_z * ((*(_33013_q))[3LL] + (_34513_z * (*(_33013_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34613_r,_34713_s));
	}
}



inline jule::F64 _1a9bbccaa_qone(jule::F64 _4339_x) {
	jule::Array<jule::F64,6>* _43413_p = nullptr;
	jule::Array<jule::F64,6>* _43513_q = nullptr;
	if (_4339_x >= 8LL) {
		_43413_p=(&(_1a9bbccaa_Q_1R8));
		_43513_q=(&(_1a9bbccaa_Q_1S8));
	} else if (_4339_x >= 4.5454) {
		_43413_p=(&(_1a9bbccaa_Q_1R5));
		_43513_q=(&(_1a9bbccaa_Q_1S5));
	} else if (_4339_x >= 2.8571) {
		_43413_p=(&(_1a9bbccaa_Q_1R3));
		_43513_q=(&(_1a9bbccaa_Q_1S3));
	} else if (_4339_x >= 2LL) {
		_43413_p=(&(_1a9bbccaa_Q_1R2));
		_43513_q=(&(_1a9bbccaa_Q_1S2));
	}
	{
		jule::F64 _45013_z = jule::div(1LL,_4339_x * _4339_x);
		jule::F64 _45113_r = (*(_43413_p))[0LL] + (_45013_z * ((*(_43413_p))[1LL] + (_45013_z * ((*(_43413_p))[2LL] + (_45013_z * ((*(_43413_p))[3LL] + (_45013_z * ((*(_43413_p))[4LL] + (_45013_z * (*(_43413_p))[5LL])))))))));
		jule::F64 _45213_s = 1LL + (_45013_z * ((*(_43513_q))[0LL] + (_45013_z * ((*(_43513_q))[1LL] + (_45013_z * ((*(_43513_q))[2LL] + (_45013_z * ((*(_43513_q))[3LL] + (_45013_z * ((*(_43513_q))[4LL] + (_45013_z * (*(_43513_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(0.375 + jule::div(_45113_r,_45213_s),_4339_x));
	}
}



inline jule::U64 _1a9c948dc_zero(jule::U64 _409_x) {
	if (_409_x == 0LL) {
		return 1LL;
	}
	return 0LL;
}



inline jule::U64 _1a9c948dc_nonzero(jule::U64 _4912_x) {
	if (_4912_x != 0LL) {
		return 1LL;
	}
	return 0LL;
}



inline std::tuple<jule::U64,jule::U64> _1a9c948dc_shl(jule::U64 _588_u1,jule::U64 _5817_u2,jule::Uint _5826_n) {
	jule::U64 _5837_r1 = jule::U64();
	jule::U64 _5846_r2 = jule::U64();
	_5837_r1=static_cast<jule::U64>(((_588_u1 << _5826_n) | (_5817_u2 >> (64LL - _5826_n))) | (_5817_u2 << (_5826_n - 64LL)));
	_5846_r2=static_cast<jule::U64>(_5817_u2 << _5826_n);
	return std::make_tuple(_5837_r1,_5846_r2);
}



inline std::tuple<jule::U64,jule::U64> _1a9c948dc_shr(jule::U64 _648_u1,jule::U64 _6417_u2,jule::Uint _6426_n) {
	jule::U64 _6437_r1 = jule::U64();
	jule::U64 _6446_r2 = jule::U64();
	jule::U64 _7113_shift = _648_u1;
	jule::Uint _7213_shift_n = _6426_n - 64LL;
	_iter_begin_4430555888:;
	if (!((_7113_shift > 0LL) && (_7213_shift_n > 0LL))) { goto _iter_end_4430555888; }
	{
		(_7213_shift_n)--;
		_7113_shift>>=1LL;
	}
	_iter_next_4430555888:;
	goto _iter_begin_4430555888;
	_iter_end_4430555888:;
	_6446_r2=static_cast<jule::U64>(((_6417_u2 >> _6426_n) | (_648_u1 << (64LL - _6426_n))) | _7113_shift);
	_6437_r1=static_cast<jule::U64>(_648_u1 >> _6426_n);
	return std::make_tuple(_6437_r1,_6446_r2);
}



inline std::tuple<jule::U64,jule::U64> _1a9c948dc_shrcompress(jule::U64 _8716_u1,jule::U64 _8725_u2,jule::Uint _8734_n) {
	jule::U64 _8745_r1 = jule::U64();
	jule::U64 _8754_r2 = jule::U64();
	{
		if (!((_8734_n == 0LL))) { goto _case_end_4430563360; }
		_case_begin_4430563360:;
		{
			_8745_r1 = _8716_u1;
			_8754_r2 = _8725_u2;
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4430563072;
		_case_end_4430563360:;
		if (!((_8734_n == 64LL))) { goto _case_end_4430563488; }
		_case_begin_4430563488:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_8716_u1 | _1a9c948dc_nonzero(_8725_u2));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4430563072;
		_case_end_4430563488:;
		if (!((_8734_n >= 128LL))) { goto _case_end_4430563616; }
		_case_begin_4430563616:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_1a9c948dc_nonzero(static_cast<jule::U64>(_8716_u1 | _8725_u2)));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4430563072;
		_case_end_4430563616:;
		if (!((_8734_n < 64LL))) { goto _case_end_4430563744; }
		_case_begin_4430563744:;
		{
			std::tie(_8745_r1,_8754_r2) = _1a9c948dc_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_1a9c948dc_nonzero(static_cast<jule::U64>(_8725_u2 & ((1LL << _8734_n) - 1LL))));
		}
		goto _match_end_4430563072;
		_case_end_4430563744:;
		if (!((_8734_n < 128LL))) { goto _case_end_4430563872; }
		_case_begin_4430563872:;
		{
			std::tie(_8745_r1,_8754_r2) = _1a9c948dc_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_1a9c948dc_nonzero(static_cast<jule::U64>((_8716_u1 & ((1LL << (_8734_n - 64LL)) - 1LL)) | _8725_u2)));
		}
		goto _match_end_4430563072;
		_case_end_4430563872:;
		_match_end_4430563072:;
	}
	return std::make_tuple(_8745_r1,_8754_r2);
}



inline jule::I32 _1a9c948dc_lz(jule::U64 _1057_u1,jule::U64 _10516_u2) {
	jule::I32 _10527_l = jule::I32();
	_10527_l=static_cast<jule::I32>(_1aa1ac035_leading_zeros64(_1057_u1));
	if (_10527_l == 64LL) {
		_10527_l+=static_cast<jule::I32>(_1aa1ac035_leading_zeros64(_10516_u2));
	}
	_10527_l = _10527_l;
	return _10527_l;
}



inline std::tuple<jule::U32,jule::I32,jule::U64> _1a9c948dc_split(jule::U64 _11610_b) {
	jule::U32 _11620_sign = jule::U32();
	jule::I32 _11631_exp = jule::I32();
	jule::U64 _11641_mantissa = jule::U64();
	_11620_sign=static_cast<jule::U32>(_11610_b >> 63LL);
	_11631_exp=static_cast<jule::I32>(static_cast<jule::I32>(_11610_b >> 52LL) & 2047LL);
	_11641_mantissa=static_cast<jule::U64>(_11610_b & 4503599627370495LL);
	if (_11631_exp == 0LL) {
		jule::Uint _12313_shift = static_cast<jule::Uint>(_1aa1ac035_leading_zeros64(_11641_mantissa) - 11LL);
		_11641_mantissa<<=_12313_shift;
		_11631_exp=static_cast<jule::I32>(1LL - static_cast<jule::I32>(_12313_shift));
	} else {
		_11641_mantissa|=4503599627370496LL;
	}
	return std::make_tuple(_11620_sign,_11631_exp,_11641_mantissa);
}



inline jule::F64 _1a9c948dc_fma(jule::F64 _13512_x,jule::F64 _13520_y,jule::F64 _13528_z) {
	jule::U64 _13610_bx = _1a9a223c3_f64_bits(_13512_x);
	jule::U64 _13614_by = _1a9a223c3_f64_bits(_13520_y);
	jule::U64 _13618_bz = _1a9a223c3_f64_bits(_13528_z);
	std::tie(_13610_bx,_13614_by,_13618_bz) = std::make_tuple(_1a9a223c3_f64_bits(_13512_x),_1a9a223c3_f64_bits(_13520_y),_1a9a223c3_f64_bits(_13528_z));
	if (((((_13512_x == 0LL) || (_13520_y == 0LL)) || (_13528_z == 0LL)) || ((_13610_bx & 9218868437227405312LL) == 9218868437227405312LL)) || ((_13614_by & 9218868437227405312LL) == 9218868437227405312LL)) {
		return static_cast<jule::F64>((_13512_x * _13520_y) + _13528_z);
	}
	if ((_13618_bz & 9218868437227405312LL) == 9218868437227405312LL) {
		return _13528_z;
	}
	jule::U32 _15010_xs;
	jule::I32 _15014_xe;
	jule::U64 _15018_xm;
	std::tie(_15010_xs,_15014_xe,_15018_xm) = _1a9c948dc_split(_13610_bx);
	jule::U32 _15110_ys;
	jule::I32 _15114_ye;
	jule::U64 _15118_ym;
	std::tie(_15110_ys,_15114_ye,_15118_ym) = _1a9c948dc_split(_13614_by);
	jule::U32 _15214_zs;
	jule::I32 _15222_ze;
	jule::U64 _15226_zm;
	std::tie(_15214_zs,_15222_ze,_15226_zm) = _1a9c948dc_split(_13618_bz);
	jule::I32 _15613_pe = ((_15014_xe + _15114_ye) - 1023LL) + 1LL;
	jule::U64 _16114_pm1;
	jule::U64 _16123_pm2;
	std::tie(_16114_pm1,_16123_pm2) = _1aa1ac035_mul64(static_cast<jule::U64>(_15018_xm << 10LL),static_cast<jule::U64>(_15118_ym << 11LL));
	jule::U64 _16214_zm1 = _15226_zm << 10LL;
	jule::U64 _16223_zm2 = static_cast<jule::U64>(0LLU);
	std::tie(_16214_zm1,_16223_zm2) = std::make_tuple(_15226_zm << 10LL,static_cast<jule::U64>(0LLU));
	jule::U32 _16313_ps = _15010_xs ^ _15110_ys;
	jule::Uint _1669_is62zero = static_cast<jule::Uint>(((~(_16114_pm1)) >> 62LL) & 1LL);
	std::tie(_16114_pm1,_16123_pm2) = _1a9c948dc_shl(_16114_pm1,_16123_pm2,_1669_is62zero);
	_15613_pe-=static_cast<jule::I32>(_1669_is62zero);
	if ((_15613_pe < _15222_ze) || ((_15613_pe == _15222_ze) && (_16114_pm1 < _16214_zm1))) {
		std::tie(_16313_ps,_15613_pe,_16114_pm1,_16123_pm2,_15214_zs,_15222_ze,_16214_zm1,_16223_zm2) = std::make_tuple(_15214_zs,_15222_ze,_16214_zm1,_16223_zm2,_16313_ps,static_cast<jule::I32>(_15613_pe),_16114_pm1,_16123_pm2);
	}
	std::tie(_16214_zm1,_16223_zm2) = _1a9c948dc_shrcompress(_16214_zm1,_16223_zm2,static_cast<jule::Uint>(_15613_pe - _15222_ze));
	jule::U64 _17913_m = 0LLU;
	jule::U64 _18013_c = 0LLU;
	if (_16313_ps == _15214_zs) {
		std::tie(_16123_pm2,_18013_c) = _1aa1ac035_add64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _1aa1ac035_add64(_16114_pm1,_16214_zm1,_18013_c);
		_15613_pe-=static_cast<jule::I32>((~(_16114_pm1)) >> 63LL);
		std::tie(_16114_pm1,_17913_m) = _1a9c948dc_shrcompress(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(64LL + (_16114_pm1 >> 63LL)));
	} else {
		std::tie(_16123_pm2,_18013_c) = _1aa1ac035_sub64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _1aa1ac035_sub64(_16114_pm1,_16214_zm1,_18013_c);
		jule::I32 _19113_nz = _1a9c948dc_lz(_16114_pm1,_16123_pm2);
		_15613_pe-=_19113_nz;
		std::tie(_17913_m,_16123_pm2) = _1a9c948dc_shl(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(_19113_nz - 1LL));
		_17913_m|=static_cast<jule::U64>(_1a9c948dc_nonzero(_16123_pm2));
	}
	if ((_15613_pe > 2045LL) || ((_15613_pe == 2045LL) && (((_17913_m + 512LL) >> 63LL) == 1LL))) {
		return static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(_16313_ps) << 63LL) | 9218868437227405312LL)));
	}
	if (_15613_pe < 0LL) {
		jule::Uint _20313_n = static_cast<jule::Uint>((-(_15613_pe)));
		_17913_m=static_cast<jule::U64>((_17913_m >> _20313_n) | _1a9c948dc_nonzero(static_cast<jule::U64>(_17913_m & ((1LL << _20313_n) - 1LL))));
		_15613_pe=0LL;
	}
	_17913_m=static_cast<jule::U64>(((_17913_m + 512LL) >> 10LL) & (~(_1a9c948dc_zero(static_cast<jule::U64>((_17913_m & 1023LL) ^ 512LL)))));
	_15613_pe&=static_cast<jule::I32>((-(static_cast<jule::I32>(_1a9c948dc_nonzero(_17913_m)))));
	return static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>(((static_cast<jule::U64>(_16313_ps) << 63LL) + (static_cast<jule::U64>(_15613_pe) << 52LL)) + _17913_m)));
}



inline std::tuple<jule::F64,jule::F64> _1a9c211a4_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _1a9b94d5e_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if (_469_abs_f > 4503599627370496LL) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>(_469_abs_f + 4503599627370496LL);
		_4713_i-=4503599627370496LL;
		_iter_begin_4430646480:;
		if (!(_4713_i > _469_abs_f)) { goto _iter_end_4430646480; }
		{
			(_4713_i)--;
		}
		_iter_next_4430646480:;
		goto _iter_begin_4430646480;
		_iter_end_4430646480:;
		if (_4413_f < 0LL) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1a9cb1354_log10(jule::F64 _4014_x) {
	return static_cast<jule::F64>(_1a9b7d386_log(_4014_x) * 0.43429448190325176);
}



inline jule::F64 _1a9cb1354_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::Int _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _1a9a94852_frexp(_4413_x);
	if (_4510_frac == 0.5) {
		return static_cast<jule::F64>(_4516_exp - 1LL);
	}
	return static_cast<jule::F64>((_1a9b7d386_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp));
}



inline jule::F64 _1a9c2158e_hypot(jule::F64 _5018_p,jule::F64 _5030_q) {
	{
		if (!((_1a9ae7454_is_inf(_5018_p,0LL)) || (_1a9ae7454_is_inf(_5030_q,0LL)))) { goto _case_end_4430659136; }
		_case_begin_4430659136:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
		}
		goto _match_end_4430658912;
		_case_end_4430659136:;
		if (!((_1a9ae7454_is_nan(_5018_p)) || (_1a9ae7454_is_nan(_5030_q)))) { goto _case_end_4430659264; }
		_case_begin_4430659264:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4430658912;
		_case_end_4430659264:;
		_match_end_4430658912:;
	}
	std::tie(_5018_p,_5030_q) = std::make_tuple(static_cast<jule::F64>(_1a9b94d5e_abs(_5018_p)),static_cast<jule::F64>(_1a9b94d5e_abs(_5030_q)));
	if (_5018_p < _5030_q) {
		std::tie(_5018_p,_5030_q) = std::make_tuple(_5030_q,_5018_p);
	}
	if (_5018_p == 0LL) {
		return 0LL;
	}
	_5030_q=static_cast<jule::F64>(jule::div(_5030_q,_5018_p));
	return static_cast<jule::F64>(_5018_p * _1d06ec7a3_sqrt(static_cast<jule::F64>(1LL + (_5030_q * _5030_q))));
}



inline jule::F64 _1a9d0e3c4_j0(jule::F64 _10715_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1a9ae7454_is_nan(_10715_x)))) { goto _case_end_4430679392; }
		_case_begin_4430679392:;
		{
			return _10715_x;
		}
		goto _match_end_4430679200;
		_case_end_4430679392:;
		if (!((_1a9ae7454_is_inf(_10715_x,0LL)))) { goto _case_end_4430679520; }
		_case_begin_4430679520:;
		{
			return 0LL;
		}
		goto _match_end_4430679200;
		_case_end_4430679520:;
		if (!((_10715_x == 0LL))) { goto _case_end_4430679648; }
		_case_begin_4430679648:;
		{
			return 1LL;
		}
		goto _match_end_4430679200;
		_case_end_4430679648:;
		_match_end_4430679200:;
	}
	_10715_x=static_cast<jule::F64>(_1a9b94d5e_abs(_10715_x));
	if (_10715_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _1a9b368b1_sincos(_10715_x);
		jule::F64 _13317_ss = _13214_s - _13217_c;
		jule::F64 _13417_cc = _13214_s + _13217_c;
		if (_10715_x < 89884656743115785000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = (-(_1a9a2c4aa_cos(static_cast<jule::F64>(_10715_x + _10715_x))));
			if ((_13214_s * _13217_c) < 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10715_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.56418958354775628 * _13417_cc,_1d06ec7a3_sqrt(_10715_x)));
		} else {
			jule::F64 _15317_u = _1a9d0e3c4_pzero(_10715_x);
			jule::F64 _15417_v = _1a9d0e3c4_qzero(_10715_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.56418958354775628 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_1d06ec7a3_sqrt(_10715_x)));
		}
		return _14917_z;
	}
	if (_10715_x < 0.0001220703125) {
		if (_10715_x < 0.0000000074505805969238281) {
			return 1LL;
		}
		return static_cast<jule::F64>(1LL - ((0.25 * _10715_x) * _10715_x));
	}
	jule::F64 _1659_z = _10715_x * _10715_x;
	jule::F64 _1669_r = _1659_z * (0.0156249999999999948 + (_1659_z * (-0.00018997929423885472 + (_1659_z * (0.0000018295404953270067 + (_1659_z * -0.0000000046183268853210319))))));
	jule::F64 _1679_s = 1LL + (_1659_z * (0.015619102946489001 + (_1659_z * (0.00011692678466333745 + (_1659_z * (0.00000051354655020731811 + (_1659_z * 0.0000000011661400333379)))))));
	if (_10715_x < 1LL) {
		return static_cast<jule::F64>(1LL + (_1659_z * (-0.25 + jule::div(_1669_r,_1679_s))));
	}
	jule::F64 _1719_u = 0.5 * _10715_x;
	return static_cast<jule::F64>(((1LL + _1719_u) * (1LL - _1719_u)) + (_1659_z * jule::div(_1669_r,_1679_s)));
}



inline jule::F64 _1a9d0e3c4_y0(jule::F64 _18211_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18211_x < 0LL) || (_1a9ae7454_is_nan(_18211_x)))) { goto _case_end_4430723504; }
		_case_begin_4430723504:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4430723312;
		_case_end_4430723504:;
		if (!((_1a9ae7454_is_inf(_18211_x,1LL)))) { goto _case_end_4430723632; }
		_case_begin_4430723632:;
		{
			return 0LL;
		}
		goto _match_end_4430723312;
		_case_end_4430723632:;
		if (!((_18211_x == 0LL))) { goto _case_end_4430723760; }
		_case_begin_4430723760:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(-1LL));
		}
		goto _match_end_4430723312;
		_case_end_4430723760:;
		_match_end_4430723312:;
	}
	if (_18211_x >= 2LL) {
		jule::F64 _21814_s;
		jule::F64 _21817_c;
		std::tie(_21814_s,_21817_c) = _1a9b368b1_sincos(_18211_x);
		jule::F64 _21917_ss = _21814_s - _21817_c;
		jule::F64 _22017_cc = _21814_s + _21817_c;
		if (_18211_x < 89884656743115785000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _22717_z = (-(_1a9a2c4aa_cos(static_cast<jule::F64>(_18211_x + _18211_x))));
			if ((_21814_s * _21817_c) < 0LL) {
				_22017_cc=static_cast<jule::F64>(jule::div(_22717_z,_21917_ss));
			} else {
				_21917_ss=static_cast<jule::F64>(jule::div(_22717_z,_22017_cc));
			}
		}
		jule::F64 _23417_z = 0LL;
		if (_18211_x > 5188146770730811392LL) {
			_23417_z=static_cast<jule::F64>(jule::div(0.56418958354775628 * _21917_ss,_1d06ec7a3_sqrt(_18211_x)));
		} else {
			jule::F64 _23817_u = _1a9d0e3c4_pzero(_18211_x);
			jule::F64 _23917_v = _1a9d0e3c4_qzero(_18211_x);
			_23417_z=static_cast<jule::F64>(jule::div(0.56418958354775628 * ((_23817_u * _21917_ss) + (_23917_v * _22017_cc)),_1d06ec7a3_sqrt(_18211_x)));
		}
		return _23417_z;
	}
	if (_18211_x <= 0.0000000074505805969238281) {
		return static_cast<jule::F64>(-0.073804295108687232 + (0.63661977236758138 * _1a9b7d386_log(_18211_x)));
	}
	jule::F64 _2479_z = _18211_x * _18211_x;
	jule::F64 _2489_u = -0.073804295108687232 + (_2479_z * (0.17666645250918112 + (_2479_z * (-0.0138185671945596899 + (_2479_z * (0.00034745343209368365 + (_2479_z * (-0.0000038140705372436416 + (_2479_z * (0.000000019559013703502292 + (_2479_z * -0.00000000003982051941321034)))))))))));
	jule::F64 _2499_v = 1LL + (_2479_z * (0.0127304834834123699 + (_2479_z * (0.000076006862735035325 + (_2479_z * (0.00000025915085184045781 + (_2479_z * 0.00000000044111031133267547)))))));
	return static_cast<jule::F64>(jule::div(_2489_u,_2499_v) + ((0.63661977236758138 * _1a9d0e3c4_j0(_18211_x)) * _1a9b7d386_log(_18211_x)));
}



inline jule::F64 _1a9d0e3c4_pzero(jule::F64 _33010_x) {
	jule::Array<jule::F64,6>* _33113_p = nullptr;
	jule::Array<jule::F64,5>* _33213_q = nullptr;
	if (_33010_x >= 8LL) {
		_33113_p=(&(_1a9d0e3c4_P_0R8));
		_33213_q=(&(_1a9d0e3c4_P_0S8));
	} else if (_33010_x >= 4.5454) {
		_33113_p=(&(_1a9d0e3c4_P_0R5));
		_33213_q=(&(_1a9d0e3c4_P_0S5));
	} else if (_33010_x >= 2.8571) {
		_33113_p=(&(_1a9d0e3c4_P_0R3));
		_33213_q=(&(_1a9d0e3c4_P_0S3));
	} else if (_33010_x >= 2LL) {
		_33113_p=(&(_1a9d0e3c4_P_0R2));
		_33213_q=(&(_1a9d0e3c4_P_0S2));
	}
	{
		jule::F64 _34713_z = jule::div(1LL,_33010_x * _33010_x);
		jule::F64 _34813_r = (*(_33113_p))[0LL] + (_34713_z * ((*(_33113_p))[1LL] + (_34713_z * ((*(_33113_p))[2LL] + (_34713_z * ((*(_33113_p))[3LL] + (_34713_z * ((*(_33113_p))[4LL] + (_34713_z * (*(_33113_p))[5LL])))))))));
		jule::F64 _34913_s = 1LL + (_34713_z * ((*(_33213_q))[0LL] + (_34713_z * ((*(_33213_q))[1LL] + (_34713_z * ((*(_33213_q))[2LL] + (_34713_z * ((*(_33213_q))[3LL] + (_34713_z * (*(_33213_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34813_r,_34913_s));
	}
}



inline jule::F64 _1a9d0e3c4_qzero(jule::F64 _43510_x) {
	jule::Array<jule::F64,6>* _43613_p = nullptr;
	jule::Array<jule::F64,6>* _43713_q = nullptr;
	if (_43510_x >= 8LL) {
		_43613_p=(&(_1a9d0e3c4_Q_0R8));
		_43713_q=(&(_1a9d0e3c4_Q_0S8));
	} else if (_43510_x >= 4.5454) {
		_43613_p=(&(_1a9d0e3c4_Q_0R5));
		_43713_q=(&(_1a9d0e3c4_Q_0S5));
	} else if (_43510_x >= 2.8571) {
		_43613_p=(&(_1a9d0e3c4_Q_0R3));
		_43713_q=(&(_1a9d0e3c4_Q_0S3));
	} else if (_43510_x >= 2LL) {
		_43613_p=(&(_1a9d0e3c4_Q_0R2));
		_43713_q=(&(_1a9d0e3c4_Q_0S2));
	}
	{
		jule::F64 _45213_z = jule::div(1LL,_43510_x * _43510_x);
		jule::F64 _45313_r = (*(_43613_p))[0LL] + (_45213_z * ((*(_43613_p))[1LL] + (_45213_z * ((*(_43613_p))[2LL] + (_45213_z * ((*(_43613_p))[3LL] + (_45213_z * ((*(_43613_p))[4LL] + (_45213_z * (*(_43613_p))[5LL])))))))));
		jule::F64 _45413_s = 1LL + (_45213_z * ((*(_43713_q))[0LL] + (_45213_z * ((*(_43713_q))[1LL] + (_45213_z * ((*(_43713_q))[2LL] + (_45213_z * ((*(_43713_q))[3LL] + (_45213_z * ((*(_43713_q))[4LL] + (_45213_z * (*(_43713_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(-0.125 + jule::div(_45313_r,_45413_s),_43510_x));
	}
}



inline jule::F64 _1a9d8ac58_ldexp(jule::F64 _4518_frac,jule::Int _4533_exp) {
	{
		if (!((_4518_frac == 0LL))) { goto _case_end_4430788960; }
		_case_begin_4430788960:;
		{
			return _4518_frac;
		}
		goto _match_end_4430776576;
		_case_end_4430788960:;
		if (!((_1a9ae7454_is_inf(_4518_frac,0LL)) || (_1a9ae7454_is_nan(_4518_frac)))) { goto _case_end_4430789072; }
		_case_begin_4430789072:;
		{
			return _4518_frac;
		}
		goto _match_end_4430776576;
		_case_end_4430789072:;
		_match_end_4430776576:;
	}
	jule::Int _5313_e = 0LL;
	std::tie(_4518_frac,_5313_e) = _1a9ae7454_normalize(_4518_frac);
	_4533_exp+=_5313_e;
	jule::U64 _5613_x = _1a9a223c3_f64_bits(_4518_frac);
	_4533_exp+=static_cast<jule::Int>((static_cast<jule::Int>(_5613_x >> 52LL) & 2047LL) - 1023LL);
	if (_4533_exp < -1075LL) {
		return static_cast<jule::F64>(_1a9a6b7c4_copysign(0LL,_4518_frac));
	}
	if (_4533_exp > 1023LL) {
		if (_4518_frac < 0LL) {
			return static_cast<jule::F64>(_1a9ae7454_inf(-1LL));
		}
		return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
	}
	jule::F64 _6713_m = 1LL;
	if (_4533_exp < -1022LL) {
		_4533_exp+=53LL;
		_6713_m=0.000000000000000111022302462515654;
	}
	_5613_x=static_cast<jule::U64>(_5613_x & -9218868437227405313LL);
	_5613_x|=static_cast<jule::U64>(static_cast<jule::U64>(_4533_exp + 1023LL) << 52LL);
	return static_cast<jule::F64>(_6713_m * _1a9a223c3_f64_from_bits(_5613_x));
}



inline jule::Bool _1a9d10bde_signbit(jule::F64 _3916_x) {
	return (_1a9a223c3_f64_bits(_3916_x) & 9223372036854775808LLU) != 0LL;
}



inline jule::F64 _1a9da3ec4_sinh(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	jule::Bool _6613_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_6613_sign=true;
	}
	jule::F64 _7213_temp = 0LL;
	{
		if (!((_5617_x > 21LL))) { goto _case_end_4430822400; }
		_case_begin_4430822400:;
		{
			_7213_temp=static_cast<jule::F64>(_1a9e49223_exp(_5617_x) * 0.5);
		}
		goto _match_end_4430816080;
		_case_end_4430822400:;
		if (!((_5617_x > 0.5))) { goto _case_end_4430818368; }
		_case_begin_4430818368:;
		{
			jule::F64 _7713_ex = _1a9e49223_exp(_5617_x);
			_7213_temp=static_cast<jule::F64>((_7713_ex - jule::div(1LL,_7713_ex)) * 0.5);
		}
		goto _match_end_4430816080;
		_case_end_4430818368:;
		_case_begin_4430816176:;
		{
			jule::F64 _8013_sq = _5617_x * _5617_x;
			_7213_temp=static_cast<jule::F64>(((((((-26.305632133974971 * _8013_sq) + -2894.2113559895638) * _8013_sq) + -89912.720220395087) * _8013_sq) + -630767.36404977168) * _5617_x);
			_7213_temp=static_cast<jule::F64>(jule::div(_7213_temp,((((_8013_sq + -173.6789535582337) * _8013_sq) + 15215.1737879001903) * _8013_sq) + -630767.36404977168));
		}
		goto _match_end_4430816080;
		_case_end_4430816176:;
		_match_end_4430816080:;
	}
	if (_6613_sign) {
		_7213_temp=static_cast<jule::F64>((-(_7213_temp)));
	}
	return _7213_temp;
}



inline jule::F64 _1a9da3ec4_cosh(jule::F64 _9717_x) {
	_9717_x=static_cast<jule::F64>(_1a9b94d5e_abs(_9717_x));
	if (_9717_x > 21LL) {
		return static_cast<jule::F64>(_1a9e49223_exp(_9717_x) * 0.5);
	}
	jule::F64 _1029_ex = _1a9e49223_exp(_9717_x);
	return static_cast<jule::F64>((_1029_ex + jule::div(1LL,_1029_ex)) * 0.5);
}



inline std::tuple<jule::F64,jule::Int> _1a9da8ec9_lgamma(jule::F64 _20519_x) {
	jule::F64 _20529_lgamma = jule::F64();
	jule::Int _20542_sign = jule::Int();
	
	
	
	
	
	
	
	_20542_sign=1LL;
	{
		if (!((_1a9ae7454_is_nan(_20519_x)))) { goto _case_end_4430839712; }
		_case_begin_4430839712:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4430839536;
		_case_end_4430839712:;
		if (!((_1a9ae7454_is_inf(_20519_x,0LL)))) { goto _case_end_4430839920; }
		_case_begin_4430839920:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4430839536;
		_case_end_4430839920:;
		if (!((_20519_x == 0LL))) { goto _case_end_4430840048; }
		_case_begin_4430840048:;
		{
			_20529_lgamma=static_cast<jule::F64>(_1a9ae7454_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4430839536;
		_case_end_4430840048:;
		_match_end_4430839536:;
	}
	jule::Bool _22813_neg = false;
	if (_20519_x < 0LL) {
		_20519_x=static_cast<jule::F64>((-(_20519_x)));
		_22813_neg=true;
	}
	if (_20519_x < 0.000000000000000000000847033) {
		if (_22813_neg) {
			_20542_sign=-1LL;
		}
		_20529_lgamma=static_cast<jule::F64>((-(_1a9b7d386_log(_20519_x))));
		return std::make_tuple(_20529_lgamma,_20542_sign);
	}
	jule::F64 _24113_nadj = 0LL;
	if (_22813_neg) {
		if (_20519_x >= 4503599627370496LL) {
			_20529_lgamma=static_cast<jule::F64>(_1a9ae7454_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		jule::F64 _24713_t = _1a9da8ec9_sin_pi(_20519_x);
		if (_24713_t == 0LL) {
			_20529_lgamma=static_cast<jule::F64>(_1a9ae7454_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		_24113_nadj=static_cast<jule::F64>(_1a9b7d386_log(static_cast<jule::F64>(jule::div(3.1415926535897931,_1a9b94d5e_abs(static_cast<jule::F64>(_24713_t * _20519_x))))));
		if (_24713_t < 0LL) {
			_20542_sign=-1LL;
		}
	}
	{
		if (!((_20519_x == 1LL) || (_20519_x == 2LL))) { goto _case_end_4430855760; }
		_case_begin_4430855760:;
		{
			_20529_lgamma=0LL;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4430856352;
		_case_end_4430855760:;
		if (!((_20519_x < 2LL))) { goto _case_end_4430857984; }
		_case_begin_4430857984:;
		{
			jule::F64 _26317_y = 0LL;
			jule::Int _26417_i = 0LL;
			if (_20519_x <= 0.9) {
				_20529_lgamma=static_cast<jule::F64>((-(_1a9b7d386_log(_20519_x))));
				{
					if (!((_20519_x >= 0.73163214496836226))) { goto _case_end_4430864784; }
					_case_begin_4430864784:;
					{
						_26317_y=static_cast<jule::F64>(1LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4430862976;
					_case_end_4430864784:;
					if (!((_20519_x >= 0.19163214496836223))) { goto _case_end_4430865760; }
					_case_begin_4430865760:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 0.46163214496836225);
						_26417_i=1LL;
					}
					goto _match_end_4430862976;
					_case_end_4430865760:;
					_case_begin_4430863952:;
					{
						_26317_y=_20519_x;
						_26417_i=2LL;
					}
					goto _match_end_4430862976;
					_case_end_4430863952:;
					_match_end_4430862976:;
				}
			} else {
				_20529_lgamma=0LL;
				{
					if (!((_20519_x >= 1.7316321449683623))) { goto _case_end_4430871024; }
					_case_begin_4430871024:;
					{
						_26317_y=static_cast<jule::F64>(2LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4430864176;
					_case_end_4430871024:;
					if (!((_20519_x >= 1.1916321449683622))) { goto _case_end_4430870064; }
					_case_begin_4430870064:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1.4616321449683622);
						_26417_i=1LL;
					}
					goto _match_end_4430864176;
					_case_end_4430870064:;
					_case_begin_4430864272:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1LL);
						_26417_i=2LL;
					}
					goto _match_end_4430864176;
					_case_end_4430864272:;
					_match_end_4430864176:;
				}
			}
			{
				auto _match_expr{ _26417_i };
				if (!((0LL) == _match_expr)) { goto _case_end_4430868112; }
				_case_begin_4430868112:;
				{
					jule::F64 _29417_z = _26317_y * _26317_y;
					jule::F64 _29517_p1 = _1a9da8ec9__LGAM_A[0LL] + (_29417_z * (_1a9da8ec9__LGAM_A[2LL] + (_29417_z * (_1a9da8ec9__LGAM_A[4LL] + (_29417_z * (_1a9da8ec9__LGAM_A[6LL] + (_29417_z * (_1a9da8ec9__LGAM_A[8LL] + (_29417_z * _1a9da8ec9__LGAM_A[10LL])))))))));
					jule::F64 _29617_p2 = _29417_z * (_1a9da8ec9__LGAM_A[1LL] + (_29417_z * ((+(_1a9da8ec9__LGAM_A[3LL])) + (_29417_z * (_1a9da8ec9__LGAM_A[5LL] + (_29417_z * (_1a9da8ec9__LGAM_A[7LL] + (_29417_z * (_1a9da8ec9__LGAM_A[9LL] + (_29417_z * _1a9da8ec9__LGAM_A[11LL]))))))))));
					jule::F64 _29717_p = (_26317_y * _29517_p1) + _29617_p2;
					_20529_lgamma+=static_cast<jule::F64>(_29717_p - (0.5 * _26317_y));
				}
				goto _match_end_4430872688;
				_case_end_4430868112:;
				if (!((1LL) == _match_expr)) { goto _case_end_4430871744; }
				_case_begin_4430871744:;
				{
					jule::F64 _30017_z = _26317_y * _26317_y;
					jule::F64 _30117_w = _30017_z * _26317_y;
					jule::F64 _30217_p1 = _1a9da8ec9__LGAM_T[0LL] + (_30117_w * (_1a9da8ec9__LGAM_T[3LL] + (_30117_w * (_1a9da8ec9__LGAM_T[6LL] + (_30117_w * (_1a9da8ec9__LGAM_T[9LL] + (_30117_w * _1a9da8ec9__LGAM_T[12LL])))))));
					jule::F64 _30317_p2 = _1a9da8ec9__LGAM_T[1LL] + (_30117_w * (_1a9da8ec9__LGAM_T[4LL] + (_30117_w * (_1a9da8ec9__LGAM_T[7LL] + (_30117_w * (_1a9da8ec9__LGAM_T[10LL] + (_30117_w * _1a9da8ec9__LGAM_T[13LL])))))));
					jule::F64 _30417_p3 = _1a9da8ec9__LGAM_T[2LL] + (_30117_w * (_1a9da8ec9__LGAM_T[5LL] + (_30117_w * (_1a9da8ec9__LGAM_T[8LL] + (_30117_w * (_1a9da8ec9__LGAM_T[11LL] + (_30117_w * _1a9da8ec9__LGAM_T[14LL])))))));
					jule::F64 _30517_p = (_30017_z * _30217_p1) - (-0.0000000000000000036386769970395054 - (_30117_w * (_30317_p2 + (_26317_y * _30417_p3))));
					_20529_lgamma+=static_cast<jule::F64>(-0.121486290535849611 + _30517_p);
				}
				goto _match_end_4430872688;
				_case_end_4430871744:;
				if (!((2LL) == _match_expr)) { goto _case_end_4430862176; }
				_case_begin_4430862176:;
				{
					jule::F64 _30817_p1 = _26317_y * (_1a9da8ec9__LGAM_U[0LL] + (_26317_y * (_1a9da8ec9__LGAM_U[1LL] + (_26317_y * (_1a9da8ec9__LGAM_U[2LL] + (_26317_y * (_1a9da8ec9__LGAM_U[3LL] + (_26317_y * (_1a9da8ec9__LGAM_U[4LL] + (_26317_y * _1a9da8ec9__LGAM_U[5LL]))))))))));
					jule::F64 _30917_p2 = 1LL + (_26317_y * (_1a9da8ec9__LGAM_V[1LL] + (_26317_y * (_1a9da8ec9__LGAM_V[2LL] + (_26317_y * (_1a9da8ec9__LGAM_V[3LL] + (_26317_y * (_1a9da8ec9__LGAM_V[4LL] + (_26317_y * _1a9da8ec9__LGAM_V[5LL])))))))));
					_20529_lgamma+=static_cast<jule::F64>((-0.5 * _26317_y) + jule::div(_30817_p1,_30917_p2));
				}
				goto _match_end_4430872688;
				_case_end_4430862176:;
				_match_end_4430872688:;
			}
		}
		goto _match_end_4430856352;
		_case_end_4430857984:;
		if (!((_20519_x < 8LL))) { goto _case_end_4430858096; }
		_case_begin_4430858096:;
		{
			jule::Int _31313_i = static_cast<jule::Int>(_20519_x);
			jule::F64 _31413_y = _20519_x - static_cast<jule::F64>(_31313_i);
			jule::F64 _31513_p = _31413_y * (_1a9da8ec9__LGAM_S[0LL] + (_31413_y * (_1a9da8ec9__LGAM_S[1LL] + (_31413_y * (_1a9da8ec9__LGAM_S[2LL] + (_31413_y * (_1a9da8ec9__LGAM_S[3LL] + (_31413_y * (_1a9da8ec9__LGAM_S[4LL] + (_31413_y * (_1a9da8ec9__LGAM_S[5LL] + (_31413_y * _1a9da8ec9__LGAM_S[6LL]))))))))))));
			jule::F64 _31613_q = 1LL + (_31413_y * (_1a9da8ec9__LGAM_R[1LL] + (_31413_y * (_1a9da8ec9__LGAM_R[2LL] + (_31413_y * (_1a9da8ec9__LGAM_R[3LL] + (_31413_y * (_1a9da8ec9__LGAM_R[4LL] + (_31413_y * (_1a9da8ec9__LGAM_R[5LL] + (_31413_y * _1a9da8ec9__LGAM_R[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>((0.5 * _31413_y) + jule::div(_31513_p,_31613_q));
			jule::F64 _31817_z = 1LL;
			{
				auto _match_expr{ _31313_i };
				if (!((7LL) == _match_expr)) { goto _case_end_4430915152; }
				_case_begin_4430915152:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 6LL);
					goto _case_begin_4430916336;
				}
				goto _match_end_4430912928;
				_case_end_4430915152:;
				if (!((6LL) == _match_expr)) { goto _case_end_4430916336; }
				_case_begin_4430916336:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 5LL);
					goto _case_begin_4430916448;
				}
				goto _match_end_4430912928;
				_case_end_4430916336:;
				if (!((5LL) == _match_expr)) { goto _case_end_4430916448; }
				_case_begin_4430916448:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 4LL);
					goto _case_begin_4430916560;
				}
				goto _match_end_4430912928;
				_case_end_4430916448:;
				if (!((4LL) == _match_expr)) { goto _case_end_4430916560; }
				_case_begin_4430916560:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 3LL);
					goto _case_begin_4430916672;
				}
				goto _match_end_4430912928;
				_case_end_4430916560:;
				if (!((3LL) == _match_expr)) { goto _case_end_4430916672; }
				_case_begin_4430916672:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 2LL);
					_20529_lgamma+=static_cast<jule::F64>(_1a9b7d386_log(_31817_z));
				}
				goto _match_end_4430912928;
				_case_end_4430916672:;
				_match_end_4430912928:;
			}
		}
		goto _match_end_4430856352;
		_case_end_4430858096:;
		if (!((_20519_x < 288230376151711744LL))) { goto _case_end_4430858208; }
		_case_begin_4430858208:;
		{
			jule::F64 _33713_t = _1a9b7d386_log(_20519_x);
			jule::F64 _33813_z = jule::div(1LL,_20519_x);
			jule::F64 _33913_y = _33813_z * _33813_z;
			jule::F64 _34013_w = _1a9da8ec9__LGAM_W[0LL] + (_33813_z * (_1a9da8ec9__LGAM_W[1LL] + (_33913_y * (_1a9da8ec9__LGAM_W[2LL] + (_33913_y * (_1a9da8ec9__LGAM_W[3LL] + (_33913_y * (_1a9da8ec9__LGAM_W[4LL] + (_33913_y * (_1a9da8ec9__LGAM_W[5LL] + (_33913_y * _1a9da8ec9__LGAM_W[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>(((_20519_x - 0.5) * (_33713_t - 1LL)) + _34013_w);
		}
		goto _match_end_4430856352;
		_case_end_4430858208:;
		_case_begin_4430854768:;
		{
			_20529_lgamma=static_cast<jule::F64>(_20519_x * (_1a9b7d386_log(_20519_x) - 1LL));
		}
		goto _match_end_4430856352;
		_case_end_4430854768:;
		_match_end_4430856352:;
	}
	if (_22813_neg) {
		_20529_lgamma=static_cast<jule::F64>(_24113_nadj - _20529_lgamma);
	}
	return std::make_tuple(_20529_lgamma,_20542_sign);
}



inline jule::F64 _1a9da8ec9_sin_pi(jule::F64 _35215_x) {
	
	
	if (_35215_x < 0.25) {
		return static_cast<jule::F64>((-(_1a9a2c4aa_sin(static_cast<jule::F64>(3.1415926535897931 * _35215_x)))));
	}
	jule::F64 _36013_z = _1a9ac46b7_floor(_35215_x);
	jule::Int _36113_n = 0LL;
	if (_36013_z != _35215_x) {
		_35215_x=static_cast<jule::F64>(_1a9a7a65c_mod(_35215_x,2LL));
		_36113_n=static_cast<jule::Int>(_35215_x * 4LL);
	} else {
		if (_35215_x >= 9007199254740992LL) {
			_35215_x=0LL;
			_36113_n=0LL;
		} else {
			if (_35215_x < 4503599627370496LL) {
				_36013_z=static_cast<jule::F64>(_35215_x + 4503599627370496LL);
			}
			_36113_n=static_cast<jule::Int>(1LL & _1a9a223c3_f64_bits(_36013_z));
			_35215_x=static_cast<jule::F64>(_36113_n);
			_36113_n<<=2LL;
		}
	}
	{
		auto _match_expr{ _36113_n };
		if (!((0LL) == _match_expr)) { goto _case_end_4430945744; }
		_case_begin_4430945744:;
		{
			_35215_x=static_cast<jule::F64>(_1a9a2c4aa_sin(static_cast<jule::F64>(3.1415926535897931 * _35215_x)));
		}
		goto _match_end_4430944160;
		_case_end_4430945744:;
		if (!((1LL) == _match_expr || (2LL) == _match_expr)) { goto _case_end_4430945856; }
		_case_begin_4430945856:;
		{
			_35215_x=static_cast<jule::F64>(_1a9a2c4aa_cos(static_cast<jule::F64>(3.1415926535897931 * (0.5 - _35215_x))));
		}
		goto _match_end_4430944160;
		_case_end_4430945856:;
		if (!((3LL) == _match_expr || (4LL) == _match_expr)) { goto _case_end_4430941232; }
		_case_begin_4430941232:;
		{
			_35215_x=static_cast<jule::F64>(_1a9a2c4aa_sin(static_cast<jule::F64>(3.1415926535897931 * (1LL - _35215_x))));
		}
		goto _match_end_4430944160;
		_case_end_4430941232:;
		if (!((5LL) == _match_expr || (6LL) == _match_expr)) { goto _case_end_4430941344; }
		_case_begin_4430941344:;
		{
			_35215_x=static_cast<jule::F64>((-(_1a9a2c4aa_cos(static_cast<jule::F64>(3.1415926535897931 * (_35215_x - 1.5))))));
		}
		goto _match_end_4430944160;
		_case_end_4430941344:;
		_case_begin_4430932624:;
		{
			_35215_x=static_cast<jule::F64>(_1a9a2c4aa_sin(static_cast<jule::F64>(3.1415926535897931 * (_35215_x - 2LL))));
		}
		goto _match_end_4430944160;
		_case_end_4430932624:;
		_match_end_4430944160:;
	}
	return static_cast<jule::F64>((-(_35215_x)));
}



inline jule::F64 _1a9e358c4_acosh(jule::F64 _7314_x) {
	
	{
		if (!((_7314_x < 1LL) || (_1a9ae7454_is_nan(_7314_x)))) { goto _case_end_4430953376; }
		_case_begin_4430953376:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4430953184;
		_case_end_4430953376:;
		if (!((_7314_x == 1LL))) { goto _case_end_4430953504; }
		_case_begin_4430953504:;
		{
			return 0LL;
		}
		goto _match_end_4430953184;
		_case_end_4430953504:;
		if (!((_7314_x >= 268435456LL))) { goto _case_end_4430953632; }
		_case_begin_4430953632:;
		{
			return static_cast<jule::F64>(_1a9b7d386_log(_7314_x) + 0.69314718055994529);
		}
		goto _match_end_4430953184;
		_case_end_4430953632:;
		if (!((_7314_x > 2LL))) { goto _case_end_4430953760; }
		_case_begin_4430953760:;
		{
			return static_cast<jule::F64>(_1a9b7d386_log(static_cast<jule::F64>((2LL * _7314_x) - jule::div(1LL,_7314_x + _1d06ec7a3_sqrt(static_cast<jule::F64>((_7314_x * _7314_x) - 1LL))))));
		}
		goto _match_end_4430953184;
		_case_end_4430953760:;
		_match_end_4430953184:;
	}
	jule::F64 _869_t = _7314_x - 1LL;
	return static_cast<jule::F64>(_1a9ec72c3_log1p(static_cast<jule::F64>(_869_t + _1d06ec7a3_sqrt(static_cast<jule::F64>((2LL * _869_t) + (_869_t * _869_t))))));
}



inline jule::F64 _1a9e46ece_tanh(jule::F64 _10613_x) {
	
	jule::F64 _10813_z = _1a9b94d5e_abs(_10613_x);
	{
		if (!((_10813_z > 44.014845965556525))) { goto _case_end_4430971696; }
		_case_begin_4430971696:;
		{
			if (_10613_x < 0LL) {
				return -1LL;
			}
			return 1LL;
		}
		goto _match_end_4430964848;
		_case_end_4430971696:;
		if (!((_10813_z >= 0.625))) { goto _case_end_4430967952; }
		_case_begin_4430967952:;
		{
			jule::F64 _11613_s = _1a9e49223_exp(static_cast<jule::F64>(2LL * _10813_z));
			_10813_z=static_cast<jule::F64>(1LL - jule::div(2LL,_11613_s + 1LL));
			if (_10613_x < 0LL) {
				_10813_z=static_cast<jule::F64>((-(_10813_z)));
			}
		}
		goto _match_end_4430964848;
		_case_end_4430967952:;
		_case_begin_4430965136:;
		{
			if (_10613_x == 0LL) {
				return _10613_x;
			}
			jule::F64 _12513_s = _10613_x * _10613_x;
			_10813_z=static_cast<jule::F64>(_10613_x + jule::div((_10613_x * _12513_s) * ((((_1a9e46ece_TANH_P[0LL] * _12513_s) + _1a9e46ece_TANH_P[1LL]) * _12513_s) + _1a9e46ece_TANH_P[2LL]),((((_12513_s + _1a9e46ece_TANH_Q[0LL]) * _12513_s) + _1a9e46ece_TANH_Q[1LL]) * _12513_s) + _1a9e46ece_TANH_Q[2LL]));
		}
		goto _match_end_4430964848;
		_case_end_4430965136:;
		_match_end_4430964848:;
	}
	return _10813_z;
}



inline jule::F64 _1a9e5ae05_cbrt(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	
	if (((_5617_x == 0LL) || _1a9ae7454_is_nan(_5617_x)) || _1a9ae7454_is_inf(_5617_x,0LL)) {
		return _5617_x;
	}
	jule::Bool _7113_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_7113_sign=true;
	}
	jule::F64 _7813_t = _1a9a223c3_f64_from_bits(static_cast<jule::U64>(jule::div(_1a9a223c3_f64_bits(_5617_x),3LL) + 3071306043645493248LL));
	if (_5617_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_7813_t=static_cast<jule::F64>(18014398509481984LL);
		_7813_t*=_5617_x;
		_7813_t=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>(jule::div(_1a9a223c3_f64_bits(_7813_t),3LL) + 2990241250352824320LL)));
	}
	jule::F64 _8713_r = jule::div(_7813_t * _7813_t,_5617_x);
	jule::F64 _8813_s = 0.54285714285714282 + (_8713_r * _7813_t);
	_7813_t*=static_cast<jule::F64>(0.35714285714285715 + jule::div(1.6071428571428572,(_8813_s + 1.4142857142857144) + jule::div(-0.70530612244897961,_8813_s)));
	_7813_t=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>((_1a9a223c3_f64_bits(_7813_t) & -1073741824LL) + 1073741824LL)));
	_8813_s=static_cast<jule::F64>(_7813_t * _7813_t);
	_8713_r=static_cast<jule::F64>(jule::div(_5617_x,_8813_s));
	jule::F64 _979_w = _7813_t + _7813_t;
	_8713_r=static_cast<jule::F64>(jule::div(_8713_r - _7813_t,_979_w + _8713_r));
	_7813_t=static_cast<jule::F64>(_7813_t + (_7813_t * _8713_r));
	if (_7113_sign) {
		_7813_t=static_cast<jule::F64>((-(_7813_t)));
	}
	return _7813_t;
}



inline jule::F64 _1a9e5b3ab_pow(jule::F64 _6412_x,jule::F64 _6420_y) {
	{
		if (!((_6420_y == 0LL) || (_6412_x == 1LL))) { goto _case_end_4431005024; }
		_case_begin_4431005024:;
		{
			return 1LL;
		}
		goto _match_end_4431004704;
		_case_end_4431005024:;
		if (!((_6420_y == 1LL))) { goto _case_end_4431005152; }
		_case_begin_4431005152:;
		{
			return _6412_x;
		}
		goto _match_end_4431004704;
		_case_end_4431005152:;
		if (!((_1a9ae7454_is_nan(_6412_x)) || (_1a9ae7454_is_nan(_6420_y)))) { goto _case_end_4431005280; }
		_case_begin_4431005280:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4431004704;
		_case_end_4431005280:;
		if (!((_6412_x == 0LL))) { goto _case_end_4431005408; }
		_case_begin_4431005408:;
		{
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4431007808; }
				_case_begin_4431007808:;
				{
					if (_1a9e5b3ab_is_odd_int(_6420_y)) {
						return static_cast<jule::F64>(_1a9a6b7c4_copysign(static_cast<jule::F64>(_1a9ae7454_inf(1LL)),_6412_x));
					}
					return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
				}
				goto _match_end_4431009264;
				_case_end_4431007808:;
				if (!((_6420_y > 0LL))) { goto _case_end_4431007936; }
				_case_begin_4431007936:;
				{
					if (_1a9e5b3ab_is_odd_int(_6420_y)) {
						return _6412_x;
					}
					return 0LL;
				}
				goto _match_end_4431009264;
				_case_end_4431007936:;
				_match_end_4431009264:;
			}
		}
		goto _match_end_4431004704;
		_case_end_4431005408:;
		if (!((_1a9ae7454_is_inf(_6420_y,0LL)))) { goto _case_end_4431005536; }
		_case_begin_4431005536:;
		{
			{
				if (!((_6412_x == -1LL))) { goto _case_end_4431017600; }
				_case_begin_4431017600:;
				{
					return 1LL;
				}
				goto _match_end_4431010320;
				_case_end_4431017600:;
				if (!(((_1a9b94d5e_abs(_6412_x) < 1LL) == _1a9ae7454_is_inf(_6420_y,1LL)))) { goto _case_end_4431017344; }
				_case_begin_4431017344:;
				{
					return 0LL;
				}
				goto _match_end_4431010320;
				_case_end_4431017344:;
				_case_begin_4431014720:;
				{
					return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
				}
				goto _match_end_4431010320;
				_case_end_4431014720:;
				_match_end_4431010320:;
			}
		}
		goto _match_end_4431004704;
		_case_end_4431005536:;
		if (!((_1a9ae7454_is_inf(_6412_x,0LL)))) { goto _case_end_4431005664; }
		_case_begin_4431005664:;
		{
			if (_1a9ae7454_is_inf(_6412_x,-1LL)) {
				return static_cast<jule::F64>(_1a9e5b3ab_pow(static_cast<jule::F64>(jule::div(1LL,_6412_x)),static_cast<jule::F64>((-(_6420_y)))));
			}
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4431021856; }
				_case_begin_4431021856:;
				{
					return 0LL;
				}
				goto _match_end_4431021712;
				_case_end_4431021856:;
				if (!((_6420_y > 0LL))) { goto _case_end_4431021968; }
				_case_begin_4431021968:;
				{
					return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
				}
				goto _match_end_4431021712;
				_case_end_4431021968:;
				_match_end_4431021712:;
			}
		}
		goto _match_end_4431004704;
		_case_end_4431005664:;
		if (!((_6420_y == 0.5))) { goto _case_end_4431005792; }
		_case_begin_4431005792:;
		{
			return static_cast<jule::F64>(_1d06ec7a3_sqrt(_6412_x));
		}
		goto _match_end_4431004704;
		_case_end_4431005792:;
		if (!((_6420_y == -0.5))) { goto _case_end_4431005920; }
		_case_begin_4431005920:;
		{
			return static_cast<jule::F64>(jule::div(1LL,_1d06ec7a3_sqrt(_6412_x)));
		}
		goto _match_end_4431004704;
		_case_end_4431005920:;
		_match_end_4431004704:;
	}
	jule::F64 _10814_yi;
	jule::F64 _10822_yf;
	std::tie(_10814_yi,_10822_yf) = _1a9c211a4_modf(static_cast<jule::F64>(_1a9b94d5e_abs(_6420_y)));
	if ((_10822_yf != 0LL) && (_6412_x < 0LL)) {
		return static_cast<jule::F64>(_1a9ae7454_nan());
	}
	if (_10814_yi >= 9223372036854775808LLU) {
		{
			if (!((_6412_x == -1LL))) { goto _case_end_4431031568; }
			_case_begin_4431031568:;
			{
				return 1LL;
			}
			goto _match_end_4431027056;
			_case_end_4431031568:;
			if (!(((_1a9b94d5e_abs(_6412_x) < 1LL) == (_6420_y > 0LL)))) { goto _case_end_4431031312; }
			_case_begin_4431031312:;
			{
				return 0LL;
			}
			goto _match_end_4431027056;
			_case_end_4431031312:;
			_case_begin_4431029312:;
			{
				return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
			}
			goto _match_end_4431027056;
			_case_end_4431029312:;
			_match_end_4431027056:;
		}
	}
	jule::F64 _12613_a1 = 1LL;
	jule::Int _12713_ae = 0LL;
	if (_10822_yf != 0LL) {
		if (_10822_yf > 0.5) {
			(_10822_yf)--;
			(_10814_yi)++;
		}
		_12613_a1=static_cast<jule::F64>(_1a9e49223_exp(static_cast<jule::F64>(_10822_yf * _1a9b7d386_log(_6412_x))));
	}
	jule::F64 _14214_x1;
	jule::Int _14222_xe;
	std::tie(_14214_x1,_14222_xe) = _1a9a94852_frexp(_6412_x);
	jule::I64 _14313_i = static_cast<jule::I64>(_10814_yi);
	_iter_begin_4431038912:;
	if (!(_14313_i != 0LL)) { goto _iter_end_4431038912; }
	{
		if ((_14222_xe < -4096LL) || (4096LL < _14222_xe)) {
			_12713_ae+=_14222_xe;
			goto _iter_end_4431038912;
		}
		if ((_14313_i & 1LL) == 1LL) {
			_12613_a1*=_14214_x1;
			_12713_ae+=_14222_xe;
		}
		_14214_x1*=_14214_x1;
		_14222_xe<<=1LL;
		if (_14214_x1 < 0.5) {
			_14214_x1+=_14214_x1;
			(_14222_xe)--;
		}
	}
	_iter_next_4431038912:;
	_14313_i>>=1LL;
	goto _iter_begin_4431038912;
	_iter_end_4431038912:;
	if (_6420_y < 0LL) {
		_12613_a1=static_cast<jule::F64>(jule::div(1LL,_12613_a1));
		_12713_ae=static_cast<jule::Int>((-(_12713_ae)));
	}
	return static_cast<jule::F64>(_1a9d8ac58_ldexp(_12613_a1,_12713_ae));
}



inline jule::Bool _1a9e5b3ab_is_odd_int(jule::F64 _17615_x) {
	jule::F64 _17710_xi;
	jule::F64 _17714_xf;
	std::tie(_17710_xi,_17714_xf) = _1a9c211a4_modf(_17615_x);
	return (_17714_xf == 0LL) && ((static_cast<jule::I64>(_17710_xi) & 1LL) == 1LL);
}



inline jule::F64 _1a9e49223_exp(jule::F64 _12212_x) {
	
	
	
	
	
	
	{
		if (!((_1a9ae7454_is_nan(_12212_x)) || (_1a9ae7454_is_inf(_12212_x,1LL)))) { goto _case_end_4431057104; }
		_case_begin_4431057104:;
		{
			return _12212_x;
		}
		goto _match_end_4431056208;
		_case_end_4431057104:;
		if (!((_1a9ae7454_is_inf(_12212_x,-1LL)))) { goto _case_end_4431057216; }
		_case_begin_4431057216:;
		{
			return 0LL;
		}
		goto _match_end_4431056208;
		_case_end_4431057216:;
		if (!((_12212_x > 709.78271289338397))) { goto _case_end_4431057328; }
		_case_begin_4431057328:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
		}
		goto _match_end_4431056208;
		_case_end_4431057328:;
		if (!((_12212_x < -745.13321910194111))) { goto _case_end_4431057440; }
		_case_begin_4431057440:;
		{
			return 0LL;
		}
		goto _match_end_4431056208;
		_case_end_4431057440:;
		if (!(((-0.0000000037252902984619141 < _12212_x) && (_12212_x < 0.0000000037252902984619141)))) { goto _case_end_4431057552; }
		_case_begin_4431057552:;
		{
			return static_cast<jule::F64>(1LL + _12212_x);
		}
		goto _match_end_4431056208;
		_case_end_4431057552:;
		_match_end_4431056208:;
	}
	jule::Int _14613_k = 0LL;
	{
		if (!((_12212_x < 0LL))) { goto _case_end_4431063952; }
		_case_begin_4431063952:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) - 0.5);
		}
		goto _match_end_4431061040;
		_case_end_4431063952:;
		if (!((_12212_x > 0LL))) { goto _case_end_4431064064; }
		_case_begin_4431064064:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) + 0.5);
		}
		goto _match_end_4431061040;
		_case_end_4431064064:;
		_match_end_4431061040:;
	}
	jule::F64 _1519_hi = _12212_x - (static_cast<jule::F64>(_14613_k) * 0.69314718036912382);
	jule::F64 _1529_lo = static_cast<jule::F64>(_14613_k) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_1a9e49223_expmulti(_1519_hi,_1529_lo,_14613_k));
}



inline jule::F64 _1a9e49223_exp2(jule::F64 _16013_x) {
	
	
	
	
	{
		if (!((_1a9ae7454_is_nan(_16013_x)) || (_1a9ae7454_is_inf(_16013_x,1LL)))) { goto _case_end_4431075760; }
		_case_begin_4431075760:;
		{
			return _16013_x;
		}
		goto _match_end_4431075552;
		_case_end_4431075760:;
		if (!((_1a9ae7454_is_inf(_16013_x,-1LL)))) { goto _case_end_4431075888; }
		_case_begin_4431075888:;
		{
			return 0LL;
		}
		goto _match_end_4431075552;
		_case_end_4431075888:;
		if (!((_16013_x > 1023.99999999999989))) { goto _case_end_4431076016; }
		_case_begin_4431076016:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
		}
		goto _match_end_4431075552;
		_case_end_4431076016:;
		if (!((_16013_x < -1074LL))) { goto _case_end_4431076144; }
		_case_begin_4431076144:;
		{
			return 0LL;
		}
		goto _match_end_4431075552;
		_case_end_4431076144:;
		_match_end_4431075552:;
	}
	jule::Int _18113_k = 0LL;
	{
		if (!((_16013_x > 0LL))) { goto _case_end_4431081568; }
		_case_begin_4431081568:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x + 0.5);
		}
		goto _match_end_4431080816;
		_case_end_4431081568:;
		if (!((_16013_x < 0LL))) { goto _case_end_4431081680; }
		_case_begin_4431081680:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x - 0.5);
		}
		goto _match_end_4431080816;
		_case_end_4431081680:;
		_match_end_4431080816:;
	}
	jule::F64 _1869_t = _16013_x - static_cast<jule::F64>(_18113_k);
	jule::F64 _1879_hi = _1869_t * 0.69314718036912382;
	jule::F64 _1889_lo = (-(_1869_t)) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_1a9e49223_expmulti(_1879_hi,_1889_lo,_18113_k));
}



inline jule::F64 _1a9e49223_expmulti(jule::F64 _19513_hi,jule::F64 _19522_lo,jule::Int _19531_k) {
	
	
	
	
	
	jule::F64 _2029_r = _19513_hi - _19522_lo;
	jule::F64 _2039_t = _2029_r * _2029_r;
	jule::F64 _2049_c = _2029_r - (_2039_t * (0.16666666666666666 + (_2039_t * (-0.0027777777777015593 + (_2039_t * (0.000066137563214379344 + (_2039_t * (-0.0000016533902205465252 + (_2039_t * 0.000000041381367970572385)))))))));
	jule::F64 _2059_y = 1LL - ((_19522_lo - jule::div(_2029_r * _2049_c,2LL - _2049_c)) - _19513_hi);
	return static_cast<jule::F64>(_1a9d8ac58_ldexp(_2059_y,_19531_k));
}



inline jule::F64 _1a9ec72c3_log1p(jule::F64 _12614_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_12614_x < -1LL) || (_1a9ae7454_is_nan(_12614_x)))) { goto _case_end_4431110832; }
		_case_begin_4431110832:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4431109760;
		_case_end_4431110832:;
		if (!((_12614_x == -1LL))) { goto _case_end_4431118640; }
		_case_begin_4431118640:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(-1LL));
		}
		goto _match_end_4431109760;
		_case_end_4431118640:;
		if (!((_1a9ae7454_is_inf(_12614_x,1LL)))) { goto _case_end_4431118752; }
		_case_begin_4431118752:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
		}
		goto _match_end_4431109760;
		_case_end_4431118752:;
		_match_end_4431109760:;
	}
	jule::F64 _1529_absx = _1a9b94d5e_abs(_12614_x);
	jule::F64 _15413_f = 0LL;
	jule::U64 _15513_iu = 0LLU;
	jule::Int _15613_k = 1LL;
	if (_1529_absx < 0.41421356237309503) {
		if (_1529_absx < 0.000000001862645149230957) {
			if (_1529_absx < 0.000000000000000055511151231257827) {
				return _12614_x;
			}
			return static_cast<jule::F64>(_12614_x - ((_12614_x * _12614_x) * 0.5));
		}
		if (_12614_x > -0.29289321881345248) {
			_15613_k=0LL;
			_15413_f=_12614_x;
			_15513_iu=1LL;
		}
	}
	jule::F64 _17113_c = 0LL;
	if (_15613_k != 0LL) {
		jule::F64 _17317_u = 0LL;
		if (_1529_absx < 9007199254740992LL) {
			_17317_u=static_cast<jule::F64>(1LL + _12614_x);
			_15513_iu=static_cast<jule::U64>(_1a9a223c3_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			if (_15613_k > 0LL) {
				_17113_c=static_cast<jule::F64>(1LL - (_17317_u - _12614_x));
			} else {
				_17113_c=static_cast<jule::F64>(_12614_x - (_17317_u - 1LL));
			}
			_17113_c = jule::div(_17113_c,_17317_u);
		} else {
			_17317_u=_12614_x;
			_15513_iu=static_cast<jule::U64>(_1a9a223c3_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			_17113_c=0LL;
		}
		_15513_iu&=4503599627370495LL;
		if (_15513_iu < 1865452045155277LL) {
			_17317_u=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4607182418800017408LL)));
		} else {
			(_15613_k)++;
			_17317_u=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4602678819172646912LL)));
			_15513_iu=static_cast<jule::U64>((4503599627370496LL - _15513_iu) >> 2LL);
		}
		_15413_f=static_cast<jule::F64>(_17317_u - 1LL);
	}
	jule::F64 _2029_hfsq = (0.5 * _15413_f) * _15413_f;
	jule::F64 _20313_s = 0LL;
	jule::F64 _20413_R = 0LL;
	jule::F64 _20513_z = 0LL;
	if (_15513_iu == 0LL) {
		if (_15413_f == 0LL) {
			if (_15613_k == 0LL) {
				return 0LL;
			}
			_17113_c+=static_cast<jule::F64>(static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877);
			return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.69314718036912382) + _17113_c);
		}
		_20413_R=static_cast<jule::F64>(_2029_hfsq * (1LL - (0.66666666666666663 * _15413_f)));
		if (_15613_k == 0LL) {
			return static_cast<jule::F64>(_15413_f - _20413_R);
		}
		return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.69314718036912382) - ((_20413_R - ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c)) - _15413_f));
	}
	_20313_s=static_cast<jule::F64>(jule::div(_15413_f,2LL + _15413_f));
	_20513_z=static_cast<jule::F64>(_20313_s * _20313_s);
	_20413_R=static_cast<jule::F64>(_20513_z * (0.66666666666667351 + (_20513_z * (0.39999999999409419 + (_20513_z * (0.28571428743662391 + (_20513_z * (0.22222198432149784 + (_20513_z * (0.1818357216161805 + (_20513_z * (0.15313837699209373 + (_20513_z * 0.14798198605116586)))))))))))));
	if (_15613_k == 0LL) {
		return static_cast<jule::F64>(_15413_f - (_2029_hfsq - (_20313_s * (_2029_hfsq + _20413_R))));
	}
	return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.69314718036912382) - ((_2029_hfsq - ((_20313_s * (_2029_hfsq + _20413_R)) + ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c))) - _15413_f));
}



inline std::tuple<jule::F64,jule::F64> _1a9e5b4ee_stirling(jule::F64 _13113_x) {
	if (_13113_x > 200LL) {
		return std::make_tuple(static_cast<jule::F64>(_1a9ae7454_inf(1LL)),1LL);
	}
	
	
	jule::F64 _13713_w = jule::div(1LL,_13113_x);
	_13713_w=static_cast<jule::F64>(1LL + (_13713_w * ((((((((_1a9e5b4ee__GAM_S[0LL] * _13713_w) + _1a9e5b4ee__GAM_S[1LL]) * _13713_w) + _1a9e5b4ee__GAM_S[2LL]) * _13713_w) + _1a9e5b4ee__GAM_S[3LL]) * _13713_w) + _1a9e5b4ee__GAM_S[4LL])));
	jule::F64 _13913_y1 = _1a9e49223_exp(_13113_x);
	jule::F64 _14013_y2 = 1LL;
	if (_13113_x > 143.01608) {
		jule::F64 _14213_v = _1a9e5b3ab_pow(_13113_x,static_cast<jule::F64>((0.5 * _13113_x) - 0.25));
		std::tie(_13913_y1,_14013_y2) = std::make_tuple(_14213_v,static_cast<jule::F64>(jule::div(_14213_v,_13913_y1)));
	} else {
		_13913_y1=static_cast<jule::F64>(jule::div(_1a9e5b3ab_pow(_13113_x,static_cast<jule::F64>(_13113_x - 0.5)),_13913_y1));
	}
	return std::make_tuple(_13913_y1,static_cast<jule::F64>((2.5066282746310007 * _13713_w) * _14013_y2));
}



inline jule::F64 _1a9e5b4ee_gamma(jule::F64 _15918_x) {
	
	{
		if (!((_1a9e5b4ee_is_neg_int(_15918_x)) || (_1a9ae7454_is_inf(_15918_x,-1LL)) || (_1a9ae7454_is_nan(_15918_x)))) { goto _case_end_4431184272; }
		_case_begin_4431184272:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4431184080;
		_case_end_4431184272:;
		if (!((_1a9ae7454_is_inf(_15918_x,1LL)))) { goto _case_end_4431184400; }
		_case_begin_4431184400:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
		}
		goto _match_end_4431184080;
		_case_end_4431184400:;
		if (!((_15918_x == 0LL))) { goto _case_end_4431184528; }
		_case_begin_4431184528:;
		{
			if (_1a9d10bde_signbit(_15918_x)) {
				return static_cast<jule::F64>(_1a9ae7454_inf(-1LL));
			}
			return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
		}
		goto _match_end_4431184080;
		_case_end_4431184528:;
		_match_end_4431184080:;
	}
	jule::F64 _17313_q = _1a9b94d5e_abs(_15918_x);
	jule::F64 _17413_p = _1a9ac46b7_floor(_17313_q);
	if (_17313_q > 33LL) {
		if (_15918_x >= 0LL) {
			jule::F64 _17718_y1;
			jule::F64 _17722_y2;
			std::tie(_17718_y1,_17722_y2) = _1a9e5b4ee_stirling(_15918_x);
			return static_cast<jule::F64>(_17718_y1 * _17722_y2);
		}
		jule::Int _18317_signgam = 1LL;
		jule::I64 _18413_ip = static_cast<jule::I64>(_17413_p);
		if ((_18413_ip & 1LL) == 0LL) {
			_18317_signgam=-1LL;
		}
		jule::F64 _18817_z = _17313_q - _17413_p;
		if (_18817_z > 0.5) {
			_17413_p=static_cast<jule::F64>(_17413_p + 1LL);
			_18817_z=static_cast<jule::F64>(_17313_q - _17413_p);
		}
		_18817_z=static_cast<jule::F64>(_17313_q * _1a9a2c4aa_sin(static_cast<jule::F64>(3.1415926535897931 * _18817_z)));
		if (_18817_z == 0LL) {
			return static_cast<jule::F64>(_1a9ae7454_inf(_18317_signgam));
		}
		jule::F64 _19714_sq1;
		jule::F64 _19719_sq2;
		std::tie(_19714_sq1,_19719_sq2) = _1a9e5b4ee_stirling(_17313_q);
		jule::F64 _19813_absz = _1a9b94d5e_abs(_18817_z);
		jule::F64 _19913_d = (_19813_absz * _19714_sq1) * _19719_sq2;
		if (_1a9ae7454_is_inf(_19913_d,0LL)) {
			_18817_z=static_cast<jule::F64>(jule::div(jule::div(jule::div(3.1415926535897931,_19813_absz),_19714_sq1),_19719_sq2));
		} else {
			_18817_z=static_cast<jule::F64>(jule::div(3.1415926535897931,_19913_d));
		}
		return static_cast<jule::F64>(static_cast<jule::F64>(_18317_signgam) * _18817_z);
	}
	jule::F64 _20913_z = 1LL;
	_iter_begin_4431210720:;
	if (!(_15918_x >= 3LL)) { goto _iter_end_4431210720; }
	{
		_15918_x=static_cast<jule::F64>(_15918_x - 1LL);
		_20913_z=static_cast<jule::F64>(_20913_z * _15918_x);
	}
	_iter_next_4431210720:;
	goto _iter_begin_4431210720;
	_iter_end_4431210720:;
	_iter_begin_4431213040:;
	if (!(_15918_x < 0LL)) { goto _iter_end_4431213040; }
	{
		if (_15918_x > -0.000000001) {
			goto _julec_label_small;
		}
		_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
		_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
	}
	_iter_next_4431213040:;
	goto _iter_begin_4431213040;
	_iter_end_4431213040:;
	_iter_begin_4431215184:;
	if (!(_15918_x < 2LL)) { goto _iter_end_4431215184; }
	{
		if (_15918_x < 0.000000001) {
			goto _julec_label_small;
		}
		_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
		_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
	}
	_iter_next_4431215184:;
	goto _iter_begin_4431215184;
	_iter_end_4431215184:;
	if (_15918_x == 2LL) {
		return _20913_z;
	}
	_15918_x=static_cast<jule::F64>(_15918_x - 2LL);
	_17413_p=static_cast<jule::F64>((((((((((((_15918_x * _1a9e5b4ee__GAM_P[0LL]) + _1a9e5b4ee__GAM_P[1LL]) * _15918_x) + _1a9e5b4ee__GAM_P[2LL]) * _15918_x) + _1a9e5b4ee__GAM_P[3LL]) * _15918_x) + _1a9e5b4ee__GAM_P[4LL]) * _15918_x) + _1a9e5b4ee__GAM_P[5LL]) * _15918_x) + _1a9e5b4ee__GAM_P[6LL]);
	_17313_q=static_cast<jule::F64>((((((((((((((_15918_x * _1a9e5b4ee__GAM_Q[0LL]) + _1a9e5b4ee__GAM_Q[1LL]) * _15918_x) + _1a9e5b4ee__GAM_Q[2LL]) * _15918_x) + _1a9e5b4ee__GAM_Q[3LL]) * _15918_x) + _1a9e5b4ee__GAM_Q[4LL]) * _15918_x) + _1a9e5b4ee__GAM_Q[5LL]) * _15918_x) + _1a9e5b4ee__GAM_Q[6LL]) * _15918_x) + _1a9e5b4ee__GAM_Q[7LL]);
	return static_cast<jule::F64>(jule::div(_20913_z * _17413_p,_17313_q));
	_julec_label_small:;
	if (_15918_x == 0LL) {
		return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
	}
	return static_cast<jule::F64>(jule::div(_20913_z,(1LL + (0.57721566490153287 * _15918_x)) * _15918_x));
}



inline jule::Bool _1a9e5b4ee_is_neg_int(jule::F64 _24515_x) {
	if (_24515_x < 0LL) {
		jule::F64 _24717_xf;
		std::tie(std::ignore,_24717_xf) = _1a9c211a4_modf(_24515_x);
		return _24717_xf == 0LL;
	}
	return false;
}



inline jule::F64 _1aa002133_erfinv(jule::F64 _10519_x) {
	if ((_1a9ae7454_is_nan(_10519_x) || (_10519_x <= -1LL)) || (_10519_x >= 1LL)) {
		if ((_10519_x == -1LL) || (_10519_x == 1LL)) {
			return static_cast<jule::F64>(_1a9ae7454_inf(static_cast<jule::Int>(_10519_x)));
		}
		return static_cast<jule::F64>(_1a9ae7454_nan());
	}
	jule::Bool _11413_sign = false;
	if (_10519_x < 0LL) {
		_10519_x=static_cast<jule::F64>((-(_10519_x)));
		_11413_sign=true;
	}
	jule::F64 _12013_ans = 0LL;
	if (_10519_x <= 0.85) {
		jule::F64 _12213_r = 0.180625 - ((0.25 * _10519_x) * _10519_x);
		jule::F64 _12313_z1 = (((((((((((((887.09406962545518 * _12213_r) + 11819.4933470622946) * _12213_r) + 23782.041382114385) * _12213_r) + 16235.8625151675751) * _12213_r) + 4854.8868893843883) * _12213_r) + 697.06266534389601) * _12213_r) + 47.072688112383979) * _12213_r) + 1.1975323115670913;
		jule::F64 _12413_z2 = (((((((((((((5226.4952788528544 * _12213_r) + 28729.085735721943) * _12213_r) + 39307.895800092709) * _12213_r) + 21213.794301586597) * _12213_r) + 5394.1960214247511) * _12213_r) + 687.18700749205789) * _12213_r) + 42.313330701600911) * _12213_r) + 1LL;
		_12013_ans=static_cast<jule::F64>(jule::div(_10519_x * _12313_z1,_12413_z2));
	} else {
		jule::F64 _12717_z1 = 0LL;
		jule::F64 _12817_z2 = 0LL;
		jule::F64 _12917_r = _1d06ec7a3_sqrt(static_cast<jule::F64>(0.69314718055994529 - _1a9b7d386_log(static_cast<jule::F64>(1LL - _10519_x))));
		if (_12917_r <= 5LL) {
			_12917_r-=1.6;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.00077454501427834139 * _12917_r) + 0.022723844989269184) * _12917_r) + 0.24178072517745061) * _12917_r) + 1.2704582524523684) * _12917_r) + 3.6478483247632045) * _12917_r) + 5.769497221460691) * _12917_r) + 4.6303378461565456) * _12917_r) + 1.4234371107496835);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000014859850019840355 * _12917_r) + 0.00077441459065157709) * _12917_r) + 0.021494160384252878) * _12917_r) + 0.2094506521051275) * _12917_r) + 0.97547832001787427) * _12917_r) + 2.3707661626024534) * _12917_r) + 2.9036514445419948) * _12917_r) + 1.4142135623730951);
		} else {
			_12917_r-=5LL;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.00000020103343992922881 * _12917_r) + 0.000027115555687434876) * _12917_r) + 0.0012426609473880784) * _12917_r) + 0.026532189526576124) * _12917_r) + 0.29656057182850487) * _12917_r) + 1.7848265399172913) * _12917_r) + 5.4637849111641144) * _12917_r) + 6.6579046435011033);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000000000028910246058729655 * _12917_r) + 0.00000020103212076839431) * _12917_r) + 0.000026110884050805935) * _12917_r) + 0.0011128009970788597) * _12917_r) + 0.021036937682720691) * _12917_r) + 0.19364809469506591) * _12917_r) + 0.8482908416595164) * _12917_r) + 1.4142135623730951);
		}
		_12013_ans=static_cast<jule::F64>(jule::div(_12717_z1,_12817_z2));
	}
	if (_11413_sign) {
		return static_cast<jule::F64>((-(_12013_ans)));
	}
	return _12013_ans;
}



inline jule::F64 _1aa002133_erfcinv(jule::F64 _15516_x) {
	return static_cast<jule::F64>(_1aa002133_erfinv(static_cast<jule::F64>(1LL - _15516_x)));
}



inline jule::F64 _1aa0b71e8_erf(jule::F64 _21716_x) {
	
	
	{
		if (!((_1a9ae7454_is_nan(_21716_x)))) { goto _case_end_4431279200; }
		_case_begin_4431279200:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4431278928;
		_case_end_4431279200:;
		if (!((_1a9ae7454_is_inf(_21716_x,1LL)))) { goto _case_end_4431279312; }
		_case_begin_4431279312:;
		{
			return 1LL;
		}
		goto _match_end_4431278928;
		_case_end_4431279312:;
		if (!((_1a9ae7454_is_inf(_21716_x,-1LL)))) { goto _case_end_4431279424; }
		_case_begin_4431279424:;
		{
			return -1LL;
		}
		goto _match_end_4431278928;
		_case_end_4431279424:;
		_match_end_4431278928:;
	}
	jule::Bool _22913_sign = false;
	if (_21716_x < 0LL) {
		_21716_x=static_cast<jule::F64>((-(_21716_x)));
		_22913_sign=true;
	}
	if (_21716_x < 0.84375) {
		jule::F64 _23517_temp = 0LL;
		if (_21716_x < 0.0000000037252902984619141) {
			if (_21716_x < 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000028480945388892178) {
				_23517_temp=static_cast<jule::F64>(0.125 * ((8LL * _21716_x) + (1.0270333367641007 * _21716_x)));
			} else {
				_23517_temp=static_cast<jule::F64>(_21716_x + (0.12837916709551259 * _21716_x));
			}
		} else {
			jule::F64 _24317_z = _21716_x * _21716_x;
			jule::F64 _24417_r = 0.12837916709551256 + (_24317_z * (-0.3250421072470015 + (_24317_z * (-0.02848174957559851 + (_24317_z * (-0.0057702702964894416 + (_24317_z * -0.000023763016656650163)))))));
			jule::F64 _24517_s = 1LL + (_24317_z * (0.39791722395915535 + (_24317_z * (0.065022249988767294 + (_24317_z * (0.0050813062818757656 + (_24317_z * (0.00013249473800432164 + (_24317_z * -0.0000039602282787753681)))))))));
			jule::F64 _24617_y = jule::div(_24417_r,_24517_s);
			_23517_temp=static_cast<jule::F64>(_21716_x + (_21716_x * _24617_y));
		}
		if (_22913_sign) {
			return static_cast<jule::F64>((-(_23517_temp)));
		}
		return _23517_temp;
	}
	if (_21716_x < 1.25) {
		jule::F64 _25513_s = _21716_x - 1LL;
		jule::F64 _25613_P = -0.0023621185607526594 + (_25513_s * (0.41485611868374833 + (_25513_s * (-0.37220787603570132 + (_25513_s * (0.31834661990116175 + (_25513_s * (-0.110894694282396677 + (_25513_s * (0.035478304325618236 + (_25513_s * -0.0021663755948687908)))))))))));
		jule::F64 _25713_Q = 1LL + (_25513_s * (0.106420880400844228 + (_25513_s * (0.54039791770217105 + (_25513_s * (0.071828654414196266 + (_25513_s * (0.12617121980876164 + (_25513_s * (0.0136370839120290507 + (_25513_s * 0.0119844998467991074)))))))))));
		if (_22913_sign) {
			return static_cast<jule::F64>(-0.84506291151046753 - jule::div(_25613_P,_25713_Q));
		}
		return static_cast<jule::F64>(0.84506291151046753 + jule::div(_25613_P,_25713_Q));
	}
	if (_21716_x >= 6LL) {
		if (_22913_sign) {
			return -1LL;
		}
		return 1LL;
	}
	jule::F64 _2699_s = jule::div(1LL,_21716_x * _21716_x);
	jule::F64 _27013_R = 0LL;
	jule::F64 _27113_S = 0LL;
	if (_21716_x < 2.8571428571428572) {
		_27013_R=static_cast<jule::F64>(-0.0098649440348471482 + (_2699_s * (-0.69385857270718176 + (_2699_s * (-10.558626225323291 + (_2699_s * (-62.375332450326006 + (_2699_s * (-162.39666946257347 + (_2699_s * (-184.60509290671104 + (_2699_s * (-81.287435506306593 + (_2699_s * -9.8143293441691455))))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (19.651271667439257 + (_2699_s * (137.65775414351904 + (_2699_s * (434.56587747522923 + (_2699_s * (645.38727173326788 + (_2699_s * (429.00814002756783 + (_2699_s * (108.635005541779435 + (_2699_s * (6.5702497703192817 + (_2699_s * -0.060424415214858099))))))))))))))));
	} else {
		_27013_R=static_cast<jule::F64>(-0.0098649429247000993 + (_2699_s * (-0.79928323768052301 + (_2699_s * (-17.757954917754752 + (_2699_s * (-160.63638485582192 + (_2699_s * (-637.56644336838963 + (_2699_s * (-1025.0951316110772 + (_2699_s * -483.5191916086514))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (30.338060743482458 + (_2699_s * (325.79251299657392 + (_2699_s * (1536.729586084437 + (_2699_s * (3199.8582195085955 + (_2699_s * (2553.0504064331644 + (_2699_s * (474.52854120695537 + (_2699_s * -22.440952446585818))))))))))))));
	}
	jule::F64 _2799_z = _1a9a223c3_f64_from_bits(static_cast<jule::U64>(_1a9a223c3_f64_bits(_21716_x) & 18446744069414584320LLU));
	jule::F64 _2809_r = _1a9e49223_exp(static_cast<jule::F64>(((-(_2799_z)) * _2799_z) - 0.5625)) * _1a9e49223_exp(static_cast<jule::F64>(((_2799_z - _21716_x) * (_2799_z + _21716_x)) + jule::div(_27013_R,_27113_S)));
	if (_22913_sign) {
		return static_cast<jule::F64>(jule::div(_2809_r,_21716_x) - 1LL);
	}
	return static_cast<jule::F64>(1LL - jule::div(_2809_r,_21716_x));
}



inline jule::F64 _1aa0b71e8_erfc(jule::F64 _29317_x) {
	
	{
		if (!((_1a9ae7454_is_nan(_29317_x)))) { goto _case_end_4431353744; }
		_case_begin_4431353744:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4431353584;
		_case_end_4431353744:;
		if (!((_1a9ae7454_is_inf(_29317_x,1LL)))) { goto _case_end_4431353856; }
		_case_begin_4431353856:;
		{
			return 0LL;
		}
		goto _match_end_4431353584;
		_case_end_4431353856:;
		if (!((_1a9ae7454_is_inf(_29317_x,-1LL)))) { goto _case_end_4431353968; }
		_case_begin_4431353968:;
		{
			return 2LL;
		}
		goto _match_end_4431353584;
		_case_end_4431353968:;
		_match_end_4431353584:;
	}
	jule::Bool _30413_sign = false;
	if (_29317_x < 0LL) {
		_29317_x=static_cast<jule::F64>((-(_29317_x)));
		_30413_sign=true;
	}
	if (_29317_x < 0.84375) {
		jule::F64 _31017_temp = 0LL;
		if (_29317_x < 0.0000000000000000138777878078144568) {
			_31017_temp=_29317_x;
		} else {
			jule::F64 _31417_z = _29317_x * _29317_x;
			jule::F64 _31517_r = 0.12837916709551256 + (_31417_z * (-0.3250421072470015 + (_31417_z * (-0.02848174957559851 + (_31417_z * (-0.0057702702964894416 + (_31417_z * -0.000023763016656650163)))))));
			jule::F64 _31617_s = 1LL + (_31417_z * (0.39791722395915535 + (_31417_z * (0.065022249988767294 + (_31417_z * (0.0050813062818757656 + (_31417_z * (0.00013249473800432164 + (_31417_z * -0.0000039602282787753681)))))))));
			jule::F64 _31717_y = jule::div(_31517_r,_31617_s);
			if (_29317_x < 0.25) {
				_31017_temp=static_cast<jule::F64>(_29317_x + (_29317_x * _31717_y));
			} else {
				_31017_temp=static_cast<jule::F64>(0.5 + ((_29317_x * _31717_y) + (_29317_x - 0.5)));
			}
		}
		if (_30413_sign) {
			return static_cast<jule::F64>(1LL + _31017_temp);
		}
		return static_cast<jule::F64>(1LL - _31017_temp);
	}
	if (_29317_x < 1.25) {
		jule::F64 _33013_s = _29317_x - 1LL;
		jule::F64 _33113_P = -0.0023621185607526594 + (_33013_s * (0.41485611868374833 + (_33013_s * (-0.37220787603570132 + (_33013_s * (0.31834661990116175 + (_33013_s * (-0.110894694282396677 + (_33013_s * (0.035478304325618236 + (_33013_s * -0.0021663755948687908)))))))))));
		jule::F64 _33213_Q = 1LL + (_33013_s * (0.106420880400844228 + (_33013_s * (0.54039791770217105 + (_33013_s * (0.071828654414196266 + (_33013_s * (0.12617121980876164 + (_33013_s * (0.0136370839120290507 + (_33013_s * 0.0119844998467991074)))))))))));
		if (_30413_sign) {
			return static_cast<jule::F64>(1.8450629115104675 + jule::div(_33113_P,_33213_Q));
		}
		return static_cast<jule::F64>(0.15493708848953247 - jule::div(_33113_P,_33213_Q));
	}
	if (_29317_x < 28LL) {
		jule::F64 _34013_s = jule::div(1LL,_29317_x * _29317_x);
		jule::F64 _34117_R = 0LL;
		jule::F64 _34217_S = 0LL;
		if (_29317_x < 2.8571428571428572) {
			_34117_R=static_cast<jule::F64>(-0.0098649440348471482 + (_34013_s * (-0.69385857270718176 + (_34013_s * (-10.558626225323291 + (_34013_s * (-62.375332450326006 + (_34013_s * (-162.39666946257347 + (_34013_s * (-184.60509290671104 + (_34013_s * (-81.287435506306593 + (_34013_s * -9.8143293441691455))))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (19.651271667439257 + (_34013_s * (137.65775414351904 + (_34013_s * (434.56587747522923 + (_34013_s * (645.38727173326788 + (_34013_s * (429.00814002756783 + (_34013_s * (108.635005541779435 + (_34013_s * (6.5702497703192817 + (_34013_s * -0.060424415214858099))))))))))))))));
		} else {
			if (_30413_sign && (_29317_x > 6LL)) {
				return 2LL;
			}
			_34117_R=static_cast<jule::F64>(-0.0098649429247000993 + (_34013_s * (-0.79928323768052301 + (_34013_s * (-17.757954917754752 + (_34013_s * (-160.63638485582192 + (_34013_s * (-637.56644336838963 + (_34013_s * (-1025.0951316110772 + (_34013_s * -483.5191916086514))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (30.338060743482458 + (_34013_s * (325.79251299657392 + (_34013_s * (1536.729586084437 + (_34013_s * (3199.8582195085955 + (_34013_s * (2553.0504064331644 + (_34013_s * (474.52854120695537 + (_34013_s * -22.440952446585818))))))))))))));
		}
		jule::F64 _35313_z = _1a9a223c3_f64_from_bits(static_cast<jule::U64>(_1a9a223c3_f64_bits(_29317_x) & 18446744069414584320LLU));
		jule::F64 _35413_r = _1a9e49223_exp(static_cast<jule::F64>(((-(_35313_z)) * _35313_z) - 0.5625)) * _1a9e49223_exp(static_cast<jule::F64>(((_35313_z - _29317_x) * (_35313_z + _29317_x)) + jule::div(_34117_R,_34217_S)));
		if (_30413_sign) {
			return static_cast<jule::F64>(2LL - jule::div(_35413_r,_29317_x));
		}
		return static_cast<jule::F64>(jule::div(_35413_r,_29317_x));
	}
	if (_30413_sign) {
		return 2LL;
	}
	return 0LL;
}



inline jule::F64 _1d06aa640_pow10(jule::Int _6114_n) {
	if ((0LL <= _6114_n) && (_6114_n <= 308LL)) {
		return static_cast<jule::F64>(_1d06aa640_POW10_POSTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>(_6114_n),32LL))] * _1d06aa640_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>(_6114_n),32LL))]);
	}
	if ((-323LL <= _6114_n) && (_6114_n <= 0LL)) {
		return static_cast<jule::F64>(jule::div(_1d06aa640_POW10_NEGTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>((-(_6114_n))),32LL))],_1d06aa640_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>((-(_6114_n))),32LL))]));
	}
	if (_6114_n > 0LL) {
		return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
	}
	return 0LL;
}



inline jule::F64 _1d06ec7a3_sqrt(jule::F64 _12313_x) {
	{
		if (!((_12313_x == 0LL) || (_1a9ae7454_is_nan(_12313_x)) || (_1a9ae7454_is_inf(_12313_x,1LL)))) { goto _case_end_4431416560; }
		_case_begin_4431416560:;
		{
			return _12313_x;
		}
		goto _match_end_4431411648;
		_case_end_4431416560:;
		if (!((_12313_x < 0LL))) { goto _case_end_4431416688; }
		_case_begin_4431416688:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4431411648;
		_case_end_4431416688:;
		_match_end_4431411648:;
	}
	jule::U64 _13113_ix = _1a9a223c3_f64_bits(_12313_x);
	jule::Int _13313_exp = static_cast<jule::Int>((_13113_ix >> 52LL) & 2047LL);
	if (_13313_exp == 0LL) {
		_iter_begin_4431411744:;
		if (!((_13113_ix & 4503599627370496LL) == 0LL)) { goto _iter_end_4431411744; }
		{
			_13113_ix<<=1LL;
			(_13313_exp)--;
		}
		_iter_next_4431411744:;
		goto _iter_begin_4431411744;
		_iter_end_4431411744:;
		(_13313_exp)++;
	}
	_13313_exp-=1023LL;
	_13113_ix=static_cast<jule::U64>(_13113_ix & -9218868437227405313LL);
	_13113_ix|=4503599627370496LL;
	if ((_13313_exp & 1LL) == 1LL) {
		_13113_ix<<=1LL;
	}
	_13313_exp>>=1LL;
	_13113_ix<<=1LL;
	jule::U64 _15013_q = 0LLU;
	jule::U64 _15113_s = 0LLU;
	jule::U64 _15213_r = static_cast<jule::U64>(9007199254740992LLU);
	_iter_begin_4431428496:;
	if (!(_15213_r != 0LL)) { goto _iter_end_4431428496; }
	{
		jule::U64 _15413_t = _15113_s + _15213_r;
		if (_15413_t <= _13113_ix) {
			_15113_s=static_cast<jule::U64>(_15413_t + _15213_r);
			_13113_ix-=_15413_t;
			_15013_q+=_15213_r;
		}
		_13113_ix<<=1LL;
		_15213_r>>=1LL;
	}
	_iter_next_4431428496:;
	goto _iter_begin_4431428496;
	_iter_end_4431428496:;
	if (_13113_ix != 0LL) {
		_15013_q+=static_cast<jule::U64>(_15013_q & 1LL);
	}
	_13113_ix=static_cast<jule::U64>((_15013_q >> 1LL) + (static_cast<jule::U64>((_13313_exp - 1LL) + 1023LL) << 52LL));
	return static_cast<jule::F64>(_1a9a223c3_f64_from_bits(_13113_ix));
}



inline jule::F64 _1d0751b04_logb(jule::F64 _4413_x) {
	{
		if (!((_4413_x == 0LL))) { goto _case_end_4431437936; }
		_case_begin_4431437936:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(-1LL));
		}
		goto _match_end_4431437648;
		_case_end_4431437936:;
		if (!((_1a9ae7454_is_inf(_4413_x,0LL)))) { goto _case_end_4431438048; }
		_case_begin_4431438048:;
		{
			return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
		}
		goto _match_end_4431437648;
		_case_end_4431438048:;
		if (!((_1a9ae7454_is_nan(_4413_x)))) { goto _case_end_4431438160; }
		_case_begin_4431438160:;
		{
			return _4413_x;
		}
		goto _match_end_4431437648;
		_case_end_4431438160:;
		_match_end_4431437648:;
	}
	return static_cast<jule::F64>(_1d0751b04__ilogb(_4413_x));
}



inline jule::Int _1d0751b04_ilogb(jule::F64 _6314_x) {
	{
		if (!((_6314_x == 0LL))) { goto _case_end_4431442976; }
		_case_begin_4431442976:;
		{
			return -2147483648LL;
		}
		goto _match_end_4431439552;
		_case_end_4431442976:;
		if (!((_1a9ae7454_is_nan(_6314_x)))) { goto _case_end_4431443088; }
		_case_begin_4431443088:;
		{
			return 2147483647LL;
		}
		goto _match_end_4431439552;
		_case_end_4431443088:;
		if (!((_1a9ae7454_is_inf(_6314_x,0LL)))) { goto _case_end_4431443200; }
		_case_begin_4431443200:;
		{
			return 2147483647LL;
		}
		goto _match_end_4431439552;
		_case_end_4431443200:;
		_match_end_4431439552:;
	}
	return static_cast<jule::Int>(_1d0751b04__ilogb(_6314_x));
}



inline jule::Int _1d0751b04__ilogb(jule::F64 _7715_x) {
	jule::Int _7813_exp = 0LL;
	std::tie(_7715_x,_7813_exp) = _1a9ae7454_normalize(_7715_x);
	return static_cast<jule::Int>((static_cast<jule::Int>((_1a9a223c3_f64_bits(_7715_x) >> 52LL) & 2047LL) - 1023LL) + _7813_exp);
}



inline jule::F64 _1d0751065_jn(jule::Int _8415_n,jule::F64 _8427_x) {
	
	
	{
		if (!((_1a9ae7454_is_nan(_8427_x)))) { goto _case_end_4431454384; }
		_case_begin_4431454384:;
		{
			return _8427_x;
		}
		goto _match_end_4431454128;
		_case_end_4431454384:;
		if (!((_1a9ae7454_is_inf(_8427_x,0LL)))) { goto _case_end_4431454496; }
		_case_begin_4431454496:;
		{
			return 0LL;
		}
		goto _match_end_4431454128;
		_case_end_4431454496:;
		_match_end_4431454128:;
	}
	if (_8415_n == 0LL) {
		return static_cast<jule::F64>(_1a9d0e3c4_j0(_8427_x));
	}
	if (_8427_x == 0LL) {
		return 0LL;
	}
	if (_8415_n < 0LL) {
		std::tie(_8415_n,_8427_x) = std::make_tuple(static_cast<jule::Int>((-(_8415_n))),static_cast<jule::F64>((-(_8427_x))));
	}
	if (_8415_n == 1LL) {
		return static_cast<jule::F64>(_1a9bbccaa_j1(_8427_x));
	}
	jule::Bool _10913_sign = false;
	if (_8427_x < 0LL) {
		_8427_x=static_cast<jule::F64>((-(_8427_x)));
		if ((_8415_n & 1LL) == 1LL) {
			_10913_sign=true;
		}
	}
	jule::F64 _11613_b = 0LL;
	if (static_cast<jule::F64>(_8415_n) <= _8427_x) {
		if (_8427_x >= 5967269506265907200LL) {
			jule::F64 _13321_temp = 0LL;
			jule::F64 _13418_s;
			jule::F64 _13421_c;
			std::tie(_13418_s,_13421_c) = _1a9b368b1_sincos(_8427_x);
			{
				auto _match_expr{ _8415_n & 3LL };
				if (!((0LL) == _match_expr)) { goto _case_end_4431470560; }
				_case_begin_4431470560:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c + _13418_s);
				}
				goto _match_end_4431468416;
				_case_end_4431470560:;
				if (!((1LL) == _match_expr)) { goto _case_end_4431470800; }
				_case_begin_4431470800:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) + _13418_s);
				}
				goto _match_end_4431468416;
				_case_end_4431470800:;
				if (!((2LL) == _match_expr)) { goto _case_end_4431470912; }
				_case_begin_4431470912:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) - _13418_s);
				}
				goto _match_end_4431468416;
				_case_end_4431470912:;
				if (!((3LL) == _match_expr)) { goto _case_end_4431471024; }
				_case_begin_4431471024:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c - _13418_s);
				}
				goto _match_end_4431468416;
				_case_end_4431471024:;
				_match_end_4431468416:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(0.56418958354775628 * _13321_temp,_1d06ec7a3_sqrt(_8427_x)));
		} else {
			_11613_b=static_cast<jule::F64>(_1a9bbccaa_j1(_8427_x));
			jule::Int _14422_i = 1LL;
			jule::F64 _14429_a = _1a9d0e3c4_j0(_8427_x);
			std::tie(_14422_i,_14429_a) = std::make_tuple(1LL,_1a9d0e3c4_j0(_8427_x));
			_iter_begin_4431478768:;
			if (!(_14422_i < _8415_n)) { goto _iter_end_4431478768; }
			{
				std::tie(_14429_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>((_11613_b * jule::div(static_cast<jule::F64>(_14422_i + _14422_i),_8427_x)) - _14429_a));
			}
			_iter_next_4431478768:;
			(_14422_i)++;
			goto _iter_begin_4431478768;
			_iter_end_4431478768:;
		}
	} else {
		if (_8427_x < 0.000000001862645149230957) {
			if (_8415_n > 33LL) {
				_11613_b=0LL;
			} else {
				jule::F64 _15721_temp = _8427_x * 0.5;
				_11613_b=_15721_temp;
				jule::F64 _15925_a = 1LL;
				jule::Int _16025_i = 2LL;
				_iter_begin_4431486784:;
				if (!(_16025_i <= _8415_n)) { goto _iter_end_4431486784; }
				{
					_15925_a*=static_cast<jule::F64>(_16025_i);
					_11613_b*=_15721_temp;
				}
				_iter_next_4431486784:;
				(_16025_i)++;
				goto _iter_begin_4431486784;
				_iter_end_4431486784:;
				_11613_b = jule::div(_11613_b,_15925_a);
			}
		} else {
			jule::F64 _19717_w = jule::div(static_cast<jule::F64>(_8415_n + _8415_n),_8427_x);
			jule::F64 _19817_h = jule::div(2LL,_8427_x);
			jule::F64 _19921_q0 = _19717_w;
			jule::F64 _20021_z = _19717_w + _19817_h;
			jule::F64 _20121_q1 = (_19717_w * _20021_z) - 1LL;
			jule::Int _20221_k = 1LL;
			_iter_begin_4431493968:;
			if (!(_20121_q1 < 1000000000LL)) { goto _iter_end_4431493968; }
			{
				(_20221_k)++;
				_20021_z+=_19817_h;
				std::tie(_19921_q0,_20121_q1) = std::make_tuple(_20121_q1,static_cast<jule::F64>((_20021_z * _20121_q1) - _19921_q0));
			}
			_iter_next_4431493968:;
			goto _iter_begin_4431493968;
			_iter_end_4431493968:;
			jule::Int _20817_m = _8415_n + _8415_n;
			jule::F64 _20921_t = 0LL;
			jule::Int _21021_i = 2LL * (_8415_n + _20221_k);
			_iter_begin_4431499168:;
			if (!(_21021_i >= _20817_m)) { goto _iter_end_4431499168; }
			{
				_20921_t=static_cast<jule::F64>(jule::div(1LL,jule::div(static_cast<jule::F64>(_21021_i),_8427_x) - _20921_t));
			}
			_iter_next_4431499168:;
			_21021_i-=2LL;
			goto _iter_begin_4431499168;
			_iter_end_4431499168:;
			jule::F64 _21421_a = _20921_t;
			_11613_b=1LL;
			jule::F64 _22421_tmp = static_cast<jule::F64>(_8415_n);
			jule::F64 _22517_v = jule::div(2LL,_8427_x);
			_22421_tmp=static_cast<jule::F64>(_22421_tmp * _1a9b7d386_log(static_cast<jule::F64>(_1a9b94d5e_abs(static_cast<jule::F64>(_22517_v * _22421_tmp)))));
			if (_22421_tmp < 709.78271289338397) {
				jule::Int _22825_i = _8415_n - 1LL;
				_iter_begin_4431508688:;
				if (!(_22825_i > 0LL)) { goto _iter_end_4431508688; }
				{
					jule::F64 _23025_di = static_cast<jule::F64>(_22825_i + _22825_i);
					std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23025_di,_8427_x) - _21421_a));
				}
				_iter_next_4431508688:;
				(_22825_i)--;
				goto _iter_begin_4431508688;
				_iter_end_4431508688:;
			} else {
				jule::Int _23425_i = _8415_n - 1LL;
				_iter_begin_4431513760:;
				if (!(_23425_i > 0LL)) { goto _iter_end_4431513760; }
				{
					jule::F64 _23625_di = static_cast<jule::F64>(_23425_i + _23425_i);
					std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23625_di,_8427_x) - _21421_a));
					if (_11613_b > 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
						_21421_a = jule::div(_21421_a,_11613_b);
						_20921_t = jule::div(_20921_t,_11613_b);
						_11613_b=1LL;
					}
				}
				_iter_next_4431513760:;
				(_23425_i)--;
				goto _iter_begin_4431513760;
				_iter_end_4431513760:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(_20921_t * _1a9d0e3c4_j0(_8427_x),_11613_b));
		}
	}
	if (_10913_sign) {
		return static_cast<jule::F64>((-(_11613_b)));
	}
	return _11613_b;
}



inline jule::F64 _1d0751065_yn(jule::Int _26315_n,jule::F64 _26323_x) {
	
	{
		if (!((_26323_x < 0LL) || (_1a9ae7454_is_nan(_26323_x)))) { goto _case_end_4431520896; }
		_case_begin_4431520896:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4431520720;
		_case_end_4431520896:;
		if (!((_1a9ae7454_is_inf(_26323_x,1LL)))) { goto _case_end_4431521024; }
		_case_begin_4431521024:;
		{
			return 0LL;
		}
		goto _match_end_4431520720;
		_case_end_4431521024:;
		_match_end_4431520720:;
	}
	if (_26315_n == 0LL) {
		return static_cast<jule::F64>(_1a9d0e3c4_y0(_26323_x));
	}
	if (_26323_x == 0LL) {
		if ((_26315_n < 0LL) && ((_26315_n & 1LL) == 1LL)) {
			return static_cast<jule::F64>(_1a9ae7454_inf(1LL));
		}
		return static_cast<jule::F64>(_1a9ae7454_inf(-1LL));
	}
	jule::Bool _28213_sign = false;
	if (_26315_n < 0LL) {
		_26315_n=static_cast<jule::Int>((-(_26315_n)));
		if ((_26315_n & 1LL) == 1LL) {
			_28213_sign=true;
		}
	}
	if (_26315_n == 1LL) {
		if (_28213_sign) {
			return static_cast<jule::F64>((-(_1a9bbccaa_y1(_26323_x))));
		}
		return static_cast<jule::F64>(_1a9bbccaa_y1(_26323_x));
	}
	jule::F64 _29513_b = 0LL;
	if (_26323_x >= 5967269506265907200LL) {
		jule::F64 _31017_temp = 0LL;
		jule::F64 _31114_s;
		jule::F64 _31117_c;
		std::tie(_31114_s,_31117_c) = _1a9b368b1_sincos(_26323_x);
		{
			auto _match_expr{ _26315_n & 3LL };
			if (!((0LL) == _match_expr)) { goto _case_end_4431537856; }
			_case_begin_4431537856:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s - _31117_c);
			}
			goto _match_end_4431535712;
			_case_end_4431537856:;
			if (!((1LL) == _match_expr)) { goto _case_end_4431538096; }
			_case_begin_4431538096:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) - _31117_c);
			}
			goto _match_end_4431535712;
			_case_end_4431538096:;
			if (!((2LL) == _match_expr)) { goto _case_end_4431538208; }
			_case_begin_4431538208:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) + _31117_c);
			}
			goto _match_end_4431535712;
			_case_end_4431538208:;
			if (!((3LL) == _match_expr)) { goto _case_end_4431538320; }
			_case_begin_4431538320:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s + _31117_c);
			}
			goto _match_end_4431535712;
			_case_end_4431538320:;
			_match_end_4431535712:;
		}
		_29513_b=static_cast<jule::F64>(jule::div(0.56418958354775628 * _31017_temp,_1d06ec7a3_sqrt(_26323_x)));
	} else {
		jule::F64 _32017_a = _1a9d0e3c4_y0(_26323_x);
		_29513_b=static_cast<jule::F64>(_1a9bbccaa_y1(_26323_x));
		jule::Int _32317_i = 1LL;
		_iter_begin_4431544272:;
		if (!((_32317_i < _26315_n) && (!(_1a9ae7454_is_inf(_29513_b,-1LL))))) { goto _iter_end_4431544272; }
		{
			std::tie(_32017_a,_29513_b) = std::make_tuple(_29513_b,static_cast<jule::F64>((jule::div(static_cast<jule::F64>(_32317_i + _32317_i),_26323_x) * _29513_b) - _32017_a));
		}
		_iter_next_4431544272:;
		(_32317_i)++;
		goto _iter_begin_4431544272;
		_iter_end_4431544272:;
	}
	if (_28213_sign) {
		return static_cast<jule::F64>((-(_29513_b)));
	}
	return _29513_b;
}



inline jule::F64 _1aa13c559_remainder(jule::F64 _6822_x,jule::F64 _6834_y) {
	
	
	{
		if (!((_1a9ae7454_is_nan(_6822_x)) || (_1a9ae7454_is_nan(_6834_y)) || (_1a9ae7454_is_inf(_6822_x,0LL)) || (_6834_y == 0LL))) { goto _case_end_4431552816; }
		_case_begin_4431552816:;
		{
			return static_cast<jule::F64>(_1a9ae7454_nan());
		}
		goto _match_end_4431552528;
		_case_end_4431552816:;
		if (!((_1a9ae7454_is_inf(_6834_y,0LL)))) { goto _case_end_4431552928; }
		_case_begin_4431552928:;
		{
			return _6822_x;
		}
		goto _match_end_4431552528;
		_case_end_4431552928:;
		_match_end_4431552528:;
	}
	jule::Bool _7913_sign = false;
	if (_6822_x < 0LL) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
		_7913_sign=true;
	}
	if (_6834_y < 0LL) {
		_6834_y=static_cast<jule::F64>((-(_6834_y)));
	}
	if (_6822_x == _6834_y) {
		if (_7913_sign) {
			jule::F64 _8917_zero = 0LL;
			return static_cast<jule::F64>((-(_8917_zero)));
		}
		return 0LL;
	}
	if (_6834_y <= 89884656743115785000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
		_6822_x=static_cast<jule::F64>(_1a9a7a65c_mod(_6822_x,static_cast<jule::F64>(_6834_y + _6834_y)));
	}
	if (_6834_y < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044501477170144028) {
		if ((_6822_x + _6822_x) > _6834_y) {
			_6822_x-=_6834_y;
			if ((_6822_x + _6822_x) >= _6834_y) {
				_6822_x-=_6834_y;
			}
		}
	} else {
		jule::F64 _10513_y_half = 0.5 * _6834_y;
		if (_6822_x > _10513_y_half) {
			_6822_x-=_6834_y;
			if (_6822_x >= _10513_y_half) {
				_6822_x-=_6834_y;
			}
		}
	}
	if (_7913_sign) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
	}
	return _6822_x;
}



inline jule::F64 _1aa13c6d0_xatan(jule::F64 _8610_x) {
	
	
	
	
	
	
	
	
	
	
	jule::F64 _9813_z = _8610_x * _8610_x;
	_9813_z=static_cast<jule::F64>(jule::div(_9813_z * ((((((((-0.87506086000319039 * _9813_z) + -16.157537187333652) * _9813_z) + -75.008557923147052) * _9813_z) + -122.886668449013612) * _9813_z) + -64.850219049420247),((((((((_9813_z + 24.858464901423062) * _9813_z) + 165.02700983169885) * _9813_z) + 432.88106049129027) * _9813_z) + 485.3903996359137) * _9813_z) + 194.55065714826139));
	_9813_z=static_cast<jule::F64>((_8610_x * _9813_z) + _8610_x);
	return _9813_z;
}



inline jule::F64 _1aa13c6d0_satan(jule::F64 _10610_x) {
	
	
	if (_10610_x <= 0.66) {
		return static_cast<jule::F64>(_1aa13c6d0_xatan(_10610_x));
	}
	if (_10610_x > 2.4142135623730949) {
		return static_cast<jule::F64>((1.5707963267948966 - _1aa13c6d0_xatan(static_cast<jule::F64>(jule::div(1LL,_10610_x)))) + 0.00000000000000006123233995736766);
	}
	return static_cast<jule::F64>((0.78539816339744828 + _1aa13c6d0_xatan(static_cast<jule::F64>(jule::div(_10610_x - 1LL,_10610_x + 1LL)))) + 0.00000000000000003061616997868383);
}



inline jule::F64 _1aa13c6d0_atan(jule::F64 _12413_x) {
	if (_12413_x == 0LL) {
		return _12413_x;
	}
	if (_12413_x > 0LL) {
		return static_cast<jule::F64>(_1aa13c6d0_satan(_12413_x));
	}
	return static_cast<jule::F64>((-(_1aa13c6d0_satan(static_cast<jule::F64>((-(_12413_x)))))));
}



inline jule::F64 _1aa177de1_asin(jule::F64 _5017_x) {
	if (_5017_x == 0LL) {
		return _5017_x;
	}
	jule::Bool _5413_sign = false;
	if (_5017_x < 0LL) {
		_5017_x=static_cast<jule::F64>((-(_5017_x)));
		_5413_sign=true;
	}
	if (_5017_x > 1LL) {
		return static_cast<jule::F64>(_1a9ae7454_nan());
	}
	jule::F64 _6313_temp = _1d06ec7a3_sqrt(static_cast<jule::F64>(1LL - (_5017_x * _5017_x)));
	if (_5017_x > 0.7) {
		_6313_temp=static_cast<jule::F64>(1.5707963267948966 - _1aa13c6d0_satan(static_cast<jule::F64>(jule::div(_6313_temp,_5017_x))));
	} else {
		_6313_temp=static_cast<jule::F64>(_1aa13c6d0_satan(static_cast<jule::F64>(jule::div(_5017_x,_6313_temp))));
	}
	if (_5413_sign) {
		_6313_temp=static_cast<jule::F64>((-(_6313_temp)));
	}
	return _6313_temp;
}



inline jule::F64 _1aa177de1_acos(jule::F64 _8013_x) {
	return static_cast<jule::F64>(1.5707963267948966 - _1aa177de1_asin(_8013_x));
}



inline jule::F64 _1aa15d47b_asinh(jule::F64 _7018_x) {
	
	
	
	if (_1a9ae7454_is_nan(_7018_x) || _1a9ae7454_is_inf(_7018_x,0LL)) {
		return _7018_x;
	}
	jule::Bool _7913_sign = false;
	if (_7018_x < 0LL) {
		_7018_x=static_cast<jule::F64>((-(_7018_x)));
		_7913_sign=true;
	}
	jule::F64 _8413_temp = 0LL;
	{
		if (!((_7018_x > 268435456LL))) { goto _case_end_4431617504; }
		_case_begin_4431617504:;
		{
			_8413_temp=static_cast<jule::F64>(_1a9b7d386_log(_7018_x) + 0.69314718055994529);
		}
		goto _match_end_4431614224;
		_case_end_4431617504:;
		if (!((_7018_x > 2LL))) { goto _case_end_4431620176; }
		_case_begin_4431620176:;
		{
			_8413_temp=static_cast<jule::F64>(_1a9b7d386_log(static_cast<jule::F64>((2LL * _7018_x) + jule::div(1LL,_1d06ec7a3_sqrt(static_cast<jule::F64>((_7018_x * _7018_x) + 1LL)) + _7018_x))));
		}
		goto _match_end_4431614224;
		_case_end_4431620176:;
		if (!((_7018_x < 0.0000000037252902984619141))) { goto _case_end_4431617696; }
		_case_begin_4431617696:;
		{
			_8413_temp=_7018_x;
		}
		goto _match_end_4431614224;
		_case_end_4431617696:;
		_case_begin_4431616688:;
		{
			_8413_temp=static_cast<jule::F64>(_1a9ec72c3_log1p(static_cast<jule::F64>(_7018_x + jule::div(_7018_x * _7018_x,1LL + _1d06ec7a3_sqrt(static_cast<jule::F64>(1LL + (_7018_x * _7018_x)))))));
		}
		goto _match_end_4431614224;
		_case_end_4431616688:;
		_match_end_4431614224:;
	}
	if (_7913_sign) {
		_8413_temp=static_cast<jule::F64>((-(_8413_temp)));
	}
	return _8413_temp;
}



inline std::tuple<jule::Bool,jule::Int> _1b6bc2720_conv_bool(jule::Str _4118_s) {
	{
		auto _match_expr{ _4118_s };
		if (!((jule::Str("1", 1)) == _match_expr || (jule::Str("t", 1)) == _match_expr || (jule::Str("T", 1)) == _match_expr || (jule::Str("true", 4)) == _match_expr || (jule::Str("TRUE", 4)) == _match_expr || (jule::Str("True", 4)) == _match_expr)) { goto _case_end_4432124928; }
		_case_begin_4432124928:;
		{
			return std::make_tuple(true,0LLU);
		}
		goto _match_end_4432124560;
		_case_end_4432124928:;
		if (!((jule::Str("0", 1)) == _match_expr || (jule::Str("f", 1)) == _match_expr || (jule::Str("F", 1)) == _match_expr || (jule::Str("false", 5)) == _match_expr || (jule::Str("FALSE", 5)) == _match_expr || (jule::Str("False", 5)) == _match_expr)) { goto _case_end_4432125152; }
		_case_begin_4432125152:;
		{
			return std::make_tuple(false,0LLU);
		}
		goto _match_end_4432124560;
		_case_end_4432125152:;
		_match_end_4432124560:;
	}
	return std::make_tuple(false,2LLU);
}



inline jule::Str _1b6bc2720_fmt_bool(jule::Bool _5217_b) {
	if (_5217_b) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1b6c49115_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_1b6c49115_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1b6c49115_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_1b6c49115_FloatInfo* _8413_flt = nullptr;
	{
		auto _match_expr{ _8270_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4432143168; }
		_case_begin_4432143168:;
		{
			_8313_bits=static_cast<jule::U64>(_1a9a223c3_f32_bits(static_cast<jule::F32>(_8234_val)));
			_8413_flt=(&(_1b6c49115_F32_INFO));
		}
		goto _match_end_4432140800;
		_case_end_4432143168:;
		if (!((64LL) == _match_expr)) { goto _case_end_4432142464; }
		_case_begin_4432142464:;
		{
			_8313_bits=static_cast<jule::U64>(_1a9a223c3_f64_bits(_8234_val));
			_8413_flt=(&(_1b6c49115_F64_INFO));
		}
		goto _match_end_4432140800;
		_case_end_4432142464:;
		_case_begin_4432141680:;
		{
			jule::panic(jule::Str("std::conv: illegal bit_size", 27));
		}
		goto _match_end_4432140800;
		_case_end_4432141680:;
		_match_end_4432140800:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & ((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto _match_expr{ _9713_exp };
		if (!(((1LL << _8413_flt->_field_expbits) - 1LL) == _match_expr)) { goto _case_end_4432153120; }
		_case_begin_4432153120:;
		{
			jule::Str _10317_s = jule::Str("", 0);
			{
				if (!((_9813_mant != 0LL))) { goto _case_end_4432159200; }
				_case_begin_4432159200:;
				{
					_10317_s=jule::Str("nan", 3);
				}
				goto _match_end_4432157136;
				_case_end_4432159200:;
				if (!((_969_neg))) { goto _case_end_4432158288; }
				_case_begin_4432158288:;
				{
					_10317_s=jule::Str("-inf", 4);
				}
				goto _match_end_4432157136;
				_case_end_4432158288:;
				_case_begin_4432157264:;
				{
					_10317_s=jule::Str("+inf", 4);
				}
				goto _match_end_4432157136;
				_case_end_4432157264:;
				_match_end_4432157136:;
			}
			return jule::append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
		}
		goto _match_end_4432150832;
		_case_end_4432153120:;
		if (!((0LL) == _match_expr)) { goto _case_end_4432154880; }
		_case_begin_4432154880:;
		{
			(_9713_exp)++;
		}
		goto _match_end_4432150832;
		_case_end_4432154880:;
		_case_begin_4432152064:;
		{
			_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
		}
		goto _match_end_4432150832;
		_case_end_4432152064:;
		_match_end_4432150832:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _1b6c49115_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _1b6c49115_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _1b6c49115_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_1b6c49115_DecimalSlice _13413_digs = _1b6c49115_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		jule::Array<jule::U8,32> _14013_buf = jule::Array<jule::U8,32>({});
		_13413_digs._field_d=_14013_buf.slice(0LL);
		_1a9892d7b_ryu_ftoa_shortest(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4432173536; }
			_case_begin_4432173536:;
			{
				_8259_prec=static_cast<jule::Int>(_1b6c49115_max(static_cast<jule::Int>(_13413_digs._field_nd - 1LL),0LL));
			}
			goto _match_end_4432170928;
			_case_end_4432173536:;
			if (!(('f') == _match_expr)) { goto _case_end_4432173648; }
			_case_begin_4432173648:;
			{
				_8259_prec=static_cast<jule::Int>(_1b6c49115_max(static_cast<jule::Int>(_13413_digs._field_nd - _13413_digs._field_dp),0LL));
			}
			goto _match_end_4432170928;
			_case_end_4432173648:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4432174144; }
			_case_begin_4432174144:;
			{
				_8259_prec=_13413_digs._field_nd;
			}
			goto _match_end_4432170928;
			_case_end_4432174144:;
			_match_end_4432170928:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15517_digits = _8259_prec;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4432181056; }
			_case_begin_4432181056:;
			{
				(_15517_digits)++;
			}
			goto _match_end_4432179360;
			_case_end_4432181056:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4432180544; }
			_case_begin_4432180544:;
			{
				if (_8259_prec == 0LL) {
					_8259_prec=1LL;
				}
				_15517_digits=_8259_prec;
			}
			goto _match_end_4432179360;
			_case_end_4432180544:;
			_case_begin_4432178528:;
			{
				_15517_digits=1LL;
			}
			goto _match_end_4432179360;
			_case_end_4432178528:;
			_match_end_4432179360:;
		}
		jule::Array<jule::U8,24> _16813_buf = jule::Array<jule::U8,24>({});
		if ((_8270_bit_size == 32LL) && (_15517_digits <= 9LL)) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_1a9892d7b_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		} else if (_15517_digits <= 18LL) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_1a9892d7b_ryu_ftoa_fixed64(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _1b6c49115_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _1b6c49115_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1b6c49115_big_ftoa(jule::Slice<jule::U8> _18617_dst,jule::Int _18634_prec,jule::U8 _18645_fmt,jule::Bool _18656_neg,jule::U64 _18713_mant,jule::Int _18724_exp,_1b6c49115_FloatInfo& _18735_flt) {
	_1a99596b2_Decimal _18813_d = _1a99596b2_Decimal();
	_18813_d._method_assign(_18713_mant);
	_18813_d._method_shift(static_cast<jule::Int>(_18724_exp - static_cast<jule::Int>(_18735_flt._field_mantbits)));
	_1b6c49115_DecimalSlice _19113_digs = _1b6c49115_DecimalSlice();
	jule::Bool _1929_shortest = _18634_prec < 0LL;
	if (_1929_shortest) {
		_1b6c49115_round_shortest(_18813_d,_18713_mant,_18724_exp,_18735_flt);
		_19113_digs=_1b6c49115_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4432206512; }
			_case_begin_4432206512:;
			{
				_18634_prec=static_cast<jule::Int>(_19113_digs._field_nd - 1LL);
			}
			goto _match_end_4432205536;
			_case_end_4432206512:;
			if (!(('f') == _match_expr)) { goto _case_end_4432208496; }
			_case_begin_4432208496:;
			{
				_18634_prec=static_cast<jule::Int>(_1b6c49115_max(static_cast<jule::Int>(_19113_digs._field_nd - _19113_digs._field_dp),0LL));
			}
			goto _match_end_4432205536;
			_case_end_4432208496:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4432208608; }
			_case_begin_4432208608:;
			{
				_18634_prec=_19113_digs._field_nd;
			}
			goto _match_end_4432205536;
			_case_end_4432208608:;
			_match_end_4432205536:;
		}
	} else {
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4432213408; }
			_case_begin_4432213408:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18634_prec + 1LL));
			}
			goto _match_end_4432208912;
			_case_end_4432213408:;
			if (!(('f') == _match_expr)) { goto _case_end_4432212448; }
			_case_begin_4432212448:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18813_d._field_dp + _18634_prec));
			}
			goto _match_end_4432208912;
			_case_end_4432212448:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4432210960; }
			_case_begin_4432210960:;
			{
				if (_18634_prec == 0LL) {
					_18634_prec=1LL;
				}
				_18813_d._method_round(_18634_prec);
			}
			goto _match_end_4432208912;
			_case_end_4432210960:;
			_match_end_4432208912:;
		}
		_19113_digs=_1b6c49115_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
	}
	return _1b6c49115_fmt_digits(_18617_dst,_1929_shortest,_18656_neg,_19113_digs,_18634_prec,_18645_fmt);
}



inline jule::Slice<jule::U8> _1b6c49115_fmt_digits(jule::Slice<jule::U8> _22319_dst,jule::Bool _22332_shortest,jule::Bool _22348_neg,_1b6c49115_DecimalSlice _22413_digs,jule::Int _22437_prec,jule::U8 _22448_fmt) {
	{
		auto _match_expr{ _22448_fmt };
		if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4432225376; }
		_case_begin_4432225376:;
		{
			return _1b6c49115_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec,_22448_fmt);
		}
		goto _match_end_4432224896;
		_case_end_4432225376:;
		if (!(('f') == _match_expr)) { goto _case_end_4432225488; }
		_case_begin_4432225488:;
		{
			return _1b6c49115_fmt_f(_22319_dst,_22348_neg,_22413_digs,_22437_prec);
		}
		goto _match_end_4432224896;
		_case_end_4432225488:;
		if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4432225600; }
		_case_begin_4432225600:;
		{
			jule::Int _23217_eprec = _22437_prec;
			if ((_23217_eprec > _22413_digs._field_nd) && (_22413_digs._field_nd >= _22413_digs._field_dp)) {
				_23217_eprec=_22413_digs._field_nd;
			}
			if (_22332_shortest) {
				_23217_eprec=6LL;
			}
			jule::Int _24213_exp = _22413_digs._field_dp - 1LL;
			if ((_24213_exp < -4LL) || (_24213_exp >= _23217_eprec)) {
				if (_22437_prec > _22413_digs._field_nd) {
					_22437_prec=_22413_digs._field_nd;
				}
				return _1b6c49115_fmt_e(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_22437_prec - 1LL),static_cast<jule::U8>((_22448_fmt + 'e') - 'g'));
			}
			if (_22437_prec > _22413_digs._field_dp) {
				_22437_prec=_22413_digs._field_nd;
			}
			return _1b6c49115_fmt_f(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_1b6c49115_max(static_cast<jule::Int>(_22437_prec - _22413_digs._field_dp),0LL)));
		}
		goto _match_end_4432224896;
		_case_end_4432225600:;
		_match_end_4432224896:;
	}
	return jule::append(_22319_dst,jule::Slice<jule::U8>({'%',_22448_fmt}));
}



inline void _1b6c49115_round_shortest(_1a99596b2_Decimal& _26124_d,jule::U64 _26136_mant,jule::Int _26147_exp,_1b6c49115_FloatInfo& _26158_flt) {
	if (_26136_mant == 0LL) {
		_26124_d._field_nd=0LL;
		return;
	}
	jule::Int _2829_minexp = _26158_flt._field_bias + 1LL;
	if ((_26147_exp > _2829_minexp) && ((332LL * (_26124_d._field_dp - _26124_d._field_nd)) >= (100LL * (_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits))))) {
		return;
	}
	_1a99596b2_Decimal _29113_upper = _1a99596b2_Decimal();
	_29113_upper._method_assign(static_cast<jule::U64>((_26136_mant * 2LL) + 1LL));
	_29113_upper._method_shift(static_cast<jule::Int>((_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::U64 _30113_mantlo = 0LLU;
	jule::Int _30213_explo = 0LL;
	if ((_26136_mant > (1LL << _26158_flt._field_mantbits)) || (_26147_exp == _2829_minexp)) {
		_30113_mantlo=static_cast<jule::U64>(_26136_mant - 1LL);
		_30213_explo=_26147_exp;
	} else {
		_30113_mantlo=static_cast<jule::U64>((_26136_mant * 2LL) - 1LL);
		_30213_explo=static_cast<jule::Int>(_26147_exp - 1LL);
	}
	_1a99596b2_Decimal _31013_lower = _1a99596b2_Decimal();
	_31013_lower._method_assign(static_cast<jule::U64>((_30113_mantlo * 2LL) + 1LL));
	_31013_lower._method_shift(static_cast<jule::Int>((_30213_explo - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::Bool _3179_inclusive = jule::mod(_26136_mant,2LL) == 0LL;
	jule::U8 _33013_upperdelta = 0LLU;
	jule::Int _33413_ui = 0LL;
	_iter_begin_4432265136:;
	{
		jule::Int _33913_mi = (_33413_ui - _29113_upper._field_dp) + _26124_d._field_dp;
		if (_33913_mi >= _26124_d._field_nd) {
			goto _iter_end_4432265136;
		}
		jule::Int _34313_li = (_33413_ui - _29113_upper._field_dp) + _31013_lower._field_dp;
		jule::U8 _34417_l = static_cast<jule::U8>(48LLU);
		if ((_34313_li >= 0LL) && (_34313_li < _31013_lower._field_nd)) {
			_34417_l=_31013_lower._field_d[static_cast<jule::Int>(_34313_li)];
		}
		jule::U8 _34817_m = static_cast<jule::U8>(48LLU);
		if (_33913_mi >= 0LL) {
			_34817_m=_26124_d._field_d[static_cast<jule::Int>(_33913_mi)];
		}
		jule::U8 _35217_u = static_cast<jule::U8>(48LLU);
		if (_33413_ui < _29113_upper._field_nd) {
			_35217_u=_29113_upper._field_d[static_cast<jule::Int>(_33413_ui)];
		}
		jule::Bool _36013_okdown = (_34417_l != _34817_m) || (_3179_inclusive && ((_34313_li + 1LL) == _31013_lower._field_nd));
		{
			if (!(((_33013_upperdelta == 0LL) && ((_34817_m + 1LL) < _35217_u)))) { goto _case_end_4432281472; }
			_case_begin_4432281472:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_4432280912;
			_case_end_4432281472:;
			if (!(((_33013_upperdelta == 0LL) && (_34817_m != _35217_u)))) { goto _case_end_4432281584; }
			_case_begin_4432281584:;
			{
				_33013_upperdelta=1LL;
			}
			goto _match_end_4432280912;
			_case_end_4432281584:;
			if (!(((_33013_upperdelta == 1LL) && ((_34817_m != '9') || (_35217_u != '0'))))) { goto _case_end_4432282048; }
			_case_begin_4432282048:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_4432280912;
			_case_end_4432282048:;
			_match_end_4432280912:;
		}
		jule::Bool _38113_okup = (_33013_upperdelta > 0LL) && ((_3179_inclusive || (_33013_upperdelta > 1LL)) || ((_33413_ui + 1LL) < _29113_upper._field_nd));
		{
			if (!((_36013_okdown && _38113_okup))) { goto _case_end_4432287872; }
			_case_begin_4432287872:;
			{
				_26124_d._method_round(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_4432287376;
			_case_end_4432287872:;
			if (!((_36013_okdown))) { goto _case_end_4432287984; }
			_case_begin_4432287984:;
			{
				_26124_d._method_round_down(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_4432287376;
			_case_end_4432287984:;
			if (!((_38113_okup))) { goto _case_end_4432288096; }
			_case_begin_4432288096:;
			{
				_26124_d._method_round_up(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_4432287376;
			_case_end_4432288096:;
			_match_end_4432287376:;
		}
	}
	_iter_next_4432265136:;
	(_33413_ui)++;
	goto _iter_begin_4432265136;
	_iter_end_4432265136:;
}



inline jule::Slice<jule::U8> _1b6c49115_fmt_e(jule::Slice<jule::U8> _40014_dst,jule::Bool _40027_neg,_1b6c49115_DecimalSlice _40038_d,jule::Int _40055_prec,jule::U8 _40066_fmt) {
	if (_40027_neg) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'-'}));
	}
	jule::U8 _40713_ch = '0';
	if (_40038_d._field_nd != 0LL) {
		_40713_ch=_40038_d._field_d[0LL];
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	if (_40055_prec > 0LL) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _41617_i = 1LL;
		jule::Int _41713_m = _1b6c49115_min(_40038_d._field_nd,static_cast<jule::Int>(_40055_prec + 1LL));
		if (_41617_i < _41713_m) {
			_40014_dst=jule::append(_40014_dst,_40038_d._field_d.slice(static_cast<jule::Int>(_41617_i),static_cast<jule::Int>(_41713_m)));
			_41617_i=_41713_m;
		}
		_iter_begin_4432310384:;
		if (!(_41617_i <= _40055_prec)) { goto _iter_end_4432310384; }
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_4432310384:;
		(_41617_i)++;
		goto _iter_begin_4432310384;
		_iter_end_4432310384:;
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40066_fmt}));
	jule::Int _42913_exp = _40038_d._field_dp - 1LL;
	if (_40038_d._field_nd == 0LL) {
		_42913_exp=0LL;
	}
	if (_42913_exp < 0LL) {
		_40713_ch='-';
		_42913_exp=static_cast<jule::Int>((-(_42913_exp)));
	} else {
		_40713_ch='+';
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	{
		if (!((_42913_exp < 10LL))) { goto _case_end_4432315776; }
		_case_begin_4432315776:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0',static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp) + '0')}));
		}
		goto _match_end_4432307280;
		_case_end_4432315776:;
		if (!((_42913_exp < 100LL))) { goto _case_end_4432315888; }
		_case_begin_4432315888:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4432307280;
		_case_end_4432315888:;
		_case_begin_4432313712:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,100LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_42913_exp,10LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4432307280;
		_case_end_4432313712:;
		_match_end_4432307280:;
	}
	return _40014_dst;
}



inline jule::Slice<jule::U8> _1b6c49115_fmt_f(jule::Slice<jule::U8> _45514_dst,jule::Bool _45527_neg,_1b6c49115_DecimalSlice _45538_d,jule::Int _45555_prec) {
	if (_45527_neg) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'-'}));
	}
	if (_45538_d._field_dp > 0LL) {
		jule::Int _46317_m = _1b6c49115_min(_45538_d._field_nd,_45538_d._field_dp);
		_45514_dst=jule::append(_45514_dst,_45538_d._field_d.slice(0LL,static_cast<jule::Int>(_46317_m)));
		_iter_begin_4432348992:;
		if (!(_46317_m < _45538_d._field_dp)) { goto _iter_end_4432348992; }
		{
			_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_4432348992:;
		(_46317_m)++;
		goto _iter_begin_4432348992;
		_iter_end_4432348992:;
	} else {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
	}
	if (_45555_prec > 0LL) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _47417_i = 0LL;
		_iter_begin_4432329408:;
		if (!(_47417_i < _45555_prec)) { goto _iter_end_4432329408; }
		{
			jule::U8 _47621_ch = static_cast<jule::U8>(48LLU);
			jule::Int _47717_j = _45538_d._field_dp + _47417_i;
			if ((0LL <= _47717_j) && (_47717_j < _45538_d._field_nd)) {
				_47621_ch=_45538_d._field_d[static_cast<jule::Int>(_47717_j)];
			}
			_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({_47621_ch}));
		}
		_iter_next_4432329408:;
		(_47417_i)++;
		goto _iter_begin_4432329408;
		_iter_end_4432329408:;
	}
	return _45514_dst;
}



inline jule::Slice<jule::U8> _1b6c49115_fmt_b(jule::Slice<jule::U8> _48814_dst,jule::Bool _48827_neg,jule::U64 _48838_mant,jule::Int _48853_exp,_1b6c49115_FloatInfo& _48864_flt) {
	if (_48827_neg) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'-'}));
	}
	std::tie(_48814_dst,std::ignore) = _1a99c0d11_fmt_bits(_48814_dst,_48838_mant,10LL,false,true);
	_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'p'}));
	_48853_exp-=static_cast<jule::Int>(_48864_flt._field_mantbits);
	if (_48853_exp >= 0LL) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'+'}));
	}
	std::tie(_48814_dst,std::ignore) = _1a99c0d11_fmt_bits(_48814_dst,static_cast<jule::U64>(_48853_exp),10LL,_48853_exp < 0LL,true);
	return _48814_dst;
}



inline jule::Slice<jule::U8> _1b6c49115_fmt_x(jule::Slice<jule::U8> _51014_dst,jule::Int _51027_prec,jule::U8 _51038_fmt,jule::Bool _51049_neg,jule::U64 _51113_mant,jule::Int _51128_exp,_1b6c49115_FloatInfo& _51139_flt) {
	if (_51113_mant == 0LL) {
		_51128_exp=0LL;
	}
	_51113_mant<<=static_cast<jule::Uint>(60LL - _51139_flt._field_mantbits);
	_iter_begin_4432372160:;
	if (!((_51113_mant != 0LL) && ((_51113_mant & 1152921504606846976LL) == 0LL))) { goto _iter_end_4432372160; }
	{
		_51113_mant<<=1LL;
		(_51128_exp)--;
	}
	_iter_next_4432372160:;
	goto _iter_begin_4432372160;
	_iter_end_4432372160:;
	if ((_51027_prec >= 0LL) && (_51027_prec < 15LL)) {
		jule::Uint _52513_shift = static_cast<jule::Uint>(_51027_prec * 4LL);
		jule::U64 _52613_extra = (_51113_mant << _52513_shift) & 1152921504606846976LL;
		_51113_mant>>=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_52613_extra | (_51113_mant & 1LL)) > 576460752303423488LL) {
			(_51113_mant)++;
		}
		_51113_mant<<=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_51113_mant & 2305843009213693952LL) != 0LL) {
			_51113_mant>>=1LL;
			(_51128_exp)++;
		}
	}
	jule::Str _53913_hex = jule::Str("0123456789abcdef", 16);
	if (_51038_fmt == 'X') {
		_53913_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_51049_neg) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'-'}));
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'0',_51038_fmt,static_cast<jule::U8>('0' + static_cast<jule::U8>((_51113_mant >> 60LL) & 1LL))}));
	_51113_mant<<=4LL;
	if ((_51027_prec < 0LL) && (_51113_mant != 0LL)) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		_iter_begin_4432385696:;
		if (!(_51113_mant != 0LL)) { goto _iter_end_4432385696; }
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_4432385696:;
		goto _iter_begin_4432385696;
		_iter_end_4432385696:;
	} else if (_51027_prec > 0LL) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _56017_i = 0LL;
		_iter_begin_4432386432:;
		if (!(_56017_i < _51027_prec)) { goto _iter_end_4432386432; }
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_4432386432:;
		(_56017_i)++;
		goto _iter_begin_4432386432;
		_iter_end_4432386432:;
	}
	jule::U8 _56813_ch = static_cast<jule::U8>(80LLU);
	if (_51038_fmt == _1a8943c85_lower(_51038_fmt)) {
		_56813_ch='p';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	if (_51128_exp < 0LL) {
		_56813_ch='-';
		_51128_exp=static_cast<jule::Int>((-(_51128_exp)));
	} else {
		_56813_ch='+';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	{
		if (!((_51128_exp < 100LL))) { goto _case_end_4432400128; }
		_case_begin_4432400128:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4432398352;
		_case_end_4432400128:;
		if (!((_51128_exp < 1000LL))) { goto _case_end_4432401056; }
		_case_begin_4432401056:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,100LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4432398352;
		_case_end_4432401056:;
		_case_begin_4432382688:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,1000LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_51128_exp,100LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4432398352;
		_case_end_4432382688:;
		_match_end_4432398352:;
	}
	return _51014_dst;
}



inline jule::Int _1b6c49115_min(jule::Int _5938_a,jule::Int _59316_b) {
	if (_5938_a < _59316_b) {
		return _5938_a;
	}
	return _59316_b;
}



inline jule::Int _1b6c49115_max(jule::Int _6008_a,jule::Int _60016_b) {
	if (_6008_a > _60016_b) {
		return _6008_a;
	}
	return _60016_b;
}



inline jule::U8 _1a8943c85_lower(jule::U8 _4910_c) {
	return static_cast<jule::U8>(_4910_c | 32LL);
}



inline std::tuple<jule::U64,jule::Int> _1a8943c85_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str("", 0)) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		if (!(((2LL <= _5435_base) && (_5435_base <= 36LL)))) { goto _case_end_4432422480; }
		goto _match_end_4432418528;
		_case_end_4432422480:;
		if (!((_5435_base == 0LL))) { goto _case_end_4432421488; }
		_case_begin_4432421488:;
		{
			_5435_base=10LL;
			if (_5423_s[0LL] == '0') {
				{
					if (!(((_5423_s.len() >= 3LL) && (_1a8943c85_lower(_5423_s[1LL]) == 'b')))) { goto _case_end_4432426272; }
					_case_begin_4432426272:;
					{
						_5435_base=2LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4432425248;
					_case_end_4432426272:;
					if (!(((_5423_s.len() >= 3LL) && (_1a8943c85_lower(_5423_s[1LL]) == 'o')))) { goto _case_end_4432426448; }
					_case_begin_4432426448:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4432425248;
					_case_end_4432426448:;
					if (!(((_5423_s.len() >= 3LL) && (_1a8943c85_lower(_5423_s[1LL]) == 'x')))) { goto _case_end_4432427408; }
					_case_begin_4432427408:;
					{
						_5435_base=16LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4432425248;
					_case_end_4432427408:;
					_case_begin_4432425440:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(1LL);
					}
					goto _match_end_4432425248;
					_case_end_4432425440:;
					_match_end_4432425248:;
				}
			}
		}
		goto _match_end_4432418528;
		_case_end_4432421488:;
		_case_begin_4432418624:;
		{
			return std::make_tuple(0LL,3LLU);
		}
		goto _match_end_4432418528;
		_case_end_4432418624:;
		_match_end_4432418528:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LL;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto _match_expr{ _5435_base };
		if (!((10LL) == _match_expr)) { goto _case_end_4432436368; }
		_case_begin_4432436368:;
		{
			_9313_cutoff=1844674407370955264LL;
		}
		goto _match_end_4432424208;
		_case_end_4432436368:;
		if (!((16LL) == _match_expr)) { goto _case_end_4432438160; }
		_case_begin_4432438160:;
		{
			_9313_cutoff=1152921504606846976LL;
		}
		goto _match_end_4432424208;
		_case_end_4432438160:;
		_case_begin_4432435472:;
		{
			_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
		}
		goto _match_end_4432424208;
		_case_end_4432435472:;
		_match_end_4432424208:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto _match_expr{ _5450_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4432436144; }
		_case_begin_4432436144:;
		{
			_10013_max_val=4294967295LLU;
		}
		goto _match_end_4432439984;
		_case_end_4432436144:;
		if (!((64LL) == _match_expr)) { goto _case_end_4432440528; }
		_case_begin_4432440528:;
		{
			_10013_max_val=jule::MAX_U64;
		}
		goto _match_end_4432439984;
		_case_end_4432440528:;
		_match_end_4432439984:;
	}
	jule::U64 _11213_n = 0LLU;
	{
		auto _range_expr = _5423_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::U8 _1a8943c85_c = *_range_begin;
			_iter_begin_4432443184:;
			{
				jule::U8 _11417_d = 0LLU;
				{
					if (!((('0' <= _1a8943c85_c) && (_1a8943c85_c <= '9')))) { goto _case_end_4432448256; }
					_case_begin_4432448256:;
					{
						_11417_d=static_cast<jule::U8>(_1a8943c85_c - '0');
					}
					goto _match_end_4432446080;
					_case_end_4432448256:;
					if (!((('a' <= _1a8943c85_lower(_1a8943c85_c)) && (_1a8943c85_lower(_1a8943c85_c) <= 'z')))) { goto _case_end_4432447264; }
					_case_begin_4432447264:;
					{
						_11417_d=static_cast<jule::U8>((_1a8943c85_lower(_1a8943c85_c) - 'a') + 10LL);
					}
					goto _match_end_4432446080;
					_case_end_4432447264:;
					_case_begin_4432446208:;
					{
						return std::make_tuple(0LL,2LLU);
					}
					goto _match_end_4432446080;
					_case_end_4432446208:;
					_match_end_4432446080:;
				}
				if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
					return std::make_tuple(0LL,2LLU);
				}
				if (_11213_n >= _9313_cutoff) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
				if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_4432443184:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8943c85_c = *_range_begin; goto _iter_begin_4432443184; }
			_iter_end_4432443184:;
		}
	}
	return std::make_tuple(_11213_n,0LLU);
}



inline std::tuple<jule::I64,jule::Int> _1a8943c85_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::I64 _16562_i = jule::I64();
	jule::Int _16570_err = 0LLU;
	if (_16522_s == jule::Str("", 0)) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[0LL] == '+') {
		_16522_s=_16522_s.slice(1LL);
	} else if (_16522_s[0LL] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(1LL);
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _1a8943c85_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		_16570_err = _16570_err;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LL;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>((-(static_cast<jule::I64>(_1909_cutoff))));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



inline std::tuple<jule::F64,jule::Bool> _1a89462e8_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(9223372036854775808LLU));
		}
		_4158_f = _4158_f;
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _1aa1ac035_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _1aa1ac035_mul64(_4123_man,_1a89462e8_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][1LL]);
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _1aa1ac035_mul64(_4123_man,_1a89462e8_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>(_8013_ret_mantissa & 1LL);
	_8013_ret_mantissa>>=1LL;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_1a9a223c3_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1a89462e8_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1a9a223c3_f32_from_bits(2147483648LLU));
		}
		_11058_f = _11058_f;
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _1aa1ac035_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _1aa1ac035_mul64(_11023_man,_1a89462e8_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][1LL]);
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _1aa1ac035_mul64(_11023_man,_1a89462e8_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>(_15513_ret_mantissa & 1LL);
	_15513_ret_mantissa>>=1LL;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = static_cast<jule::F32>(_1a9a223c3_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _1a8977813_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	_iter_begin_4432559888:;
	if (!(_5013_i < _4613_n)) { goto _iter_end_4432559888; }
	{
		jule::U8 _5217_c = _4534_s[static_cast<jule::Int>(_5013_i)];
		if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
			_5217_c+=32LL;
		}
		if (_5217_c != _4542_prefix[static_cast<jule::Int>(_5013_i)]) {
			return _5013_i;
		}
	}
	_iter_next_4432559888:;
	(_5013_i)++;
	goto _iter_begin_4432559888;
	_iter_end_4432559888:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _1a8977813_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::Int _6834_n = jule::Int();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s == jule::Str("", 0)) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto _match_expr{ _6816_s[0LL] };
		if (!(('+') == _match_expr || ('-') == _match_expr)) { goto _case_end_4432574160; }
		_case_begin_4432574160:;
		{
			if (_6816_s[0LL] == '-') {
				_7213_sign=-1LL;
			}
			_7313_nsign=1LL;
			_6816_s=_6816_s.slice(1LL);
			goto _case_begin_4432574448;
		}
		goto _match_end_4432573904;
		_case_end_4432574160:;
		if (!(('i') == _match_expr || ('I') == _match_expr)) { goto _case_end_4432574448; }
		_case_begin_4432574448:;
		{
			jule::Int _8317_case_n = _1a8977813_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
			if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
				_8317_case_n=3LL;
			}
			if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
				_6826_f = static_cast<jule::F64>(_1a9ae7454_inf(_7213_sign));
				_6834_n = static_cast<jule::Int>(_7313_nsign + _6834_n);
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4432573904;
		_case_end_4432574448:;
		if (!(('n') == _match_expr || ('N') == _match_expr)) { goto _case_end_4432574816; }
		_case_begin_4432574816:;
		{
			if (_1a8977813_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
				_6826_f = static_cast<jule::F64>(_1a9ae7454_nan());
				_6834_n = 3LL;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4432573904;
		_case_end_4432574816:;
		_match_end_4432573904:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1a8977813_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::Int _10340_exp = jule::Int();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '+'))) { goto _case_end_4432592000; }
		_case_begin_4432592000:;
		{
			(_10449_i)++;
		}
		goto _match_end_4432591856;
		_case_end_4432592000:;
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '-'))) { goto _case_end_4432592224; }
		_case_begin_4432592224:;
		{
			_10350_neg=true;
			(_10449_i)++;
		}
		goto _match_end_4432591856;
		_case_end_4432592224:;
		_match_end_4432591856:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[static_cast<jule::Int>(_10449_i)] == '0')) && (_1a8943c85_lower(_10315_s[static_cast<jule::Int>(_10449_i + 1LL)]) == 'x')) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	_iter_begin_4432607296:;
	if (!(_10449_i < _10315_s.len())) { goto _iter_end_4432607296; }
	{
		jule::U8 _13413_c = _10315_s[static_cast<jule::Int>(_10449_i)];
		{
			if (!((_13413_c == '.'))) { goto _case_end_4432611232; }
			_case_begin_4432611232:;
			{
				if (_12813_sawdot) {
					goto _julec_label_loop_end;
				}
				_12813_sawdot=true;
				_13213_dp=_13013_nd;
				goto _iter_next_4432607296;
			}
			goto _match_end_4432610384;
			_case_end_4432611232:;
			if (!((('0' <= _13413_c) && (_13413_c <= '9')))) { goto _case_end_4432611360; }
			_case_begin_4432611360:;
			{
				_12913_sawdigits=true;
				if ((_13413_c == '0') && (_13013_nd == 0LL)) {
					(_13213_dp)--;
					goto _iter_next_4432607296;
				}
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=_11813_base;
					_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
					(_13113_nd_mant)++;
				} else if (_13413_c != '0') {
					_10425_trunc=true;
				}
				goto _iter_next_4432607296;
			}
			goto _match_end_4432610384;
			_case_end_4432611360:;
			if (!((((_11813_base == 16LL) && ('a' <= _1a8943c85_lower(_13413_c))) && (_1a8943c85_lower(_13413_c) <= 'f')))) { goto _case_end_4432611488; }
			_case_begin_4432611488:;
			{
				_12913_sawdigits=true;
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=16LL;
					_10325_mantissa+=static_cast<jule::U64>((_1a8943c85_lower(_13413_c) - 'a') + 10LL);
					(_13113_nd_mant)++;
				} else {
					_10425_trunc=true;
				}
				goto _iter_next_4432607296;
			}
			goto _match_end_4432610384;
			_case_end_4432611488:;
			_match_end_4432610384:;
		}
		goto _iter_end_4432607296;
	}
	_iter_next_4432607296:;
	(_10449_i)++;
	goto _iter_begin_4432607296;
	_iter_end_4432607296:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_1a8943c85_lower(_10315_s[static_cast<jule::Int>(_10449_i)]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[static_cast<jule::Int>(_10449_i)] == '+') {
			(_10449_i)++;
		} else if (_10315_s[static_cast<jule::Int>(_10449_i)] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[static_cast<jule::Int>(_10449_i)] < '0')) || (_10315_s[static_cast<jule::Int>(_10449_i)] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		_iter_begin_4432636016:;
		if (!((_10449_i < _10315_s.len()) && (('0' <= _10315_s[static_cast<jule::Int>(_10449_i)]) && (_10315_s[static_cast<jule::Int>(_10449_i)] <= '9')))) { goto _iter_end_4432636016; }
		{
			if (_20517_e < 10000LL) {
				_20517_e=static_cast<jule::Int>(((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[static_cast<jule::Int>(_10449_i)])) - '0');
			}
		}
		_iter_next_4432636016:;
		(_10449_i)++;
		goto _iter_begin_4432636016;
		_iter_end_4432636016:;
		_13213_dp+=static_cast<jule::Int>(_20517_e * _19517_esign);
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=static_cast<jule::Int>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1a8977813_atof64_exact(jule::U64 _43317_mantissa,jule::Int _43336_exp,jule::Bool _43346_neg) {
	jule::F64 _43359_f = jule::F64();
	jule::Bool _43367_ok = jule::Bool();
	if ((_43317_mantissa >> _1b6c49115_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_43359_f,_43367_ok);
	}
	_43359_f=static_cast<jule::F64>(_43317_mantissa);
	if (_43346_neg) {
		_43359_f=static_cast<jule::F64>((-(_43359_f)));
	}
	{
		if (!((_43336_exp == 0LL))) { goto _case_end_4432651200; }
		_case_begin_4432651200:;
		{
			_43359_f = _43359_f;
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4432651888;
		_case_end_4432651200:;
		if (!(((_43336_exp > 0LL) && (_43336_exp <= 37LL)))) { goto _case_end_4432651312; }
		_case_begin_4432651312:;
		{
			if (_43336_exp > 22LL) {
				_43359_f*=_1a8977813_F64_POW10[static_cast<jule::Int>(_43336_exp - 22LL)];
				_43336_exp=22LL;
			}
			if ((_43359_f > 1000000000000000LL) || (_43359_f < -1000000000000000LL)) {
				return std::make_tuple(_43359_f,_43367_ok);
			}
			_43359_f = static_cast<jule::F64>(_43359_f * _1a8977813_F64_POW10[static_cast<jule::Int>(_43336_exp)]);
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4432651888;
		_case_end_4432651312:;
		if (!(((_43336_exp < 0LL) && (_43336_exp >= -22LL)))) { goto _case_end_4432651440; }
		_case_begin_4432651440:;
		{
			_43359_f = static_cast<jule::F64>(jule::div(_43359_f,_1a8977813_F64_POW10[static_cast<jule::Int>((-(_43336_exp)))]));
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4432651888;
		_case_end_4432651440:;
		_match_end_4432651888:;
	}
	return std::make_tuple(_43359_f,_43367_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1a8977813_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::F64 _47258_f = jule::F64();
	jule::Bool _47266_ok = jule::Bool();
	if ((_47216_mantissa >> _1b6c49115_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (!((_47235_exp == 0LL))) { goto _case_end_4432667568; }
		_case_begin_4432667568:;
		{
			_47258_f = _47258_f;
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4432668256;
		_case_end_4432667568:;
		if (!(((_47235_exp > 0LL) && (_47235_exp <= 37LL)))) { goto _case_end_4432667680; }
		_case_begin_4432667680:;
		{
			if (_47235_exp > 22LL) {
				_47258_f*=_1a8977813_F64_POW10[static_cast<jule::Int>(_47235_exp - 22LL)];
				_47235_exp=22LL;
			}
			if ((_47258_f > 1000000000000000LL) || (_47258_f < -1000000000000000LL)) {
				return std::make_tuple(_47258_f,_47266_ok);
			}
			_47258_f = static_cast<jule::F64>(_47258_f * _1a8977813_F64_POW10[static_cast<jule::Int>(_47235_exp)]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4432668256;
		_case_end_4432667680:;
		if (!(((_47235_exp < 0LL) && (_47235_exp >= -22LL)))) { goto _case_end_4432667792; }
		_case_begin_4432667792:;
		{
			_47258_f = static_cast<jule::F64>(jule::div(_47258_f,_1a8977813_F64_POW10[static_cast<jule::Int>((-(_47235_exp)))]));
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4432668256;
		_case_end_4432667792:;
		_match_end_4432668256:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1a8977813_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::F32 _50662_f = jule::F32();
	jule::Bool _50670_ok = jule::Bool();
	if ((_50616_mantissa >> _1b6c49115_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (!((_50635_exp == 0LL))) { goto _case_end_4432683808; }
		_case_begin_4432683808:;
		{
			_50662_f = _50662_f;
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4432684496;
		_case_end_4432683808:;
		if (!(((_50635_exp > 0LL) && (_50635_exp <= 17LL)))) { goto _case_end_4432683920; }
		_case_begin_4432683920:;
		{
			if (_50635_exp > 10LL) {
				_50662_f*=_1a8977813_F32_POW10[static_cast<jule::Int>(_50635_exp - 10LL)];
				_50635_exp=10LL;
			}
			if ((_50662_f > 10000000LL) || (_50662_f < -10000000LL)) {
				return std::make_tuple(_50662_f,_50670_ok);
			}
			_50662_f = static_cast<jule::F32>(_50662_f * _1a8977813_F32_POW10[static_cast<jule::Int>(_50635_exp)]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4432684496;
		_case_end_4432683920:;
		if (!(((_50635_exp < 0LL) && (_50635_exp >= -10LL)))) { goto _case_end_4432684048; }
		_case_begin_4432684048:;
		{
			_50662_f = static_cast<jule::F32>(jule::div(_50662_f,_1a8977813_F32_POW10[static_cast<jule::Int>((-(_50635_exp)))]));
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4432684496;
		_case_end_4432684048:;
		_match_end_4432684496:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



inline std::tuple<jule::F64,jule::Int> _1a8977813_atof_hex(jule::Str _54213_s,_1b6c49115_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = ((1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	_iter_begin_4432700304:;
	if (!((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL))) { goto _iter_end_4432700304; }
	{
		_54242_mantissa<<=1LL;
		(_54261_exp)--;
	}
	_iter_next_4432700304:;
	goto _iter_begin_4432700304;
	_iter_end_4432700304:;
	if (_54282_trunc) {
		_54242_mantissa|=1LL;
	}
	_iter_begin_4432705360:;
	if (!((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL)) { goto _iter_end_4432705360; }
	{
		_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
		(_54261_exp)++;
	}
	_iter_next_4432705360:;
	goto _iter_begin_4432705360;
	_iter_end_4432705360:;
	_iter_begin_4432704768:;
	if (!((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL)))) { goto _iter_end_4432704768; }
	{
		_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
		(_54261_exp)++;
	}
	_iter_next_4432704768:;
	goto _iter_begin_4432704768;
	_iter_end_4432704768:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LL;
	_57413_round|=static_cast<jule::U64>(_54242_mantissa & 1LL);
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LL;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=static_cast<jule::Int>(_5439_max_exp + 1LL);
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & ((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Int>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _1b6c49115_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_1a9a223c3_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_1a9a223c3_f64_from_bits(_59613_bits)),_58913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _1a8977813_atof32(jule::Str _60711_s) {
	jule::F32 _60721_f = jule::F32();
	jule::Int _60733_n = jule::Int();
	jule::Int _60745_err = 0LLU;
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _1a8977813_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60733_n = _60919__n;
			_60745_err = 0LLU;
			return std::make_tuple(_60721_f,_60733_n,_60745_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _1a8977813_read_float(_60711_s);
	_60733_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60733_n = _60733_n;
		_60745_err = 2LLU;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0LL;
		std::tie(_62217_ff,_60745_err) = _1a8977813_atof_hex(_60711_s.slice(0LL,static_cast<jule::Int>(_60733_n)),_1b6c49115_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		_60733_n = _60733_n;
		_60745_err = _60745_err;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _1a8977813_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _1a89462e8_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
			jule::F32 _64421_f_up = 0LL;
			std::tie(_64421_f_up,_61550_ok) = _1a89462e8_eisel_lemire32(static_cast<jule::U64>(_61510_mantissa + 1LL),_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
		}
	}
	_1a99596b2_Decimal _65313_d = _1a99596b2_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,static_cast<jule::Int>(_60733_n)))))) {
		_60721_f = 0LL;
		_60733_n = _60733_n;
		_60745_err = 2LLU;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_1b6c49115_F32_INFO);
	_60721_f=static_cast<jule::F32>(_1a9a223c3_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60745_err=1LLU;
	}
	_60721_f = _60721_f;
	_60733_n = _60733_n;
	_60745_err = _60745_err;
	return std::make_tuple(_60721_f,_60733_n,_60745_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1a8977813_atof64(jule::Str _66511_s) {
	jule::F64 _66525_f = jule::F64();
	jule::Int _66537_n = jule::Int();
	jule::Int _66545_err = 0LLU;
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _1a8977813_special(_66511_s);
		if (_66723_ok) {
			_66525_f = _66714_val;
			_66537_n = _66719__n;
			_66545_err = 0LLU;
			return std::make_tuple(_66525_f,_66537_n,_66545_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _1a8977813_read_float(_66511_s);
	_66537_n=_67342__n;
	if ((!(_67350_ok))) {
		_66525_f = 0LL;
		_66537_n = _66537_n;
		_66545_err = 2LLU;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	if (_67337_hex) {
		std::tie(_66525_f,_66545_err) = _1a8977813_atof_hex(_66511_s.slice(0LL,static_cast<jule::Int>(_66537_n)),_1b6c49115_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		_66525_f = _66525_f;
		_66537_n = _66537_n;
		_66545_err = _66545_err;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66525_f,_67350_ok) = _1a8977813_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
		}
		std::tie(_66525_f,_67350_ok) = _1a89462e8_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
			jule::F64 _70121_f_up = 0LL;
			std::tie(_70121_f_up,_67350_ok) = _1a89462e8_eisel_lemire64(static_cast<jule::U64>(_67310_mantissa + 1LL),_67320_exp,_67325_neg);
			if (_67350_ok && (_66525_f == _70121_f_up)) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
		}
	}
	_1a99596b2_Decimal _71013_d = _1a99596b2_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,static_cast<jule::Int>(_66537_n)))))) {
		_66525_f = 0LL;
		_66537_n = _66537_n;
		_66545_err = 2LLU;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_1b6c49115_F64_INFO);
	_66525_f=static_cast<jule::F64>(_1a9a223c3_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66545_err=1LLU;
	}
	_66525_f = _66525_f;
	_66537_n = _66537_n;
	_66545_err = _66545_err;
	return std::make_tuple(_66525_f,_66537_n,_66545_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1a8977813_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _1a8977813_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	jule::F64 _72810_f;
	jule::Int _72813_n;
	jule::Int _72816_err;
	std::tie(_72810_f,_72813_n,_72816_err) = _1a8977813_atof64(_72223_s);
	return std::make_tuple(_72810_f,_72813_n,_72816_err);
}



inline std::tuple<jule::F64,jule::Int> _1a8977813_parse_float(jule::Str _75620_s,jule::Int _75628_bit_size) {
	jule::F64 _75710_f;
	jule::Int _75713_n;
	jule::Int _75716_err;
	std::tie(_75710_f,_75713_n,_75716_err) = _1a8977813_parse_float_prefix(_75620_s,_75628_bit_size);
	if ((_75713_n != _75620_s.len()) && ((_75716_err == 0LLU) || (_75716_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75710_f,_75716_err);
}



inline void _1a9892d7b_ryu_ftoa_fixed32(_1b6c49115_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42));
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37));
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _1aa1ac035_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_1a9892d7b_mul_by_log2_log10(static_cast<jule::Int>(_6213_e2 + 24LL)))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1a9892d7b_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49));
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _1a9892d7b_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_1a9892d7b_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1a9892d7b_ryu_ftoa_fixed64(_1b6c49115_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38));
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _1aa1ac035_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::Uint>(55LL - _1349_b));
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_1a9892d7b_mul_by_log2_log10(static_cast<jule::Int>(_13313_e2 + 54LL)))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _1a9892d7b_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _1a9892d7b_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_1a9892d7b_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _1a9892d7b_format_decimal(_1b6c49115_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _1a9892d7b_U64_POW10[static_cast<jule::Int>(_20490_prec)];
	jule::Int _20613_trimmed = 0LL;
	_iter_begin_4432888000:;
	if (!(_20445_m >= _2059_max)) { goto _iter_end_4432888000; }
	{
		jule::U64 _20814_a = jule::div(_20445_m,10LL);
		jule::U64 _20817_b = jule::mod(_20445_m,10LL);
		std::tie(_20814_a,_20817_b) = std::make_tuple(jule::div(_20445_m,10LL),jule::mod(_20445_m,10LL));
		_20445_m=_20814_a;
		(_20613_trimmed)++;
		if (_20817_b > 5LL) {
			_20474_round_up=true;
		} else if (_20817_b < 5LL) {
			_20474_round_up=false;
		} else {
			_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
		}
		if (_20817_b != 0LL) {
			_20457_trunc=true;
		}
	}
	_iter_next_4432888000:;
	goto _iter_begin_4432888000;
	_iter_end_4432888000:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m = jule::div(_20445_m,10LL);
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	_iter_begin_4432898176:;
	if (!(_23513_v >= 100LL)) { goto _iter_end_4432898176; }
	{
		jule::U64 _23717_v1 = 0LLU;
		jule::U64 _23817_v2 = 0LLU;
		if ((_23513_v >> 32LL) == 0LL) {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(jule::mod(static_cast<jule::U32>(_23513_v),100LL)));
		} else {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(_23513_v,100LL)),static_cast<jule::U64>(jule::mod(_23513_v,100LL)));
		}
		_23313_n-=2LL;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
		_23513_v=_23717_v1;
	}
	_iter_next_4432898176:;
	goto _iter_begin_4432898176;
	_iter_end_4432898176:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	_iter_begin_4432917360:;
	if (!(_20424_d._field_d[static_cast<jule::Int>(_20424_d._field_nd - 1LL)] == '0')) { goto _iter_end_4432917360; }
	{
		(_20424_d._field_nd)--;
		(_20613_trimmed)++;
	}
	_iter_next_4432917360:;
	goto _iter_begin_4432917360;
	_iter_end_4432917360:;
	_20424_d._field_dp=static_cast<jule::Int>(_20424_d._field_nd + _20613_trimmed);
}



inline void _1a9892d7b_ryu_ftoa_shortest(_1b6c49115_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_1b6c49115_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_1aa1ac035_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_1a9892d7b_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _1a9892d7b_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_1a9892d7b_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _1a9892d7b_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _1b6c49115_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _1a9892d7b_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _1a9892d7b_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _1a9892d7b_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _1a9892d7b_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _1a9892d7b_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _1a9892d7b_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_1a9892d7b_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_1a9892d7b_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_1a9892d7b_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_1a9892d7b_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::Int _1a9892d7b_mul_by_log2_log10(jule::Int _38322_x) {
	return static_cast<jule::Int>((_38322_x * 78913LL) >> 18LL);
}



inline jule::Int _1a9892d7b_mul_by_log10_log2(jule::Int _39322_x) {
	return static_cast<jule::Int>((_39322_x * 108853LL) >> 15LL);
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1a9892d7b_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_1b6c49115_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::Int _40274_e2 = jule::Int();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 1LL);
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 2LL);
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _1a9892d7b_ryu_digits(_1b6c49115_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _1a9892d7b_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _1a9892d7b_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _1a9892d7b_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_1a9892d7b_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_1a9892d7b_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		_iter_begin_4433017968:;
		if (!(_43517_v > 0LL)) { goto _iter_end_4433017968; }
		{
			jule::U32 _43718_v1 = jule::div(_43517_v,10LL);
			jule::U32 _43722_v2 = jule::mod(_43517_v,10LL);
			std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::div(_43517_v,10LL),jule::mod(_43517_v,10LL));
			_43517_v=_43718_v1;
			(_43417_n)--;
			_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
		}
		_iter_next_4433017968:;
		goto _iter_begin_4433017968;
		_iter_end_4433017968:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_1a9892d7b_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::Int>(_41520_d._field_nd + 8LL));
	}
	_iter_begin_4433019904:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[static_cast<jule::Int>(_41520_d._field_nd - 1LL)] == '0'))) { goto _iter_end_4433019904; }
	{
		(_41520_d._field_nd)--;
	}
	_iter_next_4433019904:;
	goto _iter_begin_4433019904;
	_iter_end_4433019904:;
	_iter_begin_4433017664:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0'))) { goto _iter_end_4433017664; }
	{
		(_41520_d._field_nd)--;
		(_41520_d._field_dp)--;
		_41520_d._field_d=_41520_d._field_d.slice(1LL);
	}
	_iter_next_4433017664:;
	goto _iter_begin_4433017664;
	_iter_end_4433017664:;
}



inline void _1a9892d7b_ryu_digits32(_1b6c49115_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=static_cast<jule::Int>(_46166_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	_iter_begin_4433037520:;
	if (!(_46121_upper > 0LL)) { goto _iter_end_4433037520; }
	{
		jule::U32 _47613_l = jule::div(_46043_lower + 9LL,10LL);
		jule::U32 _47718_c = jule::div(_46059_central,10LL);
		jule::U32 _47725_cdigit = jule::mod(_46059_central,10LL);
		std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::div(_46059_central,10LL),jule::mod(_46059_central,10LL));
		jule::U32 _47813_u = jule::div(_46121_upper,10LL);
		if (_47613_l > _47813_u) {
			goto _iter_end_4433037520;
		}
		if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
			(_47718_c)++;
			_47725_cdigit=0LL;
			_46151_cup=false;
		}
		(_46613_trimmed)++;
		_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
		_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
		std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
	}
	_iter_next_4433037520:;
	goto _iter_begin_4433037520;
	_iter_end_4433037520:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	_iter_begin_4433041504:;
	if (!(_51813_n > _46022_d._field_nd)) { goto _iter_end_4433041504; }
	{
		jule::U32 _52014_v1 = jule::div(_51713_v,100LL);
		jule::U32 _52018_v2 = jule::mod(_51713_v,100LL);
		std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::div(_51713_v,100LL),jule::mod(_51713_v,100LL));
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
		_46022_d._field_d[static_cast<jule::Int>(_51813_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
		_51813_n-=2LL;
		_51713_v=_52014_v1;
	}
	_iter_next_4433041504:;
	goto _iter_begin_4433041504;
	_iter_end_4433041504:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=static_cast<jule::Int>(_46166_endindex + 1LL);
	_46022_d._field_dp=static_cast<jule::Int>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _1a9892d7b_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::Int _54262_resE = jule::Int();
	jule::Bool _54273_exact = jule::Bool();
	if (_54241_q == 0LL) {
		_54251_resM = static_cast<jule::U32>(_54220_m << 6LL);
		_54262_resE = static_cast<jule::Int>(_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44));
	}
	jule::U64 _55113_pow = _1a89462e8_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_54241_q - -348LL)][1LL];
	if (_54241_q < 0LL) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _1aa1ac035_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_1a9892d7b_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _1a9892d7b_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::Int _57063_resE = jule::Int();
	jule::Bool _57074_exact = jule::Bool();
	if (_57042_q == 0LL) {
		_57052_resM = static_cast<jule::U64>(_57021_m << 8LL);
		_57063_resE = static_cast<jule::Int>(_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45));
	}
	jule::Array<jule::U64,2> _57913_pow = _1a89462e8_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_57042_q - -348LL)];
	if (_57042_q < 0LL) {
		_57913_pow[0LL]+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((_1a9892d7b_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _1aa1ac035_mul64(_57021_m,_57913_pow[0LL]);
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _1aa1ac035_mul64(_57021_m,_57913_pow[1LL]);
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _1aa1ac035_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>((_58814_h1 << 9LL) | (_58910_mid >> 55LL));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _1a9892d7b_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	_iter_begin_4433106272:;
	if (!(_59813_i < _59434_k)) { goto _iter_end_4433106272; }
	{
		if (jule::mod(_59426_m,5LL) != 0LL) {
			return false;
		}
		_59426_m = jule::div(_59426_m,5LL);
	}
	_iter_next_4433106272:;
	(_59813_i)++;
	goto _iter_begin_4433106272;
	_iter_end_4433106272:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1a9892d7b_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::div(_61014_x,1000000000LL)),static_cast<jule::U32>(jule::mod(_61014_x,1000000000LL)));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _1aa1ac035_mul64(static_cast<jule::U64>(_61014_x >> 1LL),9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1000000000LL)));
}



inline jule::Int _1a99596b2_digit_zero(jule::Slice<jule::U8> _26519_dst) {
	{
		auto _range_expr = _26519_dst;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a99596b2_i = 0;
			_iter_begin_4433114624:;
			{
				_26519_dst[static_cast<jule::Int>(_1a99596b2_i)]='0';
			}
			_iter_next_4433114624:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a99596b2_i; goto _iter_begin_4433114624; }
			_iter_end_4433114624:;
		}
	}
	return static_cast<jule::I64>(_26519_dst.len());
}



inline void _1a99596b2_trim(_1a99596b2_Decimal& _27514_a) {
	_iter_begin_4433118464:;
	if (!((_27514_a._field_nd > 0LL) && (_27514_a._field_d[static_cast<jule::Int>(_27514_a._field_nd - 1LL)] == '0'))) { goto _iter_end_4433118464; }
	{
		(_27514_a._field_nd)--;
	}
	_iter_next_4433118464:;
	goto _iter_begin_4433118464;
	_iter_end_4433118464:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



inline void _1a99596b2_right_shift(_1a99596b2_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	_iter_begin_4433128224:;
	if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_4433128224; }
	{
		if (_28613_r >= _28521_a._field_nd) {
			if (_29013_n == 0LL) {
				_28521_a._field_nd=0LL;
				return;
			}
			_iter_begin_4433131536:;
			if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_4433131536; }
			{
				_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
				(_28613_r)++;
			}
			_iter_next_4433131536:;
			goto _iter_begin_4433131536;
			_iter_end_4433131536:;
			goto _iter_end_4433128224;
		}
		jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _30413_c) - '0');
	}
	_iter_next_4433128224:;
	(_28613_r)++;
	goto _iter_begin_4433128224;
	_iter_end_4433128224:;
	_28521_a._field_dp-=static_cast<jule::Int>(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	_iter_begin_4433137936:;
	if (!(_28613_r < _28521_a._field_nd)) { goto _iter_end_4433137936; }
	{
		jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		jule::Uint _31413_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_31413_dig + '0');
		(_28713_w)++;
		_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _31313_c) - '0');
	}
	_iter_next_4433137936:;
	(_28613_r)++;
	goto _iter_begin_4433137936;
	_iter_end_4433137936:;
	_iter_begin_4433143584:;
	if (!(_29013_n > 0LL)) { goto _iter_end_4433143584; }
	{
		jule::Uint _32313_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		if (_28713_w < 800LL) {
			_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_32313_dig + '0');
			(_28713_w)++;
		} else if (_32313_dig > 0LL) {
			_28521_a._field_trunc=true;
		}
		_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
	}
	_iter_next_4433143584:;
	goto _iter_begin_4433143584;
	_iter_end_4433143584:;
	_28521_a._field_nd=_28713_w;
	_1a99596b2_trim(_28521_a);
}



inline jule::Bool _1a99596b2_prefix_is_less_than(jule::Slice<jule::U8> _33924_b,jule::Str _33935_s) {
	jule::Int _34013_i = 0LL;
	_iter_begin_4433152256:;
	if (!(_34013_i < _33935_s.len())) { goto _iter_end_4433152256; }
	{
		if (_34013_i >= _33924_b.len()) {
			return true;
		}
		if (_33924_b[static_cast<jule::Int>(_34013_i)] != _33935_s[static_cast<jule::Int>(_34013_i)]) {
			return _33924_b[static_cast<jule::Int>(_34013_i)] < _33935_s[static_cast<jule::Int>(_34013_i)];
		}
	}
	_iter_next_4433152256:;
	(_34013_i)++;
	goto _iter_begin_4433152256;
	_iter_end_4433152256:;
	return false;
}



inline void _1a99596b2_left_shift(_1a99596b2_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _1a99596b2_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_1a99596b2_prefix_is_less_than(_35320_a._field_d.slice(0LL,static_cast<jule::Int>(_35320_a._field_nd)),_1a99596b2_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	_iter_begin_4433166368:;
	if (!(_35913_r >= 0LL)) { goto _iter_end_4433166368; }
	{
		_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[static_cast<jule::Int>(_35913_r)]) - '0') << _35332_k);
		jule::Uint _36713_quo = jule::div(_36313_n,10LL);
		jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_36813_rem + '0');
		} else if (_36813_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_36713_quo;
	}
	_iter_next_4433166368:;
	(_35913_r)--;
	goto _iter_begin_4433166368;
	_iter_end_4433166368:;
	_iter_begin_4433174512:;
	if (!(_36313_n > 0LL)) { goto _iter_end_4433174512; }
	{
		jule::Uint _38013_quo = jule::div(_36313_n,10LL);
		jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_38113_rem + '0');
		} else if (_38113_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_38013_quo;
	}
	_iter_next_4433174512:;
	goto _iter_begin_4433174512;
	_iter_end_4433174512:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_1a99596b2_trim(_35320_a);
}



inline jule::Bool _1a99596b2_should_round_up(_1a99596b2_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[static_cast<jule::Int>(_40033_nd)] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (jule::mod(_40021_a._field_d[static_cast<jule::Int>(_40033_nd - 1LL)] - '0',2LL) != 0LL);
	}
	return _40021_a._field_d[static_cast<jule::Int>(_40033_nd)] >= '5';
}



inline jule::Str _1a99c0d11_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _1a99c0d11_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _1a99c0d11_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _1a99c0d11_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _1a99c0d11_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _1a99c0d11_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



inline jule::Str _1a99c0d11_itoa(jule::Int _8213_i) {
	return _1a99c0d11_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



inline jule::Str _1a99c0d11_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(static_cast<jule::Int>(_8510_i),static_cast<jule::Int>(_8510_i + 1LL));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(static_cast<jule::Int>(_8510_i * 2LL),static_cast<jule::Int>((_8510_i * 2LL) + 2LL));
}



inline jule::Bool _1a99c0d11_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1a99c0d11_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	jule::Str _9992_s = jule::Str();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23));
	}
	jule::Array<jule::U8,65> _10513_a = jule::Array<jule::U8,65>({});
	jule::Int _10613_i = 65LL;
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			_iter_begin_4433222240:;
			if (!(_9934_u >= 1000000000LL)) { goto _iter_end_4433222240; }
			{
				jule::U64 _12521_q = jule::div(_9934_u,1000000000LL);
				jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1000000000LL));
				jule::Int _12725_j = 4LL;
				_iter_begin_4433224304:;
				if (!(_12725_j > 0LL)) { goto _iter_end_4433224304; }
				{
					jule::Uint _12925_is = jule::mod(_12625_us,100LL) * 2LL;
					_12625_us = jule::div(_12625_us,100LL);
					_10613_i-=2LL;
					_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
					_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
				}
				_iter_next_4433224304:;
				(_12725_j)--;
				goto _iter_begin_4433224304;
				_iter_end_4433224304:;
				(_10613_i)--;
				_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
				_9934_u=_12521_q;
			}
			_iter_next_4433222240:;
			goto _iter_begin_4433222240;
			_iter_end_4433222240:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		_iter_begin_4433227488:;
		if (!(_14717_us >= 100LL)) { goto _iter_end_4433227488; }
		{
			jule::Uint _14917_is = jule::mod(_14717_us,100LL) * 2LL;
			_14717_us = jule::div(_14717_us,100LL);
			_10613_i-=2LL;
			_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
			_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
		}
		_iter_next_4433227488:;
		goto _iter_begin_4433227488;
		_iter_end_4433227488:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_1a99c0d11_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_1aa1ac035_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		_iter_begin_4433249232:;
		if (!(_9934_u >= _17313_b)) { goto _iter_end_4433249232; }
		{
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
			_9934_u>>=_17213_shift;
		}
		_iter_next_4433249232:;
		goto _iter_begin_4433249232;
		_iter_end_4433249232:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		_iter_begin_4433259664:;
		if (!(_9934_u >= _18513_b)) { goto _iter_end_4433259664; }
		{
			(_10613_i)--;
			jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
			_9934_u=_19117_q;
		}
		_iter_next_4433259664:;
		goto _iter_begin_4433259664;
		_iter_end_4433259664:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]='-';
	}
	if (_9964_append_) {
		_9981_d=jule::append(_9917_dst,_10513_a.slice(static_cast<jule::Int>(_10613_i)));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(static_cast<jule::Int>(_10613_i)));
	return std::make_tuple(_9981_d,_9992_s);
}



inline void _1aa179596_exit(jule::Int _1213_code) {
	_1b6bcde9b_exit(_1213_code);
}



inline jule::Str _1aa179596_executable(void) {
	return jule::executable();
}



inline jule::Bool _1d068267d_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[static_cast<jule::Int>(_2627_p.len() - 1LL)] == '>');
}



inline jule::Bool _1d068267d_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto _range_expr = _1d068267d_CPP_HEADER_EXTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d068267d_valid_ext = *_range_begin;
			_iter_begin_4433590016:;
			{
				if (_3128_ext == _1d068267d_valid_ext) {
					return true;
				}
			}
			_iter_next_4433590016:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d068267d_valid_ext = *_range_begin; goto _iter_begin_4433590016; }
			_iter_end_4433590016:;
		}
	}
	return false;
}



inline jule::Bool _1d068267d_is_valid_cpp_ext(jule::Str _4225_ext) {
	{
		auto _range_expr = _1d068267d_CPP_EXTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d068267d_e = *_range_begin;
			_iter_begin_4433587360:;
			{
				if (_4225_ext == _1d068267d_e) {
					return true;
				}
			}
			_iter_next_4433587360:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d068267d_e = *_range_begin; goto _iter_begin_4433587360; }
			_iter_end_4433587360:;
		}
	}
	{
		auto _range_expr = _1d068267d_OBJECTIVE_CPP_EXTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d068267d_e = *_range_begin;
			_iter_begin_4433597504:;
			{
				if (_4225_ext == _1d068267d_e) {
					return true;
				}
			}
			_iter_next_4433597504:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d068267d_e = *_range_begin; goto _iter_begin_4433597504; }
			_iter_end_4433597504:;
		}
	}
	return false;
}



inline std::tuple<jule::Bool,jule::Bool> _1d0682903_check_os(jule::Str _713_arg) {
	jule::Bool _725_ok = jule::Bool();
	jule::Bool _735_exist = jule::Bool();
	_725_ok=false;
	_735_exist=true;
	{
		auto _match_expr{ _713_arg };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4433602640; }
		_case_begin_4433602640:;
		{
			_725_ok=_1b6ba767d_is_windows(_1d0595937_OS);
		}
		goto _match_end_4433599232;
		_case_end_4433602640:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4433601776; }
		_case_begin_4433601776:;
		{
			_725_ok=_1b6ba767d_is_darwin(_1d0595937_OS);
		}
		goto _match_end_4433599232;
		_case_end_4433601776:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4433601888; }
		_case_begin_4433601888:;
		{
			_725_ok=_1b6ba767d_is_linux(_1d0595937_OS);
		}
		goto _match_end_4433599232;
		_case_end_4433601888:;
		if (!((jule::Str("unix", 4)) == _match_expr)) { goto _case_end_4433602000; }
		_case_begin_4433602000:;
		{
			_725_ok=_1b6ba767d_is_unix(_1d0595937_OS);
		}
		goto _match_end_4433599232;
		_case_end_4433602000:;
		_case_begin_4433600096:;
		{
			_725_ok=true;
			_735_exist=false;
		}
		goto _match_end_4433599232;
		_case_end_4433600096:;
		_match_end_4433599232:;
	}
	return std::make_tuple(_725_ok,_735_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1d0682903_check_arch(jule::Str _2415_arg) {
	jule::Bool _2427_ok = jule::Bool();
	jule::Bool _2437_exist = jule::Bool();
	_2427_ok=false;
	_2437_exist=true;
	{
		auto _match_expr{ _2415_arg };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4433610064; }
		_case_begin_4433610064:;
		{
			_2427_ok=_1b6ba767d_is_i386(_1d0595937_ARCH);
		}
		goto _match_end_4433608064;
		_case_end_4433610064:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4433609328; }
		_case_begin_4433609328:;
		{
			_2427_ok=_1b6ba767d_is_amd64(_1d0595937_ARCH);
		}
		goto _match_end_4433608064;
		_case_end_4433609328:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4433609440; }
		_case_begin_4433609440:;
		{
			_2427_ok=_1b6ba767d_is_arm64(_1d0595937_ARCH);
		}
		goto _match_end_4433608064;
		_case_end_4433609440:;
		if (!((jule::Str("64bit", 5)) == _match_expr)) { goto _case_end_4433608624; }
		_case_begin_4433608624:;
		{
			_2427_ok=_1b6ba767d_is_64bit(_1d0595937_ARCH);
		}
		goto _match_end_4433608064;
		_case_end_4433608624:;
		if (!((jule::Str("32bit", 5)) == _match_expr)) { goto _case_end_4433608736; }
		_case_begin_4433608736:;
		{
			_2427_ok=_1b6ba767d_is_32bit(_1d0595937_ARCH);
		}
		goto _match_end_4433608064;
		_case_end_4433608736:;
		_case_begin_4433607520:;
		{
			_2427_ok=true;
			_2437_exist=false;
		}
		goto _match_end_4433608064;
		_case_end_4433607520:;
		_match_end_4433608064:;
	}
	return std::make_tuple(_2427_ok,_2437_exist);
}



inline jule::Bool _1d0682903_is_pass_file_annotation(jule::Str _4336_p) {
	_4336_p=_1d05b5e41_base(_4336_p);
	jule::I64 _459_n = _4336_p.len();
	_4336_p=_4336_p.slice(0LL,static_cast<jule::Int>(_459_n - _1d05b5e41_ext(_4336_p).len()));
	jule::Str _5113_a1 = jule::Str("", 0);
	jule::Str _5413_a2 = jule::Str("", 0);
	jule::Int _5713_i = _4336_p.rfind(jule::Str("_", 1));
	if (_5713_i == -1LL) {
		jule::Bool _6018_ok;
		jule::Bool _6026_exist;
		std::tie(_6018_ok,_6026_exist) = _1d0682903_check_os(_4336_p);
		if (_6026_exist) {
			return _6018_ok;
		}
		std::tie(_6018_ok,_6026_exist) = _1d0682903_check_arch(_4336_p);
		return (!(_6026_exist)) || _6018_ok;
	}
	if ((_5713_i + 1LL) >= _459_n) {
		return true;
	}
	_5113_a1=_4336_p.slice(static_cast<jule::Int>(_5713_i + 1LL));
	_4336_p=_4336_p.slice(0LL,static_cast<jule::Int>(_5713_i));
	_5713_i=static_cast<jule::Int>(_4336_p.rfind(jule::Str("_", 1)));
	if (_5713_i != -1LL) {
		_5413_a2=_4336_p.slice(static_cast<jule::Int>(_5713_i + 1LL));
	}
	if (_5413_a2 == jule::Str("", 0)) {
		jule::Bool _8118_ok;
		jule::Bool _8126_exist;
		std::tie(_8118_ok,_8126_exist) = _1d0682903_check_os(_5113_a1);
		if (_8126_exist) {
			return _8118_ok;
		}
		std::tie(_8118_ok,_8126_exist) = _1d0682903_check_arch(_5113_a1);
		return (!(_8126_exist)) || _8118_ok;
	}
	jule::Bool _8914_ok;
	jule::Bool _8922_exist;
	std::tie(_8914_ok,_8922_exist) = _1d0682903_check_arch(_5113_a1);
	if (_8922_exist) {
		if ((!(_8914_ok))) {
			return false;
		}
		jule::Bool _9414_ok;
		jule::Bool _9418_exist;
		std::tie(_9414_ok,_9418_exist) = _1d0682903_check_os(_5413_a2);
		return (!(_9418_exist)) || _9414_ok;
	}
	std::tie(_8914_ok,_8922_exist) = _1d0682903_check_os(_5113_a1);
	return (!(_8922_exist)) || _8914_ok;
}



inline jule::Str _1d068165a_logf(jule::Str _25113_fmt,jule::Slice<jule::Any> _25126_args) {
	return _1d068165a_apply_fmt(_25113_fmt,_25126_args);
}



inline jule::Str _1d068165a_arg_to_str(jule::Any _25515_arg) {
	{
		auto _match_expr{ _25515_arg };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4433644384; }
		_case_begin_4433644384:;
		{
			return _25515_arg.operator jule::Str();
		}
		goto _match_end_4433643504;
		_case_end_4433644384:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_4433644496; }
		_case_begin_4433644496:;
		{
			return static_cast<jule::Str>(_25515_arg.operator jule::U8());
		}
		goto _match_end_4433643504;
		_case_end_4433644496:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_4433644608; }
		_case_begin_4433644608:;
		{
			return static_cast<jule::Str>(_25515_arg.operator jule::I32());
		}
		goto _match_end_4433643504;
		_case_end_4433644608:;
		_case_begin_4433642992:;
		{
			return jule::Str("<fmt?>", 6);
		}
		goto _match_end_4433643504;
		_case_end_4433642992:;
		_match_end_4433643504:;
	}
}



inline jule::Int _1d068165a_find_next_fmt(jule::Str _26418_fmt) {
	{
		auto _range_expr = _26418_fmt;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d068165a_i = 0;
			jule::U8 _1d068165a_b = *_range_begin;
			_iter_begin_4433648944:;
			{
				if (_1d068165a_b == '@') {
					return _1d068165a_i;
				}
			}
			_iter_next_4433648944:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d068165a_i; _1d068165a_b = *_range_begin; goto _iter_begin_4433648944; }
			_iter_end_4433648944:;
		}
	}
	return -1LL;
}



inline jule::Str _1d068165a_apply_fmt(jule::Str _27318_fmt,jule::Slice<jule::Any> _27328_args) {
	jule::Str _27413_s = jule::Str("", 0);
	{
		auto _range_expr = _27328_args;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1d068165a_arg = *_range_begin;
			_iter_begin_4433653856:;
			{
				jule::Int _27713_i = _1d068165a_find_next_fmt(_27318_fmt);
				if (_27713_i == -1LL) {
					goto _iter_end_4433653856;
				}
				_27413_s+=_27318_fmt.slice(0LL,static_cast<jule::Int>(_27713_i));
				_27413_s+=_1d068165a_arg_to_str(_1d068165a_arg);
				_27318_fmt=_27318_fmt.slice(static_cast<jule::Int>(_27713_i + 1LL));
			}
			_iter_next_4433653856:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d068165a_arg = *_range_begin; goto _iter_begin_4433653856; }
			_iter_end_4433653856:;
		}
	}
	_27413_s+=_27318_fmt;
	return _27413_s;
}



inline jule::Bool _1b6b6baa4_is_top_directive(jule::Str _3625_directive) {
	return (_3625_directive == jule::Str("pass", 4)) || (_3625_directive == jule::Str("build", 5));
}



inline jule::Bool _1b6ba767d_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



inline jule::Bool _1b6ba767d_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



inline jule::Bool _1b6ba767d_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



inline jule::Bool _1b6ba767d_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



inline jule::Bool _1b6ba767d_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



inline jule::Bool _1b6ba767d_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



inline jule::Bool _1b6ba767d_is_unix(jule::Str _6316_os) {
	return _1b6ba767d_is_darwin(_6316_os) || _1b6ba767d_is_linux(_6316_os);
}



inline jule::Bool _1b6ba767d_is_32bit(jule::Str _6517_arch) {
	return _1b6ba767d_is_i386(_6517_arch);
}



inline jule::Bool _1b6ba767d_is_64bit(jule::Str _6717_arch) {
	return _1b6ba767d_is_amd64(_6717_arch) || _1b6ba767d_is_arm64(_6717_arch);
}



inline void _1d0595937_exit_err(jule::Str _2513_msg) {
	
	jule::outln(_2513_msg);
	_1aa179596_exit(1LL);
}



inline void _1d0595937_init(void) {
	jule::Str _3313_path = _1aa179596_executable();
	if (_3313_path == jule::Str("", 0)) {
		_1d0595937_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _3810_pwd;
	jule::Int _3815_err;
	std::tie(_3810_pwd,_3815_err) = _1d063b77a_working_dir();
	if (_3815_err != 0LLU) {
		_1d0595937_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
	}
	jule::Str _439_path_exec = _1d05b5e41_dir(_3313_path);
	_3313_path=_1d05b5e41_join(jule::Slice<jule::Str>({_439_path_exec,jule::Str("..", 2)}));
	{
		(*((&(_1d0595937_PATH_WD))))=_3810_pwd;
		(*((&(_1d0595937_PATH_EXEC))))=_439_path_exec;
		(*((&(_1d0595937_PATH_STDLIB))))=_1d05b5e41_join(jule::Slice<jule::Str>({_3313_path,jule::Str("std", 3)}));
		(*((&(_1d0595937_PATH_API))))=_1d05b5e41_join(jule::Slice<jule::Str>({_1d0595937_PATH_EXEC,jule::Str("..", 2)}));
		(*((&(_1d0595937_PATH_API))))=_1d05b5e41_join(jule::Slice<jule::Str>({_1d0595937_PATH_API,jule::Str("api", 3)}));
		(*((&(_1d0595937_PATH_API))))=_1d05b5e41_join(jule::Slice<jule::Str>({_1d0595937_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Bool _1d059d995_is_jule(jule::Str _2316_path) {
	return _1d05b5e41_ext(_2316_path) == jule::Str(".jule", 5);
}



inline jule::Int _1aaed8d3e_get_last_fs_error(void) {
	jule::Int _739_err = _1d0647599_get_last_errno();
	{
		auto _match_expr{ _739_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4433729360; }
		_case_begin_4433729360:;
		{
			return 1LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433729360:;
		if (!((5LL) == _match_expr)) { goto _case_end_4433728960; }
		_case_begin_4433728960:;
		{
			return 2LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433728960:;
		if (!((62LL) == _match_expr)) { goto _case_end_4433729072; }
		_case_begin_4433729072:;
		{
			return 3LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433729072:;
		if (!((63LL) == _match_expr)) { goto _case_end_4433729184; }
		_case_begin_4433729184:;
		{
			return 4LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433729184:;
		if (!((2LL) == _match_expr)) { goto _case_end_4433728240; }
		_case_begin_4433728240:;
		{
			return 5LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433728240:;
		if (!((20LL) == _match_expr)) { goto _case_end_4433728352; }
		_case_begin_4433728352:;
		{
			return 6LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433728352:;
		if (!((84LL) == _match_expr)) { goto _case_end_4433728464; }
		_case_begin_4433728464:;
		{
			return 7LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433728464:;
		if (!((9LL) == _match_expr)) { goto _case_end_4433729568; }
		_case_begin_4433729568:;
		{
			return 8LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433729568:;
		if (!((24LL) == _match_expr)) { goto _case_end_4433729680; }
		_case_begin_4433729680:;
		{
			return 9LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433729680:;
		if (!((23LL) == _match_expr)) { goto _case_end_4433729792; }
		_case_begin_4433729792:;
		{
			return 10LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433729792:;
		if (!((12LL) == _match_expr)) { goto _case_end_4433730528; }
		_case_begin_4433730528:;
		{
			return 11LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433730528:;
		if (!((17LL) == _match_expr)) { goto _case_end_4433730640; }
		_case_begin_4433730640:;
		{
			return 12LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433730640:;
		if (!((4LL) == _match_expr)) { goto _case_end_4433730752; }
		_case_begin_4433730752:;
		{
			return 13LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433730752:;
		if (!((22LL) == _match_expr)) { goto _case_end_4433730864; }
		_case_begin_4433730864:;
		{
			return 14LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433730864:;
		if (!((21LL) == _match_expr)) { goto _case_end_4433730976; }
		_case_begin_4433730976:;
		{
			return 15LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433730976:;
		if (!((98LL) == _match_expr)) { goto _case_end_4433731088; }
		_case_begin_4433731088:;
		{
			return 16LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433731088:;
		if (!((28LL) == _match_expr)) { goto _case_end_4433731200; }
		_case_begin_4433731200:;
		{
			return 17LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433731200:;
		if (!((6LL) == _match_expr)) { goto _case_end_4433731312; }
		_case_begin_4433731312:;
		{
			return 18LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433731312:;
		if (!((30LL) == _match_expr)) { goto _case_end_4433731424; }
		_case_begin_4433731424:;
		{
			return 19LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433731424:;
		if (!((35LL) == _match_expr)) { goto _case_end_4433731536; }
		_case_begin_4433731536:;
		{
			return 20LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433731536:;
		if (!((26LL) == _match_expr || (16LL) == _match_expr)) { goto _case_end_4433731648; }
		_case_begin_4433731648:;
		{
			return 21LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433731648:;
		if (!((27LL) == _match_expr)) { goto _case_end_4433731760; }
		_case_begin_4433731760:;
		{
			return 22LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433731760:;
		if (!((32LL) == _match_expr)) { goto _case_end_4433731872; }
		_case_begin_4433731872:;
		{
			return 23LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433731872:;
		if (!((34LL) == _match_expr)) { goto _case_end_4433731984; }
		_case_begin_4433731984:;
		{
			return 24LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433731984:;
		if (!((29LL) == _match_expr)) { goto _case_end_4433732112; }
		_case_begin_4433732112:;
		{
			return 25LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433732112:;
		if (!((55LL) == _match_expr)) { goto _case_end_4433732240; }
		_case_begin_4433732240:;
		{
			return 26LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433732240:;
		if (!((94LL) == _match_expr)) { goto _case_end_4433732368; }
		_case_begin_4433732368:;
		{
			return 27LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433732368:;
		if (!((66LL) == _match_expr)) { goto _case_end_4433732496; }
		_case_begin_4433732496:;
		{
			return 28LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433732496:;
		_case_begin_4433727792:;
		{
			return 0LLU;
		}
		goto _match_end_4433727456;
		_case_end_4433727792:;
		_match_end_4433727456:;
	}
}



inline std::tuple<jule::Ref<_1ab00383c_File>,jule::Int> _1aaed9548_open(jule::Str _1813_path,jule::Int _1824_flag,jule::Int _1837_mode) {
	jule::Int _199_handle = _1a8908684_open((&(_1813_path[0LL])),static_cast<jule::Int>(_1824_flag),_1837_mode);
	if (_199_handle == -1LL) {
		return std::make_tuple(jule::new_ref<_1ab00383c_File>(),_1aaed8d3e_get_last_fs_error());
	}
	return std::make_tuple(jule::new_struct<_1ab00383c_File>(new( std::nothrow ) _1ab00383c_File(_199_handle)),0LLU);
}



inline jule::Int _1aaed9548_remove_file(jule::Str _3020_path) {
	if (_1a8908684_unlink((&(_3020_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1aaed8d3e_get_last_fs_error();
}



inline std::tuple<jule::Ref<_1ab004a80_Status>,jule::Int> _1aaed9867_stat(jule::Str _1113_path) {
	jule::Ref<_1ab004a80_Status> _1126_s = jule::Ref<_1ab004a80_Status>();
	jule::Int _1138_err = 0LLU;
	struct stat _1213_handle = (struct stat){};
	jule::Int _139_code = _1a8908684_stat((&(_1113_path[0LL])),(&(_1213_handle)));
	if (_139_code != -1LL) {
		_1138_err=0LLU;
		_1126_s=jule::new_struct<_1ab004a80_Status>(new( std::nothrow ) _1ab004a80_Status(static_cast<jule::Uint>(_1213_handle.st_mode),static_cast<jule::Uint>(_1213_handle.st_size)));
	} else {
		_1138_err=_1aaed8d3e_get_last_fs_error();
	}
	return std::make_tuple(_1126_s,_1138_err);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Int> _1ab00383c_read_file(jule::Str _12118_path) {
	jule::Ref<_1ab004a80_Status> _12210_s;
	jule::Int _12217_err;
	std::tie(_12210_s,_12217_err) = _1aaed9867_stat(_12118_path);
	if (_12217_err != 0LLU) {
		return std::make_tuple(nullptr,_12217_err);
	}
	if ((!(_12210_s->_method_is_reg()))) {
		return std::make_tuple(nullptr,15LLU);
	}
	if (_12210_s->_field_size == 0LL) {
		return std::make_tuple(jule::Slice<jule::U8>::alloc(0LL),0LLU);
	}
	jule::Ref<_1ab00383c_File> _13514_f;
	std::tie(_13514_f,_12217_err) = _1aaed9548_open(_12118_path,0LL,0LL);
	if (_12217_err != 0LLU) {
		return std::make_tuple(nullptr,_12217_err);
	}
	__JULE_DEFER({
		_13514_f->_method_close();
	});
	jule::Slice<jule::U8> _14113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_12210_s->_field_size));
	jule::Int _14210_n;
	std::tie(_14210_n,_12217_err) = _13514_f->_method_read(_14113_buff);
	if (_12217_err != 0LLU) {
		return std::make_tuple(nullptr,_12217_err);
	}
	return std::make_tuple(_14113_buff.slice(0LL,static_cast<jule::Int>(_14210_n)),0LLU);
}



inline std::tuple<jule::Slice<jule::Ref<_1aaee94d1_DirEntry>>,jule::Int> _1ab03d6bd_read_dir(jule::Str _2117_path) {
	jule::Slice<jule::Ref<_1aaee94d1_DirEntry>> _2130_dirents = jule::Slice<jule::Ref<_1aaee94d1_DirEntry>>();
	jule::Int _2152_err = 0LLU;
	DIR* _2213_dir = _1a8908684_opendir((&(_2117_path[0LL])));
	if (_2213_dir == nullptr) {
		_2152_err=_1aaed8d3e_get_last_fs_error();
		return std::make_tuple(_2130_dirents,_2152_err);
	}
	_iter_begin_4433790944:;
	{
		struct dirent* _2813_dirent = _1a8908684_readdir(_2213_dir);
		if (_2813_dirent == nullptr) {
			goto _iter_end_4433790944;
		}
		jule::Str _3213_name = _1a8908684_byte_ptr_to_str(((jule::U8*)(_2813_dirent->d_name)));
		jule::Ref<_1ab004a80_Status> _3314_stat;
		jule::Int _3320_serr;
		std::tie(_3314_stat,_3320_serr) = _1aaed9867_stat(_1d05b5e41_join(jule::Slice<jule::Str>({_2117_path,_3213_name})));
		if (_3320_serr != 0LLU) {
			_2152_err=_3320_serr;
			_2130_dirents=nullptr;
			goto _iter_end_4433790944;
		}
		_2130_dirents=jule::append(_2130_dirents,jule::Slice<jule::Ref<_1aaee94d1_DirEntry>>({jule::new_struct<_1aaee94d1_DirEntry>(new( std::nothrow ) _1aaee94d1_DirEntry(_3213_name,_3314_stat))}));
	}
	_iter_next_4433790944:;
	goto _iter_begin_4433790944;
	_iter_end_4433790944:;
	_1a8908684_closedir(_2213_dir);
	return std::make_tuple(_2130_dirents,_2152_err);
}



inline jule::Int _1ab03d6bd_create_dir(jule::Str _5119_path) {
	if (_1a8908684_mkdir((&(_5119_path[0LL])),448LL) == 0LL) {
		return 0LLU;
	}
	return _1aaed8d3e_get_last_fs_error();
}



inline jule::Int _1ab03d6bd_remove_dir(jule::Str _6419_path) {
	if (_1a8908684_rmdir((&(_6419_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1aaed8d3e_get_last_fs_error();
}



inline jule::Bool _1ab211a6c_is_graphic(jule::I32 _5619_r) {
	if (static_cast<jule::U32>(_5619_r) <= 255LL) {
		return (_1ab04b4cd__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_5619_r))] & 144LL) != 0LL;
	}
	return _1ab211a6c_is_in(_5619_r,_1ab211a6c_GRAPHIC_RANGES);
}



inline jule::Bool _1ab211a6c_is_in(jule::I32 _6614_r,jule::Slice<jule::Ref<_1ab2133dc_RangeTable>> _6623_ranges) {
	{
		auto _range_expr = _6623_ranges;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab2133dc_RangeTable> _1ab211a6c_inside = *_range_begin;
			_iter_begin_4438396880:;
			{
				if (_1ab2133dc_is(_1ab211a6c_inside,_6614_r)) {
					return true;
				}
			}
			_iter_next_4438396880:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab211a6c_inside = *_range_begin; goto _iter_begin_4438396880; }
			_iter_end_4438396880:;
		}
	}
	return false;
}



inline jule::Bool _1ab211a6c_is_letter(jule::I32 _7618_r) {
	if (static_cast<jule::U32>(_7618_r) <= 255LL) {
		return (_1ab04b4cd__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_7618_r))] & 96LL) != 0LL;
	}
	return _1ab2133dc_is_excluding_latin(_1ab04b4cd_LETTER,_7618_r);
}



inline jule::Bool _1ab211a6c_is_number(jule::I32 _8418_r) {
	if (static_cast<jule::U32>(_8418_r) <= 255LL) {
		return (_1ab04b4cd__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_8418_r))] & 4LL) != 0LL;
	}
	return _1ab2133dc_is_excluding_latin(_1ab04b4cd_NUMBER,_8418_r);
}



inline jule::Bool _1ab211a6c_is_punct(jule::I32 _9217_r) {
	if (static_cast<jule::U32>(_9217_r) <= 255LL) {
		return (_1ab04b4cd__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_9217_r))] & 2LL) != 0LL;
	}
	return _1ab2133dc_is(_1ab04b4cd_PUNCT,_9217_r);
}



inline jule::Bool _1ab211a6c_is_space(jule::I32 _10717_r) {
	if (static_cast<jule::U32>(_10717_r) <= 255LL) {
		{
			auto _match_expr{ _10717_r };
			if (!(('\t') == _match_expr || ('\n') == _match_expr || ('\v') == _match_expr || ('\f') == _match_expr || ('\r') == _match_expr || (' ') == _match_expr || (133LL) == _match_expr || (160LL) == _match_expr)) { goto _case_end_4438411696; }
			_case_begin_4438411696:;
			{
				return true;
			}
			goto _match_end_4438411200;
			_case_end_4438411696:;
			_match_end_4438411200:;
		}
		return false;
	}
	return _1ab2133dc_is_excluding_latin(_1ab04b4cd_WHITE_SPACE,_10717_r);
}



inline jule::Bool _1abe359e3_is_digit(jule::I32 _3917_r) {
	if (_3917_r <= 255LL) {
		return ('0' <= _3917_r) && (_3917_r <= '9');
	}
	return _1ab2133dc_is_excluding_latin(_1ab04b4cd_DIGIT,_3917_r);
}



inline std::tuple<jule::I32,jule::Bool> _1ab2133dc___to(jule::Int _1259_case,jule::I32 _12520_r,jule::Slice<_1ab2133dc_CaseRange> _12529_case_range) {
	jule::I32 _12556_mapped_rune = jule::I32();
	jule::Bool _12575_found_mapping = jule::Bool();
	if ((_1259_case < 0LL) || (3LL <= _1259_case)) {
		_12556_mapped_rune = 65533LL;
		_12575_found_mapping = false;
		return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
	}
	jule::Int _13113_lo = 0LL;
	jule::I64 _13213_hi = _12529_case_range.len();
	_iter_begin_4438419520:;
	if (!(_13113_lo < _13213_hi)) { goto _iter_end_4438419520; }
	{
		jule::Int _13413_m = _13113_lo + jule::div(_13213_hi - _13113_lo,2LL);
		_1ab2133dc_CaseRange _13513_cr = _12529_case_range[static_cast<jule::Int>(_13413_m)];
		if ((static_cast<jule::I32>(_13513_cr._field_lo) <= _12520_r) && (_12520_r <= static_cast<jule::I32>(_13513_cr._field_hi))) {
			jule::I32 _13717_delta = _13513_cr._field_delta[static_cast<jule::Int>(_1259_case)];
			if (_13717_delta > 1114111LL) {
				_12556_mapped_rune = static_cast<jule::I32>(static_cast<jule::I32>(_13513_cr._field_lo) + (((_12520_r - static_cast<jule::I32>(_13513_cr._field_lo)) & -2LL) | static_cast<jule::I32>(_1259_case & 1LL)));
				_12575_found_mapping = true;
				return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
			}
			_12556_mapped_rune = static_cast<jule::I32>(_12520_r + _13717_delta);
			_12575_found_mapping = true;
			return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
		}
		if (_12520_r < static_cast<jule::I32>(_13513_cr._field_lo)) {
			_13213_hi=_13413_m;
		} else {
			_13113_lo=static_cast<jule::Int>(_13413_m + 1LL);
		}
	}
	_iter_next_4438419520:;
	goto _iter_begin_4438419520;
	_iter_end_4438419520:;
	_12556_mapped_rune = _12520_r;
	_12575_found_mapping = false;
	return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
}



inline jule::I32 _1ab2133dc_to(jule::Int _16311_case,jule::I32 _16326_r) {
	std::tie(_16326_r,std::ignore) = _1ab2133dc___to(_16311_case,_16326_r,_1ab04b4cd_CASE_RANGES);
	return _16326_r;
}



inline jule::I32 _1ab2133dc_to_upper(jule::I32 _16921_r) {
	if (_16921_r <= 127LL) {
		if (('a' <= _16921_r) && (_16921_r <= 'z')) {
			_16921_r-=32LL;
		}
		return _16921_r;
	}
	return static_cast<jule::I32>(_1ab2133dc_to(0LL,_16921_r));
}



inline jule::I32 _1ab2133dc_to_lower(jule::I32 _18021_r) {
	if (_18021_r <= 127LL) {
		if (('A' <= _18021_r) && (_18021_r <= 'Z')) {
			_18021_r+=32LL;
		}
		return _18021_r;
	}
	return static_cast<jule::I32>(_1ab2133dc_to(1LL,_18021_r));
}



inline jule::Bool _1ab2133dc_is16(jule::Slice<_1ab2133dc_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LL)) {
		{
			auto _range_expr = _1919_ranges;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1ab2133dc_i = 0;
				_iter_begin_4438455520:;
				{
					_1ab2133dc_Range16* _19417_range = (&(_1919_ranges[static_cast<jule::Int>(_1ab2133dc_i)]));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LL) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4438455520:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1ab2133dc_i; goto _iter_begin_4438455520; }
				_iter_end_4438455520:;
			}
		}
		return false;
	}
	jule::Int _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	_iter_begin_4438097696:;
	if (!(_20813_lo < _20913_hi)) { goto _iter_end_4438097696; }
	{
		jule::Int _21113_m = _20813_lo + jule::div(_20913_hi - _20813_lo,2LL);
		_1ab2133dc_Range16* _21213_range = (&(_1919_ranges[static_cast<jule::Int>(_21113_m)]));
		{
			if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
				return (_21213_range->_field_stride == 1LL) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LL);
			}
			if (_19128_r < _21213_range->_field_lo) {
				_20913_hi=_21113_m;
			} else {
				_20813_lo=static_cast<jule::Int>(_21113_m + 1LL);
			}
		}
	}
	_iter_next_4438097696:;
	goto _iter_begin_4438097696;
	_iter_end_4438097696:;
	return false;
}



inline jule::Bool _1ab2133dc_is32(jule::Slice<_1ab2133dc_Range32> _2289_ranges,jule::U32 _22828_r) {
	if (_2289_ranges.len() <= 18LL) {
		{
			auto _range_expr = _2289_ranges;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1ab2133dc_i = 0;
				_iter_begin_4438111280:;
				{
					_1ab2133dc_Range32* _23117_range = (&(_2289_ranges[static_cast<jule::Int>(_1ab2133dc_i)]));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LL) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4438111280:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1ab2133dc_i; goto _iter_begin_4438111280; }
				_iter_end_4438111280:;
			}
		}
		return false;
	}
	jule::Int _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	_iter_begin_4438112512:;
	if (!(_24513_lo < _24613_hi)) { goto _iter_end_4438112512; }
	{
		jule::Int _24813_m = _24513_lo + jule::div(_24613_hi - _24513_lo,2LL);
		_1ab2133dc_Range32* _24913_range = (&(_2289_ranges[static_cast<jule::Int>(_24813_m)]));
		{
			if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
				return (_24913_range->_field_stride == 1LL) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LL);
			}
			if (_22828_r < _24913_range->_field_lo) {
				_24613_hi=_24813_m;
			} else {
				_24513_lo=static_cast<jule::Int>(_24813_m + 1LL);
			}
		}
	}
	_iter_next_4438112512:;
	goto _iter_begin_4438112512;
	_iter_end_4438112512:;
	return false;
}



inline jule::Bool _1ab2133dc_is(jule::Ref<_1ab2133dc_RangeTable> _26511_range_tab,jule::I32 _26535_r) {
	jule::Slice<_1ab2133dc_Range16> &_26610_r16 = _26511_range_tab->_field_r16;
	if ((_26610_r16.len() > 0LL) && (static_cast<jule::U32>(_26535_r) <= static_cast<jule::U32>(_26610_r16[static_cast<jule::Int>(_26610_r16.len() - 1LL)]._field_hi))) {
		return _1ab2133dc_is16(_26610_r16,static_cast<jule::U16>(_26535_r));
	}
	jule::Slice<_1ab2133dc_Range32> &_27110_r32 = _26511_range_tab->_field_r32;
	if ((_27110_r32.len() > 0LL) && (_26535_r >= static_cast<jule::I32>(_27110_r32[0LL]._field_lo))) {
		return _1ab2133dc_is32(_27110_r32,static_cast<jule::U32>(_26535_r));
	}
	return false;
}



inline jule::Bool _1ab2133dc_is_excluding_latin(jule::Ref<_1ab2133dc_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_1ab2133dc_Range16> &_28014_r16 = _27823_range_tab->_field_r16;
		jule::Int _28213_off = _27823_range_tab->_field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[static_cast<jule::Int>(_28014_r16.len() - 1LL)]._field_hi))) {
			return _1ab2133dc_is16(_28014_r16.slice(static_cast<jule::Int>(_28213_off)),static_cast<jule::U16>(_27847_r));
		}
	}
	jule::Slice<_1ab2133dc_Range32> &_28710_r32 = _27823_range_tab->_field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo))) {
		return _1ab2133dc_is32(_28710_r32,static_cast<jule::U32>(_27847_r));
	}
	return false;
}



inline jule::Bool _1ab2133dc_is_upper(jule::I32 _29517_r) {
	if (static_cast<jule::U32>(_29517_r) <= 255LL) {
		return (_1ab04b4cd__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_29517_r))] & 96LL) == 32LL;
	}
	return _1ab2133dc_is_excluding_latin(_1ab04b4cd_UPPER,_29517_r);
}



inline jule::Bool _1ab2133dc_is_lower(jule::I32 _30417_r) {
	if (static_cast<jule::U32>(_30417_r) <= 255LL) {
		return (_1ab04b4cd__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_30417_r))] & 96LL) == 64LL;
	}
	return _1ab2133dc_is_excluding_latin(_1ab04b4cd_LOWER,_30417_r);
}



inline jule::Bool _1ab21c902_full_rune(jule::Slice<jule::U8> _13718_p) {
	if (_13718_p.len() == 0LL) {
		return false;
	}
	jule::U8 _1419_x = _1ab21c902_FIRST[static_cast<jule::Int>(_13718_p[0LL])];
	if (_13718_p.len() >= static_cast<jule::Int>(_1419_x & 7LL)) {
		return true;
	}
	_1ab21c902_accept_range _1469_accept = _1ab21c902_ACCEPT_RANGES[static_cast<jule::Int>(_1419_x >> 4LL)];
	if ((_13718_p.len() > 1LL) && ((_13718_p[1LL] < _1469_accept._field_lo) || (_1469_accept._field_hi < _13718_p[1LL]))) {
		return true;
	} else if ((_13718_p.len() > 2LL) && ((_13718_p[2LL] < 128LL) || (191LL < _13718_p[2LL]))) {
		return true;
	}
	return false;
}



inline jule::Bool _1ab21c902_full_rune_str(jule::Str _15622_s) {
	if (_15622_s.len() == 0LL) {
		return false;
	}
	jule::U8 _1609_x = _1ab21c902_FIRST[static_cast<jule::Int>(_15622_s[0LL])];
	if (_15622_s.len() >= static_cast<jule::Int>(_1609_x & 7LL)) {
		return true;
	}
	_1ab21c902_accept_range _1659_accept = _1ab21c902_ACCEPT_RANGES[static_cast<jule::Int>(_1609_x >> 4LL)];
	if ((_15622_s.len() > 1LL) && ((_15622_s[1LL] < _1659_accept._field_lo) || (_1659_accept._field_hi < _15622_s[1LL]))) {
		return true;
	} else if ((_15622_s.len() > 2LL) && ((_15622_s[2LL] < 128LL) || (191LL < _15622_s[2LL]))) {
		return true;
	}
	return false;
}



inline std::tuple<jule::I32,jule::Int> _1ab21c902_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::Int _18242_size = jule::Int();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _1ab21c902_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = static_cast<jule::U8>((_1879_x << 31LL) >> 31LL);
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_1ab21c902_accept_range _1969_accept = _1ab21c902_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::Int> _1ab21c902_decode_rune_str(jule::Str _22924_s) {
	jule::I32 _22934_r = jule::I32();
	jule::Int _22943_size = jule::Int();
	if (_22924_s.len() < 1LL) {
		_22934_r = 65533LL;
		_22943_size = 0LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2339_s0 = _22924_s[0LL];
	jule::U8 _2349_x = _1ab21c902_FIRST[static_cast<jule::Int>(_2339_s0)];
	if (_2349_x >= 240LL) {
		jule::I32 _23913_mask = static_cast<jule::U8>((_2349_x << 31LL) >> 31LL);
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_22924_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask));
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::Int _2429_sz = static_cast<jule::Int>(_2349_x & 7LL);
	_1ab21c902_accept_range _2439_accept = _1ab21c902_ACCEPT_RANGES[static_cast<jule::Int>(_2349_x >> 4LL)];
	if (_22924_s.len() < _2429_sz) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2479_s1 = _22924_s[1LL];
	if ((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 2LL) {
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_2339_s0 & 31LL) << 6LL) | static_cast<jule::I32>(_2479_s1 & 63LL));
		_22943_size = 2LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2549_s2 = _22924_s[2LL];
	if ((_2549_s2 < 128LL) || (191LL < _2549_s2)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 3LL) {
		_22934_r = static_cast<jule::I32>(((static_cast<jule::I32>(_2339_s0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2549_s2 & 63LL));
		_22943_size = 3LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2619_s3 = _22924_s[3LL];
	if ((_2619_s3 < 128LL) || (191LL < _2619_s3)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	_22934_r = static_cast<jule::I32>((((static_cast<jule::I32>(_2339_s0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2549_s2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2619_s3 & 63LL));
	_22943_size = 4LL;
	return std::make_tuple(_22934_r,_22943_size);
}



inline std::tuple<jule::I32,jule::Int> _1ab21c902_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::Int _27647_size = jule::Int();
	if (_27625_p.len() == 0LL) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _2809_end = _27625_p.len();
	jule::I64 _28113_start = _2809_end - 1LL;
	_27638_r=static_cast<jule::I32>(_27625_p[static_cast<jule::Int>(_28113_start)]);
	if (_27638_r < 128LL) {
		_27638_r = _27638_r;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _28913_lim = _2809_end - 4LL;
	if (_28913_lim < 0LL) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	_iter_begin_4438330496:;
	if (!(_28113_start >= _28913_lim)) { goto _iter_end_4438330496; }
	{
		if (_1ab21c902_rune_start(_27625_p[static_cast<jule::Int>(_28113_start)])) {
			goto _iter_end_4438330496;
		}
	}
	_iter_next_4438330496:;
	(_28113_start)--;
	goto _iter_begin_4438330496;
	_iter_end_4438330496:;
	if (_28113_start < 0LL) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _1ab21c902_decode_rune(_27625_p.slice(static_cast<jule::Int>(_28113_start),static_cast<jule::Int>(_2809_end)));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	_27638_r = _27638_r;
	_27647_size = _27647_size;
	return std::make_tuple(_27638_r,_27647_size);
}



inline std::tuple<jule::I32,jule::Int> _1ab21c902_decode_last_rune_str(jule::Str _31729_s) {
	jule::I32 _31739_r = jule::I32();
	jule::Int _31748_size = jule::Int();
	if (_31729_s.len() == 0LL) {
		_31739_r = 65533LL;
		_31748_size = 0LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _3219_end = _31729_s.len();
	jule::I64 _32213_start = _3219_end - 1LL;
	_31739_r=static_cast<jule::I32>(_31729_s[static_cast<jule::Int>(_32213_start)]);
	if (_31739_r < 128LL) {
		_31739_r = _31739_r;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _33013_lim = _3219_end - 4LL;
	if (_33013_lim < 0LL) {
		_33013_lim=0LL;
	}
	(_32213_start)--;
	_iter_begin_4438347920:;
	if (!(_32213_start >= _33013_lim)) { goto _iter_end_4438347920; }
	{
		if (_1ab21c902_rune_start(_31729_s[static_cast<jule::Int>(_32213_start)])) {
			goto _iter_end_4438347920;
		}
	}
	_iter_next_4438347920:;
	(_32213_start)--;
	goto _iter_begin_4438347920;
	_iter_end_4438347920:;
	if (_32213_start < 0LL) {
		_32213_start=0LL;
	}
	std::tie(_31739_r,_31748_size) = _1ab21c902_decode_rune_str(_31729_s.slice(static_cast<jule::Int>(_32213_start),static_cast<jule::Int>(_3219_end)));
	if ((_32213_start + _31748_size) != _3219_end) {
		_31739_r = 65533LL;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	_31739_r = _31739_r;
	_31748_size = _31748_size;
	return std::make_tuple(_31739_r,_31748_size);
}



inline jule::Int _1ab21c902_rune_len(jule::I32 _35217_r) {
	{
		if (!((_35217_r < 0LL))) { goto _case_end_4438356848; }
		_case_begin_4438356848:;
		{
			return -1LL;
		}
		goto _match_end_4438355120;
		_case_end_4438356848:;
		if (!((_35217_r <= 127LLU))) { goto _case_end_4438356336; }
		_case_begin_4438356336:;
		{
			return 1LL;
		}
		goto _match_end_4438355120;
		_case_end_4438356336:;
		if (!((_35217_r <= 2047LL))) { goto _case_end_4438356448; }
		_case_begin_4438356448:;
		{
			return 2LL;
		}
		goto _match_end_4438355120;
		_case_end_4438356448:;
		if (!(((55296LL <= _35217_r) && (_35217_r <= 57343LL)))) { goto _case_end_4438356560; }
		_case_begin_4438356560:;
		{
			return -1LL;
		}
		goto _match_end_4438355120;
		_case_end_4438356560:;
		if (!((_35217_r <= 65535LL))) { goto _case_end_4438355584; }
		_case_begin_4438355584:;
		{
			return 3LL;
		}
		goto _match_end_4438355120;
		_case_end_4438355584:;
		if (!((_35217_r <= 1114111LL))) { goto _case_end_4438355696; }
		_case_begin_4438355696:;
		{
			return 4LL;
		}
		goto _match_end_4438355120;
		_case_end_4438355696:;
		_case_begin_4438355280:;
		{
			return -1LL;
		}
		goto _match_end_4438355120;
		_case_end_4438355280:;
		_match_end_4438355120:;
	}
}



inline jule::Int _1ab21c902_encode_rune(jule::Slice<jule::U8> _36724_p,jule::I32 _36739_r) {
	jule::U32 _3699_i = static_cast<jule::U32>(_36739_r);
	{
		if (!((_3699_i <= 127LLU))) { goto _case_end_4438364480; }
		_case_begin_4438364480:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(_36739_r);
			return 1LL;
		}
		goto _match_end_4438364048;
		_case_end_4438364480:;
		if (!((_3699_i <= 2047LL))) { goto _case_end_4438364592; }
		_case_begin_4438364592:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(192LL | static_cast<jule::U8>(_36739_r >> 6LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 2LL;
		}
		goto _match_end_4438364048;
		_case_end_4438364592:;
		if (!((_3699_i > 1114111LL) || ((55296LL <= _3699_i) && (_3699_i <= 57343LL)))) { goto _case_end_4438364704; }
		_case_begin_4438364704:;
		{
			_36739_r=65533LL;
			goto _case_begin_4438370832;
		}
		goto _match_end_4438364048;
		_case_end_4438364704:;
		if (!((_3699_i <= 65535LL))) { goto _case_end_4438370832; }
		_case_begin_4438370832:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(224LL | static_cast<jule::U8>(_36739_r >> 12LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 3LL;
		}
		goto _match_end_4438364048;
		_case_end_4438370832:;
		_case_begin_4438364176:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(240LL | static_cast<jule::U8>(_36739_r >> 18LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 12LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[3LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 4LL;
		}
		goto _match_end_4438364048;
		_case_end_4438364176:;
		_match_end_4438364048:;
	}
}



inline jule::Slice<jule::U8> _1ab21c902_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if (static_cast<jule::U32>(_39835_r) <= 127LLU) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(_39835_r)}));
	}
	return _1ab21c902_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _1ab21c902_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		if (!((_4079_i <= 2047LL))) { goto _case_end_4439088256; }
		_case_begin_4439088256:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LL | static_cast<jule::U8>(_40545_r >> 6LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4439085040;
		_case_end_4439088256:;
		if (!((_4079_i > 1114111LL) || ((55296LL <= _4079_i) && (_4079_i <= 57343LL)))) { goto _case_end_4439088368; }
		_case_begin_4439088368:;
		{
			_40545_r=65533LL;
			goto _case_begin_4439088480;
		}
		goto _match_end_4439085040;
		_case_end_4439088368:;
		if (!((_4079_i <= 65535LL))) { goto _case_end_4439088480; }
		_case_begin_4439088480:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LL | static_cast<jule::U8>(_40545_r >> 12LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4439085040;
		_case_end_4439088480:;
		_case_begin_4439085168:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LL | static_cast<jule::U8>(_40545_r >> 18LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 12LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4439085040;
		_case_end_4439085168:;
		_match_end_4439085040:;
	}
}



inline jule::Int _1ab21c902_rune_count(jule::Slice<jule::U8> _42319_p) {
	jule::Int _42332_n = jule::Int();
	jule::Int _42413_i = 0LL;
	_iter_begin_4439097120:;
	if (!(_42413_i < _42319_p.len())) { goto _iter_end_4439097120; }
	{
		(_42332_n)++;
		jule::U8 _42717_c = _42319_p[static_cast<jule::Int>(_42413_i)];
		if (_42717_c < 128LL) {
			(_42413_i)++;
			goto _iter_next_4439097120;
		}
		jule::U8 _43313_x = _1ab21c902_FIRST[static_cast<jule::Int>(_42717_c)];
		if (_43313_x == 241LL) {
			(_42413_i)++;
			goto _iter_next_4439097120;
		}
		jule::Int _43817_size = static_cast<jule::Int>(_43313_x & 7LL);
		if ((_42413_i + _43817_size) > _42319_p.len()) {
			(_42413_i)++;
			goto _iter_next_4439097120;
		}
		_1ab21c902_accept_range _44313_accept = _1ab21c902_ACCEPT_RANGES[static_cast<jule::Int>(_43313_x >> 4LL)];
		_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 1LL)];
		if ((_42717_c < _44313_accept._field_lo) || (_44313_accept._field_hi < _42717_c)) {
			_43817_size=1LL;
		} else if (_43817_size == 2LL) {
		} else {
			_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 2LL)];
			if ((_42717_c < 128LL) || (191LL < _42717_c)) {
				_43817_size=1LL;
			} else if (_43817_size == 3LL) {
			} else {
				_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 3LL)];
				if ((_42717_c < 128LL) || (191LL < _42717_c)) {
					_43817_size=1LL;
				}
			}
		}
		_42413_i+=_43817_size;
	}
	_iter_next_4439097120:;
	goto _iter_begin_4439097120;
	_iter_end_4439097120:;
	_42332_n = _42332_n;
	return _42332_n;
}



inline jule::Int _1ab21c902_rune_count_str(jule::Str _46623_s) {
	jule::Int _46633_n = jule::Int();
	jule::Int _46713_i = 0LL;
	_iter_begin_4439121024:;
	if (!(_46713_i < _46623_s.len())) { goto _iter_end_4439121024; }
	{
		jule::U8 _46917_c = _46623_s[static_cast<jule::Int>(_46713_i)];
		if (_46917_c < 128LL) {
			(_46713_i)++;
			goto _iter_next_4439121024;
		}
		jule::U8 _47513_x = _1ab21c902_FIRST[static_cast<jule::Int>(_46917_c)];
		if (_47513_x == 241LL) {
			(_46713_i)++;
			goto _iter_next_4439121024;
		}
		jule::Int _48017_size = static_cast<jule::Int>(_47513_x & 7LL);
		if ((_46713_i + _48017_size) > _46623_s.len()) {
			(_46713_i)++;
			goto _iter_next_4439121024;
		}
		_1ab21c902_accept_range _48513_accept = _1ab21c902_ACCEPT_RANGES[static_cast<jule::Int>(_47513_x >> 4LL)];
		_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 1LL)];
		if ((_46917_c < _48513_accept._field_lo) || (_48513_accept._field_hi < _46917_c)) {
			_48017_size=1LL;
		} else if (_48017_size == 2LL) {
		} else {
			_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 2LL)];
			if ((_46917_c < 128LL) || (191LL < _46917_c)) {
				_48017_size=1LL;
			} else if (_48017_size == 3LL) {
			} else {
				_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 3LL)];
				if ((_46917_c < 128LL) || (191LL < _46917_c)) {
					_48017_size=1LL;
				}
			}
		}
		_46713_i+=_48017_size;
	}
	_iter_next_4439121024:;
	(_46633_n)++;
	goto _iter_begin_4439121024;
	_iter_end_4439121024:;
	_46633_n = _46633_n;
	return _46633_n;
}



inline jule::Bool _1ab21c902_rune_start(jule::U8 _51019_b) {
	return (_51019_b & 192LL) != 128LL;
}



inline jule::Bool _1ab21c902_valid(jule::Slice<jule::U8> _51314_p) {
	jule::Slice<jule::U8> _51613_cp = (*((&(_51314_p))));
	_iter_begin_4439142304:;
	if (!(_51613_cp.len() >= 8LL)) { goto _iter_end_4439142304; }
	{
		jule::U32 _52213_first32 = ((static_cast<jule::U32>(_51613_cp[0LL]) | (static_cast<jule::U32>(_51613_cp[1LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[2LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[3LL]) << 24LL);
		jule::U32 _52313_second32 = ((static_cast<jule::U32>(_51613_cp[4LL]) | (static_cast<jule::U32>(_51613_cp[5LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[6LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[7LL]) << 24LL);
		if (((_52213_first32 | _52313_second32) & 2155905152LL) != 0LL) {
			goto _iter_end_4439142304;
		}
		_51613_cp=_51613_cp.slice(8LL);
	}
	_iter_next_4439142304:;
	goto _iter_begin_4439142304;
	_iter_end_4439142304:;
	jule::Int _53013_i = 0LL;
	_iter_begin_4439152896:;
	if (!(_53013_i < _51613_cp.len())) { goto _iter_end_4439152896; }
	{
		jule::U8 _53213_pi = _51613_cp[static_cast<jule::Int>(_53013_i)];
		if (_53213_pi < 128LL) {
			(_53013_i)++;
			goto _iter_next_4439152896;
		}
		jule::U8 _53713_x = _1ab21c902_FIRST[static_cast<jule::Int>(_53213_pi)];
		if (_53713_x == 241LL) {
			return false;
		}
		jule::Int _54113_size = static_cast<jule::Int>(_53713_x & 7LL);
		if ((_53013_i + _54113_size) > _51613_cp.len()) {
			return false;
		}
		_1ab21c902_accept_range _54513_accept = _1ab21c902_ACCEPT_RANGES[static_cast<jule::Int>(_53713_x >> 4LL)];
		jule::U8 _54617_c = _51613_cp[static_cast<jule::Int>(_53013_i + 1LL)];
		if ((_54617_c < _54513_accept._field_lo) || (_54513_accept._field_hi < _54617_c)) {
			return false;
		} else if (_54113_size == 2LL) {
		} else {
			_54617_c=_51613_cp[static_cast<jule::Int>(_53013_i + 2LL)];
			if ((_54617_c < 128LL) || (191LL < _54617_c)) {
				return false;
			} else if (_54113_size == 3LL) {
			} else {
				_54617_c=_51613_cp[static_cast<jule::Int>(_53013_i + 3LL)];
				if ((_54617_c < 128LL) || (191LL < _54617_c)) {
					return false;
				}
			}
		}
		_53013_i+=_54113_size;
	}
	_iter_next_4439152896:;
	goto _iter_begin_4439152896;
	_iter_end_4439152896:;
	return true;
}



inline jule::Bool _1ab21c902_valid_str(jule::Str _56822_s) {
	_iter_begin_4439172336:;
	if (!(_56822_s.len() >= 8LL)) { goto _iter_end_4439172336; }
	{
		jule::U32 _57313_first32 = ((static_cast<jule::U32>(_56822_s[0LL]) | (static_cast<jule::U32>(_56822_s[1LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[2LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[3LL]) << 24LL);
		jule::U32 _57413_second32 = ((static_cast<jule::U32>(_56822_s[4LL]) | (static_cast<jule::U32>(_56822_s[5LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[6LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[7LL]) << 24LL);
		if (((_57313_first32 | _57413_second32) & 2155905152LL) != 0LL) {
			goto _iter_end_4439172336;
		}
		_56822_s=_56822_s.slice(8LL);
	}
	_iter_next_4439172336:;
	goto _iter_begin_4439172336;
	_iter_end_4439172336:;
	jule::Int _58113_i = 0LL;
	_iter_begin_4439185200:;
	if (!(_58113_i < _56822_s.len())) { goto _iter_end_4439185200; }
	{
		jule::U8 _58313_si = _56822_s[static_cast<jule::Int>(_58113_i)];
		if (_58313_si < 128LL) {
			(_58113_i)++;
			goto _iter_next_4439185200;
		}
		jule::U8 _58813_x = _1ab21c902_FIRST[static_cast<jule::Int>(_58313_si)];
		if (_58813_x == 241LL) {
			return false;
		}
		jule::Int _59213_size = static_cast<jule::Int>(_58813_x & 7LL);
		if ((_58113_i + _59213_size) > _56822_s.len()) {
			return false;
		}
		_1ab21c902_accept_range _59613_accept = _1ab21c902_ACCEPT_RANGES[static_cast<jule::Int>(_58813_x >> 4LL)];
		jule::U8 _59717_c = _56822_s[static_cast<jule::Int>(_58113_i + 1LL)];
		if ((_59717_c < _59613_accept._field_lo) || (_59613_accept._field_hi < _59717_c)) {
			return false;
		} else if (_59213_size == 2LL) {
		} else {
			_59717_c=_56822_s[static_cast<jule::Int>(_58113_i + 2LL)];
			if ((_59717_c < 128LL) || (191LL < _59717_c)) {
				return false;
			} else if (_59213_size == 3LL) {
			} else {
				_59717_c=_56822_s[static_cast<jule::Int>(_58113_i + 3LL)];
				if ((_59717_c < 128LL) || (191LL < _59717_c)) {
					return false;
				}
			}
		}
		_58113_i+=_59213_size;
	}
	_iter_next_4439185200:;
	goto _iter_begin_4439185200;
	_iter_end_4439185200:;
	return true;
}



inline jule::Bool _1ab21c902_valid_rune(jule::I32 _62019_r) {
	{
		if (!(((0LL <= _62019_r) && (_62019_r < 55296LL)))) { goto _case_end_4439207600; }
		_case_begin_4439207600:;
		{
			return true;
		}
		goto _match_end_4439201264;
		_case_end_4439207600:;
		if (!(((57343LL < _62019_r) && (_62019_r <= 1114111LL)))) { goto _case_end_4439207712; }
		_case_begin_4439207712:;
		{
			return true;
		}
		goto _match_end_4439201264;
		_case_end_4439207712:;
		_case_begin_4439207248:;
		{
			return false;
		}
		goto _match_end_4439201264;
		_case_end_4439207248:;
		_match_end_4439201264:;
	}
}



inline jule::Bool _1ab0277b7_is_unary_op(jule::Str _31120_kind) {
	{
		auto _range_expr = _1ab0277b7_UNARY_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1ab0277b7_op = *_range_begin;
			_iter_begin_4439415440:;
			{
				if (_31120_kind == _1ab0277b7_op) {
					return true;
				}
			}
			_iter_next_4439415440:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab0277b7_op = *_range_begin; goto _iter_begin_4439415440; }
			_iter_end_4439415440:;
		}
	}
	return false;
}



inline jule::Bool _1ab0277b7_is_bin_op(jule::Str _32218_kind) {
	{
		auto _range_expr = _1ab0277b7_BIN_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1ab0277b7_op = *_range_begin;
			_iter_begin_4439417152:;
			{
				if (_32218_kind == _1ab0277b7_op) {
					return true;
				}
			}
			_iter_next_4439417152:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab0277b7_op = *_range_begin; goto _iter_begin_4439417152; }
			_iter_end_4439417152:;
		}
	}
	return false;
}



inline jule::Bool _1ab0277b7_is_weak_op(jule::Str _33319_kind) {
	{
		auto _range_expr = _1ab0277b7_WEAK_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1ab0277b7_op = *_range_begin;
			_iter_begin_4439419888:;
			{
				if (_33319_kind == _1ab0277b7_op) {
					return true;
				}
			}
			_iter_next_4439419888:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab0277b7_op = *_range_begin; goto _iter_begin_4439419888; }
			_iter_end_4439419888:;
		}
	}
	return false;
}



inline jule::Bool _1ab0277b7_is_str(jule::Str _34415_k) {
	return (_34415_k != jule::Str("", 0)) && ((_34415_k[0LL] == '\"') || _1ab0277b7_is_raw_str(_34415_k));
}



inline jule::Bool _1ab0277b7_is_raw_str(jule::Str _34619_k) {
	return (_34619_k != jule::Str("", 0)) && (_34619_k[0LL] == '`');
}



inline jule::Bool _1ab0277b7_is_rune(jule::Str _34916_k) {
	return (_34916_k != jule::Str("", 0)) && (_34916_k[0LL] == '\'');
}



inline jule::Bool _1ab0277b7_is_nil(jule::Str _35115_k) {
	return _35115_k == jule::Str("nil", 3);
}



inline jule::Bool _1ab0277b7_is_bool(jule::Str _35316_k) {
	return (_35316_k == jule::Str("true", 4)) || (_35316_k == jule::Str("false", 5));
}



inline jule::Bool _1ab0277b7_contains_any(jule::Str _35517_s,jule::Str _35525_bytes) {
	{
		auto _range_expr = _35525_bytes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::U8 _1ab0277b7_b = *_range_begin;
			_iter_begin_4439431184:;
			{
				jule::Int _35713_i = _35517_s.find(static_cast<jule::Str>(_1ab0277b7_b));
				if (_35713_i >= 0LL) {
					return true;
				}
			}
			_iter_next_4439431184:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab0277b7_b = *_range_begin; goto _iter_begin_4439431184; }
			_iter_end_4439431184:;
		}
	}
	return false;
}



inline jule::Bool _1ab0277b7_is_float(jule::Str _36717_k) {
	if (_36717_k.has_prefix(jule::Str("0x", 2))) {
		return _1ab0277b7_contains_any(_36717_k,jule::Str(".pP", 3));
	}
	return _1ab0277b7_contains_any(_36717_k,jule::Str(".eE", 3));
}



inline jule::Bool _1ab0277b7_is_num(jule::Str _37615_k) {
	if (_37615_k == jule::Str("", 0)) {
		return false;
	}
	jule::U8 _3819_b = _37615_k[0LL];
	return (_3819_b == '.') || (('0' <= _3819_b) && (_3819_b <= '9'));
}



inline jule::Bool _1ab0277b7_is_lit(jule::Str _38615_k) {
	return (((_1ab0277b7_is_num(_38615_k) || _1ab0277b7_is_str(_38615_k)) || _1ab0277b7_is_rune(_38615_k)) || _1ab0277b7_is_nil(_38615_k)) || _1ab0277b7_is_bool(_38615_k);
}



inline jule::Bool _1ab0277b7_is_ignore_ident(jule::Str _39124_ident) {
	return _39124_ident == jule::Str("_", 1);
}



inline jule::Bool _1ab0277b7_is_anon_ident(jule::Str _39322_ident) {
	return _39322_ident == jule::Str("<anonymous>", 11);
}



inline jule::Bool _1ab0277b7_is_punct(jule::I32 _39617_r) {
	{
		auto _range_expr = _1ab0277b7_PUNCTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _1ab0277b7_cr = *_range_begin;
			_iter_begin_4439448944:;
			{
				if (_39617_r == _1ab0277b7_cr) {
					return true;
				}
			}
			_iter_next_4439448944:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab0277b7_cr = *_range_begin; goto _iter_begin_4439448944; }
			_iter_end_4439448944:;
		}
	}
	return false;
}



inline jule::Bool _1ab0277b7_is_space(jule::I32 _40717_r) {
	{
		auto _range_expr = _1ab0277b7_SPACES;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _1ab0277b7_cr = *_range_begin;
			_iter_begin_4439451360:;
			{
				if (_40717_r == _1ab0277b7_cr) {
					return true;
				}
			}
			_iter_next_4439451360:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab0277b7_cr = *_range_begin; goto _iter_begin_4439451360; }
			_iter_end_4439451360:;
		}
	}
	return false;
}



inline jule::Bool _1ab0277b7_is_letter(jule::I32 _41818_r) {
	return _1ab211a6c_is_letter(_41818_r);
}



inline jule::Bool _1ab0277b7_is_ident_rune(jule::Str _42422_s) {
	if (_42422_s == jule::Str("", 0)) {
		return false;
	}
	if (_42422_s[0LL] != '_') {
		jule::I32 _43014_r;
		std::tie(_43014_r,std::ignore) = _1ab21c902_decode_rune_str(_42422_s);
		if ((!(_1ab0277b7_is_letter(_43014_r)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _1ab0277b7_is_decimal(jule::U8 _44019_b) {
	return ('0' <= _44019_b) && (_44019_b <= '9');
}



inline jule::Bool _1ab0277b7_is_binary(jule::U8 _44218_b) {
	return (_44218_b == '0') || (_44218_b == '1');
}



inline jule::Bool _1ab0277b7_is_octal(jule::U8 _44417_b) {
	return ('0' <= _44417_b) && (_44417_b <= '7');
}



inline jule::Bool _1ab0277b7_is_hex(jule::U8 _44715_b) {
	{
		if (!((('0' <= _44715_b) && (_44715_b <= '9')))) { goto _case_end_4439465936; }
		_case_begin_4439465936:;
		{
			return true;
		}
		goto _match_end_4439463520;
		_case_end_4439465936:;
		if (!((('a' <= _44715_b) && (_44715_b <= 'f')))) { goto _case_end_4439466048; }
		_case_begin_4439466048:;
		{
			return true;
		}
		goto _match_end_4439463520;
		_case_end_4439466048:;
		if (!((('A' <= _44715_b) && (_44715_b <= 'F')))) { goto _case_end_4439466160; }
		_case_begin_4439466160:;
		{
			return true;
		}
		goto _match_end_4439463520;
		_case_end_4439466160:;
		_case_begin_4439463648:;
		{
			return false;
		}
		goto _match_end_4439463520;
		_case_end_4439463648:;
		_match_end_4439463520:;
	}
}



inline jule::Bool _1ab0277b7_is_assign(jule::Uint _45918_id) {
	return ((((((_45918_id == 2LLU) || (_45918_id == 31LLU)) || (_45918_id == 34LLU)) || (_45918_id == 20LLU)) || (_45918_id == 28LLU)) || (_45918_id == 3LLU)) || (_45918_id == 7LLU);
}



inline jule::Bool _1ab0277b7_is_postfix_op(jule::Str _47222_kind) {
	{
		auto _range_expr = _1ab0277b7_POSTFIX_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1ab0277b7_op = *_range_begin;
			_iter_begin_4439473280:;
			{
				if (_47222_kind == _1ab0277b7_op) {
					return true;
				}
			}
			_iter_next_4439473280:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab0277b7_op = *_range_begin; goto _iter_begin_4439473280; }
			_iter_end_4439473280:;
		}
	}
	return false;
}



inline jule::Bool _1ab0277b7_is_assign_op(jule::Str _48321_kind) {
	if (_1ab0277b7_is_postfix_op(_48321_kind)) {
		return true;
	}
	{
		auto _range_expr = _1ab0277b7_ASSING_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1ab0277b7_op = *_range_begin;
			_iter_begin_4439476912:;
			{
				if (_48321_kind == _1ab0277b7_op) {
					return true;
				}
			}
			_iter_next_4439476912:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab0277b7_op = *_range_begin; goto _iter_begin_4439476912; }
			_iter_end_4439476912:;
		}
	}
	return false;
}



inline jule::Ref<_1ab029324_File> _1ab029324_new_file_set(jule::Str _6421_path) {
	return jule::new_struct<_1ab029324_File>(new( std::nothrow ) _1ab029324_File(jule::Slice<jule::U8>(),_6421_path,jule::Slice<_1ab0277b7_Token>()));
}



inline _1d068165a_Log _1ab00b922_make_err(jule::Int _10313_row,jule::Int _10323_col,jule::Ref<_1ab029324_File> _10333_f,jule::Str _10343_fmt,jule::Slice<jule::Any> _10356_args) {
	return _1d068165a_Log(1LLU,_10313_row,_10323_col,_10333_f->_method_path(),_1d068165a_logf(_10343_fmt,_10356_args),jule::Str(),jule::Str());
}



inline jule::Bool _1ab00b922_bytes_has_prefix(jule::Slice<jule::U8> _11321_bytes,jule::Str _11336_prefix) {
	if (_11321_bytes.len() < _11336_prefix.len()) {
		return false;
	}
	{
		auto _range_expr = _11336_prefix;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab00b922_i = 0;
			_iter_begin_4439489600:;
			{
				if (_11321_bytes[static_cast<jule::Int>(_1ab00b922_i)] != _11336_prefix[static_cast<jule::Int>(_1ab00b922_i)]) {
					return false;
				}
			}
			_iter_next_4439489600:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab00b922_i; goto _iter_begin_4439489600; }
			_iter_end_4439489600:;
		}
	}
	return true;
}



inline jule::Str _1ab00b922_float_fmt_e(jule::Slice<jule::U8> _12516_txt,jule::Int _12533_i) {
	jule::Str _12543_lit = jule::Str();
	(_12533_i)++;
	if (_12533_i >= _12516_txt.len()) {
		return _12543_lit;
	}
	jule::U8 _1319_b = _12516_txt[static_cast<jule::Int>(_12533_i)];
	if ((_1319_b == '+') || (_1319_b == '-')) {
		(_12533_i)++;
		if (_12533_i >= _12516_txt.len()) {
			return _12543_lit;
		}
	}
	jule::Int _1399_first = _12533_i;
	_iter_begin_4439499120:;
	if (!(_12533_i < _12516_txt.len())) { goto _iter_end_4439499120; }
	{
		jule::U8 _14113_b = _12516_txt[static_cast<jule::Int>(_12533_i)];
		if ((!(_1ab0277b7_is_decimal(_14113_b)))) {
			goto _iter_end_4439499120;
		}
	}
	_iter_next_4439499120:;
	(_12533_i)++;
	goto _iter_begin_4439499120;
	_iter_end_4439499120:;
	if (_12533_i == _1399_first) {
		_12543_lit = jule::Str("", 0);
		return _12543_lit;
	}
	_12543_lit = static_cast<jule::Str>(_12516_txt.slice(0LL,static_cast<jule::Int>(_12533_i)));
	return _12543_lit;
}



inline jule::Str _1ab00b922_float_fmt_p(jule::Slice<jule::U8> _15316_txt,jule::Int _15329_i) {
	return _1ab00b922_float_fmt_e(_15316_txt,_15329_i);
}



inline jule::Str _1ab00b922_float_fmt_dotnp(jule::Slice<jule::U8> _15520_txt,jule::Int _15537_i) {
	if (_15520_txt[static_cast<jule::Int>(_15537_i)] != '.') {
		return jule::Str("", 0);
	}
	(_15537_i)++;
	_julec_label_loop:;
	_iter_begin_4439507776:;
	if (!(_15537_i < _15520_txt.len())) { goto _iter_end_4439507776; }
	{
		jule::U8 _16313_b = _15520_txt[static_cast<jule::Int>(_15537_i)];
		{
			if (!((_1ab0277b7_is_decimal(_16313_b)))) { goto _case_end_4439512464; }
			_case_begin_4439512464:;
			{
				goto _iter_next_4439507776;
			}
			goto _match_end_4439511984;
			_case_end_4439512464:;
			if (!((_1ab00b922_is_float_fmt_p(_16313_b,_15537_i)))) { goto _case_end_4439512576; }
			_case_begin_4439512576:;
			{
				return _1ab00b922_float_fmt_p(_15520_txt,_15537_i);
			}
			goto _match_end_4439511984;
			_case_end_4439512576:;
			_case_begin_4439512112:;
			{
				goto _iter_end_4439507776;
			}
			goto _match_end_4439511984;
			_case_end_4439512112:;
			_match_end_4439511984:;
		}
	}
	_iter_next_4439507776:;
	(_15537_i)++;
	goto _iter_begin_4439507776;
	_iter_end_4439507776:;
	return jule::Str("", 0);
}



inline jule::Str _1ab00b922_float_fmt_dotfp(jule::Slice<jule::U8> _17320_txt,jule::Int _17337_i) {
	_17337_i+=2LL;
	return _1ab00b922_float_fmt_e(_17320_txt,_17337_i);
}



inline jule::Str _1ab00b922_float_fmt_dotp(jule::Slice<jule::U8> _18019_txt,jule::Int _18036_i) {
	(_18036_i)++;
	return _1ab00b922_float_fmt_e(_18019_txt,_18036_i);
}



inline jule::Str _1ab00b922_float_num(jule::Slice<jule::U8> _18714_txt,jule::Int _18731_i) {
	jule::Str _18741_lit = jule::Str();
	(_18731_i)++;
	_iter_begin_4439522480:;
	if (!(_18731_i < _18714_txt.len())) { goto _iter_end_4439522480; }
	{
		jule::U8 _19013_b = _18714_txt[static_cast<jule::Int>(_18731_i)];
		if ((_18731_i > 1LL) && ((_19013_b == 'e') || (_19013_b == 'E'))) {
			_18741_lit = _1ab00b922_float_fmt_e(_18714_txt,_18731_i);
			return _18741_lit;
		}
		if ((!(_1ab0277b7_is_decimal(_19013_b)))) {
			goto _iter_end_4439522480;
		}
	}
	_iter_next_4439522480:;
	(_18731_i)++;
	goto _iter_begin_4439522480;
	_iter_end_4439522480:;
	if (_18731_i == 1LL) {
		return _18741_lit;
	}
	_18741_lit = static_cast<jule::Str>(_18714_txt.slice(0LL,static_cast<jule::Int>(_18731_i)));
	return _18741_lit;
}



inline jule::Str _1ab00b922_common_num(jule::Slice<jule::U8> _20515_txt) {
	jule::Str _20530_lit = jule::Str();
	jule::Int _20613_i = 0LL;
	_julec_label_loop:;
	_iter_begin_4439531344:;
	if (!(_20613_i < _20515_txt.len())) { goto _iter_end_4439531344; }
	{
		jule::U8 _20913_b = _20515_txt[static_cast<jule::Int>(_20613_i)];
		{
			if (!((_20913_b == '.'))) { goto _case_end_4439534336; }
			_case_begin_4439534336:;
			{
				_20530_lit = _1ab00b922_float_num(_20515_txt,_20613_i);
				return _20530_lit;
			}
			goto _match_end_4439534144;
			_case_end_4439534336:;
			if (!((_1ab00b922_is_float_fmt_e(_20913_b,_20613_i)))) { goto _case_end_4439534464; }
			_case_begin_4439534464:;
			{
				_20530_lit = _1ab00b922_float_fmt_e(_20515_txt,_20613_i);
				return _20530_lit;
			}
			goto _match_end_4439534144;
			_case_end_4439534464:;
			if (!(((!(_1ab0277b7_is_decimal(_20913_b)))))) { goto _case_end_4439534592; }
			_case_begin_4439534592:;
			{
				goto _iter_end_4439531344;
			}
			goto _match_end_4439534144;
			_case_end_4439534592:;
			_match_end_4439534144:;
		}
	}
	_iter_next_4439531344:;
	(_20613_i)++;
	goto _iter_begin_4439531344;
	_iter_end_4439531344:;
	if (_20613_i == 0LL) {
		return _20530_lit;
	}
	_20530_lit = static_cast<jule::Str>(_20515_txt.slice(0LL,static_cast<jule::Int>(_20613_i)));
	return _20530_lit;
}



inline jule::Str _1ab00b922_binary_num(jule::Slice<jule::U8> _22315_txt) {
	jule::Str _22330_lit = jule::Str();
	if ((!(_1ab00b922_bytes_has_prefix(_22315_txt,jule::Str("0b", 2))))) {
		_22330_lit = jule::Str("", 0);
		return _22330_lit;
	}
	if (_22315_txt.len() < 2LL) {
		return _22330_lit;
	}
	
	jule::Int _23213_i = 2LL;
	_iter_begin_4439544992:;
	if (!(_23213_i < _22315_txt.len())) { goto _iter_end_4439544992; }
	{
		if ((!(_1ab0277b7_is_binary(_22315_txt[static_cast<jule::Int>(_23213_i)])))) {
			goto _iter_end_4439544992;
		}
	}
	_iter_next_4439544992:;
	(_23213_i)++;
	goto _iter_begin_4439544992;
	_iter_end_4439544992:;
	if (_23213_i == 2LL) {
		return _22330_lit;
	}
	_22330_lit = static_cast<jule::Str>(_22315_txt.slice(0LL,static_cast<jule::Int>(_23213_i)));
	return _22330_lit;
}



inline jule::Bool _1ab00b922_is_float_fmt_e(jule::U8 _24519_b,jule::Int _24528_i) {
	return (_24528_i > 0LL) && ((_24519_b == 'e') || (_24519_b == 'E'));
}



inline jule::Bool _1ab00b922_is_float_fmt_p(jule::U8 _24619_b,jule::Int _24628_i) {
	return (_24628_i > 0LL) && ((_24619_b == 'p') || (_24619_b == 'P'));
}



inline jule::Bool _1ab00b922_is_float_fmt_dotnp(jule::Slice<jule::U8> _24823_txt,jule::Int _24840_i) {
	if (_24823_txt[static_cast<jule::Int>(_24840_i)] != '.') {
		return false;
	}
	(_24840_i)++;
	_julec_label_loop:;
	_iter_begin_4439557488:;
	if (!(_24840_i < _24823_txt.len())) { goto _iter_end_4439557488; }
	{
		jule::U8 _25613_b = _24823_txt[static_cast<jule::Int>(_24840_i)];
		{
			if (!((_1ab0277b7_is_decimal(_25613_b)))) { goto _case_end_4439560528; }
			_case_begin_4439560528:;
			{
				goto _iter_next_4439557488;
			}
			goto _match_end_4439560048;
			_case_end_4439560528:;
			if (!((_1ab00b922_is_float_fmt_p(_25613_b,_24840_i)))) { goto _case_end_4439560640; }
			_case_begin_4439560640:;
			{
				return true;
			}
			goto _match_end_4439560048;
			_case_end_4439560640:;
			_case_begin_4439560176:;
			{
				goto _iter_end_4439557488;
			}
			goto _match_end_4439560048;
			_case_end_4439560176:;
			_match_end_4439560048:;
		}
	}
	_iter_next_4439557488:;
	(_24840_i)++;
	goto _iter_begin_4439557488;
	_iter_end_4439557488:;
	return false;
}



inline jule::Bool _1ab00b922_is_float_fmt_dotp(jule::Slice<jule::U8> _26722_txt,jule::Int _26735_i) {
	{
		if (!((_26722_txt.len() < 3LL))) { goto _case_end_4439565904; }
		_case_begin_4439565904:;
		{
			goto _case_begin_4439566016;
		}
		goto _match_end_4439565360;
		_case_end_4439565904:;
		if (!((_26722_txt[static_cast<jule::Int>(_26735_i)] != '.'))) { goto _case_end_4439566016; }
		_case_begin_4439566016:;
		{
			goto _case_begin_4439566128;
		}
		goto _match_end_4439565360;
		_case_end_4439566016:;
		if (!(((_26722_txt[static_cast<jule::Int>(_26735_i + 1LL)] != 'p') && (_26722_txt[static_cast<jule::Int>(_26735_i + 1LL)] != 'P')))) { goto _case_end_4439566128; }
		_case_begin_4439566128:;
		{
			return false;
		}
		goto _match_end_4439565360;
		_case_end_4439566128:;
		_case_begin_4439565536:;
		{
			return true;
		}
		goto _match_end_4439565360;
		_case_end_4439565536:;
		_match_end_4439565360:;
	}
}



inline jule::Bool _1ab00b922_is_float_fmt_dotfp(jule::Slice<jule::U8> _27623_txt,jule::Int _27636_i) {
	{
		if (!((_27623_txt.len() < 4LL))) { goto _case_end_4439572752; }
		_case_begin_4439572752:;
		{
			goto _case_begin_4439572864;
		}
		goto _match_end_4439572192;
		_case_end_4439572752:;
		if (!((_27623_txt[static_cast<jule::Int>(_27636_i)] != '.'))) { goto _case_end_4439572864; }
		_case_begin_4439572864:;
		{
			goto _case_begin_4439572976;
		}
		goto _match_end_4439572192;
		_case_end_4439572864:;
		if (!(((_27623_txt[static_cast<jule::Int>(_27636_i + 1LL)] != 'f') && (_27623_txt[static_cast<jule::Int>(_27636_i + 1LL)] != 'F')))) { goto _case_end_4439572976; }
		_case_begin_4439572976:;
		{
			goto _case_begin_4439574064;
		}
		goto _match_end_4439572192;
		_case_end_4439572976:;
		if (!(((_27623_txt[static_cast<jule::Int>(_27636_i + 2LL)] != 'p') && (_27623_txt[static_cast<jule::Int>(_27636_i + 1LL)] != 'P')))) { goto _case_end_4439574064; }
		_case_begin_4439574064:;
		{
			return false;
		}
		goto _match_end_4439572192;
		_case_end_4439574064:;
		_case_begin_4439572368:;
		{
			return true;
		}
		goto _match_end_4439572192;
		_case_end_4439572368:;
		_match_end_4439572192:;
	}
}



inline jule::Str _1ab00b922_octal_num(jule::Slice<jule::U8> _28614_txt) {
	jule::Str _28629_lit = jule::Str();
	if (_28614_txt[0LL] != '0') {
		_28629_lit = jule::Str("", 0);
		return _28629_lit;
	}
	if (_28614_txt.len() < 2LL) {
		return _28629_lit;
	}
	jule::Int _29413_octal_start = 1LL;
	if (_28614_txt[1LL] == 'o') {
		if (_28614_txt.len() < 3LL) {
			return _28629_lit;
		}
		(_29413_octal_start)++;
	}
	jule::Int _30313_i = _29413_octal_start;
	_iter_begin_4439586240:;
	if (!(_30313_i < _28614_txt.len())) { goto _iter_end_4439586240; }
	{
		jule::U8 _30513_b = _28614_txt[static_cast<jule::Int>(_30313_i)];
		if (_1ab00b922_is_float_fmt_e(_30513_b,_30313_i)) {
			_28629_lit = _1ab00b922_float_fmt_e(_28614_txt,_30313_i);
			return _28629_lit;
		}
		if ((!(_1ab0277b7_is_octal(_30513_b)))) {
			goto _iter_end_4439586240;
		}
	}
	_iter_next_4439586240:;
	(_30313_i)++;
	goto _iter_begin_4439586240;
	_iter_end_4439586240:;
	if (_30313_i == _29413_octal_start) {
		return _28629_lit;
	}
	_28629_lit = static_cast<jule::Str>(_28614_txt.slice(0LL,static_cast<jule::Int>(_30313_i)));
	return _28629_lit;
}



inline jule::Str _1ab00b922_hex_num(jule::Slice<jule::U8> _32012_txt) {
	jule::Str _32027_lit = jule::Str();
	if (_32012_txt.len() < 3LL) {
		return _32027_lit;
	}
	if ((_32012_txt[0LL] != '0') || ((_32012_txt[1LL] != 'x') && (_32012_txt[1LL] != 'X'))) {
		return _32027_lit;
	}
	
	jule::Int _32913_i = 2LL;
	_julec_label_loop:;
	_iter_begin_4439599216:;
	if (!(_32913_i < _32012_txt.len())) { goto _iter_end_4439599216; }
	{
		jule::U8 _33213_b = _32012_txt[static_cast<jule::Int>(_32913_i)];
		{
			if (!((_1ab00b922_is_float_fmt_dotp(_32012_txt,_32913_i)))) { goto _case_end_4439602192; }
			_case_begin_4439602192:;
			{
				_32027_lit = _1ab00b922_float_fmt_dotp(_32012_txt,_32913_i);
				return _32027_lit;
			}
			goto _match_end_4439601968;
			_case_end_4439602192:;
			if (!((_1ab00b922_is_float_fmt_dotfp(_32012_txt,_32913_i)))) { goto _case_end_4439602320; }
			_case_begin_4439602320:;
			{
				_32027_lit = _1ab00b922_float_fmt_dotfp(_32012_txt,_32913_i);
				return _32027_lit;
			}
			goto _match_end_4439601968;
			_case_end_4439602320:;
			if (!((_1ab00b922_is_float_fmt_p(_33213_b,_32913_i)))) { goto _case_end_4439602448; }
			_case_begin_4439602448:;
			{
				_32027_lit = _1ab00b922_float_fmt_p(_32012_txt,_32913_i);
				return _32027_lit;
			}
			goto _match_end_4439601968;
			_case_end_4439602448:;
			if (!((_1ab00b922_is_float_fmt_dotnp(_32012_txt,_32913_i)))) { goto _case_end_4439602576; }
			_case_begin_4439602576:;
			{
				_32027_lit = _1ab00b922_float_fmt_dotnp(_32012_txt,_32913_i);
				return _32027_lit;
			}
			goto _match_end_4439601968;
			_case_end_4439602576:;
			if (!(((!(_1ab0277b7_is_hex(_33213_b)))))) { goto _case_end_4439602704; }
			_case_begin_4439602704:;
			{
				goto _iter_end_4439599216;
			}
			goto _match_end_4439601968;
			_case_end_4439602704:;
			_match_end_4439601968:;
		}
	}
	_iter_next_4439599216:;
	(_32913_i)++;
	goto _iter_begin_4439599216;
	_iter_end_4439599216:;
	if (_32913_i == 2LL) {
		return _32027_lit;
	}
	_32027_lit = static_cast<jule::Str>(_32012_txt.slice(0LL,static_cast<jule::Int>(_32913_i)));
	return _32027_lit;
}



inline jule::Str _1ab00b922_hex_escape(jule::Slice<jule::U8> _35715_txt,jule::Int _35728_n) {
	jule::Str _35738_seq = jule::Str();
	if (_35715_txt.len() < _35728_n) {
		return _35738_seq;
	}
	
	jule::Int _36313_i = 2LL;
	_iter_begin_4439615440:;
	if (!(_36313_i < _35728_n)) { goto _iter_end_4439615440; }
	{
		if ((!(_1ab0277b7_is_hex(_35715_txt[static_cast<jule::Int>(_36313_i)])))) {
			return _35738_seq;
		}
	}
	_iter_next_4439615440:;
	(_36313_i)++;
	goto _iter_begin_4439615440;
	_iter_end_4439615440:;
	_35738_seq=static_cast<jule::Str>(_35715_txt.slice(0LL,static_cast<jule::Int>(_35728_n)));
	return _35738_seq;
}



inline jule::Str _1ab00b922_big_unicode_point_escape(jule::Slice<jule::U8> _37529_txt) {
	return _1ab00b922_hex_escape(_37529_txt,10LL);
}



inline jule::Str _1ab00b922_little_unicode_point_escape(jule::Slice<jule::U8> _37732_txt) {
	return _1ab00b922_hex_escape(_37732_txt,6LL);
}



inline jule::Str _1ab00b922_hex_byte_escape(jule::Slice<jule::U8> _37920_txt) {
	return _1ab00b922_hex_escape(_37920_txt,4LL);
}



inline jule::Str _1ab00b922_byte_escape(jule::Slice<jule::U8> _38216_txt) {
	jule::Str _38231_seq = jule::Str();
	if (_38216_txt.len() < 4LL) {
		return _38231_seq;
	}
	if (((!(_1ab0277b7_is_octal(_38216_txt[1LL]))) || (!(_1ab0277b7_is_octal(_38216_txt[2LL])))) || (!(_1ab0277b7_is_octal(_38216_txt[3LL])))) {
		return _38231_seq;
	}
	_38231_seq = static_cast<jule::Str>(_38216_txt.slice(0LL,4LL));
	return _38231_seq;
}



inline jule::Slice<_1d068165a_Log> _1ab00b922_lex(jule::Ref<_1ab029324_File> _77616_f) {
	if ((!(jule::real(_77616_f)))) {
		return nullptr;
	}
	_1ab00b922_Lex _78113_lex = _1ab00b922_Lex(jule::Slice<_1ab0277b7_Token>(),_77616_f,0LL,jule::Int(),-1LL,jule::Slice<_1d068165a_Log>());
	_78113_lex._method_new_line();
	_78113_lex._method_lex();
	if (_78113_lex._field_errors.len() > 0LL) {
		return _78113_lex._field_errors;
	}
	_77616_f->_field__tokens=_78113_lex._field_tokens;
	return nullptr;
}



inline jule::Ref<_1ab059068_FileInfo> _1ab059068_parse_file(jule::Ref<_1ab029324_File> _2223_f) {
	if ((!(jule::real(_2223_f)))) {
		return jule::new_ref<_1ab059068_FileInfo>();
	}
	jule::Ref<_1ab059068_FileInfo> _2713_finf = jule::new_struct<_1ab059068_FileInfo>(new( std::nothrow ) _1ab059068_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _1ab059068_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors.len() > 0LL) {
		jule::drop(_2713_finf->_field_ast);
	}
	return _2713_finf;
}



inline jule::Ref<_1ab059068_PackageInfo> _1ab059068_parse_package(jule::Slice<jule::Ref<_1ab029324_File>> _3926_filesets) {
	if (_3926_filesets == nullptr) {
		return jule::new_ref<_1ab059068_PackageInfo>();
	}
	jule::Ref<_1ab059068_PackageInfo> _4413_pinf = jule::new_struct<_1ab059068_PackageInfo>(new( std::nothrow ) _1ab059068_PackageInfo());
	_4413_pinf->_field_files=jule::Slice<jule::Ref<_1ab059068_FileInfo>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_3926_filesets.len())));
	{
		auto _range_expr = _3926_filesets;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab029324_File> _1ab059068_f = *_range_begin;
			_iter_begin_4440349184:;
			{
				if ((!(jule::real(_1ab059068_f)))) {
					goto _iter_next_4440349184;
				}
				jule::Ref<_1ab059068_FileInfo> _5117_finfo = _1ab059068_parse_file(_1ab059068_f);
				_4413_pinf->_field_files=jule::append(_4413_pinf->_field_files,jule::Slice<jule::Ref<_1ab059068_FileInfo>>({_5117_finfo}));
			}
			_iter_next_4440349184:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab059068_f = *_range_begin; goto _iter_begin_4440349184; }
			_iter_end_4440349184:;
		}
	}
	return _4413_pinf;
}



inline std::tuple<jule::Ref<_1ab026d8d_Ast>,jule::Slice<_1d068165a_Log>> _1ab059068_parse_fileset(jule::Ref<_1ab029324_File> _5822_f) {
	jule::Ref<_1ac1ba56e_Parser> _5913_p = jule::new_struct<_1ac1ba56e_Parser>(new( std::nothrow ) _1ac1ba56e_Parser());
	_5913_p->_method_parse(_5822_f);
	return std::make_tuple(_5913_p->_field_ast,_5913_p->_field_errors);
}



inline jule::Ref<_1aaeea1c4_ScopeTree> _1ab05bd18_new_scope(void) {
	return jule::new_struct<_1aaeea1c4_ScopeTree>(new( std::nothrow ) _1aaeea1c4_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _1ab05bd18_is_st(_1ab0277b7_Token _4410_current,_1ab0277b7_Token _4426_prev) {
	jule::Bool _4441_ok = jule::Bool();
	jule::Bool _4451_terminated = jule::Bool();
	_4441_ok=(_4410_current._field_id == 5LLU) || (_4426_prev._field_row < _4410_current._field_row);
	_4451_terminated=_4410_current._field_id == 5LLU;
	return std::make_tuple(_4441_ok,_4451_terminated);
}



inline std::tuple<jule::Int,jule::Bool> _1ab05bd18_next_st_pos(jule::Slice<_1ab0277b7_Token> _5116_tokens,jule::Int _5133_start) {
	jule::Int _5213_brace_n = 0LL;
	jule::Int _5313_i = _5133_start;
	_iter_begin_4440369248:;
	if (!(_5313_i < _5116_tokens.len())) { goto _iter_end_4440369248; }
	{
		jule::Bool _5517_ok = false;
		jule::Bool _5617_terminated = false;
		_1ab0277b7_Token _5713_tok = _5116_tokens[static_cast<jule::Int>(_5313_i)];
		{
			auto _match_expr{ _5713_tok._field_id };
			if (!((3LLU) == _match_expr)) { goto _case_end_4440374928; }
			_case_begin_4440374928:;
			{
				{
					auto _match_expr{ _5713_tok._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4440381520; }
					_case_begin_4440381520:;
					{
						if ((_5213_brace_n == 0LL) && (_5313_i > _5133_start)) {
							std::tie(_5517_ok,_5617_terminated) = _1ab05bd18_is_st(_5713_tok,_5116_tokens[static_cast<jule::Int>(_5313_i - 1LL)]);
							if (_5517_ok) {
								goto _julec_label_return;
							}
						}
						(_5213_brace_n)++;
						goto _iter_next_4440369248;
					}
					goto _match_end_4440375456;
					_case_end_4440381520:;
					_case_begin_4440376576:;
					{
						(_5213_brace_n)--;
						if ((_5213_brace_n == 0LL) && ((_5313_i + 1LL) < _5116_tokens.len())) {
							std::tie(_5517_ok,_5617_terminated) = _1ab05bd18_is_st(_5116_tokens[static_cast<jule::Int>(_5313_i + 1LL)],_5713_tok);
							if (_5517_ok) {
								(_5313_i)++;
								goto _julec_label_return;
							}
						}
						goto _iter_next_4440369248;
					}
					goto _match_end_4440375456;
					_case_end_4440376576:;
					_match_end_4440375456:;
				}
			}
			goto _match_end_4440373136;
			_case_end_4440374928:;
			_match_end_4440373136:;
		}
		if (_5213_brace_n != 0LL) {
			goto _iter_next_4440369248;
		} else if (_5313_i > _5133_start) {
			_1ab0277b7_Token _8917_prev = _5116_tokens[static_cast<jule::Int>(_5313_i - 1LL)];
			if (((_8917_prev._field_id == 7LLU) && _1ab0277b7_is_bin_op(_8917_prev._field_kind)) && (_8917_prev._field_row < _5713_tok._field_row)) {
				goto _iter_next_4440369248;
			}
			std::tie(_5517_ok,_5617_terminated) = _1ab05bd18_is_st(_5713_tok,_8917_prev);
		} else {
			std::tie(_5517_ok,_5617_terminated) = _1ab05bd18_is_st(_5713_tok,_5713_tok);
		}
		if ((!(_5517_ok))) {
			goto _iter_next_4440369248;
		}
		_julec_label_return:;
		if (_5617_terminated) {
			(_5313_i)++;
		}
		return std::make_tuple(_5313_i,_5617_terminated);
	}
	_iter_next_4440369248:;
	(_5313_i)++;
	goto _iter_begin_4440369248;
	_iter_end_4440369248:;
	return std::make_tuple(_5313_i,false);
}



inline std::tuple<jule::Slice<_1ab0277b7_Token>,jule::Bool> _1ab05bd18_skip_st(jule::Int& _11217_i,jule::Slice<_1ab0277b7_Token> _11229_tokens) {
	jule::Int _1139_start = _11217_i;
	jule::Bool _11413_terminated = false;
	std::tie(_11217_i,_11413_terminated) = _1ab05bd18_next_st_pos(_11229_tokens,_1139_start);
	jule::Slice<_1ab0277b7_Token> _11613_st_tokens = _11229_tokens.slice(static_cast<jule::Int>(_1139_start),static_cast<jule::Int>(_11217_i));
	if (_11413_terminated) {
		if (_11613_st_tokens.len() == 1LL) {
			std::tie(_11613_st_tokens,_11413_terminated) = _1ab05bd18_skip_st(_11217_i,_11229_tokens);
			return std::make_tuple(_11613_st_tokens,_11413_terminated);
		}
		_11613_st_tokens=_11613_st_tokens.slice(0LL,static_cast<jule::Int>(_11613_st_tokens.len() - 1LL));
	}
	return std::make_tuple(_11613_st_tokens,_11413_terminated);
}



inline jule::Slice<jule::Ref<_1ab05bd18_Stmt>> _1ab05bd18_split_stms(jule::Slice<_1ab0277b7_Token> _13419_tokens) {
	jule::Slice<jule::Ref<_1ab05bd18_Stmt>> _13513_stms = nullptr;
	jule::Int _13613_pos = 0LL;
	_iter_begin_4440411664:;
	if (!(_13613_pos < _13419_tokens.len())) { goto _iter_end_4440411664; }
	{
		jule::Slice<_1ab0277b7_Token> _13818_tokens;
		jule::Bool _13826_terminated;
		std::tie(_13818_tokens,_13826_terminated) = _1ab05bd18_skip_st(_13613_pos,_13419_tokens);
		_13513_stms=jule::append(_13513_stms,jule::Slice<jule::Ref<_1ab05bd18_Stmt>>({jule::new_struct<_1ab05bd18_Stmt>(new( std::nothrow ) _1ab05bd18_Stmt(_13818_tokens,_13826_terminated))}));
	}
	_iter_next_4440411664:;
	goto _iter_begin_4440411664;
	_iter_end_4440411664:;
	return _13513_stms;
}



inline jule::Slice<_1ab0277b7_Token> _1ab060d50_is_fn_call(jule::Slice<_1ab0277b7_Token> _3919_tokens) {
	{
		auto _match_expr{ _3919_tokens[0LL]._field_id };
		if (!((3LLU) == _match_expr || (2LLU) == _match_expr || (1LLU) == _match_expr)) { goto _case_end_4440421328; }
		goto _match_end_4440411056;
		_case_end_4440421328:;
		_case_begin_4440412144:;
		{
			_1ab0277b7_Token _4713_tok = _3919_tokens[static_cast<jule::Int>(_3919_tokens.len() - 1LL)];
			if ((_4713_tok._field_id != 3LLU) && (_4713_tok._field_kind != jule::Str(")", 1))) {
				return nullptr;
			}
		}
		goto _match_end_4440411056;
		_case_end_4440412144:;
		_match_end_4440411056:;
	}
	_1ab0277b7_Token _529_tok = _3919_tokens[static_cast<jule::Int>(_3919_tokens.len() - 1LL)];
	if ((_529_tok._field_id != 3LLU) || (_529_tok._field_kind != jule::Str(")", 1))) {
		return nullptr;
	}
	jule::Int _5613_brace_n = 0LL;
	jule::I64 _5913_i = _3919_tokens.len() - 1LL;
	_iter_begin_4440425440:;
	if (!(_5913_i >= 1LL)) { goto _iter_end_4440425440; }
	{
		_1ab0277b7_Token _6113_tok = _3919_tokens[static_cast<jule::Int>(_5913_i)];
		if (_6113_tok._field_id == 3LLU) {
			{
				auto _match_expr{ _6113_tok._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4440430880; }
				_case_begin_4440430880:;
				{
					(_5613_brace_n)++;
				}
				goto _match_end_4440430048;
				_case_end_4440430880:;
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4440430992; }
				_case_begin_4440430992:;
				{
					(_5613_brace_n)--;
				}
				goto _match_end_4440430048;
				_case_end_4440430992:;
				_match_end_4440430048:;
			}
			if (_5613_brace_n == 0LL) {
				return _3919_tokens.slice(0LL,static_cast<jule::Int>(_5913_i));
			}
		}
	}
	_iter_next_4440425440:;
	(_5913_i)--;
	goto _iter_begin_4440425440;
	_iter_end_4440425440:;
	return nullptr;
}



inline jule::Ref<_1ab060d50_CallData> _1ab060d50_get_call_data(jule::Slice<_1ab0277b7_Token> _8122_tokens) {
	jule::Ref<_1ab060d50_CallData> _8213_data = jule::new_struct<_1ab060d50_CallData>(new( std::nothrow ) _1ab060d50_CallData());
	std::tie(_8213_data->_field_expr_tokens,_8213_data->_field_args_tokens) = _1ac1ba56e_range_last(_8122_tokens);
	if (_8213_data->_field_expr_tokens.len() == 0LL) {
		return _8213_data;
	}
	_1ab0277b7_Token _899_token = _8213_data->_field_expr_tokens[static_cast<jule::Int>(_8213_data->_field_expr_tokens.len() - 1LL)];
	if ((_899_token._field_id == 3LLU) && (_899_token._field_kind == jule::Str("]", 1))) {
		std::tie(_8213_data->_field_expr_tokens,_8213_data->_field_generics_tokens) = _1ac1ba56e_range_last(_8213_data->_field_expr_tokens);
	}
	return _8213_data;
}



inline jule::Slice<_1ab0277b7_Token> _1ab060d50_get_block_expr(jule::Slice<_1ab0277b7_Token> _9723_tokens) {
	jule::Int _9813_brace_n = 0LL;
	{
		auto _range_expr = _9723_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab060d50_i = 0;
			_1ab0277b7_Token _1ab060d50_tok = *_range_begin;
			_iter_begin_4440444240:;
			{
				if (_1ab060d50_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1ab060d50_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4440448768; }
						_case_begin_4440448768:;
						{
							if (_9813_brace_n > 0LL) {
								(_9813_brace_n)++;
								goto _match_end_4440447184;
							}
							return _9723_tokens.slice(0LL,static_cast<jule::Int>(_1ab060d50_i));
						}
						goto _match_end_4440447184;
						_case_end_4440448768:;
						if (!((jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4440449120; }
						_case_begin_4440449120:;
						{
							(_9813_brace_n)++;
						}
						goto _match_end_4440447184;
						_case_end_4440449120:;
						_case_begin_4440447968:;
						{
							(_9813_brace_n)--;
						}
						goto _match_end_4440447184;
						_case_end_4440447968:;
						_match_end_4440447184:;
					}
				}
			}
			_iter_next_4440444240:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab060d50_i; _1ab060d50_tok = *_range_begin; goto _iter_begin_4440444240; }
			_iter_end_4440444240:;
		}
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_1ab0277b7_Token>,jule::Slice<_1ab0277b7_Token>> _1ab060d50_split_colon(jule::Slice<_1ab0277b7_Token> _12320_tokens) {
	jule::Int _12413_range_n = 0LL;
	{
		auto _range_expr = _12320_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab060d50_i = 0;
			_1ab0277b7_Token _1ab060d50_token = *_range_begin;
			_iter_begin_4440452512:;
			{
				{
					auto _match_expr{ _1ab060d50_token._field_id };
					if (!((3LLU) == _match_expr)) { goto _case_end_4440455328; }
					_case_begin_4440455328:;
					{
						{
							auto _match_expr{ _1ab060d50_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4440457936; }
							_case_begin_4440457936:;
							{
								(_12413_range_n)++;
								goto _iter_next_4440452512;
							}
							goto _match_end_4440456000;
							_case_end_4440457936:;
							_case_begin_4440457120:;
							{
								(_12413_range_n)--;
							}
							goto _match_end_4440456000;
							_case_end_4440457120:;
							_match_end_4440456000:;
						}
					}
					goto _match_end_4440454496;
					_case_end_4440455328:;
					if (!((11LLU) == _match_expr)) { goto _case_end_4440455440; }
					_case_begin_4440455440:;
					{
						if (_12413_range_n < 1LL) {
							jule::Slice<_1ab0277b7_Token> _14125_l = _12320_tokens.slice(0LL,static_cast<jule::Int>(_1ab060d50_i));
							jule::Slice<_1ab0277b7_Token> _14225_r = _12320_tokens.slice(static_cast<jule::Int>(_1ab060d50_i + 1LL));
							return std::make_tuple(_14125_l,_14225_r);
						}
					}
					goto _match_end_4440454496;
					_case_end_4440455440:;
					_match_end_4440454496:;
				}
			}
			_iter_next_4440452512:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab060d50_i; _1ab060d50_token = *_range_begin; goto _iter_begin_4440452512; }
			_iter_end_4440452512:;
		}
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_1ab0277b7_Token> _1ab060d50_eliminate_comments(jule::Slice<_1ab0277b7_Token> _18127_tokens) {
	jule::Slice<_1ab0277b7_Token> _18213_cutted = nullptr;
	{
		auto _range_expr = _18127_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1ab0277b7_Token _1ab060d50_token = *_range_begin;
			_iter_begin_4440466688:;
			{
				if (_1ab060d50_token._field_id != 18LLU) {
					_18213_cutted=jule::append(_18213_cutted,jule::Slice<_1ab0277b7_Token>({_1ab060d50_token}));
				}
			}
			_iter_next_4440466688:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab060d50_token = *_range_begin; goto _iter_begin_4440466688; }
			_iter_end_4440466688:;
		}
	}
	return _18213_cutted;
}



inline jule::Int _1ab060d50_find_lowest_prec_op(jule::Slice<_1ab0277b7_Token> _19324_tokens) {
	_1ab060d50_Precedencer _19413_prec = _1ab060d50_Precedencer();
	jule::Int _19513_brace_n = 0LL;
	{
		auto _range_expr = _19324_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab060d50_i = 0;
			_1ab0277b7_Token _1ab060d50_token = *_range_begin;
			_iter_begin_4440473792:;
			{
				{
					if (!((_1ab060d50_token._field_id == 3LLU))) { goto _case_end_4440476624; }
					_case_begin_4440476624:;
					{
						{
							auto _match_expr{ _1ab060d50_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4440479952; }
							_case_begin_4440479952:;
							{
								(_19513_brace_n)++;
							}
							goto _match_end_4440477984;
							_case_end_4440479952:;
							_case_begin_4440478240:;
							{
								(_19513_brace_n)--;
							}
							goto _match_end_4440477984;
							_case_end_4440478240:;
							_match_end_4440477984:;
						}
						goto _iter_next_4440473792;
					}
					goto _match_end_4440476352;
					_case_end_4440476624:;
					if (!((_1ab060d50_i == 0LL))) { goto _case_end_4440476752; }
					_case_begin_4440476752:;
					{
						goto _iter_next_4440473792;
					}
					goto _match_end_4440476352;
					_case_end_4440476752:;
					if (!((_1ab060d50_token._field_id != 7LLU))) { goto _case_end_4440476880; }
					_case_begin_4440476880:;
					{
						goto _iter_next_4440473792;
					}
					goto _match_end_4440476352;
					_case_end_4440476880:;
					if (!((_19513_brace_n > 0LL))) { goto _case_end_4440477008; }
					_case_begin_4440477008:;
					{
						goto _iter_next_4440473792;
					}
					goto _match_end_4440476352;
					_case_end_4440477008:;
					_match_end_4440476352:;
				}
				_1ab0277b7_Token _22013_left = _19324_tokens[static_cast<jule::Int>(_1ab060d50_i - 1LL)];
				if ((_22013_left._field_id == 7LLU) || (_22013_left._field_id == 11LLU)) {
					goto _iter_next_4440473792;
				}
				if (((_1ab060d50_i > 1LL) && (_22013_left._field_id == 3LLU)) && (_22013_left._field_kind == jule::Str("]", 1))) {
					_1ab0277b7_Token _22817_lleft = _19324_tokens[static_cast<jule::Int>(_1ab060d50_i - 2LL)];
					if ((_22817_lleft._field_id == 3LLU) && (_22817_lleft._field_kind == jule::Str("[", 1))) {
						if ((_1ab060d50_token._field_kind == jule::Str("&", 1)) || (_1ab060d50_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_4440473792;
						}
					}
				}
				jule::Int _23713_p = _1ab060d50_token._method_prec();
				if (_23713_p != -1LL) {
					_19413_prec._method_set(_23713_p,jule::Any(_1ab060d50_i));
				}
			}
			_iter_next_4440473792:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab060d50_i; _1ab060d50_token = *_range_begin; goto _iter_begin_4440473792; }
			_iter_end_4440473792:;
		}
	}
	jule::Any _2439_data = _19413_prec._method_get_lower();
	if (_2439_data == nullptr) {
		return -1LL;
	}
	return _2439_data.operator jule::Int();
}



inline jule::Ref<_1aaeea1c4_IdentExpr> _1ab060d50_build_ident_expr(_1ab0277b7_Token _25025_token) {
	return jule::new_struct<_1aaeea1c4_IdentExpr>(new( std::nothrow ) _1aaeea1c4_IdentExpr(_25025_token,_25025_token._field_kind,false));
}



inline std::tuple<jule::Slice<_1ab0277b7_Token>,jule::Int> _1ab060d50_get_range_expr_tokens(jule::Slice<_1ab0277b7_Token> _25830_tokens) {
	jule::Int _25913_range_n = 0LL;
	jule::I64 _26013_i = _25830_tokens.len() - 1LL;
	_iter_begin_4440503088:;
	if (!(_26013_i >= 0LL)) { goto _iter_end_4440503088; }
	{
		_1ab0277b7_Token _26213_tok = _25830_tokens[static_cast<jule::Int>(_26013_i)];
		if (_26213_tok._field_id == 3LLU) {
			{
				auto _match_expr{ _26213_tok._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4440508800; }
				_case_begin_4440508800:;
				{
					(_25913_range_n)++;
				}
				goto _match_end_4440507216;
				_case_end_4440508800:;
				_case_begin_4440508000:;
				{
					(_25913_range_n)--;
				}
				goto _match_end_4440507216;
				_case_end_4440508000:;
				_match_end_4440507216:;
			}
		}
		if (_25913_range_n == 0LL) {
			return std::make_tuple(_25830_tokens.slice(0LL,static_cast<jule::Int>(_26013_i)),_25913_range_n);
		}
	}
	_iter_next_4440503088:;
	(_26013_i)--;
	goto _iter_begin_4440503088;
	_iter_end_4440503088:;
	return std::make_tuple(nullptr,_25913_range_n);
}



inline jule::Bool _1ab09d6b7_check_assign_tokens(jule::Slice<_1ab0277b7_Token> _1624_tokens) {
	if ((_1624_tokens.len() == 0LL) || (!(_1ab0277b7_is_assign(_1624_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto _range_expr = _1624_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1ab0277b7_Token _1ab09d6b7_t = *_range_begin;
			_iter_begin_4440515280:;
			{
				if (_1ab09d6b7_t._field_id == 3LLU) {
					{
						auto _match_expr{ _1ab09d6b7_t._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4440519328; }
						_case_begin_4440519328:;
						{
							(_2113_brace_n)++;
						}
						goto _match_end_4440517744;
						_case_end_4440519328:;
						_case_begin_4440518528:;
						{
							(_2113_brace_n)--;
						}
						goto _match_end_4440517744;
						_case_end_4440518528:;
						_match_end_4440517744:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_4440515280;
				} else if ((_1ab09d6b7_t._field_id == 7LLU) && _1ab0277b7_is_assign_op(_1ab09d6b7_t._field_kind)) {
					return true;
				}
			}
			_iter_next_4440515280:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab09d6b7_t = *_range_begin; goto _iter_begin_4440515280; }
			_iter_end_4440515280:;
		}
	}
	return false;
}



inline _1d068165a_Log _1ac1ba56e_make_err(jule::Int _5113_row,jule::Int _5123_col,jule::Ref<_1ab029324_File> _5133_f,jule::Str _5143_fmt,jule::Slice<jule::Any> _5156_args) {
	return _1d068165a_Log(1LLU,_5113_row,_5123_col,_5133_f->_method_path(),_1d068165a_logf(_5143_fmt,_5156_args),jule::Str(),jule::Str());
}



inline jule::Slice<_1ab0277b7_Token> _1ac1ba56e_range(jule::Int& _7015_i,jule::Str _7023_open,jule::Str _7040_close,jule::Slice<_1ab0277b7_Token> _7062_tokens) {
	if (_7015_i >= _7062_tokens.len()) {
		return nullptr;
	}
	_1ab0277b7_Token _759_tok = _7062_tokens[static_cast<jule::Int>(_7015_i)];
	if ((_759_tok._field_id != 3LLU) || (_759_tok._field_kind != _7023_open)) {
		return nullptr;
	}
	(_7015_i)++;
	jule::Int _8113_range_n = 1LL;
	jule::Int _829_start = _7015_i;
	_iter_begin_4440534256:;
	if (!((_8113_range_n != 0LL) && (_7015_i < _7062_tokens.len()))) { goto _iter_end_4440534256; }
	{
		_1ab0277b7_Token _8413_token = _7062_tokens[static_cast<jule::Int>(_7015_i)];
		if (_8413_token._field_id == 3LLU) {
			{
				auto _match_expr{ _8413_token._field_kind };
				if (!((_7023_open) == _match_expr)) { goto _case_end_4440541296; }
				_case_begin_4440541296:;
				{
					(_8113_range_n)++;
				}
				goto _match_end_4440540464;
				_case_end_4440541296:;
				if (!((_7040_close) == _match_expr)) { goto _case_end_4440541408; }
				_case_begin_4440541408:;
				{
					(_8113_range_n)--;
				}
				goto _match_end_4440540464;
				_case_end_4440541408:;
				_match_end_4440540464:;
			}
		}
	}
	_iter_next_4440534256:;
	(_7015_i)++;
	goto _iter_begin_4440534256;
	_iter_end_4440534256:;
	return _7062_tokens.slice(static_cast<jule::Int>(_829_start),static_cast<jule::Int>(_7015_i - 1LL));
}



inline std::tuple<jule::Slice<_1ab0277b7_Token>,jule::Slice<_1ab0277b7_Token>> _1ac1ba56e_range_last(jule::Slice<_1ab0277b7_Token> _10319_tokens) {
	jule::Slice<_1ab0277b7_Token> _10338_cutted = jule::Slice<_1ab0277b7_Token>();
	jule::Slice<_1ab0277b7_Token> _10355_cut = jule::Slice<_1ab0277b7_Token>();
	if (_10319_tokens.len() == 0LL) {
		_10338_cutted = _10319_tokens;
		_10355_cut = nullptr;
		return std::make_tuple(_10338_cutted,_10355_cut);
	} else if (_10319_tokens[static_cast<jule::Int>(_10319_tokens.len() - 1LL)]._field_id != 3LLU) {
		_10338_cutted = _10319_tokens;
		_10355_cut = nullptr;
		return std::make_tuple(_10338_cutted,_10355_cut);
	}
	jule::Int _11013_brace_n = 0LL;
	jule::I64 _11113_i = _10319_tokens.len() - 1LL;
	_iter_begin_4440543536:;
	if (!(_11113_i >= 0LL)) { goto _iter_end_4440543536; }
	{
		_1ab0277b7_Token _11313_token = _10319_tokens[static_cast<jule::Int>(_11113_i)];
		if (_11313_token._field_id == 3LLU) {
			{
				auto _match_expr{ _11313_token._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4440556880; }
				_case_begin_4440556880:;
				{
					(_11013_brace_n)++;
					goto _iter_next_4440543536;
				}
				goto _match_end_4440555296;
				_case_end_4440556880:;
				_case_begin_4440556080:;
				{
					(_11013_brace_n)--;
				}
				goto _match_end_4440555296;
				_case_end_4440556080:;
				_match_end_4440555296:;
			}
		}
		if (_11013_brace_n == 0LL) {
			_10338_cutted = _10319_tokens.slice(0LL,static_cast<jule::Int>(_11113_i));
			_10355_cut = _10319_tokens.slice(static_cast<jule::Int>(_11113_i));
			return std::make_tuple(_10338_cutted,_10355_cut);
		}
	}
	_iter_next_4440543536:;
	(_11113_i)--;
	goto _iter_begin_4440543536;
	_iter_end_4440543536:;
	_10338_cutted = _10319_tokens;
	_10355_cut = nullptr;
	return std::make_tuple(_10338_cutted,_10355_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_1ab0277b7_Token>>,jule::Slice<_1d068165a_Log>> _1ac1ba56e_parts(jule::Slice<_1ab0277b7_Token> _14114_tokens,jule::Uint _14131_id,jule::Bool _14144_expr_must) {
	if (_14114_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_1ab0277b7_Token>> _14613_parts = nullptr;
	jule::Slice<_1d068165a_Log> _14713_errors = nullptr;
	jule::Int _14913_range_n = 0LL;
	jule::Int _15013_last = 0LL;
	{
		auto _range_expr = _14114_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac1ba56e_i = 0;
			_1ab0277b7_Token _1ac1ba56e_token = *_range_begin;
			_iter_begin_4440570624:;
			{
				if (_1ac1ba56e_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1ac1ba56e_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4440575024; }
						_case_begin_4440575024:;
						{
							(_14913_range_n)++;
							goto _iter_next_4440570624;
						}
						goto _match_end_4440573440;
						_case_end_4440575024:;
						_case_begin_4440574224:;
						{
							(_14913_range_n)--;
						}
						goto _match_end_4440573440;
						_case_end_4440574224:;
						_match_end_4440573440:;
					}
				}
				if (_14913_range_n > 0LL) {
					goto _iter_next_4440570624;
				}
				if (_1ac1ba56e_token._field_id == _14131_id) {
					if (_14144_expr_must && ((_1ac1ba56e_i - _15013_last) <= 0LL)) {
						_1d068165a_Log _17021_err = _1ac1ba56e_make_err(_1ac1ba56e_token._field_row,_1ac1ba56e_token._field_column,_1ac1ba56e_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
						_14713_errors=jule::append(_14713_errors,jule::Slice<_1d068165a_Log>({_17021_err}));
					}
					_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1ab0277b7_Token>>({_14114_tokens.slice(static_cast<jule::Int>(_15013_last),static_cast<jule::Int>(_1ac1ba56e_i))}));
					_15013_last=static_cast<jule::Int>(_1ac1ba56e_i + 1LL);
				}
			}
			_iter_next_4440570624:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac1ba56e_i; _1ac1ba56e_token = *_range_begin; goto _iter_begin_4440570624; }
			_iter_end_4440570624:;
		}
	}
	if (_15013_last < _14114_tokens.len()) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1ab0277b7_Token>>({_14114_tokens.slice(static_cast<jule::Int>(_15013_last))}));
	} else if ((!(_14144_expr_must))) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1ab0277b7_Token>>({jule::Slice<_1ab0277b7_Token>({})}));
	}
	return std::make_tuple(_14613_parts,_14713_errors);
}



inline jule::Str _1ac1ba56e_get_close_kind_of_brace(jule::Str _18728_left) {
	{
		auto _match_expr{ _18728_left };
		if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4440588768; }
		_case_begin_4440588768:;
		{
			return jule::Str("(", 1);
		}
		goto _match_end_4440584848;
		_case_end_4440588768:;
		if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4440588880; }
		_case_begin_4440588880:;
		{
			return jule::Str("{", 1);
		}
		goto _match_end_4440584848;
		_case_end_4440588880:;
		if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4440588992; }
		_case_begin_4440588992:;
		{
			return jule::Str("[", 1);
		}
		goto _match_end_4440584848;
		_case_end_4440588992:;
		_case_begin_4440585232:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4440584848;
		_case_end_4440585232:;
		_match_end_4440584848:;
	}
}



inline _1d068165a_Log _1ac1ba56e_compiler_err(_1ab0277b7_Token _19617_token,jule::Str _19631_fmt,jule::Slice<jule::Any> _19644_args) {
	return _1d068165a_Log(1LLU,_19617_token._field_row,_19617_token._field_column,_19617_token._field_file->_method_path(),_1d068165a_logf(_19631_fmt,_19644_args),_19617_token._field_file->_method_get_row(_19617_token._field_row),jule::Str());
}



inline void _1ac1ba56e_push_suggestion(_1d068165a_Log* _20731_log,jule::Str _20742_fmt,jule::Slice<jule::Any> _20755_args) {
	_20731_log->_field_suggestion=_1d068165a_logf(_20742_fmt,_20755_args);
}



inline jule::Ref<_1aaeea1c4_Comment> _1ac1ba56e_build_comment(_1ab0277b7_Token _21122_token) {
	_21122_token._field_kind=_21122_token._field_kind.slice(2LL).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_1aaeea1c4_Comment>(new( std::nothrow ) _1aaeea1c4_Comment(_21122_token,_21122_token._field_kind));
}



inline jule::Str _1ac1ba56e_tokstoa(jule::Slice<_1ab0277b7_Token> _22012_tokens) {
	jule::Str _22113_s = jule::Str("", 0);
	{
		auto _range_expr = _22012_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1ab0277b7_Token _1ac1ba56e_token = *_range_begin;
			_iter_begin_4440604672:;
			{
				_22113_s+=_1ac1ba56e_token._field_kind;
			}
			_iter_next_4440604672:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac1ba56e_token = *_range_begin; goto _iter_begin_4440604672; }
			_iter_end_4440604672:;
		}
	}
	return _22113_s;
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_build_void_type(void) {
	return jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl());
}



inline jule::Ref<_1aaeea1c4_TypeDecl> _1ac308844_build_prim_type(_1ab0277b7_Token _2024_token) {
	return jule::new_struct<_1aaeea1c4_TypeDecl>(new( std::nothrow ) _1aaeea1c4_TypeDecl(_2024_token,jule::Any(jule::new_struct<_1aaeea1c4_IdentTypeDecl>(new( std::nothrow ) _1aaeea1c4_IdentTypeDecl(_2024_token,_2024_token._field_kind,false,nullptr)))));
}



inline std::tuple<jule::Slice<_1ab0277b7_Token>,jule::Int> _1ac308844_split_map_range(jule::Slice<_1ab0277b7_Token> _3524_tokens,jule::Int& _3546_i) {
	jule::Slice<_1ab0277b7_Token> _3556_range_tokens = jule::Slice<_1ab0277b7_Token>();
	jule::Int _3579_colon = jule::Int();
	_3579_colon=-1LL;
	jule::Int _3713_range_n = 0LL;
	jule::Int _389_start = _3546_i;
	_iter_begin_4440613872:;
	if (!(_3546_i < _3524_tokens.len())) { goto _iter_end_4440613872; }
	{
		_1ab0277b7_Token _4013_token = _3524_tokens[static_cast<jule::Int>(_3546_i)];
		if (_4013_token._field_id == 3LLU) {
			{
				auto _match_expr{ _4013_token._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4440618800; }
				_case_begin_4440618800:;
				{
					(_3713_range_n)++;
					goto _iter_next_4440613872;
				}
				goto _match_end_4440617216;
				_case_end_4440618800:;
				_case_begin_4440618000:;
				{
					(_3713_range_n)--;
				}
				goto _match_end_4440617216;
				_case_end_4440618000:;
				_match_end_4440617216:;
			}
		}
		if (_3713_range_n == 0LL) {
			if ((_389_start + 1LL) > _3546_i) {
				return std::make_tuple(_3556_range_tokens,_3579_colon);
			}
			_3556_range_tokens=_3524_tokens.slice(static_cast<jule::Int>(_389_start + 1LL),static_cast<jule::Int>(_3546_i));
			goto _iter_end_4440613872;
		} else if (_3713_range_n != 1LL) {
			goto _iter_next_4440613872;
		}
		if ((_3579_colon == -1LL) && (_4013_token._field_id == 11LLU)) {
			_3579_colon=static_cast<jule::Int>((_3546_i - _389_start) - 1LL);
		}
	}
	_iter_next_4440613872:;
	(_3546_i)++;
	goto _iter_begin_4440613872;
	_iter_end_4440613872:;
	return std::make_tuple(_3556_range_tokens,_3579_colon);
}



inline void _1ad6d5cec_lshift_unsig(_1ad6d5cec_Const& _53222_c,_1ad6d5cec_Const& _53233_x) {
	jule::U64 _5339_l = _53222_c._method_as_u64();
	jule::U64 _5349_r = _53233_x._method_as_u64();
	_53222_c._method_set_u64(static_cast<jule::U64>(_5339_l << _5349_r));
}



inline void _1ad6d5cec_rshift_unsig(_1ad6d5cec_Const& _53822_c,_1ad6d5cec_Const& _53833_x) {
	jule::U64 _5399_l = _53822_c._method_as_u64();
	jule::U64 _5409_r = _53833_x._method_as_u64();
	_53822_c._method_set_u64(static_cast<jule::U64>(_5399_l >> _5409_r));
}



inline jule::Bool _1ad6d7e31_check_bit(jule::Str _914_v,jule::Int _922_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)> _932_checker) {
	{
		if (!((_914_v == jule::Str("", 0)))) { goto _case_end_4379326480; }
		_case_begin_4379326480:;
		{
			return false;
		}
		goto _match_end_4379324064;
		_case_end_4379326480:;
		if (!((_914_v.len() == 1LL))) { goto _case_end_4379325312; }
		_case_begin_4379325312:;
		{
			return true;
		}
		goto _match_end_4379324064;
		_case_end_4379325312:;
		if (!((_914_v.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4379325424; }
		_case_begin_4379325424:;
		{
			return _932_checker(_914_v.slice(2LL),16LL,_922_bit);
		}
		goto _match_end_4379324064;
		_case_end_4379325424:;
		if (!((_914_v.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4379325536; }
		_case_begin_4379325536:;
		{
			return _932_checker(_914_v.slice(2LL),2LL,_922_bit);
		}
		goto _match_end_4379324064;
		_case_end_4379325536:;
		if (!((_914_v.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4379324560; }
		_case_begin_4379324560:;
		{
			return _932_checker(_914_v.slice(2LL),8LL,_922_bit);
		}
		goto _match_end_4379324064;
		_case_end_4379324560:;
		if (!((_914_v[0LL] == '0'))) { goto _case_end_4379324672; }
		_case_begin_4379324672:;
		{
			return _932_checker(_914_v.slice(1LL),8LL,_922_bit);
		}
		goto _match_end_4379324064;
		_case_end_4379324672:;
		_case_begin_4379324256:;
		{
			return _932_checker(_914_v,10LL,_922_bit);
		}
		goto _match_end_4379324064;
		_case_end_4379324256:;
		_match_end_4379324064:;
	}
}



inline jule::Str _1ad6d7e31_real_kind_of(jule::Str _2421_kind) {
	{
		auto _match_expr{ _2421_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4379337376; }
		_case_begin_4379337376:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4379334128;
		_case_end_4379337376:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("uintptr", 7)) == _match_expr)) { goto _case_end_4379337488; }
		_case_begin_4379337488:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4379334128;
		_case_end_4379337488:;
		_case_begin_4379323616:;
		{
			return _2421_kind;
		}
		goto _match_end_4379334128;
		_case_end_4379323616:;
		_match_end_4379334128:;
	}
}



inline jule::Int _1ad6d7e31_bitsize_of(jule::Str _4019_k) {
	{
		auto _match_expr{ _4019_k };
		if (!((jule::Str("i8", 2)) == _match_expr || (jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4379340960; }
		_case_begin_4379340960:;
		{
			return 8LL;
		}
		goto _match_end_4379339760;
		_case_end_4379340960:;
		if (!((jule::Str("i16", 3)) == _match_expr || (jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4379341072; }
		_case_begin_4379341072:;
		{
			return 16LL;
		}
		goto _match_end_4379339760;
		_case_end_4379341072:;
		if (!((jule::Str("i32", 3)) == _match_expr || (jule::Str("u32", 3)) == _match_expr || (jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4379341248; }
		_case_begin_4379341248:;
		{
			return 32LL;
		}
		goto _match_end_4379339760;
		_case_end_4379341248:;
		if (!((jule::Str("i64", 3)) == _match_expr || (jule::Str("u64", 3)) == _match_expr || (jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4379341360; }
		_case_begin_4379341360:;
		{
			return 64LL;
		}
		goto _match_end_4379339760;
		_case_end_4379341360:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("int", 3)) == _match_expr)) { goto _case_end_4379341472; }
		_case_begin_4379341472:;
		{
			return 64LL;
		}
		goto _match_end_4379339760;
		_case_end_4379341472:;
		_case_begin_4379338416:;
		{
			return -1LL;
		}
		goto _match_end_4379339760;
		_case_end_4379338416:;
		_match_end_4379339760:;
	}
}



inline jule::Str _1ad6d7e31_int_from_bits(jule::U64 _7222_bits) {
	{
		auto _match_expr{ _7222_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4379345808; }
		_case_begin_4379345808:;
		{
			return jule::Str("i8", 2);
		}
		goto _match_end_4379342144;
		_case_end_4379345808:;
		if (!((16LL) == _match_expr)) { goto _case_end_4379345920; }
		_case_begin_4379345920:;
		{
			return jule::Str("i16", 3);
		}
		goto _match_end_4379342144;
		_case_end_4379345920:;
		if (!((32LL) == _match_expr)) { goto _case_end_4379346032; }
		_case_begin_4379346032:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4379342144;
		_case_end_4379346032:;
		if (!((64LL) == _match_expr)) { goto _case_end_4379346848; }
		_case_begin_4379346848:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4379342144;
		_case_end_4379346848:;
		_case_begin_4379345120:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4379342144;
		_case_end_4379345120:;
		_match_end_4379342144:;
	}
}



inline jule::Str _1ad6d7e31_uint_from_bits(jule::U64 _8523_bits) {
	{
		auto _match_expr{ _8523_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4379349792; }
		_case_begin_4379349792:;
		{
			return jule::Str("u8", 2);
		}
		goto _match_end_4379348880;
		_case_end_4379349792:;
		if (!((16LL) == _match_expr)) { goto _case_end_4379349904; }
		_case_begin_4379349904:;
		{
			return jule::Str("u16", 3);
		}
		goto _match_end_4379348880;
		_case_end_4379349904:;
		if (!((32LL) == _match_expr)) { goto _case_end_4379351056; }
		_case_begin_4379351056:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4379348880;
		_case_end_4379351056:;
		if (!((64LL) == _match_expr)) { goto _case_end_4379351168; }
		_case_begin_4379351168:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4379348880;
		_case_end_4379351168:;
		_case_begin_4379346160:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4379348880;
		_case_end_4379346160:;
		_match_end_4379348880:;
	}
}



inline jule::Str _1ad6d7e31_float_from_bits(jule::U64 _9924_bits) {
	{
		auto _match_expr{ _9924_bits };
		if (!((32LL) == _match_expr)) { goto _case_end_4379353920; }
		_case_begin_4379353920:;
		{
			return jule::Str("f32", 3);
		}
		goto _match_end_4379353088;
		_case_end_4379353920:;
		if (!((64LL) == _match_expr)) { goto _case_end_4379354032; }
		_case_begin_4379354032:;
		{
			return jule::Str("f64", 3);
		}
		goto _match_end_4379353088;
		_case_end_4379354032:;
		_case_begin_4379350368:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4379353088;
		_case_end_4379350368:;
		_match_end_4379353088:;
	}
}



inline jule::Bool _1ad6d7e31_check_bit_int(jule::Str _10822_v,jule::Int _10830_bit) {
	return _1ad6d7e31_check_bit(_10822_v,_10830_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _10930_v,jule::Int _10938_base,jule::Int _10949_bit) mutable -> jule::Bool {
		jule::Int _11017_err;
		std::tie(std::ignore,_11017_err) = _1a8943c85_parse_int(_10930_v,_10938_base,_10949_bit);
		return _11017_err == 0LLU;
	}));
}



inline jule::Bool _1ad6d7e31_check_bit_uint(jule::Str _11623_v,jule::Int _11631_bit) {
	return _1ad6d7e31_check_bit(_11623_v,_11631_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _11730_v,jule::Int _11738_base,jule::Int _11749_bit) mutable -> jule::Bool {
		jule::Int _11817_err;
		std::tie(std::ignore,_11817_err) = _1a8943c85_parse_uint(_11730_v,_11738_base,_11749_bit);
		return _11817_err == 0LLU;
	}));
}



inline jule::Bool _1ad6d7e31_check_bit_float(jule::Str _12424_val,jule::Int _12434_bit) {
	jule::Int _12513_err;
	std::tie(std::ignore,_12513_err) = _1a8977813_parse_float(_12424_val,_12434_bit);
	return _12513_err == 0LLU;
}



inline jule::U64 _1ad6d7e31_bitsize_of_float(jule::F64 _13425_x) {
	{
		if (!(((-340282346638528860000000000000000000000.0 <= _13425_x) && (_13425_x <= 340282346638528860000000000000000000000.0)))) { goto _case_end_4379378496; }
		_case_begin_4379378496:;
		{
			return 32LL;
		}
		goto _match_end_4379376192;
		_case_end_4379378496:;
		_case_begin_4379376384:;
		{
			return 64LL;
		}
		goto _match_end_4379376192;
		_case_end_4379376384:;
		_match_end_4379376192:;
	}
}



inline jule::U64 _1ad6d7e31_bitsize_of_int(jule::I64 _14823_x) {
	{
		if (!(((-128LL <= _14823_x) && (_14823_x <= 127LL)))) { goto _case_end_4379381568; }
		_case_begin_4379381568:;
		{
			return 8LL;
		}
		goto _match_end_4379379200;
		_case_end_4379381568:;
		if (!(((-32768LL <= _14823_x) && (_14823_x <= 32767LL)))) { goto _case_end_4379381136; }
		_case_begin_4379381136:;
		{
			return 16LL;
		}
		goto _match_end_4379379200;
		_case_end_4379381136:;
		if (!(((-2147483648LL <= _14823_x) && (_14823_x <= 2147483647LL)))) { goto _case_end_4379381248; }
		_case_begin_4379381248:;
		{
			return 32LL;
		}
		goto _match_end_4379379200;
		_case_end_4379381248:;
		_case_begin_4379379344:;
		{
			return 64LL;
		}
		goto _match_end_4379379200;
		_case_end_4379379344:;
		_match_end_4379379200:;
	}
}



inline jule::U64 _1ad6d7e31_bitsize_of_uint(jule::U64 _16424_x) {
	{
		if (!((_16424_x <= 255LL))) { goto _case_end_4379387040; }
		_case_begin_4379387040:;
		{
			return 8LL;
		}
		goto _match_end_4379385056;
		_case_end_4379387040:;
		if (!((_16424_x <= 65535LL))) { goto _case_end_4379386608; }
		_case_begin_4379386608:;
		{
			return 16LL;
		}
		goto _match_end_4379385056;
		_case_end_4379386608:;
		if (!((_16424_x <= 4294967295LL))) { goto _case_end_4379386720; }
		_case_begin_4379386720:;
		{
			return 32LL;
		}
		goto _match_end_4379385056;
		_case_end_4379386720:;
		_case_begin_4379385152:;
		{
			return 64LL;
		}
		goto _match_end_4379385056;
		_case_end_4379385152:;
		_match_end_4379385056:;
	}
}



inline jule::F64 _1ad6d61a4_min(jule::Str _4316_k) {
	_4316_k=_1ad6d7e31_real_kind_of(_4316_k);
	{
		auto _match_expr{ _4316_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4379391680; }
		_case_begin_4379391680:;
		{
			return -128LL;
		}
		goto _match_end_4379386304;
		_case_end_4379391680:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4379391200; }
		_case_begin_4379391200:;
		{
			return -32768LL;
		}
		goto _match_end_4379386304;
		_case_end_4379391200:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4379391312; }
		_case_begin_4379391312:;
		{
			return -2147483648LL;
		}
		goto _match_end_4379386304;
		_case_end_4379391312:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4379390800; }
		_case_begin_4379390800:;
		{
			return jule::MIN_I64;
		}
		goto _match_end_4379386304;
		_case_end_4379390800:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4379390912; }
		_case_begin_4379390912:;
		{
			return -340282346638528860000000000000000000000.0;
		}
		goto _match_end_4379386304;
		_case_end_4379390912:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4379391024; }
		_case_begin_4379391024:;
		{
			return jule::MIN_F64;
		}
		goto _match_end_4379386304;
		_case_end_4379391024:;
		_case_begin_4379389504:;
		{
			return 0LL;
		}
		goto _match_end_4379386304;
		_case_end_4379389504:;
		_match_end_4379386304:;
	}
}



inline jule::F64 _1ad6d61a4_max(jule::Str _5816_k) {
	_5816_k=_1ad6d7e31_real_kind_of(_5816_k);
	{
		auto _match_expr{ _5816_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4379397264; }
		_case_begin_4379397264:;
		{
			return 127LL;
		}
		goto _match_end_4379394960;
		_case_end_4379397264:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4379397376; }
		_case_begin_4379397376:;
		{
			return 32767LL;
		}
		goto _match_end_4379394960;
		_case_end_4379397376:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4379396464; }
		_case_begin_4379396464:;
		{
			return 2147483647LL;
		}
		goto _match_end_4379394960;
		_case_end_4379396464:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4379396576; }
		_case_begin_4379396576:;
		{
			return jule::MAX_I64;
		}
		goto _match_end_4379394960;
		_case_end_4379396576:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4379396688; }
		_case_begin_4379396688:;
		{
			return 255LL;
		}
		goto _match_end_4379394960;
		_case_end_4379396688:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4379396800; }
		_case_begin_4379396800:;
		{
			return 65535LL;
		}
		goto _match_end_4379394960;
		_case_end_4379396800:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4379396912; }
		_case_begin_4379396912:;
		{
			return 4294967295LL;
		}
		goto _match_end_4379394960;
		_case_end_4379396912:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4379397024; }
		_case_begin_4379397024:;
		{
			return jule::MAX_U64;
		}
		goto _match_end_4379394960;
		_case_end_4379397024:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4379397136; }
		_case_begin_4379397136:;
		{
			return 340282346638528860000000000000000000000.0;
		}
		goto _match_end_4379394960;
		_case_end_4379397136:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4379397904; }
		_case_begin_4379397904:;
		{
			return jule::MAX_F64;
		}
		goto _match_end_4379394960;
		_case_end_4379397904:;
		_case_begin_4379395936:;
		{
			return 0LL;
		}
		goto _match_end_4379394960;
		_case_end_4379395936:;
		_match_end_4379394960:;
	}
}



inline jule::Bool _1ad7937e4_is_i8_compatible(jule::Str _629_k) {
	_629_k=_1ad6d7e31_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



inline jule::Bool _1ad7937e4_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_1ad6d7e31_real_kind_of(_1230_k);
	return ((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2));
}



inline jule::Bool _1ad7937e4_is_i32_compatible(jule::Str _2030_k) {
	_2030_k=_1ad6d7e31_real_kind_of(_2030_k);
	return ((((_2030_k == jule::Str("i8", 2)) || (_2030_k == jule::Str("i16", 3))) || (_2030_k == jule::Str("i32", 3))) || (_2030_k == jule::Str("u8", 2))) || (_2030_k == jule::Str("u16", 3));
}



inline jule::Bool _1ad7937e4_is_i64_compatible(jule::Str _3030_k) {
	_3030_k=_1ad6d7e31_real_kind_of(_3030_k);
	return ((((((_3030_k == jule::Str("i8", 2)) || (_3030_k == jule::Str("i16", 3))) || (_3030_k == jule::Str("i32", 3))) || (_3030_k == jule::Str("i64", 3))) || (_3030_k == jule::Str("u8", 2))) || (_3030_k == jule::Str("u16", 3))) || (_3030_k == jule::Str("u32", 3));
}



inline jule::Bool _1ad7937e4_is_u8_compatible(jule::Str _4229_k) {
	_4229_k=_1ad6d7e31_real_kind_of(_4229_k);
	return _4229_k == jule::Str("u8", 2);
}



inline jule::Bool _1ad7937e4_is_u16_compatible(jule::Str _4830_k) {
	_4830_k=_1ad6d7e31_real_kind_of(_4830_k);
	return (_4830_k == jule::Str("u8", 2)) || (_4830_k == jule::Str("u16", 3));
}



inline jule::Bool _1ad7937e4_is_u32_compatible(jule::Str _5430_k) {
	_5430_k=_1ad6d7e31_real_kind_of(_5430_k);
	return ((_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3))) || (_5430_k == jule::Str("u32", 3));
}



inline jule::Bool _1ad7937e4_is_u64_compatible(jule::Str _6230_k) {
	_6230_k=_1ad6d7e31_real_kind_of(_6230_k);
	return (((_6230_k == jule::Str("u8", 2)) || (_6230_k == jule::Str("u16", 3))) || (_6230_k == jule::Str("u32", 3))) || (_6230_k == jule::Str("u64", 3));
}



inline jule::Bool _1ad7937e4_is_f32_compatible(jule::Str _7130_k) {
	_7130_k=_1ad6d7e31_real_kind_of(_7130_k);
	return _7130_k == jule::Str("f32", 3);
}



inline jule::Bool _1ad7937e4_is_f64_compatible(jule::Str _7730_k) {
	_7730_k=_1ad6d7e31_real_kind_of(_7730_k);
	return (_7730_k == jule::Str("f64", 3)) || (_7730_k == jule::Str("f32", 3));
}



inline jule::Bool _1ad7937e4_types_are_compatible(jule::Str _8633_k1,jule::Str _8642_k2) {
	_8633_k1=_1ad6d7e31_real_kind_of(_8633_k1);
	{
		auto _match_expr{ _8633_k1 };
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4379427168; }
		_case_begin_4379427168:;
		{
			return true;
		}
		goto _match_end_4379424064;
		_case_end_4379427168:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4379428112; }
		_case_begin_4379428112:;
		{
			return _1ad7937e4_is_i8_compatible(_8642_k2);
		}
		goto _match_end_4379424064;
		_case_end_4379428112:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4379428224; }
		_case_begin_4379428224:;
		{
			return _1ad7937e4_is_i16_compatible(_8642_k2);
		}
		goto _match_end_4379424064;
		_case_end_4379428224:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4379428336; }
		_case_begin_4379428336:;
		{
			return _1ad7937e4_is_i32_compatible(_8642_k2);
		}
		goto _match_end_4379424064;
		_case_end_4379428336:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4379428448; }
		_case_begin_4379428448:;
		{
			return _1ad7937e4_is_i64_compatible(_8642_k2);
		}
		goto _match_end_4379424064;
		_case_end_4379428448:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4379427472; }
		_case_begin_4379427472:;
		{
			return _1ad7937e4_is_u8_compatible(_8642_k2);
		}
		goto _match_end_4379424064;
		_case_end_4379427472:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4379427584; }
		_case_begin_4379427584:;
		{
			return _1ad7937e4_is_u16_compatible(_8642_k2);
		}
		goto _match_end_4379424064;
		_case_end_4379427584:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4379427696; }
		_case_begin_4379427696:;
		{
			return _1ad7937e4_is_u32_compatible(_8642_k2);
		}
		goto _match_end_4379424064;
		_case_end_4379427696:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4379427808; }
		_case_begin_4379427808:;
		{
			return _1ad7937e4_is_u64_compatible(_8642_k2);
		}
		goto _match_end_4379424064;
		_case_end_4379427808:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4379427920; }
		_case_begin_4379427920:;
		{
			return _1ad7937e4_is_f32_compatible(_8642_k2);
		}
		goto _match_end_4379424064;
		_case_end_4379427920:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4379428592; }
		_case_begin_4379428592:;
		{
			return _1ad7937e4_is_f64_compatible(_8642_k2);
		}
		goto _match_end_4379424064;
		_case_end_4379428592:;
		if (!((jule::Str("bool", 4)) == _match_expr)) { goto _case_end_4379428720; }
		_case_begin_4379428720:;
		{
			return _8642_k2 == jule::Str("bool", 4);
		}
		goto _match_end_4379424064;
		_case_end_4379428720:;
		if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4379428848; }
		_case_begin_4379428848:;
		{
			return _8642_k2 == jule::Str("str", 3);
		}
		goto _match_end_4379424064;
		_case_end_4379428848:;
		_case_begin_4379426544:;
		{
			return false;
		}
		goto _match_end_4379424064;
		_case_end_4379426544:;
		_match_end_4379424064:;
	}
}



inline jule::Bool _1ad7937e4_is_i16_greater(jule::Str _10727_k) {
	_10727_k=_1ad6d7e31_real_kind_of(_10727_k);
	return _10727_k == jule::Str("u8", 2);
}



inline jule::Bool _1ad7937e4_is_i32_greater(jule::Str _11327_k) {
	_11327_k=_1ad6d7e31_real_kind_of(_11327_k);
	return (_11327_k == jule::Str("i8", 2)) || (_11327_k == jule::Str("i16", 3));
}



inline jule::Bool _1ad7937e4_is_i64_greater(jule::Str _11927_k) {
	_11927_k=_1ad6d7e31_real_kind_of(_11927_k);
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



inline jule::Bool _1ad7937e4_is_u8_greater(jule::Str _12726_k) {
	_12726_k=_1ad6d7e31_real_kind_of(_12726_k);
	return _12726_k == jule::Str("i8", 2);
}



inline jule::Bool _1ad7937e4_is_u16_greater(jule::Str _13327_k) {
	_13327_k=_1ad6d7e31_real_kind_of(_13327_k);
	return ((_13327_k == jule::Str("u8", 2)) || (_13327_k == jule::Str("i8", 2))) || (_13327_k == jule::Str("i16", 3));
}



inline jule::Bool _1ad7937e4_is_u32_greater(jule::Str _14127_k) {
	_14127_k=_1ad6d7e31_real_kind_of(_14127_k);
	return ((((_14127_k == jule::Str("u8", 2)) || (_14127_k == jule::Str("u16", 3))) || (_14127_k == jule::Str("i8", 2))) || (_14127_k == jule::Str("i16", 3))) || (_14127_k == jule::Str("i32", 3));
}



inline jule::Bool _1ad7937e4_is_u64_greater(jule::Str _15127_k) {
	_15127_k=_1ad6d7e31_real_kind_of(_15127_k);
	return ((((((_15127_k == jule::Str("u8", 2)) || (_15127_k == jule::Str("u16", 3))) || (_15127_k == jule::Str("u32", 3))) || (_15127_k == jule::Str("i8", 2))) || (_15127_k == jule::Str("i16", 3))) || (_15127_k == jule::Str("i32", 3))) || (_15127_k == jule::Str("i64", 3));
}



inline jule::Bool _1ad7937e4_is_f32_greater(jule::Str _16323_k) {
	return _16323_k != jule::Str("f64", 3);
}



inline jule::Bool _1ad7937e4_is_f64_greater(jule::Str _16523_k) {
	return true;
}



inline jule::Bool _1ad7937e4_is_greater(jule::Str _16823_k1,jule::Str _16832_k2) {
	_16823_k1=_1ad6d7e31_real_kind_of(_16823_k1);
	{
		auto _match_expr{ _16823_k1 };
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4379457808; }
		_case_begin_4379457808:;
		{
			return _1ad7937e4_is_i16_greater(_16832_k2);
		}
		goto _match_end_4379451696;
		_case_end_4379457808:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4379457920; }
		_case_begin_4379457920:;
		{
			return _1ad7937e4_is_i32_greater(_16832_k2);
		}
		goto _match_end_4379451696;
		_case_end_4379457920:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4379458800; }
		_case_begin_4379458800:;
		{
			return _1ad7937e4_is_i64_greater(_16832_k2);
		}
		goto _match_end_4379451696;
		_case_end_4379458800:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4379458912; }
		_case_begin_4379458912:;
		{
			return _1ad7937e4_is_u16_greater(_16832_k2);
		}
		goto _match_end_4379451696;
		_case_end_4379458912:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4379459024; }
		_case_begin_4379459024:;
		{
			return _1ad7937e4_is_u8_greater(_16832_k2);
		}
		goto _match_end_4379451696;
		_case_end_4379459024:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4379459152; }
		_case_begin_4379459152:;
		{
			return _1ad7937e4_is_u32_greater(_16832_k2);
		}
		goto _match_end_4379451696;
		_case_end_4379459152:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4379458160; }
		_case_begin_4379458160:;
		{
			return _1ad7937e4_is_u64_greater(_16832_k2);
		}
		goto _match_end_4379451696;
		_case_end_4379458160:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4379458288; }
		_case_begin_4379458288:;
		{
			return _1ad7937e4_is_f32_greater(_16832_k2);
		}
		goto _match_end_4379451696;
		_case_end_4379458288:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4379458416; }
		_case_begin_4379458416:;
		{
			return _1ad7937e4_is_f64_greater(_16832_k2);
		}
		goto _match_end_4379451696;
		_case_end_4379458416:;
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4379458544; }
		_case_begin_4379458544:;
		{
			return true;
		}
		goto _match_end_4379451696;
		_case_end_4379458544:;
		_case_begin_4379457328:;
		{
			return false;
		}
		goto _match_end_4379451696;
		_case_end_4379457328:;
		_match_end_4379451696:;
	}
}



inline jule::Bool _1ad70d41d_is_sig_int(jule::Str _2723_k) {
	_2723_k=_1ad6d7e31_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



inline jule::Bool _1ad70d41d_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_1ad6d7e31_real_kind_of(_3825_k);
	return (((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3));
}



inline jule::Bool _1ad70d41d_is_int(jule::Str _4915_k) {
	return _1ad70d41d_is_sig_int(_4915_k) || _1ad70d41d_is_unsig_int(_4915_k);
}



inline jule::Bool _1ad70d41d_is_float(jule::Str _5417_k) {
	return (_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3));
}



inline jule::Bool _1ad70d41d_is_num(jule::Str _5915_k) {
	return _1ad70d41d_is_int(_5915_k) || _1ad70d41d_is_float(_5915_k);
}



inline jule::Bool _1ad70d41d_is_sig_num(jule::Str _6419_k) {
	return _1ad70d41d_is_sig_int(_6419_k) || _1ad70d41d_is_float(_6419_k);
}



inline std::tuple<jule::Str,jule::Bool> _1ad903767_is_byte_lit(jule::Str _1524_kind) {
	if (_1524_kind.len() < 3LL) {
		return std::make_tuple(jule::Str("", 0),false);
	}
	_1524_kind=_1524_kind.slice(1LL,static_cast<jule::Int>(_1524_kind.len() - 1LL));
	jule::Bool _2113_is_byte = false;
	{
		if (!(((_1524_kind.len() == 1LL) && (_1524_kind[0LL] <= 255LL)))) { goto _case_end_4379502128; }
		_case_begin_4379502128:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4379501936;
		_case_end_4379502128:;
		if (!(((_1524_kind[0LL] == '\\') && (_1524_kind[1LL] == 'x')))) { goto _case_end_4379502256; }
		_case_begin_4379502256:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4379501936;
		_case_end_4379502256:;
		if (!((((_1524_kind[0LL] == '\\') && (_1524_kind[1LL] >= '0')) && (_1524_kind[1LL] <= '7')))) { goto _case_end_4379502384; }
		_case_begin_4379502384:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4379501936;
		_case_end_4379502384:;
		_match_end_4379501936:;
	}
	return std::make_tuple(_1524_kind,_2113_is_byte);
}



inline jule::I32 _1ad903767_to_rune(jule::Slice<jule::U8> _4016_bytes) {
	if (_4016_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _4513_r = 0LL;
	if ((_4016_bytes[0LL] == '\\') && (_4016_bytes.len() > 1LL)) {
		jule::Int _4717_i = 0LL;
		_4513_r=static_cast<jule::I32>(_1ad903767_rune_from_esq_seq(_4016_bytes,_4717_i));
	} else {
		std::tie(_4513_r,std::ignore) = _1ab21c902_decode_rune(_4016_bytes);
	}
	return _4513_r;
}



inline jule::Str _1ad903767_to_raw_str(jule::Slice<jule::U8> _5919_bytes) {
	return static_cast<jule::Str>(_5919_bytes);
}



inline jule::Str _1ad903767_to_str(jule::Slice<jule::U8> _6415_bytes) {
	if (_6415_bytes.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _6913_s = jule::Str("", 0);
	jule::Int _7013_i = 0LL;
	_iter_begin_4379516336:;
	if (!(_7013_i < _6415_bytes.len())) { goto _iter_end_4379516336; }
	{
		jule::U8 _7213_b = _6415_bytes[static_cast<jule::Int>(_7013_i)];
		if (_7213_b == '\\') {
			_6913_s+=_1ad903767_str_esq_seq(_6415_bytes,_7013_i);
		} else {
			jule::I32 _7618_r;
			jule::Int _7621_size;
			std::tie(_7618_r,_7621_size) = _1ab21c902_decode_rune(_6415_bytes.slice(static_cast<jule::Int>(_7013_i)));
			_7013_i+=_7621_size;
			_6913_s+=static_cast<jule::Str>(_7618_r);
		}
	}
	_iter_next_4379516336:;
	goto _iter_begin_4379516336;
	_iter_end_4379516336:;
	return _6913_s;
}



inline std::tuple<jule::U8,jule::Bool> _1ad903767_try_btoa_common_esq(jule::Slice<jule::U8> _8424_bytes) {
	jule::U8 _8441_seq = jule::U8();
	jule::Bool _8452_ok = jule::Bool();
	if ((_8424_bytes.len() < 2LL) || (_8424_bytes[0LL] != '\\')) {
		return std::make_tuple(_8441_seq,_8452_ok);
	}
	{
		auto _match_expr{ _8424_bytes[1LL] };
		if (!(('\\') == _match_expr)) { goto _case_end_4379529824; }
		_case_begin_4379529824:;
		{
			_8441_seq='\\';
		}
		goto _match_end_4379528080;
		_case_end_4379529824:;
		if (!(('\'') == _match_expr)) { goto _case_end_4379529328; }
		_case_begin_4379529328:;
		{
			_8441_seq='\'';
		}
		goto _match_end_4379528080;
		_case_end_4379529328:;
		if (!(('\"') == _match_expr)) { goto _case_end_4379529440; }
		_case_begin_4379529440:;
		{
			_8441_seq='\"';
		}
		goto _match_end_4379528080;
		_case_end_4379529440:;
		if (!(('a') == _match_expr)) { goto _case_end_4379530416; }
		_case_begin_4379530416:;
		{
			_8441_seq='\a';
		}
		goto _match_end_4379528080;
		_case_end_4379530416:;
		if (!(('b') == _match_expr)) { goto _case_end_4379530528; }
		_case_begin_4379530528:;
		{
			_8441_seq='\b';
		}
		goto _match_end_4379528080;
		_case_end_4379530528:;
		if (!(('f') == _match_expr)) { goto _case_end_4379530640; }
		_case_begin_4379530640:;
		{
			_8441_seq='\f';
		}
		goto _match_end_4379528080;
		_case_end_4379530640:;
		if (!(('n') == _match_expr)) { goto _case_end_4379530752; }
		_case_begin_4379530752:;
		{
			_8441_seq='\n';
		}
		goto _match_end_4379528080;
		_case_end_4379530752:;
		if (!(('r') == _match_expr)) { goto _case_end_4379530864; }
		_case_begin_4379530864:;
		{
			_8441_seq='\r';
		}
		goto _match_end_4379528080;
		_case_end_4379530864:;
		if (!(('t') == _match_expr)) { goto _case_end_4379530976; }
		_case_begin_4379530976:;
		{
			_8441_seq='\t';
		}
		goto _match_end_4379528080;
		_case_end_4379530976:;
		if (!(('v') == _match_expr)) { goto _case_end_4379531088; }
		_case_begin_4379531088:;
		{
			_8441_seq='\v';
		}
		goto _match_end_4379528080;
		_case_end_4379531088:;
		_match_end_4379528080:;
	}
	_8452_ok=_8441_seq != 0LL;
	return std::make_tuple(_8441_seq,_8452_ok);
}



inline jule::I32 _1ad903767_rune_from_esq_seq(jule::Slice<jule::U8> _10622_bytes,jule::Int& _10642_i) {
	jule::U8 _10710_b;
	jule::Bool _10713_ok;
	std::tie(_10710_b,_10713_ok) = _1ad903767_try_btoa_common_esq(_10622_bytes.slice(static_cast<jule::Int>(_10642_i)));
	(_10642_i)++;
	if (_10713_ok) {
		(_10642_i)++;
		return static_cast<jule::I32>(_10710_b);
	}
	{
		auto _match_expr{ _10622_bytes[static_cast<jule::Int>(_10642_i)] };
		if (!(('u') == _match_expr)) { goto _case_end_4379548208; }
		_case_begin_4379548208:;
		{
			
			jule::U64 _11714_rc;
			std::tie(_11714_rc,std::ignore) = _1a8943c85_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 5LL))),16LL,64LL);
			_10642_i+=5LL;
			jule::I32 _11913_r = static_cast<jule::I32>(_11714_rc);
			return _11913_r;
		}
		goto _match_end_4379542032;
		_case_end_4379548208:;
		if (!(('U') == _match_expr)) { goto _case_end_4379548784; }
		_case_begin_4379548784:;
		{
			
			jule::U64 _12414_rc;
			std::tie(_12414_rc,std::ignore) = _1a8943c85_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 9LL))),16LL,64LL);
			_10642_i+=9LL;
			jule::I32 _12613_r = static_cast<jule::I32>(_12414_rc);
			return _12613_r;
		}
		goto _match_end_4379542032;
		_case_end_4379548784:;
		if (!(('x') == _match_expr)) { goto _case_end_4379548896; }
		_case_begin_4379548896:;
		{
			
			jule::Slice<jule::U8> _13113_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _13314_b;
			std::tie(_13314_b,std::ignore) = _1a8943c85_parse_uint(static_cast<jule::Str>(_13113_seq),16LL,64LL);
			return static_cast<jule::I32>(_13314_b);
		}
		goto _match_end_4379542032;
		_case_end_4379548896:;
		_case_begin_4379542592:;
		{
			
			jule::Slice<jule::U8> _13813_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _14014_b;
			std::tie(_14014_b,std::ignore) = _1a8943c85_parse_uint(static_cast<jule::Str>(_13813_seq.slice(1LL)),8LL,64LL);
			return static_cast<jule::I32>(_14014_b);
		}
		goto _match_end_4379542032;
		_case_end_4379542592:;
		_match_end_4379542032:;
	}
}



inline jule::Str _1ad903767_str_esq_seq(jule::Slice<jule::U8> _14516_bytes,jule::Int& _14536_i) {
	jule::I32 _1469_r = _1ad903767_rune_from_esq_seq(_14516_bytes,_14536_i);
	if (_1469_r <= 255LL) {
		return static_cast<jule::Str>(_1469_r);
	}
	return _1ad903767_to_str(static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1469_r)));
}



inline jule::Str _1ac699a1a_str_repeat(jule::Str _8715_sub,jule::Int _8729_n) {
	if (_8729_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _9213_s = jule::Str("", 0);
	_iter_begin_4443268576:;
	if (!(_8729_n > 0LL)) { goto _iter_end_4443268576; }
	{
		_9213_s+=_8715_sub;
	}
	_iter_next_4443268576:;
	(_8729_n)--;
	goto _iter_begin_4443268576;
	_iter_end_4443268576:;
	return _9213_s;
}



inline jule::Str _1ac699a1a_build_doc(jule::Ref<_1aaeea1c4_CommentGroup> _9918_cg) {
	if ((!(jule::real(_9918_cg)))) {
		return jule::Str("", 0);
	}
	jule::Str _10413_doc = jule::Str("", 0);
	{
		auto _range_expr = _9918_cg->_field_comments;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaeea1c4_Comment> _1ac699a1a_c = *_range_begin;
			_iter_begin_4443272912:;
			{
				_10413_doc+=_1ac699a1a_c->_field_text;
				_10413_doc+=jule::Str(" ", 1);
			}
			_iter_next_4443272912:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac699a1a_c = *_range_begin; goto _iter_begin_4443272912; }
			_iter_end_4443272912:;
		}
	}
	return _10413_doc;
}



inline jule::Ref<_1ad3e617d_TypeSymbol> _1ac699a1a_build_type(jule::Ref<_1aaeea1c4_TypeDecl> _11219_t) {
	if ((!(jule::real(_11219_t)))) {
		return jule::new_ref<_1ad3e617d_TypeSymbol>();
	}
	return jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(_11219_t,jule::Ref<_1ad3e617d_TypeKind>()));
}



inline jule::Ref<_1acde49c3_Value> _1ac699a1a_build_expr(jule::Ref<_1aaeea1c4_Expr> _12119_expr) {
	if ((!(jule::real(_12119_expr)))) {
		return jule::new_ref<_1acde49c3_Value>();
	}
	return jule::new_struct<_1acde49c3_Value>(new( std::nothrow ) _1acde49c3_Value(_12119_expr,jule::Ref<_1acde49c3_Data>()));
}



inline jule::Ref<_1ad3e617d_TypeAlias> _1ac699a1a_build_type_alias(jule::Ref<_1aaeea1c4_TypeAliasDecl> _13125_decl) {
	return jule::new_struct<_1ad3e617d_TypeAlias>(new( std::nothrow ) _1ad3e617d_TypeAlias(_13125_decl->_field_scope,_13125_decl->_field_public,_13125_decl->_field_cpp_linked,jule::Bool(),_13125_decl->_field_token,_13125_decl->_field_ident,_1ac699a1a_build_type(_13125_decl->_field_kind),_1ac699a1a_build_doc(_13125_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



inline jule::Ref<_1ab064271_Field> _1ac699a1a_build_field(jule::Ref<_1aaeea1c4_FieldDecl> _14320_decl) {
	return jule::new_struct<_1ab064271_Field>(new( std::nothrow ) _1ab064271_Field(jule::Ref<_1ab064271_Struct>(),_14320_decl->_field_token,_14320_decl->_field_public,_14320_decl->_field_mutable,_14320_decl->_field_ident,_1ac699a1a_build_type(_14320_decl->_field_kind)));
}



inline jule::Slice<jule::Ref<_1ab064271_Field>> _1ac699a1a_build_fields(jule::Slice<jule::Ref<_1aaeea1c4_FieldDecl>> _15321_decls) {
	jule::Slice<jule::Ref<_1ab064271_Field>> _15413_fields = jule::Slice<jule::Ref<_1ab064271_Field>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_15321_decls.len())));
	{
		auto _range_expr = _15321_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac699a1a_i = 0;
			jule::Ref<_1aaeea1c4_FieldDecl> _1ac699a1a_decl = *_range_begin;
			_iter_begin_4443289808:;
			{
				_15413_fields[static_cast<jule::Int>(_1ac699a1a_i)]=_1ac699a1a_build_field(_1ac699a1a_decl);
			}
			_iter_next_4443289808:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac699a1a_i; _1ac699a1a_decl = *_range_begin; goto _iter_begin_4443289808; }
			_iter_end_4443289808:;
		}
	}
	return _15413_fields;
}



inline jule::Ref<_1ab064271_Struct> _1ac699a1a_build_struct(jule::Ref<_1aaeea1c4_StructDecl> _16121_decl) {
	return jule::new_struct<_1ab064271_Struct>(new( std::nothrow ) _1ab064271_Struct(jule::Ref<_1ac7ccb09_Sema>(),jule::Slice<jule::Ref<_1ab064271_Struct>>(),jule::Slice<jule::Ref<_1ab064271_Struct>>(),_16121_decl->_field_token,_16121_decl->_field_ident,_1ac699a1a_build_fields(_16121_decl->_field_fields),jule::Slice<jule::Ref<_1ab07a50c_Fn>>(),_16121_decl->_field_public,_16121_decl->_field_cpp_linked,_16121_decl->_field_directives,_1ac699a1a_build_doc(_16121_decl->_field_doc_comments),_16121_decl->_field_generics,jule::Slice<jule::Ref<_1ac276c57_Trait>>(),jule::Slice<jule::Ref<_1ab064271_StructIns>>()));
}



inline jule::Ref<_1ab07a50c_Param> _1ac699a1a_build_param(jule::Ref<_1aaeea1c4_ParamDecl> _17420_decl) {
	return jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_17420_decl->_field_token,_17420_decl->_field_mutable,_17420_decl->_field_variadic,_17420_decl->_field_reference,_1ac699a1a_build_type(_17420_decl->_field_kind),_17420_decl->_field_ident));
}



inline jule::Slice<jule::Ref<_1ab07a50c_Param>> _1ac699a1a_build_params(jule::Slice<jule::Ref<_1aaeea1c4_ParamDecl>> _18521_decls) {
	jule::Slice<jule::Ref<_1ab07a50c_Param>> _18613_params = jule::Slice<jule::Ref<_1ab07a50c_Param>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_18521_decls.len())));
	{
		auto _range_expr = _18521_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac699a1a_i = 0;
			jule::Ref<_1aaeea1c4_ParamDecl> _1ac699a1a_decl = *_range_begin;
			_iter_begin_4443303280:;
			{
				_18613_params[static_cast<jule::Int>(_1ac699a1a_i)]=_1ac699a1a_build_param(_1ac699a1a_decl);
			}
			_iter_next_4443303280:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac699a1a_i; _1ac699a1a_decl = *_range_begin; goto _iter_begin_4443303280; }
			_iter_end_4443303280:;
		}
	}
	return _18613_params;
}



inline jule::Ref<_1ab07a50c_RetType> _1ac699a1a_build_ret_type(jule::Ref<_1aaeea1c4_RetTypeDecl> _19323_decl) {
	if ((_19323_decl->_field_idents == nullptr) && (!(jule::real(_19323_decl->_field_kind)))) {
		return jule::new_ref<_1ab07a50c_RetType>();
	}
	return jule::new_struct<_1ab07a50c_RetType>(new( std::nothrow ) _1ab07a50c_RetType(_1ac699a1a_build_type(_19323_decl->_field_kind),_19323_decl->_field_idents));
}



inline jule::Ref<_1ab07a50c_Fn> _1ac699a1a_build_fn(jule::Ref<_1aaeea1c4_FnDecl> _20317_decl) {
	return jule::new_struct<_1ab07a50c_Fn>(new( std::nothrow ) _1ab07a50c_Fn(jule::Ref<_1ac7ccb09_Sema>(),_20317_decl->_field_token,_20317_decl->_field_global,_20317_decl->_field_unsafety,_20317_decl->_field_public,_20317_decl->_field_cpp_linked,_20317_decl->_field_statically,_20317_decl->_field_ident,_20317_decl->_field_directives,_1ac699a1a_build_doc(_20317_decl->_field_doc_comments),_20317_decl->_field_scope,_20317_decl->_field_generics,_1ac699a1a_build_ret_type(_20317_decl->_field_result),_1ac699a1a_build_params(_20317_decl->_field_params),jule::Ref<_1ab064271_Struct>(),jule::Slice<jule::Ref<_1ab07a50c_FnIns>>()));
}



inline jule::Slice<jule::Ref<_1ab07a50c_Fn>> _1ac699a1a_build_methods(jule::Slice<jule::Ref<_1aaeea1c4_FnDecl>> _22122_decls) {
	jule::Slice<jule::Ref<_1ab07a50c_Fn>> _22213_methods = jule::Slice<jule::Ref<_1ab07a50c_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_22122_decls.len())));
	{
		auto _range_expr = _22122_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac699a1a_i = 0;
			jule::Ref<_1aaeea1c4_FnDecl> _1ac699a1a_decl = *_range_begin;
			_iter_begin_4443318864:;
			{
				_22213_methods[static_cast<jule::Int>(_1ac699a1a_i)]=_1ac699a1a_build_fn(_1ac699a1a_decl);
			}
			_iter_next_4443318864:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac699a1a_i; _1ac699a1a_decl = *_range_begin; goto _iter_begin_4443318864; }
			_iter_end_4443318864:;
		}
	}
	return _22213_methods;
}



inline jule::Ref<_1ac276c57_Trait> _1ac699a1a_build_trait(jule::Ref<_1aaeea1c4_TraitDecl> _22920_decl) {
	return jule::new_struct<_1ac276c57_Trait>(new( std::nothrow ) _1ac276c57_Trait(_22920_decl->_field_token,_22920_decl->_field_ident,_22920_decl->_field_public,_1ac699a1a_build_doc(_22920_decl->_field_doc_comments),_1ac699a1a_build_methods(_22920_decl->_field_methods),jule::Slice<jule::Ref<_1ab064271_Struct>>()));
}



inline jule::Ref<_1ac7804a2_EnumItem> _1ac699a1a_build_enum_item(jule::Ref<_1aaeea1c4_EnumItemDecl> _23924_decl) {
	return jule::new_struct<_1ac7804a2_EnumItem>(new( std::nothrow ) _1ac7804a2_EnumItem(_23924_decl->_field_token,_23924_decl->_field_ident,_1ac699a1a_build_expr(_23924_decl->_field_expr)));
}



inline jule::Slice<jule::Ref<_1ac7804a2_EnumItem>> _1ac699a1a_build_enum_items(jule::Slice<jule::Ref<_1aaeea1c4_EnumItemDecl>> _24725_decls) {
	jule::Slice<jule::Ref<_1ac7804a2_EnumItem>> _24813_items = jule::Slice<jule::Ref<_1ac7804a2_EnumItem>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_24725_decls.len())));
	{
		auto _range_expr = _24725_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac699a1a_i = 0;
			jule::Ref<_1aaeea1c4_EnumItemDecl> _1ac699a1a_decl = *_range_begin;
			_iter_begin_4443330416:;
			{
				_24813_items[static_cast<jule::Int>(_1ac699a1a_i)]=_1ac699a1a_build_enum_item(_1ac699a1a_decl);
			}
			_iter_next_4443330416:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac699a1a_i; _1ac699a1a_decl = *_range_begin; goto _iter_begin_4443330416; }
			_iter_end_4443330416:;
		}
	}
	return _24813_items;
}



inline jule::Ref<_1ac7804a2_Enum> _1ac699a1a_build_enum(jule::Ref<_1aaeea1c4_EnumDecl> _25519_decl) {
	return jule::new_struct<_1ac7804a2_Enum>(new( std::nothrow ) _1ac7804a2_Enum(_25519_decl->_field_token,_25519_decl->_field_public,_25519_decl->_field_ident,_1ac699a1a_build_type(_25519_decl->_field_kind),_1ac699a1a_build_enum_items(_25519_decl->_field_items),_1ac699a1a_build_doc(_25519_decl->_field_doc_comments)));
}



inline jule::Ref<_1aca3647d_Var> _1ac699a1a_build_var(jule::Ref<_1aaeea1c4_VarDecl> _26618_decl) {
	return jule::new_struct<_1aca3647d_Var>(new( std::nothrow ) _1aca3647d_Var(jule::Ref<_1ac77dd1e_Scope>(),_26618_decl->_field_token,_26618_decl->_field_ident,_26618_decl->_field_cpp_linked,_26618_decl->_field_constant,_26618_decl->_field_mutable,_26618_decl->_field_public,jule::Bool(),_26618_decl->_field_statically,_26618_decl->_field_reference,_1ac699a1a_build_doc(_26618_decl->_field_doc_comments),_1ac699a1a_build_type(_26618_decl->_field_kind),_1ac699a1a_build_expr(_26618_decl->_field_expr),_1ac699a1a_ReferenceStack::_static_method_new(),_26618_decl->_field_directives,jule::Slice<jule::Ref<_1aca3647d_Var>>()));
}



inline jule::Ref<_1ac780837_Impl> _1ac699a1a_build_impl(jule::Ref<_1aaeea1c4_Impl> _28419_decl) {
	return jule::new_struct<_1ac780837_Impl>(new( std::nothrow ) _1ac780837_Impl(_28419_decl->_field_base,_28419_decl->_field_dest,_1ac699a1a_build_methods(_28419_decl->_field_methods)));
}



inline jule::Ref<_1ac77dd1e_ScopeChecker> _1ac77dd1e_new_scope_checker_base(jule::Ref<_1ac7ccb09_Sema> _3831_s,jule::Ref<_1ab07a50c_FnIns> _3845_owner) {
	return jule::new_struct<_1ac77dd1e_ScopeChecker>(new( std::nothrow ) _1ac77dd1e_ScopeChecker(_3831_s,_3845_owner,jule::Ref<_1ac77dd1e_ScopeChecker>(),jule::Int(),jule::new_struct<_1acd9639d_SymbolTable>(new( std::nothrow ) _1acd9639d_SymbolTable()),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1aaeea1c4_ScopeTree>(),jule::Uintptr(),jule::Uintptr(),jule::Ref<jule::Slice<jule::Ref<_1ac77dd1e_ScopeLabel>>>(),jule::Ref<jule::Slice<jule::Ref<_1ac77dd1e_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ref<_1ac77dd1e_ScopeChecker> _1ac77dd1e_new_scope_checker(jule::Ref<_1ac7ccb09_Sema> _4626_s,jule::Ref<_1ab07a50c_FnIns> _4640_owner) {
	jule::Ref<_1ac77dd1e_ScopeChecker> _4713_base = _1ac77dd1e_new_scope_checker_base(_4626_s,_4640_owner);
	_4713_base->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_1ac77dd1e_ScopeLabel>>>(nullptr);
	_4713_base->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_1ac77dd1e_ScopeGoto>>>(nullptr);
	return _4713_base;
}



inline jule::Ref<_1ac77dd1e_ScopeLabel> _1ac77dd1e_find_label_parent(jule::Str _5622_ident,jule::Ref<_1ac77dd1e_ScopeChecker> _5638_scope) {
	jule::Ref<_1ac77dd1e_ScopeLabel> _5713_label = _5638_scope->_method_find_label_scope(_5622_ident);
	_iter_begin_4443355088:;
	if (!((!(jule::real(_5713_label))))) { goto _iter_end_4443355088; }
	{
		if ((!(jule::real(_5638_scope->_field_parent))) || jule::real(_5638_scope->_field_owner)) {
			return jule::new_ref<_1ac77dd1e_ScopeLabel>();
		}
		_5638_scope=_5638_scope->_field_parent;
		_5713_label=_5638_scope->_method_find_label_scope(_5622_ident);
	}
	_iter_next_4443355088:;
	goto _iter_begin_4443355088;
	_iter_end_4443355088:;
	return _5713_label;
}



inline jule::Int _1ac77dd1e_count_match_type(jule::Ref<_1ac77dd1e_Match> _7021_m,jule::Ref<_1ad3e617d_TypeKind> _7032_t) {
	jule::Int _7113_n = 0LL;
	jule::Str _729_kind = _7032_t->_method_to_str();
	_julec_label_loop:;
	{
		auto _range_expr = _7021_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac77dd1e_Case> _1ac77dd1e_c = *_range_begin;
			_iter_begin_4443365728:;
			{
				if ((!(jule::real(_1ac77dd1e_c)))) {
					goto _iter_next_4443365728;
				}
				{
					auto _range_expr = _1ac77dd1e_c->_field_exprs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Any _1ac77dd1e_expr = *_range_begin;
						_iter_begin_4443368320:;
						{
							if (_1ac77dd1e_expr == nullptr) {
								goto _iter_end_4443365728;
							}
							if (_729_kind == _1ac77dd1e_expr.operator jule::Ref<_1ad3e617d_TypeKind>()->_method_to_str()) {
								(_7113_n)++;
							}
						}
						_iter_next_4443368320:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ac77dd1e_expr = *_range_begin; goto _iter_begin_4443368320; }
						_iter_end_4443368320:;
					}
				}
			}
			_iter_next_4443365728:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac77dd1e_c = *_range_begin; goto _iter_begin_4443365728; }
			_iter_end_4443365728:;
		}
	}
	return _7113_n;
}



inline jule::Slice<jule::Ref<_1acde49c3_Data>> _1ac77dd1e_get_datas_from_tuple_data(jule::Ref<_1acde49c3_Data> _9434_d) {
	if (jule::real(_9434_d->_field_kind->_method_tup())) {
		{
			auto _match_expr{ _9434_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_TupleExprModel>>())) { goto _case_end_4443375744; }
			_case_begin_4443375744:;
			{
				return _9434_d->_field_model.operator jule::Ref<_1ab0a4954_TupleExprModel>()->_field_datas;
			}
			goto _match_end_4443373728;
			_case_end_4443375744:;
			_case_begin_4443374416:;
			{
				jule::Ref<_1ad3e617d_Tuple> _10121_t = _9434_d->_field_kind->_method_tup();
				jule::Slice<jule::Ref<_1acde49c3_Data>> _10221_r = jule::Slice<jule::Ref<_1acde49c3_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_10121_t->_field_types.len())));
				{
					auto _range_expr = _10121_t->_field_types;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1ac77dd1e_i = 0;
						jule::Ref<_1ad3e617d_TypeKind> _1ac77dd1e_kind = *_range_begin;
						_iter_begin_4443380640:;
						{
							_10221_r[static_cast<jule::Int>(_1ac77dd1e_i)]=jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(_1ac77dd1e_kind,jule::Ref<_1ad3e617d_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
						}
						_iter_next_4443380640:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1ac77dd1e_i; _1ac77dd1e_kind = *_range_begin; goto _iter_begin_4443380640; }
						_iter_end_4443380640:;
					}
				}
				return _10221_r;
			}
			goto _match_end_4443373728;
			_case_end_4443374416:;
			_match_end_4443373728:;
		}
	} else {
		return jule::Slice<jule::Ref<_1acde49c3_Data>>({_9434_d});
	}
}



inline jule::Slice<jule::Any> _1ac77dd1e_get_expr_models(jule::Any _11624_m) {
	{
		auto _match_expr{ _11624_m };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_TupleExpr>>())) { goto _case_end_4443388576; }
		_case_begin_4443388576:;
		{
			jule::Ref<_1aaeea1c4_TupleExpr> _11917_tup = _11624_m.operator jule::Ref<_1aaeea1c4_TupleExpr>();
			jule::Slice<jule::Any> _12017_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_11917_tup->_field_expr.len())));
			{
				auto _range_expr = _11917_tup->_field_expr;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_1aaeea1c4_Expr> _1ac77dd1e_expr = *_range_begin;
					_iter_begin_4443391600:;
					{
						_12017_models=jule::append(_12017_models,jule::Slice<jule::Any>({_1ac77dd1e_expr->_field_kind}));
					}
					_iter_next_4443391600:;
					++_range_begin;
					if (_range_begin != _range_end) { _1ac77dd1e_expr = *_range_begin; goto _iter_begin_4443391600; }
					_iter_end_4443391600:;
				}
			}
			return _12017_models;
		}
		goto _match_end_4443372976;
		_case_end_4443388576:;
		_case_begin_4443373456:;
		{
			return jule::Slice<jule::Any>({_11624_m});
		}
		goto _match_end_4443372976;
		_case_end_4443373456:;
		_match_end_4443372976:;
	}
}



inline jule::Bool _1ac77dd1e_check_mut(jule::Ref<_1ac7ccb09_Sema> _13118_s,jule::Ref<_1acde49c3_Data> _13128_left,jule::Ref<_1acde49c3_Data> _13145_right,_1ab0277b7_Token _13159_error_token) {
	jule::Bool _13181_ok = jule::Bool();
	{
		if (!(((!(_13128_left->_field_mutable))))) { goto _case_end_4443399776; }
		_case_begin_4443399776:;
		{
			_13118_s->_method_push_err(_13159_error_token,jule::Str("cannot assign to immutable define", 33),jule::Slice<jule::Any>({}));
			_13181_ok = false;
			return _13181_ok;
		}
		goto _match_end_4443398096;
		_case_end_4443399776:;
		if (!(((jule::real(_13145_right) && (!(_13145_right->_field_mutable))) && _1ad3e617d_is_mut(_13145_right->_field_kind)))) { goto _case_end_4443399296; }
		_case_begin_4443399296:;
		{
			_13118_s->_method_push_err(_13159_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
			_13181_ok = false;
			return _13181_ok;
		}
		goto _match_end_4443398096;
		_case_end_4443399296:;
		_case_begin_4443398240:;
		{
			_13181_ok = true;
			return _13181_ok;
		}
		goto _match_end_4443398096;
		_case_end_4443398240:;
		_match_end_4443398096:;
	}
}



inline jule::Bool _1ac77dd1e_check_assign(jule::Ref<_1ac7ccb09_Sema> _14621_s,jule::Ref<_1acde49c3_Data> _14635_left,jule::Ref<_1acde49c3_Data> _14652_right,_1ab0277b7_Token _14666_error_token) {
	jule::Bool _14688_ok = jule::Bool();
	jule::Ref<_1ab07a50c_FnIns> _1479_f = _14635_left->_field_kind->_method_fnc();
	if ((jule::real(_1479_f) && jule::real(_1479_f->_field_decl)) && _1479_f->_field_decl->_field_global) {
		_14621_s->_method_push_err(_14666_error_token,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>({}));
		_14688_ok = false;
		return _14688_ok;
	}
	{
		if (!((_14635_left->_method_is_const()))) { goto _case_end_4443415824; }
		_case_begin_4443415824:;
		{
			_14621_s->_method_push_err(_14666_error_token,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>({}));
			_14621_s->_method_push_suggestion(jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>({}));
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4443413440;
		_case_end_4443415824:;
		if (!(((!(_14635_left->_field_lvalue))))) { goto _case_end_4443415328; }
		_case_begin_4443415328:;
		{
			_14621_s->_method_push_err(_14666_error_token,jule::Str("assignment required lvalue", 26),jule::Slice<jule::Any>({}));
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4443413440;
		_case_end_4443415328:;
		if (!(((!(_1ac77dd1e_check_mut(_14621_s,_14635_left,_14652_right,_14666_error_token)))))) { goto _case_end_4443415440; }
		_case_begin_4443415440:;
		{
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4443413440;
		_case_end_4443415440:;
		_case_begin_4443414336:;
		{
			_14688_ok = true;
			return _14688_ok;
		}
		goto _match_end_4443413440;
		_case_end_4443414336:;
		_match_end_4443413440:;
	}
}



inline jule::Bool _1ac77dd1e_is_valid_ast_st_for_next_st(jule::Any _17136_n) {
	{
		auto _match_expr{ _17136_n };
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_AssignSt>>())) { goto _case_end_4443425888; }
		_case_begin_4443425888:;
		{
			return (!(_17136_n.operator jule::Ref<_1aaeea1c4_AssignSt>()->_field_declarative));
		}
		goto _match_end_4443408512;
		_case_end_4443425888:;
		if (!(_match_expr.type_is<jule::Ref<_1aaeea1c4_FnCallExpr>>() || _match_expr.type_is<jule::Ref<_1aaeea1c4_Expr>>())) { goto _case_end_4443426000; }
		_case_begin_4443426000:;
		{
			return true;
		}
		goto _match_end_4443408512;
		_case_end_4443426000:;
		_case_begin_4443424128:;
		{
			return false;
		}
		goto _match_end_4443408512;
		_case_end_4443424128:;
		_match_end_4443408512:;
	}
}



inline jule::Bool _1ac77dd1e_is_valid_st_for_next_st(jule::Any _18528_st) {
	{
		auto _match_expr{ _18528_st };
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_FnCallExprModel>>() || _match_expr.type_is<jule::Ref<_1ac77dd1e_Postfix>>() || _match_expr.type_is<jule::Ref<_1ac77dd1e_Assign>>() || _match_expr.type_is<jule::Ref<_1ac77dd1e_MultiAssign>>())) { goto _case_end_4443429088; }
		_case_begin_4443429088:;
		{
			return true;
		}
		goto _match_end_4443428656;
		_case_end_4443429088:;
		if (!(_match_expr.type_is<jule::Ref<_1acde49c3_Data>>())) { goto _case_end_4443429200; }
		_case_begin_4443429200:;
		{
			{
				auto _match_expr{ _18528_st.operator jule::Ref<_1acde49c3_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_FnCallExprModel>>())) { goto _case_end_4443437072; }
				_case_begin_4443437072:;
				{
					return true;
				}
				goto _match_end_4443430160;
				_case_end_4443437072:;
				_case_begin_4443436768:;
				{
					return false;
				}
				goto _match_end_4443430160;
				_case_end_4443436768:;
				_match_end_4443430160:;
			}
		}
		goto _match_end_4443428656;
		_case_end_4443429200:;
		_case_begin_4443425072:;
		{
			return false;
		}
		goto _match_end_4443428656;
		_case_end_4443425072:;
		_match_end_4443428656:;
	}
}



inline jule::Bool _1ac77dd1e_st_is_def(jule::Any _20414_st) {
	{
		auto _match_expr{ _20414_st };
		if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4443437824; }
		_case_begin_4443437824:;
		{
			return true;
		}
		goto _match_end_4443435344;
		_case_end_4443437824:;
		_case_begin_4443438560:;
		{
			return false;
		}
		goto _match_end_4443435344;
		_case_end_4443438560:;
		_match_end_4443435344:;
	}
}



inline jule::Ref<_1aca3647d_Var> _1ac78be4d_find_var_in_package(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>> _2728_files,jule::Str _2751_ident,jule::Bool _2763_cpp_linked) {
	{
		auto _range_expr = _2728_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac78be4d_f = *_range_begin;
			_iter_begin_4443442240:;
			{
				jule::Ref<_1aca3647d_Var> _2917_v = _1ac78be4d_f->_method_find_var(_2751_ident,_2763_cpp_linked);
				if (jule::real(_2917_v)) {
					return _2917_v;
				}
			}
			_iter_next_4443442240:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac78be4d_f = *_range_begin; goto _iter_begin_4443442240; }
			_iter_end_4443442240:;
		}
	}
	return jule::new_ref<_1aca3647d_Var>();
}



inline jule::Ref<_1ad3e617d_TypeAlias> _1ac78be4d_find_type_alias_in_package(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>> _3935_files,jule::Str _3958_ident,jule::Bool _3970_cpp_linked) {
	{
		auto _range_expr = _3935_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac78be4d_f = *_range_begin;
			_iter_begin_4443449152:;
			{
				jule::Ref<_1ad3e617d_TypeAlias> _4117_ta = _1ac78be4d_f->_method_find_type_alias(_3958_ident,_3970_cpp_linked);
				if (jule::real(_4117_ta)) {
					return _4117_ta;
				}
			}
			_iter_next_4443449152:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac78be4d_f = *_range_begin; goto _iter_begin_4443449152; }
			_iter_end_4443449152:;
		}
	}
	return jule::new_ref<_1ad3e617d_TypeAlias>();
}



inline jule::Ref<_1ab064271_Struct> _1ac78be4d_find_struct_in_package(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>> _5131_files,jule::Str _5154_ident,jule::Bool _5166_cpp_linked) {
	{
		auto _range_expr = _5131_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac78be4d_f = *_range_begin;
			_iter_begin_4443456032:;
			{
				jule::Ref<_1ab064271_Struct> _5317_s = _1ac78be4d_f->_method_find_struct(_5154_ident,_5166_cpp_linked);
				if (jule::real(_5317_s)) {
					return _5317_s;
				}
			}
			_iter_next_4443456032:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac78be4d_f = *_range_begin; goto _iter_begin_4443456032; }
			_iter_end_4443456032:;
		}
	}
	return jule::new_ref<_1ab064271_Struct>();
}



inline jule::Ref<_1ab07a50c_Fn> _1ac78be4d_find_fn_in_package(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>> _6327_files,jule::Str _6350_ident,jule::Bool _6362_cpp_linked) {
	{
		auto _range_expr = _6327_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac78be4d_file = *_range_begin;
			_iter_begin_4443462912:;
			{
				jule::Ref<_1ab07a50c_Fn> _6517_f = _1ac78be4d_file->_method_find_fn(_6350_ident,_6362_cpp_linked);
				if (jule::real(_6517_f)) {
					return _6517_f;
				}
			}
			_iter_next_4443462912:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac78be4d_file = *_range_begin; goto _iter_begin_4443462912; }
			_iter_end_4443462912:;
		}
	}
	return jule::new_ref<_1ab07a50c_Fn>();
}



inline jule::Ref<_1ac276c57_Trait> _1ac78be4d_find_trait_in_package(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>> _7530_files,jule::Str _7553_ident) {
	{
		auto _range_expr = _7530_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac78be4d_f = *_range_begin;
			_iter_begin_4443469568:;
			{
				jule::Ref<_1ac276c57_Trait> _7717_t = _1ac78be4d_f->_method_find_trait(_7553_ident);
				if (jule::real(_7717_t)) {
					return _7717_t;
				}
			}
			_iter_next_4443469568:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac78be4d_f = *_range_begin; goto _iter_begin_4443469568; }
			_iter_end_4443469568:;
		}
	}
	return jule::new_ref<_1ac276c57_Trait>();
}



inline jule::Ref<_1ac7804a2_Enum> _1ac78be4d_find_enum_in_package(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>> _8729_files,jule::Str _8752_ident) {
	{
		auto _range_expr = _8729_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac78be4d_f = *_range_begin;
			_iter_begin_4443475456:;
			{
				jule::Ref<_1ac7804a2_Enum> _8917_e = _1ac78be4d_f->_method_find_enum(_8752_ident);
				if (jule::real(_8917_e)) {
					return _8917_e;
				}
			}
			_iter_next_4443475456:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac78be4d_f = *_range_begin; goto _iter_begin_4443475456; }
			_iter_end_4443475456:;
		}
	}
	return jule::new_ref<_1ac7804a2_Enum>();
}



inline _1d068165a_Log _1ac7ccb09_compiler_err(_1ab0277b7_Token _1617_token,jule::Bool _1631_line,jule::Str _1643_fmt,jule::Slice<jule::Any> _1656_args) {
	_1d068165a_Log _1713_log = _1d068165a_Log(1LLU,_1617_token._field_row,_1617_token._field_column,_1617_token._field_file->_method_path(),_1d068165a_logf(_1643_fmt,_1656_args),jule::Str(),jule::Str());
	if (_1631_line) {
		_1713_log._field_line=_1617_token._field_file->_method_get_row(_1617_token._field_row);
	}
	return _1713_log;
}



inline jule::Bool _1ac7ccb09_imp_is_lookupable(jule::Ref<_1ac78be4d_ImportInfo> _3022_i,jule::Str _3038_ident) {
	if (_3022_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_3022_i->_field_import_all))) {
		if (_3022_i->_field_selected.len() > 0LL) {
			return _3022_i->_method_exist_ident(_3038_ident);
		}
	}
	return _3022_i->_field_import_all;
}



inline jule::Slice<jule::Ref<_1aca3647d_Var>> _1ac7ccb09_build_ret_vars(jule::Ref<_1ab07a50c_FnIns> _4323_f) {
	if (_4323_f->_field_decl->_method_is_void() || (!(jule::real(_4323_f->_field_result)))) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1aca3647d_Var>> _4813_vars = nullptr;
	jule::Slice<jule::Ref<_1ad3e617d_TypeKind>> _4913_types = _1acc33119_get_fn_result_types(_4323_f);
	{
		auto _range_expr = _4323_f->_field_decl->_field_result->_field_idents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac7ccb09_i = 0;
			_1ab0277b7_Token _1ac7ccb09_ident = *_range_begin;
			_iter_begin_4443500080:;
			{
				if (_1ab0277b7_is_ignore_ident(_1ac7ccb09_ident._field_kind)) {
					goto _iter_next_4443500080;
				}
				jule::Ref<_1aca3647d_Var> _5517_v = jule::new_struct<_1aca3647d_Var>(new( std::nothrow ) _1aca3647d_Var(_4323_f->_field_scope,_1ac7ccb09_ident,_1ac7ccb09_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),_4913_types[static_cast<jule::Int>(_1ac7ccb09_i)])),jule::new_struct<_1acde49c3_Value>(new( std::nothrow ) _1acde49c3_Value(jule::Ref<_1aaeea1c4_Expr>(),jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data()))),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Slice<jule::Ref<_1aaeea1c4_Directive>>(),jule::Slice<jule::Ref<_1aca3647d_Var>>()));
				_4813_vars=jule::append(_4813_vars,jule::Slice<jule::Ref<_1aca3647d_Var>>({_5517_v}));
			}
			_iter_next_4443500080:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac7ccb09_i; _1ac7ccb09_ident = *_range_begin; goto _iter_begin_4443500080; }
			_iter_end_4443500080:;
		}
	}
	return _4813_vars;
}



inline jule::Slice<jule::Ref<_1aca3647d_Var>> _1ac7ccb09_build_param_vars(jule::Ref<_1ab07a50c_FnIns> _7225_f) {
	if (_7225_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1aca3647d_Var>> _7713_vars = jule::Slice<jule::Ref<_1aca3647d_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_7225_f->_field_params.len())));
	{
		auto _range_expr = _7225_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac7ccb09_i = 0;
			jule::Ref<_1ab07a50c_ParamIns> _1ac7ccb09_p = *_range_begin;
			_iter_begin_4443513536:;
			{
				jule::Ref<_1aca3647d_Var> _7917_v = jule::new_struct<_1aca3647d_Var>(new( std::nothrow ) _1aca3647d_Var(_7225_f->_field_scope,_1ac7ccb09_p->_field_decl->_field_token,_1ac7ccb09_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_1ac7ccb09_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol()),jule::new_struct<_1acde49c3_Value>(new( std::nothrow ) _1acde49c3_Value(jule::Ref<_1aaeea1c4_Expr>(),jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data()))),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Slice<jule::Ref<_1aaeea1c4_Directive>>(),jule::Slice<jule::Ref<_1aca3647d_Var>>()));
				{
					if (!((_1ac7ccb09_p->_field_decl->_method_is_self()))) { goto _case_end_4443521504; }
					_case_begin_4443521504:;
					{
						_7917_v->_field_kind->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_7225_f->_field_owner));
						_7917_v->_field_reference=true;
						if (_1ac7ccb09_p->_field_decl->_method_is_ref()) {
							_7917_v->_field_ident=_7917_v->_field_ident.slice(1LL);
							_7917_v->_field_kind->_field_kind->_field_kind=jule::new_struct<_1ad3e617d_Ref>(new( std::nothrow ) _1ad3e617d_Ref(_7917_v->_field_kind->_field_kind->_method_clone()));
						}
					}
					goto _match_end_4443520544;
					_case_end_4443521504:;
					if (!((_1ac7ccb09_p->_field_decl->_field_variadic))) { goto _case_end_4443524400; }
					_case_begin_4443524400:;
					{
						_7917_v->_field_kind->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ad3e617d_Slc>(new( std::nothrow ) _1ad3e617d_Slc(_1ac7ccb09_p->_field_kind->_method_clone()))));
					}
					goto _match_end_4443520544;
					_case_end_4443524400:;
					_case_begin_4443520672:;
					{
						_7917_v->_field_kind->_field_kind=_1ac7ccb09_p->_field_kind->_method_clone();
					}
					goto _match_end_4443520544;
					_case_end_4443520672:;
					_match_end_4443520544:;
				}
				_7713_vars[static_cast<jule::Int>(_1ac7ccb09_i)]=_7917_v;
			}
			_iter_next_4443513536:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac7ccb09_i; _1ac7ccb09_p = *_range_begin; goto _iter_begin_4443513536; }
			_iter_end_4443513536:;
		}
	}
	return _7713_vars;
}



inline jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>> _1ac7ccb09_build_generic_type_aliases(jule::Ref<_1ab07a50c_FnIns> _12035_f) {
	jule::I64 _12113_size = _12035_f->_field_generics.len();
	if (jule::real(_12035_f->_field_decl->_field_owner)) {
		_12113_size+=static_cast<jule::I64>(_12035_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_12113_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>> _13013_aliases = jule::Slice<jule::Ref<_1ad3e617d_TypeAlias>>::alloc(static_cast<jule::Int>(_12113_size));
	{
		auto _range_expr = _12035_f->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac7ccb09_i = 0;
			jule::Ref<_1ad3e617d_TypeKind> _1ac7ccb09_g = *_range_begin;
			_iter_begin_4443541904:;
			{
				jule::Ref<_1aaeea1c4_GenericDecl> _13317_decl = _12035_f->_field_decl->_field_generics[static_cast<jule::Int>(_1ac7ccb09_i)];
				_13013_aliases[static_cast<jule::Int>(_1ac7ccb09_i)]=jule::new_struct<_1ad3e617d_TypeAlias>(new( std::nothrow ) _1ad3e617d_TypeAlias(_12035_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_13317_decl->_field_token,_13317_decl->_field_ident,jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),_1ac7ccb09_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_4443541904:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac7ccb09_i; _1ac7ccb09_g = *_range_begin; goto _iter_begin_4443541904; }
			_iter_end_4443541904:;
		}
	}
	if (jule::real(_12035_f->_field_decl->_field_owner)) {
		jule::Ref<_1ab064271_StructIns> _14417_owner = _12035_f->_field_owner;
		{
			auto _range_expr = _14417_owner->_field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1ac7ccb09_i = 0;
				jule::Ref<_1ad3e617d_TypeKind> _1ac7ccb09_g = *_range_begin;
				_iter_begin_4443550624:;
				{
					jule::Ref<_1aaeea1c4_GenericDecl> _14621_decl = _14417_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1ac7ccb09_i)];
					_13013_aliases[static_cast<jule::Int>(_12035_f->_field_generics.len() + _1ac7ccb09_i)]=jule::new_struct<_1ad3e617d_TypeAlias>(new( std::nothrow ) _1ad3e617d_TypeAlias(_12035_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_14621_decl->_field_token,_14621_decl->_field_ident,jule::new_struct<_1ad3e617d_TypeSymbol>(new( std::nothrow ) _1ad3e617d_TypeSymbol(jule::Ref<_1aaeea1c4_TypeDecl>(),_1ac7ccb09_g)),jule::Str(),jule::Slice<jule::Any>()));
				}
				_iter_next_4443550624:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1ac7ccb09_i; _1ac7ccb09_g = *_range_begin; goto _iter_begin_4443550624; }
				_iter_end_4443550624:;
			}
		}
	}
	return _13013_aliases;
}



inline jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_find_file(jule::Slice<jule::Ref<_1acd9639d_SymbolTable>> _16018_files,jule::Ref<_1ab029324_File> _16041_handler) {
	{
		auto _range_expr = _16018_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1ac7ccb09_fl = *_range_begin;
			_iter_begin_4443552416:;
			{
				if ((_1ac7ccb09_fl->_field_file).alloc == (_16041_handler).alloc) {
					return _1ac7ccb09_fl;
				}
			}
			_iter_next_4443552416:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_fl = *_range_begin; goto _iter_begin_4443552416; }
			_iter_end_4443552416:;
		}
	}
	return jule::new_ref<_1acd9639d_SymbolTable>();
}



inline std::tuple<jule::Bool,jule::Bool> _1ac7ccb09_conditional_has_ret(jule::Ref<_1ac77dd1e_Conditional> _16928_c) {
	jule::Bool _16947_ok = jule::Bool();
	jule::Bool _16957_breaking = jule::Bool();
	jule::Bool _17013_breaked = false;
	{
		auto _range_expr = _16928_c->_field_elifs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac77dd1e_If> _1ac7ccb09_elif = *_range_begin;
			_iter_begin_4443564640:;
			{
				if ((!(jule::real(_1ac7ccb09_elif)))) {
					_16947_ok = false;
					_16957_breaking = false;
					return std::make_tuple(_16947_ok,_16957_breaking);
				}
				std::tie(_16947_ok,std::ignore,_16957_breaking) = _1ac7ccb09___has_ret(_1ac7ccb09_elif->_field_scope);
				_17013_breaked=_17013_breaked || _16957_breaking;
				if ((!(_16947_ok))) {
					_16947_ok = false;
					_16957_breaking = _17013_breaked;
					return std::make_tuple(_16947_ok,_16957_breaking);
				}
			}
			_iter_next_4443564640:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_elif = *_range_begin; goto _iter_begin_4443564640; }
			_iter_end_4443564640:;
		}
	}
	if ((!(jule::real(_16928_c->_field_default)))) {
		_16947_ok = false;
		_16957_breaking = _17013_breaked;
		return std::make_tuple(_16947_ok,_16957_breaking);
	}
	std::tie(_16947_ok,std::ignore,_16957_breaking) = _1ac7ccb09___has_ret(_16928_c->_field_default->_field_scope);
	_17013_breaked=_17013_breaked || _16957_breaking;
	_16947_ok = _16947_ok;
	_16957_breaking = _17013_breaked;
	return std::make_tuple(_16947_ok,_16957_breaking);
}



inline jule::Bool _1ac7ccb09_match_has_ret(jule::Ref<_1ac77dd1e_Match> _19122_m) {
	if ((!(jule::real(_19122_m->_field_default)))) {
		return false;
	}
	jule::Bool _19613_ok = true;
	jule::Bool _19713_falled = false;
	jule::Bool _19813_breaked = false;
	{
		auto _range_expr = _19122_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac77dd1e_Case> _1ac7ccb09_c = *_range_begin;
			_iter_begin_4443578672:;
			{
				if ((!(jule::real(_1ac7ccb09_c)))) {
					return false;
				}
				std::tie(_19613_ok,_19713_falled,_19813_breaked) = _1ac7ccb09___has_ret(_1ac7ccb09_c->_field_scope);
				if (((!(_19613_ok)) && (!(_19713_falled))) || _19813_breaked) {
					return false;
				}
				{
					if (!(((!(_19613_ok))))) { goto _case_end_4443583056; }
					_case_begin_4443583056:;
					{
						if ((!(_19713_falled))) {
							return false;
						}
						goto _case_begin_4443583168;
					}
					goto _match_end_4443582672;
					_case_end_4443583056:;
					if (!((_19713_falled))) { goto _case_end_4443583168; }
					_case_begin_4443583168:;
					{
						if ((!(jule::real(_1ac7ccb09_c->_field_next)))) {
							return false;
						}
						goto _iter_next_4443578672;
					}
					goto _match_end_4443582672;
					_case_end_4443583168:;
					_match_end_4443582672:;
				}
				_19713_falled=false;
			}
			_iter_next_4443578672:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_c = *_range_begin; goto _iter_begin_4443578672; }
			_iter_end_4443578672:;
		}
	}
	return _1ac7ccb09_has_ret(_19122_m->_field_default->_field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1ac7ccb09___has_ret(jule::Ref<_1ac77dd1e_Scope> _22718_s) {
	jule::Bool _22731_ok = jule::Bool();
	jule::Bool _22741_falled = jule::Bool();
	jule::Bool _22755_breaked = jule::Bool();
	if ((!(jule::real(_22718_s)))) {
		_22731_ok = false;
		_22741_falled = false;
		_22755_breaked = false;
		return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
	}
	{
		auto _range_expr = _22718_s->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1ac7ccb09_st = *_range_begin;
			_iter_begin_4443591216:;
			{
				{
					auto _match_expr{ _1ac7ccb09_st };
					if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_FallSt>>())) { goto _case_end_4443595296; }
					_case_begin_4443595296:;
					{
						_22741_falled=true;
					}
					goto _match_end_4443594032;
					_case_end_4443595296:;
					if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_BreakSt>>())) { goto _case_end_4443595424; }
					_case_begin_4443595424:;
					{
						_22731_ok = false;
						_22741_falled = false;
						_22755_breaked = true;
						return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
					}
					goto _match_end_4443594032;
					_case_end_4443595424:;
					if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_RetSt>>())) { goto _case_end_4443595552; }
					_case_begin_4443595552:;
					{
						_22731_ok = true;
						_22741_falled = _22741_falled;
						_22755_breaked = _22755_breaked;
						return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
					}
					goto _match_end_4443594032;
					_case_end_4443595552:;
					if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Scope>>())) { goto _case_end_4443595680; }
					_case_begin_4443595680:;
					{
						jule::Bool _24417_ok = _1ac7ccb09_has_ret(_1ac7ccb09_st.operator jule::Ref<_1ac77dd1e_Scope>());
						if (_24417_ok) {
							_22731_ok = true;
							_22741_falled = false;
							_22755_breaked = false;
							return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
						}
					}
					goto _match_end_4443594032;
					_case_end_4443595680:;
					if (!(_match_expr.type_is<jule::Ref<_1acde49c3_Data>>())) { goto _case_end_4443595808; }
					_case_begin_4443595808:;
					{
						{
							auto _match_expr{ _1ac7ccb09_st.operator jule::Ref<_1acde49c3_Data>()->_field_model };
							if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BuiltinPanicCallExprModel>>())) { goto _case_end_4443608864; }
							_case_begin_4443608864:;
							{
								_22731_ok = true;
								_22741_falled = _22741_falled;
								_22755_breaked = _22755_breaked;
								return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
							}
							goto _match_end_4443608224;
							_case_end_4443608864:;
							_match_end_4443608224:;
						}
					}
					goto _match_end_4443594032;
					_case_end_4443595808:;
					if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Recover>>())) { goto _case_end_4443595936; }
					_case_begin_4443595936:;
					{
						jule::Bool _25618_ok;
						jule::Bool _25622_falled;
						jule::Bool _25630_breaked;
						std::tie(_25618_ok,_25622_falled,_25630_breaked) = _1ac7ccb09___has_ret(_1ac7ccb09_st.operator jule::Ref<_1ac77dd1e_Recover>()->_field_scope);
						if (_25618_ok) {
							_22731_ok = true;
							_22741_falled = _25622_falled;
							_22755_breaked = _25630_breaked;
							return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
						}
					}
					goto _match_end_4443594032;
					_case_end_4443595936:;
					if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Conditional>>())) { goto _case_end_4443596064; }
					_case_begin_4443596064:;
					{
						jule::Bool _26218_ok;
						jule::Bool _26222_breaking;
						std::tie(_26218_ok,_26222_breaking) = _1ac7ccb09_conditional_has_ret(_1ac7ccb09_st.operator jule::Ref<_1ac77dd1e_Conditional>());
						if (_26218_ok) {
							_22731_ok = true;
							_22741_falled = false;
							_22755_breaked = false;
							return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
						}
						if (_26222_breaking) {
							_22731_ok = false;
							_22741_falled = false;
							_22755_breaked = _22755_breaked;
							return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
						}
					}
					goto _match_end_4443594032;
					_case_end_4443596064:;
					if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Match>>())) { goto _case_end_4443596192; }
					_case_begin_4443596192:;
					{
						jule::Bool _27217_ok = _1ac7ccb09_match_has_ret(_1ac7ccb09_st.operator jule::Ref<_1ac77dd1e_Match>());
						if (_27217_ok) {
							_22731_ok = true;
							_22741_falled = false;
							_22755_breaked = false;
							return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
						}
					}
					goto _match_end_4443594032;
					_case_end_4443596192:;
					_match_end_4443594032:;
				}
			}
			_iter_next_4443591216:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac7ccb09_st = *_range_begin; goto _iter_begin_4443591216; }
			_iter_end_4443591216:;
		}
	}
	_22731_ok = false;
	_22741_falled = _22741_falled;
	_22755_breaked = _22755_breaked;
	return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
}



inline jule::Bool _1ac7ccb09_has_ret(jule::Ref<_1ac77dd1e_Scope> _28216_s) {
	jule::Bool _28310_ok;
	std::tie(_28310_ok,std::ignore,std::ignore) = _1ac7ccb09___has_ret(_28216_s);
	return _28310_ok;
}



inline void _1ac7ccb09_push_suggestion(_1d068165a_Log* _28731_log,jule::Str _28742_fmt,jule::Slice<jule::Any> _28755_args) {
	_28731_log->_field_suggestion=_1d068165a_logf(_28742_fmt,_28755_args);
}



inline jule::Slice<jule::Ref<_1ad3e617d_TypeKind>> _1acc33119_get_fn_result_types(jule::Ref<_1ab07a50c_FnIns> _2528_f) {
	{
		if (!((_2528_f->_field_decl->_method_is_void() || (!(jule::real(_2528_f->_field_result)))))) { goto _case_end_4443636272; }
		_case_begin_4443636272:;
		{
			return nullptr;
		}
		goto _match_end_4443634704;
		_case_end_4443636272:;
		if (!(((!(jule::real(_2528_f->_field_result->_method_tup())))))) { goto _case_end_4443637296; }
		_case_begin_4443637296:;
		{
			return jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>({_2528_f->_field_result});
		}
		goto _match_end_4443634704;
		_case_end_4443637296:;
		_case_begin_4443634816:;
		{
			return _2528_f->_field_result->_method_tup()->_field_types;
		}
		goto _match_end_4443634704;
		_case_end_4443634816:;
		_match_end_4443634704:;
	}
}



inline jule::Bool _1acc33119_trait_has_reference_receiver(jule::Ref<_1ac276c57_Trait> _3833_t) {
	{
		auto _range_expr = _3833_t->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1acc33119_f = *_range_begin;
			_iter_begin_4443639536:;
			{
				if (_1acc33119_f->_field_statically) {
					goto _iter_next_4443639536;
				}
				jule::Ref<_1ab07a50c_Param> _4513_p = _1acc33119_f->_field_params[0LL];
				if (_4513_p->_method_is_ref() && _4513_p->_method_is_self()) {
					return true;
				}
			}
			_iter_next_4443639536:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acc33119_f = *_range_begin; goto _iter_begin_4443639536; }
			_iter_end_4443639536:;
		}
	}
	return false;
}



inline jule::Bool _1acc33119_float_assignable(jule::Str _5321_kind,jule::Ref<_1acde49c3_Data> _5332_d) {
	jule::Str _549_value = _1b6c49115_fmt_float(static_cast<jule::F64>(_5332_d->_field_constant->_method_read_f64()),'e',-1LL,64LL);
	return _1ad6d7e31_check_bit_float(_549_value,static_cast<jule::Int>(_1ad6d7e31_bitsize_of(_5321_kind)));
}



inline jule::Bool _1acc33119_sig_assignable(jule::Str _5819_kind,jule::Ref<_1acde49c3_Data> _5830_d) {
	jule::F64 _599_min = _1ad6d61a4_min(_5819_kind);
	jule::F64 _609_max = _1ad6d61a4_max(_5819_kind);
	{
		if (!((_5830_d->_field_constant->_method_is_f64()))) { goto _case_end_4443655072; }
		_case_begin_4443655072:;
		{
			jule::F64 _6413_x = static_cast<jule::F64>(_5830_d->_field_constant->_method_read_f64());
			jule::F64 _6514_i;
			jule::F64 _6517_frac;
			std::tie(_6514_i,_6517_frac) = _1a9c211a4_modf(_6413_x);
			if (_6517_frac != 0LL) {
				return false;
			}
			return (_6514_i >= _599_min) && (_6514_i <= _609_max);
		}
		goto _match_end_4443654736;
		_case_end_4443655072:;
		if (!((_5830_d->_field_constant->_method_is_u64()))) { goto _case_end_4443655184; }
		_case_begin_4443655184:;
		{
			jule::F64 _7213_x = static_cast<jule::F64>(_5830_d->_field_constant->_method_read_u64());
			if (_7213_x <= _609_max) {
				return true;
			}
		}
		goto _match_end_4443654736;
		_case_end_4443655184:;
		if (!((_5830_d->_field_constant->_method_is_i64()))) { goto _case_end_4443655296; }
		_case_begin_4443655296:;
		{
			jule::F64 _7813_x = static_cast<jule::F64>(_5830_d->_field_constant->_method_read_i64());
			return (_599_min <= _7813_x) && (_7813_x <= _609_max);
		}
		goto _match_end_4443654736;
		_case_end_4443655296:;
		_match_end_4443654736:;
	}
	return false;
}



inline jule::Bool _1acc33119_unsig_assignable(jule::Str _8521_kind,jule::Ref<_1acde49c3_Data> _8532_d) {
	jule::F64 _869_max = _1ad6d61a4_max(_8521_kind);
	{
		if (!((_8532_d->_field_constant->_method_is_f64()))) { goto _case_end_4443670512; }
		_case_begin_4443670512:;
		{
			jule::F64 _9013_x = _8532_d->_field_constant->_method_read_f64();
			if (_9013_x < 0LL) {
				return false;
			}
			jule::F64 _9514_i;
			jule::F64 _9517_frac;
			std::tie(_9514_i,_9517_frac) = _1a9c211a4_modf(_9013_x);
			if (_9517_frac != 0LL) {
				return false;
			}
			return _9514_i <= _869_max;
		}
		goto _match_end_4443670256;
		_case_end_4443670512:;
		if (!((_8532_d->_field_constant->_method_is_u64()))) { goto _case_end_4443670624; }
		_case_begin_4443670624:;
		{
			jule::F64 _10213_x = static_cast<jule::F64>(_8532_d->_field_constant->_method_read_u64());
			if (_10213_x <= _869_max) {
				return true;
			}
		}
		goto _match_end_4443670256;
		_case_end_4443670624:;
		if (!((_8532_d->_field_constant->_method_is_i64()))) { goto _case_end_4443670736; }
		_case_begin_4443670736:;
		{
			jule::F64 _10813_x = static_cast<jule::F64>(_8532_d->_field_constant->_method_read_i64());
			return (0LL <= _10813_x) && (_10813_x <= _869_max);
		}
		goto _match_end_4443670256;
		_case_end_4443670736:;
		_match_end_4443670256:;
	}
	return false;
}



inline jule::Bool _1acc33119_int_assignable(jule::Str _11519_kind,jule::Ref<_1acde49c3_Data> _11530_d) {
	{
		if (!((_1ad70d41d_is_sig_int(_11519_kind)))) { goto _case_end_4443685984; }
		_case_begin_4443685984:;
		{
			return _1acc33119_sig_assignable(_11519_kind,_11530_d);
		}
		goto _match_end_4443684928;
		_case_end_4443685984:;
		if (!((_1ad70d41d_is_unsig_int(_11519_kind)))) { goto _case_end_4443686096; }
		_case_begin_4443686096:;
		{
			return _1acc33119_unsig_assignable(_11519_kind,_11530_d);
		}
		goto _match_end_4443684928;
		_case_end_4443686096:;
		_case_begin_4443685104:;
		{
			return false;
		}
		goto _match_end_4443684928;
		_case_end_4443685104:;
		_match_end_4443684928:;
	}
}



inline jule::Any _1acde49c3_find_builtins_import(jule::Str _4525_ident,jule::Ref<_1ac78be4d_ImportInfo> _4537_imp) {
	return _1ad5a38bd_find_package_builtin_def(_4537_imp->_field_link_path,_4525_ident);
}



inline jule::Any _1acde49c3_find_builtins_sema(jule::Str _4923_ident,jule::Ref<_1ac7ccb09_Sema> _4939_s) {
	{
		auto _range_expr = _4939_s->_field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1acde49c3_imp = *_range_begin;
			_iter_begin_4443692800:;
			{
				if (_1acde49c3_imp->_field_import_all || _1acde49c3_imp->_method_exist_ident(_4923_ident)) {
					jule::Any _5221_def = _1acde49c3_find_builtins_import(_4923_ident,_1acde49c3_imp);
					if (_5221_def != nullptr) {
						return _5221_def;
					}
				}
			}
			_iter_next_4443692800:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde49c3_imp = *_range_begin; goto _iter_begin_4443692800; }
			_iter_end_4443692800:;
		}
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1acde49c3_is_ok_for_shifting(jule::Ref<_1acde49c3_Data> _6127_d) {
	jule::Ref<_1ad3e617d_Prim> _629_prim = _6127_d->_field_kind->_method_prim();
	if ((!(jule::real(_629_prim))) || (!(_1ad70d41d_is_int(_629_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_6127_d->_method_is_const()))) {
		return true;
	}
	{
		if (!((_6127_d->_field_constant->_method_is_i64()))) { goto _case_end_4443704880; }
		_case_begin_4443704880:;
		{
			return _6127_d->_field_constant->_method_read_i64() >= 0LL;
		}
		goto _match_end_4443703504;
		_case_end_4443704880:;
		if (!((_6127_d->_field_constant->_method_is_u64()))) { goto _case_end_4443704992; }
		_case_begin_4443704992:;
		{
			return true;
		}
		goto _match_end_4443703504;
		_case_end_4443704992:;
		_case_begin_4443703632:;
		{
			return false;
		}
		goto _match_end_4443703504;
		_case_end_4443703632:;
		_match_end_4443703504:;
	}
}



inline jule::Bool _1acde49c3_is_instanced_struct(jule::Ref<_1ab064271_StructIns> _7824_s) {
	return _7824_s->_field_decl->_field_generics.len() == _7824_s->_field_generics.len();
}



inline void _1acde49c3_normalize_bitsize(jule::Ref<_1acde49c3_Data> _8226_d) {
	if ((!(_8226_d->_method_is_const()))) {
		return;
	}
	jule::Str _8713_kind = jule::Str("", 0);
	{
		if (!((_8226_d->_field_constant->_method_is_f64()))) { goto _case_end_4443714304; }
		_case_begin_4443714304:;
		{
			jule::F64 _9013_x = _8226_d->_field_constant->_method_read_f64();
			_8713_kind=_1ad6d7e31_float_from_bits(static_cast<jule::U64>(_1ad6d7e31_bitsize_of_float(_9013_x)));
		}
		goto _match_end_4443712992;
		_case_end_4443714304:;
		if (!((_8226_d->_field_constant->_method_is_i64()))) { goto _case_end_4443713552; }
		_case_begin_4443713552:;
		{
			jule::I64 _9413_x = _8226_d->_field_constant->_method_read_i64();
			_8713_kind=_1ad6d7e31_int_from_bits(static_cast<jule::U64>(_1ad6d7e31_bitsize_of_int(_9413_x)));
		}
		goto _match_end_4443712992;
		_case_end_4443713552:;
		if (!((_8226_d->_field_constant->_method_is_u64()))) { goto _case_end_4443713664; }
		_case_begin_4443713664:;
		{
			jule::U64 _9813_x = _8226_d->_field_constant->_method_read_u64();
			_8713_kind=_1ad6d7e31_uint_from_bits(static_cast<jule::U64>(_1ad6d7e31_bitsize_of_uint(_9813_x)));
		}
		goto _match_end_4443712992;
		_case_end_4443713664:;
		_case_begin_4443713248:;
		{
			return;
		}
		goto _match_end_4443712992;
		_case_end_4443713248:;
		_match_end_4443712992:;
	}
	if (jule::real(_8226_d->_field_kind->_method_enm())) {
		return;
	}
	_8226_d->_field_kind->_field_kind=_1ad3e617d_build_prim_type(_8713_kind);
}



inline void _1acde49c3_normalize_type(jule::Ref<_1acde49c3_Data> _11323_d) {
	{
		if (!((_1acc33119_int_assignable(jule::Str("int", 3),_11323_d)))) { goto _case_end_4443727600; }
		_case_begin_4443727600:;
		{
			_11323_d->_field_kind->_field_kind=_1ad3e617d_build_prim_type(jule::Str("int", 3));
			_11323_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_11323_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4443727360;
		_case_end_4443727600:;
		if (!((_1acc33119_int_assignable(jule::Str("uint", 4),_11323_d)))) { goto _case_end_4443727728; }
		_case_begin_4443727728:;
		{
			_11323_d->_field_kind->_field_kind=_1ad3e617d_build_prim_type(jule::Str("uint", 4));
			_11323_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_11323_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4443727360;
		_case_end_4443727728:;
		_match_end_4443727360:;
	}
}



inline void _1acde49c3_apply_cast_kind_model(jule::Ref<_1acde49c3_Data> _12530_d) {
	_12530_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_CastingExprModel>(new( std::nothrow ) _1ab0a4954_CastingExprModel(_12530_d->_field_model,_12530_d->_field_cast_kind,_12530_d->_field_kind)));
}



inline void _1acde49c3_apply_cast_kind(jule::Ref<_1acde49c3_Data> _13324_d) {
	if ((!(jule::real(_13324_d->_field_cast_kind)))) {
		return;
	}
	_1acde49c3_apply_cast_kind_model(_13324_d);
	_13324_d->_field_kind=_13324_d->_field_cast_kind;
	jule::drop(_13324_d->_field_cast_kind);
}



inline jule::Ref<_1acde49c3_Data> _1acde49c3_build_void_data(void) {
	return jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("void", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1ad6d5cec_Const>()));
}



inline jule::Str _1acde49c3_kind_by_bitsize(jule::Any _15420_expr) {
	{
		auto _match_expr{ _15420_expr };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4443745856; }
		_case_begin_4443745856:;
		{
			jule::F64 _15713_x = _15420_expr.operator jule::F64();
			return _1ad6d7e31_float_from_bits(static_cast<jule::U64>(_1ad6d7e31_bitsize_of_float(_15713_x)));
		}
		goto _match_end_4443743600;
		_case_end_4443745856:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4443745968; }
		_case_begin_4443745968:;
		{
			jule::I64 _16113_x = _15420_expr.operator jule::I64();
			return _1ad6d7e31_int_from_bits(static_cast<jule::U64>(_1ad6d7e31_bitsize_of_int(_16113_x)));
		}
		goto _match_end_4443743600;
		_case_end_4443745968:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4443746080; }
		_case_begin_4443746080:;
		{
			jule::U64 _16513_x = _15420_expr.operator jule::U64();
			return _1ad6d7e31_uint_from_bits(static_cast<jule::U64>(_1ad6d7e31_bitsize_of_uint(_16513_x)));
		}
		goto _match_end_4443743600;
		_case_end_4443746080:;
		_case_begin_4443743120:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4443743600;
		_case_end_4443743120:;
		_match_end_4443743600:;
	}
}



inline jule::Str _1acde49c3_check_data_for_integer_indexing(jule::Ref<_1acde49c3_Data> _17340_d) {
	jule::Str _17352_err_fmt = jule::Str("", 0);
	if ((!(jule::real(_17340_d)))) {
		_17352_err_fmt = jule::Str("", 0);
		return _17352_err_fmt;
	}
	jule::Ref<_1ad3e617d_TypeKind> _17813_kind = _17340_d->_field_kind;
	if (jule::real(_17813_kind->_method_ref())) {
		_17813_kind=_17813_kind->_method_ref()->_field_elem;
	}
	{
		if (!(((!(jule::real(_17813_kind->_method_prim())))))) { goto _case_end_4443762160; }
		_case_begin_4443762160:;
		{
			_17352_err_fmt = jule::Str("invalid expression", 18);
			return _17352_err_fmt;
		}
		goto _match_end_4443756832;
		_case_end_4443762160:;
		if (!(((!(_1ad70d41d_is_int(_17813_kind->_method_prim()->_method_to_str())))))) { goto _case_end_4443762272; }
		_case_begin_4443762272:;
		{
			_17352_err_fmt = jule::Str("invalid expression", 18);
			return _17352_err_fmt;
		}
		goto _match_end_4443756832;
		_case_end_4443762272:;
		if (!((_17340_d->_method_is_const()))) { goto _case_end_4443759904; }
		_case_begin_4443759904:;
		{
			if (_17340_d->_field_constant->_method_as_f64() < 0LL) {
				_17352_err_fmt = jule::Str("overflow the limit of data-type", 31);
				return _17352_err_fmt;
			}
		}
		goto _match_end_4443756832;
		_case_end_4443759904:;
		_case_begin_4443756928:;
		{
			_17340_d->_field_cast_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("int", 3))));
			_1acde49c3_apply_cast_kind(_17340_d);
		}
		goto _match_end_4443756832;
		_case_end_4443756928:;
		_match_end_4443756832:;
	}
	_17352_err_fmt = jule::Str("", 0);
	return _17352_err_fmt;
}



inline jule::Bool _1ad3e617d_can_get_ptr(jule::Ref<_1acde49c3_Data> _45420_d) {
	if ((!(_45420_d->_field_lvalue)) || _45420_d->_method_is_const()) {
		return false;
	}
	{
		if (!((jule::real(_45420_d->_field_kind->_method_fnc()) || jule::real(_45420_d->_field_kind->_method_enm())))) { goto _case_end_4443769936; }
		_case_begin_4443769936:;
		{
			return false;
		}
		goto _match_end_4443768816;
		_case_end_4443769936:;
		_case_begin_4443768912:;
		{
			return true;
		}
		goto _match_end_4443768816;
		_case_end_4443768912:;
		_match_end_4443768816:;
	}
}



inline jule::Bool _1ad3e617d_is_lvalue(jule::Ref<_1ad3e617d_TypeKind> _46818_t) {
	return ((jule::real(_46818_t->_method_ref()) || jule::real(_46818_t->_method_ptr())) || jule::real(_46818_t->_method_slc())) || jule::real(_46818_t->_method_map());
}



inline jule::Bool _1ad3e617d_is_mut(jule::Ref<_1ad3e617d_TypeKind> _47215_t) {
	if (jule::real(_47215_t->_method_strct())) {
		return _47215_t->_method_strct()->_field_has_mut;
	}
	if (jule::real(_47215_t->_method_prim())) {
		jule::Ref<_1ad3e617d_Prim> _47713_p = _47215_t->_method_prim();
		return _47713_p->_method_is_any();
	}
	return (jule::real(_47215_t->_method_slc()) || jule::real(_47215_t->_method_ptr())) || jule::real(_47215_t->_method_ref());
}



inline jule::Bool _1ad3e617d_supports_cloning(jule::Ref<_1ad3e617d_TypeKind> _48325_k) {
	{
		if (!((jule::real(_48325_k->_method_prim())))) { goto _case_end_4443788128; }
		_case_begin_4443788128:;
		{
			return (!(_48325_k->_method_prim()->_method_is_any()));
		}
		goto _match_end_4443787552;
		_case_end_4443788128:;
		if (!((jule::real(_48325_k->_method_enm())))) { goto _case_end_4443788240; }
		_case_begin_4443788240:;
		{
			return true;
		}
		goto _match_end_4443787552;
		_case_end_4443788240:;
		if (!((jule::real(_48325_k->_method_fnc())))) { goto _case_end_4443789360; }
		_case_begin_4443789360:;
		{
			return true;
		}
		goto _match_end_4443787552;
		_case_end_4443789360:;
		if (!((jule::real(_48325_k->_method_ptr())))) { goto _case_end_4443789472; }
		_case_begin_4443789472:;
		{
			return true;
		}
		goto _match_end_4443787552;
		_case_end_4443789472:;
		if (!((jule::real(_48325_k->_method_slc())))) { goto _case_end_4443789584; }
		_case_begin_4443789584:;
		{
			return _1ad3e617d_supports_cloning(_48325_k->_method_slc()->_field_elem);
		}
		goto _match_end_4443787552;
		_case_end_4443789584:;
		if (!((jule::real(_48325_k->_method_map())))) { goto _case_end_4443789696; }
		_case_begin_4443789696:;
		{
			return _1ad3e617d_supports_cloning(_48325_k->_method_map()->_field_key) && _1ad3e617d_supports_cloning(_48325_k->_method_map()->_field_val);
		}
		goto _match_end_4443787552;
		_case_end_4443789696:;
		if (!((jule::real(_48325_k->_method_arr())))) { goto _case_end_4443788720; }
		_case_begin_4443788720:;
		{
			return _1ad3e617d_supports_cloning(_48325_k->_method_arr()->_field_elem);
		}
		goto _match_end_4443787552;
		_case_end_4443788720:;
		if (!((jule::real(_48325_k->_method_ref())))) { goto _case_end_4443788832; }
		_case_begin_4443788832:;
		{
			return _1ad3e617d_supports_cloning(_48325_k->_method_ref()->_field_elem);
		}
		goto _match_end_4443787552;
		_case_end_4443788832:;
		if (!((jule::real(_48325_k->_method_strct())))) { goto _case_end_4443788960; }
		_case_begin_4443788960:;
		{
			jule::Ref<_1ab064271_StructIns> _51017_s = _48325_k->_method_strct();
			if ((!(_51017_s->_field_has_mut))) {
				return true;
			}
			if (((!(jule::real(_51017_s->_field_decl))) || _51017_s->_field_decl->_field_cpp_linked) || (!(_51017_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
				return false;
			}
			return true;
		}
		goto _match_end_4443787552;
		_case_end_4443788960:;
		_case_begin_4443787664:;
		{
			return false;
		}
		goto _match_end_4443787552;
		_case_end_4443787664:;
		_match_end_4443787552:;
	}
}



inline jule::Bool _1ad3e617d_is_nil_compatible(jule::Ref<_1ad3e617d_TypeKind> _52426_t) {
	jule::Ref<_1ad3e617d_Prim> _5259_prim = _52426_t->_method_prim();
	if (jule::real(_5259_prim) && _5259_prim->_method_is_any()) {
		return true;
	}
	return ((((_52426_t->_method_is_nil() || jule::real(_52426_t->_method_fnc())) || jule::real(_52426_t->_method_ptr())) || jule::real(_52426_t->_method_trt())) || jule::real(_52426_t->_method_slc())) || jule::real(_52426_t->_method_map());
}



inline jule::Bool _1ad3e617d_is_valid_for_ref(jule::Ref<_1ad3e617d_TypeKind> _54025_t) {
	jule::Ref<_1ab064271_StructIns> _54113_s = _54025_t->_method_strct();
	if ((jule::real(_54113_s) && jule::real(_54113_s->_field_decl)) && _54113_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return (!(((jule::real(_54025_t->_method_enm()) || jule::real(_54025_t->_method_ptr())) || jule::real(_54025_t->_method_ref())) || jule::real(_54025_t->_method_arr())));
}



inline jule::Bool _1ad3e617d_is_variadicable(jule::Ref<_1ad3e617d_TypeKind> _54824_tk) {
	return jule::real(_54824_tk->_method_slc());
}



inline jule::Str _1ad3e617d_build_link_path_by_tokens(jule::Slice<_1ab0277b7_Token> _55030_tokens) {
	jule::Str _55113_s = _55030_tokens[0LL]._field_kind;
	{
		auto _range_expr = _55030_tokens.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1ab0277b7_Token _1ad3e617d_token = *_range_begin;
			_iter_begin_4443826080:;
			{
				_55113_s+=jule::Str("::", 2);
				_55113_s+=_1ad3e617d_token._field_kind;
			}
			_iter_next_4443826080:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ad3e617d_token = *_range_begin; goto _iter_begin_4443826080; }
			_iter_end_4443826080:;
		}
	}
	return _55113_s;
}



inline jule::Ref<_1ad3e617d_Prim> _1ad3e617d_build_prim_type(jule::Str _55920_kind) {
	return jule::new_struct<_1ad3e617d_Prim>(new( std::nothrow ) _1ad3e617d_Prim(_55920_kind));
}



inline jule::Ref<_1ab064271_Struct> _1ad3e617d_get_struct_from_kind(jule::Ref<_1ad3e617d_TypeKind> _56529_k) {
	{
		if (!(((!(jule::real(_56529_k)))))) { goto _case_end_4443832928; }
		_case_begin_4443832928:;
		{
			return jule::new_ref<_1ab064271_Struct>();
		}
		goto _match_end_4443830304;
		_case_end_4443832928:;
		if (!((jule::real(_56529_k->_method_strct())))) { goto _case_end_4443831936; }
		_case_begin_4443831936:;
		{
			return _56529_k->_method_strct()->_field_decl;
		}
		goto _match_end_4443830304;
		_case_end_4443831936:;
		if (!((jule::real(_56529_k->_method_ref())))) { goto _case_end_4443832144; }
		_case_begin_4443832144:;
		{
			return _1ad3e617d_get_struct_from_kind(_56529_k->_method_ref()->_field_elem);
		}
		goto _match_end_4443830304;
		_case_end_4443832144:;
		if (!((jule::real(_56529_k->_method_slc())))) { goto _case_end_4443832592; }
		_case_begin_4443832592:;
		{
			return _1ad3e617d_get_struct_from_kind(_56529_k->_method_slc()->_field_elem);
		}
		goto _match_end_4443830304;
		_case_end_4443832592:;
		if (!((jule::real(_56529_k->_method_arr())))) { goto _case_end_4443832704; }
		_case_begin_4443832704:;
		{
			return _1ad3e617d_get_struct_from_kind(_56529_k->_method_arr()->_field_elem);
		}
		goto _match_end_4443830304;
		_case_end_4443832704:;
		if (!((jule::real(_56529_k->_method_ptr())))) { goto _case_end_4443831536; }
		_case_begin_4443831536:;
		{
			return jule::new_ref<_1ab064271_Struct>();
		}
		goto _match_end_4443830304;
		_case_end_4443831536:;
		_case_begin_4443830576:;
		{
			return jule::new_ref<_1ab064271_Struct>();
		}
		goto _match_end_4443830304;
		_case_end_4443830576:;
		_match_end_4443830304:;
	}
}



inline jule::Bool _1ad3e617d_is_prim(jule::Str _59412_kind) {
	return (((((((((((((((_59412_kind == jule::Str("i8", 2)) || (_59412_kind == jule::Str("i16", 3))) || (_59412_kind == jule::Str("i32", 3))) || (_59412_kind == jule::Str("i64", 3))) || (_59412_kind == jule::Str("u8", 2))) || (_59412_kind == jule::Str("u16", 3))) || (_59412_kind == jule::Str("u32", 3))) || (_59412_kind == jule::Str("u64", 3))) || (_59412_kind == jule::Str("f32", 3))) || (_59412_kind == jule::Str("f64", 3))) || (_59412_kind == jule::Str("int", 3))) || (_59412_kind == jule::Str("uint", 4))) || (_59412_kind == jule::Str("uintptr", 7))) || (_59412_kind == jule::Str("bool", 4))) || (_59412_kind == jule::Str("str", 3))) || (_59412_kind == jule::Str("any", 3));
}



inline std::tuple<jule::Ref<_1acd9639d_SymbolTable>,jule::Slice<_1d068165a_Log>> _1ad4a0886_build_symbols(jule::Ref<_1ab026d8d_Ast> _922_ast,jule::Trait<_1ac78be4d_Importer> _937_importer,jule::Ref<_1ac699a1a_SymbolBuilder> _961_owner) {
	jule::Ref<_1ac699a1a_SymbolBuilder> _1013_sb = jule::new_struct<_1ac699a1a_SymbolBuilder>(new( std::nothrow ) _1ac699a1a_SymbolBuilder(_961_owner,_937_importer,jule::Slice<_1d068165a_Log>(),_922_ast,jule::Ref<_1acd9639d_SymbolTable>()));
	_1013_sb->_method_build();
	if (_1013_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1013_sb->_field_table,nullptr);
	}
	return std::make_tuple(jule::new_ref<_1acd9639d_SymbolTable>(),_1013_sb->_field_errors);
}



inline std::tuple<jule::Ref<_1ac78be4d_Package>,jule::Slice<_1d068165a_Log>> _1ad4a0886___analyze_package(jule::Slice<jule::Ref<_1ab026d8d_Ast>> _2326_files,jule::Trait<_1ac78be4d_Importer> _2345_importer) {
	jule::Slice<jule::Ref<_1acd9639d_SymbolTable>> _2513_tables = jule::Slice<jule::Ref<_1acd9639d_SymbolTable>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_2326_files.len())));
	{
		auto _range_expr = _2326_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ad4a0886_i = 0;
			jule::Ref<_1ab026d8d_Ast> _1ad4a0886_f = *_range_begin;
			_iter_begin_4443858176:;
			{
				jule::Ref<_1acd9639d_SymbolTable> _2718_table;
				jule::Slice<_1d068165a_Log> _2729_errors;
				std::tie(_2718_table,_2729_errors) = _1ad4a0886_build_symbols(_1ad4a0886_f,_2345_importer,jule::new_ref<_1ac699a1a_SymbolBuilder>());
				if (_2729_errors.len() > 0LL) {
					return std::make_tuple(jule::new_ref<_1ac78be4d_Package>(),_2729_errors);
				}
				_2513_tables[static_cast<jule::Int>(_1ad4a0886_i)]=_2718_table;
			}
			_iter_next_4443858176:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ad4a0886_i; _1ad4a0886_f = *_range_begin; goto _iter_begin_4443858176; }
			_iter_end_4443858176:;
		}
	}
	jule::Ref<_1ac7ccb09_Sema> _3413_sema = jule::new_struct<_1ac7ccb09_Sema>(new( std::nothrow ) _1ac7ccb09_Sema());
	_3413_sema->_method_check(_2513_tables);
	if (_3413_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1ac78be4d_Package>(),_3413_sema->_field_errors);
	}
	jule::Ref<_1ac78be4d_Package> _4013_pkg = jule::new_struct<_1ac78be4d_Package>(new( std::nothrow ) _1ac78be4d_Package(_3413_sema->_field_files));
	return std::make_tuple(_4013_pkg,nullptr);
}



inline std::tuple<jule::Ref<_1ac78be4d_Package>,jule::Slice<_1d068165a_Log>> _1ad4a0886_analyze_package(jule::Slice<jule::Ref<_1ab026d8d_Ast>> _6428_files,jule::Trait<_1ac78be4d_Importer> _6447_importer) {
	if (_6428_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_1ac78be4d_Package>(),nullptr);
	}
	jule::Ref<_1ac78be4d_Package> _6914_package;
	jule::Slice<_1d068165a_Log> _6927_logs;
	std::tie(_6914_package,_6927_logs) = _1ad4a0886___analyze_package(_6428_files,_6447_importer);
	return std::make_tuple(_6914_package,_6927_logs);
}



inline std::tuple<jule::Ref<_1acd9639d_SymbolTable>,jule::Slice<_1d068165a_Log>> _1ad4a0886_analyze_file(jule::Ref<_1ab026d8d_Ast> _9025_f,jule::Trait<_1ac78be4d_Importer> _9038_importer) {
	jule::Slice<jule::Ref<_1ab026d8d_Ast>> _9113_files = jule::Slice<jule::Ref<_1ab026d8d_Ast>>({_9025_f});
	jule::Ref<_1ac78be4d_Package> _9214_pkg;
	jule::Slice<_1d068165a_Log> _9223_errors;
	std::tie(_9214_pkg,_9223_errors) = _1ad4a0886_analyze_package(_9113_files,_9038_importer);
	if (_9223_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1acd9639d_SymbolTable>(),_9223_errors);
	}
	jule::Ref<_1acd9639d_SymbolTable> _9913_table = _9214_pkg->_field_files[0LL];
	return std::make_tuple(_9913_table,nullptr);
}



inline void _1ad5a38bd_init(void) {
	_1ad5a38bd_BUILTIN_FN_OUT->_field_caller=_1ad5a38bd_builtin_caller_out;
	_1ad5a38bd_BUILTIN_FN_OUTLN->_field_caller=_1ad5a38bd_builtin_caller_outln;
	_1ad5a38bd_BUILTIN_FN_NEW->_field_caller=_1ad5a38bd_builtin_caller_new;
	_1ad5a38bd_BUILTIN_FN_REAL->_field_caller=_1ad5a38bd_builtin_caller_real;
	_1ad5a38bd_BUILTIN_FN_DROP->_field_caller=_1ad5a38bd_builtin_caller_drop;
	_1ad5a38bd_BUILTIN_FN_PANIC->_field_caller=_1ad5a38bd_builtin_caller_panic;
	_1ad5a38bd_BUILTIN_FN_MAKE->_field_caller=_1ad5a38bd_builtin_caller_make;
	_1ad5a38bd_BUILTIN_FN_APPEND->_field_caller=_1ad5a38bd_builtin_caller_append;
	_1ad5a38bd_BUILTIN_FN_COPY->_field_caller=_1ad5a38bd_builtin_caller_copy;
	_1ad5a38bd_BUILTIN_FN_RECOVER->_field_caller=_1ad5a38bd_builtin_caller_recover;
	_1ad5a38bd_BUILTIN_FN_CLONE->_field_caller=_1ad5a38bd_builtin_caller_clone;
	_1ad5a38bd_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=_1ad5a38bd_builtin_caller_std_mem_size_of;
	_1ad5a38bd_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=_1ad5a38bd_builtin_caller_std_mem_align_of;
	jule::Ref<_1ab07a50c_Fn> _9113_error_method = _1ad5a38bd_BUILTIN_TRAIT_ERROR->_method_find_method(jule::Str("error", 5));
	jule::Ref<_1ab07a50c_FnIns> _9213_error_method_ins = _9113_error_method->_method_instance();
	_9213_error_method_ins->_field_result=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("str", 3))));
	_9213_error_method_ins->_field_caller=_1ad5a38bd_builtin_caller_common;
	_9113_error_method->_method_append_instance(_9213_error_method_ins);
}



inline jule::Ref<_1ab07a50c_FnIns> _1ad5a38bd_find_builtin_fn(jule::Str _9820_ident) {
	{
		auto _match_expr{ _9820_ident };
		if (!((jule::Str("out", 3)) == _match_expr)) { goto _case_end_4444973072; }
		_case_begin_4444973072:;
		{
			return _1ad5a38bd_BUILTIN_FN_OUT;
		}
		goto _match_end_4444970832;
		_case_end_4444973072:;
		if (!((jule::Str("outln", 5)) == _match_expr)) { goto _case_end_4444973648; }
		_case_begin_4444973648:;
		{
			return _1ad5a38bd_BUILTIN_FN_OUTLN;
		}
		goto _match_end_4444970832;
		_case_end_4444973648:;
		if (!((jule::Str("new", 3)) == _match_expr)) { goto _case_end_4444972656; }
		_case_begin_4444972656:;
		{
			return _1ad5a38bd_BUILTIN_FN_NEW;
		}
		goto _match_end_4444970832;
		_case_end_4444972656:;
		if (!((jule::Str("real", 4)) == _match_expr)) { goto _case_end_4444972864; }
		_case_begin_4444972864:;
		{
			return _1ad5a38bd_BUILTIN_FN_REAL;
		}
		goto _match_end_4444970832;
		_case_end_4444972864:;
		if (!((jule::Str("drop", 4)) == _match_expr)) { goto _case_end_4444973312; }
		_case_begin_4444973312:;
		{
			return _1ad5a38bd_BUILTIN_FN_DROP;
		}
		goto _match_end_4444970832;
		_case_end_4444973312:;
		if (!((jule::Str("panic", 5)) == _match_expr)) { goto _case_end_4444973424; }
		_case_begin_4444973424:;
		{
			return _1ad5a38bd_BUILTIN_FN_PANIC;
		}
		goto _match_end_4444970832;
		_case_end_4444973424:;
		if (!((jule::Str("make", 4)) == _match_expr)) { goto _case_end_4444972256; }
		_case_begin_4444972256:;
		{
			return _1ad5a38bd_BUILTIN_FN_MAKE;
		}
		goto _match_end_4444970832;
		_case_end_4444972256:;
		if (!((jule::Str("append", 6)) == _match_expr)) { goto _case_end_4444972368; }
		_case_begin_4444972368:;
		{
			return _1ad5a38bd_BUILTIN_FN_APPEND;
		}
		goto _match_end_4444970832;
		_case_end_4444972368:;
		if (!((jule::Str("copy", 4)) == _match_expr)) { goto _case_end_4444972480; }
		_case_begin_4444972480:;
		{
			return _1ad5a38bd_BUILTIN_FN_COPY;
		}
		goto _match_end_4444970832;
		_case_end_4444972480:;
		if (!((jule::Str("recover", 7)) == _match_expr)) { goto _case_end_4444971648; }
		_case_begin_4444971648:;
		{
			return _1ad5a38bd_BUILTIN_FN_RECOVER;
		}
		goto _match_end_4444970832;
		_case_end_4444971648:;
		if (!((jule::Str("clone", 5)) == _match_expr)) { goto _case_end_4444971760; }
		_case_begin_4444971760:;
		{
			return _1ad5a38bd_BUILTIN_FN_CLONE;
		}
		goto _match_end_4444970832;
		_case_end_4444971760:;
		_case_begin_4444971264:;
		{
			return jule::new_ref<_1ab07a50c_FnIns>();
		}
		goto _match_end_4444970832;
		_case_end_4444971264:;
		_match_end_4444970832:;
	}
}



inline jule::Ref<_1ad3e617d_TypeAlias> _1ad5a38bd_find_builtin_type_alias(jule::Str _11528_ident) {
	{
		auto _match_expr{ _11528_ident };
		if (!((jule::Str("byte", 4)) == _match_expr)) { goto _case_end_4444981904; }
		_case_begin_4444981904:;
		{
			return _1ad5a38bd_BUILTIN_TYPE_ALIAS_BYTE;
		}
		goto _match_end_4444978336;
		_case_end_4444981904:;
		if (!((jule::Str("rune", 4)) == _match_expr)) { goto _case_end_4444980912; }
		_case_begin_4444980912:;
		{
			return _1ad5a38bd_BUILTIN_TYPE_ALIAS_RUNE;
		}
		goto _match_end_4444978336;
		_case_end_4444980912:;
		_case_begin_4444979184:;
		{
			return jule::new_ref<_1ad3e617d_TypeAlias>();
		}
		goto _match_end_4444978336;
		_case_end_4444979184:;
		_match_end_4444978336:;
	}
}



inline jule::Ref<_1ac276c57_Trait> _1ad5a38bd_find_builtin_trait(jule::Str _12323_ident) {
	{
		auto _match_expr{ _12323_ident };
		if (!((jule::Str("Error", 5)) == _match_expr)) { goto _case_end_4444984384; }
		_case_begin_4444984384:;
		{
			return _1ad5a38bd_BUILTIN_TRAIT_ERROR;
		}
		goto _match_end_4444981568;
		_case_end_4444984384:;
		_case_begin_4444980320:;
		{
			return jule::new_ref<_1ac276c57_Trait>();
		}
		goto _match_end_4444981568;
		_case_end_4444980320:;
		_match_end_4444981568:;
	}
}



inline jule::Any _1ad5a38bd_find_builtin_def(jule::Str _13021_ident) {
	jule::Ref<_1ab07a50c_FnIns> _13113_f = _1ad5a38bd_find_builtin_fn(_13021_ident);
	if (jule::real(_13113_f)) {
		return jule::Any(_13113_f);
	}
	jule::Ref<_1ad3e617d_TypeAlias> _13613_ta = _1ad5a38bd_find_builtin_type_alias(_13021_ident);
	if (jule::real(_13613_ta)) {
		return jule::Any(_13613_ta);
	}
	jule::Ref<_1ac276c57_Trait> _14113_t = _1ad5a38bd_find_builtin_trait(_13021_ident);
	if (jule::real(_14113_t)) {
		return jule::Any(_14113_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _1ad5a38bd_find_builtin_def_std_mem(jule::Str _14929_ident) {
	{
		auto _match_expr{ _14929_ident };
		if (!((jule::Str("size_of", 7)) == _match_expr)) { goto _case_end_4444993296; }
		_case_begin_4444993296:;
		{
			return jule::Any(_1ad5a38bd_BUILTIN_FN_STD_MEM_SIZE_OF);
		}
		goto _match_end_4444990784;
		_case_end_4444993296:;
		if (!((jule::Str("align_of", 8)) == _match_expr)) { goto _case_end_4444993856; }
		_case_begin_4444993856:;
		{
			return jule::Any(_1ad5a38bd_BUILTIN_FN_STD_MEM_ALIGN_OF);
		}
		goto _match_end_4444990784;
		_case_end_4444993856:;
		_case_begin_4444991968:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4444990784;
		_case_end_4444991968:;
		_match_end_4444990784:;
	}
}



inline jule::Any _1ad5a38bd_find_package_builtin_def(jule::Str _15729_link_path,jule::Str _15745_ident) {
	{
		auto _match_expr{ _15729_link_path };
		if (!((jule::Str("std::mem", 8)) == _match_expr)) { goto _case_end_4444997440; }
		_case_begin_4444997440:;
		{
			return _1ad5a38bd_find_builtin_def_std_mem(_15745_ident);
		}
		goto _match_end_4444994912;
		_case_end_4444997440:;
		_case_begin_4444996080:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4444994912;
		_case_end_4444996080:;
		_match_end_4444994912:;
	}
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_common_plain(jule::Ref<_1acde49c3_Eval> _16436_e,jule::Ref<_1aaeea1c4_FnCallExpr> _16450_fc,jule::Ref<_1acde49c3_Data> _16471_d) {
	jule::Ref<_1ab07a50c_FnIns> _16513_f = _16471_d->_field_kind->_method_fnc();
	_1acc33119_FnCallArgChecker _16713_fcac = _1acc33119_FnCallArgChecker(_16436_e,_16450_fc->_field_args,_16450_fc->_field_token,_16513_f,false,jule::Slice<jule::Any>());
	_16713_fcac._method_check();
	jule::Ref<_1ab0a4954_FnCallExprModel> _17613_model = jule::new_struct<_1ab0a4954_FnCallExprModel>(new( std::nothrow ) _1ab0a4954_FnCallExprModel(_16513_f,_16450_fc->_field_concurrent,_16471_d->_field_model,_16713_fcac._field_arg_models));
	if ((!(jule::real(_16513_f->_field_result)))) {
		_16471_d=_1acde49c3_build_void_data();
	} else {
		_16471_d=jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(_16513_f->_field_result,jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
	}
	_16471_d->_field_model=jule::Any(_17613_model);
	return _16471_d;
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_common(jule::Ref<_1acde49c3_Eval> _19530_e,jule::Ref<_1aaeea1c4_FnCallExpr> _19544_fc,jule::Ref<_1acde49c3_Data> _19565_d) {
	if (_19544_fc->_field_generics.len() > 0LL) {
		_19530_e->_method_push_err(_19544_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	return _1ad5a38bd_builtin_caller_common_plain(_19530_e,_19544_fc,_19565_d);
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_common_mut(jule::Ref<_1acde49c3_Eval> _20334_e,jule::Ref<_1aaeea1c4_FnCallExpr> _20348_fc,jule::Ref<_1acde49c3_Data> _20369_d) {
	if ((!(_20369_d->_field_mutable))) {
		_20334_e->_method_push_err(_20348_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	return _1ad5a38bd_builtin_caller_common(_20334_e,_20348_fc,_20369_d);
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_out(jule::Ref<_1acde49c3_Eval> _21027_e,jule::Ref<_1aaeea1c4_FnCallExpr> _21041_fc,jule::Ref<_1acde49c3_Data> ) {
	if (_21041_fc->_field_generics.len() > 0LL) {
		_21027_e->_method_push_err(_21041_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_21041_fc->_field_args.len() < 1LL) {
		_21027_e->_method_push_err(_21041_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_21041_fc->_field_args.len() > 1LL) {
		_21027_e->_method_push_err(_21041_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1acde49c3_Data> _22213_expr = _21027_e->_method_eval_expr(_21041_fc->_field_args[0LL]);
	if ((!(jule::real(_22213_expr)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_22213_expr->_method_is_void() || jule::real(_22213_expr->_field_kind->_method_fnc())) {
		_21027_e->_method_push_err(_21041_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Ref<_1acde49c3_Data> _23213_d = _1acde49c3_build_void_data();
	_23213_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_BuiltinOutCallExprModel>(new( std::nothrow ) _1ab0a4954_BuiltinOutCallExprModel(_22213_expr->_field_model)));
	return _23213_d;
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_outln(jule::Ref<_1acde49c3_Eval> _23729_e,jule::Ref<_1aaeea1c4_FnCallExpr> _23743_fc,jule::Ref<_1acde49c3_Data> ) {
	jule::Ref<_1acde49c3_Data> _23813_d = _1ad5a38bd_builtin_caller_out(_23729_e,_23743_fc,jule::new_ref<_1acde49c3_Data>());
	if ((!(jule::real(_23813_d)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	_23813_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_BuiltinOutlnCallExprModel>(new( std::nothrow ) _1ab0a4954_BuiltinOutlnCallExprModel(_23813_d->_field_model.operator jule::Ref<_1ab0a4954_BuiltinOutCallExprModel>()->_field_expr)));
	return _23813_d;
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_new(jule::Ref<_1acde49c3_Eval> _24927_e,jule::Ref<_1aaeea1c4_FnCallExpr> _24941_fc,jule::Ref<_1acde49c3_Data> _24962_d) {
	if (_24941_fc->_field_generics.len() > 0LL) {
		_24927_e->_method_push_err(_24941_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_24941_fc->_field_args.len() < 1LL) {
		_24927_e->_method_push_err(_24941_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_24941_fc->_field_args.len() > 2LL) {
		_24927_e->_method_push_err(_24941_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1acde49c3_Data> _26113_t = _24927_e->_method_eval_expr_kind(_24941_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_26113_t)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if ((!(_26113_t->_field_decl))) {
		_24927_e->_method_push_err(_24941_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	if ((!(_1ad3e617d_is_valid_for_ref(_26113_t->_field_kind)))) {
		jule::Ref<_1ab064271_StructIns> _27217_s = _26113_t->_field_kind->_method_strct();
		if ((jule::real(_27217_s) && jule::real(_27217_s->_field_decl)) && _27217_s->_field_decl->_field_cpp_linked) {
			_24927_e->_method_push_err(_24941_fc->_field_args[0LL]->_field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
		} else {
			_24927_e->_method_push_err(_24941_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_1acde49c3_Data>();
	}
	_24962_d->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ad3e617d_Ref>(new( std::nothrow ) _1ad3e617d_Ref(_26113_t->_field_kind->_method_clone()))));
	if (_24941_fc->_field_args.len() == 2LL) {
		jule::Ref<_1acde49c3_Data> _28417_init = _24927_e->_field_s->_method_evalp(_24941_fc->_field_args[1LL],_24927_e->_field_lookup,_26113_t->_field_kind);
		if (jule::real(_28417_init)) {
			_26113_t->_field_mutable=true;
			_1ac77dd1e_check_mut(_24927_e->_field_s,_26113_t,_28417_init,_24941_fc->_field_args[1LL]->_field_token);
			_24927_e->_field_s->_method_check_assign_type(_26113_t->_field_kind,_28417_init,_24941_fc->_field_args[1LL]->_field_token,false);
			if (jule::real(_28417_init->_field_kind->_method_ref())) {
				_28417_init->_field_model=jule::Any(jule::new_struct<_1ab0a4954_ExplicitDerefExprModel>(new( std::nothrow ) _1ab0a4954_ExplicitDerefExprModel(_28417_init->_field_model)));
			}
			_24962_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_BuiltinNewCallExprModel>(new( std::nothrow ) _1ab0a4954_BuiltinNewCallExprModel(_26113_t->_field_kind,_28417_init->_field_model)));
		}
	} else {
		_24962_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_BuiltinNewCallExprModel>(new( std::nothrow ) _1ab0a4954_BuiltinNewCallExprModel(_26113_t->_field_kind,jule::Any())));
	}
	return _24962_d;
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_real(jule::Ref<_1acde49c3_Eval> _30828_e,jule::Ref<_1aaeea1c4_FnCallExpr> _30842_fc,jule::Ref<_1acde49c3_Data> _30863_d) {
	if (_30842_fc->_field_generics.len() > 0LL) {
		_30828_e->_method_push_err(_30842_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_30842_fc->_field_args.len() < 1LL) {
		_30828_e->_method_push_err(_30842_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_30842_fc->_field_args.len() > 1LL) {
		_30828_e->_method_push_err(_30842_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1acde49c3_Data> _32013_ref = _30828_e->_method_eval_expr(_30842_fc->_field_args[0LL]);
	if ((!(jule::real(_32013_ref)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if ((!(jule::real(_32013_ref->_field_kind->_method_ref())))) {
		_30828_e->_method_push_err(_30842_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_30828_e->_method_push_suggestion(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	_30863_d->_field_kind=_1ad5a38bd_BUILTIN_FN_REAL->_field_result;
	_30863_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_BuiltinRealCallExprModel>(new( std::nothrow ) _1ab0a4954_BuiltinRealCallExprModel(_32013_ref->_field_model)));
	return _30863_d;
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_drop(jule::Ref<_1acde49c3_Eval> _33628_e,jule::Ref<_1aaeea1c4_FnCallExpr> _33642_fc,jule::Ref<_1acde49c3_Data> ) {
	if (_33642_fc->_field_generics.len() > 0LL) {
		_33628_e->_method_push_err(_33642_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_33642_fc->_field_args.len() < 1LL) {
		_33628_e->_method_push_err(_33642_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_33642_fc->_field_args.len() > 1LL) {
		_33628_e->_method_push_err(_33642_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1acde49c3_Data> _34813_ref = _33628_e->_method_eval_expr(_33642_fc->_field_args[0LL]);
	if ((!(jule::real(_34813_ref)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if ((!(jule::real(_34813_ref->_field_kind->_method_ref())))) {
		_33628_e->_method_push_err(_33642_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_33628_e->_method_push_suggestion(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	_1ac77dd1e_check_mut(_33628_e->_field_s,_34813_ref,jule::new_ref<_1acde49c3_Data>(),_33642_fc->_field_args[0LL]->_field_token);
	jule::Ref<_1acde49c3_Data> _36113_d = _1acde49c3_build_void_data();
	_36113_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_BuiltinDropCallExprModel>(new( std::nothrow ) _1ab0a4954_BuiltinDropCallExprModel(_34813_ref->_field_model)));
	return _36113_d;
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_panic(jule::Ref<_1acde49c3_Eval> _36629_e,jule::Ref<_1aaeea1c4_FnCallExpr> _36643_fc,jule::Ref<_1acde49c3_Data> ) {
	if (_36643_fc->_field_generics.len() > 0LL) {
		_36629_e->_method_push_err(_36643_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_36643_fc->_field_args.len() < 1LL) {
		_36629_e->_method_push_err(_36643_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("error", 5))}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_36643_fc->_field_args.len() > 1LL) {
		_36629_e->_method_push_err(_36643_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1acde49c3_Data> _37813_expr = _36629_e->_method_eval_expr(_36643_fc->_field_args[0LL]);
	if ((!(jule::real(_37813_expr)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (jule::real(_37813_expr->_field_kind->_method_strct())) {
		jule::Ref<_1ab064271_StructIns> _38413_s = _37813_expr->_field_kind->_method_strct();
		if (_38413_s->_field_decl->_method_is_implements(_1ad5a38bd_BUILTIN_TRAIT_ERROR)) {
			_37813_expr->_field_cast_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad5a38bd_BUILTIN_TRAIT_ERROR));
			_1acde49c3_apply_cast_kind(_37813_expr);
		}
	}
	jule::Ref<_1acde49c3_Data> _39313_d = _1acde49c3_build_void_data();
	_39313_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_BuiltinPanicCallExprModel>(new( std::nothrow ) _1ab0a4954_BuiltinPanicCallExprModel(_37813_expr->_field_model)));
	return _39313_d;
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_make(jule::Ref<_1acde49c3_Eval> _39828_e,jule::Ref<_1aaeea1c4_FnCallExpr> _39842_fc,jule::Ref<_1acde49c3_Data> _39863_d) {
	if (_39842_fc->_field_generics.len() > 0LL) {
		_39828_e->_method_push_err(_39842_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_39842_fc->_field_args.len() < 2LL) {
		if (_39842_fc->_field_args.len() == 1LL) {
			_39828_e->_method_push_err(_39842_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		_39828_e->_method_push_err(_39842_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_39842_fc->_field_args.len() > 3LL) {
		_39828_e->_method_push_err(_39842_fc->_field_args[3LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1acde49c3_Data> _41413_t = _39828_e->_method_eval_expr_kind(_39842_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_41413_t)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if ((!(_41413_t->_field_decl)) || (!(jule::real(_41413_t->_field_kind->_method_slc())))) {
		_39828_e->_method_push_err(_39842_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	_39863_d->_field_kind=_41413_t->_field_kind;
	jule::Ref<_1acde49c3_Data> _42613_len = _39828_e->_field_s->_method_evalp(_39842_fc->_field_args[1LL],_39828_e->_field_lookup,_41413_t->_field_kind);
	if ((!(jule::real(_42613_len)))) {
		return _39863_d;
	}
	_39828_e->_method_check_integer_indexing_by_data(_42613_len,_39842_fc->_field_args[1LL]->_field_token);
	if (_39842_fc->_field_args.len() == 3LL) {
		jule::Ref<_1acde49c3_Data> _43417_cap = _39828_e->_field_s->_method_evalp(_39842_fc->_field_args[2LL],_39828_e->_field_lookup,_41413_t->_field_kind);
		if ((!(jule::real(_43417_cap)))) {
			return _39863_d;
		}
		_39828_e->_method_check_integer_indexing_by_data(_43417_cap,_39842_fc->_field_args[2LL]->_field_token);
		_39863_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_BuiltinMakeCallExprModel>(new( std::nothrow ) _1ab0a4954_BuiltinMakeCallExprModel(_41413_t->_field_kind,_42613_len->_field_model,_43417_cap->_field_model)));
	} else {
		_39863_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_BuiltinMakeCallExprModel>(new( std::nothrow ) _1ab0a4954_BuiltinMakeCallExprModel(_41413_t->_field_kind,_42613_len->_field_model,jule::Any())));
	}
	return _39863_d;
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_append(jule::Ref<_1acde49c3_Eval> _45530_e,jule::Ref<_1aaeea1c4_FnCallExpr> _45544_fc,jule::Ref<_1acde49c3_Data> _45565_d) {
	if (_45544_fc->_field_generics.len() > 0LL) {
		_45530_e->_method_push_err(_45544_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_45544_fc->_field_args.len() < 2LL) {
		if (_45544_fc->_field_args.len() == 1LL) {
			_45530_e->_method_push_err(_45544_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		_45530_e->_method_push_err(_45544_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Ref<_1acde49c3_Data> _46813_t = _45530_e->_method_eval_expr(_45544_fc->_field_args[0LL]);
	if ((!(jule::real(_46813_t)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Bool _47313_ref = false;
	if (jule::real(_46813_t->_field_kind->_method_ref())) {
		_46813_t->_field_kind=_46813_t->_field_kind->_method_ref()->_field_elem;
		_47313_ref=true;
	}
	if ((!(jule::real(_46813_t->_field_kind->_method_slc())))) {
		_45530_e->_method_push_err(_45544_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Ref<_1ab07a50c_FnIns> _48413_f = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>({jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str())),_46813_t->_field_kind->_method_clone())),jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),true,true,jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str())),_46813_t->_field_kind->_method_slc()->_field_elem->_method_clone()))}),_46813_t->_field_kind->_method_clone(),jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common_plain,jule::Bool(),jule::Bool()));
	_45565_d->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_48413_f));
	_45565_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_CommonIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonIdentExprModel(jule::Str("append", 6))));
	_45565_d=_1ad5a38bd_builtin_caller_common_plain(_45530_e,_45544_fc,_45565_d);
	if (jule::real(_45565_d)) {
		jule::Ref<_1ab0a4954_FnCallExprModel> _50817_model = _45565_d->_field_model.operator jule::Ref<_1ab0a4954_FnCallExprModel>();
		if (_47313_ref) {
			_50817_model->_field_args[0LL]=jule::Any(jule::new_struct<_1ab0a4954_ExplicitDerefExprModel>(new( std::nothrow ) _1ab0a4954_ExplicitDerefExprModel(_46813_t->_field_model)));
		}
		_45565_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_BuiltinAppendCallExprModel>(new( std::nothrow ) _1ab0a4954_BuiltinAppendCallExprModel(_50817_model->_field_args[0LL],_50817_model->_field_args[1LL])));
	}
	return _45565_d;
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_copy(jule::Ref<_1acde49c3_Eval> _52228_e,jule::Ref<_1aaeea1c4_FnCallExpr> _52242_fc,jule::Ref<_1acde49c3_Data> _52263_d) {
	if (_52242_fc->_field_generics.len() > 0LL) {
		_52228_e->_method_push_err(_52242_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_52242_fc->_field_args.len() < 2LL) {
		if (_52242_fc->_field_args.len() == 1LL) {
			_52228_e->_method_push_err(_52242_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_1acde49c3_Data>();
		}
		_52228_e->_method_push_err(_52242_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_52242_fc->_field_args.len() > 2LL) {
		_52228_e->_method_push_err(_52242_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1acde49c3_Data> _53813_t = _52228_e->_method_eval_expr(_52242_fc->_field_args[0LL]);
	if ((!(jule::real(_53813_t)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Bool _54313_ref = false;
	if (jule::real(_53813_t->_field_kind->_method_ref())) {
		_53813_t->_field_kind=_53813_t->_field_kind->_method_ref()->_field_elem;
		_54313_ref=false;
	}
	if ((!(jule::real(_53813_t->_field_kind->_method_slc())))) {
		_52228_e->_method_push_err(_52242_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	if ((!(_53813_t->_field_mutable))) {
		_52228_e->_method_push_err(_52242_fc->_field_args[0LL]->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab07a50c_FnIns> _55813_f = jule::new_struct<_1ab07a50c_FnIns>(new( std::nothrow ) _1ab07a50c_FnIns(jule::Ref<_1ab064271_StructIns>(),jule::Ref<_1ab07a50c_Fn>(),jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>(),jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>({jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param()),_53813_t->_field_kind->_method_clone())),jule::new_struct<_1ab07a50c_ParamIns>(new( std::nothrow ) _1ab07a50c_ParamIns(jule::new_struct<_1ab07a50c_Param>(new( std::nothrow ) _1ab07a50c_Param(_1ab0277b7_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1ad3e617d_TypeSymbol>(),jule::Str())),_53813_t->_field_kind->_method_clone()))}),_1ad5a38bd_BUILTIN_FN_COPY->_field_result,jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ac699a1a_ReferenceStack>(),jule::Ref<_1ac699a1a_ReferenceStack>(),_1ad5a38bd_builtin_caller_common_plain,jule::Bool(),jule::Bool()));
	_52263_d->_field_kind=jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_55813_f));
	_52263_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_CommonIdentExprModel>(new( std::nothrow ) _1ab0a4954_CommonIdentExprModel(jule::Str("copy", 4))));
	_52263_d=_1ad5a38bd_builtin_caller_common_plain(_52228_e,_52242_fc,_52263_d);
	if (jule::real(_52263_d) && _54313_ref) {
		_52263_d->_field_model.operator jule::Ref<_1ab0a4954_FnCallExprModel>()->_field_args[0LL]=jule::Any(jule::new_struct<_1ab0a4954_ExplicitDerefExprModel>(new( std::nothrow ) _1ab0a4954_ExplicitDerefExprModel(_53813_t->_field_model)));
	}
	return _52263_d;
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_recover(jule::Ref<_1acde49c3_Eval> _58731_e,jule::Ref<_1aaeea1c4_FnCallExpr> _58745_fc,jule::Ref<_1acde49c3_Data> ) {
	if (_58745_fc->_field_generics.len() > 0LL) {
		_58731_e->_method_push_err(_58745_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	
	if (_58745_fc->_field_args.len() < 1LL) {
		_58731_e->_method_push_err(_58745_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("handler", 7))}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_58745_fc->_field_args.len() > 1LL) {
		_58731_e->_method_push_err(_58745_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1acde49c3_Data> _60113_t = _58731_e->_method_eval_expr(_58745_fc->_field_args[0LL]);
	if ((!(jule::real(_60113_t)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	if ((!(jule::real(_60113_t->_field_kind->_method_fnc())))) {
		_58731_e->_method_push_err(_58745_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Str _6119_tkind = _60113_t->_field_kind->_method_fnc()->_method_to_str();
	if (_6119_tkind != jule::Str("fn(Error)", 9)) {
		_58731_e->_method_push_err(_58745_fc->_field_args[0LL]->_field_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_6119_tkind),jule::Any(jule::Str("fn(Error)", 9))}));
	}
	jule::Ref<_1acde49c3_Data> _61613_d = _1acde49c3_build_void_data();
	_61613_d->_field_kind=_60113_t->_field_kind->_method_clone();
	_61613_d->_field_model=jule::Any(jule::new_struct<_1ac77dd1e_Recover>(new( std::nothrow ) _1ac77dd1e_Recover(jule::Ref<_1ab07a50c_FnIns>(),_60113_t->_field_model,jule::Ref<_1ac77dd1e_Scope>(),jule::Ref<_1ab07a50c_FnIns>())));
	return _61613_d;
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_clone(jule::Ref<_1acde49c3_Eval> _62429_e,jule::Ref<_1aaeea1c4_FnCallExpr> _62443_fc,jule::Ref<_1acde49c3_Data> ) {
	if (_62443_fc->_field_generics.len() > 0LL) {
		_62429_e->_method_push_err(_62443_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_62443_fc->_field_args.len() < 1LL) {
		_62429_e->_method_push_err(_62443_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_1acde49c3_Data>();
	}
	if (_62443_fc->_field_args.len() > 1LL) {
		_62429_e->_method_push_err(_62443_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1acde49c3_Data> _63713_d = _62429_e->_method_eval_expr_kind(_62443_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_63713_d)))) {
		return jule::new_ref<_1acde49c3_Data>();
	}
	jule::Fn<void(jule::Ref<_1ad3e617d_TypeKind>)> _6429_check_kind = jule::Fn<void(jule::Ref<_1ad3e617d_TypeKind>)>([=](jule::Ref<_1ad3e617d_TypeKind> _64229_k) mutable -> void {
		{
			if (!((jule::real(_64229_k->_method_slc())))) { goto _case_end_4445320224; }
			_case_begin_4445320224:;
			{
				if ((!(_1ad3e617d_supports_cloning(_64229_k->_method_slc()->_field_elem)))) {
					_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_64229_k->_method_to_str())}));
				}
			}
			goto _match_end_4445316192;
			_case_end_4445320224:;
			if (!((jule::real(_64229_k->_method_map())))) { goto _case_end_4445317216; }
			_case_begin_4445317216:;
			{
				if ((!(_1ad3e617d_supports_cloning(_64229_k->_method_map()->_field_key))) || _1ad3e617d_supports_cloning(_64229_k->_method_map()->_field_val)) {
					_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_64229_k->_method_to_str())}));
				}
			}
			goto _match_end_4445316192;
			_case_end_4445317216:;
			if (!((jule::real(_64229_k->_method_arr())))) { goto _case_end_4445316688; }
			_case_begin_4445316688:;
			{
				if ((!(_1ad3e617d_supports_cloning(_64229_k->_method_arr()->_field_elem)))) {
					_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_64229_k->_method_to_str())}));
				}
			}
			goto _match_end_4445316192;
			_case_end_4445316688:;
			if (!((jule::real(_64229_k->_method_ref())))) { goto _case_end_4445316800; }
			_case_begin_4445316800:;
			{
				if ((!(_1ad3e617d_supports_cloning(_64229_k->_method_ref()->_field_elem)))) {
					_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_64229_k->_method_to_str())}));
				}
			}
			goto _match_end_4445316192;
			_case_end_4445316800:;
			if (!((jule::real(_64229_k->_method_strct())))) { goto _case_end_4445316912; }
			_case_begin_4445316912:;
			{
				jule::Ref<_1ab064271_StructIns> _66517_s = _63713_d->_field_kind->_method_strct();
				if ((!(_66517_s->_field_has_mut))) {
					_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any(_63713_d->_field_kind->_method_to_str())}));
				}
				if (((!(jule::real(_66517_s->_field_decl))) || _66517_s->_field_decl->_field_cpp_linked) || (!(_66517_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_63713_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				}
			}
			goto _match_end_4445316192;
			_case_end_4445316912:;
			_case_begin_4445316384:;
			{
				_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_63713_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
			}
			goto _match_end_4445316192;
			_case_end_4445316384:;
			_match_end_4445316192:;
		}
	});
	{
		if (!(((!(_63713_d->_field_lvalue))))) { goto _case_end_4445338640; }
		_case_begin_4445338640:;
		{
			_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("non-lvalue expressions cannot be clone", 38),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4445348816;
		_case_end_4445338640:;
		if (!(((!(_1ad3e617d_supports_cloning(_63713_d->_field_kind)))))) { goto _case_end_4445338752; }
		_case_begin_4445338752:;
		{
			_6429_check_kind(_63713_d->_field_kind);
		}
		goto _match_end_4445348816;
		_case_end_4445338752:;
		_match_end_4445348816:;
	}
	_63713_d->_field_mutable=true;
	_63713_d->_field_model=jule::Any(jule::new_struct<_1ab0a4954_BuiltinCloneCallExprModel>(new( std::nothrow ) _1ab0a4954_BuiltinCloneCallExprModel(_63713_d->_field_model)));
	return _63713_d;
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_std_mem_size_of(jule::Ref<_1acde49c3_Eval> _69139_e,jule::Ref<_1aaeea1c4_FnCallExpr> _69153_fc,jule::Ref<_1acde49c3_Data> ) {
	if (_69153_fc->_field_generics.len() > 0LL) {
		_69139_e->_method_push_err(_69153_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1acde49c3_Data> _69513_result = jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
	if (_69153_fc->_field_args.len() < 1LL) {
		_69139_e->_method_push_err(_69153_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _69513_result;
	}
	if (_69153_fc->_field_args.len() > 1LL) {
		_69139_e->_method_push_err(_69153_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1acde49c3_Data> _70713_d = _69139_e->_method_eval_expr_kind(_69153_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_70713_d)))) {
		return _69513_result;
	}
	_69513_result->_field_model=jule::Any(jule::new_struct<_1ab0a4954_SizeofExprModel>(new( std::nothrow ) _1ab0a4954_SizeofExprModel(_70713_d->_field_model)));
	return _69513_result;
}



inline jule::Ref<_1acde49c3_Data> _1ad5a38bd_builtin_caller_std_mem_align_of(jule::Ref<_1acde49c3_Eval> _71640_e,jule::Ref<_1aaeea1c4_FnCallExpr> _71654_fc,jule::Ref<_1acde49c3_Data> ) {
	if (_71654_fc->_field_generics.len() > 0LL) {
		_71640_e->_method_push_err(_71654_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1acde49c3_Data> _72013_result = jule::new_struct<_1acde49c3_Data>(new( std::nothrow ) _1acde49c3_Data(jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1ad3e617d_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1ad3e617d_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ad6d5cec_Const>()));
	if (_71654_fc->_field_args.len() < 1LL) {
		_71640_e->_method_push_err(_71654_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _72013_result;
	}
	if (_71654_fc->_field_args.len() > 1LL) {
		_71640_e->_method_push_err(_71654_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1acde49c3_Data> _73213_d = _71640_e->_method_eval_expr_kind(_71654_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_73213_d)))) {
		return _72013_result;
	}
	_72013_result->_field_model=jule::Any(jule::new_struct<_1ab0a4954_AlignofExprModel>(new( std::nothrow ) _1ab0a4954_AlignofExprModel(_73213_d->_field_model)));
	return _72013_result;
}



inline jule::Bool _1aae6bc28_eval_directive_ident(jule::Str _625_ident) {
	if (_625_ident == jule::Str("", 0)) {
		return false;
	}
	{
		auto _range_expr = _1aae806a9_FLAGS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1aae6bc28_flag = *_range_begin;
			_iter_begin_4453061328:;
			{
				if (_1aae6bc28_flag == _625_ident) {
					return true;
				}
			}
			_iter_next_4453061328:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae6bc28_flag = *_range_begin; goto _iter_begin_4453061328; }
			_iter_end_4453061328:;
		}
	}
	return false;
}



inline jule::Bool _1aae6bc28_eval_directive_part(jule::Str _2228_part) {
	jule::Bool _239_logical_not = _2228_part[0LL] == '!';
	if (_239_logical_not) {
		_2228_part=_2228_part.slice(1LL);
	}
	jule::Bool _2813_result = _1aae6bc28_eval_directive_ident(_2228_part);
	if (_239_logical_not) {
		_2813_result=(!(_2813_result));
	}
	return _2813_result;
}



inline jule::Slice<jule::Str> _1aae6bc28_split_operans(jule::Str _3718_op,jule::Str _3727_expr) {
	jule::Slice<jule::Str> _3813_parts = jule::Slice<jule::Str>::alloc(0LL,10LL);
	jule::Int _4013_range_n = 0LL;
	jule::Int _4113_i = 0LL;
	jule::Int _4213_last = 0LL;
	_iter_begin_4453072000:;
	if (!(_4113_i < (_3727_expr.len() - 1LL))) { goto _iter_end_4453072000; }
	{
		jule::U8 _4413_b = _3727_expr[static_cast<jule::Int>(_4113_i)];
		if (_4413_b == '(') {
			(_4013_range_n)++;
			goto _iter_next_4453072000;
		} else if (_4413_b == ')') {
			(_4013_range_n)--;
		}
		if (_4013_range_n > 0LL) {
			goto _iter_next_4453072000;
		}
		{
			auto _match_expr{ _3718_op };
			if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4453077952; }
			_case_begin_4453077952:;
			{
				if ((_4413_b == '|') && (_3727_expr[static_cast<jule::Int>(_4113_i + 1LL)] == '|')) {
					_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last),static_cast<jule::Int>(_4113_i))}));
					_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
				}
			}
			goto _match_end_4453076080;
			_case_end_4453077952:;
			if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4453078064; }
			_case_begin_4453078064:;
			{
				if ((_4413_b == '&') && (_3727_expr[static_cast<jule::Int>(_4113_i + 1LL)] == '&')) {
					_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last),static_cast<jule::Int>(_4113_i))}));
					_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
				}
			}
			goto _match_end_4453076080;
			_case_end_4453078064:;
			_match_end_4453076080:;
		}
	}
	_iter_next_4453072000:;
	(_4113_i)++;
	goto _iter_begin_4453072000;
	_iter_end_4453072000:;
	if (_4213_last < _3727_expr.len()) {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last))}));
	} else {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({jule::Str("", 0)}));
	}
	return _3813_parts;
}



inline jule::Bool _1aae6bc28_eval_directive_expr(jule::Str _8724_expr) {
	if (_8724_expr == jule::Str("", 0)) {
		return false;
	}
	jule::Bool _9213_result = false;
	jule::Slice<jule::Str> _949_logical_or_parts = _1aae6bc28_split_operans(jule::Str("||", 2),_8724_expr);
	{
		auto _range_expr = _949_logical_or_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1aae6bc28_part = *_range_begin;
			_iter_begin_4453094752:;
			{
				if (_1aae6bc28_part == jule::Str("", 0)) {
					return false;
				}
				jule::Bool _10017_and = true;
				jule::Slice<jule::Str> _10113_logical_and_parts = _1aae6bc28_split_operans(jule::Str("&&", 2),_1aae6bc28_part);
				{
					auto _range_expr = _10113_logical_and_parts;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Str _1aae6bc28_and_part = *_range_begin;
						_iter_begin_4453099312:;
						{
							if (_1aae6bc28_and_part.find(jule::Str("(", 1)) != -1LL) {
								if (_1aae6bc28_and_part[static_cast<jule::Int>(_1aae6bc28_and_part.len() - 1LL)] != ')') {
									return false;
								}
								jule::Str _10721_expr = _1aae6bc28_and_part.slice(1LL,static_cast<jule::Int>(_1aae6bc28_and_part.len() - 1LL));
								_10017_and=_10017_and && _1aae6bc28_eval_directive_expr(_10721_expr);
							} else {
								_10017_and=_10017_and && _1aae6bc28_eval_directive_part(_1aae6bc28_and_part);
							}
						}
						_iter_next_4453099312:;
						++_range_begin;
						if (_range_begin != _range_end) { _1aae6bc28_and_part = *_range_begin; goto _iter_begin_4453099312; }
						_iter_end_4453099312:;
					}
				}
				_9213_result=_9213_result || _10017_and;
			}
			_iter_next_4453094752:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae6bc28_part = *_range_begin; goto _iter_begin_4453094752; }
			_iter_end_4453094752:;
		}
	}
	return _9213_result;
}



inline void _1aae806a9_set_os_flags(void) {
	{
		if (!((jule::Str("windows", 7)) == jule::Str("darwin", 6))) { goto _case_end_4453109232; }
		_case_begin_4453109232:;
		{
			_1aae806a9_FLAGS=jule::append(_1aae806a9_FLAGS,jule::Slice<jule::Str>({jule::Str("windows", 7)}));
		}
		goto _match_end_4453094448;
		_case_end_4453109232:;
		if (!((jule::Str("linux", 5)) == jule::Str("darwin", 6))) { goto _case_end_4453095376; }
		_case_begin_4453095376:;
		{
			_1aae806a9_FLAGS=jule::append(_1aae806a9_FLAGS,jule::Slice<jule::Str>({jule::Str("linux", 5)}));
		}
		goto _match_end_4453094448;
		_case_end_4453095376:;
		if (!((jule::Str("darwin", 6)) == jule::Str("darwin", 6))) { goto _case_end_4453095488; }
		_case_begin_4453095488:;
		{
			_1aae806a9_FLAGS=jule::append(_1aae806a9_FLAGS,jule::Slice<jule::Str>({jule::Str("darwin", 6)}));
		}
		goto _match_end_4453094448;
		_case_end_4453095488:;
		_match_end_4453094448:;
	}
	if (_1b6ba767d_is_unix(jule::Str("darwin", 6))) {
		_1aae806a9_FLAGS=jule::append(_1aae806a9_FLAGS,jule::Slice<jule::Str>({jule::Str("unix", 4)}));
	}
}



inline void _1aae806a9_set_arch_flags(void) {
	{
		if (!((jule::Str("i386", 4)) == jule::Str("arm64", 5))) { goto _case_end_4453095776; }
		_case_begin_4453095776:;
		{
			_1aae806a9_FLAGS=jule::append(_1aae806a9_FLAGS,jule::Slice<jule::Str>({jule::Str("i386", 4)}));
		}
		goto _match_end_4453110384;
		_case_end_4453095776:;
		if (!((jule::Str("amd64", 5)) == jule::Str("arm64", 5))) { goto _case_end_4453113488; }
		_case_begin_4453113488:;
		{
			_1aae806a9_FLAGS=jule::append(_1aae806a9_FLAGS,jule::Slice<jule::Str>({jule::Str("amd64", 5)}));
		}
		goto _match_end_4453110384;
		_case_end_4453113488:;
		if (!((jule::Str("arm64", 5)) == jule::Str("arm64", 5))) { goto _case_end_4453113024; }
		_case_begin_4453113024:;
		{
			_1aae806a9_FLAGS=jule::append(_1aae806a9_FLAGS,jule::Slice<jule::Str>({jule::Str("arm64", 5)}));
		}
		goto _match_end_4453110384;
		_case_end_4453113024:;
		_match_end_4453110384:;
	}
	if (_1b6ba767d_is_64bit(jule::Str("arm64", 5))) {
		_1aae806a9_FLAGS=jule::append(_1aae806a9_FLAGS,jule::Slice<jule::Str>({jule::Str("64bit", 5)}));
	}
	if (_1b6ba767d_is_32bit(jule::Str("arm64", 5))) {
		_1aae806a9_FLAGS=jule::append(_1aae806a9_FLAGS,jule::Slice<jule::Str>({jule::Str("32bit", 5)}));
	}
}



inline void _1aae806a9_init(void) {
	_1aae806a9_set_os_flags();
	_1aae806a9_set_arch_flags();
}



inline void _1aae95878_exit_err(jule::Str _2313_msg) {
	
	jule::outln(_2313_msg);
	_1aa179596_exit(1LL);
}



inline jule::Slice<jule::U8> _1aae95878_read_buff(jule::Str _3114_path) {
	jule::Slice<jule::U8> _3214_buffer;
	jule::Int _3222_err;
	std::tie(_3214_buffer,_3222_err) = _1ab00383c_read_file(_3114_path);
	if (_3222_err != 0LLU) {
		_1aae95878_exit_err(jule::Str("error: file cannot read", 23));
	}
	return _3214_buffer;
}



inline _1d068165a_Log _1aae95878_flat_compiler_err(jule::Str _4122_text) {
	return _1d068165a_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_4122_text,jule::Str(),jule::Str());
}



inline std::tuple<jule::Slice<jule::Ref<_1aaee94d1_DirEntry>>,jule::Str> _1aae95878_read_package_dirents(jule::Str _4925_path) {
	jule::Str _4951_err_msg = jule::Str();
	jule::Slice<jule::Ref<_1aaee94d1_DirEntry>> _5014_dirents;
	jule::Int _5023_err;
	std::tie(_5014_dirents,_5023_err) = _1ab03d6bd_read_dir(_4925_path);
	if (_5023_err != 0LLU) {
		_4951_err_msg = jule::Str("connot read package directory: ", 31) + _4925_path;
		return std::make_tuple(nullptr,_4951_err_msg);
	}
	jule::Slice<jule::Ref<_1aaee94d1_DirEntry>> _5513_passed_dirents = nullptr;
	{
		auto _range_expr = _5014_dirents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaee94d1_DirEntry> _1aae95878_dirent = *_range_begin;
			_iter_begin_4453135248:;
			{
				jule::Str _5713_name = _1aae95878_dirent->_field_name;
				if (_1aae95878_dirent->_field_stat->_method_is_dir() || (!(_5713_name.has_suffix(jule::Str(".jule", 5))))) {
					goto _iter_next_4453135248;
				}
				_5513_passed_dirents=jule::append(_5513_passed_dirents,jule::Slice<jule::Ref<_1aaee94d1_DirEntry>>({_1aae95878_dirent}));
			}
			_iter_next_4453135248:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae95878_dirent = *_range_begin; goto _iter_begin_4453135248; }
			_iter_end_4453135248:;
		}
	}
	_4951_err_msg = jule::Str("", 0);
	return std::make_tuple(_5513_passed_dirents,_4951_err_msg);
}



inline jule::Str _1aae95878_concat_all_parts(jule::Slice<jule::Str> _7121_parts) {
	jule::Str _7213_s = jule::Str("", 0);
	{
		auto _range_expr = _7121_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1aae95878_part = *_range_begin;
			_iter_begin_4453145440:;
			{
				_7213_s+=_1aae95878_part;
			}
			_iter_next_4453145440:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae95878_part = *_range_begin; goto _iter_begin_4453145440; }
			_iter_end_4453145440:;
		}
	}
	return _7213_s;
}



inline jule::Bool _1aae95878_is_pass_build_directives(jule::Ref<_1ab026d8d_Ast>& _8034_file) {
	{
		auto _range_expr = _8034_file->_field_top_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaeea1c4_Directive> _1aae95878_td = *_range_begin;
			_iter_begin_4453146944:;
			{
				if (_1aae95878_td->_field_tag != jule::Str("build", 5)) {
					goto _iter_next_4453146944;
				}
				jule::Str _8613_expr = _1aae95878_concat_all_parts(_1aae95878_td->_field_args);
				jule::Bool _8713_result = _1aae6bc28_eval_directive_expr(_8613_expr);
				if ((!(_8713_result))) {
					return false;
				}
			}
			_iter_next_4453146944:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae95878_td = *_range_begin; goto _iter_begin_4453146944; }
			_iter_end_4453146944:;
		}
	}
	return true;
}



inline void _1aae4981b_push_passes(jule::Ref<_1ac78be4d_Package>& _11321_p,jule::Slice<jule::Str>& _11345_passes) {
	{
		auto _range_expr = _11321_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1aae4981b_f = *_range_begin;
			_iter_begin_4453216864:;
			{
				_julec_label_push:;
				{
					auto _range_expr = _1aae4981b_f->_field_passes;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						_1ac699a1a_Pass _1aae4981b_pass = *_range_begin;
						_iter_begin_4453219152:;
						{
							if (_1aae4981b_pass._field_text == jule::Str("", 0)) {
								goto _iter_next_4453219152;
							}
							{
								auto _range_expr = _11345_passes;
								if (_range_expr.begin() != _range_expr.end()) {
									auto _range_begin = _range_expr.begin();
									const auto _range_end = _range_expr.end();
									jule::Str _1aae4981b_cpass = *_range_begin;
									_iter_begin_4453221904:;
									{
										if (_1aae4981b_cpass == _1aae4981b_pass._field_text) {
											goto _iter_next_4453219152;
										}
									}
									_iter_next_4453221904:;
									++_range_begin;
									if (_range_begin != _range_end) { _1aae4981b_cpass = *_range_begin; goto _iter_begin_4453221904; }
									_iter_end_4453221904:;
								}
							}
							_11345_passes=jule::append(_11345_passes,jule::Slice<jule::Str>({_1aae4981b_pass._field_text}));
						}
						_iter_next_4453219152:;
						++_range_begin;
						if (_range_begin != _range_end) { _1aae4981b_pass = *_range_begin; goto _iter_begin_4453219152; }
						_iter_end_4453219152:;
					}
				}
			}
			_iter_next_4453216864:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae4981b_f = *_range_begin; goto _iter_begin_4453216864; }
			_iter_end_4453216864:;
		}
	}
}



inline jule::Slice<jule::Str> _1aae4981b_get_all_unique_passes(jule::Ref<_1ac78be4d_Package>& _13031_pkg,jule::Slice<jule::Ref<_1ac78be4d_ImportInfo>> _13056_uses) {
	jule::Slice<jule::Str> _13113_passes = nullptr;
	_1aae4981b_push_passes(_13031_pkg,_13113_passes);
	{
		auto _range_expr = _13056_uses;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1aae4981b_u = *_range_begin;
			_iter_begin_4453228016:;
			{
				if ((!(_1aae4981b_u->_field_cpp_linked))) {
					_1aae4981b_push_passes(_1aae4981b_u->_field_package,_13113_passes);
				}
			}
			_iter_next_4453228016:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae4981b_u = *_range_begin; goto _iter_begin_4453228016; }
			_iter_end_4453228016:;
		}
	}
	return _13113_passes;
}



inline jule::Bool _1aadca5e3_is_exist_0(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1ab07a50c_FnIns> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1aadca5e3_ref = *_range_begin;
			_iter_begin_4451394208:;
			{
				{
					auto _match_expr{ _1aadca5e3_ref };
					if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_FnIns>>())) { goto _case_end_4451396064; }
					_case_begin_4451396064:;
					{
						if ((_1aadca5e3_ref.operator jule::Ref<_1ab07a50c_FnIns>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4451395632;
					_case_end_4451396064:;
					_match_end_4451395632:;
				}
			}
			_iter_next_4451394208:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aadca5e3_ref = *_range_begin; goto _iter_begin_4451394208; }
			_iter_end_4451394208:;
		}
	}
	return false;
}

inline jule::Bool _1aadca5e3_is_exist_1(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1aca3647d_Var> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1aadca5e3_ref = *_range_begin;
			_iter_begin_4451402400:;
			{
				{
					auto _match_expr{ _1aadca5e3_ref };
					if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4451404256; }
					_case_begin_4451404256:;
					{
						if ((_1aadca5e3_ref.operator jule::Ref<_1aca3647d_Var>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4451403824;
					_case_end_4451404256:;
					_match_end_4451403824:;
				}
			}
			_iter_next_4451402400:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aadca5e3_ref = *_range_begin; goto _iter_begin_4451402400; }
			_iter_end_4451402400:;
		}
	}
	return false;
}

inline jule::Bool _1aadca5e3_is_exist_2(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1ab064271_StructIns> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1aadca5e3_ref = *_range_begin;
			_iter_begin_4451410656:;
			{
				{
					auto _match_expr{ _1aadca5e3_ref };
					if (!(_match_expr.type_is<jule::Ref<_1ab064271_StructIns>>())) { goto _case_end_4451412512; }
					_case_begin_4451412512:;
					{
						if ((_1aadca5e3_ref.operator jule::Ref<_1ab064271_StructIns>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4451412080;
					_case_end_4451412512:;
					_match_end_4451412080:;
				}
			}
			_iter_next_4451410656:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aadca5e3_ref = *_range_begin; goto _iter_begin_4451410656; }
			_iter_end_4451410656:;
		}
	}
	return false;
}

inline jule::Bool _1aadca5e3_is_exist_3(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1ac276c57_Trait> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1aadca5e3_ref = *_range_begin;
			_iter_begin_4451418848:;
			{
				{
					auto _match_expr{ _1aadca5e3_ref };
					if (!(_match_expr.type_is<jule::Ref<_1ac276c57_Trait>>())) { goto _case_end_4451420704; }
					_case_begin_4451420704:;
					{
						if ((_1aadca5e3_ref.operator jule::Ref<_1ac276c57_Trait>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4451420272;
					_case_end_4451420704:;
					_match_end_4451420272:;
				}
			}
			_iter_next_4451418848:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aadca5e3_ref = *_range_begin; goto _iter_begin_4451418848; }
			_iter_end_4451418848:;
		}
	}
	return false;
}



inline jule::Bool _1aadca5e3_is_exist_ref(jule::Slice<jule::Any> _4321_refs,jule::Any _4334_ref) {
	{
		auto _match_expr{ _4334_ref };
		if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_FnIns>>())) { goto _case_end_4451386080; }
		_case_begin_4451386080:;
		{
			return _1aadca5e3_is_exist_0(_4321_refs,_4334_ref.operator jule::Ref<_1ab07a50c_FnIns>());
		}
		goto _match_end_4451385296;
		_case_end_4451386080:;
		if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4451386192; }
		_case_begin_4451386192:;
		{
			return _1aadca5e3_is_exist_1(_4321_refs,_4334_ref.operator jule::Ref<_1aca3647d_Var>());
		}
		goto _match_end_4451385296;
		_case_end_4451386192:;
		if (!(_match_expr.type_is<jule::Ref<_1ab064271_StructIns>>())) { goto _case_end_4451386304; }
		_case_begin_4451386304:;
		{
			return _1aadca5e3_is_exist_2(_4321_refs,_4334_ref.operator jule::Ref<_1ab064271_StructIns>());
		}
		goto _match_end_4451385296;
		_case_end_4451386304:;
		if (!(_match_expr.type_is<jule::Ref<_1ac276c57_Trait>>())) { goto _case_end_4451387376; }
		_case_begin_4451387376:;
		{
			return _1aadca5e3_is_exist_3(_4321_refs,_4334_ref.operator jule::Ref<_1ac276c57_Trait>());
		}
		goto _match_end_4451385296;
		_case_end_4451387376:;
		_case_begin_4451385552:;
		{
			return false;
		}
		goto _match_end_4451385296;
		_case_end_4451385552:;
		_match_end_4451385296:;
	}
}



inline jule::Bool _1aadca5e3_is_dead(jule::Any _5416_ref) {
	jule::Bool _5428_dead = jule::Bool();
	if (_1aadca5e3_is_exist_ref(_1aadca5e3_deads,_5416_ref)) {
		_5428_dead = true;
		return _5428_dead;
	}
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_FnIns>>())) { goto _case_end_4451425904; }
		_case_begin_4451425904:;
		{
			if (_5416_ref.operator jule::Ref<_1ab07a50c_FnIns>()->_field_decl->_method_is_init()) {
				goto _match_end_4451421376;
			}
			goto _case_begin_4451386736;
		}
		goto _match_end_4451421376;
		_case_end_4451425904:;
		_case_begin_4451386736:;
		{
			if (_1aadca5e3_is_exist_ref(jule::Slice<jule::Any>({_1aadca5e3_current,_1aadca5e3_main_current}),_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
			if (_1aadca5e3_is_exist_ref(_1aadca5e3_checking,_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
		}
		goto _match_end_4451421376;
		_case_end_4451386736:;
		_match_end_4451421376:;
	}
	jule::Any _7513_old = _1aadca5e3_current;
	_1aadca5e3_current=_5416_ref;
	jule::I64 _779_len = _1aadca5e3_checking.len();
	_1aadca5e3_checking=jule::append(_1aadca5e3_checking,jule::Slice<jule::Any>({_5416_ref}));
	__JULE_DEFER({
		_1aadca5e3_current=_7513_old;
		_1aadca5e3_drop_ref(_1aadca5e3_checking,_779_len);
	});
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_FnIns>>())) { goto _case_end_4451432496; }
		_case_begin_4451432496:;
		{
			_5428_dead = _1aadca5e3_is_fn_dead(_5416_ref.operator jule::Ref<_1ab07a50c_FnIns>());
			return _5428_dead;
		}
		goto _match_end_4451430368;
		_case_end_4451432496:;
		if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4451432608; }
		_case_begin_4451432608:;
		{
			_5428_dead = _1aadca5e3_is_var_dead(_5416_ref.operator jule::Ref<_1aca3647d_Var>());
			return _5428_dead;
		}
		goto _match_end_4451430368;
		_case_end_4451432608:;
		if (!(_match_expr.type_is<jule::Ref<_1ab064271_StructIns>>())) { goto _case_end_4451432720; }
		_case_begin_4451432720:;
		{
			_5428_dead = _1aadca5e3_is_struct_dead(_5416_ref.operator jule::Ref<_1ab064271_StructIns>());
			return _5428_dead;
		}
		goto _match_end_4451430368;
		_case_end_4451432720:;
		if (!(_match_expr.type_is<jule::Ref<_1ac276c57_Trait>>())) { goto _case_end_4451430480; }
		_case_begin_4451430480:;
		{
			_5428_dead = _1aadca5e3_is_trait_dead(_5416_ref.operator jule::Ref<_1ac276c57_Trait>());
			return _5428_dead;
		}
		goto _match_end_4451430368;
		_case_end_4451430480:;
		_case_begin_4451428016:;
		{
			_5428_dead = false;
			return _5428_dead;
		}
		goto _match_end_4451430368;
		_case_end_4451428016:;
		_match_end_4451430368:;
	}
}



inline void _1aadca5e3_drop_ref(jule::Slice<jule::Any>& _10618_refs,jule::Int _10631_pos) {
	_10618_refs=_10618_refs.slice(0LL,static_cast<jule::Int>(_10631_pos));
}



inline jule::Bool _1aadca5e3_is_all_references_are_dead_0(jule::Ref<_1ac699a1a_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	_iter_begin_4451452912:;
	if (!(_11513_i < _11438_references->_method_len())) { goto _iter_end_4451452912; }
	{
		jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
		{
			auto _match_expr{ _1aadca5e3_current };
			if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_FnIns>>())) { goto _case_end_4451455424; }
			_case_begin_4451455424:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_FnIns>>())) { goto _case_end_4451457744; }
					_case_begin_4451457744:;
					{
						if ((_1aadca5e3_current.operator jule::Ref<_1ab07a50c_FnIns>()).alloc == (_11717_ref.operator jule::Ref<_1ab07a50c_FnIns>()).alloc) {
							goto _iter_next_4451452912;
						}
					}
					goto _match_end_4451455536;
					_case_end_4451457744:;
					_match_end_4451455536:;
				}
			}
			goto _match_end_4451454672;
			_case_end_4451455424:;
			_match_end_4451454672:;
		}
		{
			auto _match_expr{ _1aadca5e3_main_current };
			if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_FnIns>>())) { goto _case_end_4451458400; }
			_case_begin_4451458400:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_FnIns>>())) { goto _case_end_4451458912; }
					_case_begin_4451458912:;
					{
						if ((_1aadca5e3_main_current.operator jule::Ref<_1ab07a50c_FnIns>()).alloc == (_11717_ref.operator jule::Ref<_1ab07a50c_FnIns>()).alloc) {
							goto _iter_next_4451452912;
						}
					}
					goto _match_end_4451460416;
					_case_end_4451458912:;
					_match_end_4451460416:;
				}
			}
			goto _match_end_4451459568;
			_case_end_4451458400:;
			_match_end_4451459568:;
		}
		if ((!(_1aadca5e3_is_dead(_11717_ref)))) {
			return false;
		}
	}
	_iter_next_4451452912:;
	(_11513_i)++;
	goto _iter_begin_4451452912;
	_iter_end_4451452912:;
	return true;
}

inline jule::Bool _1aadca5e3_is_all_references_are_dead_1(jule::Ref<_1ac699a1a_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	_iter_begin_4451472080:;
	if (!(_11513_i < _11438_references->_method_len())) { goto _iter_end_4451472080; }
	{
		jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
		{
			auto _match_expr{ _1aadca5e3_current };
			if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4451475232; }
			_case_begin_4451475232:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4451476880; }
					_case_begin_4451476880:;
					{
						if ((_1aadca5e3_current.operator jule::Ref<_1aca3647d_Var>()).alloc == (_11717_ref.operator jule::Ref<_1aca3647d_Var>()).alloc) {
							goto _iter_next_4451472080;
						}
					}
					goto _match_end_4451475424;
					_case_end_4451476880:;
					_match_end_4451475424:;
				}
			}
			goto _match_end_4451474656;
			_case_end_4451475232:;
			_match_end_4451474656:;
		}
		{
			auto _match_expr{ _1aadca5e3_main_current };
			if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4451479552; }
			_case_begin_4451479552:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4451476448; }
					_case_begin_4451476448:;
					{
						if ((_1aadca5e3_main_current.operator jule::Ref<_1aca3647d_Var>()).alloc == (_11717_ref.operator jule::Ref<_1aca3647d_Var>()).alloc) {
							goto _iter_next_4451472080;
						}
					}
					goto _match_end_4451480544;
					_case_end_4451476448:;
					_match_end_4451480544:;
				}
			}
			goto _match_end_4451478704;
			_case_end_4451479552:;
			_match_end_4451478704:;
		}
		if ((!(_1aadca5e3_is_dead(_11717_ref)))) {
			return false;
		}
	}
	_iter_next_4451472080:;
	(_11513_i)++;
	goto _iter_begin_4451472080;
	_iter_end_4451472080:;
	return true;
}

inline jule::Bool _1aadca5e3_is_all_references_are_dead_2(jule::Ref<_1ac699a1a_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	_iter_begin_4451507776:;
	if (!(_11513_i < _11438_references->_method_len())) { goto _iter_end_4451507776; }
	{
		jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
		{
			auto _match_expr{ _1aadca5e3_current };
			if (!(_match_expr.type_is<jule::Ref<_1ab064271_StructIns>>())) { goto _case_end_4451510896; }
			_case_begin_4451510896:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1ab064271_StructIns>>())) { goto _case_end_4451512576; }
					_case_begin_4451512576:;
					{
						if ((_1aadca5e3_current.operator jule::Ref<_1ab064271_StructIns>()).alloc == (_11717_ref.operator jule::Ref<_1ab064271_StructIns>()).alloc) {
							goto _iter_next_4451507776;
						}
					}
					goto _match_end_4451511072;
					_case_end_4451512576:;
					_match_end_4451511072:;
				}
			}
			goto _match_end_4451510352;
			_case_end_4451510896:;
			_match_end_4451510352:;
		}
		{
			auto _match_expr{ _1aadca5e3_main_current };
			if (!(_match_expr.type_is<jule::Ref<_1ab064271_StructIns>>())) { goto _case_end_4451513232; }
			_case_begin_4451513232:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1ab064271_StructIns>>())) { goto _case_end_4451513744; }
					_case_begin_4451513744:;
					{
						if ((_1aadca5e3_main_current.operator jule::Ref<_1ab064271_StructIns>()).alloc == (_11717_ref.operator jule::Ref<_1ab064271_StructIns>()).alloc) {
							goto _iter_next_4451507776;
						}
					}
					goto _match_end_4451515248;
					_case_end_4451513744:;
					_match_end_4451515248:;
				}
			}
			goto _match_end_4451514400;
			_case_end_4451513232:;
			_match_end_4451514400:;
		}
		if ((!(_1aadca5e3_is_dead(_11717_ref)))) {
			return false;
		}
	}
	_iter_next_4451507776:;
	(_11513_i)++;
	goto _iter_begin_4451507776;
	_iter_end_4451507776:;
	return true;
}



inline jule::Bool _1aadca5e3_is_fn_dead(jule::Ref<_1ab07a50c_FnIns> _14319_f) {
	if (_14319_f->_field_decl->_field_cpp_linked) {
		return false;
	}
	if (_14319_f->_field_decl->_method_is_entry_point() || _14319_f->_field_decl->_method_is_init()) {
		return (!(_14319_f->_field_decl->_field_statically));
	}
	if (jule::real(_14319_f->_field_owner)) {
		if (_1aadca5e3_is_exist_ref(_1aadca5e3_checking,jule::Any(_14319_f->_field_owner))) {
			return true;
		}
		return _1aadca5e3_is_dead(jule::Any(_14319_f->_field_owner));
	}
	return _1aadca5e3_is_all_references_are_dead_0(_14319_f->_field_references);
}



inline jule::Bool _1aadca5e3_is_var_dead(jule::Ref<_1aca3647d_Var> _16920_v) {
	if (_16920_v->_field_constant) {
		return true;
	}
	if (_16920_v->_field_cpp_linked) {
		return false;
	}
	return _1aadca5e3_is_all_references_are_dead_1(_16920_v->_field_references);
}



inline jule::Bool _1aadca5e3_kind_is_dead(jule::Ref<_1ad3e617d_TypeKind> _18121_k) {
	{
		if (!((jule::real(_18121_k->_method_ref())))) { goto _case_end_4451467024; }
		_case_begin_4451467024:;
		{
			return _1aadca5e3_kind_is_dead(_18121_k->_method_ref()->_field_elem);
		}
		goto _match_end_4451482032;
		_case_end_4451467024:;
		if (!((jule::real(_18121_k->_method_ptr())))) { goto _case_end_4451467136; }
		_case_begin_4451467136:;
		{
			return _1aadca5e3_kind_is_dead(_18121_k->_method_ptr()->_field_elem);
		}
		goto _match_end_4451482032;
		_case_end_4451467136:;
		if (!((jule::real(_18121_k->_method_slc())))) { goto _case_end_4451467248; }
		_case_begin_4451467248:;
		{
			return _1aadca5e3_kind_is_dead(_18121_k->_method_slc()->_field_elem);
		}
		goto _match_end_4451482032;
		_case_end_4451467248:;
		if (!((jule::real(_18121_k->_method_arr())))) { goto _case_end_4451485536; }
		_case_begin_4451485536:;
		{
			return _1aadca5e3_kind_is_dead(_18121_k->_method_arr()->_field_elem);
		}
		goto _match_end_4451482032;
		_case_end_4451485536:;
		if (!((jule::real(_18121_k->_method_trt())))) { goto _case_end_4451485648; }
		_case_begin_4451485648:;
		{
			jule::Ref<_1ac276c57_Trait> _19617_t = _18121_k->_method_trt();
			if (_1aadca5e3_is_dead(jule::Any(_19617_t))) {
				return true;
			}
		}
		goto _match_end_4451482032;
		_case_end_4451485648:;
		if (!((jule::real(_18121_k->_method_strct())))) { goto _case_end_4451485760; }
		_case_begin_4451485760:;
		{
			jule::Ref<_1ab064271_StructIns> _20217_s = _18121_k->_method_strct();
			if (_1aadca5e3_is_dead(jule::Any(_20217_s))) {
				return true;
			}
		}
		goto _match_end_4451482032;
		_case_end_4451485760:;
		_match_end_4451482032:;
	}
	return false;
}



inline jule::Bool _1aadca5e3_is_any_generic_is_dead(jule::Slice<jule::Ref<_1ad3e617d_TypeKind>>& _21032_generics) {
	{
		auto _range_expr = _21032_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ad3e617d_TypeKind> _1aadca5e3_g = *_range_begin;
			_iter_begin_4451499312:;
			{
				if (_1aadca5e3_kind_is_dead(_1aadca5e3_g)) {
					return true;
				}
			}
			_iter_next_4451499312:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aadca5e3_g = *_range_begin; goto _iter_begin_4451499312; }
			_iter_end_4451499312:;
		}
	}
	return false;
}



inline jule::Bool _1aadca5e3_is_struct_dead(jule::Ref<_1ab064271_StructIns> _21923_s) {
	return false;
	if (_21923_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return _1aadca5e3_is_all_references_are_dead_2(_21923_s->_field_references);
}



inline jule::Bool _1aadca5e3_is_trait_dead(jule::Ref<_1ac276c57_Trait> _23622_t) {
	return false;
	{
		auto _range_expr = _23622_t->_field_implemented;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1aadca5e3_imp = *_range_begin;
			_iter_begin_4451517664:;
			{
				jule::Int _24117_i = 0LL;
				_iter_begin_4451522688:;
				if (!(_24117_i < _1aadca5e3_imp->_field_instances.len())) { goto _iter_end_4451522688; }
				{
					jule::Ref<_1ab064271_StructIns> _24321_ins = _1aadca5e3_imp->_field_instances[static_cast<jule::Int>(_24117_i)];
					if ((!(_1aadca5e3_is_struct_dead(_24321_ins)))) {
						return false;
					}
				}
				_iter_next_4451522688:;
				(_24117_i)++;
				goto _iter_begin_4451522688;
				_iter_end_4451522688:;
			}
			_iter_next_4451517664:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aadca5e3_imp = *_range_begin; goto _iter_begin_4451517664; }
			_iter_end_4451517664:;
		}
	}
	return true;
}



inline void _1aadca5e3_eliminate_dead_functions(jule::Slice<jule::Ref<_1ab07a50c_Fn>>& _25434_funcs) {
	jule::Int _25513_i = 0LL;
	_iter_begin_4451528176:;
	if (!(_25513_i < _25434_funcs.len())) { goto _iter_end_4451528176; }
	{
		jule::Ref<_1ab07a50c_Fn> _25717_f = _25434_funcs[static_cast<jule::Int>(_25513_i)];
		jule::Int _25817_j = 0LL;
		_iter_begin_4451530624:;
		if (!(_25817_j < _25717_f->_field_instances.len())) { goto _iter_end_4451530624; }
		{
			jule::Ref<_1ab07a50c_FnIns> _26021_ins = _25717_f->_field_instances[static_cast<jule::Int>(_25817_j)];
			_1aadca5e3_main_current=jule::Any(_26021_ins);
			if (_1aadca5e3_is_fn_dead(_26021_ins)) {
				_1aadca5e3_deads=jule::append(_1aadca5e3_deads,jule::Slice<jule::Any>({jule::Any(_26021_ins)}));
				_25717_f->_field_instances=jule::append(_25717_f->_field_instances.slice(0LL,static_cast<jule::Int>(_25817_j)),_25717_f->_field_instances.slice(static_cast<jule::Int>(_25817_j + 1LL)));
				goto _iter_next_4451530624;
			}
			_1aae3b247_eliminate_dead_code_of_scope(_26021_ins->_field_scope);
			(_25817_j)++;
		}
		_iter_next_4451530624:;
		goto _iter_begin_4451530624;
		_iter_end_4451530624:;
		if (_25717_f->_field_instances.len() == 0LL) {
			_25434_funcs=jule::append(_25434_funcs.slice(0LL,static_cast<jule::Int>(_25513_i)),_25434_funcs.slice(static_cast<jule::Int>(_25513_i + 1LL)));
			goto _iter_next_4451528176;
		}
		(_25513_i)++;
	}
	_iter_next_4451528176:;
	goto _iter_begin_4451528176;
	_iter_end_4451528176:;
}



inline void _1aadca5e3_eliminate_dead_globals(jule::Ref<_1ac78be4d_Package>& _28032_pkg) {
	{
		auto _range_expr = _28032_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1aadca5e3_f = *_range_begin;
			_iter_begin_4451543296:;
			{
				jule::Int _28217_i = 0LL;
				_iter_begin_4451547072:;
				if (!(_28217_i < _1aadca5e3_f->_field_vars.len())) { goto _iter_end_4451547072; }
				{
					jule::Ref<_1aca3647d_Var> _28421_v = _1aadca5e3_f->_field_vars[static_cast<jule::Int>(_28217_i)];
					_1aadca5e3_main_current=jule::Any(_28421_v);
					if (_1aadca5e3_is_var_dead(_28421_v)) {
						_1aadca5e3_deads=jule::append(_1aadca5e3_deads,jule::Slice<jule::Any>({jule::Any(_28421_v)}));
						_1aadca5e3_f->_field_vars=jule::append(_1aadca5e3_f->_field_vars.slice(0LL,static_cast<jule::Int>(_28217_i)),_1aadca5e3_f->_field_vars.slice(static_cast<jule::Int>(_28217_i + 1LL)));
					} else {
						(_28217_i)++;
					}
				}
				_iter_next_4451547072:;
				goto _iter_begin_4451547072;
				_iter_end_4451547072:;
			}
			_iter_next_4451543296:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aadca5e3_f = *_range_begin; goto _iter_begin_4451543296; }
			_iter_end_4451543296:;
		}
	}
}



inline void _1aadca5e3_eliminate_dead_functions_package(jule::Ref<_1ac78be4d_Package>& _29642_pkg) {
	{
		auto _range_expr = _29642_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1aadca5e3_f = *_range_begin;
			_iter_begin_4451546288:;
			{
				_1aadca5e3_eliminate_dead_functions(_1aadca5e3_f->_field_funcs);
			}
			_iter_next_4451546288:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aadca5e3_f = *_range_begin; goto _iter_begin_4451546288; }
			_iter_end_4451546288:;
		}
	}
}



inline void _1aadca5e3_eliminate_dead_structs(jule::Ref<_1ac78be4d_Package>& _30232_pkg) {
	{
		auto _range_expr = _30232_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1aadca5e3_f = *_range_begin;
			_iter_begin_4451552864:;
			{
				jule::Int _30417_i = 0LL;
				_iter_begin_4451560032:;
				if (!(_30417_i < _1aadca5e3_f->_field_structs.len())) { goto _iter_end_4451560032; }
				{
					jule::Ref<_1ab064271_Struct> _30621_s = _1aadca5e3_f->_field_structs[static_cast<jule::Int>(_30417_i)];
					jule::Int _30721_j = 0LL;
					_iter_begin_4451563328:;
					if (!(_30721_j < _30621_s->_field_instances.len())) { goto _iter_end_4451563328; }
					{
						jule::Ref<_1ab064271_StructIns> _30925_ins = _30621_s->_field_instances[static_cast<jule::Int>(_30721_j)];
						_1aadca5e3_main_current=jule::Any(_30925_ins);
						if (_1aadca5e3_is_struct_dead(_30925_ins)) {
							_1aadca5e3_deads=jule::append(_1aadca5e3_deads,jule::Slice<jule::Any>({jule::Any(_30925_ins)}));
							_30621_s->_field_instances=jule::append(_30621_s->_field_instances.slice(0LL,static_cast<jule::Int>(_30721_j)),_30621_s->_field_instances.slice(static_cast<jule::Int>(_30721_j + 1LL)));
							goto _iter_next_4451563328;
						}
						(_30721_j)++;
					}
					_iter_next_4451563328:;
					goto _iter_begin_4451563328;
					_iter_end_4451563328:;
					if (_30621_s->_field_instances.len() == 0LL) {
						_1aadca5e3_f->_field_structs=jule::append(_1aadca5e3_f->_field_structs.slice(0LL,static_cast<jule::Int>(_30417_i)),_1aadca5e3_f->_field_structs.slice(static_cast<jule::Int>(_30417_i + 1LL)));
						goto _iter_next_4451560032;
					}
					(_30417_i)++;
				}
				_iter_next_4451560032:;
				goto _iter_begin_4451560032;
				_iter_end_4451560032:;
			}
			_iter_next_4451552864:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aadca5e3_f = *_range_begin; goto _iter_begin_4451552864; }
			_iter_end_4451552864:;
		}
	}
}



inline void _1aadca5e3_eliminate_dead_traits(jule::Ref<_1ac78be4d_Package>& _32831_pkg) {
	{
		auto _range_expr = _32831_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1aadca5e3_f = *_range_begin;
			_iter_begin_4451569440:;
			{
				jule::Int _33017_i = 0LL;
				_iter_begin_4451579952:;
				if (!(_33017_i < _1aadca5e3_f->_field_traits.len())) { goto _iter_end_4451579952; }
				{
					jule::Ref<_1ac276c57_Trait> _33221_t = _1aadca5e3_f->_field_traits[static_cast<jule::Int>(_33017_i)];
					_1aadca5e3_main_current=jule::Any(_33221_t);
					if (_1aadca5e3_is_trait_dead(_33221_t)) {
						_1aadca5e3_deads=jule::append(_1aadca5e3_deads,jule::Slice<jule::Any>({jule::Any(_33221_t)}));
						_1aadca5e3_f->_field_traits=jule::append(_1aadca5e3_f->_field_traits.slice(0LL,static_cast<jule::Int>(_33017_i)),_1aadca5e3_f->_field_traits.slice(static_cast<jule::Int>(_33017_i + 1LL)));
					} else {
						(_33017_i)++;
					}
				}
				_iter_next_4451579952:;
				goto _iter_begin_4451579952;
				_iter_end_4451579952:;
			}
			_iter_next_4451569440:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aadca5e3_f = *_range_begin; goto _iter_begin_4451569440; }
			_iter_end_4451569440:;
		}
	}
}



inline void _1aadca5e3_catch_alive_init(jule::Ref<_1ac78be4d_Package>& _34426_pkg) {
	
	
	jule::Ref<_1ab07a50c_Fn> _34713_f = _34426_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_34713_f)))) {
		return;
	}
	jule::I64 _3529_n = _1aadca5e3_deads.len();
	__JULE_DEFER({
		_1aadca5e3_deads=_1aadca5e3_deads.slice(0LL,static_cast<jule::Int>(_3529_n));
		_1aadca5e3_checking=nullptr;
		_1aadca5e3_current=jule::Any(nullptr);
	});
	jule::Ref<_1ab07a50c_FnIns> _36013_ins = _34713_f->_field_instances[0LL];
	jule::Int _36113_i = 0LL;
	_iter_begin_4451569904:;
	if (!(_36113_i < _36013_ins->_field_refers->_method_len())) { goto _iter_end_4451569904; }
	{
		if ((!(_1aadca5e3_is_dead(_36013_ins->_field_refers->_method_at(_36113_i))))) {
			_34713_f->_field_statically=true;
			return;
		}
	}
	_iter_next_4451569904:;
	(_36113_i)++;
	goto _iter_begin_4451569904;
	_iter_end_4451569904:;
}



inline void _1aadca5e3_eliminate_dead_code_package(jule::Ref<_1ac78be4d_Package>& _37037_pkg) {
	_1aadca5e3_deads=jule::Slice<jule::Any>::alloc(0LL,2000LL);
	_1aadca5e3_catch_alive_init(_37037_pkg);
	_1aadca5e3_eliminate_dead_globals(_37037_pkg);
	_1aadca5e3_eliminate_dead_functions_package(_37037_pkg);
}



inline void _1aadca5e3_eliminate_dead_code(jule::Ref<_1aae4981b_IR>& _38133_ir) {
	jule::I64 _38213_i = _38133_ir->_field_used.len() - 1LL;
	_iter_begin_4451604176:;
	if (!(_38213_i >= 0LL)) { goto _iter_end_4451604176; }
	{
		jule::Ref<_1ac78be4d_ImportInfo> _38417_u = _38133_ir->_field_used[static_cast<jule::Int>(_38213_i)];
		if ((!(_38417_u->_field_cpp_linked))) {
			_1aadca5e3_eliminate_dead_code_package(_38417_u->_field_package);
		}
	}
	_iter_next_4451604176:;
	(_38213_i)--;
	goto _iter_begin_4451604176;
	_iter_end_4451604176:;
	_1aadca5e3_eliminate_dead_code_package(_38133_ir->_field_main);
	_1aadca5e3_deads=nullptr;
	_1aadca5e3_checking=nullptr;
	_1aadca5e3_current=jule::Any(nullptr);
}



inline void _1aae3b247_eliminate_dead_code_of_scope(jule::Ref<_1ac77dd1e_Scope> _7337_s) {
	jule::Ref<_1aae3b247_ScopeDeadCode> _7413_sdc = jule::new_struct<_1aae3b247_ScopeDeadCode>(new( std::nothrow ) _1aae3b247_ScopeDeadCode(jule::Ref<_1aae3b247_ScopeDeadCode>(),_7337_s,(&(_7337_s->_field_stmts)),jule::Int()));
	{
		_7413_sdc->_method_optimize_stmts();
	}
}



inline void _1aae49d38_push_opt_level(jule::Int _3023_level) {
	{
		auto _match_expr{ _3023_level };
		if (!((0LLU) == _match_expr)) { goto _case_end_4451652160; }
		_case_begin_4451652160:;
		{
			_1aae49d38_OPTIMIZATIONS=nullptr;
		}
		goto _match_end_4451650640;
		_case_end_4451652160:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4451652272; }
		_case_begin_4451652272:;
		{
			_1aae49d38_OPTIMIZATIONS=jule::append(_1aae49d38_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10),jule::Str("--opt-deadcode", 14),jule::Str("--opt-append", 12),jule::Str("--opt-math", 10)}));
		}
		goto _match_end_4451650640;
		_case_end_4451652272:;
		_case_begin_4451651120:;
		{
			return;
		}
		goto _match_end_4451650640;
		_case_end_4451651120:;
		_match_end_4451650640:;
	}
}



inline jule::Bool _1aae49d38_is_opt_enabled(jule::Str _4823_opt) {
	{
		auto _range_expr = _1aae49d38_OPTIMIZATIONS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1aae49d38_oopt = *_range_begin;
			_iter_begin_4451651808:;
			{
				if (_4823_opt == _1aae49d38_oopt) {
					return true;
				}
			}
			_iter_next_4451651808:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae49d38_oopt = *_range_begin; goto _iter_begin_4451651808; }
			_iter_end_4451651808:;
		}
	}
	return false;
}



inline jule::Str _1aae7037a_gen_if(jule::Ref<_1ac77dd1e_If> _12915_i) {
	jule::Str _13013_obj = jule::Str("if (", 4);
	_13013_obj+=_1ace0e05e_gen_expr(_12915_i->_field_expr);
	_13013_obj+=jule::Str(") ", 2);
	_13013_obj+=_1aae7037a_gen_scope(_12915_i->_field_scope);
	return _13013_obj;
}



inline jule::Str _1aae7037a_gen_conditional(jule::Ref<_1ac77dd1e_Conditional> _13724_c) {
	jule::Str _13813_obj = _1aae7037a_gen_if(_13724_c->_field_elifs[0LL]);
	{
		auto _range_expr = _13724_c->_field_elifs.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac77dd1e_If> _1aae7037a_elif = *_range_begin;
			_iter_begin_4451975760:;
			{
				_13813_obj+=jule::Str(" else ", 6);
				_13813_obj+=_1aae7037a_gen_if(_1aae7037a_elif);
			}
			_iter_next_4451975760:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae7037a_elif = *_range_begin; goto _iter_begin_4451975760; }
			_iter_end_4451975760:;
		}
	}
	if (jule::real(_13724_c->_field_default)) {
		_13813_obj+=jule::Str(" else ", 6);
		_13813_obj+=_1aae7037a_gen_scope(_13724_c->_field_default->_field_scope);
	}
	return _13813_obj;
}



inline jule::Str _1aae7037a_gen_inf_iter(jule::Ref<_1ac77dd1e_InfIter> _15321_it) {
	jule::Str _1549_begin = _1adaa2350_iter_begin_label_ident(((jule::Uintptr)((_15321_it).alloc)));
	jule::Str _1559_end = _1adaa2350_iter_end_label_ident(((jule::Uintptr)((_15321_it).alloc)));
	jule::Str _1569_next = _1adaa2350_iter_next_label_ident(((jule::Uintptr)((_15321_it).alloc)));
	jule::Str _1579_indent = _1adad79c3_indent();
	jule::Str _15913_obj = _1549_begin + jule::Str(":;\n", 3);
	_15913_obj+=_1579_indent;
	_15913_obj+=_1aae7037a_gen_scope(_15321_it->_field_scope);
	_15913_obj+=jule::Str("\n", 1);
	_15913_obj+=_1579_indent;
	_15913_obj+=_1569_next + jule::Str(":;\n", 3);
	_15913_obj+=_1579_indent;
	_15913_obj+=(jule::Str("goto ", 5) + _1549_begin) + jule::Str(";\n", 2);
	_15913_obj+=_1579_indent;
	_15913_obj+=_1559_end + jule::Str(":;", 2);
	return _15913_obj;
}



inline jule::Str _1aae7037a_gen_while_iter(jule::Ref<_1ac77dd1e_WhileIter> _17323_it) {
	jule::Str _1749_begin = _1adaa2350_iter_begin_label_ident(((jule::Uintptr)((_17323_it).alloc)));
	jule::Str _1759_end = _1adaa2350_iter_end_label_ident(((jule::Uintptr)((_17323_it).alloc)));
	jule::Str _1769_next = _1adaa2350_iter_next_label_ident(((jule::Uintptr)((_17323_it).alloc)));
	jule::Str _1779_indent = _1adad79c3_indent();
	jule::Str _17913_obj = _1749_begin + jule::Str(":;\n", 3);
	_17913_obj+=_1779_indent;
	if (_17323_it->_field_expr != nullptr) {
		_17913_obj+=jule::Str("if (!(", 6);
		_17913_obj+=_1ace0e05e_gen_expr(_17323_it->_field_expr);
		_17913_obj+=jule::Str(")) { goto ", 10);
		_17913_obj+=_1759_end;
		_17913_obj+=jule::Str("; }\n", 4);
		_17913_obj+=_1779_indent;
	}
	_17913_obj+=_1aae7037a_gen_scope(_17323_it->_field_scope);
	_17913_obj+=jule::Str("\n", 1);
	_17913_obj+=_1779_indent;
	_17913_obj+=_1769_next + jule::Str(":;\n", 3);
	_17913_obj+=_1779_indent;
	if (_17323_it->_field_next != nullptr) {
		_17913_obj+=_1aae7037a_gen_st(_17323_it->_field_next);
		_17913_obj+=jule::Str("\n", 1);
		_17913_obj+=_1779_indent;
	}
	_17913_obj+=(jule::Str("goto ", 5) + _1749_begin) + jule::Str(";\n", 2);
	_17913_obj+=_1779_indent;
	_17913_obj+=_1759_end + jule::Str(":;", 2);
	return _17913_obj;
}



inline jule::Trait<_1aae7037a_RangeSetter> _1aae7037a_get_range_setter(jule::Ref<_1ac77dd1e_RangeIter> _20625_it) {
	{
		if (!((jule::real(_20625_it->_field_expr->_field_kind->_method_slc())))) { goto _case_end_4452010704; }
		_case_begin_4452010704:;
		{
			return jule::new_struct<_1aae7037a_IndexRangeSetter>(new( std::nothrow ) _1aae7037a_IndexRangeSetter());
		}
		goto _match_end_4452003360;
		_case_end_4452010704:;
		if (!((jule::real(_20625_it->_field_expr->_field_kind->_method_arr())))) { goto _case_end_4452008480; }
		_case_begin_4452008480:;
		{
			return jule::new_struct<_1aae7037a_IndexRangeSetter>(new( std::nothrow ) _1aae7037a_IndexRangeSetter());
		}
		goto _match_end_4452003360;
		_case_end_4452008480:;
		if (!((jule::real(_20625_it->_field_expr->_field_kind->_method_map())))) { goto _case_end_4452008592; }
		_case_begin_4452008592:;
		{
			return jule::new_struct<_1aae7037a_MapRangeSetter>(new( std::nothrow ) _1aae7037a_MapRangeSetter());
		}
		goto _match_end_4452003360;
		_case_end_4452008592:;
		_case_begin_4452007024:;
		{
			return jule::new_struct<_1aae7037a_IndexRangeSetter>(new( std::nothrow ) _1aae7037a_IndexRangeSetter());
		}
		goto _match_end_4452003360;
		_case_end_4452007024:;
		_match_end_4452003360:;
	}
}



inline jule::Str _1aae7037a_gen_range_iter(jule::Ref<_1ac77dd1e_RangeIter> _21523_it) {
	_1adad79c3_add_indent();
	jule::Str _2189_begin = _1adaa2350_iter_begin_label_ident(((jule::Uintptr)((_21523_it).alloc)));
	jule::Str _2199_end = _1adaa2350_iter_end_label_ident(((jule::Uintptr)((_21523_it).alloc)));
	jule::Str _2209_next = _1adaa2350_iter_next_label_ident(((jule::Uintptr)((_21523_it).alloc)));
	jule::Str _22113__indent = _1adad79c3_indent();
	jule::Trait<_1aae7037a_RangeSetter> _2229_setter = _1aae7037a_get_range_setter(_21523_it);
	jule::Str _22413_obj = jule::Str("{\n", 2);
	_22413_obj+=_22113__indent;
	if (_21523_it->_field_expr->_field_lvalue && _1aae49d38_is_opt_enabled(jule::Str("--opt-copy", 10))) {
		_22413_obj+=jule::Str("auto &_range_expr = ", 20);
	} else {
		_22413_obj+=jule::Str("auto _range_expr = ", 19);
	}
	_22413_obj+=_1ace0e05e_gen_expr(_21523_it->_field_expr->_field_model) + jule::Str(";\n", 2);
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("if (_range_expr.begin() != _range_expr.end()) {\n", 48);
	_1adad79c3_add_indent();
	_22113__indent=_1adad79c3_indent();
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("auto _range_begin = _range_expr.begin();\n", 41);
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("const auto _range_end = _range_expr.end();\n", 43);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2229_setter.get()._method_setup_vars(_21523_it->_field_key_a,_21523_it->_field_key_b);
	_22413_obj+=_2189_begin + jule::Str(":;\n", 3);
	_22413_obj+=_22113__indent;
	_22413_obj+=_1aae7037a_gen_scope(_21523_it->_field_scope);
	_22413_obj+=jule::Str("\n", 1);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2209_next + jule::Str(":;\n", 3);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2229_setter.get()._method_next_steps(_21523_it->_field_key_a,_21523_it->_field_key_b,_2189_begin);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2199_end + jule::Str(":;\n", 3);
	_1adad79c3_done_indent();
	_22113__indent=_1adad79c3_indent();
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("}\n", 2);
	_1adad79c3_done_indent();
	_22113__indent=_1adad79c3_indent();
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("}", 1);
	return _22413_obj;
}



inline jule::Str _1aae7037a_gen_cont(jule::Ref<_1ac77dd1e_ContSt> _27013_c) {
	return (jule::Str("goto ", 5) + _1adaa2350_iter_next_label_ident(_27013_c->_field_it)) + jule::Str(";", 1);
}



inline jule::Str _1aae7037a_gen_label(jule::Ref<_1ac77dd1e_Label> _27414_l) {
	return _1adaa2350_label_ident(_27414_l->_field_ident) + jule::Str(":;", 2);
}



inline jule::Str _1aae7037a_gen_goto(jule::Ref<_1ac77dd1e_GotoSt> _27813_gt) {
	return (jule::Str("goto ", 5) + _1adaa2350_label_ident(_27813_gt->_field_ident)) + jule::Str(";", 1);
}



inline jule::Str _1aae7037a_gen_postfix(jule::Ref<_1ac77dd1e_Postfix> _28220_p) {
	return (((jule::Str("(", 1) + _1ace0e05e_gen_expr(_28220_p->_field_expr)) + jule::Str(")", 1)) + _28220_p->_field_op) + jule::Str(";", 1);
}



inline jule::Str _1aae7037a_gen_div_by_zero_assign(jule::Ref<_1ac77dd1e_Assign> _28631_a) {
	jule::Str _28713_obj = _1ace0e05e_gen_expr(_28631_a->_field_l);
	if (_1aae49d38_is_opt_enabled(jule::Str("--opt-math", 10))) {
		{
			auto _match_expr{ _28631_a->_field_r };
			if (!(_match_expr.type_is<jule::Ref<_1ad6d5cec_Const>>())) { goto _case_end_4452052240; }
			_case_begin_4452052240:;
			{
				_28713_obj+=jule::Str(" ", 1);
				_28713_obj+=_28631_a->_field_op;
				_28713_obj+=jule::Str(" ", 1);
				_28713_obj+=_1ace0e05e_gen_expr(_28631_a->_field_r);
				_28713_obj+=jule::Str(";", 1);
				return _28713_obj;
			}
			goto _match_end_4452050016;
			_case_end_4452052240:;
			_match_end_4452050016:;
		}
	}
	_28713_obj+=jule::Str(" = ", 3);
	_28713_obj+=_1ace0e05e_gen_div_by_zero_binop_expr_model(_28631_a->_field_op.slice(0LL,1LL),_28631_a->_field_l,_28631_a->_field_r);
	_28713_obj+=jule::Str(";", 1);
	return _28713_obj;
}



inline jule::Str _1aae7037a_gen_assign(jule::Ref<_1ac77dd1e_Assign> _30619_a) {
	{
		auto _match_expr{ _30619_a->_field_op };
		if (!((jule::Str("/=", 2)) == _match_expr || (jule::Str("%=", 2)) == _match_expr)) { goto _case_end_4452058048; }
		_case_begin_4452058048:;
		{
			return _1aae7037a_gen_div_by_zero_assign(_30619_a);
		}
		goto _match_end_4452053440;
		_case_end_4452058048:;
		_match_end_4452053440:;
	}
	jule::Str _31313_obj = _1ace0e05e_gen_expr(_30619_a->_field_l);
	_31313_obj+=_30619_a->_field_op;
	if (_1aae49d38_is_opt_enabled(jule::Str("--opt-append", 12))) {
		{
			auto _match_expr{ _30619_a->_field_r };
			if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel>>())) { goto _case_end_4452063072; }
			_case_begin_4452063072:;
			{
				jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel> _31821_model = _30619_a->_field_r.operator jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel>();
				jule::Str _31918_expr;
				jule::Bool _31924_optimized;
				std::tie(_31918_expr,_31924_optimized) = _1ace0e05e_gen_builtin_append_call_expr_model_assign(_30619_a->_field_l,_31821_model);
				if (_31924_optimized) {
					return _31918_expr;
				}
				_31313_obj+=_31918_expr;
			}
			goto _match_end_4452061232;
			_case_end_4452063072:;
			_case_begin_4452062288:;
			{
				_31313_obj+=_1ace0e05e_gen_expr(_30619_a->_field_r);
			}
			goto _match_end_4452061232;
			_case_end_4452062288:;
			_match_end_4452061232:;
		}
	} else {
		_31313_obj+=_1ace0e05e_gen_expr(_30619_a->_field_r);
	}
	_31313_obj+=jule::Str(";", 1);
	return _31313_obj;
}



inline jule::Str _1aae7037a_gen_multi_assign(jule::Ref<_1ac77dd1e_MultiAssign> _33525_a) {
	jule::Str _33613_obj = jule::Str("std::tie(", 9);
	{
		auto _range_expr = _33525_a->_field_l;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1aae7037a_l = *_range_begin;
			_iter_begin_4452071264:;
			{
				if (_1aae7037a_l == nullptr) {
					_33613_obj+=jule::Str("std::ignore,", 12);
				} else {
					_33613_obj+=_1ace0e05e_gen_expr(_1aae7037a_l) + jule::Str(",", 1);
				}
			}
			_iter_next_4452071264:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae7037a_l = *_range_begin; goto _iter_begin_4452071264; }
			_iter_end_4452071264:;
		}
	}
	_33613_obj=_33613_obj.slice(0LL,static_cast<jule::Int>(_33613_obj.len() - 1LL));
	_33613_obj+=jule::Str(") = ", 4);
	_33613_obj+=_1ace0e05e_gen_expr(_33525_a->_field_r);
	_33613_obj+=jule::Str(";", 1);
	return _33613_obj;
}



inline jule::Str _1aae7037a_gen_case(jule::Ref<_1ac77dd1e_Match> _35317_m,jule::Ref<_1ac77dd1e_Case> _35332_c) {
	
	jule::Str _3569_end = _1adaa2350_case_end_label_ident(((jule::Uintptr)((_35332_c).alloc)));
	jule::Str _35713_obj = jule::Str("", 0);
	if (_35332_c->_field_exprs.len() > 0LL) {
		_35713_obj+=jule::Str("if (!(", 6);
		{
			auto _range_expr = _35332_c->_field_exprs;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1aae7037a_i = 0;
				jule::Any _1aae7037a_expr = *_range_begin;
				_iter_begin_4452083712:;
				{
					{
						if (!(((!(_35317_m->_field_type_match))))) { goto _case_end_4452086896; }
						_case_begin_4452086896:;
						{
							_35713_obj+=jule::Str("(", 1);
							_35713_obj+=_1ace0e05e_gen_expr(_1aae7037a_expr);
							_35713_obj+=jule::Str(")", 1);
							if (_35317_m->_field_expr->_method_is_const()) {
								if ((!(_35317_m->_field_expr->_field_constant->_method_is_bool())) || (!(_35317_m->_field_expr->_field_constant->_method_read_bool()))) {
									_35713_obj+=jule::Str(" == ", 4);
									_35713_obj+=_1ace0e05e_gen_expr_model(_35317_m->_field_expr->_field_model);
								}
							} else {
								_35713_obj+=jule::Str(" == ", 4);
								_35713_obj+=jule::Str("_match_expr", 11);
							}
						}
						goto _match_end_4452085872;
						_case_end_4452086896:;
						_case_begin_4452086064:;
						{
							_35713_obj+=jule::Str("_match_expr", 11);
							_35713_obj+=(jule::Str(".type_is<", 9) + _1ace0e05e_gen_expr(_1aae7037a_expr)) + jule::Str(">()", 3);
						}
						goto _match_end_4452085872;
						_case_end_4452086064:;
						_match_end_4452085872:;
					}
					if ((_1aae7037a_i + 1LL) < _35332_c->_field_exprs.len()) {
						_35713_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_4452083712:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1aae7037a_i; _1aae7037a_expr = *_range_begin; goto _iter_begin_4452083712; }
				_iter_end_4452083712:;
			}
		}
		_35713_obj+=jule::Str(")) { goto ", 10);
		_35713_obj+=_3569_end + jule::Str("; }\n", 4);
	}
	if (_35332_c->_field_scope->_field_stmts.len() > 0LL) {
		_35713_obj+=_1adad79c3_indent();
		_35713_obj+=_1adaa2350_case_begin_label_ident(((jule::Uintptr)((_35332_c).alloc))) + jule::Str(":;\n", 3);
		_35713_obj+=_1adad79c3_indent();
		_35713_obj+=_1aae7037a_gen_scope(_35332_c->_field_scope);
		_35713_obj+=jule::Str("\n", 1);
	}
	_35713_obj+=_1adad79c3_indent();
	_35713_obj+=jule::Str("goto ", 5);
	_35713_obj+=_1adaa2350_match_end_label_ident(((jule::Uintptr)((_35317_m).alloc))) + jule::Str(";", 1);
	_35713_obj+=jule::Str("\n", 1);
	_35713_obj+=_1adad79c3_indent();
	_35713_obj+=_3569_end + jule::Str(":;", 2);
	return _35713_obj;
}



inline jule::Str _1aae7037a_gen_match(jule::Ref<_1ac77dd1e_Match> _40818_m) {
	jule::Str _40913_obj = jule::Str("{\n", 2);
	_1adad79c3_add_indent();
	_40913_obj+=_1adad79c3_indent();
	if ((!(_40818_m->_field_expr->_method_is_const()))) {
		if (_40818_m->_field_expr->_field_lvalue && _1aae49d38_is_opt_enabled(jule::Str("--opt-copy", 10))) {
			_40913_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_40913_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_40913_obj+=_1ace0e05e_gen_expr(_40818_m->_field_expr->_field_model);
		_40913_obj+=jule::Str(" };\n", 4);
		_40913_obj+=_1adad79c3_indent();
	}
	if (_40818_m->_field_cases.len() > 0LL) {
		_40913_obj+=_1aae7037a_gen_case(_40818_m,_40818_m->_field_cases[0LL]);
		{
			auto _range_expr = _40818_m->_field_cases.slice(1LL);
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ac77dd1e_Case> _1aae7037a_c = *_range_begin;
				_iter_begin_4452112832:;
				{
					_40913_obj+=jule::Str("\n", 1);
					_40913_obj+=_1adad79c3_indent();
					_40913_obj+=_1aae7037a_gen_case(_40818_m,_1aae7037a_c);
				}
				_iter_next_4452112832:;
				++_range_begin;
				if (_range_begin != _range_end) { _1aae7037a_c = *_range_begin; goto _iter_begin_4452112832; }
				_iter_end_4452112832:;
			}
		}
	}
	if (jule::real(_40818_m->_field_default)) {
		_40913_obj+=jule::Str("\n", 1);
		_40913_obj+=_1aae7037a_gen_case(_40818_m,_40818_m->_field_default);
	}
	_40913_obj+=jule::Str("\n", 1);
	_40913_obj+=_1adad79c3_indent();
	_40913_obj+=_1adaa2350_match_end_label_ident(((jule::Uintptr)((_40818_m).alloc))) + jule::Str(":;", 2);
	_40913_obj+=jule::Str("\n", 1);
	_1adad79c3_done_indent();
	_40913_obj+=_1adad79c3_indent();
	_40913_obj+=jule::Str("}", 1);
	return _40913_obj;
}



inline jule::Str _1aae7037a_gen_fall_st(jule::Ref<_1ac77dd1e_FallSt> _45416_f) {
	return (jule::Str("goto ", 5) + _1adaa2350_case_begin_label_ident(_45416_f->_field_dest_case)) + jule::Str(";", 1);
}



inline jule::Str _1aae7037a_gen_break_st(jule::Ref<_1ac77dd1e_BreakSt> _45817_b) {
	jule::Str _45913_obj = jule::Str("goto ", 5);
	if (_45817_b->_field_it != 0LL) {
		_45913_obj+=_1adaa2350_iter_end_label_ident(_45817_b->_field_it);
	} else {
		_45913_obj+=_1adaa2350_match_end_label_ident(_45817_b->_field_mtch);
	}
	_45913_obj+=jule::Str(";", 1);
	return _45913_obj;
}



inline jule::Str _1aae7037a_gen_ret_vars(jule::Ref<_1ac77dd1e_RetSt> _47021_r) {
	jule::Str _47113_obj = jule::Str("", 0);
	{
		auto _range_expr = _47021_r->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aca3647d_Var> _1aae7037a_v = *_range_begin;
			_iter_begin_4452128272:;
			{
				if (_1ab0277b7_is_ignore_ident(_1aae7037a_v->_field_ident)) {
					_47113_obj+=_1ace0e05e_get_init_expr(_1aae7037a_v->_field_kind->_field_kind);
				} else {
					_47113_obj+=_1adaa2350_var_out_ident(_1aae7037a_v);
				}
				_47113_obj+=jule::Str(",", 1);
			}
			_iter_next_4452128272:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae7037a_v = *_range_begin; goto _iter_begin_4452128272; }
			_iter_end_4452128272:;
		}
	}
	_47113_obj=_47113_obj.slice(0LL,static_cast<jule::Int>(_47113_obj.len() - 1LL));
	if (_47021_r->_field_vars.len() > 1LL) {
		_47113_obj=(jule::Str("return std::make_tuple(", 23) + _47113_obj) + jule::Str(")", 1);
	} else {
		_47113_obj=jule::Str("return ", 7) + _47113_obj;
	}
	_47113_obj+=jule::Str(";", 1);
	return _47113_obj;
}



inline jule::Str _1aae7037a_gen_ret_expr_tuple(jule::Ref<_1ac77dd1e_RetSt> _49427_r) {
	{
		auto _match_expr{ _49427_r->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_FnCallExprModel>>())) { goto _case_end_4452137008; }
		_case_begin_4452137008:;
		{
			return (jule::Str("return ", 7) + _1ace0e05e_gen_expr_model(_49427_r->_field_expr)) + jule::Str(";", 1);
		}
		goto _match_end_4452134304;
		_case_end_4452137008:;
		_match_end_4452134304:;
	}
	jule::Slice<jule::Ref<_1acde49c3_Data>> _50013_datas = _49427_r->_field_expr.operator jule::Ref<_1ab0a4954_TupleExprModel>()->_field_datas;
	jule::Str _50113_obj = jule::Str("", 0);
	{
		auto _range_expr = _49427_r->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1aae7037a_i = 0;
			jule::Ref<_1aca3647d_Var> _1aae7037a_v = *_range_begin;
			_iter_begin_4452141968:;
			{
				if ((!(_1ab0277b7_is_ignore_ident(_1aae7037a_v->_field_ident)))) {
					jule::Str _50517_ident = _1adaa2350_var_out_ident(_1aae7037a_v);
					_50113_obj+=((_50517_ident + jule::Str(" = ", 3)) + _1ace0e05e_gen_expr(_50013_datas[static_cast<jule::Int>(_1aae7037a_i)]->_field_model)) + jule::Str(";\n", 2);
					_50113_obj+=_1adad79c3_indent();
				}
			}
			_iter_next_4452141968:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1aae7037a_i; _1aae7037a_v = *_range_begin; goto _iter_begin_4452141968; }
			_iter_end_4452141968:;
		}
	}
	_50113_obj+=jule::Str("return std::make_tuple(", 23);
	{
		auto _range_expr = _50013_datas;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1aae7037a_i = 0;
			jule::Ref<_1acde49c3_Data> _1aae7037a_d = *_range_begin;
			_iter_begin_4452142992:;
			{
				jule::Ref<_1aca3647d_Var> _51317_v = _49427_r->_field_vars[static_cast<jule::Int>(_1aae7037a_i)];
				if (_1ab0277b7_is_ignore_ident(_51317_v->_field_ident)) {
					_50113_obj+=_1ace0e05e_gen_expr(_1aae7037a_d->_field_model);
				} else {
					_50113_obj+=_1adaa2350_var_out_ident(_51317_v);
				}
				_50113_obj+=jule::Str(",", 1);
			}
			_iter_next_4452142992:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1aae7037a_i; _1aae7037a_d = *_range_begin; goto _iter_begin_4452142992; }
			_iter_end_4452142992:;
		}
	}
	_50113_obj=_50113_obj.slice(0LL,static_cast<jule::Int>(_50113_obj.len() - 1LL));
	_50113_obj+=jule::Str(");", 2);
	return _50113_obj;
}



inline jule::Str _1aae7037a_gen_ret_expr(jule::Ref<_1ac77dd1e_RetSt> _52821_r) {
	if (_52821_r->_field_vars.len() == 0LL) {
		return (jule::Str("return ", 7) + _1ace0e05e_gen_expr(_52821_r->_field_expr)) + jule::Str(";", 1);
	}
	if (_52821_r->_field_vars.len() > 1LL) {
		return _1aae7037a_gen_ret_expr_tuple(_52821_r);
	}
	if ((!(_1ab0277b7_is_ignore_ident(_52821_r->_field_vars[0LL]->_field_ident)))) {
		jule::Str _53813_ident = _1adaa2350_var_out_ident(_52821_r->_field_vars[0LL]);
		jule::Str _53917_obj = ((_53813_ident + jule::Str(" = ", 3)) + _1ace0e05e_gen_expr(_52821_r->_field_expr)) + jule::Str(";\n", 2);
		_53917_obj+=_1adad79c3_indent();
		_53917_obj+=(jule::Str("return ", 7) + _53813_ident) + jule::Str(";", 1);
		return _53917_obj;
	}
	return (jule::Str("return ", 7) + _1ace0e05e_gen_expr(_52821_r->_field_expr)) + jule::Str(";", 1);
}



inline jule::Str _1aae7037a_gen_ret_st(jule::Ref<_1ac77dd1e_RetSt> _54819_r) {
	if ((_54819_r->_field_expr == nullptr) && (_54819_r->_field_vars.len() == 0LL)) {
		return jule::Str("return;", 7);
	}
	if (_54819_r->_field_expr == nullptr) {
		return _1aae7037a_gen_ret_vars(_54819_r);
	}
	return _1aae7037a_gen_ret_expr(_54819_r);
}



inline jule::Str _1aae7037a_gen_ret_st_with_defaults(jule::Ref<_1ad3e617d_TypeKind> _56033_result) {
	jule::Str _56113_obj = jule::Str("return ", 7);
	if (jule::real(_56033_result->_method_tup())) {
		_56113_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto _range_expr = _56033_result->_method_tup()->_field_types;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ad3e617d_TypeKind> _1aae7037a_t = *_range_begin;
				_iter_begin_4452174368:;
				{
					_56113_obj+=_1ace0e05e_get_init_expr(_1aae7037a_t);
					_56113_obj+=jule::Str(",", 1);
				}
				_iter_next_4452174368:;
				++_range_begin;
				if (_range_begin != _range_end) { _1aae7037a_t = *_range_begin; goto _iter_begin_4452174368; }
				_iter_end_4452174368:;
			}
		}
		_56113_obj=_56113_obj.slice(0LL,static_cast<jule::Int>(_56113_obj.len() - 1LL));
		_56113_obj+=jule::Str(")", 1);
	} else {
		_56113_obj+=_1ace0e05e_get_init_expr(_56033_result);
	}
	_56113_obj+=jule::Str(";", 1);
	return _56113_obj;
}



inline jule::Str _1aae7037a_gen_recover(jule::Ref<_1ac77dd1e_Recover> _57720_r) {
	jule::Str _57813_obj = jule::Str("try ", 4);
	_57813_obj+=_1aae7037a_gen_scope(_57720_r->_field_scope);
	_57813_obj+=jule::Str(" catch(jule::Exception e) ", 26);
	if (_57720_r->_field_handler->_method_is_anon()) {
		_1adad79c3_add_indent();
		_57813_obj+=jule::Str("{\n", 2);
		_57813_obj+=_1adad79c3_indent();
		_57813_obj+=_1ace0e05e_gen_expr(_57720_r->_field_handler_expr);
		_57813_obj+=jule::Str("(jule::exception_to_error(e));", 30);
		if ((!(_57720_r->_field_scope_owner->_field_decl->_method_is_void()))) {
			_57813_obj+=jule::Str("\n", 1);
			_57813_obj+=_1adad79c3_indent();
			_1adad79c3_done_indent();
			_57813_obj+=_1aae7037a_gen_ret_st_with_defaults(_57720_r->_field_scope_owner->_field_result);
		} else {
			_1adad79c3_done_indent();
		}
		_57813_obj+=jule::Str("\n", 1);
		_57813_obj+=_1adad79c3_indent();
		_57813_obj+=jule::Str("}", 1);
	} else {
		_57813_obj+=jule::Str("{\n", 2);
		_1adad79c3_add_indent();
		_57813_obj+=_1adad79c3_indent();
		_57813_obj+=_1ace0e05e_gen_expr(_57720_r->_field_handler_expr);
		_57813_obj+=jule::Str("(jule::exception_to_error(e));\n", 31);
		_57813_obj+=_1adad79c3_indent();
		if (_57720_r->_field_scope_owner->_field_decl->_method_is_void()) {
			_1adad79c3_done_indent();
			_57813_obj+=jule::Str(" }", 2);
		} else {
			_57813_obj+=_1aae7037a_gen_ret_st_with_defaults(_57720_r->_field_scope_owner->_field_result);
			_57813_obj+=jule::Str("\n", 1);
			_1adad79c3_done_indent();
			_57813_obj+=_1adad79c3_indent();
			_57813_obj+=jule::Str("}", 1);
		}
	}
	return _57813_obj;
}



inline jule::Str _1aae7037a_gen_data_expr(jule::Ref<_1acde49c3_Data> _62622_d) {
	return _1ace0e05e_gen_expr(_62622_d->_field_model) + jule::Str(";", 1);
}



inline jule::Str _1aae7037a_gen_st(jule::Any _63115_st) {
	{
		auto _match_expr{ _63115_st };
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Scope>>())) { goto _case_end_4452199840; }
		_case_begin_4452199840:;
		{
			return _1aae7037a_gen_scope(_63115_st.operator jule::Ref<_1ac77dd1e_Scope>());
		}
		goto _match_end_4452103040;
		_case_end_4452199840:;
		if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4452198912; }
		_case_begin_4452198912:;
		{
			return _1adad79c3_gen_var(_63115_st.operator jule::Ref<_1aca3647d_Var>());
		}
		goto _match_end_4452103040;
		_case_end_4452198912:;
		if (!(_match_expr.type_is<jule::Ref<_1acde49c3_Data>>())) { goto _case_end_4452199024; }
		_case_begin_4452199024:;
		{
			return _1aae7037a_gen_data_expr(_63115_st.operator jule::Ref<_1acde49c3_Data>());
		}
		goto _match_end_4452103040;
		_case_end_4452199024:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Conditional>>())) { goto _case_end_4452199136; }
		_case_begin_4452199136:;
		{
			return _1aae7037a_gen_conditional(_63115_st.operator jule::Ref<_1ac77dd1e_Conditional>());
		}
		goto _match_end_4452103040;
		_case_end_4452199136:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_InfIter>>())) { goto _case_end_4452200112; }
		_case_begin_4452200112:;
		{
			return _1aae7037a_gen_inf_iter(_63115_st.operator jule::Ref<_1ac77dd1e_InfIter>());
		}
		goto _match_end_4452103040;
		_case_end_4452200112:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_WhileIter>>())) { goto _case_end_4452200224; }
		_case_begin_4452200224:;
		{
			return _1aae7037a_gen_while_iter(_63115_st.operator jule::Ref<_1ac77dd1e_WhileIter>());
		}
		goto _match_end_4452103040;
		_case_end_4452200224:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_RangeIter>>())) { goto _case_end_4452200336; }
		_case_begin_4452200336:;
		{
			return _1aae7037a_gen_range_iter(_63115_st.operator jule::Ref<_1ac77dd1e_RangeIter>());
		}
		goto _match_end_4452103040;
		_case_end_4452200336:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_ContSt>>())) { goto _case_end_4452200448; }
		_case_begin_4452200448:;
		{
			return _1aae7037a_gen_cont(_63115_st.operator jule::Ref<_1ac77dd1e_ContSt>());
		}
		goto _match_end_4452103040;
		_case_end_4452200448:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Label>>())) { goto _case_end_4452200608; }
		_case_begin_4452200608:;
		{
			return _1aae7037a_gen_label(_63115_st.operator jule::Ref<_1ac77dd1e_Label>());
		}
		goto _match_end_4452103040;
		_case_end_4452200608:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_GotoSt>>())) { goto _case_end_4452200720; }
		_case_begin_4452200720:;
		{
			return _1aae7037a_gen_goto(_63115_st.operator jule::Ref<_1ac77dd1e_GotoSt>());
		}
		goto _match_end_4452103040;
		_case_end_4452200720:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Postfix>>())) { goto _case_end_4452200832; }
		_case_begin_4452200832:;
		{
			return _1aae7037a_gen_postfix(_63115_st.operator jule::Ref<_1ac77dd1e_Postfix>());
		}
		goto _match_end_4452103040;
		_case_end_4452200832:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Assign>>())) { goto _case_end_4452200944; }
		_case_begin_4452200944:;
		{
			return _1aae7037a_gen_assign(_63115_st.operator jule::Ref<_1ac77dd1e_Assign>());
		}
		goto _match_end_4452103040;
		_case_end_4452200944:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_MultiAssign>>())) { goto _case_end_4452201056; }
		_case_begin_4452201056:;
		{
			return _1aae7037a_gen_multi_assign(_63115_st.operator jule::Ref<_1ac77dd1e_MultiAssign>());
		}
		goto _match_end_4452103040;
		_case_end_4452201056:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Match>>())) { goto _case_end_4452201168; }
		_case_begin_4452201168:;
		{
			return _1aae7037a_gen_match(_63115_st.operator jule::Ref<_1ac77dd1e_Match>());
		}
		goto _match_end_4452103040;
		_case_end_4452201168:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_FallSt>>())) { goto _case_end_4452201280; }
		_case_begin_4452201280:;
		{
			return _1aae7037a_gen_fall_st(_63115_st.operator jule::Ref<_1ac77dd1e_FallSt>());
		}
		goto _match_end_4452103040;
		_case_end_4452201280:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_BreakSt>>())) { goto _case_end_4452201392; }
		_case_begin_4452201392:;
		{
			return _1aae7037a_gen_break_st(_63115_st.operator jule::Ref<_1ac77dd1e_BreakSt>());
		}
		goto _match_end_4452103040;
		_case_end_4452201392:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_RetSt>>())) { goto _case_end_4452201504; }
		_case_begin_4452201504:;
		{
			return _1aae7037a_gen_ret_st(_63115_st.operator jule::Ref<_1ac77dd1e_RetSt>());
		}
		goto _match_end_4452103040;
		_case_end_4452201504:;
		if (!(_match_expr.type_is<jule::Ref<_1ac77dd1e_Recover>>())) { goto _case_end_4452201616; }
		_case_begin_4452201616:;
		{
			return _1aae7037a_gen_recover(_63115_st.operator jule::Ref<_1ac77dd1e_Recover>());
		}
		goto _match_end_4452103040;
		_case_end_4452201616:;
		_case_begin_4452197936:;
		{
			return jule::Str("<unimplemented_stmt>", 20);
		}
		goto _match_end_4452103040;
		_case_end_4452197936:;
		_match_end_4452103040:;
	}
}



inline jule::Str _1aae7037a_gen_scope(jule::Ref<_1ac77dd1e_Scope> _65618_s) {
	jule::Str _65713_obj = jule::Str("{\n", 2);
	_1adad79c3_add_indent();
	{
		auto _range_expr = _65618_s->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1aae7037a_st = *_range_begin;
			_iter_begin_4452230400:;
			{
				_65713_obj+=_1adad79c3_indent();
				_65713_obj+=_1aae7037a_gen_st(_1aae7037a_st);
				_65713_obj+=jule::Str("\n", 1);
			}
			_iter_next_4452230400:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aae7037a_st = *_range_begin; goto _iter_begin_4452230400; }
			_iter_end_4452230400:;
		}
	}
	_1adad79c3_done_indent();
	_65713_obj+=_1adad79c3_indent();
	_65713_obj+=jule::Str("}", 1);
	if (_65618_s->_field_deferred) {
		_65713_obj=(jule::Str("__JULE_DEFER(", 13) + _65713_obj) + jule::Str(");", 2);
	}
	return _65713_obj;
}



inline jule::Str _1aae7037a_gen_fn_scope(jule::Ref<_1ab07a50c_FnIns> _67821_f) {
	if (jule::real(_67821_f->_field_owner)) {
		return _1aae7037a_gen_method_scope(_67821_f);
	}
	return _1aae7037a_gen_scope(_67821_f->_field_scope);
}



inline jule::Str _1aae7037a_gen_method_scope(jule::Ref<_1ab07a50c_FnIns> _68725_f) {
	return _1aae7037a_gen_scope(_68725_f->_field_scope);
}



inline jule::Str _1ace0e05e_concat_all_parts(jule::Slice<jule::Str> _7821_parts) {
	jule::Str _7913_s = jule::Str("", 0);
	{
		auto _range_expr = _7821_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1ace0e05e_part = *_range_begin;
			_iter_begin_4452240752:;
			{
				_7913_s+=_1ace0e05e_part;
			}
			_iter_next_4452240752:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ace0e05e_part = *_range_begin; goto _iter_begin_4452240752; }
			_iter_end_4452240752:;
		}
	}
	return _7913_s;
}



inline jule::Str _1ace0e05e_get_accessor(jule::Ref<_1ad3e617d_TypeKind> _8621_t) {
	if (jule::real(_8621_t->_method_ref()) || jule::real(_8621_t->_method_ptr())) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



inline jule::Str _1ace0e05e_decompose_common_esq(jule::U8 _9325_b) {
	{
		auto _match_expr{ _9325_b };
		if (!(('\\') == _match_expr)) { goto _case_end_4452246704; }
		_case_begin_4452246704:;
		{
			return jule::Str("\\\\", 2);
		}
		goto _match_end_4452244624;
		_case_end_4452246704:;
		if (!(('\'') == _match_expr)) { goto _case_end_4452246816; }
		_case_begin_4452246816:;
		{
			return jule::Str("'", 1);
		}
		goto _match_end_4452244624;
		_case_end_4452246816:;
		if (!(('\"') == _match_expr)) { goto _case_end_4452247776; }
		_case_begin_4452247776:;
		{
			return jule::Str("\\\"", 2);
		}
		goto _match_end_4452244624;
		_case_end_4452247776:;
		if (!(('\a') == _match_expr)) { goto _case_end_4452247888; }
		_case_begin_4452247888:;
		{
			return jule::Str("\\a", 2);
		}
		goto _match_end_4452244624;
		_case_end_4452247888:;
		if (!(('\b') == _match_expr)) { goto _case_end_4452248000; }
		_case_begin_4452248000:;
		{
			return jule::Str("\\b", 2);
		}
		goto _match_end_4452244624;
		_case_end_4452248000:;
		if (!(('\f') == _match_expr)) { goto _case_end_4452248112; }
		_case_begin_4452248112:;
		{
			return jule::Str("\\f", 2);
		}
		goto _match_end_4452244624;
		_case_end_4452248112:;
		if (!(('\n') == _match_expr)) { goto _case_end_4452247088; }
		_case_begin_4452247088:;
		{
			return jule::Str("\\n", 2);
		}
		goto _match_end_4452244624;
		_case_end_4452247088:;
		if (!(('\r') == _match_expr)) { goto _case_end_4452247200; }
		_case_begin_4452247200:;
		{
			return jule::Str("\\r", 2);
		}
		goto _match_end_4452244624;
		_case_end_4452247200:;
		if (!(('\t') == _match_expr)) { goto _case_end_4452247312; }
		_case_begin_4452247312:;
		{
			return jule::Str("\\t", 2);
		}
		goto _match_end_4452244624;
		_case_end_4452247312:;
		if (!(('\v') == _match_expr)) { goto _case_end_4452247440; }
		_case_begin_4452247440:;
		{
			return jule::Str("\\v", 2);
		}
		goto _match_end_4452244624;
		_case_end_4452247440:;
		_case_begin_4448292992:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4452244624;
		_case_end_4448292992:;
		_match_end_4452244624:;
	}
}



inline jule::Str _1ace0e05e_sbtoa(jule::U8 _10910_b) {
	if (_10910_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_10910_b <= 127LL) {
		jule::Str _11513_seq = _1ace0e05e_decompose_common_esq(_10910_b);
		if (_11513_seq != jule::Str("", 0)) {
			return _11513_seq;
		}
		if ((32LL <= _10910_b) && (_10910_b <= 126LL)) {
			return static_cast<jule::Str>(_10910_b);
		}
	}
	jule::Str _1259_seq = _1a99c0d11_fmt_uint(static_cast<jule::U64>(_10910_b),8LL);
	if (_1259_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1259_seq;
	}
	return jule::Str("\\", 1) + _1259_seq;
}



inline jule::Str _1ace0e05e_get_str_model(jule::Ref<_1ad6d5cec_Const> _13218_c) {
	jule::Str _1339_content = _13218_c->_method_read_str();
	jule::Slice<jule::U8> _1349_bytes = static_cast<jule::Slice<jule::U8>>(_1339_content);
	jule::Str _1359_len = _1a99c0d11_fmt_int(static_cast<jule::I64>(_1349_bytes.len()),10LL);
	jule::Str _13713_lit = jule::Str("", 0);
	{
		auto _range_expr = _1349_bytes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::U8 _1ace0e05e_b = *_range_begin;
			_iter_begin_4453332848:;
			{
				_13713_lit+=_1ace0e05e_sbtoa(_1ace0e05e_b);
			}
			_iter_next_4453332848:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ace0e05e_b = *_range_begin; goto _iter_begin_4453332848; }
			_iter_end_4453332848:;
		}
	}
	return ((((_1adaa2350_as_jt(jule::Str("str", 3)) + jule::Str("(\"", 2)) + _13713_lit) + jule::Str("\", ", 3)) + _1359_len) + jule::Str(")", 1);
}



inline jule::Str _1ace0e05e_get_bool_model(jule::Ref<_1ad6d5cec_Const> _14519_c) {
	if (_14519_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1ace0e05e_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _1ace0e05e_gen_float_special_cases(jule::F64 _15428_x) {
	{
		if (!((_1a9ae7454_is_nan(_15428_x)))) { goto _case_end_4453339328; }
		_case_begin_4453339328:;
		{
			return jule::Str("NAN", 3);
		}
		goto _match_end_4453338768;
		_case_end_4453339328:;
		if (!((_1a9ae7454_is_inf(_15428_x,1LL)))) { goto _case_end_4453339440; }
		_case_begin_4453339440:;
		{
			return jule::Str("INFINITY", 8);
		}
		goto _match_end_4453338768;
		_case_end_4453339440:;
		if (!((_1a9ae7454_is_inf(_15428_x,-1LL)))) { goto _case_end_4453339552; }
		_case_begin_4453339552:;
		{
			return jule::Str("-INFINITY", 9);
		}
		goto _match_end_4453338768;
		_case_end_4453339552:;
		_case_begin_4453338960:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4453338768;
		_case_end_4453338960:;
		_match_end_4453338768:;
	}
}



inline jule::Str _1ace0e05e_ftoa(jule::F64 _1639_f,jule::Int _16317_bitsize) {
	if (_16317_bitsize != 32LL) {
		if (_1639_f == static_cast<jule::F64>(static_cast<jule::I64>(_1639_f))) {
			return _1ace0e05e_i64toa(static_cast<jule::I64>(_1639_f));
		}
		if (_1639_f == static_cast<jule::F64>(static_cast<jule::U64>(_1639_f))) {
			return _1ace0e05e_u64toa(static_cast<jule::U64>(_1639_f));
		}
	}
	jule::Str _17313_m = _1b6c49115_fmt_float(_1639_f,'f',-1LL,_16317_bitsize);
	if (_17313_m.find(jule::Str(".", 1)) == -1LL) {
		_17313_m+=jule::Str(".0", 2);
	}
	return _17313_m;
}



inline jule::Str _1ace0e05e_get_f32_model(jule::Ref<_1ad6d5cec_Const> _18018_c) {
	jule::F64 _1819_x = _18018_c->_method_as_f64();
	jule::Str _1849_f = _1ace0e05e_gen_float_special_cases(_1819_x);
	if (_1849_f != jule::Str("", 0)) {
		return _1849_f;
	}
	{
		if (!((_1819_x == 340282346638528860000000000000000000000.0))) { goto _case_end_4453355520; }
		_case_begin_4453355520:;
		{
			return jule::Str("jule::MAX_F32", 13);
		}
		goto _match_end_4453355376;
		_case_end_4453355520:;
		if (!((_1819_x == -340282346638528860000000000000000000000.0))) { goto _case_end_4453355984; }
		_case_begin_4453355984:;
		{
			return jule::Str("jule::MIN_F32", 13);
		}
		goto _match_end_4453355376;
		_case_end_4453355984:;
		_match_end_4453355376:;
	}
	return _1ace0e05e_ftoa(_1819_x,32LL) + jule::Str("f", 1);
}



inline jule::Str _1ace0e05e_get_f64_model(jule::Ref<_1ad6d5cec_Const> _19718_c) {
	jule::F64 _1989_x = _19718_c->_method_as_f64();
	jule::Str _2019_f = _1ace0e05e_gen_float_special_cases(_1989_x);
	if (_2019_f != jule::Str("", 0)) {
		return _2019_f;
	}
	{
		if (!((_1989_x == jule::MAX_F64))) { goto _case_end_4453362480; }
		_case_begin_4453362480:;
		{
			return jule::Str("jule::MAX_F64", 13);
		}
		goto _match_end_4453361952;
		_case_end_4453362480:;
		if (!((_1989_x == jule::MIN_F64))) { goto _case_end_4453362592; }
		_case_begin_4453362592:;
		{
			return jule::Str("jule::MIN_F64", 13);
		}
		goto _match_end_4453361952;
		_case_end_4453362592:;
		_match_end_4453361952:;
	}
	return _1ace0e05e_ftoa(_1989_x,64LL);
}



inline jule::Str _1ace0e05e_get_float_model(jule::Ref<_1acde49c3_Data> _21424_d) {
	{
		if (!((_21424_d->_field_kind->_method_prim()->_method_is_f32()))) { goto _case_end_4453367664; }
		_case_begin_4453367664:;
		{
			return _1ace0e05e_get_f32_model(_21424_d->_field_constant);
		}
		goto _match_end_4453363184;
		_case_end_4453367664:;
		_case_begin_4453366304:;
		{
			return _1ace0e05e_get_f64_model(_21424_d->_field_constant);
		}
		goto _match_end_4453363184;
		_case_end_4453366304:;
		_match_end_4453363184:;
	}
}



inline jule::Str _1ace0e05e_i64toa(jule::I64 _22111_x) {
	{
		if (!((_22111_x == jule::MAX_I64))) { goto _case_end_4453369264; }
		_case_begin_4453369264:;
		{
			return jule::Str("jule::MAX_I64", 13);
		}
		goto _match_end_4453366592;
		_case_end_4453369264:;
		if (!((_22111_x == jule::MIN_I64))) { goto _case_end_4453369392; }
		_case_begin_4453369392:;
		{
			return jule::Str("jule::MIN_I64", 13);
		}
		goto _match_end_4453366592;
		_case_end_4453369392:;
		_match_end_4453366592:;
	}
	jule::Str _2279_fmt = _1a99c0d11_fmt_int(_22111_x,10LL);
	if (_1b6ba767d_is_64bit(jule::Str("arm64", 5))) {
		return _2279_fmt + jule::Str("LL", 2);
	}
	return _2279_fmt + jule::Str("L", 1);
}



inline jule::Str _1ace0e05e_get_i64_model(jule::Ref<_1ad6d5cec_Const> _23418_c) {
	return _1ace0e05e_i64toa(static_cast<jule::I64>(_23418_c->_method_read_i64()));
}



inline jule::Str _1ace0e05e_u64toa(jule::U64 _23811_x) {
	{
		if (!((_23811_x == jule::MAX_U64))) { goto _case_end_4453378256; }
		_case_begin_4453378256:;
		{
			return jule::Str("jule::MAX_U64", 13);
		}
		goto _match_end_4453378096;
		_case_end_4453378256:;
		_match_end_4453378096:;
	}
	jule::Str _2449_fmt = _1a99c0d11_fmt_uint(_23811_x,10LL);
	if (_1b6ba767d_is_64bit(jule::Str("arm64", 5))) {
		return _2449_fmt + jule::Str("LLU", 3);
	}
	return _2449_fmt + jule::Str("LU", 2);
}



inline jule::Str _1ace0e05e_get_u64_model(jule::Ref<_1ad6d5cec_Const> _25118_c) {
	return _1ace0e05e_u64toa(static_cast<jule::U64>(_25118_c->_method_read_u64()));
}



inline jule::Str _1ace0e05e_gen_const_expr(jule::Ref<_1acde49c3_Data> _25523_d) {
	{
		if (!((_25523_d->_field_constant->_method_is_str()))) { goto _case_end_4453384960; }
		_case_begin_4453384960:;
		{
			return _1ace0e05e_get_str_model(_25523_d->_field_constant);
		}
		goto _match_end_4453384416;
		_case_end_4453384960:;
		if (!((_25523_d->_field_constant->_method_is_bool()))) { goto _case_end_4453385072; }
		_case_begin_4453385072:;
		{
			return _1ace0e05e_get_bool_model(_25523_d->_field_constant);
		}
		goto _match_end_4453384416;
		_case_end_4453385072:;
		if (!((_25523_d->_field_constant->_method_is_f64()))) { goto _case_end_4453386288; }
		_case_begin_4453386288:;
		{
			return _1ace0e05e_get_float_model(_25523_d);
		}
		goto _match_end_4453384416;
		_case_end_4453386288:;
		if (!((_25523_d->_field_constant->_method_is_i64()))) { goto _case_end_4453386400; }
		_case_begin_4453386400:;
		{
			return _1ace0e05e_get_i64_model(_25523_d->_field_constant);
		}
		goto _match_end_4453384416;
		_case_end_4453386400:;
		if (!((_25523_d->_field_constant->_method_is_u64()))) { goto _case_end_4453386512; }
		_case_begin_4453386512:;
		{
			return _1ace0e05e_get_u64_model(_25523_d->_field_constant);
		}
		goto _match_end_4453384416;
		_case_end_4453386512:;
		if (!((_25523_d->_field_constant->_method_is_nil()))) { goto _case_end_4453386624; }
		_case_begin_4453386624:;
		{
			return _1ace0e05e_get_nil_model();
		}
		goto _match_end_4453384416;
		_case_end_4453386624:;
		_case_begin_4453384544:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4453384416;
		_case_end_4453384544:;
		_match_end_4453384416:;
	}
}



inline jule::Str _1ace0e05e_gen_const_expr_model(jule::Ref<_1ad6d5cec_Const> _26725_m) {
	{
		if (!((_26725_m->_method_is_str()))) { goto _case_end_4453396240; }
		_case_begin_4453396240:;
		{
			return _1ace0e05e_get_str_model(_26725_m);
		}
		goto _match_end_4453395088;
		_case_end_4453396240:;
		if (!((_26725_m->_method_is_bool()))) { goto _case_end_4453396352; }
		_case_begin_4453396352:;
		{
			return _1ace0e05e_get_bool_model(_26725_m);
		}
		goto _match_end_4453395088;
		_case_end_4453396352:;
		if (!((_26725_m->_method_is_f64()))) { goto _case_end_4453397568; }
		_case_begin_4453397568:;
		{
			return _1ace0e05e_get_f64_model(_26725_m);
		}
		goto _match_end_4453395088;
		_case_end_4453397568:;
		if (!((_26725_m->_method_is_i64()))) { goto _case_end_4453397680; }
		_case_begin_4453397680:;
		{
			return _1ace0e05e_get_i64_model(_26725_m);
		}
		goto _match_end_4453395088;
		_case_end_4453397680:;
		if (!((_26725_m->_method_is_u64()))) { goto _case_end_4453397792; }
		_case_begin_4453397792:;
		{
			return _1ace0e05e_get_u64_model(_26725_m);
		}
		goto _match_end_4453395088;
		_case_end_4453397792:;
		if (!((_26725_m->_method_is_nil()))) { goto _case_end_4453397904; }
		_case_begin_4453397904:;
		{
			return _1ace0e05e_get_nil_model();
		}
		goto _match_end_4453395088;
		_case_end_4453397904:;
		_case_begin_4453395216:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4453395088;
		_case_end_4453395216:;
		_match_end_4453395088:;
	}
}



inline jule::Str _1ace0e05e_gen_div_by_zero_binop_expr_model(jule::Str _27937_op,jule::Any _27950_l,jule::Any _27968_r) {
	if (_1aae49d38_is_opt_enabled(jule::Str("--opt-math", 10))) {
		{
			auto _match_expr{ _27968_r };
			if (!(_match_expr.type_is<jule::Ref<_1ad6d5cec_Const>>())) { goto _case_end_4453406416; }
			_case_begin_4453406416:;
			{
				jule::Str _28321_obj = jule::Str("(", 1);
				_28321_obj+=_1ace0e05e_gen_expr(_27950_l);
				_28321_obj+=_27937_op;
				_28321_obj+=_1ace0e05e_gen_expr(_27968_r);
				_28321_obj+=jule::Str(")", 1);
				return _28321_obj;
			}
			goto _match_end_4453405888;
			_case_end_4453406416:;
			_match_end_4453405888:;
		}
	}
	jule::Str _29213_obj = jule::Str("", 0);
	{
		auto _match_expr{ _27937_op };
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4453410624; }
		_case_begin_4453410624:;
		{
			_29213_obj+=jule::Str("jule::div(", 10);
		}
		goto _match_end_4453410352;
		_case_end_4453410624:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4453410736; }
		_case_begin_4453410736:;
		{
			_29213_obj+=jule::Str("jule::mod(", 10);
		}
		goto _match_end_4453410352;
		_case_end_4453410736:;
		_match_end_4453410352:;
	}
	_29213_obj+=_1ace0e05e_gen_expr(_27950_l);
	_29213_obj+=jule::Str(",", 1);
	_29213_obj+=_1ace0e05e_gen_expr(_27968_r);
	_29213_obj+=jule::Str(")", 1);
	return _29213_obj;
}



inline jule::Str _1ace0e05e_gen_binop_expr_model(jule::Ref<_1ab0a4954_BinopExprModel> _30429_m) {
	{
		auto _match_expr{ _30429_m->_field_op };
		if (!((jule::Str("/", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr)) { goto _case_end_4453414736; }
		_case_begin_4453414736:;
		{
			return _1ace0e05e_gen_div_by_zero_binop_expr_model(_30429_m->_field_op,_30429_m->_field_left,_30429_m->_field_right);
		}
		goto _match_end_4453412320;
		_case_end_4453414736:;
		_match_end_4453412320:;
	}
	jule::Str _31113_obj = jule::Str("(", 1);
	_31113_obj+=_1ace0e05e_gen_expr_model(_30429_m->_field_left);
	_31113_obj+=jule::Str(" ", 1);
	_31113_obj+=_30429_m->_field_op;
	_31113_obj+=jule::Str(" ", 1);
	_31113_obj+=_1ace0e05e_gen_expr_model(_30429_m->_field_right);
	_31113_obj+=jule::Str(")", 1);
	return _31113_obj;
}



inline jule::Str _1ace0e05e_gen_var_expr_model(jule::Ref<_1aca3647d_Var> _32127_m) {
	if (_32127_m->_field_cpp_linked) {
		jule::Ref<_1aaeea1c4_Directive> _32313_d = _1adaa4dad_find_directive(_32127_m->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_32313_d)) {
			return (_1ace0e05e_concat_all_parts(_32313_d->_field_args) + jule::Str("::", 2)) + _1adaa2350_var_out_ident(_32127_m);
		}
	}
	return _1adaa2350_var_out_ident(_32127_m);
}



inline jule::Str _1ace0e05e_gen_struct_expr_model(jule::Ref<_1ab064271_Struct> _33126_m) {
	return _1adaa4dad_gen_struct_kind(_33126_m);
}



inline jule::Str _1ace0e05e_gen_struct_ins_expr_model(jule::Ref<_1ab064271_StructIns> _33534_m) {
	return _1adaa4dad_gen_struct_kind_ins(_33534_m);
}



inline jule::Str _1ace0e05e_gen_unary_expr_model(jule::Ref<_1ab0a4954_UnaryExprModel> _33929_m) {
	{
		auto _match_expr{ _33929_m->_field_op };
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4453430320; }
		_case_begin_4453430320:;
		{
			return (jule::Str("(~(", 3) + _1ace0e05e_gen_expr(_33929_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_4453424240;
		_case_end_4453430320:;
		_case_begin_4453428608:;
		{
			return (((jule::Str("(", 1) + _33929_m->_field_op) + jule::Str("(", 1)) + _1ace0e05e_gen_expr(_33929_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_4453424240;
		_case_end_4453428608:;
		_match_end_4453424240:;
	}
}



inline jule::Str _1ace0e05e_gen_get_ref_ptr_expr_model(jule::Ref<_1ab0a4954_GetRefPtrExprModel> _34635_m) {
	return (jule::Str("(", 1) + _1ace0e05e_gen_expr(_34635_m->_field_expr)) + jule::Str(").alloc", 7);
}



inline jule::Str _1ace0e05e_gen_cpp_struct_lit_expr_model(jule::Ref<_1ab0a4954_StructLitExprModel> _35038_m) {
	jule::Str _35113_obj = jule::Str("(", 1) + _1adaa4dad_gen_struct_kind_ins(_35038_m->_field_strct);
	_35113_obj+=jule::Str("){", 2);
	if (_35038_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto _range_expr = _35038_m->_field_strct->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab064271_FieldIns> _1ace0e05e_f = *_range_begin;
				_iter_begin_4453438592:;
				{
					if (_35038_m->_field_strct->_field_decl->_field_cpp_linked) {
						{
							auto _range_expr = _35038_m->_field_args;
							if (_range_expr.begin() != _range_expr.end()) {
								auto _range_begin = _range_expr.begin();
								const auto _range_end = _range_expr.end();
								jule::Ref<_1ab0a4954_StructArgExprModel> _1ace0e05e_arg = *_range_begin;
								_iter_begin_4453441456:;
								{
									if (_1ace0e05e_arg->_field_field == _1ace0e05e_f) {
										_35113_obj+=jule::Str(".", 1);
										_35113_obj+=_1adaa2350_field_out_ident(_1ace0e05e_f->_field_decl);
										_35113_obj+=jule::Str("=", 1);
										_35113_obj+=_1ace0e05e_gen_expr(_1ace0e05e_arg->_field_expr) + jule::Str(",", 1);
										goto _iter_next_4453438592;
									}
								}
								_iter_next_4453441456:;
								++_range_begin;
								if (_range_begin != _range_end) { _1ace0e05e_arg = *_range_begin; goto _iter_begin_4453441456; }
								_iter_end_4453441456:;
							}
						}
						goto _iter_next_4453438592;
					}
					_35113_obj+=_1adaa2350_field_out_ident(_1ace0e05e_f->_field_decl) + jule::Str(": ", 2);
					{
						auto _range_expr = _35038_m->_field_args;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_1ab0a4954_StructArgExprModel> _1ace0e05e_arg = *_range_begin;
							_iter_begin_4380984256:;
							{
								if (_1ace0e05e_arg->_field_field == _1ace0e05e_f) {
									_35113_obj+=_1ace0e05e_gen_expr(_1ace0e05e_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_4453438592;
								}
							}
							_iter_next_4380984256:;
							++_range_begin;
							if (_range_begin != _range_end) { _1ace0e05e_arg = *_range_begin; goto _iter_begin_4380984256; }
							_iter_end_4380984256:;
						}
					}
					_35113_obj+=_1ace0e05e_get_init_expr(_1ace0e05e_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_4453438592:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ace0e05e_f = *_range_begin; goto _iter_begin_4453438592; }
				_iter_end_4453438592:;
			}
		}
		_35113_obj=_35113_obj.slice(0LL,static_cast<jule::Int>(_35113_obj.len() - 1LL));
	}
	_35113_obj+=jule::Str("}", 1);
	return _35113_obj;
}



inline jule::Str _1ace0e05e_gen_struct_lit_expr_model(jule::Ref<_1ab0a4954_StructLitExprModel> _38434_m) {
	if (_38434_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _1ace0e05e_gen_cpp_struct_lit_expr_model(_38434_m);
	}
	jule::Str _38913_obj = _1adaa2350_struct_ins_out_ident(_38434_m->_field_strct);
	_38913_obj+=jule::Str("(", 1);
	if (_38434_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto _range_expr = _38434_m->_field_strct->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab064271_FieldIns> _1ace0e05e_f = *_range_begin;
				_iter_begin_4382440240:;
				{
					{
						auto _range_expr = _38434_m->_field_args;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_1ab0a4954_StructArgExprModel> _1ace0e05e_arg = *_range_begin;
							_iter_begin_4382486752:;
							{
								if (_1ace0e05e_arg->_field_field == _1ace0e05e_f) {
									_38913_obj+=_1ace0e05e_gen_expr(_1ace0e05e_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_4382440240;
								}
							}
							_iter_next_4382486752:;
							++_range_begin;
							if (_range_begin != _range_end) { _1ace0e05e_arg = *_range_begin; goto _iter_begin_4382486752; }
							_iter_end_4382486752:;
						}
					}
					_38913_obj+=_1ace0e05e_get_init_expr(_1ace0e05e_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_4382440240:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ace0e05e_f = *_range_begin; goto _iter_begin_4382440240; }
				_iter_end_4382440240:;
			}
		}
		_38913_obj=_38913_obj.slice(0LL,static_cast<jule::Int>(_38913_obj.len() - 1LL));
	}
	_38913_obj+=jule::Str(")", 1);
	return _38913_obj;
}



inline jule::Str _1ace0e05e_gen_alloc_struct_lit_expr_model(jule::Ref<_1ab0a4954_AllocStructLitExprModel> _40840_m) {
	jule::Str _40913_obj = jule::Str("jule::new_struct<", 17);
	_40913_obj+=_1adaa2350_struct_out_ident(_40840_m->_field_lit->_field_strct->_field_decl);
	_40913_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_40913_obj+=_1ace0e05e_gen_struct_lit_expr_model(_40840_m->_field_lit);
	_40913_obj+=jule::Str(")", 1);
	return _40913_obj;
}



inline jule::Str _1ace0e05e_gen_casting_expr_model(jule::Ref<_1ab0a4954_CastingExprModel> _41731_m) {
	jule::Str _41813_obj = jule::Str("", 0);
	{
		if (!((jule::real(_41731_m->_field_kind->_method_prim()) && _41731_m->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4381077472; }
		_case_begin_4381077472:;
		{
			_41813_obj+=_1adaa4dad_gen_type_kind(_41731_m->_field_kind);
			_41813_obj+=jule::Str("(", 1);
			_41813_obj+=_1ace0e05e_gen_expr_model(_41731_m->_field_expr);
			_41813_obj+=jule::Str(")", 1);
		}
		goto _match_end_4384031360;
		_case_end_4381077472:;
		if (!((jule::real(_41731_m->_field_expr_kind->_method_ptr())) || (jule::real(_41731_m->_field_kind->_method_ptr())))) { goto _case_end_4381330160; }
		_case_begin_4381330160:;
		{
			_41813_obj+=jule::Str("((", 2);
			_41813_obj+=_1adaa4dad_gen_type_kind(_41731_m->_field_kind);
			_41813_obj+=jule::Str(")(", 2);
			_41813_obj+=_1ace0e05e_gen_expr(_41731_m->_field_expr);
			_41813_obj+=jule::Str("))", 2);
		}
		goto _match_end_4384031360;
		_case_end_4381330160:;
		if (!((jule::real(_41731_m->_field_expr_kind->_method_trt())) || (jule::real(_41731_m->_field_expr_kind->_method_prim()) && _41731_m->_field_expr_kind->_method_prim()->_method_is_any()))) { goto _case_end_4381448480; }
		_case_begin_4381448480:;
		{
			_41813_obj+=_1ace0e05e_gen_expr_model(_41731_m->_field_expr);
			_41813_obj+=_1ace0e05e_get_accessor(_41731_m->_field_expr_kind);
			_41813_obj+=jule::Str("operator ", 9);
			_41813_obj+=_1adaa4dad_gen_type_kind(_41731_m->_field_kind);
			_41813_obj+=jule::Str("()", 2);
		}
		goto _match_end_4384031360;
		_case_end_4381448480:;
		_case_begin_4380691248:;
		{
			_41813_obj+=jule::Str("static_cast<", 12);
			_41813_obj+=_1adaa4dad_gen_type_kind(_41731_m->_field_kind);
			_41813_obj+=jule::Str(">(", 2);
			_41813_obj+=_1ace0e05e_gen_expr(_41731_m->_field_expr);
			_41813_obj+=jule::Str(")", 1);
		}
		goto _match_end_4384031360;
		_case_end_4380691248:;
		_match_end_4384031360:;
	}
	return _41813_obj;
}



inline jule::Str _1ace0e05e_gen_arg_expr_models(jule::Slice<jule::Any> _45228_models) {
	if (_45228_models.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _45713_obj = jule::Str("", 0);
	{
		auto _range_expr = _45228_models;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1ace0e05e_m = *_range_begin;
			_iter_begin_4384178128:;
			{
				_45713_obj+=_1ace0e05e_gen_expr(_1ace0e05e_m) + jule::Str(",", 1);
			}
			_iter_next_4384178128:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ace0e05e_m = *_range_begin; goto _iter_begin_4384178128; }
			_iter_end_4384178128:;
		}
	}
	_45713_obj=_45713_obj.slice(0LL,static_cast<jule::Int>(_45713_obj.len() - 1LL));
	return _45713_obj;
}



inline jule::Str _1ace0e05e_gen_fn_call_expr_model(jule::Ref<_1ab0a4954_FnCallExprModel> _46531_m) {
	jule::Str _46613_obj = _1ace0e05e_gen_expr_model(_46531_m->_field_expr);
	if ((!(_46531_m->_field_func->_method_is_builtin()))) {
		if (_46531_m->_field_func->_field_decl->_field_cpp_linked && (_46531_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_1adaa4dad_has_directive(_46531_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_46613_obj+=jule::Str("<", 1);
				{
					auto _range_expr = _46531_m->_field_func->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ad3e617d_TypeKind> _1ace0e05e_g = *_range_begin;
						_iter_begin_4380335936:;
						{
							_46613_obj+=_1adaa4dad_gen_type_kind(_1ace0e05e_g) + jule::Str(",", 1);
						}
						_iter_next_4380335936:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ace0e05e_g = *_range_begin; goto _iter_begin_4380335936; }
						_iter_end_4380335936:;
					}
				}
				_46613_obj=_46613_obj.slice(0LL,static_cast<jule::Int>(_46613_obj.len() - 1LL));
				_46613_obj+=jule::Str(">", 1);
			}
		}
	}
	_46613_obj+=jule::Str("(", 1);
	_46613_obj+=_1ace0e05e_gen_arg_expr_models(_46531_m->_field_args);
	_46613_obj+=jule::Str(")", 1);
	if (_46531_m->_field_is_co) {
		_46613_obj=(jule::Str("__JULE_CO(", 10) + _46613_obj) + jule::Str(")", 1);
	}
	return _46613_obj;
}



inline jule::Str _1ace0e05e_gen_slice_expr_model(jule::Ref<_1ab0a4954_SliceExprModel> _49029_m) {
	jule::Str _49113_obj = _1adaa4dad_as_slice_kind(_49029_m->_field_elem_kind);
	_49113_obj+=jule::Str("({", 2);
	_49113_obj+=_1ace0e05e_gen_arg_expr_models(_49029_m->_field_elems);
	_49113_obj+=jule::Str("})", 2);
	return _49113_obj;
}



inline jule::Str _1ace0e05e_gen_indexing_expr_model(jule::Ref<_1ab0a4954_IndexigExprModel> _49832_m) {
	jule::Str _49913_obj = _1ace0e05e_gen_expr_model(_49832_m->_field_expr);
	_49913_obj+=jule::Str("[", 1);
	_49913_obj+=_1ace0e05e_gen_expr(_49832_m->_field_index);
	_49913_obj+=jule::Str("]", 1);
	return _49913_obj;
}



inline jule::Str _1ace0e05e_gen_anon_fn_expr_model(jule::Ref<_1ab0a4954_AnonFnExprModel> _50631_m) {
	jule::Str _50713_obj = _1adaa4dad_gen_fn_kind(_50631_m->_field_func);
	_50713_obj+=jule::Str("([=]", 4);
	_50713_obj+=_1adad79c3_gen_params_ins(_50631_m->_field_func->_field_params);
	_50713_obj+=jule::Str(" mutable -> ", 12);
	_50713_obj+=_1adad79c3_gen_fn_ins_result(_50631_m->_field_func);
	_50713_obj+=jule::Str(" ", 1);
	_50713_obj+=_1aae7037a_gen_fn_scope(_50631_m->_field_func);
	_50713_obj+=jule::Str(")", 1);
	return _50713_obj;
}



inline jule::Str _1ace0e05e_gen_map_expr_model(jule::Ref<_1ab0a4954_MapExprModel> _52327_m) {
	jule::Str _52413_obj = _1adaa2350_as_jt(jule::Str("map", 3));
	_52413_obj+=jule::Str("<", 1);
	_52413_obj+=_1adaa4dad_gen_type_kind(_52327_m->_field_key_kind);
	_52413_obj+=jule::Str(",", 1);
	_52413_obj+=_1adaa4dad_gen_type_kind(_52327_m->_field_val_kind);
	_52413_obj+=jule::Str(">({", 3);
	if (_52327_m->_field_entries.len() > 0LL) {
		{
			auto _range_expr = _52327_m->_field_entries;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab0a4954_KeyValPairExprModel> _1ace0e05e_pair = *_range_begin;
				_iter_begin_4383598992:;
				{
					jule::Str _53221_pair_obj = jule::Str("{", 1);
					_53221_pair_obj+=_1ace0e05e_gen_expr(_1ace0e05e_pair->_field_key);
					_53221_pair_obj+=jule::Str(",", 1);
					_53221_pair_obj+=_1ace0e05e_gen_expr(_1ace0e05e_pair->_field_val);
					_53221_pair_obj+=jule::Str("}", 1);
					_52413_obj+=_53221_pair_obj;
					_52413_obj+=jule::Str(",", 1);
				}
				_iter_next_4383598992:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ace0e05e_pair = *_range_begin; goto _iter_begin_4383598992; }
				_iter_end_4383598992:;
			}
		}
		_52413_obj=_52413_obj.slice(0LL,static_cast<jule::Int>(_52413_obj.len() - 1LL));
	}
	_52413_obj+=jule::Str("})", 2);
	return _52413_obj;
}



inline jule::Str _1ace0e05e_gen_slicing_expr_model(jule::Ref<_1ab0a4954_SlicingExprModel> _54631_m) {
	jule::Str _54713_obj = _1ace0e05e_gen_expr_model(_54631_m->_field_expr);
	_54713_obj+=jule::Str(".slice(", 7);
	_54713_obj+=_1ace0e05e_gen_expr(_54631_m->_field_left);
	if (_54631_m->_field_right != nullptr) {
		_54713_obj+=jule::Str(",", 1);
		_54713_obj+=_1ace0e05e_gen_expr(_54631_m->_field_right);
	}
	_54713_obj+=jule::Str(")", 1);
	return _54713_obj;
}



inline jule::Str _1ace0e05e_gen_trait_sub_ident_expr_model(jule::Ref<_1ab0a4954_TraitSubIdentExprModel> _55839_m) {
	jule::Str _55913_obj = _1ace0e05e_gen_expr_model(_55839_m->_field_expr);
	_55913_obj+=jule::Str(".get()._method_", 15);
	_55913_obj+=_55839_m->_field_ident;
	return _55913_obj;
}



inline jule::Str _1ace0e05e_gen_struct_sub_ident_expr_model(jule::Ref<_1ab0a4954_StructSubIdentExprModel> _56540_m) {
	jule::Str _56613_obj = _1ace0e05e_gen_expr_model(_56540_m->_field_expr);
	_56613_obj+=_1ace0e05e_get_accessor(_56540_m->_field_expr_kind);
	if (jule::real(_56540_m->_field_field)) {
		_56613_obj+=_1adaa2350_field_out_ident(_56540_m->_field_field->_field_decl);
	} else {
		_56613_obj+=_1adaa2350_fn_ins_out_ident(_56540_m->_field_method);
	}
	return _56613_obj;
}



inline jule::Str _1ace0e05e_gen_common_ident_expr_model(jule::Ref<_1ab0a4954_CommonIdentExprModel> _57632_m) {
	return _57632_m->_field_ident;
}



inline jule::Str _1ace0e05e_gen_common_sub_ident_expr_model(jule::Ref<_1ab0a4954_CommonSubIdentExprModel> _58040_m) {
	jule::Str _58113_obj = _1ace0e05e_gen_expr_model(_58040_m->_field_expr);
	_58113_obj+=_1ace0e05e_get_accessor(_58040_m->_field_expr_kind);
	_58113_obj+=_58040_m->_field_ident;
	return _58113_obj;
}



inline jule::Str _1ace0e05e_gen_array_expr_model(jule::Ref<_1ab0a4954_ArrayExprModel> _58729_m) {
	jule::Str _58813_obj = _1adaa4dad_gen_array_kind(_58729_m->_field_kind);
	_58813_obj+=jule::Str("({", 2);
	_58813_obj+=_1ace0e05e_gen_arg_expr_models(_58729_m->_field_elems);
	_58813_obj+=jule::Str("})", 2);
	return _58813_obj;
}



inline jule::Str _1ace0e05e_gen_fn_ins_expr_model(jule::Ref<_1ab07a50c_FnIns> _59530_m) {
	if (jule::real(_59530_m->_field_decl) && _59530_m->_field_decl->_field_cpp_linked) {
		jule::Ref<_1aaeea1c4_Directive> _59713_d = _1adaa4dad_find_directive(_59530_m->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_59713_d)) {
			return (_1ace0e05e_concat_all_parts(_59713_d->_field_args) + jule::Str("::", 2)) + _1adaa2350_fn_ins_out_ident(_59530_m);
		}
	}
	return _1adaa2350_fn_ins_out_ident(_59530_m);
}



inline jule::Str _1ace0e05e_gen_tuple_expr_model(jule::Ref<_1ab0a4954_TupleExprModel> _60529_m) {
	jule::Str _60613_obj = jule::Str("std::make_tuple(", 16);
	{
		auto _range_expr = _60529_m->_field_datas;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acde49c3_Data> _1ace0e05e_d = *_range_begin;
			_iter_begin_4384571456:;
			{
				_60613_obj+=_1ace0e05e_gen_expr(_1ace0e05e_d->_field_model) + jule::Str(",", 1);
			}
			_iter_next_4384571456:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ace0e05e_d = *_range_begin; goto _iter_begin_4384571456; }
			_iter_end_4384571456:;
		}
	}
	_60613_obj=_60613_obj.slice(0LL,static_cast<jule::Int>(_60613_obj.len() - 1LL));
	_60613_obj+=jule::Str(")", 1);
	return _60613_obj;
}



inline jule::Str _1ace0e05e_gen_builtin_new_call_expr_model(jule::Ref<_1ab0a4954_BuiltinNewCallExprModel> _61540_m) {
	jule::Str _61613_obj = jule::Str("jule::new_ref<", 14);
	_61613_obj+=_1adaa4dad_gen_type_kind(_61540_m->_field_kind);
	_61613_obj+=jule::Str(">(", 2);
	if (_61540_m->_field_init != nullptr) {
		_61613_obj+=_1ace0e05e_gen_expr(_61540_m->_field_init);
	}
	_61613_obj+=jule::Str(")", 1);
	return _61613_obj;
}



inline jule::Str _1ace0e05e_gen_builtin_out_call_expr_model(jule::Ref<_1ab0a4954_BuiltinOutCallExprModel> _62640_m) {
	jule::Str _62713_obj = jule::Str("jule::out(", 10);
	_62713_obj+=_1ace0e05e_gen_expr(_62640_m->_field_expr);
	_62713_obj+=jule::Str(")", 1);
	return _62713_obj;
}



inline jule::Str _1ace0e05e_gen_builtin_outln_call_expr_model(jule::Ref<_1ab0a4954_BuiltinOutlnCallExprModel> _63342_m) {
	jule::Str _63413_obj = jule::Str("jule::outln(", 12);
	_63413_obj+=_1ace0e05e_gen_expr(_63342_m->_field_expr);
	_63413_obj+=jule::Str(")", 1);
	return _63413_obj;
}



inline jule::Str _1ace0e05e_gen_builtin_real_call_expr_model(jule::Ref<_1ab0a4954_BuiltinRealCallExprModel> _64041_m) {
	jule::Str _64113_obj = jule::Str("jule::real(", 11);
	_64113_obj+=_1ace0e05e_gen_expr(_64041_m->_field_expr);
	_64113_obj+=jule::Str(")", 1);
	return _64113_obj;
}



inline jule::Str _1ace0e05e_gen_builtin_drop_call_expr_model(jule::Ref<_1ab0a4954_BuiltinDropCallExprModel> _64741_m) {
	jule::Str _64813_obj = jule::Str("jule::drop(", 11);
	_64813_obj+=_1ace0e05e_gen_expr(_64741_m->_field_expr);
	_64813_obj+=jule::Str(")", 1);
	return _64813_obj;
}



inline jule::Str _1ace0e05e_gen_builtin_panic_call_expr_model(jule::Ref<_1ab0a4954_BuiltinPanicCallExprModel> _65442_m) {
	jule::Str _65513_obj = jule::Str("jule::panic(", 12);
	_65513_obj+=_1ace0e05e_gen_expr(_65442_m->_field_expr);
	_65513_obj+=jule::Str(")", 1);
	return _65513_obj;
}



inline jule::Str _1ace0e05e_gen_builtin_make_call_expr_model(jule::Ref<_1ab0a4954_BuiltinMakeCallExprModel> _66141_m) {
	jule::Str _66213_obj = jule::Str("", 0);
	if (_66141_m->_field_len != nullptr) {
		_66213_obj+=_1ace0e05e_gen_expr(_66141_m->_field_len);
	} else {
		_66213_obj+=jule::Str("0", 1);
	}
	if (_66141_m->_field_cap != nullptr) {
		_66213_obj+=jule::Str(",", 1) + _1ace0e05e_gen_expr(_66141_m->_field_cap);
	}
	if (jule::real(_66141_m->_field_kind->_method_slc()->_field_elem->_method_enm())) {
		_66213_obj+=jule::Str(",", 1);
		_66213_obj+=_1ace0e05e_get_init_expr(_66141_m->_field_kind->_method_slc()->_field_elem);
		if (_66141_m->_field_cap != nullptr) {
			_66213_obj=(_1adaa4dad_gen_type_kind(_66141_m->_field_kind) + jule::Str("::alloc(", 8)) + _66213_obj;
		} else {
			_66213_obj=(_1adaa4dad_gen_type_kind(_66141_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _66213_obj;
		}
	} else {
		_66213_obj=(_1adaa4dad_gen_type_kind(_66141_m->_field_kind) + jule::Str("::alloc(", 8)) + _66213_obj;
	}
	_66213_obj+=jule::Str(")", 1);
	return _66213_obj;
}



inline jule::Str _1ace0e05e_gen_builtin_append_call_expr_model_assign_opt(jule::Bool _6895_same_dest,jule::Str& _6906_dest_expr,jule::Ref<_1ad3e617d_TypeKind>& _69110_dest_kind,jule::Ref<_1ab0a4954_SliceExprModel>& _69210_s,jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel>& _69310_m) {
	jule::Str _69413_obj = jule::Str("", 0);
	if ((!(_6895_same_dest))) {
		_69413_obj+=(((((_6906_dest_expr + jule::Str(" = jule::alloc_for_append(", 26)) + _1ace0e05e_gen_expr_model(_69310_m->_field_dest)) + jule::Str(",", 1)) + _1a99c0d11_itoa(static_cast<jule::I64>(_69210_s->_field_elems.len()))) + jule::Str(")", 1)) + jule::Str(";", 1);
	}
	{
		auto _range_expr = _69210_s->_field_elems;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1ace0e05e_e = *_range_begin;
			_iter_begin_4382123648:;
			{
				_69413_obj+=_6906_dest_expr;
				_69413_obj+=_1ace0e05e_get_accessor(_69110_dest_kind);
				_69413_obj+=jule::Str("push(", 5);
				_69413_obj+=_1ace0e05e_gen_expr_model(_1ace0e05e_e);
				_69413_obj+=jule::Str(");", 2);
			}
			_iter_next_4382123648:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ace0e05e_e = *_range_begin; goto _iter_begin_4382123648; }
			_iter_end_4382123648:;
		}
	}
	return _69413_obj;
}



inline std::tuple<jule::Str,jule::Bool> _1ace0e05e_gen_builtin_append_call_expr_model_assign(jule::Any _70850_dest,jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel> _70871_m) {
	jule::Bool _708110_optimized = jule::Bool();
	{
		auto _match_expr{ _70871_m->_field_elements };
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_SliceExprModel>>())) { goto _case_end_4380275504; }
		_case_begin_4380275504:;
		{
			{
				auto _match_expr{ _70850_dest };
				if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4381156720; }
				_case_begin_4381156720:;
				{
					jule::Ref<_1ab0a4954_SliceExprModel> _71321_s = _70871_m->_field_elements.operator jule::Ref<_1ab0a4954_SliceExprModel>();
					jule::Str _71417_dest_expr = _1ace0e05e_gen_expr_model(_70850_dest);
					jule::Ref<_1aca3647d_Var> _71521_dest_var = _70850_dest.operator jule::Ref<_1aca3647d_Var>();
					jule::Bool _71617_same_dest = _1adaa4dad_any_equals_0(_71521_dest_var,_70871_m->_field_dest);
					_708110_optimized = true;
					return std::make_tuple(_1ace0e05e_gen_builtin_append_call_expr_model_assign_opt(_71617_same_dest,_71417_dest_expr,_71521_dest_var->_field_kind->_field_kind,_71321_s,_70871_m),_708110_optimized);
				}
				goto _match_end_4380757552;
				_case_end_4381156720:;
				if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_StructSubIdentExprModel>>())) { goto _case_end_4381923008; }
				_case_begin_4381923008:;
				{
					jule::Ref<_1ab0a4954_SliceExprModel> _72121_s = _70871_m->_field_elements.operator jule::Ref<_1ab0a4954_SliceExprModel>();
					jule::Str _72217_dest_expr = _1ace0e05e_gen_expr_model(_70850_dest);
					jule::Ref<_1ab064271_FieldIns> _72321_dest_field = _70850_dest.operator jule::Ref<_1ab0a4954_StructSubIdentExprModel>()->_field_field;
					jule::Bool _72417_same_dest = _1adaa4dad_any_equals_1(_72321_dest_field,_70871_m->_field_dest);
					_708110_optimized = true;
					return std::make_tuple(_1ace0e05e_gen_builtin_append_call_expr_model_assign_opt(_72417_same_dest,_72217_dest_expr,_72321_dest_field->_field_kind,_72121_s,_70871_m),_708110_optimized);
				}
				goto _match_end_4380757552;
				_case_end_4381923008:;
				_match_end_4380757552:;
			}
		}
		goto _match_end_4383968640;
		_case_end_4380275504:;
		_match_end_4383968640:;
	}
	_708110_optimized = false;
	return std::make_tuple(_1ace0e05e_gen_builtin_append_call_expr_model(_70871_m),_708110_optimized);
}



inline jule::Str _1ace0e05e_gen_builtin_append_call_expr_model(jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel> _73343_m) {
	return (((jule::Str("jule::append(", 13) + _1ace0e05e_gen_expr_model(_73343_m->_field_dest)) + jule::Str(",", 1)) + _1ace0e05e_gen_expr_model(_73343_m->_field_elements)) + jule::Str(")", 1);
}



inline jule::Str _1ace0e05e_gen_builtin_clone_call_expr_model(jule::Ref<_1ab0a4954_BuiltinCloneCallExprModel> _73742_m) {
	jule::Str _73813_obj = jule::Str("jule::clone(", 12);
	_73813_obj+=_1ace0e05e_gen_expr_model(_73742_m->_field_expr);
	_73813_obj+=jule::Str(")", 1);
	return _73813_obj;
}



inline jule::Str _1ace0e05e_gen_sizeof_expr_model(jule::Ref<_1ab0a4954_SizeofExprModel> _74430_m) {
	jule::Str _74513_obj = jule::Str("sizeof(", 7);
	_74513_obj+=_1ace0e05e_gen_expr(_74430_m->_field_expr);
	_74513_obj+=jule::Str(")", 1);
	return _74513_obj;
}



inline jule::Str _1ace0e05e_gen_alignof_expr_model(jule::Ref<_1ab0a4954_AlignofExprModel> _75131_m) {
	jule::Str _75213_obj = jule::Str("alignof(", 8);
	_75213_obj+=_1ace0e05e_gen_expr(_75131_m->_field_expr);
	_75213_obj+=jule::Str(")", 1);
	return _75213_obj;
}



inline jule::Str _1ace0e05e_gen_rune_expr_model(jule::Ref<_1ab0a4954_RuneExprModel> _75824_m) {
	if (_75824_m->_field_code <= 127LL) {
		jule::Str _76017_b = _1ace0e05e_sbtoa(static_cast<jule::U8>(_75824_m->_field_code));
		if (_76017_b == jule::Str("'", 1)) {
			_76017_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _76017_b) + jule::Str("'", 1);
	}
	return _1ace0e05e_i64toa(static_cast<jule::I64>(_75824_m->_field_code));
}



inline jule::Str _1ace0e05e_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_1ab0a4954_BuiltinErrorTraitSubIdentExprModel> _76953_m) {
	jule::Str _77013_obj = _1ace0e05e_gen_expr_model(_76953_m->_field_expr);
	_77013_obj+=jule::Str(".get().", 7);
	_77013_obj+=_76953_m->_field_ident;
	return _77013_obj;
}



inline jule::Str _1ace0e05e_gen_explicit_deref_expr_model(jule::Ref<_1ab0a4954_ExplicitDerefExprModel> _77638_m) {
	jule::Str _77713_obj = _1ace0e05e_gen_expr_model(_77638_m->_field_expr);
	_77713_obj+=jule::Str(".get()", 6);
	return _77713_obj;
}



inline jule::Str _1ace0e05e_gen_struct_static_ident_expr_model(jule::Ref<_1ab0a4954_StructStaticIdentExprModel> _78243_m) {
	jule::Str _78313_obj = _1adaa2350_struct_ins_out_ident(_78243_m->_field_structure);
	_78313_obj+=jule::Str("::", 2);
	_78313_obj+=_1adaa2350_fn_ins_out_ident(_78243_m->_field_method);
	return _78313_obj;
}



inline jule::Str _1ace0e05e_gen_expr_model(jule::Any _78923_m) {
	{
		auto _match_expr{ _78923_m };
		if (!(_match_expr.type_is<jule::Ref<_1ad3e617d_TypeKind>>())) { goto _case_end_4381498912; }
		_case_begin_4381498912:;
		{
			return _1adaa4dad_gen_type_kind(_78923_m.operator jule::Ref<_1ad3e617d_TypeKind>());
		}
		goto _match_end_4383612384;
		_case_end_4381498912:;
		if (!(_match_expr.type_is<jule::Ref<_1ad6d5cec_Const>>())) { goto _case_end_4382246032; }
		_case_begin_4382246032:;
		{
			return _1ace0e05e_gen_const_expr_model(_78923_m.operator jule::Ref<_1ad6d5cec_Const>());
		}
		goto _match_end_4383612384;
		_case_end_4382246032:;
		if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4382246144; }
		_case_begin_4382246144:;
		{
			return _1ace0e05e_gen_var_expr_model(_78923_m.operator jule::Ref<_1aca3647d_Var>());
		}
		goto _match_end_4383612384;
		_case_end_4382246144:;
		if (!(_match_expr.type_is<jule::Ref<_1ac276c57_Trait>>())) { goto _case_end_4382246256; }
		_case_begin_4382246256:;
		{
			return _1adaa2350_trait_out_ident(_78923_m.operator jule::Ref<_1ac276c57_Trait>());
		}
		goto _match_end_4383612384;
		_case_end_4382246256:;
		if (!(_match_expr.type_is<jule::Ref<_1ab064271_Struct>>())) { goto _case_end_4385741024; }
		_case_begin_4385741024:;
		{
			return _1ace0e05e_gen_struct_expr_model(_78923_m.operator jule::Ref<_1ab064271_Struct>());
		}
		goto _match_end_4383612384;
		_case_end_4385741024:;
		if (!(_match_expr.type_is<jule::Ref<_1ab064271_StructIns>>())) { goto _case_end_4385741136; }
		_case_begin_4385741136:;
		{
			return _1ace0e05e_gen_struct_ins_expr_model(_78923_m.operator jule::Ref<_1ab064271_StructIns>());
		}
		goto _match_end_4383612384;
		_case_end_4385741136:;
		if (!(_match_expr.type_is<jule::Ref<_1ab07a50c_FnIns>>())) { goto _case_end_4385741248; }
		_case_begin_4385741248:;
		{
			return _1ace0e05e_gen_fn_ins_expr_model(_78923_m.operator jule::Ref<_1ab07a50c_FnIns>());
		}
		goto _match_end_4383612384;
		_case_end_4385741248:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BinopExprModel>>())) { goto _case_end_4385741360; }
		_case_begin_4385741360:;
		{
			return _1ace0e05e_gen_binop_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_BinopExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4385741360:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_UnaryExprModel>>())) { goto _case_end_4381499968; }
		_case_begin_4381499968:;
		{
			return _1ace0e05e_gen_unary_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_UnaryExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4381499968:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_GetRefPtrExprModel>>())) { goto _case_end_4381500080; }
		_case_begin_4381500080:;
		{
			return _1ace0e05e_gen_get_ref_ptr_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_GetRefPtrExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4381500080:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_StructLitExprModel>>())) { goto _case_end_4381500192; }
		_case_begin_4381500192:;
		{
			return _1ace0e05e_gen_struct_lit_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_StructLitExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4381500192:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_AllocStructLitExprModel>>())) { goto _case_end_4381500304; }
		_case_begin_4381500304:;
		{
			return _1ace0e05e_gen_alloc_struct_lit_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_AllocStructLitExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4381500304:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_CastingExprModel>>())) { goto _case_end_4381500416; }
		_case_begin_4381500416:;
		{
			return _1ace0e05e_gen_casting_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_CastingExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4381500416:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_FnCallExprModel>>())) { goto _case_end_4382192832; }
		_case_begin_4382192832:;
		{
			return _1ace0e05e_gen_fn_call_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_FnCallExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382192832:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_SliceExprModel>>())) { goto _case_end_4382192944; }
		_case_begin_4382192944:;
		{
			return _1ace0e05e_gen_slice_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_SliceExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382192944:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_ArrayExprModel>>())) { goto _case_end_4382193056; }
		_case_begin_4382193056:;
		{
			return _1ace0e05e_gen_array_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_ArrayExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382193056:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_IndexigExprModel>>())) { goto _case_end_4382193168; }
		_case_begin_4382193168:;
		{
			return _1ace0e05e_gen_indexing_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_IndexigExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382193168:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_AnonFnExprModel>>())) { goto _case_end_4382193280; }
		_case_begin_4382193280:;
		{
			return _1ace0e05e_gen_anon_fn_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_AnonFnExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382193280:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_MapExprModel>>())) { goto _case_end_4382912000; }
		_case_begin_4382912000:;
		{
			return _1ace0e05e_gen_map_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_MapExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382912000:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_SlicingExprModel>>())) { goto _case_end_4382912112; }
		_case_begin_4382912112:;
		{
			return _1ace0e05e_gen_slicing_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_SlicingExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382912112:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_TraitSubIdentExprModel>>())) { goto _case_end_4382912224; }
		_case_begin_4382912224:;
		{
			return _1ace0e05e_gen_trait_sub_ident_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_TraitSubIdentExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382912224:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_StructSubIdentExprModel>>())) { goto _case_end_4382912336; }
		_case_begin_4382912336:;
		{
			return _1ace0e05e_gen_struct_sub_ident_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_StructSubIdentExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382912336:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_CommonIdentExprModel>>())) { goto _case_end_4382912448; }
		_case_begin_4382912448:;
		{
			return _1ace0e05e_gen_common_ident_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_CommonIdentExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382912448:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_CommonSubIdentExprModel>>())) { goto _case_end_4380537376; }
		_case_begin_4380537376:;
		{
			return _1ace0e05e_gen_common_sub_ident_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_CommonSubIdentExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4380537376:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_TupleExprModel>>())) { goto _case_end_4380537488; }
		_case_begin_4380537488:;
		{
			return _1ace0e05e_gen_tuple_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_TupleExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4380537488:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BuiltinOutCallExprModel>>())) { goto _case_end_4380537600; }
		_case_begin_4380537600:;
		{
			return _1ace0e05e_gen_builtin_out_call_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_BuiltinOutCallExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4380537600:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BuiltinOutlnCallExprModel>>())) { goto _case_end_4380537712; }
		_case_begin_4380537712:;
		{
			return _1ace0e05e_gen_builtin_outln_call_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_BuiltinOutlnCallExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4380537712:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BuiltinNewCallExprModel>>())) { goto _case_end_4380537824; }
		_case_begin_4380537824:;
		{
			return _1ace0e05e_gen_builtin_new_call_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_BuiltinNewCallExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4380537824:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BuiltinRealCallExprModel>>())) { goto _case_end_4380537936; }
		_case_begin_4380537936:;
		{
			return _1ace0e05e_gen_builtin_real_call_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_BuiltinRealCallExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4380537936:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BuiltinDropCallExprModel>>())) { goto _case_end_4382128496; }
		_case_begin_4382128496:;
		{
			return _1ace0e05e_gen_builtin_drop_call_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_BuiltinDropCallExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382128496:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BuiltinPanicCallExprModel>>())) { goto _case_end_4382128608; }
		_case_begin_4382128608:;
		{
			return _1ace0e05e_gen_builtin_panic_call_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_BuiltinPanicCallExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382128608:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BuiltinMakeCallExprModel>>())) { goto _case_end_4382128720; }
		_case_begin_4382128720:;
		{
			return _1ace0e05e_gen_builtin_make_call_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_BuiltinMakeCallExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382128720:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel>>())) { goto _case_end_4382128832; }
		_case_begin_4382128832:;
		{
			return _1ace0e05e_gen_builtin_append_call_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_BuiltinAppendCallExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382128832:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BuiltinCloneCallExprModel>>())) { goto _case_end_4382128944; }
		_case_begin_4382128944:;
		{
			return _1ace0e05e_gen_builtin_clone_call_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_BuiltinCloneCallExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382128944:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_SizeofExprModel>>())) { goto _case_end_4382129056; }
		_case_begin_4382129056:;
		{
			return _1ace0e05e_gen_sizeof_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_SizeofExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4382129056:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_AlignofExprModel>>())) { goto _case_end_4384550576; }
		_case_begin_4384550576:;
		{
			return _1ace0e05e_gen_alignof_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_AlignofExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4384550576:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_RuneExprModel>>())) { goto _case_end_4384550688; }
		_case_begin_4384550688:;
		{
			return _1ace0e05e_gen_rune_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_RuneExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4384550688:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BuiltinErrorTraitSubIdentExprModel>>())) { goto _case_end_4384550816; }
		_case_begin_4384550816:;
		{
			return _1ace0e05e_gen_builtin_error_trait_sub_ident_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_BuiltinErrorTraitSubIdentExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4384550816:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_ExplicitDerefExprModel>>())) { goto _case_end_4384550944; }
		_case_begin_4384550944:;
		{
			return _1ace0e05e_gen_explicit_deref_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_ExplicitDerefExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4384550944:;
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_StructStaticIdentExprModel>>())) { goto _case_end_4384551072; }
		_case_begin_4384551072:;
		{
			return _1ace0e05e_gen_struct_static_ident_expr_model(_78923_m.operator jule::Ref<_1ab0a4954_StructStaticIdentExprModel>());
		}
		goto _match_end_4383612384;
		_case_end_4384551072:;
		_case_begin_4381498528:;
		{
			return jule::Str("<unimplemented_expression_model>", 32);
		}
		goto _match_end_4383612384;
		_case_end_4381498528:;
		_match_end_4383612384:;
	}
}



inline jule::Str _1ace0e05e_gen_expr(jule::Any _91617_e) {
	jule::Str _91713_obj = _1ace0e05e_gen_expr_model(_91617_e);
	if (_91713_obj[0LL] != '(') {
		return _91713_obj;
	}
	{
		auto _match_expr{ _91617_e };
		if (!(_match_expr.type_is<jule::Ref<_1ab0a4954_BinopExprModel>>())) { goto _case_end_4381147040; }
		_case_begin_4381147040:;
		{
			_91713_obj=_91713_obj.slice(1LL,static_cast<jule::Int>(_91713_obj.len() - 1LL));
		}
		goto _match_end_4381146592;
		_case_end_4381147040:;
		_match_end_4381146592:;
	}
	return _91713_obj;
}



inline jule::Str _1ace0e05e_gen_val(jule::Ref<_1acde49c3_Value> _92916_v) {
	if (_92916_v->_field_data->_method_is_const()) {
		return _1ace0e05e_gen_const_expr(_92916_v->_field_data);
	}
	return _1ace0e05e_gen_expr(_92916_v->_field_data->_field_model);
}



inline jule::Str _1ace0e05e_get_init_expr(jule::Ref<_1ad3e617d_TypeKind> _93622_t) {
	if (jule::real(_93622_t->_method_ptr())) {
		return jule::Str("nullptr", 7);
	}
	jule::Ref<_1ac7804a2_Enum> _94113_enm = _93622_t->_method_enm();
	if ((!(jule::real(_94113_enm)))) {
		return _1adaa4dad_gen_type_kind(_93622_t) + jule::Str("()", 2);
	}
	return _1ace0e05e_gen_val(_94113_enm->_field_items[0LL]->_field_value);
}



inline jule::Str _1ac6aa762_get_derive_fn_decl_clone(jule::Ref<_1ab064271_Struct>& _730_s) {
	jule::Str _813_obj = _1adaa4dad_gen_struct_kind(_730_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



inline jule::Str _1ac6aa762_get_derive_fn_def_clone(jule::Ref<_1ab064271_Struct>& _1329_s) {
	jule::Str _1413_obj = _1adaa4dad_gen_struct_kind(_1329_s);
	_1413_obj+=(jule::Str(" ", 1) + _1413_obj) + jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



inline jule::Str _1adaa2350_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



inline jule::Str _1adaa2350_as_jt(jule::Str _2814_id) {
	if ((97LL <= _2814_id[0LL]) && (_2814_id[0LL] <= 122LL)) {
		_2814_id[0LL]-=32LL;
	}
	return jule::Str("jule::", 6) + _2814_id;
}



inline jule::Str _1adaa2350_get_addr_as_ident(jule::Uintptr _3622_addr) {
	return jule::Str("_", 1) + _1a99c0d11_fmt_uint(static_cast<jule::U64>(_3622_addr),15LL);
}



inline jule::Str _1adaa2350_as_out_ident(jule::Str _4517_ident,jule::Uintptr _4529_addr) {
	if (_4529_addr != 0LL) {
		return (_1adaa2350_get_addr_as_ident(_4529_addr) + jule::Str("_", 1)) + _4517_ident;
	}
	return _1adaa2350_as_ident(_4517_ident);
}



inline jule::Str _1adaa2350_as_local_ident(jule::Int _5819_row,jule::Int _5829_col,jule::Str _5843_ident) {
	_5843_ident=((_1a99c0d11_itoa(_5819_row) + _1a99c0d11_itoa(_5829_col)) + jule::Str("_", 1)) + _5843_ident;
	return _1adaa2350_as_ident(_5843_ident);
}



inline jule::Str _1adaa2350_fn_out_ident(jule::Ref<_1ab07a50c_Fn>& _6418_f) {
	{
		if (!((_6418_f->_field_cpp_linked))) { goto _case_end_4381729328; }
		_case_begin_4381729328:;
		{
			return _6418_f->_field_ident;
		}
		goto _match_end_4381638656;
		_case_end_4381729328:;
		if (!((_6418_f->_field_ident == jule::Str("main", 4)))) { goto _case_end_4381728928; }
		_case_begin_4381728928:;
		{
			return jule::Str("entry_point", 11);
		}
		goto _match_end_4381638656;
		_case_end_4381728928:;
		if (!((_6418_f->_method_is_method()))) { goto _case_end_4381729040; }
		_case_begin_4381729040:;
		{
			if (_6418_f->_field_statically) {
				return jule::Str("_static_method_", 15) + _6418_f->_field_ident;
			}
			return jule::Str("_method_", 8) + _6418_f->_field_ident;
		}
		goto _match_end_4381638656;
		_case_end_4381729040:;
		_case_begin_4381638848:;
		{
			return _1adaa2350_as_out_ident(_6418_f->_field_ident,static_cast<jule::Uintptr>(_6418_f->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4381638656;
		_case_end_4381638848:;
		_match_end_4381638656:;
	}
}



inline jule::Str _1adaa2350_fn_ins_out_ident(jule::Ref<_1ab07a50c_FnIns>& _8422_f) {
	if (_8422_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _8422_f->_field_decl->_field_ident;
	}
	if (_8422_f->_field_decl->_field_cpp_linked || (_8422_f->_field_generics.len() == 0LL)) {
		return _1adaa2350_fn_out_ident(_8422_f->_field_decl);
	}
	{
		auto _range_expr = _8422_f->_field_decl->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1adaa2350_i = 0;
			jule::Ref<_1ab07a50c_FnIns> _1adaa2350_ins = *_range_begin;
			_iter_begin_4381711744:;
			{
				jule::Ref<_1ad3e617d_TypeKind> _9413_kind = jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1adaa2350_ins));
				if (_8422_f->_method_equals(_9413_kind)) {
					return (_1adaa2350_fn_out_ident(_8422_f->_field_decl) + jule::Str("_", 1)) + _1a99c0d11_itoa(_1adaa2350_i);
				}
			}
			_iter_next_4381711744:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1adaa2350_i; _1adaa2350_ins = *_range_begin; goto _iter_begin_4381711744; }
			_iter_end_4381711744:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1adaa2350_trait_out_ident(jule::Ref<_1ac276c57_Trait> _10420_t) {
	if (_10420_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _10420_t->_field_ident;
	}
	return _1adaa2350_as_out_ident(_10420_t->_field_ident,static_cast<jule::Uintptr>(_10420_t->_field_token._field_file->_method_addr()));
}



inline jule::Str _1adaa2350_param_out_ident(jule::Ref<_1ab07a50c_Param>& _11221_p) {
	if (_1ab0277b7_is_anon_ident(_11221_p->_field_ident) || _1ab0277b7_is_ignore_ident(_11221_p->_field_ident)) {
		return jule::Str("", 0);
	}
	return _1adaa2350_as_local_ident(_11221_p->_field_token._field_row,_11221_p->_field_token._field_column,_11221_p->_field_ident);
}



inline jule::Str _1adaa2350_struct_out_ident(jule::Ref<_1ab064271_Struct>& _12022_s) {
	if (_12022_s->_field_cpp_linked) {
		if (_1adaa4dad_has_directive(_12022_s->_field_directives,jule::Str("typedef", 7))) {
			return _12022_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12022_s->_field_ident;
	}
	return _1adaa2350_as_out_ident(_12022_s->_field_ident,static_cast<jule::Uintptr>(_12022_s->_field_token._field_file->_method_addr()));
}



inline jule::Str _1adaa2350_struct_ins_out_ident(jule::Ref<_1ab064271_StructIns>& _13126_s) {
	if (_13126_s->_field_decl->_field_cpp_linked || (_13126_s->_field_generics.len() == 0LL)) {
		return _1adaa2350_struct_out_ident(_13126_s->_field_decl);
	}
	{
		auto _range_expr = _13126_s->_field_decl->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1adaa2350_i = 0;
			jule::Ref<_1ab064271_StructIns> _1adaa2350_ins = *_range_begin;
			_iter_begin_4381762896:;
			{
				jule::Ref<_1ad3e617d_TypeKind> _13713_kind = jule::new_struct<_1ad3e617d_TypeKind>(new( std::nothrow ) _1ad3e617d_TypeKind(jule::Str(),jule::Bool(),_1adaa2350_ins));
				if (_13126_s->_method_equals(_13713_kind)) {
					return (_1adaa2350_struct_out_ident(_13126_s->_field_decl) + jule::Str("_", 1)) + _1a99c0d11_itoa(_1adaa2350_i);
				}
			}
			_iter_next_4381762896:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1adaa2350_i; _1adaa2350_ins = *_range_begin; goto _iter_begin_4381762896; }
			_iter_end_4381762896:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1adaa2350_field_out_ident(jule::Ref<_1ab064271_Field>& _14721_f) {
	if (_14721_f->_field_owner->_field_cpp_linked) {
		return _14721_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _14721_f->_field_ident;
}



inline jule::Str _1adaa2350_var_out_ident(jule::Ref<_1aca3647d_Var> _15522_v) {
	{
		if (!((_15522_v->_field_cpp_linked))) { goto _case_end_4381905008; }
		_case_begin_4381905008:;
		{
			return _15522_v->_field_ident;
		}
		goto _match_end_4381925232;
		_case_end_4381905008:;
		if (!((_15522_v->_field_ident == jule::Str("self", 4)))) { goto _case_end_4381926400; }
		_case_begin_4381926400:;
		{
			if (jule::real(_15522_v->_field_kind->_field_kind->_method_ref())) {
				return jule::Str("this->self", 10);
			}
			return jule::Str("(*this)", 7);
		}
		goto _match_end_4381925232;
		_case_end_4381926400:;
		if (!((jule::real(_15522_v->_field_scope)))) { goto _case_end_4381926512; }
		_case_begin_4381926512:;
		{
			return _1adaa2350_as_local_ident(_15522_v->_field_token._field_row,_15522_v->_field_token._field_column,_15522_v->_field_ident);
		}
		goto _match_end_4381925232;
		_case_end_4381926512:;
		_case_begin_4381925344:;
		{
			return _1adaa2350_as_out_ident(_15522_v->_field_ident,static_cast<jule::Uintptr>(_15522_v->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4381925232;
		_case_end_4381925344:;
		_match_end_4381925232:;
	}
}



inline jule::Str _1adaa2350_iter_begin_label_ident(jule::Uintptr _17527_it) {
	return jule::Str("_iter_begin_", 12) + _1a99c0d11_itoa(static_cast<jule::Int>(_17527_it));
}



inline jule::Str _1adaa2350_iter_end_label_ident(jule::Uintptr _18025_it) {
	return jule::Str("_iter_end_", 10) + _1a99c0d11_itoa(static_cast<jule::Int>(_18025_it));
}



inline jule::Str _1adaa2350_iter_next_label_ident(jule::Uintptr _18526_it) {
	return jule::Str("_iter_next_", 11) + _1a99c0d11_itoa(static_cast<jule::Int>(_18526_it));
}



inline jule::Str _1adaa2350_label_ident(jule::Str _19016_ident) {
	return jule::Str("_julec_label_", 13) + _19016_ident;
}



inline jule::Str _1adaa2350_match_end_label_ident(jule::Uintptr _19526_m) {
	return jule::Str("_match_end_", 11) + _1a99c0d11_itoa(static_cast<jule::Int>(_19526_m));
}



inline jule::Str _1adaa2350_case_begin_label_ident(jule::Uintptr _20027_c) {
	return jule::Str("_case_begin_", 12) + _1a99c0d11_itoa(static_cast<jule::Int>(_20027_c));
}



inline jule::Str _1adaa2350_case_end_label_ident(jule::Uintptr _20525_c) {
	return jule::Str("_case_end_", 10) + _1a99c0d11_itoa(static_cast<jule::Int>(_20525_c));
}



inline jule::Bool _1adaa4dad_any_equals_0(jule::Ref<_1aca3647d_Var>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_1aca3647d_Var>>())) { goto _case_end_4381158240; }
		_case_begin_4381158240:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_1aca3647d_Var>()).alloc;
		}
		goto _match_end_4379924800;
		_case_end_4381158240:;
		_case_begin_4379924896:;
		{
			return false;
		}
		goto _match_end_4379924800;
		_case_end_4379924896:;
		_match_end_4379924800:;
	}
}

inline jule::Bool _1adaa4dad_any_equals_1(jule::Ref<_1ab064271_FieldIns>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_1ab064271_FieldIns>>())) { goto _case_end_4381608528; }
		_case_begin_4381608528:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_1ab064271_FieldIns>()).alloc;
		}
		goto _match_end_4382554208;
		_case_end_4381608528:;
		_case_begin_4384503696:;
		{
			return false;
		}
		goto _match_end_4382554208;
		_case_end_4384503696:;
		_match_end_4382554208:;
	}
}



inline jule::Ref<_1aaeea1c4_Directive> _1adaa4dad_find_directive(jule::Slice<jule::Ref<_1aaeea1c4_Directive>>& _3424_directives,jule::Str _3466_tag) {
	{
		auto _range_expr = _3424_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaeea1c4_Directive> _1adaa4dad_dr = *_range_begin;
			_iter_begin_4381918832:;
			{
				if (_1adaa4dad_dr->_field_tag == _3466_tag) {
					return _1adaa4dad_dr;
				}
			}
			_iter_next_4381918832:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adaa4dad_dr = *_range_begin; goto _iter_begin_4381918832; }
			_iter_end_4381918832:;
		}
	}
	return jule::new_ref<_1aaeea1c4_Directive>();
}



inline jule::Bool _1adaa4dad_has_directive(jule::Slice<jule::Ref<_1aaeea1c4_Directive>>& _4419_directives,jule::Str _4461_tag) {
	return jule::real(_1adaa4dad_find_directive((*((&(_4419_directives)))),_4461_tag));
}



inline jule::Str _1adaa4dad_gen_prim_kind(jule::Ref<_1ad3e617d_Prim> _4918_p) {
	return _1adaa2350_as_jt(_4918_p->_method_to_str());
}



inline jule::Str _1adaa4dad_gen_tuple_kind(jule::Ref<_1ad3e617d_Tuple> _5423_t) {
	jule::Str _5513_obj = jule::Str("std::tuple<", 11);
	{
		auto _range_expr = _5423_t->_field_types;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ad3e617d_TypeKind> _1adaa4dad_t = *_range_begin;
			_iter_begin_4381990816:;
			{
				_5513_obj+=_1adaa4dad_gen_type_kind(_1adaa4dad_t) + jule::Str(",", 1);
			}
			_iter_next_4381990816:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adaa4dad_t = *_range_begin; goto _iter_begin_4381990816; }
			_iter_end_4381990816:;
		}
	}
	_5513_obj=_5513_obj.slice(0LL,static_cast<jule::Int>(_5513_obj.len() - 1LL));
	return _5513_obj + jule::Str(">", 1);
}



inline jule::Str _1adaa4dad_as_ref_kind(jule::Str _6416_elem) {
	jule::Str _659_ref = _1adaa2350_as_jt(jule::Str("ref", 3));
	return ((_659_ref + jule::Str("<", 1)) + _6416_elem) + jule::Str(">", 1);
}



inline jule::Str _1adaa4dad_gen_ref_kind(jule::Ref<_1ad3e617d_Ref> _7021_r) {
	jule::Str _719_elem = _1adaa4dad_gen_type_kind(_7021_r->_field_elem);
	return _1adaa4dad_as_ref_kind(_719_elem);
}



inline jule::Str _1adaa4dad_gen_ptr_kind(jule::Ref<_1ad3e617d_Ptr> _7621_p) {
	
	if (_7621_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _829_elem = _1adaa4dad_gen_type_kind(_7621_p->_field_elem);
	return _829_elem + jule::Str("*", 1);
}



inline jule::Str _1adaa4dad_gen_enum_kind(jule::Ref<_1ac7804a2_Enum> _8722_e) {
	return _1adaa4dad_gen_type_kind(_8722_e->_field_kind->_field_kind);
}



inline jule::Str _1adaa4dad_as_slice_kind(jule::Ref<_1ad3e617d_TypeKind> _9122_elem) {
	jule::Str _929_elem_s = _1adaa4dad_gen_type_kind(_9122_elem);
	jule::Str _939_slc = _1adaa2350_as_jt(jule::Str("slice", 5));
	return ((_939_slc + jule::Str("<", 1)) + _929_elem_s) + jule::Str(">", 1);
}



inline jule::Str _1adaa4dad_gen_slice_kind(jule::Ref<_1ad3e617d_Slc> _9823_s) {
	return _1adaa4dad_as_slice_kind(_9823_s->_field_elem);
}



inline jule::Str _1adaa4dad_gen_map_kind(jule::Ref<_1ad3e617d_Map> _10321_m) {
	jule::Str _1049_key = _1adaa4dad_gen_type_kind(_10321_m->_field_key);
	jule::Str _1059_val = _1adaa4dad_gen_type_kind(_10321_m->_field_val);
	jule::Str _1069__map = _1adaa2350_as_jt(jule::Str("map", 3));
	return ((((_1069__map + jule::Str("<", 1)) + _1049_key) + jule::Str(",", 1)) + _1059_val) + jule::Str(">", 1);
}



inline jule::Str _1adaa4dad_gen_trait_kind_from_ident(jule::Str _11030_ident) {
	jule::Str _1119_trt = _1adaa2350_as_jt(jule::Str("trait", 5));
	return ((_1119_trt + jule::Str("<", 1)) + _11030_ident) + jule::Str(">", 1);
}



inline jule::Str _1adaa4dad_gen_trait_kind(jule::Ref<_1ac276c57_Trait> _11619_t) {
	jule::Str _1179_ident = _1adaa2350_trait_out_ident(_11619_t);
	return _1adaa4dad_gen_trait_kind_from_ident(_1179_ident);
}



inline jule::Str _1adaa4dad_gen_struct_kind(jule::Ref<_1ab064271_Struct> _12220_s) {
	jule::Str _12313_rep = jule::Str("", 0);
	if (_12220_s->_field_cpp_linked && (!(_1adaa4dad_has_directive(_12220_s->_field_directives,jule::Str("typedef", 7))))) {
		_12313_rep+=jule::Str("struct ", 7);
	}
	_12313_rep+=_1adaa2350_struct_out_ident(_12220_s);
	return _12313_rep;
}



inline jule::Str _1adaa4dad_gen_struct_kind_ins(jule::Ref<_1ab064271_StructIns> _13328_s) {
	if (_13328_s->_field_decl->_field_cpp_linked) {
		jule::Str _13517_ident = _1adaa2350_struct_ins_out_ident(_13328_s);
		if (_13328_s->_field_generics.len() > 0LL) {
			_13517_ident+=jule::Str("<", 1);
			{
				auto _range_expr = _13328_s->_field_generics;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_1ad3e617d_TypeKind> _1adaa4dad_g = *_range_begin;
					_iter_begin_4382247696:;
					{
						_13517_ident+=_1adaa4dad_gen_type_kind(_1adaa4dad_g) + jule::Str(",", 1);
					}
					_iter_next_4382247696:;
					++_range_begin;
					if (_range_begin != _range_end) { _1adaa4dad_g = *_range_begin; goto _iter_begin_4382247696; }
					_iter_end_4382247696:;
				}
			}
			_13517_ident=_13517_ident.slice(0LL,static_cast<jule::Int>(_13517_ident.len() - 1LL));
			_13517_ident+=jule::Str(">", 1);
		}
		jule::Ref<_1aaeea1c4_Directive> _14413_d = _1adaa4dad_find_directive(_13328_s->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_14413_d)) {
			_13517_ident=(_1ace0e05e_concat_all_parts(_14413_d->_field_args) + jule::Str("::", 2)) + _13517_ident;
		}
		return _13517_ident;
	}
	return _1adaa2350_struct_ins_out_ident(_13328_s);
}



inline jule::Str _1adaa4dad_gen_array_kind(jule::Ref<_1ad3e617d_Arr> _15423_a) {
	jule::Str _1559_arr = _1adaa2350_as_jt(jule::Str("array", 5));
	jule::Str _1569_elem = _1adaa4dad_gen_type_kind(_15423_a->_field_elem);
	jule::Str _1579_size = _1a99c0d11_itoa(_15423_a->_field_n);
	return ((((_1559_arr + jule::Str("<", 1)) + _1569_elem) + jule::Str(",", 1)) + _1579_size) + jule::Str(">", 1);
}



inline jule::Str _1adaa4dad_gen_fn_anon_decl(jule::Ref<_1ab07a50c_FnIns> _16125_f) {
	jule::Str _16213_decl = _1adad79c3_gen_fn_ins_result(_16125_f);
	_16213_decl+=jule::Str("(", 1);
	if (_16125_f->_field_params.len() > 0LL) {
		{
			auto _range_expr = _16125_f->_field_params;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab07a50c_ParamIns> _1adaa4dad_param = *_range_begin;
				_iter_begin_4382342800:;
				{
					if (_1adaa4dad_param->_field_decl->_method_is_self()) {
						goto _iter_next_4382342800;
					}
					_16213_decl+=_1adad79c3_gen_param_ins_prototype(_1adaa4dad_param);
					_16213_decl+=jule::Str(",", 1);
				}
				_iter_next_4382342800:;
				++_range_begin;
				if (_range_begin != _range_end) { _1adaa4dad_param = *_range_begin; goto _iter_begin_4382342800; }
				_iter_end_4382342800:;
			}
		}
		_16213_decl=_16213_decl.slice(0LL,static_cast<jule::Int>(_16213_decl.len() - 1LL));
	} else {
		_16213_decl+=jule::Str("void", 4);
	}
	_16213_decl+=jule::Str(")", 1);
	return _16213_decl;
}



inline jule::Str _1adaa4dad_gen_fn_kind(jule::Ref<_1ab07a50c_FnIns> _18420_f) {
	jule::Str _1859_fnc = _1adaa2350_as_jt(jule::Str("fn", 2));
	jule::Str _1869_decl = _1adaa4dad_gen_fn_anon_decl(_18420_f);
	return ((_1859_fnc + jule::Str("<", 1)) + _1869_decl) + jule::Str(">", 1);
}



inline jule::Str _1adaa4dad_gen_type_kind(jule::Ref<_1ad3e617d_TypeKind> _19122_k) {
	{
		if (!((_19122_k->_method_is_cpp_linked()))) { goto _case_end_4382435600; }
		_case_begin_4382435600:;
		{
			return _19122_k->_field_cpp_ident;
		}
		goto _match_end_4382432448;
		_case_end_4382435600:;
		if (!((jule::real(_19122_k->_method_prim())))) { goto _case_end_4382434960; }
		_case_begin_4382434960:;
		{
			return _1adaa4dad_gen_prim_kind(_19122_k->_method_prim());
		}
		goto _match_end_4382432448;
		_case_end_4382434960:;
		if (!((jule::real(_19122_k->_method_tup())))) { goto _case_end_4382435072; }
		_case_begin_4382435072:;
		{
			return _1adaa4dad_gen_tuple_kind(_19122_k->_method_tup());
		}
		goto _match_end_4382432448;
		_case_end_4382435072:;
		if (!((jule::real(_19122_k->_method_ref())))) { goto _case_end_4382435200; }
		_case_begin_4382435200:;
		{
			return _1adaa4dad_gen_ref_kind(_19122_k->_method_ref());
		}
		goto _match_end_4382432448;
		_case_end_4382435200:;
		if (!((jule::real(_19122_k->_method_ptr())))) { goto _case_end_4382434208; }
		_case_begin_4382434208:;
		{
			return _1adaa4dad_gen_ptr_kind(_19122_k->_method_ptr());
		}
		goto _match_end_4382432448;
		_case_end_4382434208:;
		if (!((jule::real(_19122_k->_method_enm())))) { goto _case_end_4382434320; }
		_case_begin_4382434320:;
		{
			return _1adaa4dad_gen_enum_kind(_19122_k->_method_enm());
		}
		goto _match_end_4382432448;
		_case_end_4382434320:;
		if (!((jule::real(_19122_k->_method_slc())))) { goto _case_end_4382434448; }
		_case_begin_4382434448:;
		{
			return _1adaa4dad_gen_slice_kind(_19122_k->_method_slc());
		}
		goto _match_end_4382432448;
		_case_end_4382434448:;
		if (!((jule::real(_19122_k->_method_map())))) { goto _case_end_4382435808; }
		_case_begin_4382435808:;
		{
			return _1adaa4dad_gen_map_kind(_19122_k->_method_map());
		}
		goto _match_end_4382432448;
		_case_end_4382435808:;
		if (!((jule::real(_19122_k->_method_trt())))) { goto _case_end_4382435920; }
		_case_begin_4382435920:;
		{
			return _1adaa4dad_gen_trait_kind(_19122_k->_method_trt());
		}
		goto _match_end_4382432448;
		_case_end_4382435920:;
		if (!((jule::real(_19122_k->_method_strct())))) { goto _case_end_4382436032; }
		_case_begin_4382436032:;
		{
			return _1adaa4dad_gen_struct_kind_ins(_19122_k->_method_strct());
		}
		goto _match_end_4382432448;
		_case_end_4382436032:;
		if (!((jule::real(_19122_k->_method_arr())))) { goto _case_end_4382436144; }
		_case_begin_4382436144:;
		{
			return _1adaa4dad_gen_array_kind(_19122_k->_method_arr());
		}
		goto _match_end_4382432448;
		_case_end_4382436144:;
		if (!((jule::real(_19122_k->_method_fnc())))) { goto _case_end_4382436256; }
		_case_begin_4382436256:;
		{
			return _1adaa4dad_gen_fn_kind(_19122_k->_method_fnc());
		}
		goto _match_end_4382432448;
		_case_end_4382436256:;
		_case_begin_4382433904:;
		{
			return jule::Str("[<unimplemented_type_kind>]", 27);
		}
		goto _match_end_4382432448;
		_case_end_4382433904:;
		_match_end_4382432448:;
	}
}



inline void _1adad79c3_add_indent(void) {
	(_1adad79c3_INDENT)++;
}



inline void _1adad79c3_done_indent(void) {
	(_1adad79c3_INDENT)--;
}



inline jule::Str _1adad79c3_indent(void) {
	
	if (_1adad79c3_INDENT == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _7413_s = jule::Str("", 0);
	jule::Int _7513_i = 0LL;
	_iter_begin_4382588576:;
	if (!(_7513_i < _1adad79c3_INDENT)) { goto _iter_end_4382588576; }
	{
		_7413_s+=jule::Str("\t", 1);
	}
	_iter_next_4382588576:;
	(_7513_i)++;
	goto _iter_begin_4382588576;
	_iter_end_4382588576:;
	return _7413_s;
}



inline jule::Bool _1adad79c3_is_cpp_header_file(jule::Str _8223_path) {
	jule::Int _839_offset = _8223_path.rfind(jule::Str(".", 1));
	if (_839_offset == -1LL) {
		return false;
	}
	return _1d068267d_is_valid_header_ext(_8223_path.slice(static_cast<jule::Int>(_839_offset)));
}



inline jule::Str _1adad79c3_gen_links(jule::Ref<_1aae4981b_IR>& _9119_ir) {
	jule::Str _9213_obj = jule::Str("", 0);
	{
		auto _range_expr = _9119_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1adad79c3_pkg = *_range_begin;
			_iter_begin_4382734176:;
			{
				{
					if (!(((!(_1adad79c3_pkg->_field_cpp_linked))))) { goto _case_end_4382736016; }
					_case_begin_4382736016:;
					{
						goto _iter_next_4382734176;
					}
					goto _match_end_4382735776;
					_case_end_4382736016:;
					if (!((_1d068267d_is_std_header_path(_1adad79c3_pkg->_field_path)))) { goto _case_end_4382736144; }
					_case_begin_4382736144:;
					{
						_9213_obj+=(jule::Str("#include ", 9) + _1adad79c3_pkg->_field_path) + jule::Str("\n", 1);
					}
					goto _match_end_4382735776;
					_case_end_4382736144:;
					_match_end_4382735776:;
				}
			}
			_iter_next_4382734176:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_pkg = *_range_begin; goto _iter_begin_4382734176; }
			_iter_end_4382734176:;
		}
	}
	{
		auto _range_expr = _9119_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1adad79c3_pkg = *_range_begin;
			_iter_begin_4382738064:;
			{
				{
					if (!(((!(_1adad79c3_pkg->_field_cpp_linked))))) { goto _case_end_4382798576; }
					_case_begin_4382798576:;
					{
						goto _iter_next_4382738064;
					}
					goto _match_end_4382740832;
					_case_end_4382798576:;
					if (!((_1adad79c3_is_cpp_header_file(_1adad79c3_pkg->_field_path)))) { goto _case_end_4382798688; }
					_case_begin_4382798688:;
					{
						_9213_obj+=(jule::Str("#include \"", 10) + _1adad79c3_pkg->_field_path) + jule::Str("\"\n", 2);
					}
					goto _match_end_4382740832;
					_case_end_4382798688:;
					_match_end_4382740832:;
				}
			}
			_iter_next_4382738064:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_pkg = *_range_begin; goto _iter_begin_4382738064; }
			_iter_end_4382738064:;
		}
	}
	return _9213_obj;
}



inline jule::Str _1adad79c3_gen_fn_result(jule::Ref<_1ab07a50c_Fn>& _11623_f) {
	if (_11623_f->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1adaa4dad_gen_type_kind(_11623_f->_field_result->_field_kind->_field_kind);
}



inline jule::Str _1adad79c3_gen_fn_ins_result(jule::Ref<_1ab07a50c_FnIns>& _12427_f) {
	if (_12427_f->_field_decl->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1adaa4dad_gen_type_kind(_12427_f->_field_result);
}



inline jule::Str _1adad79c3_gen_param_prototype(jule::Ref<_1ab07a50c_Param>& _13229_p) {
	jule::Str _13313_obj = jule::Str("", 0);
	if (_13229_p->_field_variadic) {
		_13313_obj+=_1adaa2350_as_jt(jule::Str("slice", 5));
		_13313_obj+=jule::Str("<", 1);
		_13313_obj+=_1adaa4dad_gen_type_kind(_13229_p->_field_kind->_field_kind);
		_13313_obj+=jule::Str(">", 1);
	} else {
		_13313_obj+=_1adaa4dad_gen_type_kind(_13229_p->_field_kind->_field_kind);
	}
	return _13313_obj;
}



inline jule::Str _1adad79c3_gen_param_ins(jule::Ref<_1ab07a50c_ParamIns>& _14623_p) {
	jule::Str _14713_obj = _1adad79c3_gen_param_ins_prototype(_14623_p);
	_14713_obj+=jule::Str(" ", 1);
	_14713_obj+=_1adaa2350_param_out_ident(_14623_p->_field_decl);
	return _14713_obj;
}



inline jule::Str _1adad79c3_gen_param_ins_prototype(jule::Ref<_1ab07a50c_ParamIns>& _15433_p) {
	jule::Str _15513_obj = jule::Str("", 0);
	if (_15433_p->_field_decl->_field_variadic) {
		_15513_obj+=_1adaa2350_as_jt(jule::Str("slice", 5));
		_15513_obj+=jule::Str("<", 1);
		_15513_obj+=_1adaa4dad_gen_type_kind(_15433_p->_field_kind);
		_15513_obj+=jule::Str(">", 1);
	} else {
		_15513_obj+=_1adaa4dad_gen_type_kind(_15433_p->_field_kind);
	}
	if (_15433_p->_field_decl->_field_reference) {
		_15513_obj+=jule::Str("&", 1);
	}
	return _15513_obj;
}



inline jule::Str _1adad79c3_gen_param(jule::Ref<_1ab07a50c_Param>& _17319_p) {
	jule::Str _17413_obj = _1adad79c3_gen_param_prototype(_17319_p);
	if (((_17319_p->_field_ident != jule::Str("", 0)) && (!(_1ab0277b7_is_ignore_ident(_17319_p->_field_ident)))) && (!(_1ab0277b7_is_anon_ident(_17319_p->_field_ident)))) {
		_17413_obj+=jule::Str(" ", 1) + _1adaa2350_param_out_ident(_17319_p);
	}
	return _17413_obj;
}



inline jule::Str _1adad79c3_gen_params(jule::Slice<jule::Ref<_1ab07a50c_Param>>& _18220_params) {
	{
		if (!((_18220_params.len() == 0LL))) { goto _case_end_4382917888; }
		_case_begin_4382917888:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4382917648;
		_case_end_4382917888:;
		if (!(((_18220_params.len() == 1LL) && _18220_params[0LL]->_method_is_self()))) { goto _case_end_4382918016; }
		_case_begin_4382918016:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4382917648;
		_case_end_4382918016:;
		_match_end_4382917648:;
	}
	jule::Str _19113_obj = jule::Str("(", 1);
	{
		auto _range_expr = _18220_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Param> _1adad79c3_p = *_range_begin;
			_iter_begin_4382921936:;
			{
				if ((!(_1adad79c3_p->_method_is_self()))) {
					_19113_obj+=_1adad79c3_gen_param(_1adad79c3_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4382921936:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_p = *_range_begin; goto _iter_begin_4382921936; }
			_iter_end_4382921936:;
		}
	}
	_19113_obj=_19113_obj.slice(0LL,static_cast<jule::Int>(_19113_obj.len() - 1LL));
	return _19113_obj + jule::Str(")", 1);
}



inline jule::Str _1adad79c3_gen_params_ins(jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>& _20324_params) {
	{
		if (!((_20324_params.len() == 0LL))) { goto _case_end_4382927088; }
		_case_begin_4382927088:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4382926912;
		_case_end_4382927088:;
		if (!(((_20324_params.len() == 1LL) && _20324_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4382927216; }
		_case_begin_4382927216:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4382926912;
		_case_end_4382927216:;
		_match_end_4382926912:;
	}
	jule::Str _21213_obj = jule::Str("(", 1);
	{
		auto _range_expr = _20324_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_ParamIns> _1adad79c3_p = *_range_begin;
			_iter_begin_4382931360:;
			{
				if ((!(_1adad79c3_p->_field_decl->_method_is_self()))) {
					_21213_obj+=_1adad79c3_gen_param_ins(_1adad79c3_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4382931360:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_p = *_range_begin; goto _iter_begin_4382931360; }
			_iter_end_4382931360:;
		}
	}
	_21213_obj=_21213_obj.slice(0LL,static_cast<jule::Int>(_21213_obj.len() - 1LL));
	return _21213_obj + jule::Str(")", 1);
}



inline jule::Str _1adad79c3_gen_params_prototypes(jule::Slice<jule::Ref<_1ab07a50c_ParamIns>>& _22531_params) {
	{
		if (!((_22531_params.len() == 0LL))) { goto _case_end_4382936736; }
		_case_begin_4382936736:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4382936560;
		_case_end_4382936736:;
		if (!(((_22531_params.len() == 1LL) && _22531_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4382936864; }
		_case_begin_4382936864:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4382936560;
		_case_end_4382936864:;
		_match_end_4382936560:;
	}
	jule::Str _23413_obj = jule::Str("(", 1);
	{
		auto _range_expr = _22531_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_ParamIns> _1adad79c3_p = *_range_begin;
			_iter_begin_4382941696:;
			{
				if ((!(_1adad79c3_p->_field_decl->_method_is_self()))) {
					_23413_obj+=_1adad79c3_gen_param_ins_prototype(_1adad79c3_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4382941696:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_p = *_range_begin; goto _iter_begin_4382941696; }
			_iter_end_4382941696:;
		}
	}
	_23413_obj=_23413_obj.slice(0LL,static_cast<jule::Int>(_23413_obj.len() - 1LL));
	return _23413_obj + jule::Str(")", 1);
}



inline jule::Str _1adad79c3_gen_trait(jule::Ref<_1ac276c57_Trait>& _24719_t) {
	
	jule::Str _2499_outid = _1adaa2350_trait_out_ident(_24719_t);
	jule::Str _25113_obj = jule::Str("struct ", 7);
	_25113_obj+=_2499_outid;
	_25113_obj+=jule::Str(" {\n", 3);
	_25113_obj+=jule::Str("\t", 1);
	_25113_obj+=jule::Str("virtual ~", 9);
	_25113_obj+=_2499_outid;
	_25113_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto _range_expr = _24719_t->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1adad79c3_f = *_range_begin;
			_iter_begin_4382951600:;
			{
				_25113_obj+=jule::Str("\t", 1);
				_25113_obj+=jule::Str("virtual ", 8);
				_25113_obj+=_1adad79c3_gen_fn_result(_1adad79c3_f);
				_25113_obj+=jule::Str(" _method_", 9);
				_25113_obj+=_1adad79c3_f->_field_ident;
				_25113_obj+=_1adad79c3_gen_params(_1adad79c3_f->_field_params);
				_25113_obj+=jule::Str(" {", 2);
				if ((!(_1adad79c3_f->_method_is_void()))) {
					_25113_obj+=jule::Str(" return {}; ", 12);
				}
				_25113_obj+=jule::Str("}\n", 2);
			}
			_iter_next_4382951600:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_f = *_range_begin; goto _iter_begin_4382951600; }
			_iter_end_4382951600:;
		}
	}
	_25113_obj+=jule::Str("};", 2);
	return _25113_obj;
}



inline jule::Str _1adad79c3_gen_traits_tbl(jule::Ref<_1acd9639d_SymbolTable>& _27624_tbl) {
	jule::Str _27713_obj = jule::Str("", 0);
	{
		auto _range_expr = _27624_tbl->_field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac276c57_Trait> _1adad79c3_t = *_range_begin;
			_iter_begin_4383205344:;
			{
				_27713_obj+=_1adad79c3_gen_trait(_1adad79c3_t) + jule::Str("\n\n", 2);
			}
			_iter_next_4383205344:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_t = *_range_begin; goto _iter_begin_4383205344; }
			_iter_end_4383205344:;
		}
	}
	return _27713_obj;
}



inline jule::Str _1adad79c3_gen_traits_pkg(jule::Ref<_1ac78be4d_Package>& _28524_pkg) {
	jule::Str _28613_obj = jule::Str("", 0);
	{
		auto _range_expr = _28524_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1adad79c3_tbl = *_range_begin;
			_iter_begin_4383256384:;
			{
				_28613_obj+=_1adad79c3_gen_traits_tbl(_1adad79c3_tbl);
			}
			_iter_next_4383256384:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_tbl = *_range_begin; goto _iter_begin_4383256384; }
			_iter_end_4383256384:;
		}
	}
	return _28613_obj;
}



inline jule::Str _1adad79c3_gen_traits(jule::Ref<_1aae4981b_IR>& _29420_ir) {
	jule::Str _29513_obj = jule::Str("", 0);
	{
		auto _range_expr = _29420_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1adad79c3_u = *_range_begin;
			_iter_begin_4383234944:;
			{
				if ((!(_1adad79c3_u->_field_cpp_linked))) {
					_29513_obj+=_1adad79c3_gen_traits_pkg(_1adad79c3_u->_field_package);
				}
			}
			_iter_next_4383234944:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_u = *_range_begin; goto _iter_begin_4383234944; }
			_iter_end_4383234944:;
		}
	}
	_29513_obj+=_1adad79c3_gen_traits_pkg(_29420_ir->_field_main);
	return _29513_obj;
}



inline jule::Str _1adad79c3_gen_trait_prototype(jule::Ref<_1ac276c57_Trait>& _30625_t) {
	return (jule::Str("struct ", 7) + _1adaa2350_trait_out_ident(_30625_t)) + jule::Str(";", 1);
}



inline jule::Str _1adad79c3_gen_trait_prototypes(jule::Ref<_1ac78be4d_Package>& _31130_p) {
	jule::Str _31213_obj = jule::Str("", 0);
	{
		auto _range_expr = _31130_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1adad79c3_f = *_range_begin;
			_iter_begin_4383241744:;
			{
				{
					auto _range_expr = _1adad79c3_f->_field_traits;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ac276c57_Trait> _1adad79c3_t = *_range_begin;
						_iter_begin_4383243648:;
						{
							if (_1adad79c3_t->_field_token._field_id != 0LLU) {
								_31213_obj+=_1adad79c3_gen_trait_prototype(_1adad79c3_t) + jule::Str("\n", 1);
							}
						}
						_iter_next_4383243648:;
						++_range_begin;
						if (_range_begin != _range_end) { _1adad79c3_t = *_range_begin; goto _iter_begin_4383243648; }
						_iter_end_4383243648:;
					}
				}
			}
			_iter_next_4383241744:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_f = *_range_begin; goto _iter_begin_4383241744; }
			_iter_end_4383241744:;
		}
	}
	return _31213_obj;
}



inline jule::Str _1adad79c3_gen_struct_plain_prototype(jule::Ref<_1ab064271_Struct>& _32432_s) {
	jule::Str _32513_obj = jule::Str("", 0);
	{
		auto _range_expr = _32432_s->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_StructIns> _1adad79c3_ins = *_range_begin;
			_iter_begin_4383244576:;
			{
				_32513_obj+=jule::Str("\nstruct ", 8);
				_32513_obj+=_1adaa2350_struct_ins_out_ident(_1adad79c3_ins);
				_32513_obj+=jule::Str(";", 1);
				_32513_obj+=jule::Str("\n", 1);
			}
			_iter_next_4383244576:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_ins = *_range_begin; goto _iter_begin_4383244576; }
			_iter_end_4383244576:;
		}
	}
	return _32513_obj;
}



inline jule::Str _1adad79c3_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_1ab064271_Struct>>& _33637_structs) {
	jule::Str _33713_obj = jule::Str("", 0);
	{
		auto _range_expr = _33637_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1adad79c3_s = *_range_begin;
			_iter_begin_4383252032:;
			{
				if ((!(_1adad79c3_s->_field_cpp_linked)) && (_1adad79c3_s->_field_token._field_id != 0LLU)) {
					_33713_obj+=_1adad79c3_gen_struct_plain_prototype(_1adad79c3_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_4383252032:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_s = *_range_begin; goto _iter_begin_4383252032; }
			_iter_end_4383252032:;
		}
	}
	return _33713_obj;
}



inline jule::Str _1adad79c3_gen_struct_traits(jule::Ref<_1ab064271_Struct>& _34723_s) {
	if (_34723_s->_field_implements.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _35213_obj = jule::Str(": ", 2);
	{
		auto _range_expr = _34723_s->_field_implements;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac276c57_Trait> _1adad79c3_i = *_range_begin;
			_iter_begin_4383794672:;
			{
				_35213_obj+=jule::Str("public ", 7);
				_35213_obj+=_1adaa2350_trait_out_ident(_1adad79c3_i);
				_35213_obj+=jule::Str(",", 1);
			}
			_iter_next_4383794672:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_i = *_range_begin; goto _iter_begin_4383794672; }
			_iter_end_4383794672:;
		}
	}
	_35213_obj=_35213_obj.slice(0LL,static_cast<jule::Int>(_35213_obj.len() - 1LL));
	return _35213_obj;
}



inline jule::Str _1adad79c3_gen_field_decl(jule::Ref<_1ab064271_FieldIns>& _36324_f) {
	jule::Str _36413_obj = _1adaa4dad_gen_type_kind(_36324_f->_field_kind) + jule::Str(" ", 1);
	_36413_obj+=_1adaa2350_field_out_ident(_36324_f->_field_decl);
	_36413_obj+=(jule::Str("{", 1) + _1ace0e05e_get_init_expr(_36324_f->_field_kind)) + jule::Str("}", 1);
	_36413_obj+=jule::Str(";", 1);
	return _36413_obj;
}



inline jule::Str _1adad79c3_gen_struct_self_field_type_kind(jule::Ref<_1ab064271_StructIns>& _37241_s) {
	return _1adaa4dad_as_ref_kind(_1adaa4dad_gen_struct_kind_ins(_37241_s));
}



inline jule::Str _1adad79c3_gen_struct_self_field(jule::Ref<_1ab064271_StructIns>& _37731_s) {
	jule::Str _37813_obj = _1adad79c3_gen_struct_self_field_type_kind(_37731_s);
	_37813_obj+=jule::Str(" self{};", 8);
	return _37813_obj;
}



inline jule::Str _1adad79c3_gen_struct_self_field_init_st(jule::Ref<_1ab064271_StructIns>& _38339_s) {
	jule::Str _38413_obj = jule::Str("this->self = ", 13);
	_38413_obj+=_1adad79c3_gen_struct_self_field_type_kind(_38339_s);
	_38413_obj+=jule::Str("::make(this, nullptr);", 22);
	return _38413_obj;
}



inline jule::Str _1adad79c3_gen_struct_constructor(jule::Ref<_1ab064271_StructIns>& _39032_s) {
	jule::Str _39113_obj = _1adaa2350_struct_ins_out_ident(_39032_s);
	_39113_obj+=jule::Str("(", 1);
	if (_39032_s->_field_fields.len() > 0LL) {
		{
			auto _range_expr = _39032_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab064271_FieldIns> _1adad79c3_f = *_range_begin;
				_iter_begin_4453432176:;
				{
					_39113_obj+=_1adaa4dad_gen_type_kind(_1adad79c3_f->_field_kind);
					_39113_obj+=(jule::Str(" __param_", 9) + _1adad79c3_f->_field_decl->_field_ident) + jule::Str(", ", 2);
				}
				_iter_next_4453432176:;
				++_range_begin;
				if (_range_begin != _range_end) { _1adad79c3_f = *_range_begin; goto _iter_begin_4453432176; }
				_iter_end_4453432176:;
			}
		}
		_39113_obj=_39113_obj.slice(0LL,static_cast<jule::Int>(_39113_obj.len() - 2LL));
	} else {
		_39113_obj+=jule::Str("void", 4);
	}
	_39113_obj+=jule::Str(") {\n", 4);
	_1adad79c3_add_indent();
	_39113_obj+=_1adad79c3_indent();
	_39113_obj+=_1adad79c3_gen_struct_self_field_init_st(_39032_s);
	_39113_obj+=jule::Str("\n", 1);
	if (_39032_s->_field_fields.len() > 0LL) {
		{
			auto _range_expr = _39032_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab064271_FieldIns> _1adad79c3_f = *_range_begin;
				_iter_begin_4453446192:;
				{
					_39113_obj+=jule::Str("\n", 1);
					_39113_obj+=_1adad79c3_indent();
					_39113_obj+=jule::Str("this->", 6);
					_39113_obj+=_1adaa2350_field_out_ident(_1adad79c3_f->_field_decl);
					_39113_obj+=jule::Str(" = ", 3);
					_39113_obj+=jule::Str("__param_", 8) + _1adad79c3_f->_field_decl->_field_ident;
					_39113_obj+=jule::Str(";", 1);
				}
				_iter_next_4453446192:;
				++_range_begin;
				if (_range_begin != _range_end) { _1adad79c3_f = *_range_begin; goto _iter_begin_4453446192; }
				_iter_end_4453446192:;
			}
		}
	}
	_1adad79c3_done_indent();
	_39113_obj+=(jule::Str("\n", 1) + _1adad79c3_indent()) + jule::Str("}", 1);
	return _39113_obj;
}



inline jule::Str _1adad79c3_gen_struct_destructor(jule::Ref<_1ab064271_StructIns>& _42727_s) {
	jule::Str _42813_obj = jule::Str("~", 1);
	_42813_obj+=_1adaa2350_struct_ins_out_ident(_42727_s);
	_42813_obj+=jule::Str("(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }", 91);
	return _42813_obj;
}



inline jule::Str _1adad79c3_gen_struct_operators(jule::Ref<_1ab064271_StructIns>& _43430_s) {
	jule::Str _4359_out_ident = _1adaa2350_struct_ins_out_ident(_43430_s);
	jule::Str _43613_obj = jule::Str("", 0);
	_43613_obj+=_1adad79c3_indent();
	_43613_obj+=jule::Str("inline bool operator==(const ", 29);
	_43613_obj+=_4359_out_ident;
	_43613_obj+=jule::Str(" &_Src) const {", 15);
	if (_43430_s->_field_fields.len() > 0LL) {
		_1adad79c3_add_indent();
		_43613_obj+=jule::Str("\n", 1);
		_43613_obj+=_1adad79c3_indent();
		_43613_obj+=jule::Str("return ", 7);
		_1adad79c3_add_indent();
		jule::Int _44817_n = 0LL;
		{
			auto _range_expr = _43430_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab064271_FieldIns> _1adad79c3_f = *_range_begin;
				_iter_begin_4453462640:;
				{
					jule::Ref<_1ab064271_StructIns> _45117_strct = _1adad79c3_f->_field_kind->_method_strct();
					if ((jule::real(_45117_strct) && jule::real(_45117_strct->_field_decl)) && _45117_strct->_field_decl->_field_cpp_linked) {
						goto _iter_next_4453462640;
					}
					(_44817_n)++;
					_43613_obj+=jule::Str("\n", 1);
					_43613_obj+=_1adad79c3_indent();
					_43613_obj+=jule::Str("this->", 6);
					jule::Str _46017_f_ident = _1adaa2350_field_out_ident(_1adad79c3_f->_field_decl);
					_43613_obj+=_46017_f_ident;
					_43613_obj+=jule::Str(" == _Src.", 9);
					_43613_obj+=_46017_f_ident;
					_43613_obj+=jule::Str(" &&", 3);
				}
				_iter_next_4453462640:;
				++_range_begin;
				if (_range_begin != _range_end) { _1adad79c3_f = *_range_begin; goto _iter_begin_4453462640; }
				_iter_end_4453462640:;
			}
		}
		_1adad79c3_done_indent();
		if (_44817_n > 0LL) {
			_43613_obj=_43613_obj.slice(0LL,static_cast<jule::Int>(_43613_obj.len() - 3LL));
		} else {
			_43613_obj+=jule::Str("true", 4);
		}
		_43613_obj+=jule::Str(";\n", 2);
		_1adad79c3_done_indent();
		_43613_obj+=_1adad79c3_indent();
		_43613_obj+=jule::Str("}", 1);
	} else {
		_43613_obj+=jule::Str(" return true; }", 15);
	}
	_43613_obj+=jule::Str("\n\n", 2);
	_43613_obj+=_1adad79c3_indent();
	_43613_obj+=jule::Str("inline bool operator!=(const ", 29);
	_43613_obj+=_4359_out_ident;
	_43613_obj+=jule::Str(" &_Src) const { return !this->operator==(_Src); }", 49);
	return _43613_obj;
}



inline jule::Str _1adad79c3_gen_struct_derive_defs_prototypes(jule::Ref<_1ab064271_StructIns>& _48739_s) {
	jule::Str _48813_obj = jule::Str("", 0);
	if (_48739_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_48813_obj+=_1adad79c3_indent();
		_48813_obj+=_1ac6aa762_get_derive_fn_decl_clone(_48739_s->_field_decl);
		_48813_obj+=jule::Str(";\n\n", 3);
	}
	return _48813_obj;
}



inline jule::Str _1adad79c3_gen_struct_ins_prototype(jule::Ref<_1ab064271_StructIns>& _49934_s) {
	jule::Str _50013_obj = jule::Str("struct ", 7);
	jule::Str _5019_out_ident = _1adaa2350_struct_ins_out_ident(_49934_s);
	_50013_obj+=_5019_out_ident;
	_50013_obj+=_1adad79c3_gen_struct_traits(_49934_s->_field_decl);
	_50013_obj+=jule::Str(" {\n", 3);
	_1adad79c3_add_indent();
	_50013_obj+=_1adad79c3_indent();
	_50013_obj+=_1adad79c3_gen_struct_self_field(_49934_s);
	_50013_obj+=jule::Str("\n\n", 2);
	if (_49934_s->_field_fields.len() > 0LL) {
		{
			auto _range_expr = _49934_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab064271_FieldIns> _1adad79c3_f = *_range_begin;
				_iter_begin_4453488976:;
				{
					_50013_obj+=_1adad79c3_indent();
					_50013_obj+=_1adad79c3_gen_field_decl(_1adad79c3_f);
					_50013_obj+=jule::Str("\n", 1);
				}
				_iter_next_4453488976:;
				++_range_begin;
				if (_range_begin != _range_end) { _1adad79c3_f = *_range_begin; goto _iter_begin_4453488976; }
				_iter_end_4453488976:;
			}
		}
		_50013_obj+=jule::Str("\n\n", 2);
		_50013_obj+=_1adad79c3_indent();
		_50013_obj+=_1adad79c3_gen_struct_constructor(_49934_s);
		_50013_obj+=jule::Str("\n\n", 2);
	}
	_50013_obj+=_1adad79c3_indent();
	_50013_obj+=_1adad79c3_gen_struct_destructor(_49934_s);
	_50013_obj+=jule::Str("\n\n", 2);
	_50013_obj+=_1adad79c3_indent();
	_50013_obj+=_5019_out_ident;
	_50013_obj+=jule::Str("(void) { ", 9);
	_50013_obj+=_1adad79c3_gen_struct_self_field_init_st(_49934_s);
	_50013_obj+=jule::Str(" }\n\n", 4);
	{
		auto _range_expr = _49934_s->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1adad79c3_f = *_range_begin;
			_iter_begin_4453494928:;
			{
				jule::Str _53417_proto = _1adad79c3_gen_fn_prototype(_1adad79c3_f,true);
				if (_1adad79c3_f->_field_statically) {
					_53417_proto=(_1adad79c3_indent() + jule::Str("static ", 7)) + _53417_proto.trim(jule::Str("\t ", 2));
				}
				_50013_obj+=_53417_proto;
				_50013_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4453494928:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_f = *_range_begin; goto _iter_begin_4453494928; }
			_iter_end_4453494928:;
		}
	}
	_50013_obj+=_1adad79c3_gen_struct_derive_defs_prototypes(_49934_s);
	_50013_obj+=_1adad79c3_gen_struct_operators(_49934_s);
	_50013_obj+=jule::Str("\n", 1);
	_1adad79c3_done_indent();
	_50013_obj+=_1adad79c3_indent() + jule::Str("};", 2);
	return _50013_obj;
}



inline jule::Str _1adad79c3_gen_struct_prototype(jule::Ref<_1ab064271_Struct>& _55330_s) {
	jule::Str _55413_obj = jule::Str("", 0);
	{
		auto _range_expr = _55330_s->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_StructIns> _1adad79c3_ins = *_range_begin;
			_iter_begin_4453504320:;
			{
				_55413_obj+=_1adad79c3_gen_struct_ins_prototype(_1adad79c3_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_4453504320:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_ins = *_range_begin; goto _iter_begin_4453504320; }
			_iter_end_4453504320:;
		}
	}
	return _55413_obj;
}



inline jule::Str _1adad79c3_gen_struct_prototypes(jule::Slice<jule::Ref<_1ab064271_Struct>>& _56231_structs) {
	jule::Str _56313_obj = jule::Str("", 0);
	{
		auto _range_expr = _56231_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1adad79c3_s = *_range_begin;
			_iter_begin_4453507808:;
			{
				if ((!(_1adad79c3_s->_field_cpp_linked)) && (_1adad79c3_s->_field_token._field_id != 0LLU)) {
					_56313_obj+=_1adad79c3_gen_struct_prototype(_1adad79c3_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_4453507808:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_s = *_range_begin; goto _iter_begin_4453507808; }
			_iter_end_4453507808:;
		}
	}
	return _56313_obj;
}



inline jule::Str _1adad79c3_gen_fn_decl_head(jule::Ref<_1ab07a50c_FnIns>& _57226_f,jule::Bool _57237_method) {
	jule::Str _57313_obj = jule::Str("", 0);
	if ((!(_57226_f->_field_decl->_method_is_entry_point()))) {
		_57313_obj+=jule::Str("inline ", 7);
	}
	_57313_obj+=_1adad79c3_gen_fn_ins_result(_57226_f) + jule::Str(" ", 1);
	if ((!(_57237_method)) && jule::real(_57226_f->_field_decl->_field_owner)) {
		_57313_obj+=_1adaa2350_struct_ins_out_ident(_57226_f->_field_owner) + jule::Str("::", 2);
	}
	_57313_obj+=_1adaa2350_fn_ins_out_ident(_57226_f);
	return _57313_obj;
}



inline jule::Str _1adad79c3_gen_fn_prototype(jule::Ref<_1ab07a50c_Fn>& _58926_f,jule::Bool _58934_method) {
	jule::Str _59013_obj = jule::Str("", 0);
	{
		auto _range_expr = _58926_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_FnIns> _1adad79c3_c = *_range_begin;
			_iter_begin_4453521200:;
			{
				_59013_obj+=_1adad79c3_indent();
				_59013_obj+=_1adad79c3_gen_fn_decl_head(_1adad79c3_c,_58934_method);
				_59013_obj+=_1adad79c3_gen_params_prototypes(_1adad79c3_c->_field_params);
				_59013_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4453521200:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_c = *_range_begin; goto _iter_begin_4453521200; }
			_iter_end_4453521200:;
		}
	}
	return _59013_obj;
}



inline jule::Str _1adad79c3_gen_fn_prototypes(jule::Ref<_1ac78be4d_Package>& _60127_pkg) {
	jule::Str _60213_obj = jule::Str("", 0);
	{
		auto _range_expr = _60127_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1adad79c3_file = *_range_begin;
			_iter_begin_4453526384:;
			{
				{
					auto _range_expr = _1adad79c3_file->_field_funcs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ab07a50c_Fn> _1adad79c3_f = *_range_begin;
						_iter_begin_4453528176:;
						{
							if ((!(_1adad79c3_f->_field_cpp_linked)) && (_1adad79c3_f->_field_token._field_id != 0LLU)) {
								_60213_obj+=_1adad79c3_gen_fn_prototype(_1adad79c3_f,false);
							}
						}
						_iter_next_4453528176:;
						++_range_begin;
						if (_range_begin != _range_end) { _1adad79c3_f = *_range_begin; goto _iter_begin_4453528176; }
						_iter_end_4453528176:;
					}
				}
			}
			_iter_next_4453526384:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_file = *_range_begin; goto _iter_begin_4453526384; }
			_iter_end_4453526384:;
		}
	}
	return _60213_obj;
}



inline jule::Str _1adad79c3_gen_prototypes(jule::Ref<_1aae4981b_IR>& _61424_ir) {
	jule::Str _61513_obj = jule::Str("", 0);
	{
		auto _range_expr = _61424_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1adad79c3_u = *_range_begin;
			_iter_begin_4453529456:;
			{
				if ((!(_1adad79c3_u->_field_cpp_linked))) {
					_61513_obj+=_1adad79c3_gen_trait_prototypes(_1adad79c3_u->_field_package);
				}
			}
			_iter_next_4453529456:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_u = *_range_begin; goto _iter_begin_4453529456; }
			_iter_end_4453529456:;
		}
	}
	_61513_obj+=_1adad79c3_gen_trait_prototypes(_61424_ir->_field_main);
	_61513_obj+=_1adad79c3_gen_struct_plain_prototypes(_61424_ir->_field_ordered._field_structs);
	_61513_obj+=_1adad79c3_gen_traits(_61424_ir) + jule::Str("\n", 1);
	_61513_obj+=_1adad79c3_gen_struct_prototypes(_61424_ir->_field_ordered._field_structs);
	{
		auto _range_expr = _61424_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1adad79c3_u = *_range_begin;
			_iter_begin_4453538752:;
			{
				if ((!(_1adad79c3_u->_field_cpp_linked))) {
					_61513_obj+=_1adad79c3_gen_fn_prototypes(_1adad79c3_u->_field_package);
				}
			}
			_iter_next_4453538752:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_u = *_range_begin; goto _iter_begin_4453538752; }
			_iter_end_4453538752:;
		}
	}
	_61513_obj+=_1adad79c3_gen_fn_prototypes(_61424_ir->_field_main);
	return _61513_obj;
}



inline jule::Str _1adad79c3_gen_var_init_expr(jule::Ref<_1aca3647d_Var>& _64227_v,jule::Str _64236_init) {
	jule::Str _64313_obj = jule::Str("", 0);
	if (_64227_v->_field_statically) {
		_64313_obj+=jule::Str("static ", 7);
	}
	_64313_obj+=_1adaa4dad_gen_type_kind(_64227_v->_field_kind->_field_kind) + jule::Str(" ", 1);
	if (_64227_v->_field_reference) {
		_64313_obj+=jule::Str("&", 1);
	}
	_64313_obj+=_1adaa2350_var_out_ident(_64227_v);
	if (_64236_init != jule::Str("", 0)) {
		_64313_obj+=jule::Str(" = ", 3) + _64236_init;
	}
	_64313_obj+=jule::Str(";", 1);
	return _64313_obj;
}



inline jule::Str _1adad79c3_gen_var(jule::Ref<_1aca3647d_Var> _66116_v) {
	if (_1ab0277b7_is_ignore_ident(_66116_v->_field_ident)) {
		return jule::Str("", 0);
	}
	if (_66116_v->_field_constant) {
		return jule::Str("", 0);
	}
	if (jule::real(_66116_v->_field_value) && jule::real(_66116_v->_field_value->_field_expr)) {
		if (_66116_v->_field_value->_field_data->_field_model != nullptr) {
			return _1adad79c3_gen_var_init_expr(_66116_v,_1ace0e05e_gen_val(_66116_v->_field_value));
		}
		return _1adad79c3_gen_var_init_expr(_66116_v,jule::Str("", 0));
	}
	return _1adad79c3_gen_var_init_expr(_66116_v,_1ace0e05e_get_init_expr(_66116_v->_field_kind->_field_kind));
}



inline jule::Str _1adad79c3_gen_globals(jule::Slice<jule::Ref<_1aca3647d_Var>>& _67921_globals) {
	jule::Str _68013_obj = jule::Str("", 0);
	{
		auto _range_expr = _67921_globals;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aca3647d_Var> _1adad79c3_v = *_range_begin;
			_iter_begin_4453559088:;
			{
				if ((!(_1adad79c3_v->_field_constant)) && (_1adad79c3_v->_field_token._field_id != 0LLU)) {
					_68013_obj+=_1adad79c3_gen_var(_1adad79c3_v) + jule::Str("\n", 1);
				}
			}
			_iter_next_4453559088:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_v = *_range_begin; goto _iter_begin_4453559088; }
			_iter_end_4453559088:;
		}
	}
	return _68013_obj;
}



inline jule::Str _1adad79c3_gen_fn(jule::Ref<_1ab07a50c_Fn>& _69216_f) {
	jule::Str _69313_obj = jule::Str("", 0);
	{
		auto _range_expr = _69216_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_FnIns> _1adad79c3_ins = *_range_begin;
			_iter_begin_4453564368:;
			{
				_69313_obj+=_1adad79c3_gen_fn_decl_head(_1adad79c3_ins,false);
				_69313_obj+=_1adad79c3_gen_params_ins(_1adad79c3_ins->_field_params) + jule::Str(" ", 1);
				_69313_obj+=_1aae7037a_gen_fn_scope(_1adad79c3_ins);
				_69313_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4453564368:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_ins = *_range_begin; goto _iter_begin_4453564368; }
			_iter_end_4453564368:;
		}
	}
	return _69313_obj;
}



inline jule::Str _1adad79c3_gen_pkg_fns(jule::Ref<_1ac78be4d_Package>& _70421_p) {
	jule::Str _70513_obj = jule::Str("", 0);
	{
		auto _range_expr = _70421_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1acd9639d_SymbolTable> _1adad79c3_f = *_range_begin;
			_iter_begin_4453569520:;
			{
				{
					auto _range_expr = _1adad79c3_f->_field_funcs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ab07a50c_Fn> _1adad79c3_f = *_range_begin;
						_iter_begin_4453571408:;
						{
							if ((!(_1adad79c3_f->_field_cpp_linked)) && (_1adad79c3_f->_field_token._field_id != 0LLU)) {
								_70513_obj+=_1adad79c3_gen_fn(_1adad79c3_f) + jule::Str("\n\n", 2);
							}
						}
						_iter_next_4453571408:;
						++_range_begin;
						if (_range_begin != _range_end) { _1adad79c3_f = *_range_begin; goto _iter_begin_4453571408; }
						_iter_end_4453571408:;
					}
				}
			}
			_iter_next_4453569520:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_f = *_range_begin; goto _iter_begin_4453569520; }
			_iter_end_4453569520:;
		}
	}
	return _70513_obj;
}



inline jule::Str _1adad79c3_gen_struct_method_defs(jule::Ref<_1ab064271_StructIns>& _71732_s) {
	jule::Str _71813_obj = jule::Str("", 0);
	{
		auto _range_expr = _71732_s->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab07a50c_Fn> _1adad79c3_f = *_range_begin;
			_iter_begin_4453576352:;
			{
				_71813_obj+=_1adad79c3_indent();
				_71813_obj+=_1adad79c3_gen_fn(_1adad79c3_f);
				_71813_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4453576352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_f = *_range_begin; goto _iter_begin_4453576352; }
			_iter_end_4453576352:;
		}
	}
	return _71813_obj;
}



inline jule::Str _1adad79c3_gen_struct_ostream(jule::Ref<_1ab064271_StructIns>& _72828_s) {
	jule::Str _72913_obj = jule::Str("", 0);
	_72913_obj+=_1adad79c3_indent();
	_72913_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_72913_obj+=_1adaa2350_struct_ins_out_ident(_72828_s);
	_72913_obj+=jule::Str(" &_Src) {\n", 10);
	_1adad79c3_add_indent();
	_72913_obj+=_1adad79c3_indent();
	_72913_obj+=jule::Str("_Stream << \"", 12);
	_72913_obj+=_72828_s->_field_decl->_field_ident;
	_72913_obj+=jule::Str("{\";\n", 4);
	{
		auto _range_expr = _72828_s->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1adad79c3_i = 0;
			jule::Ref<_1ab064271_FieldIns> _1adad79c3_f = *_range_begin;
			_iter_begin_4453583872:;
			{
				_72913_obj+=_1adad79c3_indent();
				_72913_obj+=jule::Str("_Stream << \"", 12);
				_72913_obj+=_1adad79c3_f->_field_decl->_field_ident;
				_72913_obj+=jule::Str(":", 1);
				jule::Ref<_1ab064271_StructIns> _74713_strct = _1adad79c3_f->_field_kind->_method_strct();
				if ((jule::real(_74713_strct) && jule::real(_74713_strct->_field_decl)) && _74713_strct->_field_decl->_field_cpp_linked) {
					_72913_obj+=(jule::Str(" cpp.", 5) + _1adaa2350_field_out_ident(_1adad79c3_f->_field_decl)) + jule::Str("\"", 1);
				} else {
					_72913_obj+=jule::Str("\" << _Src.", 10);
					_72913_obj+=_1adaa2350_field_out_ident(_1adad79c3_f->_field_decl);
				}
				if ((_1adad79c3_i + 1LL) < _72828_s->_field_fields.len()) {
					_72913_obj+=jule::Str(" << \", \"", 8);
				}
				_72913_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4453583872:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1adad79c3_i; _1adad79c3_f = *_range_begin; goto _iter_begin_4453583872; }
			_iter_end_4453583872:;
		}
	}
	_72913_obj+=_1adad79c3_indent();
	_72913_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_72913_obj+=_1adad79c3_indent();
	_72913_obj+=jule::Str("return _Stream;\n", 16);
	_1adad79c3_done_indent();
	_72913_obj+=_1adad79c3_indent();
	_72913_obj+=jule::Str("}", 1);
	return _72913_obj;
}



inline jule::Str _1adad79c3_gen_struct_derive_defs(jule::Ref<_1ab064271_StructIns>& _77032_s) {
	jule::Str _77113_obj = jule::Str("", 0);
	if (_77032_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_77113_obj+=_1adad79c3_indent();
		_77113_obj+=_1ac6aa762_get_derive_fn_def_clone(_77032_s->_field_decl);
		_77113_obj+=jule::Str("{\n", 2);
		_1adad79c3_add_indent();
		_77113_obj+=_1adad79c3_indent();
		_77113_obj+=_1adaa4dad_gen_struct_kind_ins(_77032_s);
		_77113_obj+=jule::Str(" clone;\n", 8);
		{
			auto _range_expr = _77032_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab064271_FieldIns> _1adad79c3_f = *_range_begin;
				_iter_begin_4453601424:;
				{
					jule::Str _78217_ident = _1adaa2350_field_out_ident(_1adad79c3_f->_field_decl);
					_77113_obj+=_1adad79c3_indent();
					_77113_obj+=jule::Str("clone.", 6);
					_77113_obj+=_78217_ident;
					_77113_obj+=jule::Str(" = jule::clone(this->", 21);
					_77113_obj+=_78217_ident;
					_77113_obj+=jule::Str(");\n", 3);
				}
				_iter_next_4453601424:;
				++_range_begin;
				if (_range_begin != _range_end) { _1adad79c3_f = *_range_begin; goto _iter_begin_4453601424; }
				_iter_end_4453601424:;
			}
		}
		_77113_obj+=_1adad79c3_indent();
		_77113_obj+=jule::Str("return clone;\n", 14);
		_1adad79c3_done_indent();
		_77113_obj+=_1adad79c3_indent();
		_77113_obj+=jule::Str("}", 1);
	}
	return _77113_obj;
}



inline jule::Str _1adad79c3_gen_struct_ins(jule::Ref<_1ab064271_StructIns>& _80224_s) {
	jule::Str _80313_obj = _1adad79c3_gen_struct_method_defs(_80224_s);
	_80313_obj+=jule::Str("\n\n", 2);
	_80313_obj+=_1adad79c3_gen_struct_derive_defs(_80224_s);
	_80313_obj+=jule::Str("\n\n", 2);
	_80313_obj+=_1adad79c3_gen_struct_ostream(_80224_s);
	return _80313_obj;
}



inline jule::Str _1adad79c3_gen_struct(jule::Ref<_1ab064271_Struct>& _81220_s) {
	jule::Str _81313_obj = jule::Str("", 0);
	{
		auto _range_expr = _81220_s->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_StructIns> _1adad79c3_ins = *_range_begin;
			_iter_begin_4453613056:;
			{
				_81313_obj+=_1adad79c3_gen_struct_ins(_1adad79c3_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_4453613056:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_ins = *_range_begin; goto _iter_begin_4453613056; }
			_iter_end_4453613056:;
		}
	}
	return _81313_obj;
}



inline jule::Str _1adad79c3_gen_structs(jule::Slice<jule::Ref<_1ab064271_Struct>>& _82121_structs) {
	jule::Str _82213_obj = jule::Str("", 0);
	{
		auto _range_expr = _82121_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab064271_Struct> _1adad79c3_s = *_range_begin;
			_iter_begin_4453616944:;
			{
				if ((!(_1adad79c3_s->_field_cpp_linked)) && (_1adad79c3_s->_field_token._field_id != 0LLU)) {
					_82213_obj+=_1adad79c3_gen_struct(_1adad79c3_s);
					_82213_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_4453616944:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_s = *_range_begin; goto _iter_begin_4453616944; }
			_iter_end_4453616944:;
		}
	}
	return _82213_obj;
}



inline jule::Str _1adad79c3_gen_fns(jule::Ref<_1aae4981b_IR>& _83317_ir) {
	jule::Str _83413_obj = jule::Str("", 0);
	{
		auto _range_expr = _83317_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1adad79c3_u = *_range_begin;
			_iter_begin_4453622352:;
			{
				if ((!(_1adad79c3_u->_field_cpp_linked))) {
					_83413_obj+=_1adad79c3_gen_pkg_fns(_1adad79c3_u->_field_package);
				}
			}
			_iter_next_4453622352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_u = *_range_begin; goto _iter_begin_4453622352; }
			_iter_end_4453622352:;
		}
	}
	_83413_obj+=_1adad79c3_gen_pkg_fns(_83317_ir->_field_main);
	return _83413_obj;
}



inline void _1adad79c3_push_init(jule::Ref<_1ac78be4d_Package>& _84619_pkg,jule::Str& _84639_obj) {
	
	
	jule::Ref<_1ab07a50c_Fn> _8509_f = _84619_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_8509_f)))) {
		return;
	}
	_84639_obj+=(jule::Str("\n\t", 2) + _1adaa2350_fn_out_ident(_8509_f)) + jule::Str("();", 3);
}



inline jule::Str _1adad79c3_gen_init_caller(jule::Ref<_1aae4981b_IR>& _85925_ir) {
	jule::Str _86013_obj = jule::Str("void ", 5);
	_86013_obj+=jule::Str("__jule_call_initializers", 24);
	_86013_obj+=jule::Str("(void) {", 8);
	{
		auto _range_expr = _85925_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1adad79c3_u = *_range_begin;
			_iter_begin_4453634832:;
			{
				if ((!(_1adad79c3_u->_field_cpp_linked))) {
					_1adad79c3_push_init(_1adad79c3_u->_field_package,_86013_obj);
				}
			}
			_iter_next_4453634832:;
			++_range_begin;
			if (_range_begin != _range_end) { _1adad79c3_u = *_range_begin; goto _iter_begin_4453634832; }
			_iter_end_4453634832:;
		}
	}
	_1adad79c3_push_init(_85925_ir->_field_main,_86013_obj);
	_86013_obj+=jule::Str("\n}", 2);
	return _86013_obj;
}



inline void _1adad79c3_append_standard(jule::Str& _87529_obj_code,jule::Str _87544_compiler,jule::Str _87559_compiler_cmd) {
	struct JuleCompileTime _8769_time = time_now();
	jule::Str _87813_time_str = jule::Str("", 0);
	_87813_time_str+=_1a99c0d11_itoa(_8769_time.day);
	_87813_time_str+=jule::Str("/", 1);
	_87813_time_str+=_1a99c0d11_itoa(_8769_time.month);
	_87813_time_str+=jule::Str("/", 1);
	_87813_time_str+=_1a99c0d11_itoa(_8769_time.year);
	_87813_time_str+=jule::Str(" ", 1);
	_87813_time_str+=_1a99c0d11_itoa(_8769_time.hour);
	_87813_time_str+=jule::Str(".", 1);
	_87813_time_str+=_1a99c0d11_itoa(_8769_time.minute);
	_87813_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM)", 21);
	jule::Str _89013_s = jule::Str("", 0);
	_89013_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_89013_s+=jule::Str("// JuleC version: ", 18);
	_89013_s+=jule::Str("beta 0.0.4 master", 17);
	_89013_s+=jule::Str("\n", 1);
	_89013_s+=jule::Str("// Date: ", 9);
	_89013_s+=_87813_time_str;
	_89013_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_89013_s+=_87544_compiler;
	_89013_s+=jule::Str(" ", 1);
	_89013_s+=_87559_compiler_cmd;
	_89013_s+=jule::Str("\n\n#include \"", 12);
	_89013_s+=_1d0595937_PATH_API;
	_89013_s+=jule::Str("\"\n\n", 3);
	_89013_s+=_87529_obj_code;
	_89013_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    std::set_terminate(&jule::terminate_handler);\n    jule::set_sig_handler(jule::signal_handler);\n    jule::setup_command_line_args(argc, argv);\n    jule::setup_environment_variables(envp);\n\n    __jule_call_initializers();\n    entry_point();\n\n    return EXIT_SUCCESS;\n}", 320);
	_87529_obj_code=_89013_s;
}



inline jule::Str _1adad79c3_gen(jule::Ref<_1aae4981b_IR>& _92417_ir) {
	jule::Str _92513_obj = jule::Str("", 0);
	_92513_obj+=_1adad79c3_gen_links(_92417_ir) + jule::Str("\n", 1);
	_92513_obj+=_1adad79c3_gen_prototypes(_92417_ir) + jule::Str("\n\n", 2);
	_92513_obj+=_1adad79c3_gen_globals(_92417_ir->_field_ordered._field_globals) + jule::Str("\n", 1);
	_92513_obj+=_1adad79c3_gen_structs(_92417_ir->_field_ordered._field_structs);
	_92513_obj+=_1adad79c3_gen_fns(_92417_ir) + jule::Str("\n", 1);
	_92513_obj+=_1adad79c3_gen_init_caller(_92417_ir) + jule::Str("\n", 1);
	return _92513_obj;
}



inline jule::Str _1d0517502_str_repeat(jule::Str _3515_sub,jule::Int _3529_n) {
	if (_3529_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _4013_s = jule::Str("", 0);
	_iter_begin_4453754704:;
	if (!(_3529_n > 0LL)) { goto _iter_end_4453754704; }
	{
		_4013_s+=_3515_sub;
	}
	_iter_next_4453754704:;
	(_3529_n)--;
	goto _iter_begin_4453754704;
	_iter_end_4453754704:;
	return _4013_s;
}



inline void _1d0517502_print_error_message(jule::Str _4724_msg) {
	jule::outln(_4724_msg);
}



inline void _1d0517502_help(void) {
	if (_1d063b77a_ARGS.len() > 2LL) {
		_1d0517502_print_error_message(jule::Str("invalid command: ", 17) + _1d063b77a_ARGS[2LL]);
		return;
	}
	jule::I64 _5613_max = _1d0517502_HELP_MAP[0LL][0LL].len();
	{
		auto _range_expr = _1d0517502_HELP_MAP;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Array<jule::Str,2> _1d0517502_k = *_range_begin;
			_iter_begin_4453760976:;
			{
				jule::I64 _5813_n = _1d0517502_k[0LL].len();
				if (_5813_n > _5613_max) {
					_5613_max=_5813_n;
				}
			}
			_iter_next_4453760976:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0517502_k = *_range_begin; goto _iter_begin_4453760976; }
			_iter_end_4453760976:;
		}
	}
	jule::Str _6413_s = jule::Str("", 0);
	
	{
		auto _range_expr = _1d0517502_HELP_MAP;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d0517502_i = 0;
			jule::Array<jule::Str,2> _1d0517502_part = *_range_begin;
			_iter_begin_4453766176:;
			{
				_6413_s+=_1d0517502_part[0LL];
				_6413_s+=_1d0517502_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_5613_max - _1d0517502_part[0LL].len()) + 5LL));
				_6413_s+=_1d0517502_part[1LL];
				if ((_1d0517502_i + 1LL) < 4LL) {
					_6413_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_4453766176:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d0517502_i; _1d0517502_part = *_range_begin; goto _iter_begin_4453766176; }
			_iter_end_4453766176:;
		}
	}
	jule::outln(_6413_s);
}



inline void _1d0517502_version(void) {
	if (_1d063b77a_ARGS.len() > 2LL) {
		_1d0517502_print_error_message(jule::Str("invalid command: ", 17) + _1d063b77a_ARGS[2LL]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.4 master", 17));
}



inline void _1d0517502_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto _range_expr = _1b6ba767d_DISTOS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d0517502_os = *_range_begin;
			_iter_begin_4453775200:;
			{
				jule::out(_1d0517502_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4453775200:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0517502_os = *_range_begin; goto _iter_begin_4453775200; }
			_iter_end_4453775200:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _1d0517502_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto _range_expr = _1b6ba767d_DISTARCH;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d0517502_arch = *_range_begin;
			_iter_begin_4453776704:;
			{
				jule::out(_1d0517502_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4453776704:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0517502_arch = *_range_begin; goto _iter_begin_4453776704; }
			_iter_end_4453776704:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _1d0517502_tool(void) {
	if (_1d063b77a_ARGS.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_1d063b77a_ARGS.len() > 3LL) {
		_1d0517502_print_error_message(jule::Str("invalid command: ", 17) + _1d063b77a_ARGS[3LL]);
		return;
	}
	jule::Str _1199_cmd = _1d063b77a_ARGS[2LL];
	{
		auto _match_expr{ _1199_cmd };
		if (!((jule::Str("distos", 6)) == _match_expr)) { goto _case_end_4453786752; }
		_case_begin_4453786752:;
		{
			_1d0517502_tool_distos();
		}
		goto _match_end_4453783456;
		_case_end_4453786752:;
		if (!((jule::Str("distarch", 8)) == _match_expr)) { goto _case_end_4453787712; }
		_case_begin_4453787712:;
		{
			_1d0517502_tool_distarch();
		}
		goto _match_end_4453783456;
		_case_end_4453787712:;
		_case_begin_4453785744:;
		{
			_1d0517502_print_error_message(jule::Str("Undefined command: ", 19) + _1199_cmd);
		}
		goto _match_end_4453783456;
		_case_end_4453785744:;
		_match_end_4453783456:;
	}
}



inline void _1d0517502_julenv(void) {
	jule::outln(jule::Str("julec version: beta 0.0.4 master", 32));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
}



inline jule::Bool _1d0517502_process_command(void) {
	{
		auto _match_expr{ _1d063b77a_ARGS[1LL] };
		if (!((jule::Str("help", 4)) == _match_expr)) { goto _case_end_4453791776; }
		_case_begin_4453791776:;
		{
			_1d0517502_help();
		}
		goto _match_end_4453786272;
		_case_end_4453791776:;
		if (!((jule::Str("version", 7)) == _match_expr)) { goto _case_end_4453791888; }
		_case_begin_4453791888:;
		{
			_1d0517502_version();
		}
		goto _match_end_4453786272;
		_case_end_4453791888:;
		if (!((jule::Str("tool", 4)) == _match_expr)) { goto _case_end_4453792800; }
		_case_begin_4453792800:;
		{
			_1d0517502_tool();
		}
		goto _match_end_4453786272;
		_case_end_4453792800:;
		if (!((jule::Str("julenv", 6)) == _match_expr)) { goto _case_end_4453792912; }
		_case_begin_4453792912:;
		{
			_1d0517502_julenv();
		}
		goto _match_end_4453786272;
		_case_end_4453792912:;
		_case_begin_4453785920:;
		{
			return false;
		}
		goto _match_end_4453786272;
		_case_end_4453785920:;
		_match_end_4453786272:;
	}
	return true;
}



inline void _1d0517502_init(void) {
	_1d053a6ac_COMPILER=jule::Str("clang", 5);
	_1d053a6ac_COMPILER_PATH=jule::Str("clang++", 7);
}



inline void _1d0517502_exit_err(jule::Str _15413_msg) {
	jule::outln(_15413_msg);
	_1aa179596_exit(1LL);
}



void entry_point(void) {
	julec_init();
	if (_1d063b77a_ARGS.len() < 2LL) {
		_1aa179596_exit(0LL);
	}
	if (_1d0517502_process_command()) {
		return;
	}
	_1d053a6ac_compile_command();
}



inline jule::Int _1d053a6ac_system(jule::Str _7911_cmd) {
	return static_cast<jule::Int>(static_cast<jule::Int>(system(((char*)((&(_7911_cmd[0LL])))))));
}



inline std::tuple<jule::Str,jule::Str> _1d053a6ac_get_option(jule::Slice<jule::Str>& _8316_args,jule::Int& _8334_i) {
	jule::Str _8344_arg = jule::Str();
	jule::Str _8354_content = jule::Str();
	_iter_begin_4453809040:;
	if (!(_8334_i < _8316_args.len())) { goto _iter_end_4453809040; }
	{
		_8344_arg=_8316_args[static_cast<jule::Int>(_8334_i)];
		jule::Int _8617_j = 0LL;
		jule::Slice<jule::I32> _8717_runes = static_cast<jule::Slice<jule::I32>>(_8344_arg);
		jule::I32 _8817_r = _8717_runes[static_cast<jule::Int>(_8617_j)];
		if (_8817_r != '-') {
			_8354_content+=_8344_arg;
			_8344_arg=jule::Str("", 0);
			goto _iter_next_4453809040;
		}
		(_8617_j)++;
		if (_8617_j >= _8717_runes.len()) {
			_1d0517502_exit_err(jule::Str("undefined syntax: ", 18) + _8344_arg);
		}
		_8817_r=_8717_runes[static_cast<jule::Int>(_8617_j)];
		if (_8817_r == '-') {
			(_8617_j)++;
			if (_8617_j >= _8717_runes.len()) {
				_1d0517502_exit_err(jule::Str("undefined syntax: ", 18) + _8344_arg);
			}
			_8817_r=_8717_runes[static_cast<jule::Int>(_8617_j)];
		}
		if ((!(_1ab0277b7_is_ident_rune(static_cast<jule::Str>(_8817_r))))) {
			_1d0517502_exit_err(jule::Str("undefined syntax: ", 18) + _8344_arg);
		}
		(_8617_j)++;
		_iter_begin_4453822032:;
		if (!(_8617_j < _8717_runes.len())) { goto _iter_end_4453822032; }
		{
			_8817_r=_8717_runes[static_cast<jule::Int>(_8617_j)];
			if (((((!(_1ab0277b7_is_space(_8817_r))) && (!(_1ab0277b7_is_letter(_8817_r)))) && (!(_1ab0277b7_is_decimal(static_cast<jule::U8>(_8817_r))))) && (_8817_r != '_')) && (_8817_r != '-')) {
				_1d0517502_exit_err(jule::Str("undefined syntax: ", 18) + static_cast<jule::Str>(_8717_runes.slice(static_cast<jule::Int>(_8617_j))));
			}
		}
		_iter_next_4453822032:;
		(_8617_j)++;
		goto _iter_begin_4453822032;
		_iter_end_4453822032:;
		goto _iter_end_4453809040;
	}
	_iter_next_4453809040:;
	(_8334_i)++;
	goto _iter_begin_4453809040;
	_iter_end_4453809040:;
	return std::make_tuple(_8344_arg,_8354_content);
}



inline jule::Str _1d053a6ac_get_option_value(jule::Slice<jule::Str>& _12722_args,jule::Int& _12740_i) {
	(_12740_i)++;
	if (_12740_i < _12722_args.len()) {
		jule::Str _13013_arg = _12722_args[static_cast<jule::Int>(_12740_i)];
		return _13013_arg;
	}
	return jule::Str("", 0);
}



inline void _1d053a6ac_parse_out_option(jule::Slice<jule::Str>& _13622_args,jule::Int& _13640_i) {
	jule::Str _1379_value = _1d053a6ac_get_option_value(_13622_args,_13640_i);
	if (_1379_value == jule::Str("", 0)) {
		_1d0517502_exit_err(jule::Str("missing option value: -o --out", 30));
	}
	_1d053a6ac_OUT=_1379_value;
}



inline void _1d053a6ac_parse_opt_option(jule::Slice<jule::Str>& _14422_args,jule::Int& _14440_i) {
	jule::Str _1459_value = _1d053a6ac_get_option_value(_14422_args,_14440_i);
	if (_1459_value == jule::Str("", 0)) {
		_1d0517502_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto _match_expr{ _1459_value };
		if (!((jule::Str("L0", 2)) == _match_expr)) { goto _case_end_4453844384; }
		_case_begin_4453844384:;
		{
			_1aae49d38_push_opt_level(0LLU);
		}
		goto _match_end_4453842640;
		_case_end_4453844384:;
		if (!((jule::Str("L1", 2)) == _match_expr)) { goto _case_end_4453845296; }
		_case_begin_4453845296:;
		{
			_1aae49d38_push_opt_level(1LLU);
		}
		goto _match_end_4453842640;
		_case_end_4453845296:;
		_case_begin_4453842048:;
		{
			_1d0517502_exit_err(jule::Str("invalid optimization level: ", 28) + _1459_value);
		}
		goto _match_end_4453842640;
		_case_end_4453842048:;
		_match_end_4453842640:;
	}
}



inline void _1d053a6ac_check_target_arch(jule::Str _15722_arch) {
	{
		auto _range_expr = _1b6ba767d_DISTARCH;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d053a6ac_distarch = *_range_begin;
			_iter_begin_4453847616:;
			{
				if (_15722_arch == _1d053a6ac_distarch) {
					return;
				}
			}
			_iter_next_4453847616:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d053a6ac_distarch = *_range_begin; goto _iter_begin_4453847616; }
			_iter_end_4453847616:;
		}
	}
	_1d0517502_exit_err(jule::Str("unsupported/undefined architecture: ", 36) + _15722_arch);
}



inline void _1d053a6ac_check_target_os(jule::Str _16720_os) {
	{
		auto _range_expr = _1b6ba767d_DISTOS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d053a6ac_distos = *_range_begin;
			_iter_begin_4453850912:;
			{
				if (_16720_os == _1d053a6ac_distos) {
					return;
				}
			}
			_iter_next_4453850912:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d053a6ac_distos = *_range_begin; goto _iter_begin_4453850912; }
			_iter_end_4453850912:;
		}
	}
	_1d0517502_exit_err(jule::Str("unsupported/undefined operating system: ", 40) + _16720_os);
}



inline void _1d053a6ac_parse_target_option(jule::Slice<jule::Str>& _17725_args,jule::Int& _17743_i) {
	jule::Str _1789_value = _1d053a6ac_get_option_value(_17725_args,_17743_i);
	if (_1789_value == jule::Str("", 0)) {
		_1d0517502_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _1839_parts = _1789_value.split(jule::Str("-", 1),-1LL);
	if (_1839_parts.len() != 2LL) {
		_1d0517502_exit_err(jule::Str("undefined platform target format: ", 34) + _1789_value);
	}
	jule::Str _18810_os = _1839_parts[0LL];
	jule::Str _18814_arch = _1839_parts[1LL];
	std::tie(_18810_os,_18814_arch) = std::make_tuple(_1839_parts[0LL],_1839_parts[1LL]);
	if (_18810_os != jule::Str("native", 6)) {
		_1d053a6ac_check_target_os(_18810_os);
		_1d0595937_OS=_18810_os;
	}
	if (_18814_arch != jule::Str("native", 6)) {
		_1d053a6ac_check_target_arch(_18814_arch);
		_1d0595937_ARCH=_18814_arch;
	}
}



inline void _1d053a6ac_parse_compiler_option(jule::Slice<jule::Str>& _20127_args,jule::Int& _20145_i) {
	jule::Str _2029_value = _1d053a6ac_get_option_value(_20127_args,_20145_i);
	{
		auto _match_expr{ _2029_value };
		if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_4453871328; }
		_case_begin_4453871328:;
		{
			_1d0517502_exit_err(jule::Str("missing option value: --compiler", 32));
		}
		goto _match_end_4453868640;
		_case_end_4453871328:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4453871440; }
		_case_begin_4453871440:;
		{
			_1d053a6ac_COMPILER=jule::Str("clang", 5);
			_1d053a6ac_COMPILER_PATH=jule::Str("clang++", 7);
		}
		goto _match_end_4453868640;
		_case_end_4453871440:;
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4453871552; }
		_case_begin_4453871552:;
		{
			_1d053a6ac_COMPILER=jule::Str("gcc", 3);
			_1d053a6ac_COMPILER_PATH=jule::Str("g++", 3);
		}
		goto _match_end_4453868640;
		_case_end_4453871552:;
		_case_begin_4453869120:;
		{
			_1d0517502_exit_err(jule::Str("invalid option value for --compiler: ", 37) + _2029_value);
		}
		goto _match_end_4453868640;
		_case_end_4453869120:;
		_match_end_4453868640:;
	}
}



inline jule::Str _1d053a6ac_parse_options(jule::Slice<jule::Str>& _22019_args) {
	jule::Str _22113_cmd = jule::Str("", 0);
	jule::Int _22513_i = 1LL;
	_iter_begin_4453875184:;
	if (!(_22513_i < _22019_args.len())) { goto _iter_end_4453875184; }
	{
		jule::Str _22714_arg;
		jule::Str _22719_content;
		std::tie(_22714_arg,_22719_content) = _1d053a6ac_get_option(_22019_args,_22513_i);
		_22113_cmd+=_22719_content;
		{
			auto _match_expr{ _22714_arg };
			if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_4453880368; }
			goto _match_end_4453877152;
			_case_end_4453880368:;
			if (!((jule::Str("-o", 2)) == _match_expr || (jule::Str("--out", 5)) == _match_expr)) { goto _case_end_4453880624; }
			_case_begin_4453880624:;
			{
				_1d053a6ac_parse_out_option(_22019_args,_22513_i);
			}
			goto _match_end_4453877152;
			_case_end_4453880624:;
			if (!((jule::Str("-t", 2)) == _match_expr || (jule::Str("--transpile", 11)) == _match_expr)) { goto _case_end_4453881568; }
			_case_begin_4453881568:;
			{
				_1d053a6ac_MODE=1LLU;
			}
			goto _match_end_4453877152;
			_case_end_4453881568:;
			if (!((jule::Str("-c", 2)) == _match_expr || (jule::Str("--compile", 9)) == _match_expr)) { goto _case_end_4453881680; }
			_case_begin_4453881680:;
			{
				_1d053a6ac_MODE=0LLU;
			}
			goto _match_end_4453877152;
			_case_end_4453881680:;
			if (!((jule::Str("--compiler", 10)) == _match_expr)) { goto _case_end_4453881792; }
			_case_begin_4453881792:;
			{
				_1d053a6ac_parse_compiler_option(_22019_args,_22513_i);
			}
			goto _match_end_4453877152;
			_case_end_4453881792:;
			if (!((jule::Str("--opt", 5)) == _match_expr)) { goto _case_end_4453879856; }
			_case_begin_4453879856:;
			{
				_1d053a6ac_parse_opt_option(_22019_args,_22513_i);
			}
			goto _match_end_4453877152;
			_case_end_4453879856:;
			if (!((jule::Str("--target", 8)) == _match_expr)) { goto _case_end_4453879968; }
			_case_begin_4453879968:;
			{
				_1d053a6ac_parse_target_option(_22019_args,_22513_i);
			}
			goto _match_end_4453877152;
			_case_end_4453879968:;
			if (!((jule::Str("--opt-copy", 10)) == _match_expr)) { goto _case_end_4453880080; }
			_case_begin_4453880080:;
			{
				_1aae49d38_OPTIMIZATIONS=jule::append(_1aae49d38_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10)}));
			}
			goto _match_end_4453877152;
			_case_end_4453880080:;
			if (!((jule::Str("--opt-deadcode", 14)) == _match_expr)) { goto _case_end_4453881904; }
			_case_begin_4453881904:;
			{
				_1aae49d38_OPTIMIZATIONS=jule::append(_1aae49d38_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-deadcode", 14)}));
			}
			goto _match_end_4453877152;
			_case_end_4453881904:;
			if (!((jule::Str("--opt-append", 12)) == _match_expr)) { goto _case_end_4453882016; }
			_case_begin_4453882016:;
			{
				_1aae49d38_OPTIMIZATIONS=jule::append(_1aae49d38_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-append", 12)}));
			}
			goto _match_end_4453877152;
			_case_end_4453882016:;
			if (!((jule::Str("--opt-math", 10)) == _match_expr)) { goto _case_end_4453882128; }
			_case_begin_4453882128:;
			{
				_1aae49d38_OPTIMIZATIONS=jule::append(_1aae49d38_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-math", 10)}));
			}
			goto _match_end_4453877152;
			_case_end_4453882128:;
			_case_begin_4453879264:;
			{
				_1d0517502_exit_err(jule::Str("undefined option: ", 18) + _22714_arg);
			}
			goto _match_end_4453877152;
			_case_end_4453879264:;
			_match_end_4453877152:;
		}
	}
	_iter_next_4453875184:;
	(_22513_i)++;
	goto _iter_begin_4453875184;
	_iter_end_4453875184:;
	_22113_cmd=_22113_cmd.trim(jule::Str(" \t\r\n\v", 5));
	return _22113_cmd;
}



inline void _1d053a6ac_write_output(jule::Str _26317_path,jule::Str _26328_content) {
	jule::Str _2649_dir = _1d05b5e41_dir(_26317_path);
	jule::Int _26617_err;
	std::tie(std::ignore,_26617_err) = _1aaed9867_stat(_2649_dir);
	if (_26617_err != 0LLU) {
		jule::Int _26813_err = _1ab03d6bd_create_dir(_2649_dir);
		if (_26813_err != 0LLU) {
			_1d0517502_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	}
	jule::Ref<_1ab00383c_File> _27414_f;
	std::tie(_27414_f,_26617_err) = _1aaed9548_open(_26317_path,1538LL,438LL);
	if (_26617_err != 0LLU) {
		_1d0517502_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	std::tie(std::ignore,_26617_err) = _27414_f->_method_write(static_cast<jule::Slice<jule::U8>>(_26328_content));
	if (_26617_err != 0LLU) {
		_1d0517502_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	_27414_f->_method_close();
}



inline void _1d053a6ac_clear_objects(void) {
	if (_1aaed9548_remove_file(_1d053a6ac_get_compile_path()) != 0LLU) {
		jule::outln(jule::Str("a problem occurs when object cleaning", 37));
		return;
	}
	_1ab03d6bd_remove_dir(_1d053a6ac_OUT_DIR);
}



inline void _1d053a6ac_compile_ir(jule::Str _30015_compiler,jule::Str _30030_compiler_cmd) {
	jule::Int _3019_status = _1d053a6ac_system((_30015_compiler + jule::Str(" ", 1)) + _30030_compiler_cmd);
	if (_3019_status != 0LL) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_3019_status);
		_1d0517502_exit_err(jule::Str("", 0));
	}
	_1d053a6ac_clear_objects();
}



inline void _1d053a6ac_do_spell(jule::Str _31213_obj,jule::Str _31223_compiler,jule::Str _31238_compiler_cmd) {
	jule::Str _3139_path = _1d053a6ac_get_compile_path();
	_1d053a6ac_write_output(_3139_path,_31213_obj);
	{
		auto _match_expr{ _1d053a6ac_MODE };
		if (!((0LLU) == _match_expr)) { goto _case_end_4453917856; }
		_case_begin_4453917856:;
		{
			_1d053a6ac_compile_ir(_31223_compiler,_31238_compiler_cmd);
		}
		goto _match_end_4453916544;
		_case_end_4453917856:;
		_match_end_4453916544:;
	}
}



inline void _1d053a6ac_check_mode(void) {
	if ((_1d053a6ac_MODE != 1LLU) && (_1d053a6ac_MODE != 0LLU)) {
		jule::outln(_1d068165a_logf(jule::Str("\"@\" is invalid value for the \"@\" key", 36),jule::Slice<jule::Any>({jule::Any(_1d053a6ac_MODE),jule::Any(jule::Str("mode", 4))})));
		_1d0517502_exit_err(jule::Str("", 0));
	}
}



inline void _1d053a6ac_check_compiler(void) {
	if ((_1d053a6ac_COMPILER != jule::Str("gcc", 3)) && (_1d053a6ac_COMPILER != jule::Str("clang", 5))) {
		jule::outln(_1d068165a_logf(jule::Str("\"@\" is invalid value for the \"@\" key", 36),jule::Slice<jule::Any>({jule::Any(_1d053a6ac_COMPILER),jule::Any(jule::Str("compiler", 8))})));
		_1d0517502_exit_err(jule::Str("", 0));
	}
}



inline void _1d053a6ac_set(void) {
	_1d053a6ac_check_mode();
	_1d053a6ac_check_compiler();
}



inline jule::Bool _1d053a6ac_is_cpp_source_file(jule::Str _34023_path) {
	jule::Int _3419_offset = _34023_path.rfind(jule::Str(".", 1));
	if (_3419_offset == -1LL) {
		return false;
	}
	return _1d068267d_is_valid_cpp_ext(_34023_path.slice(static_cast<jule::Int>(_3419_offset)));
}



inline std::tuple<jule::Str,jule::Str> _1d053a6ac_gen_compile_cmd(jule::Str _34920_source_path,jule::Ref<_1aae4981b_IR>& _34939_ir) {
	jule::Str _3509_compiler = _1d053a6ac_COMPILER_PATH;
	
	
	
	jule::Str _3559_SET_STD = jule::Str("--std=", 6) + _1d053a6ac_CPP_STD;
	jule::Str _35713_cmd = jule::Str("-O0 ", 4);
	{
		auto _match_expr{ _1d053a6ac_COMPILER };
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4453939696; }
		_case_begin_4453939696:;
		{
			_35713_cmd+=jule::Str("-w ", 3);
		}
		goto _match_end_4453937984;
		_case_end_4453939696:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4453939808; }
		_case_begin_4453939808:;
		{
			_35713_cmd+=jule::Str("-Wno-everything ", 16);
		}
		goto _match_end_4453937984;
		_case_end_4453939808:;
		_match_end_4453937984:;
	}
	_35713_cmd+=_3559_SET_STD + jule::Str(" ", 1);
	{
		auto _range_expr = _34939_ir->_field_passes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d053a6ac_pass = *_range_begin;
			_iter_begin_4453942224:;
			{
				_35713_cmd+=_1d053a6ac_pass + jule::Str(" ", 1);
			}
			_iter_next_4453942224:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d053a6ac_pass = *_range_begin; goto _iter_begin_4453942224; }
			_iter_end_4453942224:;
		}
	}
	{
		auto _range_expr = _34939_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac78be4d_ImportInfo> _1d053a6ac_u = *_range_begin;
			_iter_begin_4453943232:;
			{
				if (_1d053a6ac_u->_field_cpp_linked && _1d053a6ac_is_cpp_source_file(_1d053a6ac_u->_field_path)) {
					_35713_cmd+=_1d053a6ac_u->_field_path + jule::Str(" ", 1);
				}
			}
			_iter_next_4453943232:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d053a6ac_u = *_range_begin; goto _iter_begin_4453943232; }
			_iter_end_4453943232:;
		}
	}
	if (_1d053a6ac_OUT != jule::Str("", 0)) {
		_35713_cmd+=(jule::Str("-o ", 3) + _1d053a6ac_OUT) + jule::Str(" ", 1);
	}
	_35713_cmd+=_34920_source_path;
	return std::make_tuple(_3509_compiler,_35713_cmd);
}



inline jule::Str _1d053a6ac_get_compile_path(void) {
	return _1d05b5e41_join(jule::Slice<jule::Str>({_1d053a6ac_OUT_DIR,_1d053a6ac_OUT_NAME}));
}



inline void _1d053a6ac_apply_target_independent_optimizations(jule::Ref<_1aae4981b_IR>& _39848_ir) {
	if (_1aae49d38_is_opt_enabled(jule::Str("--opt-deadcode", 14))) {
		_1aadca5e3_eliminate_dead_code(_39848_ir);
	}
}



inline void _1d053a6ac_compile_command(void) {
	jule::Str _4069_path = _1d053a6ac_parse_options(_1d063b77a_ARGS);
	if (_4069_path == jule::Str("", 0)) {
		_1d0517502_exit_err(_1d068165a_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>({})));
	}
	jule::Ref<_1ab004a80_Status> _41210_inf;
	jule::Int _41215_err;
	std::tie(_41210_inf,_41215_err) = _1aaed9867_stat(_1d0595937_PATH_STDLIB);
	if ((_41215_err != 0LLU) || (!(_41210_inf->_method_is_dir()))) {
		_1d0517502_exit_err(_1d068165a_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>({})));
	}
	_1d053a6ac_set();
	jule::Ref<_1aae4981b_IR> _41914_ir;
	jule::Slice<_1d068165a_Log> _41918_logs;
	std::tie(_41914_ir,_41918_logs) = _1aae4981b_IR::_static_method_build(_4069_path);
	if ((!(jule::real(_41914_ir))) && (_41918_logs == nullptr)) {
		_1d0517502_exit_err(_1d068165a_logf(jule::Str("there is no Jule source code in this package: @", 47),jule::Slice<jule::Any>({jule::Any(_4069_path)})));
	}
	if (_41918_logs != nullptr) {
		_1d051759b_Logger::_static_method_print_logs(_41918_logs);
		_1d0517502_exit_err(jule::Str("", 0));
	}
	
	jule::Ref<_1ab07a50c_Fn> _43113_f = _41914_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if ((!(jule::real(_43113_f)))) {
		_1d0517502_exit_err(_1d068165a_logf(jule::Str("entry point (main) function is not defined", 42),jule::Slice<jule::Any>({})));
	}
	_43113_f->_field_statically=true;
	_43113_f=_41914_ir->_field_main->_method_find_fn(jule::Str("init", 4),false);
	if (jule::real(_43113_f)) {
		_43113_f->_field_statically=true;
	}
	_41914_ir->_method_order();
	_1d053a6ac_apply_target_independent_optimizations(_41914_ir);
	jule::Str _44710_compiler;
	jule::Str _44720_compiler_cmd;
	std::tie(_44710_compiler,_44720_compiler_cmd) = _1d053a6ac_gen_compile_cmd(_1d053a6ac_get_compile_path(),_41914_ir);
	jule::Str _44913_obj = _1adad79c3_gen(_41914_ir);
	_1adad79c3_append_standard(_44913_obj,_44710_compiler,_44720_compiler_cmd);
	_1d053a6ac_do_spell(_44913_obj,_44710_compiler,_44720_compiler_cmd);
}




void __jule_call_initializers(void) {
	_1d063b77a_init();
	_1d0595937_init();
	_1ad5a38bd_init();
	_1aae806a9_init();
	_1d0517502_init();
}

int main(int argc, char *argv[], char *envp[]) {
    std::set_terminate(&jule::terminate_handler);
    jule::set_sig_handler(jule::signal_handler);
    jule::setup_command_line_args(argc, argv);
    jule::setup_environment_variables(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}