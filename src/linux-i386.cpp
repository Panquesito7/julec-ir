// Auto generated by JuleC.
// JuleC version: beta 0.0.5 @master
// Date: 17/9/2023 23.29 (DD/MM/YYYY) (HH.MM)
//
// Recommended Compile Command;
// clang++ -O0 -Wno-everything --std=c++17 dist/ir.cpp

#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include "std/jule/integrated/integrated.hpp"                                   
#include "std/sys/syscall_unix.hpp"                                   
#include "std/vector/alloc.hpp"                                   
#include "src/julec/obj/cxx/cxx.hpp"                                   

struct _206e66325_Importer;
struct _1da411226_Kind;
struct _206c8d636_Lookup;
struct _2049ab4bb_RangeSetter;

struct _203731143_AnsiEscape;


struct _203731143_Logger;


struct _203896264_LazyBuff;


struct _20377124e_Log;


struct _20532e338_bits_error;


struct _203830374_FloatInfo;


struct _203830374_DecimalSlice;


struct _2047bec19_LeftCheat;


struct _2047bec19_Decimal;


struct _20522b4aa_DirEntry;


struct _20522c3ce_File;


struct _20537ab26_Status;


struct _20548c650_FoldPair;


struct _20548c650_CaseRange;


struct _20548c650_Range16;


struct _20548c650_Range32;


struct _20548c650_RangeTable;


struct _2062e3ad2_accept_range;


struct _20542560a_Token;


struct _2053bdb25_File;


struct _20547ded2_KindPair;


struct _20547ded2_Lex;


struct _20521102d_Ast;


struct _2053703bd_Node;


struct _2053703bd_CommentGroup;


struct _2053703bd_Comment;


struct _2053703bd_Directive;


struct _2053703bd_TypeDecl;


struct _2053703bd_IdentTypeDecl;


struct _2053703bd_NamespaceTypeDecl;


struct _2053703bd_RefTypeDecl;


struct _2053703bd_SlcTypeDecl;


struct _2053703bd_TupleTypeDecl;


struct _2053703bd_PtrTypeDecl;


struct _2053703bd_ArrTypeDecl;


struct _2053703bd_MapTypeDecl;


struct _2053703bd_RetTypeDecl;


struct _2053703bd_Expr;


struct _2053703bd_TupleExpr;


struct _2053703bd_LitExpr;


struct _2053703bd_UnsafeExpr;


struct _2053703bd_IdentExpr;


struct _2053703bd_UnaryExpr;


struct _2053703bd_VariadicExpr;


struct _2053703bd_CastExpr;


struct _2053703bd_NsSelectionExpr;


struct _2053703bd_SubIdentExpr;


struct _2053703bd_BinopExpr;


struct _2053703bd_FnCallExpr;


struct _2053703bd_FieldExprPair;


struct _2053703bd_StructLit;


struct _2053703bd_BraceLit;


struct _2053703bd_KeyValPair;


struct _2053703bd_SliceExpr;


struct _2053703bd_IndexingExpr;


struct _2053703bd_SlicingExpr;


struct _2053703bd_GenericDecl;


struct _2053703bd_LabelSt;


struct _2053703bd_GotoSt;


struct _2053703bd_FallSt;


struct _2053703bd_AssignLeft;


struct _2053703bd_AssignSt;


struct _2053703bd_ScopeTree;


struct _2053703bd_ParamDecl;


struct _2053703bd_FnDecl;


struct _2053703bd_VarDecl;


struct _2053703bd_RetSt;


struct _2053703bd_Iter;


struct _2053703bd_WhileKind;


struct _2053703bd_RangeKind;


struct _2053703bd_BreakSt;


struct _2053703bd_ContSt;


struct _2053703bd_If;


struct _2053703bd_Else;


struct _2053703bd_Conditional;


struct _2053703bd_TypeAliasDecl;


struct _2053703bd_Case;


struct _2053703bd_MatchCase;


struct _2053703bd_UseDecl;


struct _2053703bd_EnumItemDecl;


struct _2053703bd_EnumDecl;


struct _2053703bd_FieldDecl;


struct _2053703bd_StructDecl;


struct _2053703bd_TraitDecl;


struct _2053703bd_Impl;


struct _2053a3313_FileInfo;


struct _2053a3313_PackageInfo;


struct _2053cae51_Stmt;


struct _2053cae51_ScopeParser;


struct _2054205a0_CallData;


struct _2054205a0_Precedencer;


struct _2054205a0_ExprBuilder;


struct _20543982d_AssignInfo;


struct _206540c0d_Parser;


struct _206581226_TypeBuilder;


struct _1a89ca987_Const;




struct _2053cdc01_Field;


struct _2053cdc01_Struct;


struct _2053cdc01_FieldIns;


struct _2053cdc01_StructIns;


struct _2053ddd54_RetType;


struct _2053ddd54_Param;


struct _2053ddd54_Fn;


struct _2053ddd54_ParamIns;


struct _2053ddd54_FnIns;


struct _206a20e79_ReferenceStack;


struct _206a20e79_Pass;


struct _206a20e79_SymbolBuilder;


struct _2065895c5_Trait;


struct _206b06c0d_EnumItem;


struct _206b06c0d_Enum;


struct _206b07093_Impl;


struct _206b0557a_Scope;


struct _206b0557a_If;


struct _206b0557a_Else;


struct _206b0557a_Conditional;


struct _206b0557a_InfIter;


struct _206b0557a_WhileIter;


struct _206b0557a_RangeIter;


struct _206b0557a_ContSt;


struct _206b0557a_BreakSt;


struct _206b0557a_Label;


struct _206b0557a_GotoSt;


struct _206b0557a_Postfix;


struct _206b0557a_Assign;


struct _206b0557a_MultiAssign;


struct _206b0557a_Match;


struct _206b0557a_Case;


struct _206b0557a_FallSt;


struct _206b0557a_RetSt;


struct _206b0557a_Recover;


struct _206b0557a_ScopeLabel;


struct _206b0557a_ScopeGoto;


struct _206b0557a_ScopeChecker;


struct _206e63542_BinopExprModel;


struct _206e63542_UnaryExprModel;


struct _206e63542_GetRefPtrExprModel;


struct _206e63542_StructArgExprModel;


struct _206e63542_StructLitExprModel;


struct _206e63542_AllocStructLitExprModel;


struct _206e63542_CastingExprModel;


struct _206e63542_FnCallExprModel;


struct _206e63542_SliceExprModel;


struct _206e63542_IndexigExprModel;


struct _206e63542_AnonFnExprModel;


struct _206e63542_KeyValPairExprModel;


struct _206e63542_MapExprModel;


struct _206e63542_SlicingExprModel;


struct _206e63542_TraitSubIdentExprModel;


struct _206e63542_StructSubIdentExprModel;


struct _206e63542_StructStaticIdentExprModel;


struct _206e63542_ArrayExprModel;


struct _206e63542_CommonIdentExprModel;


struct _206e63542_CommonSubIdentExprModel;


struct _206e63542_TupleExprModel;


struct _206e63542_BuiltinOutCallExprModel;


struct _206e63542_BuiltinOutlnCallExprModel;


struct _206e63542_BuiltinCloneCallExprModel;


struct _206e63542_BuiltinNewCallExprModel;


struct _206e63542_BuiltinRealCallExprModel;


struct _206e63542_BuiltinDropCallExprModel;


struct _206e63542_BuiltinPanicCallExprModel;


struct _206e63542_BuiltinMakeCallExprModel;


struct _206e63542_BuiltinAppendCallExprModel;


struct _206e63542_BuiltinErrorTraitSubIdentExprModel;


struct _206e63542_SizeofExprModel;


struct _206e63542_AlignofExprModel;


struct _206e63542_RuneExprModel;


struct _206e63542_ExplicitDerefExprModel;


struct _206e63542_IntegratedToStrExprModel;


struct _206e66325_ImportInfo;


struct _206e66325_Package;


struct _1d9dc7517_Sema;


struct _1d9e22661_Var;


struct _1da120d15_TypeCompatibilityChecker;


struct _1da120d15_AssignTypeChecker;


struct _1da120d15_DynamicTypeAnnotation;


struct _1da120d15_FnCallArgChecker;


struct _1da120d15_StructLitChecker;


struct _1da120d15_RangeChecker;


struct _1da120d15_RetTypeChecker;


struct _1da2aa301_SymbolTable;


struct _1da2d3bdc_Data;


struct _1da2d3bdc_Value;


struct _1da2d3bdc_Eval;


struct _1da2d3bdc_BinopSolver;


struct _1da411226_TypeAlias;


struct _1da411226_TypeKind;


struct _1da411226_TypeSymbol;


struct _1da411226_Prim;


struct _1da411226_Ref;


struct _1da411226_Slc;


struct _1da411226_Tuple;


struct _1da411226_Map;


struct _1da411226_Arr;


struct _1da411226_Ptr;


struct _1da411226_Referencer;


struct _1da411226_TypeChecker;


struct _204dc9ec2_PlainImporter;


struct _204a335a9_OrderedDefines;


struct _204a33ac6_IR;


struct _204a335a9_DefineOrderer;


struct _20385a2c2_ScopeDeadCode;


struct _2049ab4bb_IndexRangeSetter;


struct _2049ab4bb_MapRangeSetter;

struct _206e66325_Importer {
	virtual ~_206e66325_Importer(void) {}

	virtual jule::Ref<_206e66325_ImportInfo> _method_get_import(jule::Str _1633_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ref<_20521102d_Ast>>,jule::Slice<_20377124e_Log>> _method_import_package(jule::Str _2037_path) { return {}; }
	virtual void _method_imported(jule::Ref<_206e66325_ImportInfo>) {}
};

struct _1da411226_Kind {
	virtual ~_1da411226_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ref<_1da411226_TypeKind> _4621_other) { return {}; }
};

struct _206c8d636_Lookup {
	virtual ~_206c8d636_Lookup(void) {}

	virtual jule::Ref<_206e66325_ImportInfo> _method_find_package(jule::Str _935_ident) { return {}; }
	virtual jule::Ref<_206e66325_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)> _1337_selector) { return {}; }
	virtual jule::Ref<_1d9e22661_Var> _method_find_var(jule::Str _1731_ident,jule::Bool _1743_cpp_linked) { return {}; }
	virtual jule::Ref<_1da411226_TypeAlias> _method_find_type_alias(jule::Str _2138_ident,jule::Bool _2150_cpp_linked) { return {}; }
	virtual jule::Ref<_2053cdc01_Struct> _method_find_struct(jule::Str _2534_ident,jule::Bool _2546_cpp_linked) { return {}; }
	virtual jule::Ref<_2053ddd54_Fn> _method_find_fn(jule::Str _2930_ident,jule::Bool _2942_cpp_linked) { return {}; }
	virtual jule::Ref<_2065895c5_Trait> _method_find_trait(jule::Str _3333_ident) { return {}; }
	virtual jule::Ref<_206b06c0d_Enum> _method_find_enum(jule::Str _3732_ident) { return {}; }
};

struct _2049ab4bb_RangeSetter {
	virtual ~_2049ab4bb_RangeSetter(void) {}

	virtual jule::Str _method_setup_vars(jule::Ref<_1d9e22661_Var> _4029_key_a,jule::Ref<_1d9e22661_Var> _4046_key_b) { return {}; }
	virtual jule::Str _method_next_steps(jule::Ref<_1d9e22661_Var> _4129_key_a,jule::Ref<_1d9e22661_Var> _4146_key_b,jule::Str _4159_begin) { return {}; }
};


struct _203731143_AnsiEscape {
	jule::Ref<_203731143_AnsiEscape> self{};

	~_203731143_AnsiEscape(void) { this->self.ref = nullptr; }

	_203731143_AnsiEscape(void) { this->self = jule::Ref<_203731143_AnsiEscape>::make(this, nullptr); }

	static inline void _static_method_reset(void);


	static inline void _static_method_print(jule::Str,jule::Str);


	inline bool operator==(const _203731143_AnsiEscape &_Src) const { return true; }

	inline bool operator!=(const _203731143_AnsiEscape &_Src) const { return !this->operator==(_Src); }
};


struct _203731143_Logger {
	jule::Ref<_203731143_Logger> self{};

	~_203731143_Logger(void) { this->self.ref = nullptr; }

	_203731143_Logger(void) { this->self = jule::Ref<_203731143_Logger>::make(this, nullptr); }

	static inline void _static_method_log_flat(_20377124e_Log&);


	static inline void _static_method_log_error(_20377124e_Log&);


	static inline void _static_method_log(_20377124e_Log&);


	static inline void _static_method_print_logs(jule::Slice<_20377124e_Log>&);


	inline bool operator==(const _203731143_Logger &_Src) const { return true; }

	inline bool operator!=(const _203731143_Logger &_Src) const { return !this->operator==(_Src); }
};


struct _203896264_LazyBuff {
	jule::Ref<_203896264_LazyBuff> self{};

	jule::Str _field_path{jule::Str()};
	jule::Slice<jule::U8> _field_buff{jule::Slice<jule::U8>()};
	jule::Int _field_w{jule::Int()};
	jule::Str _field_vol_and_path{jule::Str()};
	jule::Int _field_vol_len{jule::Int()};


	_203896264_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len) {
		this->self = jule::Ref<_203896264_LazyBuff>::make(this, nullptr);

		this->_field_path = __param_path;
		this->_field_buff = __param_buff;
		this->_field_w = __param_w;
		this->_field_vol_and_path = __param_vol_and_path;
		this->_field_vol_len = __param_vol_len;
	}

	~_203896264_LazyBuff(void) { this->self.ref = nullptr; }

	_203896264_LazyBuff(void) { this->self = jule::Ref<_203896264_LazyBuff>::make(this, nullptr); }

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(const _203896264_LazyBuff &_Src) const {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	inline bool operator!=(const _203896264_LazyBuff &_Src) const { return !this->operator==(_Src); }
};


struct _20377124e_Log {
	jule::Ref<_20377124e_Log> self{};

	jule::Int _field_kind{0LLU};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_text{jule::Str()};
	jule::Str _field_line{jule::Str()};
	jule::Str _field_suggestion{jule::Str()};


	_20377124e_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion) {
		this->self = jule::Ref<_20377124e_Log>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_path = __param_path;
		this->_field_text = __param_text;
		this->_field_line = __param_line;
		this->_field_suggestion = __param_suggestion;
	}

	~_20377124e_Log(void) { this->self.ref = nullptr; }

	_20377124e_Log(void) { this->self = jule::Ref<_20377124e_Log>::make(this, nullptr); }

	inline bool operator==(const _20377124e_Log &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text &&
			this->_field_line == _Src._field_line &&
			this->_field_suggestion == _Src._field_suggestion;
	}

	inline bool operator!=(const _20377124e_Log &_Src) const { return !this->operator==(_Src); }
};


struct _20532e338_bits_error: public jule::Error {
	jule::Ref<_20532e338_bits_error> self{};

	jule::Str _field_message{jule::Str()};


	_20532e338_bits_error(jule::Str __param_message) {
		this->self = jule::Ref<_20532e338_bits_error>::make(this, nullptr);

		this->_field_message = __param_message;
	}

	~_20532e338_bits_error(void) { this->self.ref = nullptr; }

	_20532e338_bits_error(void) { this->self = jule::Ref<_20532e338_bits_error>::make(this, nullptr); }

	inline jule::Str _method_error(void);


	inline bool operator==(const _20532e338_bits_error &_Src) const {
		return 
			this->_field_message == _Src._field_message;
	}

	inline bool operator!=(const _20532e338_bits_error &_Src) const { return !this->operator==(_Src); }
};


struct _203830374_FloatInfo {
	jule::Ref<_203830374_FloatInfo> self{};

	jule::Uint _field_mantbits{jule::Uint()};
	jule::Uint _field_expbits{jule::Uint()};
	jule::Int _field_bias{jule::Int()};


	_203830374_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias) {
		this->self = jule::Ref<_203830374_FloatInfo>::make(this, nullptr);

		this->_field_mantbits = __param_mantbits;
		this->_field_expbits = __param_expbits;
		this->_field_bias = __param_bias;
	}

	~_203830374_FloatInfo(void) { this->self.ref = nullptr; }

	_203830374_FloatInfo(void) { this->self = jule::Ref<_203830374_FloatInfo>::make(this, nullptr); }

	inline bool operator==(const _203830374_FloatInfo &_Src) const {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	inline bool operator!=(const _203830374_FloatInfo &_Src) const { return !this->operator==(_Src); }
};


struct _203830374_DecimalSlice {
	jule::Ref<_203830374_DecimalSlice> self{};

	jule::Slice<jule::U8> _field_d{jule::Slice<jule::U8>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};


	_203830374_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg) {
		this->self = jule::Ref<_203830374_DecimalSlice>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
	}

	~_203830374_DecimalSlice(void) { this->self.ref = nullptr; }

	_203830374_DecimalSlice(void) { this->self = jule::Ref<_203830374_DecimalSlice>::make(this, nullptr); }

	inline bool operator==(const _203830374_DecimalSlice &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	inline bool operator!=(const _203830374_DecimalSlice &_Src) const { return !this->operator==(_Src); }
};


struct _2047bec19_LeftCheat {
	jule::Ref<_2047bec19_LeftCheat> self{};

	jule::Int _field_delta{jule::Int()};
	jule::Str _field_cutoff{jule::Str()};


	_2047bec19_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff) {
		this->self = jule::Ref<_2047bec19_LeftCheat>::make(this, nullptr);

		this->_field_delta = __param_delta;
		this->_field_cutoff = __param_cutoff;
	}

	~_2047bec19_LeftCheat(void) { this->self.ref = nullptr; }

	_2047bec19_LeftCheat(void) { this->self = jule::Ref<_2047bec19_LeftCheat>::make(this, nullptr); }

	inline bool operator==(const _2047bec19_LeftCheat &_Src) const {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	inline bool operator!=(const _2047bec19_LeftCheat &_Src) const { return !this->operator==(_Src); }
};


struct _2047bec19_Decimal {
	jule::Ref<_2047bec19_Decimal> self{};

	jule::Array<jule::U8,800> _field_d{jule::Array<jule::U8,800>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};
	jule::Bool _field_trunc{jule::Bool()};


	_2047bec19_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc) {
		this->self = jule::Ref<_2047bec19_Decimal>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
		this->_field_trunc = __param_trunc;
	}

	~_2047bec19_Decimal(void) { this->self.ref = nullptr; }

	_2047bec19_Decimal(void) { this->self = jule::Ref<_2047bec19_Decimal>::make(this, nullptr); }

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_203830374_FloatInfo&);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(const _2047bec19_Decimal &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	inline bool operator!=(const _2047bec19_Decimal &_Src) const { return !this->operator==(_Src); }
};


struct _20522b4aa_DirEntry {
	jule::Ref<_20522b4aa_DirEntry> self{};

	jule::Str _field_name{jule::Str()};
	jule::Ref<_20537ab26_Status> _field_stat{jule::Ref<_20537ab26_Status>()};


	_20522b4aa_DirEntry(jule::Str __param_name, jule::Ref<_20537ab26_Status> __param_stat) {
		this->self = jule::Ref<_20522b4aa_DirEntry>::make(this, nullptr);

		this->_field_name = __param_name;
		this->_field_stat = __param_stat;
	}

	~_20522b4aa_DirEntry(void) { this->self.ref = nullptr; }

	_20522b4aa_DirEntry(void) { this->self = jule::Ref<_20522b4aa_DirEntry>::make(this, nullptr); }

	inline bool operator==(const _20522b4aa_DirEntry &_Src) const {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	inline bool operator!=(const _20522b4aa_DirEntry &_Src) const { return !this->operator==(_Src); }
};


struct _20522c3ce_File {
	jule::Ref<_20522c3ce_File> self{};

	jule::Uintptr _field_handle{jule::Uintptr()};


	_20522c3ce_File(jule::Uintptr __param_handle) {
		this->self = jule::Ref<_20522c3ce_File>::make(this, nullptr);

		this->_field_handle = __param_handle;
	}

	~_20522c3ce_File(void) { this->self.ref = nullptr; }

	_20522c3ce_File(void) { this->self = jule::Ref<_20522c3ce_File>::make(this, nullptr); }

	inline std::tuple<jule::Int,jule::Int> _method_write(jule::Slice<jule::U8>);


	inline std::tuple<jule::Int,jule::Int> _method_read(jule::Slice<jule::U8>);


	static inline jule::Ref<_20522c3ce_File> _static_method_new(jule::Uintptr);


	inline std::tuple<jule::I64,jule::Int> _method_seek(jule::I64,jule::Int);


	inline jule::Int _method_close(void);


	inline bool operator==(const _20522c3ce_File &_Src) const {
		return 
			this->_field_handle == _Src._field_handle;
	}

	inline bool operator!=(const _20522c3ce_File &_Src) const { return !this->operator==(_Src); }
};


struct _20537ab26_Status {
	jule::Ref<_20537ab26_Status> self{};

	jule::Uint _field_mode{jule::Uint()};
	jule::Uint _field_size{jule::Uint()};


	_20537ab26_Status(jule::Uint __param_mode, jule::Uint __param_size) {
		this->self = jule::Ref<_20537ab26_Status>::make(this, nullptr);

		this->_field_mode = __param_mode;
		this->_field_size = __param_size;
	}

	~_20537ab26_Status(void) { this->self.ref = nullptr; }

	_20537ab26_Status(void) { this->self = jule::Ref<_20537ab26_Status>::make(this, nullptr); }

	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	inline bool operator==(const _20537ab26_Status &_Src) const {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _20537ab26_Status &_Src) const { return !this->operator==(_Src); }
};


struct _20548c650_FoldPair {
	jule::Ref<_20548c650_FoldPair> self{};

	jule::U16 _field_from{jule::U16()};
	jule::U16 _field_to{jule::U16()};


	_20548c650_FoldPair(jule::U16 __param_from, jule::U16 __param_to) {
		this->self = jule::Ref<_20548c650_FoldPair>::make(this, nullptr);

		this->_field_from = __param_from;
		this->_field_to = __param_to;
	}

	~_20548c650_FoldPair(void) { this->self.ref = nullptr; }

	_20548c650_FoldPair(void) { this->self = jule::Ref<_20548c650_FoldPair>::make(this, nullptr); }

	inline bool operator==(const _20548c650_FoldPair &_Src) const {
		return 
			this->_field_from == _Src._field_from &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _20548c650_FoldPair &_Src) const { return !this->operator==(_Src); }
};


struct _20548c650_CaseRange {
	jule::Ref<_20548c650_CaseRange> self{};

	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::Array<jule::I32,3> _field_delta{jule::Array<jule::I32,3>()};


	_20548c650_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta) {
		this->self = jule::Ref<_20548c650_CaseRange>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
		this->_field_delta = __param_delta;
	}

	~_20548c650_CaseRange(void) { this->self.ref = nullptr; }

	_20548c650_CaseRange(void) { this->self = jule::Ref<_20548c650_CaseRange>::make(this, nullptr); }

	inline bool operator==(const _20548c650_CaseRange &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_delta == _Src._field_delta;
	}

	inline bool operator!=(const _20548c650_CaseRange &_Src) const { return !this->operator==(_Src); }
};


struct _20548c650_Range16 {
	jule::Ref<_20548c650_Range16> self{};

	jule::U16 _field_lo{jule::U16()};
	jule::U16 _field_hi{jule::U16()};
	jule::U16 _field_stride{jule::U16()};


	_20548c650_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride) {
		this->self = jule::Ref<_20548c650_Range16>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
		this->_field_stride = __param_stride;
	}

	~_20548c650_Range16(void) { this->self.ref = nullptr; }

	_20548c650_Range16(void) { this->self = jule::Ref<_20548c650_Range16>::make(this, nullptr); }

	inline bool operator==(const _20548c650_Range16 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _20548c650_Range16 &_Src) const { return !this->operator==(_Src); }
};


struct _20548c650_Range32 {
	jule::Ref<_20548c650_Range32> self{};

	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::U32 _field_stride{jule::U32()};


	_20548c650_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride) {
		this->self = jule::Ref<_20548c650_Range32>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
		this->_field_stride = __param_stride;
	}

	~_20548c650_Range32(void) { this->self.ref = nullptr; }

	_20548c650_Range32(void) { this->self = jule::Ref<_20548c650_Range32>::make(this, nullptr); }

	inline bool operator==(const _20548c650_Range32 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _20548c650_Range32 &_Src) const { return !this->operator==(_Src); }
};


struct _20548c650_RangeTable {
	jule::Ref<_20548c650_RangeTable> self{};

	jule::Slice<_20548c650_Range16> _field_r16{jule::Slice<_20548c650_Range16>()};
	jule::Slice<_20548c650_Range32> _field_r32{jule::Slice<_20548c650_Range32>()};
	jule::Int _field_latin_offset{jule::Int()};


	_20548c650_RangeTable(jule::Slice<_20548c650_Range16> __param_r16, jule::Slice<_20548c650_Range32> __param_r32, jule::Int __param_latin_offset) {
		this->self = jule::Ref<_20548c650_RangeTable>::make(this, nullptr);

		this->_field_r16 = __param_r16;
		this->_field_r32 = __param_r32;
		this->_field_latin_offset = __param_latin_offset;
	}

	~_20548c650_RangeTable(void) { this->self.ref = nullptr; }

	_20548c650_RangeTable(void) { this->self = jule::Ref<_20548c650_RangeTable>::make(this, nullptr); }

	inline bool operator==(const _20548c650_RangeTable &_Src) const {
		return 
			this->_field_r16 == _Src._field_r16 &&
			this->_field_r32 == _Src._field_r32 &&
			this->_field_latin_offset == _Src._field_latin_offset;
	}

	inline bool operator!=(const _20548c650_RangeTable &_Src) const { return !this->operator==(_Src); }
};


struct _2062e3ad2_accept_range {
	jule::Ref<_2062e3ad2_accept_range> self{};

	jule::U8 _field_lo{jule::U8()};
	jule::U8 _field_hi{jule::U8()};


	_2062e3ad2_accept_range(jule::U8 __param_lo, jule::U8 __param_hi) {
		this->self = jule::Ref<_2062e3ad2_accept_range>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
	}

	~_2062e3ad2_accept_range(void) { this->self.ref = nullptr; }

	_2062e3ad2_accept_range(void) { this->self = jule::Ref<_2062e3ad2_accept_range>::make(this, nullptr); }

	inline bool operator==(const _2062e3ad2_accept_range &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	inline bool operator!=(const _2062e3ad2_accept_range &_Src) const { return !this->operator==(_Src); }
};


struct _20542560a_Token {
	jule::Ref<_20542560a_Token> self{};

	jule::Ref<_2053bdb25_File> _field_file{jule::Ref<_2053bdb25_File>()};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_kind{jule::Str()};
	jule::Uint _field_id{0LLU};


	_20542560a_Token(jule::Ref<_2053bdb25_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_20542560a_Token>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_20542560a_Token(void) { this->self.ref = nullptr; }

	_20542560a_Token(void) { this->self = jule::Ref<_20542560a_Token>::make(this, nullptr); }

	inline jule::Int _method_prec(void);


	inline bool operator==(const _20542560a_Token &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _20542560a_Token &_Src) const { return !this->operator==(_Src); }
};


struct _2053bdb25_File {
	jule::Ref<_2053bdb25_File> self{};

	jule::Slice<jule::U8> _field_data{jule::Slice<jule::U8>()};
	jule::Str _field__path{jule::Str()};
	jule::Slice<_20542560a_Token> _field__tokens{jule::Slice<_20542560a_Token>()};


	_2053bdb25_File(jule::Slice<jule::U8> __param_data, jule::Str __param__path, jule::Slice<_20542560a_Token> __param__tokens) {
		this->self = jule::Ref<_2053bdb25_File>::make(this, nullptr);

		this->_field_data = __param_data;
		this->_field__path = __param__path;
		this->_field__tokens = __param__tokens;
	}

	~_2053bdb25_File(void) { this->self.ref = nullptr; }

	_2053bdb25_File(void) { this->self = jule::Ref<_2053bdb25_File>::make(this, nullptr); }

	inline jule::Bool _method_is_ok(void);


	inline void _method_fill(jule::Slice<jule::U8>);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline jule::Slice<_20542560a_Token> _method_tokens(void);


	inline jule::Str _method_get_row(jule::Int);


	inline bool operator==(const _2053bdb25_File &_Src) const {
		return 
			this->_field_data == _Src._field_data &&
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	inline bool operator!=(const _2053bdb25_File &_Src) const { return !this->operator==(_Src); }
};


struct _20547ded2_KindPair {
	jule::Ref<_20547ded2_KindPair> self{};

	jule::Str _field_kind{jule::Str("::", 2)};
	jule::Uint _field_id{0LLU};


	_20547ded2_KindPair(jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_20547ded2_KindPair>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_20547ded2_KindPair(void) { this->self.ref = nullptr; }

	_20547ded2_KindPair(void) { this->self = jule::Ref<_20547ded2_KindPair>::make(this, nullptr); }

	inline bool operator==(const _20547ded2_KindPair &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _20547ded2_KindPair &_Src) const { return !this->operator==(_Src); }
};


struct _20547ded2_Lex {
	jule::Ref<_20547ded2_Lex> self{};

	jule::Slice<_20542560a_Token> _field_tokens{jule::Slice<_20542560a_Token>()};
	jule::Ref<_2053bdb25_File> _field_file{jule::Ref<_2053bdb25_File>()};
	jule::Int _field_pos{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Int _field_row{jule::Int()};
	jule::Slice<_20377124e_Log> _field_errors{jule::Slice<_20377124e_Log>()};


	_20547ded2_Lex(jule::Slice<_20542560a_Token> __param_tokens, jule::Ref<_2053bdb25_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_20377124e_Log> __param_errors) {
		this->self = jule::Ref<_20547ded2_Lex>::make(this, nullptr);

		this->_field_tokens = __param_tokens;
		this->_field_file = __param_file;
		this->_field_pos = __param_pos;
		this->_field_column = __param_column;
		this->_field_row = __param_row;
		this->_field_errors = __param_errors;
	}

	~_20547ded2_Lex(void) { this->self.ref = nullptr; }

	_20547ded2_Lex(void) { this->self = jule::Ref<_20547ded2_Lex>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_20542560a_Token,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_20542560a_Token&);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>);


	inline jule::Str _method_lex_str(void);


	inline jule::Bool _method_is_first_token_of_line(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>,jule::Str,jule::Uint,_20542560a_Token&);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_20542560a_Token&);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>,_20542560a_Token&);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>,_20542560a_Token&);


	inline _20542560a_Token _method_token(void);


	inline bool operator==(const _20547ded2_Lex &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _20547ded2_Lex &_Src) const { return !this->operator==(_Src); }
};


struct _20521102d_Ast {
	jule::Ref<_20521102d_Ast> self{};

	jule::Ref<_2053bdb25_File> _field_file{jule::Ref<_2053bdb25_File>()};
	jule::Slice<jule::Ref<_2053703bd_Directive>> _field_top_directives{jule::Slice<jule::Ref<_2053703bd_Directive>>()};
	jule::Slice<jule::Ref<_2053703bd_UseDecl>> _field_use_decls{jule::Slice<jule::Ref<_2053703bd_UseDecl>>()};
	jule::Slice<jule::Ref<_2053703bd_Impl>> _field_impls{jule::Slice<jule::Ref<_2053703bd_Impl>>()};
	jule::Slice<jule::Ref<_2053703bd_Comment>> _field_comments{jule::Slice<jule::Ref<_2053703bd_Comment>>()};
	jule::Slice<_2053703bd_Node> _field_decls{jule::Slice<_2053703bd_Node>()};


	_20521102d_Ast(jule::Ref<_2053bdb25_File> __param_file, jule::Slice<jule::Ref<_2053703bd_Directive>> __param_top_directives, jule::Slice<jule::Ref<_2053703bd_UseDecl>> __param_use_decls, jule::Slice<jule::Ref<_2053703bd_Impl>> __param_impls, jule::Slice<jule::Ref<_2053703bd_Comment>> __param_comments, jule::Slice<_2053703bd_Node> __param_decls) {
		this->self = jule::Ref<_20521102d_Ast>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_top_directives = __param_top_directives;
		this->_field_use_decls = __param_use_decls;
		this->_field_impls = __param_impls;
		this->_field_comments = __param_comments;
		this->_field_decls = __param_decls;
	}

	~_20521102d_Ast(void) { this->self.ref = nullptr; }

	_20521102d_Ast(void) { this->self = jule::Ref<_20521102d_Ast>::make(this, nullptr); }

	inline bool operator==(const _20521102d_Ast &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	inline bool operator!=(const _20521102d_Ast &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_Node {
	jule::Ref<_2053703bd_Node> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Any _field_data{jule::Any()};


	_2053703bd_Node(_20542560a_Token __param_token, jule::Any __param_data) {
		this->self = jule::Ref<_2053703bd_Node>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_data = __param_data;
	}

	~_2053703bd_Node(void) { this->self.ref = nullptr; }

	_2053703bd_Node(void) { this->self = jule::Ref<_2053703bd_Node>::make(this, nullptr); }

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(const _2053703bd_Node &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _2053703bd_Node &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_CommentGroup {
	jule::Ref<_2053703bd_CommentGroup> self{};

	jule::Slice<jule::Ref<_2053703bd_Comment>> _field_comments{jule::Slice<jule::Ref<_2053703bd_Comment>>()};


	_2053703bd_CommentGroup(jule::Slice<jule::Ref<_2053703bd_Comment>> __param_comments) {
		this->self = jule::Ref<_2053703bd_CommentGroup>::make(this, nullptr);

		this->_field_comments = __param_comments;
	}

	~_2053703bd_CommentGroup(void) { this->self.ref = nullptr; }

	_2053703bd_CommentGroup(void) { this->self = jule::Ref<_2053703bd_CommentGroup>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_CommentGroup &_Src) const {
		return 
			this->_field_comments == _Src._field_comments;
	}

	inline bool operator!=(const _2053703bd_CommentGroup &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_Comment {
	jule::Ref<_2053703bd_Comment> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_text{jule::Str()};


	_2053703bd_Comment(_20542560a_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_2053703bd_Comment>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_2053703bd_Comment(void) { this->self.ref = nullptr; }

	_2053703bd_Comment(void) { this->self = jule::Ref<_2053703bd_Comment>::make(this, nullptr); }

	inline jule::Bool _method_is_directive(void);


	inline bool operator==(const _2053703bd_Comment &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _2053703bd_Comment &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_Directive {
	jule::Ref<_2053703bd_Directive> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_tag{jule::Str()};
	jule::Slice<jule::Str> _field_args{jule::Slice<jule::Str>()};


	_2053703bd_Directive(_20542560a_Token __param_token, jule::Str __param_tag, jule::Slice<jule::Str> __param_args) {
		this->self = jule::Ref<_2053703bd_Directive>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_tag = __param_tag;
		this->_field_args = __param_args;
	}

	~_2053703bd_Directive(void) { this->self.ref = nullptr; }

	_2053703bd_Directive(void) { this->self = jule::Ref<_2053703bd_Directive>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_Directive &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _2053703bd_Directive &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_TypeDecl {
	jule::Ref<_2053703bd_TypeDecl> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Any _field_kind{jule::Any()};


	_2053703bd_TypeDecl(_20542560a_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_2053703bd_TypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_2053703bd_TypeDecl(void) { this->self.ref = nullptr; }

	_2053703bd_TypeDecl(void) { this->self = jule::Ref<_2053703bd_TypeDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_TypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _2053703bd_TypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_IdentTypeDecl {
	jule::Ref<_2053703bd_IdentTypeDecl> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_2053703bd_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_2053703bd_TypeDecl>>()};


	_2053703bd_IdentTypeDecl(_20542560a_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_2053703bd_TypeDecl>> __param_generics) {
		this->self = jule::Ref<_2053703bd_IdentTypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_generics = __param_generics;
	}

	~_2053703bd_IdentTypeDecl(void) { this->self.ref = nullptr; }

	_2053703bd_IdentTypeDecl(void) { this->self = jule::Ref<_2053703bd_IdentTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(const _2053703bd_IdentTypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _2053703bd_IdentTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_NamespaceTypeDecl {
	jule::Ref<_2053703bd_NamespaceTypeDecl> self{};

	jule::Slice<_20542560a_Token> _field_idents{jule::Slice<_20542560a_Token>()};
	jule::Ref<_2053703bd_IdentTypeDecl> _field_kind{jule::Ref<_2053703bd_IdentTypeDecl>()};


	_2053703bd_NamespaceTypeDecl(jule::Slice<_20542560a_Token> __param_idents, jule::Ref<_2053703bd_IdentTypeDecl> __param_kind) {
		this->self = jule::Ref<_2053703bd_NamespaceTypeDecl>::make(this, nullptr);

		this->_field_idents = __param_idents;
		this->_field_kind = __param_kind;
	}

	~_2053703bd_NamespaceTypeDecl(void) { this->self.ref = nullptr; }

	_2053703bd_NamespaceTypeDecl(void) { this->self = jule::Ref<_2053703bd_NamespaceTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_NamespaceTypeDecl &_Src) const {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _2053703bd_NamespaceTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_RefTypeDecl {
	jule::Ref<_2053703bd_RefTypeDecl> self{};

	jule::Ref<_2053703bd_TypeDecl> _field_elem{jule::Ref<_2053703bd_TypeDecl>()};


	_2053703bd_RefTypeDecl(jule::Ref<_2053703bd_TypeDecl> __param_elem) {
		this->self = jule::Ref<_2053703bd_RefTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_2053703bd_RefTypeDecl(void) { this->self.ref = nullptr; }

	_2053703bd_RefTypeDecl(void) { this->self = jule::Ref<_2053703bd_RefTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_RefTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _2053703bd_RefTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_SlcTypeDecl {
	jule::Ref<_2053703bd_SlcTypeDecl> self{};

	jule::Ref<_2053703bd_TypeDecl> _field_elem{jule::Ref<_2053703bd_TypeDecl>()};


	_2053703bd_SlcTypeDecl(jule::Ref<_2053703bd_TypeDecl> __param_elem) {
		this->self = jule::Ref<_2053703bd_SlcTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_2053703bd_SlcTypeDecl(void) { this->self.ref = nullptr; }

	_2053703bd_SlcTypeDecl(void) { this->self = jule::Ref<_2053703bd_SlcTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_SlcTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _2053703bd_SlcTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_TupleTypeDecl {
	jule::Ref<_2053703bd_TupleTypeDecl> self{};

	jule::Slice<jule::Ref<_2053703bd_TypeDecl>> _field_types{jule::Slice<jule::Ref<_2053703bd_TypeDecl>>()};


	_2053703bd_TupleTypeDecl(jule::Slice<jule::Ref<_2053703bd_TypeDecl>> __param_types) {
		this->self = jule::Ref<_2053703bd_TupleTypeDecl>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_2053703bd_TupleTypeDecl(void) { this->self.ref = nullptr; }

	_2053703bd_TupleTypeDecl(void) { this->self = jule::Ref<_2053703bd_TupleTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_TupleTypeDecl &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _2053703bd_TupleTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_PtrTypeDecl {
	jule::Ref<_2053703bd_PtrTypeDecl> self{};

	jule::Ref<_2053703bd_TypeDecl> _field_elem{jule::Ref<_2053703bd_TypeDecl>()};


	_2053703bd_PtrTypeDecl(jule::Ref<_2053703bd_TypeDecl> __param_elem) {
		this->self = jule::Ref<_2053703bd_PtrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_2053703bd_PtrTypeDecl(void) { this->self.ref = nullptr; }

	_2053703bd_PtrTypeDecl(void) { this->self = jule::Ref<_2053703bd_PtrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _2053703bd_PtrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _2053703bd_PtrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_ArrTypeDecl {
	jule::Ref<_2053703bd_ArrTypeDecl> self{};

	jule::Ref<_2053703bd_TypeDecl> _field_elem{jule::Ref<_2053703bd_TypeDecl>()};
	jule::Ref<_2053703bd_Expr> _field_size{jule::Ref<_2053703bd_Expr>()};


	_2053703bd_ArrTypeDecl(jule::Ref<_2053703bd_TypeDecl> __param_elem, jule::Ref<_2053703bd_Expr> __param_size) {
		this->self = jule::Ref<_2053703bd_ArrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
		this->_field_size = __param_size;
	}

	~_2053703bd_ArrTypeDecl(void) { this->self.ref = nullptr; }

	_2053703bd_ArrTypeDecl(void) { this->self = jule::Ref<_2053703bd_ArrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(const _2053703bd_ArrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _2053703bd_ArrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_MapTypeDecl {
	jule::Ref<_2053703bd_MapTypeDecl> self{};

	jule::Ref<_2053703bd_TypeDecl> _field_key{jule::Ref<_2053703bd_TypeDecl>()};
	jule::Ref<_2053703bd_TypeDecl> _field_val{jule::Ref<_2053703bd_TypeDecl>()};


	_2053703bd_MapTypeDecl(jule::Ref<_2053703bd_TypeDecl> __param_key, jule::Ref<_2053703bd_TypeDecl> __param_val) {
		this->self = jule::Ref<_2053703bd_MapTypeDecl>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_2053703bd_MapTypeDecl(void) { this->self.ref = nullptr; }

	_2053703bd_MapTypeDecl(void) { this->self = jule::Ref<_2053703bd_MapTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_MapTypeDecl &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _2053703bd_MapTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_RetTypeDecl {
	jule::Ref<_2053703bd_RetTypeDecl> self{};

	jule::Ref<_2053703bd_TypeDecl> _field_kind{jule::Ref<_2053703bd_TypeDecl>()};
	jule::Slice<_20542560a_Token> _field_idents{jule::Slice<_20542560a_Token>()};


	_2053703bd_RetTypeDecl(jule::Ref<_2053703bd_TypeDecl> __param_kind, jule::Slice<_20542560a_Token> __param_idents) {
		this->self = jule::Ref<_2053703bd_RetTypeDecl>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_2053703bd_RetTypeDecl(void) { this->self.ref = nullptr; }

	_2053703bd_RetTypeDecl(void) { this->self = jule::Ref<_2053703bd_RetTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_RetTypeDecl &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _2053703bd_RetTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_Expr {
	jule::Ref<_2053703bd_Expr> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Any _field_kind{jule::Any()};


	_2053703bd_Expr(_20542560a_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_2053703bd_Expr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_2053703bd_Expr(void) { this->self.ref = nullptr; }

	_2053703bd_Expr(void) { this->self = jule::Ref<_2053703bd_Expr>::make(this, nullptr); }

	inline jule::Bool _method_is_fn_call(void);


	inline bool operator==(const _2053703bd_Expr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _2053703bd_Expr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_TupleExpr {
	jule::Ref<_2053703bd_TupleExpr> self{};

	jule::Slice<jule::Ref<_2053703bd_Expr>> _field_expr{jule::Slice<jule::Ref<_2053703bd_Expr>>()};


	_2053703bd_TupleExpr(jule::Slice<jule::Ref<_2053703bd_Expr>> __param_expr) {
		this->self = jule::Ref<_2053703bd_TupleExpr>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_2053703bd_TupleExpr(void) { this->self.ref = nullptr; }

	_2053703bd_TupleExpr(void) { this->self = jule::Ref<_2053703bd_TupleExpr>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_TupleExpr &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2053703bd_TupleExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_LitExpr {
	jule::Ref<_2053703bd_LitExpr> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_value{jule::Str()};


	_2053703bd_LitExpr(_20542560a_Token __param_token, jule::Str __param_value) {
		this->self = jule::Ref<_2053703bd_LitExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_value = __param_value;
	}

	~_2053703bd_LitExpr(void) { this->self.ref = nullptr; }

	_2053703bd_LitExpr(void) { this->self = jule::Ref<_2053703bd_LitExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(const _2053703bd_LitExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _2053703bd_LitExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_UnsafeExpr {
	jule::Ref<_2053703bd_UnsafeExpr> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Any _field_expr{jule::Any()};


	_2053703bd_UnsafeExpr(_20542560a_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_2053703bd_UnsafeExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_2053703bd_UnsafeExpr(void) { this->self.ref = nullptr; }

	_2053703bd_UnsafeExpr(void) { this->self = jule::Ref<_2053703bd_UnsafeExpr>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_UnsafeExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2053703bd_UnsafeExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_IdentExpr {
	jule::Ref<_2053703bd_IdentExpr> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};


	_2053703bd_IdentExpr(_20542560a_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked) {
		this->self = jule::Ref<_2053703bd_IdentExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
	}

	~_2053703bd_IdentExpr(void) { this->self.ref = nullptr; }

	_2053703bd_IdentExpr(void) { this->self = jule::Ref<_2053703bd_IdentExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline bool operator==(const _2053703bd_IdentExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	inline bool operator!=(const _2053703bd_IdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_UnaryExpr {
	jule::Ref<_2053703bd_UnaryExpr> self{};

	_20542560a_Token _field_op{_20542560a_Token()};
	jule::Any _field_expr{jule::Any()};


	_2053703bd_UnaryExpr(_20542560a_Token __param_op, jule::Any __param_expr) {
		this->self = jule::Ref<_2053703bd_UnaryExpr>::make(this, nullptr);

		this->_field_op = __param_op;
		this->_field_expr = __param_expr;
	}

	~_2053703bd_UnaryExpr(void) { this->self.ref = nullptr; }

	_2053703bd_UnaryExpr(void) { this->self = jule::Ref<_2053703bd_UnaryExpr>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_UnaryExpr &_Src) const {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2053703bd_UnaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_VariadicExpr {
	jule::Ref<_2053703bd_VariadicExpr> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Any _field_expr{jule::Any()};


	_2053703bd_VariadicExpr(_20542560a_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_2053703bd_VariadicExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_2053703bd_VariadicExpr(void) { this->self.ref = nullptr; }

	_2053703bd_VariadicExpr(void) { this->self = jule::Ref<_2053703bd_VariadicExpr>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_VariadicExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2053703bd_VariadicExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_CastExpr {
	jule::Ref<_2053703bd_CastExpr> self{};

	jule::Ref<_2053703bd_TypeDecl> _field_kind{jule::Ref<_2053703bd_TypeDecl>()};
	jule::Any _field_expr{jule::Any()};


	_2053703bd_CastExpr(jule::Ref<_2053703bd_TypeDecl> __param_kind, jule::Any __param_expr) {
		this->self = jule::Ref<_2053703bd_CastExpr>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_2053703bd_CastExpr(void) { this->self.ref = nullptr; }

	_2053703bd_CastExpr(void) { this->self = jule::Ref<_2053703bd_CastExpr>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_CastExpr &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2053703bd_CastExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_NsSelectionExpr {
	jule::Ref<_2053703bd_NsSelectionExpr> self{};

	jule::Slice<_20542560a_Token> _field_ns{jule::Slice<_20542560a_Token>()};
	_20542560a_Token _field_ident{_20542560a_Token()};


	_2053703bd_NsSelectionExpr(jule::Slice<_20542560a_Token> __param_ns, _20542560a_Token __param_ident) {
		this->self = jule::Ref<_2053703bd_NsSelectionExpr>::make(this, nullptr);

		this->_field_ns = __param_ns;
		this->_field_ident = __param_ident;
	}

	~_2053703bd_NsSelectionExpr(void) { this->self.ref = nullptr; }

	_2053703bd_NsSelectionExpr(void) { this->self = jule::Ref<_2053703bd_NsSelectionExpr>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_NsSelectionExpr &_Src) const {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2053703bd_NsSelectionExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_SubIdentExpr {
	jule::Ref<_2053703bd_SubIdentExpr> self{};

	jule::Bool _field_is_self{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	_20542560a_Token _field_ident{_20542560a_Token()};


	_2053703bd_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _20542560a_Token __param_ident) {
		this->self = jule::Ref<_2053703bd_SubIdentExpr>::make(this, nullptr);

		this->_field_is_self = __param_is_self;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_2053703bd_SubIdentExpr(void) { this->self.ref = nullptr; }

	_2053703bd_SubIdentExpr(void) { this->self = jule::Ref<_2053703bd_SubIdentExpr>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_SubIdentExpr &_Src) const {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2053703bd_SubIdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_BinopExpr {
	jule::Ref<_2053703bd_BinopExpr> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	_20542560a_Token _field_op{_20542560a_Token()};


	_2053703bd_BinopExpr(jule::Any __param_left, jule::Any __param_right, _20542560a_Token __param_op) {
		this->self = jule::Ref<_2053703bd_BinopExpr>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_2053703bd_BinopExpr(void) { this->self.ref = nullptr; }

	_2053703bd_BinopExpr(void) { this->self = jule::Ref<_2053703bd_BinopExpr>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_BinopExpr &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _2053703bd_BinopExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_FnCallExpr {
	jule::Ref<_2053703bd_FnCallExpr> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Ref<_2053703bd_Expr> _field_expr{jule::Ref<_2053703bd_Expr>()};
	jule::Slice<jule::Ref<_2053703bd_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_2053703bd_TypeDecl>>()};
	jule::Slice<jule::Ref<_2053703bd_Expr>> _field_args{jule::Slice<jule::Ref<_2053703bd_Expr>>()};
	jule::Bool _field_concurrent{jule::Bool()};


	_2053703bd_FnCallExpr(_20542560a_Token __param_token, jule::Ref<_2053703bd_Expr> __param_expr, jule::Slice<jule::Ref<_2053703bd_TypeDecl>> __param_generics, jule::Slice<jule::Ref<_2053703bd_Expr>> __param_args, jule::Bool __param_concurrent) {
		this->self = jule::Ref<_2053703bd_FnCallExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_generics = __param_generics;
		this->_field_args = __param_args;
		this->_field_concurrent = __param_concurrent;
	}

	~_2053703bd_FnCallExpr(void) { this->self.ref = nullptr; }

	_2053703bd_FnCallExpr(void) { this->self = jule::Ref<_2053703bd_FnCallExpr>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_FnCallExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_concurrent == _Src._field_concurrent;
	}

	inline bool operator!=(const _2053703bd_FnCallExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_FieldExprPair {
	jule::Ref<_2053703bd_FieldExprPair> self{};

	_20542560a_Token _field_field{_20542560a_Token()};
	jule::Any _field_expr{jule::Any()};


	_2053703bd_FieldExprPair(_20542560a_Token __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_2053703bd_FieldExprPair>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_2053703bd_FieldExprPair(void) { this->self.ref = nullptr; }

	_2053703bd_FieldExprPair(void) { this->self = jule::Ref<_2053703bd_FieldExprPair>::make(this, nullptr); }

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(const _2053703bd_FieldExprPair &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2053703bd_FieldExprPair &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_StructLit {
	jule::Ref<_2053703bd_StructLit> self{};

	jule::Ref<_2053703bd_TypeDecl> _field_kind{jule::Ref<_2053703bd_TypeDecl>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_2053703bd_StructLit(jule::Ref<_2053703bd_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_2053703bd_StructLit>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_exprs = __param_exprs;
	}

	~_2053703bd_StructLit(void) { this->self.ref = nullptr; }

	_2053703bd_StructLit(void) { this->self = jule::Ref<_2053703bd_StructLit>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_StructLit &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _2053703bd_StructLit &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_BraceLit {
	jule::Ref<_2053703bd_BraceLit> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_2053703bd_BraceLit(_20542560a_Token __param_token, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_2053703bd_BraceLit>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_exprs = __param_exprs;
	}

	~_2053703bd_BraceLit(void) { this->self.ref = nullptr; }

	_2053703bd_BraceLit(void) { this->self = jule::Ref<_2053703bd_BraceLit>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _2053703bd_BraceLit &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _2053703bd_BraceLit &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_KeyValPair {
	jule::Ref<_2053703bd_KeyValPair> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};
	_20542560a_Token _field_colon{_20542560a_Token()};


	_2053703bd_KeyValPair(jule::Any __param_key, jule::Any __param_val, _20542560a_Token __param_colon) {
		this->self = jule::Ref<_2053703bd_KeyValPair>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
		this->_field_colon = __param_colon;
	}

	~_2053703bd_KeyValPair(void) { this->self.ref = nullptr; }

	_2053703bd_KeyValPair(void) { this->self = jule::Ref<_2053703bd_KeyValPair>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_KeyValPair &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	inline bool operator!=(const _2053703bd_KeyValPair &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_SliceExpr {
	jule::Ref<_2053703bd_SliceExpr> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_2053703bd_SliceExpr(_20542560a_Token __param_token, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_2053703bd_SliceExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_elems = __param_elems;
	}

	~_2053703bd_SliceExpr(void) { this->self.ref = nullptr; }

	_2053703bd_SliceExpr(void) { this->self = jule::Ref<_2053703bd_SliceExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _2053703bd_SliceExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _2053703bd_SliceExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_IndexingExpr {
	jule::Ref<_2053703bd_IndexingExpr> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_2053703bd_IndexingExpr(_20542560a_Token __param_token, jule::Any __param_expr, jule::Any __param_index) {
		this->self = jule::Ref<_2053703bd_IndexingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_2053703bd_IndexingExpr(void) { this->self.ref = nullptr; }

	_2053703bd_IndexingExpr(void) { this->self = jule::Ref<_2053703bd_IndexingExpr>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_IndexingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _2053703bd_IndexingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_SlicingExpr {
	jule::Ref<_2053703bd_SlicingExpr> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_start{jule::Any()};
	jule::Any _field_to{jule::Any()};


	_2053703bd_SlicingExpr(_20542560a_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to) {
		this->self = jule::Ref<_2053703bd_SlicingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_start = __param_start;
		this->_field_to = __param_to;
	}

	~_2053703bd_SlicingExpr(void) { this->self.ref = nullptr; }

	_2053703bd_SlicingExpr(void) { this->self = jule::Ref<_2053703bd_SlicingExpr>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_SlicingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _2053703bd_SlicingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_GenericDecl {
	jule::Ref<_2053703bd_GenericDecl> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};


	_2053703bd_GenericDecl(_20542560a_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_2053703bd_GenericDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_2053703bd_GenericDecl(void) { this->self.ref = nullptr; }

	_2053703bd_GenericDecl(void) { this->self = jule::Ref<_2053703bd_GenericDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_GenericDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2053703bd_GenericDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_LabelSt {
	jule::Ref<_2053703bd_LabelSt> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};


	_2053703bd_LabelSt(_20542560a_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_2053703bd_LabelSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_2053703bd_LabelSt(void) { this->self.ref = nullptr; }

	_2053703bd_LabelSt(void) { this->self = jule::Ref<_2053703bd_LabelSt>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_LabelSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2053703bd_LabelSt &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_GotoSt {
	jule::Ref<_2053703bd_GotoSt> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	_20542560a_Token _field_label{_20542560a_Token()};


	_2053703bd_GotoSt(_20542560a_Token __param_token, _20542560a_Token __param_label) {
		this->self = jule::Ref<_2053703bd_GotoSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_2053703bd_GotoSt(void) { this->self.ref = nullptr; }

	_2053703bd_GotoSt(void) { this->self = jule::Ref<_2053703bd_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_GotoSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _2053703bd_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_FallSt {
	jule::Ref<_2053703bd_FallSt> self{};

	_20542560a_Token _field_token{_20542560a_Token()};


	_2053703bd_FallSt(_20542560a_Token __param_token) {
		this->self = jule::Ref<_2053703bd_FallSt>::make(this, nullptr);

		this->_field_token = __param_token;
	}

	~_2053703bd_FallSt(void) { this->self.ref = nullptr; }

	_2053703bd_FallSt(void) { this->self = jule::Ref<_2053703bd_FallSt>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_FallSt &_Src) const {
		return 
			this->_field_token == _Src._field_token;
	}

	inline bool operator!=(const _2053703bd_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_AssignLeft {
	jule::Ref<_2053703bd_AssignLeft> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_2053703bd_Expr> _field_expr{jule::Ref<_2053703bd_Expr>()};


	_2053703bd_AssignLeft(_20542560a_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ref<_2053703bd_Expr> __param_expr) {
		this->self = jule::Ref<_2053703bd_AssignLeft>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_2053703bd_AssignLeft(void) { this->self.ref = nullptr; }

	_2053703bd_AssignLeft(void) { this->self = jule::Ref<_2053703bd_AssignLeft>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_AssignLeft &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2053703bd_AssignLeft &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_AssignSt {
	jule::Ref<_2053703bd_AssignSt> self{};

	jule::Bool _field_declarative{jule::Bool()};
	_20542560a_Token _field_setter{_20542560a_Token()};
	jule::Slice<jule::Ref<_2053703bd_AssignLeft>> _field_left{jule::Slice<jule::Ref<_2053703bd_AssignLeft>>()};
	jule::Ref<_2053703bd_Expr> _field_right{jule::Ref<_2053703bd_Expr>()};


	_2053703bd_AssignSt(jule::Bool __param_declarative, _20542560a_Token __param_setter, jule::Slice<jule::Ref<_2053703bd_AssignLeft>> __param_left, jule::Ref<_2053703bd_Expr> __param_right) {
		this->self = jule::Ref<_2053703bd_AssignSt>::make(this, nullptr);

		this->_field_declarative = __param_declarative;
		this->_field_setter = __param_setter;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_2053703bd_AssignSt(void) { this->self.ref = nullptr; }

	_2053703bd_AssignSt(void) { this->self = jule::Ref<_2053703bd_AssignSt>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_AssignSt &_Src) const {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _2053703bd_AssignSt &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_ScopeTree {
	jule::Ref<_2053703bd_ScopeTree> self{};

	jule::Ref<_2053703bd_ScopeTree> _field_parent{jule::Ref<_2053703bd_ScopeTree>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_2053703bd_ScopeTree(jule::Ref<_2053703bd_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts) {
		this->self = jule::Ref<_2053703bd_ScopeTree>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_2053703bd_ScopeTree(void) { this->self.ref = nullptr; }

	_2053703bd_ScopeTree(void) { this->self = jule::Ref<_2053703bd_ScopeTree>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_ScopeTree &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _2053703bd_ScopeTree &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_ParamDecl {
	jule::Ref<_2053703bd_ParamDecl> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_2053703bd_TypeDecl> _field_kind{jule::Ref<_2053703bd_TypeDecl>()};
	jule::Str _field_ident{jule::Str()};


	_2053703bd_ParamDecl(_20542560a_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_2053703bd_TypeDecl> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_2053703bd_ParamDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_2053703bd_ParamDecl(void) { this->self.ref = nullptr; }

	_2053703bd_ParamDecl(void) { this->self = jule::Ref<_2053703bd_ParamDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _2053703bd_ParamDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2053703bd_ParamDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_FnDecl {
	jule::Ref<_2053703bd_FnDecl> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_2053703bd_Directive>> _field_directives{jule::Slice<jule::Ref<_2053703bd_Directive>>()};
	jule::Ref<_2053703bd_CommentGroup> _field_doc_comments{jule::Ref<_2053703bd_CommentGroup>()};
	jule::Ref<_2053703bd_ScopeTree> _field_scope{jule::Ref<_2053703bd_ScopeTree>()};
	jule::Slice<jule::Ref<_2053703bd_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_2053703bd_GenericDecl>>()};
	jule::Ref<_2053703bd_RetTypeDecl> _field_result{jule::Ref<_2053703bd_RetTypeDecl>()};
	jule::Slice<jule::Ref<_2053703bd_ParamDecl>> _field_params{jule::Slice<jule::Ref<_2053703bd_ParamDecl>>()};


	_2053703bd_FnDecl(_20542560a_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_2053703bd_Directive>> __param_directives, jule::Ref<_2053703bd_CommentGroup> __param_doc_comments, jule::Ref<_2053703bd_ScopeTree> __param_scope, jule::Slice<jule::Ref<_2053703bd_GenericDecl>> __param_generics, jule::Ref<_2053703bd_RetTypeDecl> __param_result, jule::Slice<jule::Ref<_2053703bd_ParamDecl>> __param_params) {
		this->self = jule::Ref<_2053703bd_FnDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
	}

	~_2053703bd_FnDecl(void) { this->self.ref = nullptr; }

	_2053703bd_FnDecl(void) { this->self = jule::Ref<_2053703bd_FnDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_anon(void);


	inline bool operator==(const _2053703bd_FnDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	inline bool operator!=(const _2053703bd_FnDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_VarDecl {
	jule::Ref<_2053703bd_VarDecl> self{};

	jule::Ref<_2053703bd_ScopeTree> _field_scope{jule::Ref<_2053703bd_ScopeTree>()};
	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Slice<jule::Ref<_2053703bd_Directive>> _field_directives{jule::Slice<jule::Ref<_2053703bd_Directive>>()};
	jule::Ref<_2053703bd_CommentGroup> _field_doc_comments{jule::Ref<_2053703bd_CommentGroup>()};
	jule::Ref<_2053703bd_TypeDecl> _field_kind{jule::Ref<_2053703bd_TypeDecl>()};
	jule::Ref<_2053703bd_Expr> _field_expr{jule::Ref<_2053703bd_Expr>()};


	_2053703bd_VarDecl(jule::Ref<_2053703bd_ScopeTree> __param_scope, _20542560a_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ref<_2053703bd_Directive>> __param_directives, jule::Ref<_2053703bd_CommentGroup> __param_doc_comments, jule::Ref<_2053703bd_TypeDecl> __param_kind, jule::Ref<_2053703bd_Expr> __param_expr) {
		this->self = jule::Ref<_2053703bd_VarDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_constant = __param_constant;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_2053703bd_VarDecl(void) { this->self.ref = nullptr; }

	_2053703bd_VarDecl(void) { this->self = jule::Ref<_2053703bd_VarDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_VarDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2053703bd_VarDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_RetSt {
	jule::Ref<_2053703bd_RetSt> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Ref<_2053703bd_Expr> _field_expr{jule::Ref<_2053703bd_Expr>()};


	_2053703bd_RetSt(_20542560a_Token __param_token, jule::Ref<_2053703bd_Expr> __param_expr) {
		this->self = jule::Ref<_2053703bd_RetSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_2053703bd_RetSt(void) { this->self.ref = nullptr; }

	_2053703bd_RetSt(void) { this->self = jule::Ref<_2053703bd_RetSt>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_RetSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2053703bd_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_Iter {
	jule::Ref<_2053703bd_Iter> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Any _field_kind{jule::Any()};
	jule::Ref<_2053703bd_ScopeTree> _field_scope{jule::Ref<_2053703bd_ScopeTree>()};


	_2053703bd_Iter(_20542560a_Token __param_token, jule::Any __param_kind, jule::Ref<_2053703bd_ScopeTree> __param_scope) {
		this->self = jule::Ref<_2053703bd_Iter>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
		this->_field_scope = __param_scope;
	}

	~_2053703bd_Iter(void) { this->self.ref = nullptr; }

	_2053703bd_Iter(void) { this->self = jule::Ref<_2053703bd_Iter>::make(this, nullptr); }

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(const _2053703bd_Iter &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _2053703bd_Iter &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_WhileKind {
	jule::Ref<_2053703bd_WhileKind> self{};

	jule::Ref<_2053703bd_Expr> _field_expr{jule::Ref<_2053703bd_Expr>()};
	jule::Any _field_next{jule::Any()};
	_20542560a_Token _field_next_token{_20542560a_Token()};


	_2053703bd_WhileKind(jule::Ref<_2053703bd_Expr> __param_expr, jule::Any __param_next, _20542560a_Token __param_next_token) {
		this->self = jule::Ref<_2053703bd_WhileKind>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_next_token = __param_next_token;
	}

	~_2053703bd_WhileKind(void) { this->self.ref = nullptr; }

	_2053703bd_WhileKind(void) { this->self = jule::Ref<_2053703bd_WhileKind>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _2053703bd_WhileKind &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	inline bool operator!=(const _2053703bd_WhileKind &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_RangeKind {
	jule::Ref<_2053703bd_RangeKind> self{};

	_20542560a_Token _field_in_token{_20542560a_Token()};
	jule::Ref<_2053703bd_Expr> _field_expr{jule::Ref<_2053703bd_Expr>()};
	jule::Ref<_2053703bd_VarDecl> _field_key_a{jule::Ref<_2053703bd_VarDecl>()};
	jule::Ref<_2053703bd_VarDecl> _field_key_b{jule::Ref<_2053703bd_VarDecl>()};


	_2053703bd_RangeKind(_20542560a_Token __param_in_token, jule::Ref<_2053703bd_Expr> __param_expr, jule::Ref<_2053703bd_VarDecl> __param_key_a, jule::Ref<_2053703bd_VarDecl> __param_key_b) {
		this->self = jule::Ref<_2053703bd_RangeKind>::make(this, nullptr);

		this->_field_in_token = __param_in_token;
		this->_field_expr = __param_expr;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_2053703bd_RangeKind(void) { this->self.ref = nullptr; }

	_2053703bd_RangeKind(void) { this->self = jule::Ref<_2053703bd_RangeKind>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_RangeKind &_Src) const {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _2053703bd_RangeKind &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_BreakSt {
	jule::Ref<_2053703bd_BreakSt> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	_20542560a_Token _field_label{_20542560a_Token()};


	_2053703bd_BreakSt(_20542560a_Token __param_token, _20542560a_Token __param_label) {
		this->self = jule::Ref<_2053703bd_BreakSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_2053703bd_BreakSt(void) { this->self.ref = nullptr; }

	_2053703bd_BreakSt(void) { this->self = jule::Ref<_2053703bd_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_BreakSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _2053703bd_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_ContSt {
	jule::Ref<_2053703bd_ContSt> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	_20542560a_Token _field_label{_20542560a_Token()};


	_2053703bd_ContSt(_20542560a_Token __param_token, _20542560a_Token __param_label) {
		this->self = jule::Ref<_2053703bd_ContSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_2053703bd_ContSt(void) { this->self.ref = nullptr; }

	_2053703bd_ContSt(void) { this->self = jule::Ref<_2053703bd_ContSt>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_ContSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _2053703bd_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_If {
	jule::Ref<_2053703bd_If> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Ref<_2053703bd_Expr> _field_expr{jule::Ref<_2053703bd_Expr>()};
	jule::Ref<_2053703bd_ScopeTree> _field_scope{jule::Ref<_2053703bd_ScopeTree>()};


	_2053703bd_If(_20542560a_Token __param_token, jule::Ref<_2053703bd_Expr> __param_expr, jule::Ref<_2053703bd_ScopeTree> __param_scope) {
		this->self = jule::Ref<_2053703bd_If>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_2053703bd_If(void) { this->self.ref = nullptr; }

	_2053703bd_If(void) { this->self = jule::Ref<_2053703bd_If>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_If &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _2053703bd_If &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_Else {
	jule::Ref<_2053703bd_Else> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Ref<_2053703bd_ScopeTree> _field_scope{jule::Ref<_2053703bd_ScopeTree>()};


	_2053703bd_Else(_20542560a_Token __param_token, jule::Ref<_2053703bd_ScopeTree> __param_scope) {
		this->self = jule::Ref<_2053703bd_Else>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
	}

	~_2053703bd_Else(void) { this->self.ref = nullptr; }

	_2053703bd_Else(void) { this->self = jule::Ref<_2053703bd_Else>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_Else &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _2053703bd_Else &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_Conditional {
	jule::Ref<_2053703bd_Conditional> self{};

	jule::Ref<_2053703bd_If> _field_head{jule::Ref<_2053703bd_If>()};
	jule::Slice<jule::Ref<_2053703bd_If>> _field_tail{jule::Slice<jule::Ref<_2053703bd_If>>()};
	jule::Ref<_2053703bd_Else> _field_default{jule::Ref<_2053703bd_Else>()};


	_2053703bd_Conditional(jule::Ref<_2053703bd_If> __param_head, jule::Slice<jule::Ref<_2053703bd_If>> __param_tail, jule::Ref<_2053703bd_Else> __param_default) {
		this->self = jule::Ref<_2053703bd_Conditional>::make(this, nullptr);

		this->_field_head = __param_head;
		this->_field_tail = __param_tail;
		this->_field_default = __param_default;
	}

	~_2053703bd_Conditional(void) { this->self.ref = nullptr; }

	_2053703bd_Conditional(void) { this->self = jule::Ref<_2053703bd_Conditional>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_Conditional &_Src) const {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _2053703bd_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_TypeAliasDecl {
	jule::Ref<_2053703bd_TypeAliasDecl> self{};

	jule::Ref<_2053703bd_ScopeTree> _field_scope{jule::Ref<_2053703bd_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_2053703bd_TypeDecl> _field_kind{jule::Ref<_2053703bd_TypeDecl>()};
	jule::Ref<_2053703bd_CommentGroup> _field_doc_comments{jule::Ref<_2053703bd_CommentGroup>()};


	_2053703bd_TypeAliasDecl(jule::Ref<_2053703bd_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _20542560a_Token __param_token, jule::Str __param_ident, jule::Ref<_2053703bd_TypeDecl> __param_kind, jule::Ref<_2053703bd_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_2053703bd_TypeAliasDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_2053703bd_TypeAliasDecl(void) { this->self.ref = nullptr; }

	_2053703bd_TypeAliasDecl(void) { this->self = jule::Ref<_2053703bd_TypeAliasDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_TypeAliasDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _2053703bd_TypeAliasDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_Case {
	jule::Ref<_2053703bd_Case> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Ref<_2053703bd_ScopeTree> _field_scope{jule::Ref<_2053703bd_ScopeTree>()};
	jule::Slice<jule::Ref<_2053703bd_Expr>> _field_exprs{jule::Slice<jule::Ref<_2053703bd_Expr>>()};


	_2053703bd_Case(_20542560a_Token __param_token, jule::Ref<_2053703bd_ScopeTree> __param_scope, jule::Slice<jule::Ref<_2053703bd_Expr>> __param_exprs) {
		this->self = jule::Ref<_2053703bd_Case>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
	}

	~_2053703bd_Case(void) { this->self.ref = nullptr; }

	_2053703bd_Case(void) { this->self = jule::Ref<_2053703bd_Case>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_Case &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _2053703bd_Case &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_MatchCase {
	jule::Ref<_2053703bd_MatchCase> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Ref<_2053703bd_Expr> _field_expr{jule::Ref<_2053703bd_Expr>()};
	jule::Slice<jule::Ref<_2053703bd_Case>> _field_cases{jule::Slice<jule::Ref<_2053703bd_Case>>()};
	jule::Ref<_2053703bd_Else> _field_default{jule::Ref<_2053703bd_Else>()};


	_2053703bd_MatchCase(_20542560a_Token __param_token, jule::Bool __param_type_match, jule::Ref<_2053703bd_Expr> __param_expr, jule::Slice<jule::Ref<_2053703bd_Case>> __param_cases, jule::Ref<_2053703bd_Else> __param_default) {
		this->self = jule::Ref<_2053703bd_MatchCase>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_type_match = __param_type_match;
		this->_field_expr = __param_expr;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_2053703bd_MatchCase(void) { this->self.ref = nullptr; }

	_2053703bd_MatchCase(void) { this->self = jule::Ref<_2053703bd_MatchCase>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_MatchCase &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _2053703bd_MatchCase &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_UseDecl {
	jule::Ref<_2053703bd_UseDecl> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_full{jule::Bool()};
	jule::Slice<_20542560a_Token> _field_selected{jule::Slice<_20542560a_Token>()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};


	_2053703bd_UseDecl(_20542560a_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_20542560a_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std) {
		this->self = jule::Ref<_2053703bd_UseDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_link_path = __param_link_path;
		this->_field_alias = __param_alias;
		this->_field_full = __param_full;
		this->_field_selected = __param_selected;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
	}

	~_2053703bd_UseDecl(void) { this->self.ref = nullptr; }

	_2053703bd_UseDecl(void) { this->self = jule::Ref<_2053703bd_UseDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_UseDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_alias == _Src._field_alias &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	inline bool operator!=(const _2053703bd_UseDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_EnumItemDecl {
	jule::Ref<_2053703bd_EnumItemDecl> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_2053703bd_Expr> _field_expr{jule::Ref<_2053703bd_Expr>()};


	_2053703bd_EnumItemDecl(_20542560a_Token __param_token, jule::Str __param_ident, jule::Ref<_2053703bd_Expr> __param_expr) {
		this->self = jule::Ref<_2053703bd_EnumItemDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_2053703bd_EnumItemDecl(void) { this->self.ref = nullptr; }

	_2053703bd_EnumItemDecl(void) { this->self = jule::Ref<_2053703bd_EnumItemDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _2053703bd_EnumItemDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2053703bd_EnumItemDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_EnumDecl {
	jule::Ref<_2053703bd_EnumDecl> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_2053703bd_TypeDecl> _field_kind{jule::Ref<_2053703bd_TypeDecl>()};
	jule::Slice<jule::Ref<_2053703bd_EnumItemDecl>> _field_items{jule::Slice<jule::Ref<_2053703bd_EnumItemDecl>>()};
	jule::Ref<_2053703bd_CommentGroup> _field_doc_comments{jule::Ref<_2053703bd_CommentGroup>()};


	_2053703bd_EnumDecl(_20542560a_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_2053703bd_TypeDecl> __param_kind, jule::Slice<jule::Ref<_2053703bd_EnumItemDecl>> __param_items, jule::Ref<_2053703bd_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_2053703bd_EnumDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_2053703bd_EnumDecl(void) { this->self.ref = nullptr; }

	_2053703bd_EnumDecl(void) { this->self = jule::Ref<_2053703bd_EnumDecl>::make(this, nullptr); }

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(const _2053703bd_EnumDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _2053703bd_EnumDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_FieldDecl {
	jule::Ref<_2053703bd_FieldDecl> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_2053703bd_TypeDecl> _field_kind{jule::Ref<_2053703bd_TypeDecl>()};


	_2053703bd_FieldDecl(_20542560a_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_2053703bd_TypeDecl> __param_kind) {
		this->self = jule::Ref<_2053703bd_FieldDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_2053703bd_FieldDecl(void) { this->self.ref = nullptr; }

	_2053703bd_FieldDecl(void) { this->self = jule::Ref<_2053703bd_FieldDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_FieldDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _2053703bd_FieldDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_StructDecl {
	jule::Ref<_2053703bd_StructDecl> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_2053703bd_FieldDecl>> _field_fields{jule::Slice<jule::Ref<_2053703bd_FieldDecl>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_2053703bd_Directive>> _field_directives{jule::Slice<jule::Ref<_2053703bd_Directive>>()};
	jule::Ref<_2053703bd_CommentGroup> _field_doc_comments{jule::Ref<_2053703bd_CommentGroup>()};
	jule::Slice<jule::Ref<_2053703bd_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_2053703bd_GenericDecl>>()};


	_2053703bd_StructDecl(_20542560a_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_2053703bd_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_2053703bd_Directive>> __param_directives, jule::Ref<_2053703bd_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_2053703bd_GenericDecl>> __param_generics) {
		this->self = jule::Ref<_2053703bd_StructDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_generics = __param_generics;
	}

	~_2053703bd_StructDecl(void) { this->self.ref = nullptr; }

	_2053703bd_StructDecl(void) { this->self = jule::Ref<_2053703bd_StructDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_StructDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _2053703bd_StructDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_TraitDecl {
	jule::Ref<_2053703bd_TraitDecl> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Ref<_2053703bd_CommentGroup> _field_doc_comments{jule::Ref<_2053703bd_CommentGroup>()};
	jule::Slice<jule::Ref<_2053703bd_FnDecl>> _field_methods{jule::Slice<jule::Ref<_2053703bd_FnDecl>>()};


	_2053703bd_TraitDecl(_20542560a_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ref<_2053703bd_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_2053703bd_FnDecl>> __param_methods) {
		this->self = jule::Ref<_2053703bd_TraitDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_methods = __param_methods;
	}

	~_2053703bd_TraitDecl(void) { this->self.ref = nullptr; }

	_2053703bd_TraitDecl(void) { this->self = jule::Ref<_2053703bd_TraitDecl>::make(this, nullptr); }

	inline bool operator==(const _2053703bd_TraitDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _2053703bd_TraitDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2053703bd_Impl {
	jule::Ref<_2053703bd_Impl> self{};

	_20542560a_Token _field_base{_20542560a_Token()};
	_20542560a_Token _field_dest{_20542560a_Token()};
	jule::Slice<jule::Ref<_2053703bd_FnDecl>> _field_methods{jule::Slice<jule::Ref<_2053703bd_FnDecl>>()};


	_2053703bd_Impl(_20542560a_Token __param_base, _20542560a_Token __param_dest, jule::Slice<jule::Ref<_2053703bd_FnDecl>> __param_methods) {
		this->self = jule::Ref<_2053703bd_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_2053703bd_Impl(void) { this->self.ref = nullptr; }

	_2053703bd_Impl(void) { this->self = jule::Ref<_2053703bd_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _2053703bd_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _2053703bd_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _2053a3313_FileInfo {
	jule::Ref<_2053a3313_FileInfo> self{};

	jule::Ref<_20521102d_Ast> _field_ast{jule::Ref<_20521102d_Ast>()};
	jule::Slice<_20377124e_Log> _field_errors{jule::Slice<_20377124e_Log>()};


	_2053a3313_FileInfo(jule::Ref<_20521102d_Ast> __param_ast, jule::Slice<_20377124e_Log> __param_errors) {
		this->self = jule::Ref<_2053a3313_FileInfo>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_errors = __param_errors;
	}

	~_2053a3313_FileInfo(void) { this->self.ref = nullptr; }

	_2053a3313_FileInfo(void) { this->self = jule::Ref<_2053a3313_FileInfo>::make(this, nullptr); }

	inline bool operator==(const _2053a3313_FileInfo &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _2053a3313_FileInfo &_Src) const { return !this->operator==(_Src); }
};


struct _2053a3313_PackageInfo {
	jule::Ref<_2053a3313_PackageInfo> self{};

	jule::Slice<jule::Ref<_2053a3313_FileInfo>> _field_files{jule::Slice<jule::Ref<_2053a3313_FileInfo>>()};


	_2053a3313_PackageInfo(jule::Slice<jule::Ref<_2053a3313_FileInfo>> __param_files) {
		this->self = jule::Ref<_2053a3313_PackageInfo>::make(this, nullptr);

		this->_field_files = __param_files;
	}

	~_2053a3313_PackageInfo(void) { this->self.ref = nullptr; }

	_2053a3313_PackageInfo(void) { this->self = jule::Ref<_2053a3313_PackageInfo>::make(this, nullptr); }

	inline bool operator==(const _2053a3313_PackageInfo &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _2053a3313_PackageInfo &_Src) const { return !this->operator==(_Src); }
};


struct _2053cae51_Stmt {
	jule::Ref<_2053cae51_Stmt> self{};

	jule::Slice<_20542560a_Token> _field_tokens{jule::Slice<_20542560a_Token>()};
	jule::Bool _field_terminated{jule::Bool()};


	_2053cae51_Stmt(jule::Slice<_20542560a_Token> __param_tokens, jule::Bool __param_terminated) {
		this->self = jule::Ref<_2053cae51_Stmt>::make(this, nullptr);

		this->_field_tokens = __param_tokens;
		this->_field_terminated = __param_terminated;
	}

	~_2053cae51_Stmt(void) { this->self.ref = nullptr; }

	_2053cae51_Stmt(void) { this->self = jule::Ref<_2053cae51_Stmt>::make(this, nullptr); }

	inline bool operator==(const _2053cae51_Stmt &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	inline bool operator!=(const _2053cae51_Stmt &_Src) const { return !this->operator==(_Src); }
};


struct _2053cae51_ScopeParser {
	jule::Ref<_2053cae51_ScopeParser> self{};

	jule::Ref<_206540c0d_Parser> _field_p{jule::Ref<_206540c0d_Parser>()};
	jule::Ref<_2053703bd_ScopeTree> _field_s{jule::Ref<_2053703bd_ScopeTree>()};
	jule::Slice<jule::Ref<_2053cae51_Stmt>> _field_stms{jule::Slice<jule::Ref<_2053cae51_Stmt>>()};
	jule::Int _field_pos{jule::Int()};


	_2053cae51_ScopeParser(jule::Ref<_206540c0d_Parser> __param_p, jule::Ref<_2053703bd_ScopeTree> __param_s, jule::Slice<jule::Ref<_2053cae51_Stmt>> __param_stms, jule::Int __param_pos) {
		this->self = jule::Ref<_2053cae51_ScopeParser>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_s = __param_s;
		this->_field_stms = __param_stms;
		this->_field_pos = __param_pos;
	}

	~_2053cae51_ScopeParser(void) { this->self.ref = nullptr; }

	_2053cae51_ScopeParser(void) { this->self = jule::Ref<_2053cae51_ScopeParser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_20542560a_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_insert_as_next(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053cae51_Stmt> _method_next(void);


	inline jule::Ref<_2053703bd_ScopeTree> _method_build_scope(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_var_st(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_ret_st(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ref<_2053cae51_Stmt>);


	inline jule::Ref<_2053703bd_WhileKind> _method_build_while_iter_kind(jule::Slice<_20542560a_Token>);


	inline jule::Slice<jule::Slice<_20542560a_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_VarDecl> _method_build_range_kind_key(jule::Slice<_20542560a_Token>);


	inline jule::Slice<jule::Ref<_2053703bd_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_20542560a_Token>>);


	inline void _method_setup_range_kind_keys_plain(jule::Ref<_2053703bd_RangeKind>,jule::Slice<_20542560a_Token>);


	inline void _method_setup_range_kind_keys_explicit(jule::Ref<_2053703bd_RangeKind>,jule::Slice<_20542560a_Token>);


	inline void _method_setup_range_kind_keys(jule::Ref<_2053703bd_RangeKind>,jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_RangeKind> _method_build_range_iter_kind(jule::Slice<_20542560a_Token>,jule::Slice<_20542560a_Token>,_20542560a_Token);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_20542560a_Token>,_20542560a_Token);


	inline jule::Any _method_build_common_iter(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ref<_2053cae51_Stmt>);


	inline jule::Any _method_build_break_st(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_cont_st(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_If> _method_build_if(jule::Slice<_20542560a_Token>&);


	inline jule::Ref<_2053703bd_Else> _method_build_else(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_comment_st(_20542560a_Token);


	inline jule::Any _method_build_call_st(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_co_call_st(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_fall_st(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_20542560a_Token>);


	inline void _method_push_case_expr(jule::Slice<_20542560a_Token>,_20542560a_Token,jule::Bool,jule::Slice<jule::Ref<_2053703bd_Expr>>&);


	inline jule::Slice<jule::Ref<_2053703bd_Expr>> _method_build_case_exprs(jule::Slice<_20542560a_Token>&,jule::Bool);


	inline jule::Ref<_2053703bd_ScopeTree> _method_build_case_scope(jule::Slice<_20542560a_Token>&);


	inline std::tuple<jule::Ref<_2053703bd_Case>,jule::Bool> _method_build_case(jule::Slice<_20542560a_Token>&,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ref<_2053703bd_Case>>,jule::Ref<_2053703bd_Else>> _method_build_cases(jule::Slice<_20542560a_Token>,jule::Bool);


	inline jule::Ref<_2053703bd_MatchCase> _method_build_match_case(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_ScopeTree> _method_build_scope_st(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_LabelSt> _method_build_label_st(jule::Slice<_20542560a_Token>);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_20543982d_AssignInfo> _method_build_assign_info(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_AssignLeft> _method_build_assign_l(jule::Slice<_20542560a_Token>);


	inline jule::Slice<jule::Ref<_2053703bd_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_20542560a_Token>>);


	inline std::tuple<jule::Ref<_2053703bd_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_20542560a_Token>);


	inline std::tuple<jule::Ref<_2053703bd_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_20542560a_Token>);


	inline std::tuple<jule::Ref<_2053703bd_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_st(jule::Ref<_2053cae51_Stmt>);


	inline void _method_build(jule::Slice<_20542560a_Token>,jule::Ref<_2053703bd_ScopeTree>);


	inline bool operator==(const _2053cae51_ScopeParser &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stms == _Src._field_stms &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _2053cae51_ScopeParser &_Src) const { return !this->operator==(_Src); }
};


struct _2054205a0_CallData {
	jule::Ref<_2054205a0_CallData> self{};

	jule::Slice<_20542560a_Token> _field_expr_tokens{jule::Slice<_20542560a_Token>()};
	jule::Slice<_20542560a_Token> _field_args_tokens{jule::Slice<_20542560a_Token>()};
	jule::Slice<_20542560a_Token> _field_generics_tokens{jule::Slice<_20542560a_Token>()};


	_2054205a0_CallData(jule::Slice<_20542560a_Token> __param_expr_tokens, jule::Slice<_20542560a_Token> __param_args_tokens, jule::Slice<_20542560a_Token> __param_generics_tokens) {
		this->self = jule::Ref<_2054205a0_CallData>::make(this, nullptr);

		this->_field_expr_tokens = __param_expr_tokens;
		this->_field_args_tokens = __param_args_tokens;
		this->_field_generics_tokens = __param_generics_tokens;
	}

	~_2054205a0_CallData(void) { this->self.ref = nullptr; }

	_2054205a0_CallData(void) { this->self = jule::Ref<_2054205a0_CallData>::make(this, nullptr); }

	inline bool operator==(const _2054205a0_CallData &_Src) const {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	inline bool operator!=(const _2054205a0_CallData &_Src) const { return !this->operator==(_Src); }
};


struct _2054205a0_Precedencer {
	jule::Ref<_2054205a0_Precedencer> self{};

	jule::Slice<jule::Slice<jule::Any>> _field_pairs{jule::Slice<jule::Slice<jule::Any>>()};


	_2054205a0_Precedencer(jule::Slice<jule::Slice<jule::Any>> __param_pairs) {
		this->self = jule::Ref<_2054205a0_Precedencer>::make(this, nullptr);

		this->_field_pairs = __param_pairs;
	}

	~_2054205a0_Precedencer(void) { this->self.ref = nullptr; }

	_2054205a0_Precedencer(void) { this->self = jule::Ref<_2054205a0_Precedencer>::make(this, nullptr); }

	inline void _method_set(jule::Int,jule::Any);


	inline jule::Any _method_get_lower(void);


	inline bool operator==(const _2054205a0_Precedencer &_Src) const {
		return 
			this->_field_pairs == _Src._field_pairs;
	}

	inline bool operator!=(const _2054205a0_Precedencer &_Src) const { return !this->operator==(_Src); }
};


struct _2054205a0_ExprBuilder {
	jule::Ref<_2054205a0_ExprBuilder> self{};

	jule::Ref<_206540c0d_Parser> _field_p{jule::Ref<_206540c0d_Parser>()};


	_2054205a0_ExprBuilder(jule::Ref<_206540c0d_Parser> __param_p) {
		this->self = jule::Ref<_2054205a0_ExprBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
	}

	~_2054205a0_ExprBuilder(void) { this->self.ref = nullptr; }

	_2054205a0_ExprBuilder(void) { this->self = jule::Ref<_2054205a0_ExprBuilder>::make(this, nullptr); }

	inline void _method_push_err(_20542560a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_2053703bd_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_20542560a_Token>>);


	inline jule::Ref<_2053703bd_LitExpr> _method_build_lit(_20542560a_Token);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_primitive_type(_20542560a_Token);


	inline jule::Any _method_build_single(_20542560a_Token);


	inline jule::Ref<_2053703bd_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_UnaryExpr> _method_build_unary(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_type(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_sub_ident(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_VariadicExpr> _method_build_variadic(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_CastExpr> _method_try_build_cast(jule::Slice<_20542560a_Token>);


	inline void _method_push_arg(jule::Slice<jule::Ref<_2053703bd_Expr>>&,jule::Slice<_20542560a_Token>,_20542560a_Token);


	inline jule::Slice<jule::Ref<_2053703bd_Expr>> _method_build_args(jule::Slice<_20542560a_Token>);


	inline jule::Slice<jule::Ref<_2053703bd_TypeDecl>> _method_build_call_generics(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_FnCallExpr> _method_build_fn_call(_20542560a_Token,jule::Ref<_2054205a0_CallData>);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_FnDecl> _method_build_anon_fn(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_unsafe(jule::Slice<_20542560a_Token>);


	inline void _method_push_range_lit_part(jule::Slice<_20542560a_Token>,_20542560a_Token,jule::Slice<jule::Slice<_20542560a_Token>>&);


	inline jule::Slice<jule::Slice<_20542560a_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_20542560a_Token>);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_StructLit> _method_build_typed_struct_literal(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_BraceLit> _method_build_brace_lit(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_brace_range(jule::Slice<_20542560a_Token>);


	inline jule::Slice<jule::Slice<_20542560a_Token>> _method_get_enumerable_parts(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_SliceExpr> _method_build_slice(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_IndexingExpr> _method_build_indexing(jule::Slice<_20542560a_Token>,jule::Slice<_20542560a_Token>,_20542560a_Token);


	inline jule::Ref<_2053703bd_SlicingExpr> _method_build_slicing(jule::Slice<_20542560a_Token>,jule::Slice<_20542560a_Token>,jule::Int,_20542560a_Token);


	inline jule::Any _method_build_bracket_range(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_data(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_BinopExpr> _method_build_binop(jule::Slice<_20542560a_Token>,jule::Int);


	inline jule::Any _method_build(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_kind(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_Expr> _method_build_from_tokens(jule::Slice<_20542560a_Token>);


	inline bool operator==(const _2054205a0_ExprBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p;
	}

	inline bool operator!=(const _2054205a0_ExprBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _20543982d_AssignInfo {
	jule::Ref<_20543982d_AssignInfo> self{};

	jule::Slice<_20542560a_Token> _field_l{jule::Slice<_20542560a_Token>()};
	jule::Slice<_20542560a_Token> _field_r{jule::Slice<_20542560a_Token>()};
	_20542560a_Token _field_setter{_20542560a_Token()};
	jule::Bool _field_ok{jule::Bool()};


	_20543982d_AssignInfo(jule::Slice<_20542560a_Token> __param_l, jule::Slice<_20542560a_Token> __param_r, _20542560a_Token __param_setter, jule::Bool __param_ok) {
		this->self = jule::Ref<_20543982d_AssignInfo>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_setter = __param_setter;
		this->_field_ok = __param_ok;
	}

	~_20543982d_AssignInfo(void) { this->self.ref = nullptr; }

	_20543982d_AssignInfo(void) { this->self = jule::Ref<_20543982d_AssignInfo>::make(this, nullptr); }

	inline bool operator==(const _20543982d_AssignInfo &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	inline bool operator!=(const _20543982d_AssignInfo &_Src) const { return !this->operator==(_Src); }
};


struct _206540c0d_Parser {
	jule::Ref<_206540c0d_Parser> self{};

	jule::Ref<_20521102d_Ast> _field_ast{jule::Ref<_20521102d_Ast>()};
	jule::Slice<jule::Ref<_2053703bd_Directive>> _field_directives{jule::Slice<jule::Ref<_2053703bd_Directive>>()};
	jule::Ref<_2053703bd_CommentGroup> _field_comment_group{jule::Ref<_2053703bd_CommentGroup>()};
	jule::Slice<_20377124e_Log> _field_errors{jule::Slice<_20377124e_Log>()};


	_206540c0d_Parser(jule::Ref<_20521102d_Ast> __param_ast, jule::Slice<jule::Ref<_2053703bd_Directive>> __param_directives, jule::Ref<_2053703bd_CommentGroup> __param_comment_group, jule::Slice<_20377124e_Log> __param_errors) {
		this->self = jule::Ref<_206540c0d_Parser>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_directives = __param_directives;
		this->_field_comment_group = __param_comment_group;
		this->_field_errors = __param_errors;
	}

	~_206540c0d_Parser(void) { this->self.ref = nullptr; }

	_206540c0d_Parser(void) { this->self = jule::Ref<_206540c0d_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_20542560a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_2053703bd_Expr> _method_build_expr(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_Directive> _method_get_directive(jule::Ref<_2053703bd_Comment>);


	inline void _method_push_directive(jule::Ref<_2053703bd_Comment>);


	inline void _method_process_comment(jule::Ref<_2053703bd_Comment>);


	inline jule::Ref<_2053703bd_ScopeTree> _method_build_scope(jule::Slice<_20542560a_Token>);


	inline std::tuple<jule::Ref<_2053703bd_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_20542560a_Token>,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ref<_2053703bd_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_20542560a_Token>,jule::Int*,jule::Bool);


	inline jule::Ref<_2053703bd_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_20542560a_Token>);


	inline void _method_build_var_type_and_expr(jule::Ref<_2053703bd_VarDecl>,jule::Slice<_20542560a_Token>);


	inline void _method_build_var_common(jule::Ref<_2053703bd_VarDecl>,jule::Slice<_20542560a_Token>);


	inline void _method_build_var_begin(jule::Ref<_2053703bd_VarDecl>,jule::Ref<jule::Int>,jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_VarDecl> _method_build_var(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_GenericDecl> _method_build_generic(jule::Slice<_20542560a_Token>);


	inline jule::Slice<jule::Ref<_2053703bd_GenericDecl>> _method_build_generics(jule::Slice<_20542560a_Token>,_20542560a_Token);


	inline jule::Ref<_2053703bd_ParamDecl> _method_build_self_param(jule::Slice<_20542560a_Token>);


	inline void _method_param_type_begin(jule::Ref<_2053703bd_ParamDecl>,jule::Int&,jule::Slice<_20542560a_Token>);


	inline void _method_build_param_type(jule::Ref<_2053703bd_ParamDecl>,jule::Slice<_20542560a_Token>,jule::Bool);


	inline void _method_param_body_id(jule::Ref<_2053703bd_ParamDecl>,_20542560a_Token);


	inline void _method_build_param_body(jule::Ref<_2053703bd_ParamDecl>,jule::Ref<jule::Int>,jule::Slice<_20542560a_Token>,jule::Bool);


	inline jule::Ref<_2053703bd_ParamDecl> _method_build_param(jule::Slice<_20542560a_Token>,jule::Bool);


	inline void _method_check_params(jule::Slice<jule::Ref<_2053703bd_ParamDecl>>);


	inline jule::Slice<jule::Ref<_2053703bd_ParamDecl>> _method_build_params(jule::Slice<_20542560a_Token>,jule::Bool,jule::Bool);


	inline std::tuple<jule::Ref<_2053703bd_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_20542560a_Token>,jule::Int&);


	inline std::tuple<jule::Ref<_2053703bd_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_20542560a_Token>,jule::Int&);


	inline jule::Ref<_2053703bd_FnDecl> _method_build_fn_prototype(jule::Slice<_20542560a_Token>,jule::Int&,jule::Bool);


	inline jule::Ref<_2053703bd_FnDecl> _method_build_fn(jule::Slice<_20542560a_Token>,jule::Bool,jule::Bool);


	inline jule::Slice<_20542560a_Token> _method_get_use_decl_selectors(jule::Slice<_20542560a_Token>);


	inline void _method_build_cpp_use_decl(jule::Ref<_2053703bd_UseDecl>,jule::Slice<_20542560a_Token>);


	inline void _method_build_std_use_decl(jule::Ref<_2053703bd_UseDecl>,jule::Slice<_20542560a_Token>);


	inline void _method_build_ident_use_decl(jule::Ref<_2053703bd_UseDecl>,jule::Slice<_20542560a_Token>);


	inline void _method_parse_use_decl(jule::Ref<_2053703bd_UseDecl>,jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_UseDecl> _method_build_use_decl(jule::Slice<_20542560a_Token>,jule::Bool);


	inline jule::Ref<_2053703bd_Expr> _method_build_enum_item_expr(jule::Ref<jule::Int>,jule::Slice<_20542560a_Token>);


	inline jule::Slice<jule::Ref<_2053703bd_EnumItemDecl>> _method_build_enum_items(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_EnumDecl> _method_build_enum_decl(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_FieldDecl> _method_build_field(jule::Slice<_20542560a_Token>);


	inline jule::Slice<jule::Ref<_2053703bd_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_StructDecl> _method_build_struct_decl(jule::Slice<_20542560a_Token>);


	inline void _method_check_method_receiver(jule::Ref<_2053703bd_FnDecl>);


	inline jule::Slice<jule::Ref<_2053703bd_FnDecl>> _method_build_trait_methods(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_TraitDecl> _method_build_trait_decl(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_FnDecl> _method_build_cpp_link_fn(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_VarDecl> _method_build_cpp_link_var(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_StructDecl> _method_build_cpp_link_struct(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_UseDecl> _method_build_cpp_link_use(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_FnDecl> _method_get_method(jule::Slice<_20542560a_Token>);


	inline void _method_parse_impl_trait(jule::Ref<_2053703bd_Impl>,jule::Slice<_20542560a_Token>);


	inline void _method_parse_impl_struct(jule::Ref<_2053703bd_Impl>,jule::Slice<_20542560a_Token>);


	inline void _method_parse_impl_body(jule::Ref<_2053703bd_Impl>,jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_Impl> _method_build_impl(jule::Slice<_20542560a_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_20542560a_Token>);


	inline void _method_check_comment_group(_2053703bd_Node);


	inline void _method_check_directive(_2053703bd_Node);


	inline void _method_apply_meta(_2053703bd_Node,jule::Bool);


	inline void _method_check_use_decl(_2053703bd_Node);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_20542560a_Token>);


	inline _2053703bd_Node _method_parse_node(jule::Slice<_20542560a_Token>);


	inline void _method_append_node(jule::Slice<_20542560a_Token>);


	inline void _method_remove_range(jule::Int,jule::Str,jule::Slice<_20542560a_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_wrong_order_close_err(_20542560a_Token,jule::Slice<_20542560a_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_range_close(_20542560a_Token,jule::Str,jule::Slice<_20542560a_Token>&,jule::Slice<jule::Int>&);


	inline void _method_check_ranges(jule::Slice<_20542560a_Token>&);


	inline void _method_parse(jule::Ref<_2053bdb25_File>);


	inline bool operator==(const _206540c0d_Parser &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _206540c0d_Parser &_Src) const { return !this->operator==(_Src); }
};


struct _206581226_TypeBuilder {
	jule::Ref<_206581226_TypeBuilder> self{};

	jule::Ref<_206540c0d_Parser> _field_p{jule::Ref<_206540c0d_Parser>()};
	jule::Slice<_20542560a_Token> _field_tokens{jule::Slice<_20542560a_Token>()};
	jule::Int* _field_i{nullptr};
	jule::Bool _field_err{jule::Bool()};


	_206581226_TypeBuilder(jule::Ref<_206540c0d_Parser> __param_p, jule::Slice<_20542560a_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err) {
		this->self = jule::Ref<_206581226_TypeBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_tokens = __param_tokens;
		this->_field_i = __param_i;
		this->_field_err = __param_err;
	}

	~_206581226_TypeBuilder(void) { this->self.ref = nullptr; }

	_206581226_TypeBuilder(void) { this->self = jule::Ref<_206581226_TypeBuilder>::make(this, nullptr); }

	inline void _method_push_err(_20542560a_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_prim(void);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ref<_2053703bd_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_20542560a_Token>> _method_ident_generics(void);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_ident(void);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_fn(void);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_ptr(void);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_ref(void);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_op(void);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_slc(void);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_arr(void);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_map(jule::Int,jule::Slice<_20542560a_Token>);


	inline jule::Ref<_2053703bd_TypeDecl> _method_build_enumerable(void);


	inline jule::Ref<_2053703bd_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ref<_2053703bd_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(const _206581226_TypeBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _206581226_TypeBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1a89ca987_Const {
	jule::Ref<_1a89ca987_Const> self{};

	jule::Any _field_data{jule::Any()};


	_1a89ca987_Const(jule::Any __param_data) {
		this->self = jule::Ref<_1a89ca987_Const>::make(this, nullptr);

		this->_field_data = __param_data;
	}

	~_1a89ca987_Const(void) { this->self.ref = nullptr; }

	_1a89ca987_Const(void) { this->self = jule::Ref<_1a89ca987_Const>::make(this, nullptr); }

	static inline jule::Ref<_1a89ca987_Const> _static_method_new_i64(jule::I64);


	static inline jule::Ref<_1a89ca987_Const> _static_method_new_u64(jule::U64);


	static inline jule::Ref<_1a89ca987_Const> _static_method_new_bool(jule::Bool);


	static inline jule::Ref<_1a89ca987_Const> _static_method_new_str(jule::Str);


	static inline jule::Ref<_1a89ca987_Const> _static_method_new_f64(jule::F64);


	static inline jule::Ref<_1a89ca987_Const> _static_method_new_nil(void);


	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline void _method_set_by_type(jule::F64,_1a89ca987_Const);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_1a89ca987_Const);


	inline jule::Bool _method_and(_1a89ca987_Const);


	inline jule::Bool _method_or(_1a89ca987_Const);


	inline jule::Bool _method_eqs(_1a89ca987_Const);


	inline jule::Bool _method_lt(_1a89ca987_Const);


	inline jule::Bool _method_gt(_1a89ca987_Const);


	inline jule::Bool _method_add(_1a89ca987_Const);


	inline jule::Bool _method_sub(_1a89ca987_Const);


	inline jule::Bool _method_mul(_1a89ca987_Const);


	inline jule::Bool _method_div(_1a89ca987_Const);


	inline jule::Bool _method_mod(_1a89ca987_Const);


	inline jule::Bool _method_bitwise_and(_1a89ca987_Const);


	inline jule::Bool _method_bitwise_or(_1a89ca987_Const);


	inline jule::Bool _method_xor(_1a89ca987_Const);


	inline jule::Bool _method_lshift(_1a89ca987_Const);


	inline jule::Bool _method_rshift(_1a89ca987_Const);


	inline bool operator==(const _1a89ca987_Const &_Src) const {
		return 
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1a89ca987_Const &_Src) const { return !this->operator==(_Src); }
};




struct _2053cdc01_Field {
	jule::Ref<_2053cdc01_Field> self{};

	jule::Ref<_2053cdc01_Struct> _field_owner{jule::Ref<_2053cdc01_Struct>()};
	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1da411226_TypeSymbol> _field_kind{jule::Ref<_1da411226_TypeSymbol>()};


	_2053cdc01_Field(jule::Ref<_2053cdc01_Struct> __param_owner, _20542560a_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1da411226_TypeSymbol> __param_kind) {
		this->self = jule::Ref<_2053cdc01_Field>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_2053cdc01_Field(void) { this->self.ref = nullptr; }

	_2053cdc01_Field(void) { this->self = jule::Ref<_2053cdc01_Field>::make(this, nullptr); }

	inline jule::Ref<_2053cdc01_FieldIns> _method_instance(void);


	inline bool operator==(const _2053cdc01_Field &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _2053cdc01_Field &_Src) const { return !this->operator==(_Src); }
};


struct _2053cdc01_Struct {
	jule::Ref<_2053cdc01_Struct> self{};

	jule::Ref<_1d9dc7517_Sema> _field_sema{jule::Ref<_1d9dc7517_Sema>()};
	jule::Slice<jule::Ref<_2053cdc01_Struct>> _field_depends{jule::Slice<jule::Ref<_2053cdc01_Struct>>()};
	jule::Slice<jule::Ref<_2053cdc01_Struct>> _field_uses{jule::Slice<jule::Ref<_2053cdc01_Struct>>()};
	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_2053cdc01_Field>> _field_fields{jule::Slice<jule::Ref<_2053cdc01_Field>>()};
	jule::Slice<jule::Ref<_2053ddd54_Fn>> _field_methods{jule::Slice<jule::Ref<_2053ddd54_Fn>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_2053703bd_Directive>> _field_directives{jule::Slice<jule::Ref<_2053703bd_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_2053703bd_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_2053703bd_GenericDecl>>()};
	jule::Slice<jule::Ref<_2065895c5_Trait>> _field_implements{jule::Slice<jule::Ref<_2065895c5_Trait>>()};
	jule::Slice<jule::Ref<_2053cdc01_StructIns>> _field_instances{jule::Slice<jule::Ref<_2053cdc01_StructIns>>()};


	_2053cdc01_Struct(jule::Ref<_1d9dc7517_Sema> __param_sema, jule::Slice<jule::Ref<_2053cdc01_Struct>> __param_depends, jule::Slice<jule::Ref<_2053cdc01_Struct>> __param_uses, _20542560a_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_2053cdc01_Field>> __param_fields, jule::Slice<jule::Ref<_2053ddd54_Fn>> __param_methods, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_2053703bd_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ref<_2053703bd_GenericDecl>> __param_generics, jule::Slice<jule::Ref<_2065895c5_Trait>> __param_implements, jule::Slice<jule::Ref<_2053cdc01_StructIns>> __param_instances) {
		this->self = jule::Ref<_2053cdc01_Struct>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_depends = __param_depends;
		this->_field_uses = __param_uses;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_generics = __param_generics;
		this->_field_implements = __param_implements;
		this->_field_instances = __param_instances;
	}

	~_2053cdc01_Struct(void) { this->self.ref = nullptr; }

	_2053cdc01_Struct(void) { this->self = jule::Ref<_2053cdc01_Struct>::make(this, nullptr); }

	inline jule::Ref<_2053cdc01_StructIns> _method_instance(void);


	inline jule::Ref<_2053cdc01_StructIns> _method_append_instance(jule::Ref<_2053cdc01_StructIns>);


	inline jule::Ref<_2053ddd54_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_2053cdc01_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ref<_2065895c5_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ref<_2053cdc01_Struct>);


	inline bool operator==(const _2053cdc01_Struct &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _2053cdc01_Struct &_Src) const { return !this->operator==(_Src); }
};


struct _2053cdc01_FieldIns {
	jule::Ref<_2053cdc01_FieldIns> self{};

	jule::Ref<_2053cdc01_Field> _field_decl{jule::Ref<_2053cdc01_Field>()};
	jule::Ref<_1da411226_TypeKind> _field_kind{jule::Ref<_1da411226_TypeKind>()};


	_2053cdc01_FieldIns(jule::Ref<_2053cdc01_Field> __param_decl, jule::Ref<_1da411226_TypeKind> __param_kind) {
		this->self = jule::Ref<_2053cdc01_FieldIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_2053cdc01_FieldIns(void) { this->self.ref = nullptr; }

	_2053cdc01_FieldIns(void) { this->self = jule::Ref<_2053cdc01_FieldIns>::make(this, nullptr); }

	inline bool operator==(const _2053cdc01_FieldIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _2053cdc01_FieldIns &_Src) const { return !this->operator==(_Src); }
};


struct _2053cdc01_StructIns: public _1da411226_Kind {
	jule::Ref<_2053cdc01_StructIns> self{};

	jule::Bool _field_checked{jule::Bool()};
	jule::Ref<_2053cdc01_Struct> _field_decl{jule::Ref<_2053cdc01_Struct>()};
	jule::Slice<jule::Ref<_1da411226_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1da411226_TypeKind>>()};
	jule::Slice<jule::Ref<_2053cdc01_FieldIns>> _field_fields{jule::Slice<jule::Ref<_2053cdc01_FieldIns>>()};
	jule::Slice<jule::Ref<_2053ddd54_Fn>> _field_methods{jule::Slice<jule::Ref<_2053ddd54_Fn>>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Ref<_206a20e79_ReferenceStack> _field_references{jule::Ref<_206a20e79_ReferenceStack>()};


	_2053cdc01_StructIns(jule::Bool __param_checked, jule::Ref<_2053cdc01_Struct> __param_decl, jule::Slice<jule::Ref<_1da411226_TypeKind>> __param_generics, jule::Slice<jule::Ref<_2053cdc01_FieldIns>> __param_fields, jule::Slice<jule::Ref<_2053ddd54_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ref<_206a20e79_ReferenceStack> __param_references) {
		this->self = jule::Ref<_2053cdc01_StructIns>::make(this, nullptr);

		this->_field_checked = __param_checked;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_mutable = __param_mutable;
		this->_field_references = __param_references;
	}

	~_2053cdc01_StructIns(void) { this->self.ref = nullptr; }

	_2053cdc01_StructIns(void) { this->self = jule::Ref<_2053cdc01_StructIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1da411226_TypeKind>);


	inline jule::Ref<_2053ddd54_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_2053cdc01_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(const _2053cdc01_StructIns &_Src) const {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_references == _Src._field_references;
	}

	inline bool operator!=(const _2053cdc01_StructIns &_Src) const { return !this->operator==(_Src); }
};


struct _2053ddd54_RetType {
	jule::Ref<_2053ddd54_RetType> self{};

	jule::Ref<_1da411226_TypeSymbol> _field_kind{jule::Ref<_1da411226_TypeSymbol>()};
	jule::Slice<_20542560a_Token> _field_idents{jule::Slice<_20542560a_Token>()};


	_2053ddd54_RetType(jule::Ref<_1da411226_TypeSymbol> __param_kind, jule::Slice<_20542560a_Token> __param_idents) {
		this->self = jule::Ref<_2053ddd54_RetType>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_2053ddd54_RetType(void) { this->self.ref = nullptr; }

	_2053ddd54_RetType(void) { this->self = jule::Ref<_2053ddd54_RetType>::make(this, nullptr); }

	inline bool operator==(const _2053ddd54_RetType &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _2053ddd54_RetType &_Src) const { return !this->operator==(_Src); }
};


struct _2053ddd54_Param {
	jule::Ref<_2053ddd54_Param> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1da411226_TypeSymbol> _field_kind{jule::Ref<_1da411226_TypeSymbol>()};
	jule::Str _field_ident{jule::Str()};


	_2053ddd54_Param(_20542560a_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1da411226_TypeSymbol> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_2053ddd54_Param>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_2053ddd54_Param(void) { this->self.ref = nullptr; }

	_2053ddd54_Param(void) { this->self = jule::Ref<_2053ddd54_Param>::make(this, nullptr); }

	inline jule::Ref<_2053ddd54_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _2053ddd54_Param &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2053ddd54_Param &_Src) const { return !this->operator==(_Src); }
};


struct _2053ddd54_Fn {
	jule::Ref<_2053ddd54_Fn> self{};

	jule::Ref<_1d9dc7517_Sema> _field_sema{jule::Ref<_1d9dc7517_Sema>()};
	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_2053703bd_Directive>> _field_directives{jule::Slice<jule::Ref<_2053703bd_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_2053703bd_ScopeTree> _field_scope{jule::Ref<_2053703bd_ScopeTree>()};
	jule::Slice<jule::Ref<_2053703bd_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_2053703bd_GenericDecl>>()};
	jule::Ref<_2053ddd54_RetType> _field_result{jule::Ref<_2053ddd54_RetType>()};
	jule::Slice<jule::Ref<_2053ddd54_Param>> _field_params{jule::Slice<jule::Ref<_2053ddd54_Param>>()};
	jule::Ref<_2053cdc01_Struct> _field_owner{jule::Ref<_2053cdc01_Struct>()};
	jule::Slice<jule::Ref<_2053ddd54_FnIns>> _field_instances{jule::Slice<jule::Ref<_2053ddd54_FnIns>>()};


	_2053ddd54_Fn(jule::Ref<_1d9dc7517_Sema> __param_sema, _20542560a_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_2053703bd_Directive>> __param_directives, jule::Str __param_doc, jule::Ref<_2053703bd_ScopeTree> __param_scope, jule::Slice<jule::Ref<_2053703bd_GenericDecl>> __param_generics, jule::Ref<_2053ddd54_RetType> __param_result, jule::Slice<jule::Ref<_2053ddd54_Param>> __param_params, jule::Ref<_2053cdc01_Struct> __param_owner, jule::Slice<jule::Ref<_2053ddd54_FnIns>> __param_instances) {
		this->self = jule::Ref<_2053ddd54_Fn>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
		this->_field_owner = __param_owner;
		this->_field_instances = __param_instances;
	}

	~_2053ddd54_Fn(void) { this->self.ref = nullptr; }

	_2053ddd54_Fn(void) { this->self = jule::Ref<_2053ddd54_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ref<_2053ddd54_FnIns> _method_instance_force(void);


	inline jule::Ref<_2053ddd54_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ref<_2053ddd54_FnIns>);


	inline bool operator==(const _2053ddd54_Fn &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _2053ddd54_Fn &_Src) const { return !this->operator==(_Src); }
};


struct _2053ddd54_ParamIns {
	jule::Ref<_2053ddd54_ParamIns> self{};

	jule::Ref<_2053ddd54_Param> _field_decl{jule::Ref<_2053ddd54_Param>()};
	jule::Ref<_1da411226_TypeKind> _field_kind{jule::Ref<_1da411226_TypeKind>()};


	_2053ddd54_ParamIns(jule::Ref<_2053ddd54_Param> __param_decl, jule::Ref<_1da411226_TypeKind> __param_kind) {
		this->self = jule::Ref<_2053ddd54_ParamIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_2053ddd54_ParamIns(void) { this->self.ref = nullptr; }

	_2053ddd54_ParamIns(void) { this->self = jule::Ref<_2053ddd54_ParamIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline bool operator==(const _2053ddd54_ParamIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _2053ddd54_ParamIns &_Src) const { return !this->operator==(_Src); }
};


struct _2053ddd54_FnIns: public _1da411226_Kind {
	jule::Ref<_2053ddd54_FnIns> self{};

	jule::Ref<_2053cdc01_StructIns> _field_owner{jule::Ref<_2053cdc01_StructIns>()};
	jule::Ref<_2053ddd54_Fn> _field_decl{jule::Ref<_2053ddd54_Fn>()};
	jule::Slice<jule::Ref<_1da411226_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1da411226_TypeKind>>()};
	jule::Slice<jule::Ref<_2053ddd54_ParamIns>> _field_params{jule::Slice<jule::Ref<_2053ddd54_ParamIns>>()};
	jule::Ref<_1da411226_TypeKind> _field_result{jule::Ref<_1da411226_TypeKind>()};
	jule::Ref<_206b0557a_Scope> _field_scope{jule::Ref<_206b0557a_Scope>()};
	jule::Ref<_206a20e79_ReferenceStack> _field_references{jule::Ref<_206a20e79_ReferenceStack>()};
	jule::Ref<_206a20e79_ReferenceStack> _field_refers{jule::Ref<_206a20e79_ReferenceStack>()};
	jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)> _field_caller{jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>()};
	jule::Bool _field_reloaded{jule::Bool()};
	jule::Bool _field_anon{jule::Bool()};


	_2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns> __param_owner, jule::Ref<_2053ddd54_Fn> __param_decl, jule::Slice<jule::Ref<_1da411226_TypeKind>> __param_generics, jule::Slice<jule::Ref<_2053ddd54_ParamIns>> __param_params, jule::Ref<_1da411226_TypeKind> __param_result, jule::Ref<_206b0557a_Scope> __param_scope, jule::Ref<_206a20e79_ReferenceStack> __param_references, jule::Ref<_206a20e79_ReferenceStack> __param_refers, jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)> __param_caller, jule::Bool __param_reloaded, jule::Bool __param_anon) {
		this->self = jule::Ref<_2053ddd54_FnIns>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_params = __param_params;
		this->_field_result = __param_result;
		this->_field_scope = __param_scope;
		this->_field_references = __param_references;
		this->_field_refers = __param_refers;
		this->_field_caller = __param_caller;
		this->_field_reloaded = __param_reloaded;
		this->_field_anon = __param_anon;
	}

	~_2053ddd54_FnIns(void) { this->self.ref = nullptr; }

	_2053ddd54_FnIns(void) { this->self = jule::Ref<_2053ddd54_FnIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Str _method_get_kind_str(jule::Bool);


	inline bool operator==(const _2053ddd54_FnIns &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_references == _Src._field_references &&
			this->_field_refers == _Src._field_refers &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded &&
			this->_field_anon == _Src._field_anon;
	}

	inline bool operator!=(const _2053ddd54_FnIns &_Src) const { return !this->operator==(_Src); }
};


struct _206a20e79_ReferenceStack {
	jule::Ref<_206a20e79_ReferenceStack> self{};

	jule::Slice<jule::Any> _field_buffer{jule::Slice<jule::Any>()};


	_206a20e79_ReferenceStack(jule::Slice<jule::Any> __param_buffer) {
		this->self = jule::Ref<_206a20e79_ReferenceStack>::make(this, nullptr);

		this->_field_buffer = __param_buffer;
	}

	~_206a20e79_ReferenceStack(void) { this->self.ref = nullptr; }

	_206a20e79_ReferenceStack(void) { this->self = jule::Ref<_206a20e79_ReferenceStack>::make(this, nullptr); }

	static inline jule::Ref<_206a20e79_ReferenceStack> _static_method_new(void);


	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline jule::Bool _method_exist_0(jule::Ref<_1d9e22661_Var>);
	inline jule::Bool _method_exist_1(jule::Ref<_2053ddd54_FnIns>);
	inline jule::Bool _method_exist_2(jule::Ref<_2053cdc01_StructIns>);


	inline bool operator==(const _206a20e79_ReferenceStack &_Src) const {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	inline bool operator!=(const _206a20e79_ReferenceStack &_Src) const { return !this->operator==(_Src); }
};


struct _206a20e79_Pass {
	jule::Ref<_206a20e79_Pass> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_text{jule::Str()};


	_206a20e79_Pass(_20542560a_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_206a20e79_Pass>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_206a20e79_Pass(void) { this->self.ref = nullptr; }

	_206a20e79_Pass(void) { this->self = jule::Ref<_206a20e79_Pass>::make(this, nullptr); }

	inline bool operator==(const _206a20e79_Pass &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _206a20e79_Pass &_Src) const { return !this->operator==(_Src); }
};


struct _206a20e79_SymbolBuilder {
	jule::Ref<_206a20e79_SymbolBuilder> self{};

	jule::Ref<_206a20e79_SymbolBuilder> _field_owner{jule::Ref<_206a20e79_SymbolBuilder>()};
	jule::Trait<_206e66325_Importer> _field_importer{jule::Trait<_206e66325_Importer>()};
	jule::Slice<_20377124e_Log> _field_errors{jule::Slice<_20377124e_Log>()};
	jule::Ref<_20521102d_Ast> _field_ast{jule::Ref<_20521102d_Ast>()};
	jule::Ref<_1da2aa301_SymbolTable> _field_table{jule::Ref<_1da2aa301_SymbolTable>()};


	_206a20e79_SymbolBuilder(jule::Ref<_206a20e79_SymbolBuilder> __param_owner, jule::Trait<_206e66325_Importer> __param_importer, jule::Slice<_20377124e_Log> __param_errors, jule::Ref<_20521102d_Ast> __param_ast, jule::Ref<_1da2aa301_SymbolTable> __param_table) {
		this->self = jule::Ref<_206a20e79_SymbolBuilder>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_importer = __param_importer;
		this->_field_errors = __param_errors;
		this->_field_ast = __param_ast;
		this->_field_table = __param_table;
	}

	~_206a20e79_SymbolBuilder(void) { this->self.ref = nullptr; }

	_206a20e79_SymbolBuilder(void) { this->self = jule::Ref<_206a20e79_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ref<_206a20e79_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_20542560a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_text(_20542560a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ref<_2053703bd_UseDecl>);


	inline jule::Ref<_206e66325_ImportInfo> _method_build_cpp_header_import(jule::Ref<_2053703bd_UseDecl>);


	inline jule::Ref<_206e66325_ImportInfo> _method_build_std_import(jule::Ref<_2053703bd_UseDecl>);


	inline jule::Ref<_206e66325_ImportInfo> _method_build_ident_import(jule::Ref<_2053703bd_UseDecl>);


	inline jule::Ref<_206e66325_ImportInfo> _method_build_import(jule::Ref<_2053703bd_UseDecl>);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ref<_206e66325_ImportInfo>);


	inline void _method_impl_import_selections(jule::Ref<_206e66325_ImportInfo>,jule::Ref<_2053703bd_UseDecl>);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cycle_error(jule::Ref<_206a20e79_SymbolBuilder>,jule::Str,jule::Str&);


	inline void _method_push_cross_cycle_error(jule::Ref<_206a20e79_SymbolBuilder>,jule::Ref<_206e66325_ImportInfo>,_20542560a_Token);


	inline jule::Bool _method_check_import_cycles(jule::Ref<_206e66325_ImportInfo>,jule::Ref<_2053703bd_UseDecl>);


	inline jule::Bool _method_import_package(jule::Ref<_206e66325_ImportInfo>&,jule::Ref<_2053703bd_UseDecl>);


	inline jule::Ref<_206e66325_ImportInfo> _method_import_use_decl(jule::Ref<_2053703bd_UseDecl>);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_2053703bd_Node);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ref<_2053703bd_Directive>);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(const _206a20e79_SymbolBuilder &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	inline bool operator!=(const _206a20e79_SymbolBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _2065895c5_Trait: public _1da411226_Kind {
	jule::Ref<_2065895c5_Trait> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_2053ddd54_Fn>> _field_methods{jule::Slice<jule::Ref<_2053ddd54_Fn>>()};
	jule::Slice<jule::Ref<_2053cdc01_Struct>> _field_implemented{jule::Slice<jule::Ref<_2053cdc01_Struct>>()};


	_2065895c5_Trait(_20542560a_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_doc, jule::Slice<jule::Ref<_2053ddd54_Fn>> __param_methods, jule::Slice<jule::Ref<_2053cdc01_Struct>> __param_implemented) {
		this->self = jule::Ref<_2065895c5_Trait>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_doc = __param_doc;
		this->_field_methods = __param_methods;
		this->_field_implemented = __param_implemented;
	}

	~_2065895c5_Trait(void) { this->self.ref = nullptr; }

	_2065895c5_Trait(void) { this->self = jule::Ref<_2065895c5_Trait>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ref<_2053ddd54_Fn> _method_find_method(jule::Str);


	inline bool operator==(const _2065895c5_Trait &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	inline bool operator!=(const _2065895c5_Trait &_Src) const { return !this->operator==(_Src); }
};


struct _206b06c0d_EnumItem {
	jule::Ref<_206b06c0d_EnumItem> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1da2d3bdc_Value> _field_value{jule::Ref<_1da2d3bdc_Value>()};


	_206b06c0d_EnumItem(_20542560a_Token __param_token, jule::Str __param_ident, jule::Ref<_1da2d3bdc_Value> __param_value) {
		this->self = jule::Ref<_206b06c0d_EnumItem>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_value = __param_value;
	}

	~_206b06c0d_EnumItem(void) { this->self.ref = nullptr; }

	_206b06c0d_EnumItem(void) { this->self = jule::Ref<_206b06c0d_EnumItem>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _206b06c0d_EnumItem &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _206b06c0d_EnumItem &_Src) const { return !this->operator==(_Src); }
};


struct _206b06c0d_Enum: public _1da411226_Kind {
	jule::Ref<_206b06c0d_Enum> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1da411226_TypeSymbol> _field_kind{jule::Ref<_1da411226_TypeSymbol>()};
	jule::Slice<jule::Ref<_206b06c0d_EnumItem>> _field_items{jule::Slice<jule::Ref<_206b06c0d_EnumItem>>()};
	jule::Str _field_doc{jule::Str()};


	_206b06c0d_Enum(_20542560a_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1da411226_TypeSymbol> __param_kind, jule::Slice<jule::Ref<_206b06c0d_EnumItem>> __param_items, jule::Str __param_doc) {
		this->self = jule::Ref<_206b06c0d_Enum>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc = __param_doc;
	}

	~_206b06c0d_Enum(void) { this->self.ref = nullptr; }

	_206b06c0d_Enum(void) { this->self = jule::Ref<_206b06c0d_Enum>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1da411226_TypeKind>);


	inline jule::Ref<_206b06c0d_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(const _206b06c0d_Enum &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	inline bool operator!=(const _206b06c0d_Enum &_Src) const { return !this->operator==(_Src); }
};


struct _206b07093_Impl {
	jule::Ref<_206b07093_Impl> self{};

	_20542560a_Token _field_base{_20542560a_Token()};
	_20542560a_Token _field_dest{_20542560a_Token()};
	jule::Slice<jule::Ref<_2053ddd54_Fn>> _field_methods{jule::Slice<jule::Ref<_2053ddd54_Fn>>()};


	_206b07093_Impl(_20542560a_Token __param_base, _20542560a_Token __param_dest, jule::Slice<jule::Ref<_2053ddd54_Fn>> __param_methods) {
		this->self = jule::Ref<_206b07093_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_206b07093_Impl(void) { this->self.ref = nullptr; }

	_206b07093_Impl(void) { this->self = jule::Ref<_206b07093_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _206b07093_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _206b07093_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_Scope {
	jule::Ref<_206b0557a_Scope> self{};

	jule::Ref<_206b0557a_Scope> _field_parent{jule::Ref<_206b0557a_Scope>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_206b0557a_Scope(jule::Ref<_206b0557a_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts) {
		this->self = jule::Ref<_206b0557a_Scope>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_206b0557a_Scope(void) { this->self.ref = nullptr; }

	_206b0557a_Scope(void) { this->self = jule::Ref<_206b0557a_Scope>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_Scope &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _206b0557a_Scope &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_If {
	jule::Ref<_206b0557a_If> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_206b0557a_Scope> _field_scope{jule::Ref<_206b0557a_Scope>()};


	_206b0557a_If(jule::Any __param_expr, jule::Ref<_206b0557a_Scope> __param_scope) {
		this->self = jule::Ref<_206b0557a_If>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_206b0557a_If(void) { this->self.ref = nullptr; }

	_206b0557a_If(void) { this->self = jule::Ref<_206b0557a_If>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_If &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _206b0557a_If &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_Else {
	jule::Ref<_206b0557a_Else> self{};

	jule::Ref<_206b0557a_Scope> _field_scope{jule::Ref<_206b0557a_Scope>()};


	_206b0557a_Else(jule::Ref<_206b0557a_Scope> __param_scope) {
		this->self = jule::Ref<_206b0557a_Else>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_206b0557a_Else(void) { this->self.ref = nullptr; }

	_206b0557a_Else(void) { this->self = jule::Ref<_206b0557a_Else>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_Else &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _206b0557a_Else &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_Conditional {
	jule::Ref<_206b0557a_Conditional> self{};

	jule::Slice<jule::Ref<_206b0557a_If>> _field_elifs{jule::Slice<jule::Ref<_206b0557a_If>>()};
	jule::Ref<_206b0557a_Else> _field_default{jule::Ref<_206b0557a_Else>()};


	_206b0557a_Conditional(jule::Slice<jule::Ref<_206b0557a_If>> __param_elifs, jule::Ref<_206b0557a_Else> __param_default) {
		this->self = jule::Ref<_206b0557a_Conditional>::make(this, nullptr);

		this->_field_elifs = __param_elifs;
		this->_field_default = __param_default;
	}

	~_206b0557a_Conditional(void) { this->self.ref = nullptr; }

	_206b0557a_Conditional(void) { this->self = jule::Ref<_206b0557a_Conditional>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_Conditional &_Src) const {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _206b0557a_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_InfIter {
	jule::Ref<_206b0557a_InfIter> self{};

	jule::Ref<_206b0557a_Scope> _field_scope{jule::Ref<_206b0557a_Scope>()};


	_206b0557a_InfIter(jule::Ref<_206b0557a_Scope> __param_scope) {
		this->self = jule::Ref<_206b0557a_InfIter>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_206b0557a_InfIter(void) { this->self.ref = nullptr; }

	_206b0557a_InfIter(void) { this->self = jule::Ref<_206b0557a_InfIter>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_InfIter &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _206b0557a_InfIter &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_WhileIter {
	jule::Ref<_206b0557a_WhileIter> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_next{jule::Any()};
	jule::Ref<_206b0557a_Scope> _field_scope{jule::Ref<_206b0557a_Scope>()};


	_206b0557a_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ref<_206b0557a_Scope> __param_scope) {
		this->self = jule::Ref<_206b0557a_WhileIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_scope = __param_scope;
	}

	~_206b0557a_WhileIter(void) { this->self.ref = nullptr; }

	_206b0557a_WhileIter(void) { this->self = jule::Ref<_206b0557a_WhileIter>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _206b0557a_WhileIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _206b0557a_WhileIter &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_RangeIter {
	jule::Ref<_206b0557a_RangeIter> self{};

	jule::Ref<_1da2d3bdc_Data> _field_expr{jule::Ref<_1da2d3bdc_Data>()};
	jule::Ref<_206b0557a_Scope> _field_scope{jule::Ref<_206b0557a_Scope>()};
	jule::Ref<_1d9e22661_Var> _field_key_a{jule::Ref<_1d9e22661_Var>()};
	jule::Ref<_1d9e22661_Var> _field_key_b{jule::Ref<_1d9e22661_Var>()};


	_206b0557a_RangeIter(jule::Ref<_1da2d3bdc_Data> __param_expr, jule::Ref<_206b0557a_Scope> __param_scope, jule::Ref<_1d9e22661_Var> __param_key_a, jule::Ref<_1d9e22661_Var> __param_key_b) {
		this->self = jule::Ref<_206b0557a_RangeIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_206b0557a_RangeIter(void) { this->self.ref = nullptr; }

	_206b0557a_RangeIter(void) { this->self = jule::Ref<_206b0557a_RangeIter>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_RangeIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _206b0557a_RangeIter &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_ContSt {
	jule::Ref<_206b0557a_ContSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};


	_206b0557a_ContSt(jule::Uintptr __param_it) {
		this->self = jule::Ref<_206b0557a_ContSt>::make(this, nullptr);

		this->_field_it = __param_it;
	}

	~_206b0557a_ContSt(void) { this->self.ref = nullptr; }

	_206b0557a_ContSt(void) { this->self = jule::Ref<_206b0557a_ContSt>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_ContSt &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _206b0557a_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_BreakSt {
	jule::Ref<_206b0557a_BreakSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_mtch{jule::Uintptr()};


	_206b0557a_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch) {
		this->self = jule::Ref<_206b0557a_BreakSt>::make(this, nullptr);

		this->_field_it = __param_it;
		this->_field_mtch = __param_mtch;
	}

	~_206b0557a_BreakSt(void) { this->self.ref = nullptr; }

	_206b0557a_BreakSt(void) { this->self = jule::Ref<_206b0557a_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_BreakSt &_Src) const {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	inline bool operator!=(const _206b0557a_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_Label {
	jule::Ref<_206b0557a_Label> self{};

	jule::Str _field_ident{jule::Str()};


	_206b0557a_Label(jule::Str __param_ident) {
		this->self = jule::Ref<_206b0557a_Label>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_206b0557a_Label(void) { this->self.ref = nullptr; }

	_206b0557a_Label(void) { this->self = jule::Ref<_206b0557a_Label>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_Label &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _206b0557a_Label &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_GotoSt {
	jule::Ref<_206b0557a_GotoSt> self{};

	jule::Str _field_ident{jule::Str()};


	_206b0557a_GotoSt(jule::Str __param_ident) {
		this->self = jule::Ref<_206b0557a_GotoSt>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_206b0557a_GotoSt(void) { this->self.ref = nullptr; }

	_206b0557a_GotoSt(void) { this->self = jule::Ref<_206b0557a_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_GotoSt &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _206b0557a_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_Postfix {
	jule::Ref<_206b0557a_Postfix> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_206b0557a_Postfix(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_206b0557a_Postfix>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_206b0557a_Postfix(void) { this->self.ref = nullptr; }

	_206b0557a_Postfix(void) { this->self = jule::Ref<_206b0557a_Postfix>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_Postfix &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _206b0557a_Postfix &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_Assign {
	jule::Ref<_206b0557a_Assign> self{};

	jule::Any _field_l{jule::Any()};
	jule::Any _field_r{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_206b0557a_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op) {
		this->self = jule::Ref<_206b0557a_Assign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_206b0557a_Assign(void) { this->self.ref = nullptr; }

	_206b0557a_Assign(void) { this->self = jule::Ref<_206b0557a_Assign>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_Assign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _206b0557a_Assign &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_MultiAssign {
	jule::Ref<_206b0557a_MultiAssign> self{};

	jule::Slice<jule::Any> _field_l{jule::Slice<jule::Any>()};
	jule::Any _field_r{jule::Any()};


	_206b0557a_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r) {
		this->self = jule::Ref<_206b0557a_MultiAssign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
	}

	~_206b0557a_MultiAssign(void) { this->self.ref = nullptr; }

	_206b0557a_MultiAssign(void) { this->self = jule::Ref<_206b0557a_MultiAssign>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_MultiAssign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	inline bool operator!=(const _206b0557a_MultiAssign &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_Match {
	jule::Ref<_206b0557a_Match> self{};

	jule::Ref<_1da2d3bdc_Data> _field_expr{jule::Ref<_1da2d3bdc_Data>()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Slice<jule::Ref<_206b0557a_Case>> _field_cases{jule::Slice<jule::Ref<_206b0557a_Case>>()};
	jule::Ref<_206b0557a_Case> _field_default{jule::Ref<_206b0557a_Case>()};


	_206b0557a_Match(jule::Ref<_1da2d3bdc_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ref<_206b0557a_Case>> __param_cases, jule::Ref<_206b0557a_Case> __param_default) {
		this->self = jule::Ref<_206b0557a_Match>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_type_match = __param_type_match;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_206b0557a_Match(void) { this->self.ref = nullptr; }

	_206b0557a_Match(void) { this->self = jule::Ref<_206b0557a_Match>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_Match &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _206b0557a_Match &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_Case {
	jule::Ref<_206b0557a_Case> self{};

	jule::Ref<_206b0557a_Match> _field_owner{jule::Ref<_206b0557a_Match>()};
	jule::Ref<_206b0557a_Scope> _field_scope{jule::Ref<_206b0557a_Scope>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};
	jule::Ref<_206b0557a_Case> _field_next{jule::Ref<_206b0557a_Case>()};


	_206b0557a_Case(jule::Ref<_206b0557a_Match> __param_owner, jule::Ref<_206b0557a_Scope> __param_scope, jule::Slice<jule::Any> __param_exprs, jule::Ref<_206b0557a_Case> __param_next) {
		this->self = jule::Ref<_206b0557a_Case>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
		this->_field_next = __param_next;
	}

	~_206b0557a_Case(void) { this->self.ref = nullptr; }

	_206b0557a_Case(void) { this->self = jule::Ref<_206b0557a_Case>::make(this, nullptr); }

	inline jule::Bool _method_is_default(void);


	inline bool operator==(const _206b0557a_Case &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	inline bool operator!=(const _206b0557a_Case &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_FallSt {
	jule::Ref<_206b0557a_FallSt> self{};

	jule::Uintptr _field_dest_case{jule::Uintptr()};


	_206b0557a_FallSt(jule::Uintptr __param_dest_case) {
		this->self = jule::Ref<_206b0557a_FallSt>::make(this, nullptr);

		this->_field_dest_case = __param_dest_case;
	}

	~_206b0557a_FallSt(void) { this->self.ref = nullptr; }

	_206b0557a_FallSt(void) { this->self = jule::Ref<_206b0557a_FallSt>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_FallSt &_Src) const {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	inline bool operator!=(const _206b0557a_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_RetSt {
	jule::Ref<_206b0557a_RetSt> self{};

	jule::Slice<jule::Ref<_1d9e22661_Var>> _field_vars{jule::Slice<jule::Ref<_1d9e22661_Var>>()};
	jule::Any _field_expr{jule::Any()};


	_206b0557a_RetSt(jule::Slice<jule::Ref<_1d9e22661_Var>> __param_vars, jule::Any __param_expr) {
		this->self = jule::Ref<_206b0557a_RetSt>::make(this, nullptr);

		this->_field_vars = __param_vars;
		this->_field_expr = __param_expr;
	}

	~_206b0557a_RetSt(void) { this->self.ref = nullptr; }

	_206b0557a_RetSt(void) { this->self = jule::Ref<_206b0557a_RetSt>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_RetSt &_Src) const {
		return 
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _206b0557a_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_Recover {
	jule::Ref<_206b0557a_Recover> self{};

	jule::Ref<_2053ddd54_FnIns> _field_handler{jule::Ref<_2053ddd54_FnIns>()};
	jule::Any _field_handler_expr{jule::Any()};
	jule::Ref<_206b0557a_Scope> _field_scope{jule::Ref<_206b0557a_Scope>()};
	jule::Ref<_2053ddd54_FnIns> _field_scope_owner{jule::Ref<_2053ddd54_FnIns>()};


	_206b0557a_Recover(jule::Ref<_2053ddd54_FnIns> __param_handler, jule::Any __param_handler_expr, jule::Ref<_206b0557a_Scope> __param_scope, jule::Ref<_2053ddd54_FnIns> __param_scope_owner) {
		this->self = jule::Ref<_206b0557a_Recover>::make(this, nullptr);

		this->_field_handler = __param_handler;
		this->_field_handler_expr = __param_handler_expr;
		this->_field_scope = __param_scope;
		this->_field_scope_owner = __param_scope_owner;
	}

	~_206b0557a_Recover(void) { this->self.ref = nullptr; }

	_206b0557a_Recover(void) { this->self = jule::Ref<_206b0557a_Recover>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_Recover &_Src) const {
		return 
			this->_field_handler == _Src._field_handler &&
			this->_field_handler_expr == _Src._field_handler_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_scope_owner == _Src._field_scope_owner;
	}

	inline bool operator!=(const _206b0557a_Recover &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_ScopeLabel {
	jule::Ref<_206b0557a_ScopeLabel> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Ref<_206b0557a_Label> _field_label{jule::Ref<_206b0557a_Label>()};
	jule::Int _field_pos{jule::Int()};
	jule::Ref<_206b0557a_ScopeChecker> _field_scope{jule::Ref<_206b0557a_ScopeChecker>()};
	jule::Bool _field_used{jule::Bool()};


	_206b0557a_ScopeLabel(_20542560a_Token __param_token, jule::Ref<_206b0557a_Label> __param_label, jule::Int __param_pos, jule::Ref<_206b0557a_ScopeChecker> __param_scope, jule::Bool __param_used) {
		this->self = jule::Ref<_206b0557a_ScopeLabel>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
		this->_field_pos = __param_pos;
		this->_field_scope = __param_scope;
		this->_field_used = __param_used;
	}

	~_206b0557a_ScopeLabel(void) { this->self.ref = nullptr; }

	_206b0557a_ScopeLabel(void) { this->self = jule::Ref<_206b0557a_ScopeLabel>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_ScopeLabel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _206b0557a_ScopeLabel &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_ScopeGoto {
	jule::Ref<_206b0557a_ScopeGoto> self{};

	jule::Ref<_2053703bd_GotoSt> _field_gt{jule::Ref<_2053703bd_GotoSt>()};
	jule::Ref<_206b0557a_ScopeChecker> _field_scope{jule::Ref<_206b0557a_ScopeChecker>()};
	jule::Int _field_pos{jule::Int()};


	_206b0557a_ScopeGoto(jule::Ref<_2053703bd_GotoSt> __param_gt, jule::Ref<_206b0557a_ScopeChecker> __param_scope, jule::Int __param_pos) {
		this->self = jule::Ref<_206b0557a_ScopeGoto>::make(this, nullptr);

		this->_field_gt = __param_gt;
		this->_field_scope = __param_scope;
		this->_field_pos = __param_pos;
	}

	~_206b0557a_ScopeGoto(void) { this->self.ref = nullptr; }

	_206b0557a_ScopeGoto(void) { this->self = jule::Ref<_206b0557a_ScopeGoto>::make(this, nullptr); }

	inline bool operator==(const _206b0557a_ScopeGoto &_Src) const {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _206b0557a_ScopeGoto &_Src) const { return !this->operator==(_Src); }
};


struct _206b0557a_ScopeChecker: public _206c8d636_Lookup {
	jule::Ref<_206b0557a_ScopeChecker> self{};

	jule::Ref<_1d9dc7517_Sema> _field_s{jule::Ref<_1d9dc7517_Sema>()};
	jule::Ref<_2053ddd54_FnIns> _field_owner{jule::Ref<_2053ddd54_FnIns>()};
	jule::Ref<_206b0557a_ScopeChecker> _field_parent{jule::Ref<_206b0557a_ScopeChecker>()};
	jule::Int _field_child_index{jule::Int()};
	jule::Ref<_1da2aa301_SymbolTable> _field_table{jule::Ref<_1da2aa301_SymbolTable>()};
	jule::Ref<_206b0557a_Scope> _field_scope{jule::Ref<_206b0557a_Scope>()};
	jule::Ref<_2053703bd_ScopeTree> _field_tree{jule::Ref<_2053703bd_ScopeTree>()};
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_cse{jule::Uintptr()};
	jule::Ref<jule::Slice<jule::Ref<_206b0557a_ScopeLabel>>> _field_labels{jule::Ref<jule::Slice<jule::Ref<_206b0557a_ScopeLabel>>>()};
	jule::Ref<jule::Slice<jule::Ref<_206b0557a_ScopeGoto>>> _field_gotos{jule::Ref<jule::Slice<jule::Ref<_206b0557a_ScopeGoto>>>()};
	jule::Int _field_i{jule::Int()};


	_206b0557a_ScopeChecker(jule::Ref<_1d9dc7517_Sema> __param_s, jule::Ref<_2053ddd54_FnIns> __param_owner, jule::Ref<_206b0557a_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ref<_1da2aa301_SymbolTable> __param_table, jule::Ref<_206b0557a_Scope> __param_scope, jule::Ref<_2053703bd_ScopeTree> __param_tree, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ref<jule::Slice<jule::Ref<_206b0557a_ScopeLabel>>> __param_labels, jule::Ref<jule::Slice<jule::Ref<_206b0557a_ScopeGoto>>> __param_gotos, jule::Int __param_i) {
		this->self = jule::Ref<_206b0557a_ScopeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_owner = __param_owner;
		this->_field_parent = __param_parent;
		this->_field_child_index = __param_child_index;
		this->_field_table = __param_table;
		this->_field_scope = __param_scope;
		this->_field_tree = __param_tree;
		this->_field_it = __param_it;
		this->_field_cse = __param_cse;
		this->_field_labels = __param_labels;
		this->_field_gotos = __param_gotos;
		this->_field_i = __param_i;
	}

	~_206b0557a_ScopeChecker(void) { this->self.ref = nullptr; }

	_206b0557a_ScopeChecker(void) { this->self = jule::Ref<_206b0557a_ScopeChecker>::make(this, nullptr); }

	inline jule::Ref<_206e66325_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_206e66325_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)>);


	inline jule::Ref<_1d9e22661_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1da411226_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_2053cdc01_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_2053ddd54_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_2065895c5_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_206b06c0d_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline jule::Ref<_206b0557a_ScopeChecker> _method_get_root(void);


	inline jule::Ref<_206b0557a_Label> _method_find_label(jule::Str);


	inline jule::Ref<_206b0557a_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ref<_206b0557a_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ref<_2053703bd_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ref<_2053703bd_TypeAliasDecl>);


	inline jule::Ref<_206b0557a_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ref<_2053703bd_ScopeTree>,jule::Ref<_206b0557a_Scope>,jule::Ref<_206b0557a_ScopeChecker>);


	inline jule::Ref<_206b0557a_Scope> _method_check_child_sc(jule::Ref<_2053703bd_ScopeTree>,jule::Ref<_206b0557a_ScopeChecker>);


	inline jule::Ref<_206b0557a_Scope> _method_check_child(jule::Ref<_2053703bd_ScopeTree>);


	inline void _method_check_anon_scope(jule::Ref<_2053703bd_ScopeTree>);


	inline jule::Bool _method_try_call_recover(jule::Ref<_1da2d3bdc_Data>);


	inline void _method_check_expr(jule::Ref<_2053703bd_Expr>);


	inline jule::Ref<_206b0557a_If> _method_check_if(jule::Ref<_2053703bd_If>);


	inline jule::Ref<_206b0557a_Else> _method_check_else(jule::Ref<_2053703bd_Else>);


	inline void _method_check_conditional(jule::Ref<_2053703bd_Conditional>);


	inline jule::Ref<_206b0557a_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ref<_2053703bd_ScopeTree>,jule::Ref<_206b0557a_ScopeChecker>);


	inline jule::Ref<_206b0557a_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ref<_2053703bd_ScopeTree>);


	inline void _method_check_inf_iter(jule::Ref<_2053703bd_Iter>);


	inline void _method_check_while_iter(jule::Ref<_2053703bd_Iter>);


	inline void _method_check_range_iter(jule::Ref<_2053703bd_Iter>);


	inline void _method_check_iter(jule::Ref<_2053703bd_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ref<_206b0557a_ContSt> _method_check_cont_valid_scope(jule::Ref<_2053703bd_ContSt>);


	inline void _method_check_cont(jule::Ref<_2053703bd_ContSt>);


	inline void _method_check_label(jule::Ref<_2053703bd_LabelSt>);


	inline void _method_push_goto(jule::Ref<_2053703bd_GotoSt>);


	inline void _method_check_postfix(jule::Ref<_2053703bd_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline void _method_check_single_assign(jule::Ref<_2053703bd_AssignSt>);


	inline void _method___process_end_part_of_multi_assign(jule::Ref<_206b0557a_MultiAssign>,jule::Ref<_2053703bd_AssignSt>,jule::Ref<_2053703bd_AssignLeft>,jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>);


	inline void _method_check_ret_multi_assign(jule::Ref<_2053703bd_AssignSt>);


	inline void _method_check_multi_assign(jule::Ref<_2053703bd_AssignSt>);


	inline void _method_check_assign_st(jule::Ref<_2053703bd_AssignSt>);


	inline jule::Ref<_206b0557a_Scope> _method_check_case_scope(jule::Ref<_206b0557a_Case>,jule::Ref<_2053703bd_ScopeTree>);


	inline jule::Ref<_206b0557a_Case> _method_check_case(jule::Ref<_206b0557a_Match>,jule::Int,jule::Ref<_2053703bd_Case>,jule::Ref<_1da2d3bdc_Data>);


	inline void _method_check_cases(jule::Ref<_2053703bd_MatchCase>,jule::Ref<_206b0557a_Match>,jule::Ref<_1da2d3bdc_Data>);


	inline jule::Ref<_206b0557a_Case> _method_check_default(jule::Ref<_206b0557a_Match>,jule::Ref<_2053703bd_Else>);


	inline void _method_check_type_match(jule::Ref<_2053703bd_MatchCase>);


	inline void _method_check_common_match(jule::Ref<_2053703bd_MatchCase>);


	inline void _method_check_match(jule::Ref<_2053703bd_MatchCase>);


	inline void _method_check_fall(jule::Ref<_2053703bd_FallSt>);


	inline jule::Ref<_206b0557a_BreakSt> _method_check_break_with_label(jule::Ref<_2053703bd_BreakSt>);


	inline jule::Ref<_206b0557a_BreakSt> _method_check_plain_break(jule::Ref<_2053703bd_BreakSt>);


	inline void _method_check_break(jule::Ref<_2053703bd_BreakSt>);


	inline void _method_check_ret(jule::Ref<_2053703bd_RetSt>);


	inline void _method_check_node(jule::Any);


	inline void _method_check_tree(void);


	inline void _method_check_same_scope_goto(jule::Ref<_206b0557a_ScopeGoto>,jule::Ref<_206b0557a_ScopeLabel>);


	inline jule::Bool _method_check_label_parents(jule::Ref<_206b0557a_ScopeGoto>,jule::Ref<_206b0557a_ScopeLabel>);


	inline void _method_check_goto_scope(jule::Ref<_206b0557a_ScopeGoto>,jule::Ref<_206b0557a_ScopeLabel>);


	inline void _method_check_diff_scope_goto(jule::Ref<_206b0557a_ScopeGoto>,jule::Ref<_206b0557a_ScopeLabel>);


	inline void _method_check_goto(jule::Ref<_206b0557a_ScopeGoto>,jule::Ref<_206b0557a_ScopeLabel>);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ref<_2053703bd_ScopeTree>,jule::Ref<_206b0557a_Scope>);


	inline jule::Ref<_206b0557a_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(const _206b0557a_ScopeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _206b0557a_ScopeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_BinopExprModel {
	jule::Ref<_206e63542_BinopExprModel> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_206e63542_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op) {
		this->self = jule::Ref<_206e63542_BinopExprModel>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_206e63542_BinopExprModel(void) { this->self.ref = nullptr; }

	_206e63542_BinopExprModel(void) { this->self = jule::Ref<_206e63542_BinopExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_BinopExprModel &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _206e63542_BinopExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_UnaryExprModel {
	jule::Ref<_206e63542_UnaryExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_206e63542_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_206e63542_UnaryExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_206e63542_UnaryExprModel(void) { this->self.ref = nullptr; }

	_206e63542_UnaryExprModel(void) { this->self = jule::Ref<_206e63542_UnaryExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_UnaryExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _206e63542_UnaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_GetRefPtrExprModel {
	jule::Ref<_206e63542_GetRefPtrExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_206e63542_GetRefPtrExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_206e63542_GetRefPtrExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_206e63542_GetRefPtrExprModel(void) { this->self.ref = nullptr; }

	_206e63542_GetRefPtrExprModel(void) { this->self = jule::Ref<_206e63542_GetRefPtrExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_GetRefPtrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _206e63542_GetRefPtrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_StructArgExprModel {
	jule::Ref<_206e63542_StructArgExprModel> self{};

	jule::Ref<_2053cdc01_FieldIns> _field_field{jule::Ref<_2053cdc01_FieldIns>()};
	jule::Any _field_expr{jule::Any()};


	_206e63542_StructArgExprModel(jule::Ref<_2053cdc01_FieldIns> __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_206e63542_StructArgExprModel>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_206e63542_StructArgExprModel(void) { this->self.ref = nullptr; }

	_206e63542_StructArgExprModel(void) { this->self = jule::Ref<_206e63542_StructArgExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_StructArgExprModel &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _206e63542_StructArgExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_StructLitExprModel {
	jule::Ref<_206e63542_StructLitExprModel> self{};

	jule::Ref<_2053cdc01_StructIns> _field_strct{jule::Ref<_2053cdc01_StructIns>()};
	jule::Slice<jule::Ref<_206e63542_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_206e63542_StructArgExprModel>>()};


	_206e63542_StructLitExprModel(jule::Ref<_2053cdc01_StructIns> __param_strct, jule::Slice<jule::Ref<_206e63542_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_206e63542_StructLitExprModel>::make(this, nullptr);

		this->_field_strct = __param_strct;
		this->_field_args = __param_args;
	}

	~_206e63542_StructLitExprModel(void) { this->self.ref = nullptr; }

	_206e63542_StructLitExprModel(void) { this->self = jule::Ref<_206e63542_StructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_StructLitExprModel &_Src) const {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _206e63542_StructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_AllocStructLitExprModel {
	jule::Ref<_206e63542_AllocStructLitExprModel> self{};

	jule::Ref<_206e63542_StructLitExprModel> _field_lit{jule::Ref<_206e63542_StructLitExprModel>()};


	_206e63542_AllocStructLitExprModel(jule::Ref<_206e63542_StructLitExprModel> __param_lit) {
		this->self = jule::Ref<_206e63542_AllocStructLitExprModel>::make(this, nullptr);

		this->_field_lit = __param_lit;
	}

	~_206e63542_AllocStructLitExprModel(void) { this->self.ref = nullptr; }

	_206e63542_AllocStructLitExprModel(void) { this->self = jule::Ref<_206e63542_AllocStructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_AllocStructLitExprModel &_Src) const {
		return 
			this->_field_lit == _Src._field_lit;
	}

	inline bool operator!=(const _206e63542_AllocStructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_CastingExprModel {
	jule::Ref<_206e63542_CastingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1da411226_TypeKind> _field_kind{jule::Ref<_1da411226_TypeKind>()};
	jule::Ref<_1da411226_TypeKind> _field_expr_kind{jule::Ref<_1da411226_TypeKind>()};


	_206e63542_CastingExprModel(jule::Any __param_expr, jule::Ref<_1da411226_TypeKind> __param_kind, jule::Ref<_1da411226_TypeKind> __param_expr_kind) {
		this->self = jule::Ref<_206e63542_CastingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_kind = __param_kind;
		this->_field_expr_kind = __param_expr_kind;
	}

	~_206e63542_CastingExprModel(void) { this->self.ref = nullptr; }

	_206e63542_CastingExprModel(void) { this->self = jule::Ref<_206e63542_CastingExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_CastingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	inline bool operator!=(const _206e63542_CastingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_FnCallExprModel {
	jule::Ref<_206e63542_FnCallExprModel> self{};

	jule::Ref<_2053ddd54_FnIns> _field_func{jule::Ref<_2053ddd54_FnIns>()};
	jule::Bool _field_is_co{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	jule::Slice<jule::Any> _field_args{jule::Slice<jule::Any>()};


	_206e63542_FnCallExprModel(jule::Ref<_2053ddd54_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args) {
		this->self = jule::Ref<_206e63542_FnCallExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_is_co = __param_is_co;
		this->_field_expr = __param_expr;
		this->_field_args = __param_args;
	}

	~_206e63542_FnCallExprModel(void) { this->self.ref = nullptr; }

	_206e63542_FnCallExprModel(void) { this->self = jule::Ref<_206e63542_FnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_FnCallExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _206e63542_FnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_SliceExprModel {
	jule::Ref<_206e63542_SliceExprModel> self{};

	jule::Ref<_1da411226_TypeKind> _field_elem_kind{jule::Ref<_1da411226_TypeKind>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_206e63542_SliceExprModel(jule::Ref<_1da411226_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_206e63542_SliceExprModel>::make(this, nullptr);

		this->_field_elem_kind = __param_elem_kind;
		this->_field_elems = __param_elems;
	}

	~_206e63542_SliceExprModel(void) { this->self.ref = nullptr; }

	_206e63542_SliceExprModel(void) { this->self = jule::Ref<_206e63542_SliceExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_SliceExprModel &_Src) const {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _206e63542_SliceExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_IndexigExprModel {
	jule::Ref<_206e63542_IndexigExprModel> self{};

	jule::Ref<_1da2d3bdc_Data> _field_expr{jule::Ref<_1da2d3bdc_Data>()};
	jule::Ref<_1da2d3bdc_Data> _field_index{jule::Ref<_1da2d3bdc_Data>()};


	_206e63542_IndexigExprModel(jule::Ref<_1da2d3bdc_Data> __param_expr, jule::Ref<_1da2d3bdc_Data> __param_index) {
		this->self = jule::Ref<_206e63542_IndexigExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_206e63542_IndexigExprModel(void) { this->self.ref = nullptr; }

	_206e63542_IndexigExprModel(void) { this->self = jule::Ref<_206e63542_IndexigExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_IndexigExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _206e63542_IndexigExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_AnonFnExprModel {
	jule::Ref<_206e63542_AnonFnExprModel> self{};

	jule::Ref<_2053ddd54_FnIns> _field_func{jule::Ref<_2053ddd54_FnIns>()};
	jule::Bool _field_global{jule::Bool()};


	_206e63542_AnonFnExprModel(jule::Ref<_2053ddd54_FnIns> __param_func, jule::Bool __param_global) {
		this->self = jule::Ref<_206e63542_AnonFnExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_global = __param_global;
	}

	~_206e63542_AnonFnExprModel(void) { this->self.ref = nullptr; }

	_206e63542_AnonFnExprModel(void) { this->self = jule::Ref<_206e63542_AnonFnExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_AnonFnExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	inline bool operator!=(const _206e63542_AnonFnExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_KeyValPairExprModel {
	jule::Ref<_206e63542_KeyValPairExprModel> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};


	_206e63542_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val) {
		this->self = jule::Ref<_206e63542_KeyValPairExprModel>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_206e63542_KeyValPairExprModel(void) { this->self.ref = nullptr; }

	_206e63542_KeyValPairExprModel(void) { this->self = jule::Ref<_206e63542_KeyValPairExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_KeyValPairExprModel &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _206e63542_KeyValPairExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_MapExprModel {
	jule::Ref<_206e63542_MapExprModel> self{};

	jule::Ref<_1da411226_TypeKind> _field_key_kind{jule::Ref<_1da411226_TypeKind>()};
	jule::Ref<_1da411226_TypeKind> _field_val_kind{jule::Ref<_1da411226_TypeKind>()};
	jule::Slice<jule::Ref<_206e63542_KeyValPairExprModel>> _field_entries{jule::Slice<jule::Ref<_206e63542_KeyValPairExprModel>>()};


	_206e63542_MapExprModel(jule::Ref<_1da411226_TypeKind> __param_key_kind, jule::Ref<_1da411226_TypeKind> __param_val_kind, jule::Slice<jule::Ref<_206e63542_KeyValPairExprModel>> __param_entries) {
		this->self = jule::Ref<_206e63542_MapExprModel>::make(this, nullptr);

		this->_field_key_kind = __param_key_kind;
		this->_field_val_kind = __param_val_kind;
		this->_field_entries = __param_entries;
	}

	~_206e63542_MapExprModel(void) { this->self.ref = nullptr; }

	_206e63542_MapExprModel(void) { this->self = jule::Ref<_206e63542_MapExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_MapExprModel &_Src) const {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	inline bool operator!=(const _206e63542_MapExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_SlicingExprModel {
	jule::Ref<_206e63542_SlicingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};


	_206e63542_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right) {
		this->self = jule::Ref<_206e63542_SlicingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_206e63542_SlicingExprModel(void) { this->self.ref = nullptr; }

	_206e63542_SlicingExprModel(void) { this->self = jule::Ref<_206e63542_SlicingExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_SlicingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _206e63542_SlicingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_TraitSubIdentExprModel {
	jule::Ref<_206e63542_TraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_206e63542_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_206e63542_TraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_206e63542_TraitSubIdentExprModel(void) { this->self.ref = nullptr; }

	_206e63542_TraitSubIdentExprModel(void) { this->self = jule::Ref<_206e63542_TraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_TraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _206e63542_TraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_StructSubIdentExprModel {
	jule::Ref<_206e63542_StructSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1da411226_TypeKind> _field_expr_kind{jule::Ref<_1da411226_TypeKind>()};
	jule::Ref<_2053ddd54_FnIns> _field_method{jule::Ref<_2053ddd54_FnIns>()};
	jule::Ref<_2053cdc01_FieldIns> _field_field{jule::Ref<_2053cdc01_FieldIns>()};


	_206e63542_StructSubIdentExprModel(jule::Any __param_expr, jule::Ref<_1da411226_TypeKind> __param_expr_kind, jule::Ref<_2053ddd54_FnIns> __param_method, jule::Ref<_2053cdc01_FieldIns> __param_field) {
		this->self = jule::Ref<_206e63542_StructSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_expr_kind = __param_expr_kind;
		this->_field_method = __param_method;
		this->_field_field = __param_field;
	}

	~_206e63542_StructSubIdentExprModel(void) { this->self.ref = nullptr; }

	_206e63542_StructSubIdentExprModel(void) { this->self = jule::Ref<_206e63542_StructSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_StructSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	inline bool operator!=(const _206e63542_StructSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_StructStaticIdentExprModel {
	jule::Ref<_206e63542_StructStaticIdentExprModel> self{};

	jule::Ref<_2053cdc01_StructIns> _field_structure{jule::Ref<_2053cdc01_StructIns>()};
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_2053ddd54_FnIns> _field_method{jule::Ref<_2053ddd54_FnIns>()};


	_206e63542_StructStaticIdentExprModel(jule::Ref<_2053cdc01_StructIns> __param_structure, jule::Any __param_expr, jule::Ref<_2053ddd54_FnIns> __param_method) {
		this->self = jule::Ref<_206e63542_StructStaticIdentExprModel>::make(this, nullptr);

		this->_field_structure = __param_structure;
		this->_field_expr = __param_expr;
		this->_field_method = __param_method;
	}

	~_206e63542_StructStaticIdentExprModel(void) { this->self.ref = nullptr; }

	_206e63542_StructStaticIdentExprModel(void) { this->self = jule::Ref<_206e63542_StructStaticIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_StructStaticIdentExprModel &_Src) const {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	inline bool operator!=(const _206e63542_StructStaticIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_ArrayExprModel {
	jule::Ref<_206e63542_ArrayExprModel> self{};

	jule::Ref<_1da411226_Arr> _field_kind{jule::Ref<_1da411226_Arr>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_206e63542_ArrayExprModel(jule::Ref<_1da411226_Arr> __param_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_206e63542_ArrayExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_elems = __param_elems;
	}

	~_206e63542_ArrayExprModel(void) { this->self.ref = nullptr; }

	_206e63542_ArrayExprModel(void) { this->self = jule::Ref<_206e63542_ArrayExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_ArrayExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _206e63542_ArrayExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_CommonIdentExprModel {
	jule::Ref<_206e63542_CommonIdentExprModel> self{};

	jule::Str _field_ident{jule::Str()};


	_206e63542_CommonIdentExprModel(jule::Str __param_ident) {
		this->self = jule::Ref<_206e63542_CommonIdentExprModel>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_206e63542_CommonIdentExprModel(void) { this->self.ref = nullptr; }

	_206e63542_CommonIdentExprModel(void) { this->self = jule::Ref<_206e63542_CommonIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_CommonIdentExprModel &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _206e63542_CommonIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_CommonSubIdentExprModel {
	jule::Ref<_206e63542_CommonSubIdentExprModel> self{};

	jule::Ref<_1da411226_TypeKind> _field_expr_kind{jule::Ref<_1da411226_TypeKind>()};
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_206e63542_CommonSubIdentExprModel(jule::Ref<_1da411226_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_206e63542_CommonSubIdentExprModel>::make(this, nullptr);

		this->_field_expr_kind = __param_expr_kind;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_206e63542_CommonSubIdentExprModel(void) { this->self.ref = nullptr; }

	_206e63542_CommonSubIdentExprModel(void) { this->self = jule::Ref<_206e63542_CommonSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_CommonSubIdentExprModel &_Src) const {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _206e63542_CommonSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_TupleExprModel {
	jule::Ref<_206e63542_TupleExprModel> self{};

	jule::Slice<jule::Ref<_1da2d3bdc_Data>> _field_datas{jule::Slice<jule::Ref<_1da2d3bdc_Data>>()};


	_206e63542_TupleExprModel(jule::Slice<jule::Ref<_1da2d3bdc_Data>> __param_datas) {
		this->self = jule::Ref<_206e63542_TupleExprModel>::make(this, nullptr);

		this->_field_datas = __param_datas;
	}

	~_206e63542_TupleExprModel(void) { this->self.ref = nullptr; }

	_206e63542_TupleExprModel(void) { this->self = jule::Ref<_206e63542_TupleExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_TupleExprModel &_Src) const {
		return 
			this->_field_datas == _Src._field_datas;
	}

	inline bool operator!=(const _206e63542_TupleExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_BuiltinOutCallExprModel {
	jule::Ref<_206e63542_BuiltinOutCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_206e63542_BuiltinOutCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_206e63542_BuiltinOutCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_206e63542_BuiltinOutCallExprModel(void) { this->self.ref = nullptr; }

	_206e63542_BuiltinOutCallExprModel(void) { this->self = jule::Ref<_206e63542_BuiltinOutCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_BuiltinOutCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _206e63542_BuiltinOutCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_BuiltinOutlnCallExprModel {
	jule::Ref<_206e63542_BuiltinOutlnCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_206e63542_BuiltinOutlnCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_206e63542_BuiltinOutlnCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_206e63542_BuiltinOutlnCallExprModel(void) { this->self.ref = nullptr; }

	_206e63542_BuiltinOutlnCallExprModel(void) { this->self = jule::Ref<_206e63542_BuiltinOutlnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_BuiltinOutlnCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _206e63542_BuiltinOutlnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_BuiltinCloneCallExprModel {
	jule::Ref<_206e63542_BuiltinCloneCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_206e63542_BuiltinCloneCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_206e63542_BuiltinCloneCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_206e63542_BuiltinCloneCallExprModel(void) { this->self.ref = nullptr; }

	_206e63542_BuiltinCloneCallExprModel(void) { this->self = jule::Ref<_206e63542_BuiltinCloneCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_BuiltinCloneCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _206e63542_BuiltinCloneCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_BuiltinNewCallExprModel {
	jule::Ref<_206e63542_BuiltinNewCallExprModel> self{};

	jule::Ref<_1da411226_TypeKind> _field_kind{jule::Ref<_1da411226_TypeKind>()};
	jule::Any _field_init{jule::Any()};


	_206e63542_BuiltinNewCallExprModel(jule::Ref<_1da411226_TypeKind> __param_kind, jule::Any __param_init) {
		this->self = jule::Ref<_206e63542_BuiltinNewCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_init = __param_init;
	}

	~_206e63542_BuiltinNewCallExprModel(void) { this->self.ref = nullptr; }

	_206e63542_BuiltinNewCallExprModel(void) { this->self = jule::Ref<_206e63542_BuiltinNewCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_BuiltinNewCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	inline bool operator!=(const _206e63542_BuiltinNewCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_BuiltinRealCallExprModel {
	jule::Ref<_206e63542_BuiltinRealCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_206e63542_BuiltinRealCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_206e63542_BuiltinRealCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_206e63542_BuiltinRealCallExprModel(void) { this->self.ref = nullptr; }

	_206e63542_BuiltinRealCallExprModel(void) { this->self = jule::Ref<_206e63542_BuiltinRealCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_BuiltinRealCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _206e63542_BuiltinRealCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_BuiltinDropCallExprModel {
	jule::Ref<_206e63542_BuiltinDropCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_206e63542_BuiltinDropCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_206e63542_BuiltinDropCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_206e63542_BuiltinDropCallExprModel(void) { this->self.ref = nullptr; }

	_206e63542_BuiltinDropCallExprModel(void) { this->self = jule::Ref<_206e63542_BuiltinDropCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_BuiltinDropCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _206e63542_BuiltinDropCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_BuiltinPanicCallExprModel {
	jule::Ref<_206e63542_BuiltinPanicCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_206e63542_BuiltinPanicCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_206e63542_BuiltinPanicCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_206e63542_BuiltinPanicCallExprModel(void) { this->self.ref = nullptr; }

	_206e63542_BuiltinPanicCallExprModel(void) { this->self = jule::Ref<_206e63542_BuiltinPanicCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_BuiltinPanicCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _206e63542_BuiltinPanicCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_BuiltinMakeCallExprModel {
	jule::Ref<_206e63542_BuiltinMakeCallExprModel> self{};

	jule::Ref<_1da411226_TypeKind> _field_kind{jule::Ref<_1da411226_TypeKind>()};
	jule::Any _field_len{jule::Any()};
	jule::Any _field_cap{jule::Any()};


	_206e63542_BuiltinMakeCallExprModel(jule::Ref<_1da411226_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap) {
		this->self = jule::Ref<_206e63542_BuiltinMakeCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_len = __param_len;
		this->_field_cap = __param_cap;
	}

	~_206e63542_BuiltinMakeCallExprModel(void) { this->self.ref = nullptr; }

	_206e63542_BuiltinMakeCallExprModel(void) { this->self = jule::Ref<_206e63542_BuiltinMakeCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_BuiltinMakeCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	inline bool operator!=(const _206e63542_BuiltinMakeCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_BuiltinAppendCallExprModel {
	jule::Ref<_206e63542_BuiltinAppendCallExprModel> self{};

	jule::Any _field_dest{jule::Any()};
	jule::Any _field_elements{jule::Any()};


	_206e63542_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements) {
		this->self = jule::Ref<_206e63542_BuiltinAppendCallExprModel>::make(this, nullptr);

		this->_field_dest = __param_dest;
		this->_field_elements = __param_elements;
	}

	~_206e63542_BuiltinAppendCallExprModel(void) { this->self.ref = nullptr; }

	_206e63542_BuiltinAppendCallExprModel(void) { this->self = jule::Ref<_206e63542_BuiltinAppendCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_BuiltinAppendCallExprModel &_Src) const {
		return 
			this->_field_dest == _Src._field_dest &&
			this->_field_elements == _Src._field_elements;
	}

	inline bool operator!=(const _206e63542_BuiltinAppendCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_BuiltinErrorTraitSubIdentExprModel {
	jule::Ref<_206e63542_BuiltinErrorTraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_206e63542_BuiltinErrorTraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_206e63542_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_206e63542_BuiltinErrorTraitSubIdentExprModel(void) { this->self.ref = nullptr; }

	_206e63542_BuiltinErrorTraitSubIdentExprModel(void) { this->self = jule::Ref<_206e63542_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_BuiltinErrorTraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _206e63542_BuiltinErrorTraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_SizeofExprModel {
	jule::Ref<_206e63542_SizeofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_206e63542_SizeofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_206e63542_SizeofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_206e63542_SizeofExprModel(void) { this->self.ref = nullptr; }

	_206e63542_SizeofExprModel(void) { this->self = jule::Ref<_206e63542_SizeofExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_SizeofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _206e63542_SizeofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_AlignofExprModel {
	jule::Ref<_206e63542_AlignofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_206e63542_AlignofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_206e63542_AlignofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_206e63542_AlignofExprModel(void) { this->self.ref = nullptr; }

	_206e63542_AlignofExprModel(void) { this->self = jule::Ref<_206e63542_AlignofExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_AlignofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _206e63542_AlignofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_RuneExprModel {
	jule::Ref<_206e63542_RuneExprModel> self{};

	jule::I32 _field_code{jule::I32()};


	_206e63542_RuneExprModel(jule::I32 __param_code) {
		this->self = jule::Ref<_206e63542_RuneExprModel>::make(this, nullptr);

		this->_field_code = __param_code;
	}

	~_206e63542_RuneExprModel(void) { this->self.ref = nullptr; }

	_206e63542_RuneExprModel(void) { this->self = jule::Ref<_206e63542_RuneExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_RuneExprModel &_Src) const {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _206e63542_RuneExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_ExplicitDerefExprModel {
	jule::Ref<_206e63542_ExplicitDerefExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_206e63542_ExplicitDerefExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_206e63542_ExplicitDerefExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_206e63542_ExplicitDerefExprModel(void) { this->self.ref = nullptr; }

	_206e63542_ExplicitDerefExprModel(void) { this->self = jule::Ref<_206e63542_ExplicitDerefExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_ExplicitDerefExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _206e63542_ExplicitDerefExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e63542_IntegratedToStrExprModel {
	jule::Ref<_206e63542_IntegratedToStrExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_206e63542_IntegratedToStrExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_206e63542_IntegratedToStrExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_206e63542_IntegratedToStrExprModel(void) { this->self.ref = nullptr; }

	_206e63542_IntegratedToStrExprModel(void) { this->self = jule::Ref<_206e63542_IntegratedToStrExprModel>::make(this, nullptr); }

	inline bool operator==(const _206e63542_IntegratedToStrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _206e63542_IntegratedToStrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _206e66325_ImportInfo: public _206c8d636_Lookup {
	jule::Ref<_206e66325_ImportInfo> self{};

	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_ident{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_duplicate{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};
	jule::Bool _field_import_all{jule::Bool()};
	jule::Slice<_20542560a_Token> _field_selected{jule::Slice<_20542560a_Token>()};
	jule::Ref<_206e66325_Package> _field_package{jule::Ref<_206e66325_Package>()};


	_206e66325_ImportInfo(_20542560a_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_20542560a_Token> __param_selected, jule::Ref<_206e66325_Package> __param_package) {
		this->self = jule::Ref<_206e66325_ImportInfo>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_path = __param_path;
		this->_field_link_path = __param_link_path;
		this->_field_ident = __param_ident;
		this->_field_alias = __param_alias;
		this->_field_duplicate = __param_duplicate;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
		this->_field_import_all = __param_import_all;
		this->_field_selected = __param_selected;
		this->_field_package = __param_package;
	}

	~_206e66325_ImportInfo(void) { this->self.ref = nullptr; }

	_206e66325_ImportInfo(void) { this->self = jule::Ref<_206e66325_ImportInfo>::make(this, nullptr); }

	inline jule::Ref<_206e66325_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_206e66325_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)>);


	inline jule::Ref<_1d9e22661_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1da411226_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_2053cdc01_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_2053ddd54_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_2065895c5_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_206b06c0d_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline bool operator==(const _206e66325_ImportInfo &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_alias == _Src._field_alias &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	inline bool operator!=(const _206e66325_ImportInfo &_Src) const { return !this->operator==(_Src); }
};


struct _206e66325_Package: public _206c8d636_Lookup {
	jule::Ref<_206e66325_Package> self{};

	jule::Slice<jule::Ref<_1da2aa301_SymbolTable>> _field_files{jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>()};


	_206e66325_Package(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>> __param_files) {
		this->self = jule::Ref<_206e66325_Package>::make(this, nullptr);

		this->_field_files = __param_files;
	}

	~_206e66325_Package(void) { this->self.ref = nullptr; }

	_206e66325_Package(void) { this->self = jule::Ref<_206e66325_Package>::make(this, nullptr); }

	inline jule::Ref<_206e66325_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_206e66325_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)>);


	inline jule::Ref<_1d9e22661_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1da411226_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_2053cdc01_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_2053ddd54_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_2065895c5_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_206b06c0d_Enum> _method_find_enum(jule::Str);


	inline bool operator==(const _206e66325_Package &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _206e66325_Package &_Src) const { return !this->operator==(_Src); }
};


struct _1d9dc7517_Sema: public _206c8d636_Lookup {
	jule::Ref<_1d9dc7517_Sema> self{};

	jule::Slice<_20377124e_Log> _field_errors{jule::Slice<_20377124e_Log>()};
	jule::Slice<jule::Ref<_1da2aa301_SymbolTable>> _field_files{jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>()};
	jule::Ref<_1da2aa301_SymbolTable> _field_file{jule::Ref<_1da2aa301_SymbolTable>()};
	jule::Int _field_flags{0LL};


	_1d9dc7517_Sema(jule::Slice<_20377124e_Log> __param_errors, jule::Slice<jule::Ref<_1da2aa301_SymbolTable>> __param_files, jule::Ref<_1da2aa301_SymbolTable> __param_file, jule::Int __param_flags) {
		this->self = jule::Ref<_1d9dc7517_Sema>::make(this, nullptr);

		this->_field_errors = __param_errors;
		this->_field_files = __param_files;
		this->_field_file = __param_file;
		this->_field_flags = __param_flags;
	}

	~_1d9dc7517_Sema(void) { this->self.ref = nullptr; }

	_1d9dc7517_Sema(void) { this->self = jule::Ref<_1d9dc7517_Sema>::make(this, nullptr); }

	inline jule::Ref<_206e66325_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_206e66325_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)>);


	inline jule::Ref<_1d9e22661_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1da411226_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_2053cdc01_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_2053ddd54_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_2065895c5_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_206b06c0d_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_flag(jule::Int);


	inline void _method_set_current_file(jule::Ref<_1da2aa301_SymbolTable>);


	inline void _method_push_err(_20542560a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_20542560a_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_20542560a_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline jule::Any _method_get_import_def(jule::Str,jule::Ref<_206e66325_ImportInfo>&);


	inline void _method_check_import_selections(jule::Ref<_206e66325_ImportInfo>);


	inline jule::Bool _method_is_use_alias_duplication(jule::Ref<_206e66325_ImportInfo>&);


	inline jule::Bool _method_check_import(jule::Ref<_206e66325_ImportInfo>);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ref<_1da411226_TypeSymbol>,jule::Trait<_206c8d636_Lookup>,jule::Ref<_1da411226_Referencer>);


	inline jule::Bool _method_check_type(jule::Ref<_1da411226_TypeSymbol>,jule::Trait<_206c8d636_Lookup>);


	inline jule::Ref<_1da411226_TypeKind> _method_build_type_with_generics(jule::Ref<_2053703bd_TypeDecl>,jule::Slice<jule::Ref<_1da411226_TypeAlias>>);


	inline jule::Ref<_1da411226_TypeKind> _method_build_type(jule::Ref<_2053703bd_TypeDecl>);


	inline jule::Ref<_1da2d3bdc_Data> _method_evalpd(jule::Ref<_2053703bd_Expr>,jule::Trait<_206c8d636_Lookup>,jule::Ref<_1da411226_TypeKind>,jule::Ref<_1d9e22661_Var>);


	inline jule::Ref<_1da2d3bdc_Data> _method_evalp(jule::Ref<_2053703bd_Expr>,jule::Trait<_206c8d636_Lookup>,jule::Ref<_1da411226_TypeKind>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval(jule::Ref<_2053703bd_Expr>,jule::Trait<_206c8d636_Lookup>);


	inline void _method_check_assign_type(jule::Ref<_1da411226_TypeKind>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token,jule::Bool);


	inline jule::Bool _method_check_type_compatibility(jule::Ref<_1da411226_TypeKind>,jule::Ref<_1da411226_TypeKind>,_20542560a_Token,jule::Bool);


	inline jule::Ref<_1da411226_TypeKind> _method_build_non_generic_type_kind(jule::Ref<_2053703bd_TypeDecl>,jule::Slice<jule::Ref<_2053703bd_GenericDecl>>);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ref<_2053ddd54_FnIns>);


	inline jule::Ref<_2053ddd54_FnIns> _method_get_trait_check_fn_kind(jule::Ref<_2053ddd54_Fn>);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ref<_2053ddd54_FnIns>);


	inline void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ref<_1da411226_TypeKind>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ref<_1da411226_TypeAlias>,jule::Trait<_206c8d636_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ref<_1da411226_TypeAlias>,jule::Trait<_206c8d636_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ref<_1da411226_TypeAlias>);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ref<_206b06c0d_Enum>);


	inline void _method_check_enum_items_str(jule::Ref<_206b06c0d_Enum>);


	inline void _method_check_enum_items_int(jule::Ref<_206b06c0d_Enum>);


	inline void _method_check_enum_decl(jule::Ref<_206b06c0d_Enum>);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ref<_2053703bd_GenericDecl>>);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ref<_2053ddd54_Fn>);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ref<_2053ddd54_Fn>);


	inline jule::Bool _method_check_fn_decl_types(jule::Ref<_2053ddd54_Fn>);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ref<_2053ddd54_Fn>);


	inline void _method_check_trait_decl_method(jule::Ref<_2053ddd54_Fn>);


	inline void _method_check_trait_decl_methods(jule::Ref<_2065895c5_Trait>);


	inline void _method_check_trait_decl(jule::Ref<_2065895c5_Trait>);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ref<_2065895c5_Trait>,jule::Ref<_206b07093_Impl>);


	inline jule::Bool _method_impl_to_struct(jule::Ref<_2053cdc01_Struct>,jule::Ref<_206b07093_Impl>);


	inline void _method_impl_trait(jule::Ref<_206b07093_Impl>);


	inline void _method_impl_struct(jule::Ref<_206b07093_Impl>);


	inline void _method_impl_impl(jule::Ref<_206b07093_Impl>);


	inline void _method_check_var_decl(jule::Ref<_1d9e22661_Var>,jule::Trait<_206c8d636_Lookup>);


	inline void _method_check_global_var_decl(jule::Ref<_1d9e22661_Var>);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ref<_2053cdc01_Struct>,jule::Ref<_2065895c5_Trait>);


	inline jule::Bool _method_check_struct_impls(jule::Ref<_2053cdc01_Struct>);


	inline jule::Bool _method_check_struct_fields(jule::Ref<_2053cdc01_Struct>);


	inline jule::Bool _method_check_struct_decl_methods(jule::Ref<_2053cdc01_Struct>);


	inline void _method_check_struct_decl(jule::Ref<_2053cdc01_Struct>);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ref<_2053ddd54_Fn>);


	inline jule::Bool _method_check_fn_decls(void);


	inline jule::Bool _method_check_directive_pass(_206a20e79_Pass);


	inline jule::Bool _method_check_passes(void);


	inline void _method_push_cycle_error(jule::Ref<_2053cdc01_Struct>,jule::Ref<_2053cdc01_Struct>,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_2053cdc01_Struct>,jule::Ref<_2053cdc01_Struct>,jule::Str&);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ref<_2053cdc01_Struct>,jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ref<_2053cdc01_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ref<_2053cdc01_Struct>);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_type_inference(jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline void _method_check_var(jule::Ref<_1d9e22661_Var>);


	inline void _method_check_type_var(jule::Ref<_1d9e22661_Var>,jule::Trait<_206c8d636_Lookup>);


	inline void _method_check_global_types(void);


	inline void _method_check_type_method(jule::Ref<_2053cdc01_StructIns>,jule::Ref<_2053ddd54_Fn>);


	inline void _method_check_type_struct(jule::Ref<_2053cdc01_Struct>);


	inline void _method_check_struct_types(void);


	inline void _method_check_rets(jule::Ref<_2053ddd54_FnIns>);


	inline void _method_check_fn_ins_sc(jule::Ref<_2053ddd54_FnIns>,jule::Ref<_206b0557a_ScopeChecker>);


	inline void _method_check_fn_ins(jule::Ref<_2053ddd54_FnIns>);


	inline void _method_check_type_fn(jule::Ref<_2053ddd54_Fn>);


	inline void _method_precheck_type_fn(jule::Ref<_2053ddd54_Fn>);


	inline jule::Bool _method_precheck_fn_types(void);


	inline jule::Bool _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>);


	inline bool operator==(const _1d9dc7517_Sema &_Src) const {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file &&
			this->_field_flags == _Src._field_flags;
	}

	inline bool operator!=(const _1d9dc7517_Sema &_Src) const { return !this->operator==(_Src); }
};


struct _1d9e22661_Var {
	jule::Ref<_1d9e22661_Var> self{};

	jule::Ref<_206b0557a_Scope> _field_scope{jule::Ref<_206b0557a_Scope>()};
	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1da411226_TypeSymbol> _field_kind{jule::Ref<_1da411226_TypeSymbol>()};
	jule::Ref<_1da2d3bdc_Value> _field_value{jule::Ref<_1da2d3bdc_Value>()};
	jule::Ref<_206a20e79_ReferenceStack> _field_references{jule::Ref<_206a20e79_ReferenceStack>()};
	jule::Slice<jule::Ref<_2053703bd_Directive>> _field_directives{jule::Slice<jule::Ref<_2053703bd_Directive>>()};
	jule::Slice<jule::Ref<_1d9e22661_Var>> _field_depends{jule::Slice<jule::Ref<_1d9e22661_Var>>()};


	_1d9e22661_Var(jule::Ref<_206b0557a_Scope> __param_scope, _20542560a_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ref<_1da411226_TypeSymbol> __param_kind, jule::Ref<_1da2d3bdc_Value> __param_value, jule::Ref<_206a20e79_ReferenceStack> __param_references, jule::Slice<jule::Ref<_2053703bd_Directive>> __param_directives, jule::Slice<jule::Ref<_1d9e22661_Var>> __param_depends) {
		this->self = jule::Ref<_1d9e22661_Var>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_constant = __param_constant;
		this->_field_mutable = __param_mutable;
		this->_field_public = __param_public;
		this->_field_used = __param_used;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_doc = __param_doc;
		this->_field_kind = __param_kind;
		this->_field_value = __param_value;
		this->_field_references = __param_references;
		this->_field_directives = __param_directives;
		this->_field_depends = __param_depends;
	}

	~_1d9e22661_Var(void) { this->self.ref = nullptr; }

	_1d9e22661_Var(void) { this->self = jule::Ref<_1d9e22661_Var>::make(this, nullptr); }

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_type_inferred(void);


	inline bool operator==(const _1d9e22661_Var &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_directives == _Src._field_directives &&
			this->_field_depends == _Src._field_depends;
	}

	inline bool operator!=(const _1d9e22661_Var &_Src) const { return !this->operator==(_Src); }
};


struct _1da120d15_TypeCompatibilityChecker {
	jule::Ref<_1da120d15_TypeCompatibilityChecker> self{};

	jule::Ref<_1d9dc7517_Sema> _field_s{jule::Ref<_1d9dc7517_Sema>()};
	jule::Ref<_1da411226_TypeKind> _field_dest{jule::Ref<_1da411226_TypeKind>()};
	jule::Ref<_1da411226_TypeKind> _field_src{jule::Ref<_1da411226_TypeKind>()};
	_20542560a_Token _field_error_token{_20542560a_Token()};
	jule::Bool _field_ignore_any{jule::Bool()};
	jule::Bool _field_deref{jule::Bool()};
	jule::Bool _field_sub_check{jule::Bool()};


	_1da120d15_TypeCompatibilityChecker(jule::Ref<_1d9dc7517_Sema> __param_s, jule::Ref<_1da411226_TypeKind> __param_dest, jule::Ref<_1da411226_TypeKind> __param_src, _20542560a_Token __param_error_token, jule::Bool __param_ignore_any, jule::Bool __param_deref, jule::Bool __param_sub_check) {
		this->self = jule::Ref<_1da120d15_TypeCompatibilityChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_src = __param_src;
		this->_field_error_token = __param_error_token;
		this->_field_ignore_any = __param_ignore_any;
		this->_field_deref = __param_deref;
		this->_field_sub_check = __param_sub_check;
	}

	~_1da120d15_TypeCompatibilityChecker(void) { this->self.ref = nullptr; }

	_1da120d15_TypeCompatibilityChecker(void) { this->self = jule::Ref<_1da120d15_TypeCompatibilityChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ref(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_slc(void);


	inline jule::Bool _method_check_arr(void);


	inline jule::Bool _method_check_map(void);


	inline jule::Bool _method_check_struct(void);


	inline jule::Bool _method_check_fn(void);


	inline jule::Bool _method_check_enum(void);


	inline jule::Bool _method_check_prim(void);


	inline jule::Bool _method_check_cpp_linked(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1da120d15_TypeCompatibilityChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_any == _Src._field_ignore_any &&
			this->_field_deref == _Src._field_deref &&
			this->_field_sub_check == _Src._field_sub_check;
	}

	inline bool operator!=(const _1da120d15_TypeCompatibilityChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1da120d15_AssignTypeChecker {
	jule::Ref<_1da120d15_AssignTypeChecker> self{};

	jule::Ref<_1d9dc7517_Sema> _field_s{jule::Ref<_1d9dc7517_Sema>()};
	jule::Ref<_1da411226_TypeKind> _field_dest{jule::Ref<_1da411226_TypeKind>()};
	jule::Ref<_1da2d3bdc_Data> _field_d{jule::Ref<_1da2d3bdc_Data>()};
	_20542560a_Token _field_error_token{_20542560a_Token()};
	jule::Bool _field_deref{jule::Bool()};


	_1da120d15_AssignTypeChecker(jule::Ref<_1d9dc7517_Sema> __param_s, jule::Ref<_1da411226_TypeKind> __param_dest, jule::Ref<_1da2d3bdc_Data> __param_d, _20542560a_Token __param_error_token, jule::Bool __param_deref) {
		this->self = jule::Ref<_1da120d15_AssignTypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_d = __param_d;
		this->_field_error_token = __param_error_token;
		this->_field_deref = __param_deref;
	}

	~_1da120d15_AssignTypeChecker(void) { this->self.ref = nullptr; }

	_1da120d15_AssignTypeChecker(void) { this->self = jule::Ref<_1da120d15_AssignTypeChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1da120d15_AssignTypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_deref == _Src._field_deref;
	}

	inline bool operator!=(const _1da120d15_AssignTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1da120d15_DynamicTypeAnnotation {
	jule::Ref<_1da120d15_DynamicTypeAnnotation> self{};

	jule::Ref<_1da2d3bdc_Eval> _field_e{jule::Ref<_1da2d3bdc_Eval>()};
	jule::Ref<_2053ddd54_FnIns> _field_f{jule::Ref<_2053ddd54_FnIns>()};
	jule::Ref<_2053ddd54_ParamIns> _field_p{jule::Ref<_2053ddd54_ParamIns>()};
	jule::Ref<_1da2d3bdc_Data> _field_a{jule::Ref<_1da2d3bdc_Data>()};
	_20542560a_Token _field_error_token{_20542560a_Token()};
	_1da411226_TypeKind** _field_k{nullptr};


	_1da120d15_DynamicTypeAnnotation(jule::Ref<_1da2d3bdc_Eval> __param_e, jule::Ref<_2053ddd54_FnIns> __param_f, jule::Ref<_2053ddd54_ParamIns> __param_p, jule::Ref<_1da2d3bdc_Data> __param_a, _20542560a_Token __param_error_token, _1da411226_TypeKind** __param_k) {
		this->self = jule::Ref<_1da120d15_DynamicTypeAnnotation>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_f = __param_f;
		this->_field_p = __param_p;
		this->_field_a = __param_a;
		this->_field_error_token = __param_error_token;
		this->_field_k = __param_k;
	}

	~_1da120d15_DynamicTypeAnnotation(void) { this->self.ref = nullptr; }

	_1da120d15_DynamicTypeAnnotation(void) { this->self = jule::Ref<_1da120d15_DynamicTypeAnnotation>::make(this, nullptr); }

	inline void _method_push_generic(jule::Ref<_1da411226_TypeKind>,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_annotate_slc(jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_check_map_key(_1da411226_TypeKind**,jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_annotate_map(jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_annotate_fn(jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_annotate_ptr(jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_annotate_ref(jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_annotate_any(jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_annotate_kind(jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(const _1da120d15_DynamicTypeAnnotation &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	inline bool operator!=(const _1da120d15_DynamicTypeAnnotation &_Src) const { return !this->operator==(_Src); }
};


struct _1da120d15_FnCallArgChecker {
	jule::Ref<_1da120d15_FnCallArgChecker> self{};

	jule::Ref<_1da2d3bdc_Eval> _field_e{jule::Ref<_1da2d3bdc_Eval>()};
	jule::Slice<jule::Ref<_2053703bd_Expr>> _field_args{jule::Slice<jule::Ref<_2053703bd_Expr>>()};
	_20542560a_Token _field_error_token{_20542560a_Token()};
	jule::Ref<_2053ddd54_FnIns> _field_f{jule::Ref<_2053ddd54_FnIns>()};
	jule::Bool _field_dynamic_annotation{jule::Bool()};
	jule::Slice<jule::Any> _field_arg_models{jule::Slice<jule::Any>()};


	_1da120d15_FnCallArgChecker(jule::Ref<_1da2d3bdc_Eval> __param_e, jule::Slice<jule::Ref<_2053703bd_Expr>> __param_args, _20542560a_Token __param_error_token, jule::Ref<_2053ddd54_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models) {
		this->self = jule::Ref<_1da120d15_FnCallArgChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_args = __param_args;
		this->_field_error_token = __param_error_token;
		this->_field_f = __param_f;
		this->_field_dynamic_annotation = __param_dynamic_annotation;
		this->_field_arg_models = __param_arg_models;
	}

	~_1da120d15_FnCallArgChecker(void) { this->self.ref = nullptr; }

	_1da120d15_FnCallArgChecker(void) { this->self = jule::Ref<_1da120d15_FnCallArgChecker>::make(this, nullptr); }

	inline void _method_push_err_token(_20542560a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ref<_2053ddd54_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ref<_2053ddd54_ParamIns>>);


	inline jule::Bool _method_check_arg(jule::Ref<_2053ddd54_ParamIns>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline jule::Bool _method_push(jule::Ref<_2053ddd54_ParamIns>,jule::Ref<_2053703bd_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ref<_2053ddd54_ParamIns>,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ref<_2053ddd54_ParamIns>>);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1da120d15_FnCallArgChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	inline bool operator!=(const _1da120d15_FnCallArgChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1da120d15_StructLitChecker {
	jule::Ref<_1da120d15_StructLitChecker> self{};

	jule::Ref<_1da2d3bdc_Eval> _field_e{jule::Ref<_1da2d3bdc_Eval>()};
	_20542560a_Token _field_error_token{_20542560a_Token()};
	jule::Ref<_2053cdc01_StructIns> _field_s{jule::Ref<_2053cdc01_StructIns>()};
	jule::Slice<jule::Ref<_206e63542_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_206e63542_StructArgExprModel>>()};


	_1da120d15_StructLitChecker(jule::Ref<_1da2d3bdc_Eval> __param_e, _20542560a_Token __param_error_token, jule::Ref<_2053cdc01_StructIns> __param_s, jule::Slice<jule::Ref<_206e63542_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_1da120d15_StructLitChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_error_token = __param_error_token;
		this->_field_s = __param_s;
		this->_field_args = __param_args;
	}

	~_1da120d15_StructLitChecker(void) { this->self.ref = nullptr; }

	_1da120d15_StructLitChecker(void) { this->self = jule::Ref<_1da120d15_StructLitChecker>::make(this, nullptr); }

	inline void _method_push_err(_20542560a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ref<_2053cdc01_FieldIns>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline void _method_check_pair(jule::Ref<_2053703bd_FieldExprPair>,jule::Slice<jule::Any>);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>);


	inline void _method_check(jule::Slice<jule::Any>);


	inline bool operator==(const _1da120d15_StructLitChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1da120d15_StructLitChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1da120d15_RangeChecker {
	jule::Ref<_1da120d15_RangeChecker> self{};

	jule::Ref<_206b0557a_ScopeChecker> _field_sc{jule::Ref<_206b0557a_ScopeChecker>()};
	jule::Ref<_2053703bd_RangeKind> _field_rang{jule::Ref<_2053703bd_RangeKind>()};
	jule::Ref<_206b0557a_RangeIter> _field_kind{jule::Ref<_206b0557a_RangeIter>()};
	jule::Ref<_1da2d3bdc_Data> _field_d{jule::Ref<_1da2d3bdc_Data>()};


	_1da120d15_RangeChecker(jule::Ref<_206b0557a_ScopeChecker> __param_sc, jule::Ref<_2053703bd_RangeKind> __param_rang, jule::Ref<_206b0557a_RangeIter> __param_kind, jule::Ref<_1da2d3bdc_Data> __param_d) {
		this->self = jule::Ref<_1da120d15_RangeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_rang = __param_rang;
		this->_field_kind = __param_kind;
		this->_field_d = __param_d;
	}

	~_1da120d15_RangeChecker(void) { this->self.ref = nullptr; }

	_1da120d15_RangeChecker(void) { this->self = jule::Ref<_1da120d15_RangeChecker>::make(this, nullptr); }

	inline jule::Ref<_1d9e22661_Var> _method_build_var(jule::Ref<_2053703bd_VarDecl>);


	inline void _method_set_size_key(void);


	inline void _method_check_range_expr_validity(jule::Ref<_1da2d3bdc_Data>&,jule::Ref<_1d9e22661_Var>&,jule::Ref<_1da411226_TypeKind>&);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1da120d15_RangeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _1da120d15_RangeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1da120d15_RetTypeChecker {
	jule::Ref<_1da120d15_RetTypeChecker> self{};

	jule::Ref<_206b0557a_ScopeChecker> _field_sc{jule::Ref<_206b0557a_ScopeChecker>()};
	jule::Ref<_2053ddd54_FnIns> _field_f{jule::Ref<_2053ddd54_FnIns>()};
	jule::Slice<jule::Ref<_1da411226_TypeKind>> _field_types{jule::Slice<jule::Ref<_1da411226_TypeKind>>()};
	jule::Slice<jule::Ref<_2053703bd_Expr>> _field_exprs{jule::Slice<jule::Ref<_2053703bd_Expr>>()};
	jule::Slice<jule::Ref<_1d9e22661_Var>> _field_vars{jule::Slice<jule::Ref<_1d9e22661_Var>>()};
	_20542560a_Token _field_error_token{_20542560a_Token()};
	jule::Any _field_model{jule::Any()};


	_1da120d15_RetTypeChecker(jule::Ref<_206b0557a_ScopeChecker> __param_sc, jule::Ref<_2053ddd54_FnIns> __param_f, jule::Slice<jule::Ref<_1da411226_TypeKind>> __param_types, jule::Slice<jule::Ref<_2053703bd_Expr>> __param_exprs, jule::Slice<jule::Ref<_1d9e22661_Var>> __param_vars, _20542560a_Token __param_error_token, jule::Any __param_model) {
		this->self = jule::Ref<_1da120d15_RetTypeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_f = __param_f;
		this->_field_types = __param_types;
		this->_field_exprs = __param_exprs;
		this->_field_vars = __param_vars;
		this->_field_error_token = __param_error_token;
		this->_field_model = __param_model;
	}

	~_1da120d15_RetTypeChecker(void) { this->self.ref = nullptr; }

	_1da120d15_RetTypeChecker(void) { this->self = jule::Ref<_1da120d15_RetTypeChecker>::make(this, nullptr); }

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ref<_2053703bd_Expr>);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ref<_2053703bd_Expr>);


	inline bool operator==(const _1da120d15_RetTypeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_model == _Src._field_model;
	}

	inline bool operator!=(const _1da120d15_RetTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1da2aa301_SymbolTable: public _206c8d636_Lookup {
	jule::Ref<_1da2aa301_SymbolTable> self{};

	jule::Ref<_2053bdb25_File> _field_file{jule::Ref<_2053bdb25_File>()};
	jule::Slice<_206a20e79_Pass> _field_passes{jule::Slice<_206a20e79_Pass>()};
	jule::Slice<jule::Ref<_206e66325_ImportInfo>> _field_imports{jule::Slice<jule::Ref<_206e66325_ImportInfo>>()};
	jule::Slice<jule::Ref<_1d9e22661_Var>> _field_vars{jule::Slice<jule::Ref<_1d9e22661_Var>>()};
	jule::Slice<jule::Ref<_1da411226_TypeAlias>> _field_type_aliases{jule::Slice<jule::Ref<_1da411226_TypeAlias>>()};
	jule::Slice<jule::Ref<_2053cdc01_Struct>> _field_structs{jule::Slice<jule::Ref<_2053cdc01_Struct>>()};
	jule::Slice<jule::Ref<_2053ddd54_Fn>> _field_funcs{jule::Slice<jule::Ref<_2053ddd54_Fn>>()};
	jule::Slice<jule::Ref<_2065895c5_Trait>> _field_traits{jule::Slice<jule::Ref<_2065895c5_Trait>>()};
	jule::Slice<jule::Ref<_206b06c0d_Enum>> _field_enums{jule::Slice<jule::Ref<_206b06c0d_Enum>>()};
	jule::Slice<jule::Ref<_206b07093_Impl>> _field_impls{jule::Slice<jule::Ref<_206b07093_Impl>>()};


	_1da2aa301_SymbolTable(jule::Ref<_2053bdb25_File> __param_file, jule::Slice<_206a20e79_Pass> __param_passes, jule::Slice<jule::Ref<_206e66325_ImportInfo>> __param_imports, jule::Slice<jule::Ref<_1d9e22661_Var>> __param_vars, jule::Slice<jule::Ref<_1da411226_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ref<_2053cdc01_Struct>> __param_structs, jule::Slice<jule::Ref<_2053ddd54_Fn>> __param_funcs, jule::Slice<jule::Ref<_2065895c5_Trait>> __param_traits, jule::Slice<jule::Ref<_206b06c0d_Enum>> __param_enums, jule::Slice<jule::Ref<_206b07093_Impl>> __param_impls) {
		this->self = jule::Ref<_1da2aa301_SymbolTable>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_passes = __param_passes;
		this->_field_imports = __param_imports;
		this->_field_vars = __param_vars;
		this->_field_type_aliases = __param_type_aliases;
		this->_field_structs = __param_structs;
		this->_field_funcs = __param_funcs;
		this->_field_traits = __param_traits;
		this->_field_enums = __param_enums;
		this->_field_impls = __param_impls;
	}

	~_1da2aa301_SymbolTable(void) { this->self.ref = nullptr; }

	_1da2aa301_SymbolTable(void) { this->self = jule::Ref<_1da2aa301_SymbolTable>::make(this, nullptr); }

	inline jule::Ref<_206e66325_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_206e66325_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)>);


	inline jule::Ref<_1d9e22661_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1da411226_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_2053cdc01_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_2053ddd54_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_2065895c5_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_206b06c0d_Enum> _method_find_enum(jule::Str);


	inline jule::Ref<_1d9e22661_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ref<_1da411226_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(const _1da2aa301_SymbolTable &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	inline bool operator!=(const _1da2aa301_SymbolTable &_Src) const { return !this->operator==(_Src); }
};


struct _1da2d3bdc_Data {
	jule::Ref<_1da2d3bdc_Data> self{};

	jule::Ref<_1da411226_TypeKind> _field_kind{jule::Ref<_1da411226_TypeKind>()};
	jule::Ref<_1da411226_TypeKind> _field_cast_kind{jule::Ref<_1da411226_TypeKind>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Bool _field_lvalue{jule::Bool()};
	jule::Bool _field_variadiced{jule::Bool()};
	jule::Bool _field_is_rune{jule::Bool()};
	jule::Any _field_model{jule::Any()};
	jule::Bool _field_decl{jule::Bool()};
	jule::Ref<_1a89ca987_Const> _field_constant{jule::Ref<_1a89ca987_Const>()};


	_1da2d3bdc_Data(jule::Ref<_1da411226_TypeKind> __param_kind, jule::Ref<_1da411226_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_variadiced, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ref<_1a89ca987_Const> __param_constant) {
		this->self = jule::Ref<_1da2d3bdc_Data>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_cast_kind = __param_cast_kind;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_lvalue = __param_lvalue;
		this->_field_variadiced = __param_variadiced;
		this->_field_is_rune = __param_is_rune;
		this->_field_model = __param_model;
		this->_field_decl = __param_decl;
		this->_field_constant = __param_constant;
	}

	~_1da2d3bdc_Data(void) { this->self.ref = nullptr; }

	_1da2d3bdc_Data(void) { this->self = jule::Ref<_1da2d3bdc_Data>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline bool operator==(const _1da2d3bdc_Data &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_variadiced == _Src._field_variadiced &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	inline bool operator!=(const _1da2d3bdc_Data &_Src) const { return !this->operator==(_Src); }
};


struct _1da2d3bdc_Value {
	jule::Ref<_1da2d3bdc_Value> self{};

	jule::Ref<_2053703bd_Expr> _field_expr{jule::Ref<_2053703bd_Expr>()};
	jule::Ref<_1da2d3bdc_Data> _field_data{jule::Ref<_1da2d3bdc_Data>()};


	_1da2d3bdc_Value(jule::Ref<_2053703bd_Expr> __param_expr, jule::Ref<_1da2d3bdc_Data> __param_data) {
		this->self = jule::Ref<_1da2d3bdc_Value>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_data = __param_data;
	}

	~_1da2d3bdc_Value(void) { this->self.ref = nullptr; }

	_1da2d3bdc_Value(void) { this->self = jule::Ref<_1da2d3bdc_Value>::make(this, nullptr); }

	inline bool operator==(const _1da2d3bdc_Value &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1da2d3bdc_Value &_Src) const { return !this->operator==(_Src); }
};


struct _1da2d3bdc_Eval {
	jule::Ref<_1da2d3bdc_Eval> self{};

	jule::Ref<_1d9dc7517_Sema> _field_s{jule::Ref<_1d9dc7517_Sema>()};
	jule::Trait<_206c8d636_Lookup> _field_lookup{jule::Trait<_206c8d636_Lookup>()};
	jule::Ref<_1da411226_TypeKind> _field_prefix{jule::Ref<_1da411226_TypeKind>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Ref<_1d9e22661_Var> _field_owner{jule::Ref<_1d9e22661_Var>()};


	_1da2d3bdc_Eval(jule::Ref<_1d9dc7517_Sema> __param_s, jule::Trait<_206c8d636_Lookup> __param_lookup, jule::Ref<_1da411226_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Ref<_1d9e22661_Var> __param_owner) {
		this->self = jule::Ref<_1da2d3bdc_Eval>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_prefix = __param_prefix;
		this->_field_unsafety = __param_unsafety;
		this->_field_owner = __param_owner;
	}

	~_1da2d3bdc_Eval(void) { this->self.ref = nullptr; }

	_1da2d3bdc_Eval(void) { this->self = jule::Ref<_1da2d3bdc_Eval>::make(this, nullptr); }

	inline void _method_push_err(_20542560a_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_lit_nil(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_lit_str(jule::Ref<_2053703bd_LitExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_lit_bool(jule::Ref<_2053703bd_LitExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_lit_rune(jule::Ref<_2053703bd_LitExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_lit_float(jule::Ref<_2053703bd_LitExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_lit_int(jule::Ref<_2053703bd_LitExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_lit_num(jule::Ref<_2053703bd_LitExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_lit(jule::Ref<_2053703bd_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ref<_206a20e79_ReferenceStack>);


	inline void _method_push_reference_to_fn(jule::Ref<_2053ddd54_FnIns>);


	inline void _method_push_reference_to_var(jule::Ref<_1d9e22661_Var>);


	inline void _method_push_reference_to_struct(jule::Ref<_2053cdc01_StructIns>);


	inline jule::Ref<_1da2d3bdc_Data> _method___eval_enum(jule::Ref<_206b06c0d_Enum>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_enum(jule::Ref<_206b06c0d_Enum>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method___eval_struct(jule::Ref<_2053cdc01_StructIns>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_struct(jule::Ref<_2053cdc01_StructIns>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_fn_ins(jule::Ref<_2053ddd54_FnIns>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_fn(jule::Ref<_2053ddd54_Fn>,_20542560a_Token);


	inline void _method_push_illegal_cycle_error(jule::Ref<_1d9e22661_Var>,jule::Ref<_1d9e22661_Var>,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_1d9e22661_Var>,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_1d9e22661_Var>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_var(jule::Ref<_1d9e22661_Var>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_type_alias(jule::Ref<_1da411226_TypeAlias>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_def(jule::Any,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_ident(jule::Ref<_2053703bd_IdentExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_unary_minus(jule::Ref<_1da2d3bdc_Data>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_unary_plus(jule::Ref<_1da2d3bdc_Data>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_unary_caret(jule::Ref<_1da2d3bdc_Data>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_unary_excl(jule::Ref<_1da2d3bdc_Data>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_unary_star(jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_unary_amper(jule::Ref<_1da2d3bdc_Data>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_unary_type_decl(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_2053703bd_UnaryExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_unary(jule::Ref<_2053703bd_UnaryExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_variadic(jule::Ref<_2053703bd_VariadicExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_unsafe(jule::Ref<_2053703bd_UnsafeExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_arr(jule::Ref<_2053703bd_SliceExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_exp_slc(jule::Ref<_2053703bd_SliceExpr>,jule::Ref<_1da411226_TypeKind>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_slice_expr(jule::Ref<_2053703bd_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline void _method_indexing_ptr(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>,jule::Ref<_2053703bd_IndexingExpr>);


	inline void _method_indexing_arr(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>,jule::Ref<_2053703bd_IndexingExpr>);


	inline void _method_indexing_slc(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>,jule::Ref<_2053703bd_IndexingExpr>);


	inline void _method_indexing_map(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>,jule::Ref<_2053703bd_IndexingExpr>);


	inline void _method_indexing_str(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>,jule::Ref<_2053703bd_IndexingExpr>);


	inline void _method_to_indexing(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>,jule::Ref<_2053703bd_IndexingExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_ident_decl_from_indexing(jule::Ref<_2053703bd_IndexingExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_indexing(jule::Ref<_2053703bd_IndexingExpr>);


	inline std::tuple<jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>> _method_eval_slicing_exprs(jule::Ref<_2053703bd_SlicingExpr>);


	inline void _method_slicing_arr(jule::Ref<_1da2d3bdc_Data>);


	inline void _method_slicing_slc(jule::Ref<_1da2d3bdc_Data>);


	inline void _method_slicing_str(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>);


	inline void _method_check_slicing(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>,jule::Ref<_2053703bd_SlicingExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_slicing(jule::Ref<_2053703bd_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ref<_1da411226_TypeKind>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline void _method_cast_struct(jule::Ref<_1da411226_TypeKind>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline void _method_cast_ref(jule::Ref<_1da411226_TypeKind>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline void _method_cast_slc(jule::Ref<_1da411226_TypeKind>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline void _method_cast_str(jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline void _method_cast_int(jule::Ref<_1da411226_TypeKind>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline void _method_cast_num(jule::Ref<_1da411226_TypeKind>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline void _method_cast_prim(jule::Ref<_1da411226_TypeKind>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline void _method_cast_constant(jule::Ref<_1da411226_TypeKind>&,jule::Ref<_1da2d3bdc_Data>&);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_cast_by_type_n_data(jule::Ref<_1da411226_TypeKind>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_cast(jule::Ref<_2053703bd_CastExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_ns_selection(jule::Ref<_2053703bd_NsSelectionExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_struct_lit_explicit(jule::Ref<_2053cdc01_StructIns>,jule::Slice<jule::Any>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_struct_lit(jule::Ref<_2053703bd_StructLit>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_type(jule::Ref<_2053703bd_TypeDecl>);


	inline jule::Ref<_1da2d3bdc_Data> _method_call_type_fn(jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ref<_2053ddd54_FnIns>,jule::Ref<_2053703bd_FnCallExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_call_builtin_fn(jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);


	inline void _method_check_fn_of_concurrent_call(jule::Ref<_2053ddd54_FnIns>&,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_call_fn(jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_fn_call(jule::Ref<_2053703bd_FnCallExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_enum_static(jule::Ref<_206b06c0d_Enum>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_struct_static(jule::Ref<_2053cdc01_StructIns>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_trait_sub_ident(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_2065895c5_Trait>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_struct_sub_ident(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_2053cdc01_StructIns>,jule::Ref<_2053703bd_SubIdentExpr>,jule::Bool);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_slice_sub_ident(jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_array_sub_ident(jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_map_sub_ident(jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_str_sub_ident(jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_int_type_static(_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_uint_type_static(_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_i8_type_static(_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_i16_type_static(_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_i32_type_static(_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_i64_type_static(_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_u8_type_static(_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_u16_type_static(_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_u32_type_static(_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_u64_type_static(_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_f32_type_tatic(_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_f64_type_static(_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_prim_static(jule::Str,_20542560a_Token);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_type_static(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_2053703bd_SubIdentExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_obj_sub_ident(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_2053703bd_SubIdentExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_sub_ident(jule::Ref<_2053703bd_SubIdentExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_tuple(jule::Ref<_2053703bd_TupleExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_map(jule::Ref<_1da411226_Map>,jule::Ref<_2053703bd_BraceLit>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_brace_lit(jule::Ref<_2053703bd_BraceLit>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_anon_fn(jule::Ref<_2053703bd_FnDecl>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_binop(jule::Ref<_2053703bd_BinopExpr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval(jule::Ref<_2053703bd_Expr>);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_expr(jule::Ref<_2053703bd_Expr>);


	inline bool operator==(const _1da2d3bdc_Eval &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_owner == _Src._field_owner;
	}

	inline bool operator!=(const _1da2d3bdc_Eval &_Src) const { return !this->operator==(_Src); }
};


struct _1da2d3bdc_BinopSolver {
	jule::Ref<_1da2d3bdc_BinopSolver> self{};

	jule::Ref<_1da2d3bdc_Eval> _field_e{jule::Ref<_1da2d3bdc_Eval>()};
	jule::Ref<_1da2d3bdc_Data> _field_l{jule::Ref<_1da2d3bdc_Data>()};
	jule::Ref<_1da2d3bdc_Data> _field_r{jule::Ref<_1da2d3bdc_Data>()};
	_20542560a_Token _field_op{_20542560a_Token()};


	_1da2d3bdc_BinopSolver(jule::Ref<_1da2d3bdc_Eval> __param_e, jule::Ref<_1da2d3bdc_Data> __param_l, jule::Ref<_1da2d3bdc_Data> __param_r, _20542560a_Token __param_op) {
		this->self = jule::Ref<_1da2d3bdc_BinopSolver>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_1da2d3bdc_BinopSolver(void) { this->self.ref = nullptr; }

	_1da2d3bdc_BinopSolver(void) { this->self = jule::Ref<_1da2d3bdc_BinopSolver>::make(this, nullptr); }

	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_nil(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_enum(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_ptr(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_arr(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_slc(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_fn(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_struct(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_trait(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_any(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_bool(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_check_mod_data(jule::Ref<_1da2d3bdc_Data>);


	inline void _method_mod(void);


	inline jule::Bool _method_numbers_are_compatibile(jule::Str&,jule::Str&);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_float(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_unsig_int(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_sig_int(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval_prim(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_eval(void);


	inline void _method_assign_shift(jule::Ref<_1da2d3bdc_Data>,jule::F64);


	inline void _method_solve_const(jule::Ref<_1da2d3bdc_Data>);


	inline void _method_post_const(jule::Ref<_1da2d3bdc_Data>);


	inline void _method_prepare_data(jule::Ref<_1da2d3bdc_Data>);


	inline void _method_prepare_eval(void);


	inline void _method_check_data(jule::Ref<_1da2d3bdc_Data>);


	inline void _method_check_datas(void);


	inline jule::Ref<_1da2d3bdc_Data> _method_solve_explicit(jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>);


	inline jule::Ref<_1da2d3bdc_Data> _method_solve(jule::Ref<_2053703bd_BinopExpr>);


	inline bool operator==(const _1da2d3bdc_BinopSolver &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1da2d3bdc_BinopSolver &_Src) const { return !this->operator==(_Src); }
};


struct _1da411226_TypeAlias {
	jule::Ref<_1da411226_TypeAlias> self{};

	jule::Ref<_2053703bd_ScopeTree> _field_scope{jule::Ref<_2053703bd_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	_20542560a_Token _field_token{_20542560a_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1da411226_TypeSymbol> _field_kind{jule::Ref<_1da411226_TypeSymbol>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Any> _field_refers{jule::Slice<jule::Any>()};


	_1da411226_TypeAlias(jule::Ref<_2053703bd_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, _20542560a_Token __param_token, jule::Str __param_ident, jule::Ref<_1da411226_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers) {
		this->self = jule::Ref<_1da411226_TypeAlias>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_used = __param_used;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc = __param_doc;
		this->_field_refers = __param_refers;
	}

	~_1da411226_TypeAlias(void) { this->self.ref = nullptr; }

	_1da411226_TypeAlias(void) { this->self = jule::Ref<_1da411226_TypeAlias>::make(this, nullptr); }

	inline bool operator==(const _1da411226_TypeAlias &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	inline bool operator!=(const _1da411226_TypeAlias &_Src) const { return !this->operator==(_Src); }
};


struct _1da411226_TypeKind: public _1da411226_Kind {
	jule::Ref<_1da411226_TypeKind> self{};

	jule::Str _field_cpp_ident{jule::Str()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Trait<_1da411226_Kind> _field_kind{jule::Trait<_1da411226_Kind>()};


	_1da411226_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_variadic, jule::Trait<_1da411226_Kind> __param_kind) {
		this->self = jule::Ref<_1da411226_TypeKind>::make(this, nullptr);

		this->_field_cpp_ident = __param_cpp_ident;
		this->_field_variadic = __param_variadic;
		this->_field_kind = __param_kind;
	}

	~_1da411226_TypeKind(void) { this->self.ref = nullptr; }

	_1da411226_TypeKind(void) { this->self = jule::Ref<_1da411226_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1da411226_TypeKind>);


	inline jule::Ref<_1da411226_TypeKind> _method_clone(void);


	inline jule::Bool _method_cpp_linked(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_void(void);


	inline jule::Bool _method_lvalue(void);


	inline jule::Bool _method_mutable(void);


	inline jule::Bool _method_nil_compatible(void);


	inline jule::Bool _method_supports_cloning(void);


	inline jule::Bool _method_variadicable(void);


	inline jule::Ref<_1da411226_Prim> _method_prim(void);


	inline jule::Ref<_1da411226_Ref> _method_ref(void);


	inline jule::Ref<_1da411226_Ptr> _method_ptr(void);


	inline jule::Ref<_206b06c0d_Enum> _method_enm(void);


	inline jule::Ref<_1da411226_Arr> _method_arr(void);


	inline jule::Ref<_1da411226_Slc> _method_slc(void);


	inline jule::Ref<_2053ddd54_FnIns> _method_fnc(void);


	inline jule::Ref<_2053cdc01_StructIns> _method_strct(void);


	inline jule::Ref<_2065895c5_Trait> _method_trt(void);


	inline jule::Ref<_1da411226_Map> _method_map(void);


	inline jule::Ref<_1da411226_Tuple> _method_tup(void);


	inline bool operator==(const _1da411226_TypeKind &_Src) const {
		return 
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1da411226_TypeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1da411226_TypeSymbol {
	jule::Ref<_1da411226_TypeSymbol> self{};

	jule::Ref<_2053703bd_TypeDecl> _field_decl{jule::Ref<_2053703bd_TypeDecl>()};
	jule::Ref<_1da411226_TypeKind> _field_kind{jule::Ref<_1da411226_TypeKind>()};


	_1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl> __param_decl, jule::Ref<_1da411226_TypeKind> __param_kind) {
		this->self = jule::Ref<_1da411226_TypeSymbol>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_1da411226_TypeSymbol(void) { this->self.ref = nullptr; }

	_1da411226_TypeSymbol(void) { this->self = jule::Ref<_1da411226_TypeSymbol>::make(this, nullptr); }

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(const _1da411226_TypeSymbol &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1da411226_TypeSymbol &_Src) const { return !this->operator==(_Src); }
};


struct _1da411226_Prim: public _1da411226_Kind {
	jule::Ref<_1da411226_Prim> self{};

	jule::Str _field_kind{jule::Str()};


	_1da411226_Prim(jule::Str __param_kind) {
		this->self = jule::Ref<_1da411226_Prim>::make(this, nullptr);

		this->_field_kind = __param_kind;
	}

	~_1da411226_Prim(void) { this->self.ref = nullptr; }

	_1da411226_Prim(void) { this->self = jule::Ref<_1da411226_Prim>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(const _1da411226_Prim &_Src) const {
		return 
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1da411226_Prim &_Src) const { return !this->operator==(_Src); }
};


struct _1da411226_Ref: public _1da411226_Kind {
	jule::Ref<_1da411226_Ref> self{};

	jule::Ref<_1da411226_TypeKind> _field_elem{jule::Ref<_1da411226_TypeKind>()};


	_1da411226_Ref(jule::Ref<_1da411226_TypeKind> __param_elem) {
		this->self = jule::Ref<_1da411226_Ref>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1da411226_Ref(void) { this->self.ref = nullptr; }

	_1da411226_Ref(void) { this->self = jule::Ref<_1da411226_Ref>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1da411226_TypeKind>);


	inline bool operator==(const _1da411226_Ref &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1da411226_Ref &_Src) const { return !this->operator==(_Src); }
};


struct _1da411226_Slc: public _1da411226_Kind {
	jule::Ref<_1da411226_Slc> self{};

	jule::Ref<_1da411226_TypeKind> _field_elem{jule::Ref<_1da411226_TypeKind>()};


	_1da411226_Slc(jule::Ref<_1da411226_TypeKind> __param_elem) {
		this->self = jule::Ref<_1da411226_Slc>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1da411226_Slc(void) { this->self.ref = nullptr; }

	_1da411226_Slc(void) { this->self = jule::Ref<_1da411226_Slc>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1da411226_TypeKind>);


	inline bool operator==(const _1da411226_Slc &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1da411226_Slc &_Src) const { return !this->operator==(_Src); }
};


struct _1da411226_Tuple: public _1da411226_Kind {
	jule::Ref<_1da411226_Tuple> self{};

	jule::Slice<jule::Ref<_1da411226_TypeKind>> _field_types{jule::Slice<jule::Ref<_1da411226_TypeKind>>()};


	_1da411226_Tuple(jule::Slice<jule::Ref<_1da411226_TypeKind>> __param_types) {
		this->self = jule::Ref<_1da411226_Tuple>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_1da411226_Tuple(void) { this->self.ref = nullptr; }

	_1da411226_Tuple(void) { this->self = jule::Ref<_1da411226_Tuple>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1da411226_TypeKind>);


	inline bool operator==(const _1da411226_Tuple &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1da411226_Tuple &_Src) const { return !this->operator==(_Src); }
};


struct _1da411226_Map: public _1da411226_Kind {
	jule::Ref<_1da411226_Map> self{};

	jule::Ref<_1da411226_TypeKind> _field_key{jule::Ref<_1da411226_TypeKind>()};
	jule::Ref<_1da411226_TypeKind> _field_val{jule::Ref<_1da411226_TypeKind>()};


	_1da411226_Map(jule::Ref<_1da411226_TypeKind> __param_key, jule::Ref<_1da411226_TypeKind> __param_val) {
		this->self = jule::Ref<_1da411226_Map>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1da411226_Map(void) { this->self.ref = nullptr; }

	_1da411226_Map(void) { this->self = jule::Ref<_1da411226_Map>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1da411226_TypeKind>);


	inline bool operator==(const _1da411226_Map &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1da411226_Map &_Src) const { return !this->operator==(_Src); }
};


struct _1da411226_Arr: public _1da411226_Kind {
	jule::Ref<_1da411226_Arr> self{};

	jule::Bool _field_auto{jule::Bool()};
	jule::Int _field_n{jule::Int()};
	jule::Ref<_1da411226_TypeKind> _field_elem{jule::Ref<_1da411226_TypeKind>()};


	_1da411226_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ref<_1da411226_TypeKind> __param_elem) {
		this->self = jule::Ref<_1da411226_Arr>::make(this, nullptr);

		this->_field_auto = __param_auto;
		this->_field_n = __param_n;
		this->_field_elem = __param_elem;
	}

	~_1da411226_Arr(void) { this->self.ref = nullptr; }

	_1da411226_Arr(void) { this->self = jule::Ref<_1da411226_Arr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1da411226_TypeKind>);


	inline bool operator==(const _1da411226_Arr &_Src) const {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1da411226_Arr &_Src) const { return !this->operator==(_Src); }
};


struct _1da411226_Ptr: public _1da411226_Kind {
	jule::Ref<_1da411226_Ptr> self{};

	jule::Ref<_1da411226_TypeKind> _field_elem{jule::Ref<_1da411226_TypeKind>()};


	_1da411226_Ptr(jule::Ref<_1da411226_TypeKind> __param_elem) {
		this->self = jule::Ref<_1da411226_Ptr>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1da411226_Ptr(void) { this->self.ref = nullptr; }

	_1da411226_Ptr(void) { this->self = jule::Ref<_1da411226_Ptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1da411226_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1da411226_Ptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1da411226_Ptr &_Src) const { return !this->operator==(_Src); }
};


struct _1da411226_Referencer {
	jule::Ref<_1da411226_Referencer> self{};

	jule::Str _field_ident{jule::Str()};
	jule::Any _field_owner{jule::Any()};
	jule::Slice<jule::Any>* _field_refs{nullptr};


	_1da411226_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs) {
		this->self = jule::Ref<_1da411226_Referencer>::make(this, nullptr);

		this->_field_ident = __param_ident;
		this->_field_owner = __param_owner;
		this->_field_refs = __param_refs;
	}

	~_1da411226_Referencer(void) { this->self.ref = nullptr; }

	_1da411226_Referencer(void) { this->self = jule::Ref<_1da411226_Referencer>::make(this, nullptr); }

	inline bool operator==(const _1da411226_Referencer &_Src) const {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	inline bool operator!=(const _1da411226_Referencer &_Src) const { return !this->operator==(_Src); }
};


struct _1da411226_TypeChecker {
	jule::Ref<_1da411226_TypeChecker> self{};

	jule::Ref<_1d9dc7517_Sema> _field_s{jule::Ref<_1d9dc7517_Sema>()};
	jule::Trait<_206c8d636_Lookup> _field_lookup{jule::Trait<_206c8d636_Lookup>()};
	jule::Ref<_1da411226_Referencer> _field_referencer{jule::Ref<_1da411226_Referencer>()};
	_20542560a_Token _field_error_token{_20542560a_Token()};
	jule::Slice<jule::Ref<_2053703bd_GenericDecl>> _field_ignore_generics{jule::Slice<jule::Ref<_2053703bd_GenericDecl>>()};
	jule::Slice<jule::Ref<_1da411226_TypeAlias>> _field_use_generics{jule::Slice<jule::Ref<_1da411226_TypeAlias>>()};
	jule::Bool _field_not_plain{jule::Bool()};


	_1da411226_TypeChecker(jule::Ref<_1d9dc7517_Sema> __param_s, jule::Trait<_206c8d636_Lookup> __param_lookup, jule::Ref<_1da411226_Referencer> __param_referencer, _20542560a_Token __param_error_token, jule::Slice<jule::Ref<_2053703bd_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ref<_1da411226_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain) {
		this->self = jule::Ref<_1da411226_TypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_referencer = __param_referencer;
		this->_field_error_token = __param_error_token;
		this->_field_ignore_generics = __param_ignore_generics;
		this->_field_use_generics = __param_use_generics;
		this->_field_not_plain = __param_not_plain;
	}

	~_1da411226_TypeChecker(void) { this->self.ref = nullptr; }

	_1da411226_TypeChecker(void) { this->self = jule::Ref<_1da411226_TypeChecker>::make(this, nullptr); }

	inline void _method_push_err(_20542560a_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1da411226_Prim> _method_build_prim(jule::Ref<_2053703bd_IdentTypeDecl>);


	inline void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	inline jule::Bool _method_are_equals_cross_cycle_data_0(jule::Any,jule::Any);
	inline jule::Bool _method_are_equals_cross_cycle_data_1(jule::Any,jule::Any);


	inline jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_2053703bd_IdentTypeDecl>,jule::Any);


	inline jule::Trait<_1da411226_Kind> _method_from_type_alias(jule::Ref<_2053703bd_IdentTypeDecl>,jule::Ref<_1da411226_TypeAlias>);


	inline jule::Ref<_206b06c0d_Enum> _method_from_enum(jule::Ref<_2053703bd_IdentTypeDecl>,jule::Ref<_206b06c0d_Enum>);


	inline jule::Bool _method_check_struct_ins(jule::Ref<_2053cdc01_StructIns>,_20542560a_Token);


	inline void _method_append_used_struct_reference(jule::Ref<_2053cdc01_Struct>);


	inline jule::Ref<_2053cdc01_StructIns> _method_from_struct(jule::Ref<_2053703bd_IdentTypeDecl>,jule::Ref<_2053cdc01_Struct>);


	inline jule::Trait<_1da411226_Kind> _method_get_def(jule::Ref<_2053703bd_IdentTypeDecl>);


	inline jule::Trait<_1da411226_Kind> _method_build_ident(jule::Ref<_2053703bd_IdentTypeDecl>);


	inline jule::Ref<_1da411226_Ref> _method_build_ref_from_type(jule::Ref<_1da411226_TypeKind>);


	inline jule::Ref<_1da411226_Ref> _method_build_ref(jule::Ref<_2053703bd_RefTypeDecl>);


	inline jule::Ref<_1da411226_Ptr> _method_build_ptr_from_type(jule::Ref<_1da411226_TypeKind>);


	inline jule::Ref<_1da411226_Ptr> _method_build_ptr(jule::Ref<_2053703bd_PtrTypeDecl>);


	inline jule::Ref<_1da411226_Slc> _method_build_slc(jule::Ref<_2053703bd_SlcTypeDecl>);


	inline jule::Ref<_1da411226_Arr> _method_build_arr(jule::Ref<_2053703bd_ArrTypeDecl>);


	inline jule::Ref<_1da411226_Map> _method_build_map(jule::Ref<_2053703bd_MapTypeDecl>);


	inline jule::Ref<_1da411226_Tuple> _method_build_tuple(jule::Ref<_2053703bd_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ref<_2053ddd54_FnIns>);


	inline jule::Ref<_2053ddd54_FnIns> _method_build_fn(jule::Ref<_2053703bd_FnDecl>);


	inline jule::Trait<_1da411226_Kind> _method_build_by_namespace(jule::Ref<_2053703bd_NamespaceTypeDecl>);


	inline jule::Ref<_1da411226_TypeKind> _method_build(jule::Any);


	inline jule::Ref<_1da411226_TypeKind> _method_check_decl(jule::Ref<_2053703bd_TypeDecl>);


	inline void _method_check(jule::Ref<_1da411226_TypeSymbol>);


	inline bool operator==(const _1da411226_TypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	inline bool operator!=(const _1da411226_TypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _204dc9ec2_PlainImporter: public _206e66325_Importer {
	jule::Ref<_204dc9ec2_PlainImporter> self{};

	jule::Slice<jule::Ref<_206e66325_ImportInfo>> _field_all_packages{jule::Slice<jule::Ref<_206e66325_ImportInfo>>()};


	_204dc9ec2_PlainImporter(jule::Slice<jule::Ref<_206e66325_ImportInfo>> __param_all_packages) {
		this->self = jule::Ref<_204dc9ec2_PlainImporter>::make(this, nullptr);

		this->_field_all_packages = __param_all_packages;
	}

	~_204dc9ec2_PlainImporter(void) { this->self.ref = nullptr; }

	_204dc9ec2_PlainImporter(void) { this->self = jule::Ref<_204dc9ec2_PlainImporter>::make(this, nullptr); }

	inline jule::Ref<_206e66325_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ref<_20521102d_Ast>>,jule::Slice<_20377124e_Log>> _method_import_package(jule::Str);


	inline void _method_imported(jule::Ref<_206e66325_ImportInfo>);


	inline bool operator==(const _204dc9ec2_PlainImporter &_Src) const {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	inline bool operator!=(const _204dc9ec2_PlainImporter &_Src) const { return !this->operator==(_Src); }
};


struct _204a335a9_OrderedDefines {
	jule::Ref<_204a335a9_OrderedDefines> self{};

	jule::Slice<jule::Ref<_2053cdc01_Struct>> _field_structs{jule::Slice<jule::Ref<_2053cdc01_Struct>>()};
	jule::Slice<jule::Ref<_1d9e22661_Var>> _field_globals{jule::Slice<jule::Ref<_1d9e22661_Var>>()};


	_204a335a9_OrderedDefines(jule::Slice<jule::Ref<_2053cdc01_Struct>> __param_structs, jule::Slice<jule::Ref<_1d9e22661_Var>> __param_globals) {
		this->self = jule::Ref<_204a335a9_OrderedDefines>::make(this, nullptr);

		this->_field_structs = __param_structs;
		this->_field_globals = __param_globals;
	}

	~_204a335a9_OrderedDefines(void) { this->self.ref = nullptr; }

	_204a335a9_OrderedDefines(void) { this->self = jule::Ref<_204a335a9_OrderedDefines>::make(this, nullptr); }

	inline bool operator==(const _204a335a9_OrderedDefines &_Src) const {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	inline bool operator!=(const _204a335a9_OrderedDefines &_Src) const { return !this->operator==(_Src); }
};


struct _204a33ac6_IR {
	jule::Ref<_204a33ac6_IR> self{};

	jule::Slice<jule::Str> _field_passes{jule::Slice<jule::Str>()};
	jule::Ref<_206e66325_Package> _field_main{jule::Ref<_206e66325_Package>()};
	jule::Slice<jule::Ref<_206e66325_ImportInfo>> _field_used{jule::Slice<jule::Ref<_206e66325_ImportInfo>>()};
	_204a335a9_OrderedDefines _field_ordered{_204a335a9_OrderedDefines()};


	_204a33ac6_IR(jule::Slice<jule::Str> __param_passes, jule::Ref<_206e66325_Package> __param_main, jule::Slice<jule::Ref<_206e66325_ImportInfo>> __param_used, _204a335a9_OrderedDefines __param_ordered) {
		this->self = jule::Ref<_204a33ac6_IR>::make(this, nullptr);

		this->_field_passes = __param_passes;
		this->_field_main = __param_main;
		this->_field_used = __param_used;
		this->_field_ordered = __param_ordered;
	}

	~_204a33ac6_IR(void) { this->self.ref = nullptr; }

	_204a33ac6_IR(void) { this->self = jule::Ref<_204a33ac6_IR>::make(this, nullptr); }

	static inline std::tuple<jule::Ref<_204a33ac6_IR>,jule::Slice<_20377124e_Log>> _static_method_build(jule::Str,jule::Int);


	inline void _method_append_structs(jule::Ref<_206e66325_Package>&,jule::Slice<jule::Ref<_2053cdc01_Struct>>&);


	inline jule::Slice<jule::Ref<_2053cdc01_Struct>> _method_get_all_structures(void);


	inline void _method_append_vars(jule::Ref<_206e66325_Package>&,jule::Slice<jule::Ref<_1d9e22661_Var>>&);


	inline jule::Slice<jule::Ref<_1d9e22661_Var>> _method_get_all_variables(void);


	inline void _method_order(void);


	inline bool operator==(const _204a33ac6_IR &_Src) const {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used &&
			this->_field_ordered == _Src._field_ordered;
	}

	inline bool operator!=(const _204a33ac6_IR &_Src) const { return !this->operator==(_Src); }
};


struct _204a335a9_DefineOrderer {
	jule::Ref<_204a335a9_DefineOrderer> self{};

	~_204a335a9_DefineOrderer(void) { this->self.ref = nullptr; }

	_204a335a9_DefineOrderer(void) { this->self = jule::Ref<_204a335a9_DefineOrderer>::make(this, nullptr); }

	static inline jule::Bool _static_method_is_struct_ordered(jule::Slice<jule::Ref<_2053cdc01_Struct>>&,jule::Ref<_2053cdc01_Struct>);


	static inline void _static_method_order_structures(jule::Slice<jule::Ref<_2053cdc01_Struct>>&);


	static inline jule::Bool _static_method_is_var_ordered(jule::Slice<jule::Ref<_1d9e22661_Var>>&,jule::Ref<_1d9e22661_Var>);


	static inline void _static_method_order_variables(jule::Slice<jule::Ref<_1d9e22661_Var>>&);


	inline bool operator==(const _204a335a9_DefineOrderer &_Src) const { return true; }

	inline bool operator!=(const _204a335a9_DefineOrderer &_Src) const { return !this->operator==(_Src); }
};


struct _20385a2c2_ScopeDeadCode {
	jule::Ref<_20385a2c2_ScopeDeadCode> self{};

	jule::Ref<_20385a2c2_ScopeDeadCode> _field_parent{jule::Ref<_20385a2c2_ScopeDeadCode>()};
	jule::Ref<_206b0557a_Scope> _field_s{jule::Ref<_206b0557a_Scope>()};
	jule::Slice<jule::Any>* _field_stmts{nullptr};
	jule::Int _field_i{jule::Int()};


	_20385a2c2_ScopeDeadCode(jule::Ref<_20385a2c2_ScopeDeadCode> __param_parent, jule::Ref<_206b0557a_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::Int __param_i) {
		this->self = jule::Ref<_20385a2c2_ScopeDeadCode>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_s = __param_s;
		this->_field_stmts = __param_stmts;
		this->_field_i = __param_i;
	}

	~_20385a2c2_ScopeDeadCode(void) { this->self.ref = nullptr; }

	_20385a2c2_ScopeDeadCode(void) { this->self = jule::Ref<_20385a2c2_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ref<_206b0557a_Scope>&);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(const _20385a2c2_ScopeDeadCode &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _20385a2c2_ScopeDeadCode &_Src) const { return !this->operator==(_Src); }
};


struct _2049ab4bb_IndexRangeSetter: public _2049ab4bb_RangeSetter {
	jule::Ref<_2049ab4bb_IndexRangeSetter> self{};

	~_2049ab4bb_IndexRangeSetter(void) { this->self.ref = nullptr; }

	_2049ab4bb_IndexRangeSetter(void) { this->self = jule::Ref<_2049ab4bb_IndexRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_1d9e22661_Var>,jule::Ref<_1d9e22661_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_1d9e22661_Var>,jule::Ref<_1d9e22661_Var>,jule::Str);


	inline bool operator==(const _2049ab4bb_IndexRangeSetter &_Src) const { return true; }

	inline bool operator!=(const _2049ab4bb_IndexRangeSetter &_Src) const { return !this->operator==(_Src); }
};


struct _2049ab4bb_MapRangeSetter: public _2049ab4bb_RangeSetter {
	jule::Ref<_2049ab4bb_MapRangeSetter> self{};

	~_2049ab4bb_MapRangeSetter(void) { this->self.ref = nullptr; }

	_2049ab4bb_MapRangeSetter(void) { this->self = jule::Ref<_2049ab4bb_MapRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_1d9e22661_Var>,jule::Ref<_1d9e22661_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_1d9e22661_Var>,jule::Ref<_1d9e22661_Var>,jule::Str);


	inline bool operator==(const _2049ab4bb_MapRangeSetter &_Src) const { return true; }

	inline bool operator!=(const _2049ab4bb_MapRangeSetter &_Src) const { return !this->operator==(_Src); }
};


inline jule::Bool _204612364_is_surrogate(jule::I32);
inline jule::I32 _204612364_decode_rune(jule::I32,jule::I32);
inline std::tuple<jule::I32,jule::I32> _204612364_encode_rune(jule::I32);
inline jule::Slice<jule::U16> _204612364_encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _204612364_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _204612364_append_rune(jule::Slice<jule::U16>,jule::I32);
inline void* _20393537a_malloc(jule::Uint);
inline void* _20393537a_calloc(jule::Uint,jule::Uint);
inline void* _20393537a_realloc(void*,jule::Uint);
inline void _20393537a_free(void*);
inline jule::Str _2039a5483_type_id(jule::Any);
inline jule::Slice<jule::U16> _2045e2c90_utf16_from_str(jule::Str);
inline jule::Str _2045e2c90_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _2045e2c90_u16_ptr_to_str(jule::U16*);
inline jule::Str _2045e2c90_byte_ptr_to_str(jule::U8*);
inline jule::Int _2039a6dad_puts(jule::Str);
inline jule::Int _203934775_get_last_errno(void);
inline jule::Int _203935853_stat(jule::U8*,struct stat*);
inline jule::Int _203935853_open(jule::U8*,jule::Int,jule::Int);
inline jule::U8* _203935853_getcwd(jule::U8*,jule::Uint);
inline DIR* _203935853_opendir(jule::U8*);
inline struct dirent* _203935853_readdir(DIR*);
inline jule::Int _203935853_closedir(DIR*);
inline jule::Int _203935853_chdir(jule::U8*);
inline jule::Int _203935853_remove(jule::U8*);
inline jule::Int _203935853_mkdir(jule::U8*,jule::Int);
inline jule::Int _203935853_rmdir(jule::U8*);
inline jule::Int _203935853_unlink(jule::U8*);
inline jule::I64 _203997e37_seek(jule::Int,jule::I64,jule::Int);
inline jule::Int _203997e37_read(jule::Int,void*,jule::Uint);
inline jule::Int _203997e37_close(jule::Int);
inline jule::Int _203997e37_write(jule::Int,void*,jule::Uint);
inline void _203997e37_exit(jule::Int);
inline jule::Int _2039173d4_get_last_os_error(void);
inline std::tuple<jule::Str,jule::Int> _20391c818_working_dir(void);
inline jule::Int _20391c818_set_working_dir(jule::Str);
inline void _20391c818_init(void);
inline std::tuple<jule::Str,jule::Int> _20392da16___getwd(void);
inline jule::Int _20392da16___chdir(jule::Str);
inline jule::Str _203896264_clean(jule::Str);
inline jule::Str _203896264_to_slash(jule::Str);
inline jule::Str _203896264_from_slash(jule::Str);
inline jule::Str _203896264_join(jule::Slice<jule::Str>);
inline jule::Str _203896264_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _203896264_abs(jule::Str);
inline jule::Str _203896264_base(jule::Str);
inline jule::Str _203896264_dir(jule::Str);
inline jule::Str _203896264_volume_name(jule::Str);
inline jule::Bool _2038b7de0_is_path_sep(jule::U8);
inline jule::Bool _2038b7de0_is_abs(jule::Str);
inline jule::Int _2038b7de0_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _2038b7de0___abs(jule::Str);
inline jule::Str _2038b7de0_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _2038b7de0___join(jule::Slice<jule::Str>);
inline void _2039051d5_exit(jule::Int);
inline jule::Str _2039051d5_executable(void);
inline jule::Bool _2037761bb_is_std_header_path(jule::Str);
inline jule::Bool _2037761bb_is_valid_header_ext(jule::Str);
inline jule::Bool _2037761bb_is_valid_cpp_ext(jule::Str);
inline jule::Str _20377124e_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _20377124e_arg_to_str(jule::Any);
inline jule::Int _20377124e_find_next_fmt(jule::Str);
inline jule::Str _20377124e_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _2037d887c_is_top_directive(jule::Str);
inline jule::Bool _2037d86a1_is_windows(jule::Str);
inline jule::Bool _2037d86a1_is_darwin(jule::Str);
inline jule::Bool _2037d86a1_is_linux(jule::Str);
inline jule::Bool _2037d86a1_is_i386(jule::Str);
inline jule::Bool _2037d86a1_is_amd64(jule::Str);
inline jule::Bool _2037d86a1_is_arm64(jule::Str);
inline jule::Bool _2037d86a1_is_unix(jule::Str);
inline jule::Bool _2037d86a1_is_32bit(jule::Str);
inline jule::Bool _2037d86a1_is_64bit(jule::Str);
inline void _203845d29_exit_err(jule::Str);
inline void _203845d29_init(void);
inline jule::Bool _203846676_is_jule(jule::Str);
inline jule::Int _20525c51e_leading_zeros(jule::Uint);
inline jule::Int _20525c51e_leading_zeros8(jule::U8);
inline jule::Int _20525c51e_leading_zeros16(jule::U16);
inline jule::Int _20525c51e_leading_zeros32(jule::U32);
inline jule::Int _20525c51e_leading_zeros64(jule::U64);
inline jule::Int _20525c51e_trailing_zeros(jule::Uint);
inline jule::Int _20525c51e_trailing_zeros8(jule::U8);
inline jule::Int _20525c51e_trailing_zeros16(jule::U16);
inline jule::Int _20525c51e_trailing_zeros32(jule::U32);
inline jule::Int _20525c51e_trailing_zeros64(jule::U64);
inline jule::Int _20525c51e_ones_count(jule::Uint);
inline jule::Int _20525c51e_ones_count8(jule::U8);
inline jule::Int _20525c51e_ones_count16(jule::U16);
inline jule::Int _20525c51e_ones_count32(jule::U32);
inline jule::Int _20525c51e_ones_count64(jule::U64);
inline jule::Uint _20525c51e_rotate_left(jule::Uint,jule::Int);
inline jule::U8 _20525c51e_rotate_left8(jule::U8,jule::Int);
inline jule::U16 _20525c51e_rotate_left16(jule::U16,jule::Int);
inline jule::U32 _20525c51e_rotate_left32(jule::U32,jule::Int);
inline jule::U64 _20525c51e_rotate_left64(jule::U64,jule::Int);
inline jule::Uint _20525c51e_reverse(jule::Uint);
inline jule::U8 _20525c51e_reverse8(jule::U8);
inline jule::U16 _20525c51e_reverse16(jule::U16);
inline jule::U32 _20525c51e_reverse32(jule::U32);
inline jule::U64 _20525c51e_reverse64(jule::U64);
inline jule::Uint _20525c51e_reverse_bytes(jule::Uint);
inline jule::U16 _20525c51e_reverse_bytes16(jule::U16);
inline jule::U32 _20525c51e_reverse_bytes32(jule::U32);
inline jule::U64 _20525c51e_reverse_bytes64(jule::U64);
inline jule::Int _20525c51e_len(jule::Uint);
inline jule::Int _20525c51e_len8(jule::U8);
inline jule::Int _20525c51e_len16(jule::U16);
inline jule::Int _20525c51e_len32(jule::U32);
inline jule::Int _20525c51e_len64(jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _20525c51e_add(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _20525c51e_add32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _20525c51e_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _20525c51e_sub(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _20525c51e_sub32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _20525c51e_sub64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _20525c51e_mul(jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _20525c51e_mul32(jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _20525c51e_mul64(jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _20525c51e_div(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _20525c51e_div32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _20525c51e_div64(jule::U64,jule::U64,jule::U64);
inline jule::Uint _20525c51e_rem(jule::Uint,jule::Uint,jule::Uint);
inline jule::U32 _20525c51e_rem32(jule::U32,jule::U32,jule::U32);
inline jule::U64 _20525c51e_rem64(jule::U64,jule::U64,jule::U64);
inline jule::F64 _204a03ed6_atanh(jule::F64);
inline jule::U32 _204a244ce_f32_bits(jule::F32);
inline jule::F32 _204a244ce_f32_from_bits(jule::U32);
inline jule::U64 _204a244ce_f64_bits(jule::F64);
inline jule::F64 _204a244ce_f64_from_bits(jule::U64);
inline jule::F64 _204a2e5b6_cos(jule::F64);
inline jule::F64 _204a2e5b6_sin(jule::F64);
inline jule::F64 _204a2e7c5_tan(jule::F64);
inline jule::F64 _204a0b120_mod(jule::F64,jule::F64);
inline std::tuple<jule::F64,jule::Int> _204a91b01_frexp(jule::F64);
inline jule::F32 _204a9d26c_nextafter32(jule::F32,jule::F32);
inline jule::F64 _204a9d26c_nextafter(jule::F64,jule::F64);
inline jule::F64 _204a923d7_copysign(jule::F64,jule::F64);
inline std::tuple<jule::U64,jule::F64> _204a322ab_trig_reduce(jule::F64);
inline jule::F64 _204ac872b_atan2(jule::F64,jule::F64);
inline jule::F64 _204ac0943_floor(jule::F64);
inline jule::F64 _204ac0943_ceil(jule::F64);
inline jule::F64 _204ac0943_trunc(jule::F64);
inline jule::F64 _204ac0943_round(jule::F64);
inline jule::F64 _204ac0943_round_even(jule::F64);
inline jule::F64 _204ae433a_nan(void);
inline jule::Bool _204ae433a_is_nan(jule::F64);
inline jule::F64 _204ae433a_inf(jule::Int);
inline jule::Bool _204ae433a_is_inf(jule::F64,jule::Int);
inline std::tuple<jule::F64,jule::Int> _204ae433a_normalize(jule::F64);
inline std::tuple<jule::F64,jule::F64> _204b40793_sincos(jule::F64);
inline jule::F64 _204b13678_dim(jule::F64,jule::F64);
inline jule::F64 _204b13678_max(jule::F64,jule::F64);
inline jule::F64 _204b13678_min(jule::F64,jule::F64);
inline jule::F64 _204b436ca_log(jule::F64);
inline jule::F64 _204baea54_expm1(jule::F64);
inline jule::F64 _204c18409_abs(jule::F64);
inline jule::F64 _204bc0e1c_j1(jule::F64);
inline jule::F64 _204bc0e1c_y1(jule::F64);
inline jule::F64 _204bc0e1c_pone(jule::F64);
inline jule::F64 _204bc0e1c_qone(jule::F64);
inline jule::U64 _204c920cb_zero(jule::U64);
inline jule::U64 _204c920cb_nonzero(jule::U64);
inline std::tuple<jule::U64,jule::U64> _204c920cb_shl(jule::U64,jule::U64,jule::Uint);
inline std::tuple<jule::U64,jule::U64> _204c920cb_shr(jule::U64,jule::U64,jule::Uint);
inline std::tuple<jule::U64,jule::U64> _204c920cb_shrcompress(jule::U64,jule::U64,jule::Uint);
inline jule::I32 _204c920cb_lz(jule::U64,jule::U64);
inline std::tuple<jule::U32,jule::I32,jule::U64> _204c920cb_split(jule::U64);
inline jule::F64 _204c920cb_fma(jule::F64,jule::F64,jule::F64);
inline std::tuple<jule::F64,jule::F64> _204c8b845_modf(jule::F64);
inline jule::F64 _204cd760a_log10(jule::F64);
inline jule::F64 _204cd760a_log2(jule::F64);
inline jule::F64 _204cedd4c_hypot(jule::F64,jule::F64);
inline jule::F64 _204cae0b5_j0(jule::F64);
inline jule::F64 _204cae0b5_y0(jule::F64);
inline jule::F64 _204cae0b5_pzero(jule::F64);
inline jule::F64 _204cae0b5_qzero(jule::F64);
inline jule::F64 _204d88447_ldexp(jule::F64,jule::Int);
inline jule::Bool _204ce6b9c_signbit(jule::F64);
inline jule::F64 _204d8b747_sinh(jule::F64);
inline jule::F64 _204d8b747_cosh(jule::F64);
inline std::tuple<jule::F64,jule::Int> _204da66b8_lgamma(jule::F64);
inline jule::F64 _204da66b8_sin_pi(jule::F64);
inline jule::F64 _204da6ca1_acosh(jule::F64);
inline jule::F64 _204e49b79_tanh(jule::F64);
inline jule::F64 _204dc3a04_cbrt(jule::F64);
inline jule::F64 _204e55a42_pow(jule::F64,jule::F64);
inline jule::Bool _204e55a42_is_odd_int(jule::F64);
inline jule::F64 _204ec2e11_exp(jule::F64);
inline jule::F64 _204ec2e11_exp2(jule::F64);
inline jule::F64 _204ec2e11_expmulti(jule::F64,jule::F64,jule::Int);
inline jule::F64 _204ee5a5a_log1p(jule::F64);
inline std::tuple<jule::F64,jule::F64> _205003eec_stirling(jule::F64);
inline jule::F64 _205003eec_gamma(jule::F64);
inline jule::Bool _205003eec_is_neg_int(jule::F64);
inline jule::F64 _205033db7_erfinv(jule::F64);
inline jule::F64 _205033db7_erfcinv(jule::F64);
inline jule::F64 _2050b9744_erf(jule::F64);
inline jule::F64 _2050b9744_erfc(jule::F64);
inline jule::F64 _205056879_pow10(jule::Int);
inline jule::F64 _2050b9975_sqrt(jule::F64);
inline jule::F64 _20515c71b_logb(jule::F64);
inline jule::Int _20515c71b_ilogb(jule::F64);
inline jule::Int _20515c71b__ilogb(jule::F64);
inline jule::F64 _20515d2aa_jn(jule::Int,jule::F64);
inline jule::F64 _20515d2aa_yn(jule::Int,jule::F64);
inline jule::F64 _2051dea9a_remainder(jule::F64,jule::F64);
inline jule::F64 _205170762_xatan(jule::F64);
inline jule::F64 _205170762_satan(jule::F64);
inline jule::F64 _205170762_atan(jule::F64);
inline jule::F64 _2051e0194_asin(jule::F64);
inline jule::F64 _2051e0194_acos(jule::F64);
inline jule::F64 _20523c477_asinh(jule::F64);
inline std::tuple<jule::Bool,jule::Int> _2037e7a12_conv_bool(jule::Str);
inline jule::Str _2037e7a12_fmt_bool(jule::Bool);
inline jule::Str _203830374_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _203830374_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _203830374_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_203830374_FloatInfo&);
inline jule::Slice<jule::U8> _203830374_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_203830374_DecimalSlice,jule::Int,jule::U8);
inline void _203830374_round_shortest(_2047bec19_Decimal&,jule::U64,jule::Int,_203830374_FloatInfo&);
inline jule::Slice<jule::U8> _203830374_fmt_e(jule::Slice<jule::U8>,jule::Bool,_203830374_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _203830374_fmt_f(jule::Slice<jule::U8>,jule::Bool,_203830374_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _203830374_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_203830374_FloatInfo&);
inline jule::Slice<jule::U8> _203830374_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_203830374_FloatInfo&);
inline jule::Int _203830374_min(jule::Int,jule::Int);
inline jule::Int _203830374_max(jule::Int,jule::Int);
inline jule::U8 _20383c161_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _20383c161_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _20383c161_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _203842a5c_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _203842a5c_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _20384ee76_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _20384ee76_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _20384ee76_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _20384ee76_atof64_exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Bool> _20384ee76_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _20384ee76_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _20384ee76_atof_hex(jule::Str,_203830374_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _20384ee76_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _20384ee76_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _20384ee76_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _20384ee76_parse_float(jule::Str,jule::Int);
inline void _2047bd4cb_ryu_ftoa_fixed32(_203830374_DecimalSlice&,jule::U32,jule::Int,jule::Int);
inline void _2047bd4cb_ryu_ftoa_fixed64(_203830374_DecimalSlice&,jule::U64,jule::Int,jule::Int);
inline void _2047bd4cb_format_decimal(_203830374_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _2047bd4cb_ryu_ftoa_shortest(_203830374_DecimalSlice&,jule::U64,jule::Int,_203830374_FloatInfo&);
inline jule::Int _2047bd4cb_mul_by_log2_log10(jule::Int);
inline jule::Int _2047bd4cb_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _2047bd4cb_compute_bounds(jule::U64,jule::Int,_203830374_FloatInfo&);
inline void _2047bd4cb_ryu_digits(_203830374_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _2047bd4cb_ryu_digits32(_203830374_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _2047bd4cb_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _2047bd4cb_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _2047bd4cb_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _2047bd4cb_divmod1e9(jule::U64);
inline jule::Int _2047bec19_digit_zero(jule::Slice<jule::U8>);
inline void _2047bec19_trim(_2047bec19_Decimal&);
inline void _2047bec19_right_shift(_2047bec19_Decimal&,jule::Uint);
inline jule::Bool _2047bec19_prefix_is_less_than(jule::Slice<jule::U8>,jule::Str);
inline void _2047bec19_left_shift(_2047bec19_Decimal&,jule::Uint);
inline jule::Bool _2047bec19_should_round_up(_2047bec19_Decimal&,jule::Int);
inline jule::Str _2049bd7b9_fmt_uint(jule::U64,jule::Int);
inline jule::Str _2049bd7b9_fmt_int(jule::I64,jule::Int);
inline jule::Str _2049bd7b9_itoa(jule::Int);
inline jule::Str _2049bd7b9_small(jule::Int);
inline jule::Bool _2049bd7b9_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _2049bd7b9_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline void _205094587_push_opt_level(jule::Int);
inline jule::Bool _205094587_is_opt_enabled(jule::Str);
inline jule::Int _2050be293_get_last_fs_error(void);
inline std::tuple<jule::Ref<_20522c3ce_File>,jule::Int> _205171686_open(jule::Str,jule::Int,jule::Int);
inline jule::Int _205171686_remove_file(jule::Str);
inline std::tuple<jule::Ref<_20537ab26_Status>,jule::Int> _205127c47_stat(jule::Str);
inline std::tuple<jule::Slice<jule::U8>,jule::Int> _20522c3ce_read_file(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_20522b4aa_DirEntry>>,jule::Int> _20539ca9e_read_dir(jule::Str);
inline jule::Int _20539ca9e_create_dir(jule::Str);
inline jule::Int _20539ca9e_remove_dir(jule::Str);
inline jule::Bool _205583b75_is_graphic(jule::I32);
inline jule::Bool _205583b75_is_in(jule::I32,jule::Slice<jule::Ref<_20548c650_RangeTable>>);
inline jule::Bool _205583b75_is_letter(jule::I32);
inline jule::Bool _205583b75_is_number(jule::I32);
inline jule::Bool _205583b75_is_punct(jule::I32);
inline jule::Bool _205583b75_is_space(jule::I32);
inline jule::Bool _2062a7aeb_is_digit(jule::I32);
inline std::tuple<jule::I32,jule::Bool> _20548c650___to(jule::Int,jule::I32,jule::Slice<_20548c650_CaseRange>);
inline jule::I32 _20548c650_to(jule::Int,jule::I32);
inline jule::I32 _20548c650_to_upper(jule::I32);
inline jule::I32 _20548c650_to_lower(jule::I32);
inline jule::Bool _20548c650_is16(jule::Slice<_20548c650_Range16>,jule::U16);
inline jule::Bool _20548c650_is32(jule::Slice<_20548c650_Range32>,jule::U32);
inline jule::Bool _20548c650_is(jule::Ref<_20548c650_RangeTable>,jule::I32);
inline jule::Bool _20548c650_is_excluding_latin(jule::Ref<_20548c650_RangeTable>,jule::I32);
inline jule::Bool _20548c650_is_upper(jule::I32);
inline jule::Bool _20548c650_is_lower(jule::I32);
inline jule::Bool _2062e3ad2_full_rune(jule::Slice<jule::U8>);
inline jule::Bool _2062e3ad2_full_rune_str(jule::Str);
inline std::tuple<jule::I32,jule::Int> _2062e3ad2_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _2062e3ad2_decode_rune_str(jule::Str);
inline std::tuple<jule::I32,jule::Int> _2062e3ad2_decode_last_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _2062e3ad2_decode_last_rune_str(jule::Str);
inline jule::Int _2062e3ad2_rune_len(jule::I32);
inline jule::Int _2062e3ad2_encode_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _2062e3ad2_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _2062e3ad2_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::Int _2062e3ad2_rune_count(jule::Slice<jule::U8>);
inline jule::Int _2062e3ad2_rune_count_str(jule::Str);
inline jule::Bool _2062e3ad2_rune_start(jule::U8);
inline jule::Bool _2062e3ad2_valid(jule::Slice<jule::U8>);
inline jule::Bool _2062e3ad2_valid_str(jule::Str);
inline jule::Bool _2062e3ad2_valid_rune(jule::I32);
inline jule::Bool _20542560a_is_unary_op(jule::Str);
inline jule::Bool _20542560a_is_bin_op(jule::Str);
inline jule::Bool _20542560a_is_weak_op(jule::Str);
inline jule::Bool _20542560a_is_str(jule::Str);
inline jule::Bool _20542560a_is_raw_str(jule::Str);
inline jule::Bool _20542560a_is_rune(jule::Str);
inline jule::Bool _20542560a_is_nil(jule::Str);
inline jule::Bool _20542560a_is_bool(jule::Str);
inline jule::Bool _20542560a_contains_any(jule::Str,jule::Str);
inline jule::Bool _20542560a_is_float(jule::Str);
inline jule::Bool _20542560a_is_num(jule::Str);
inline jule::Bool _20542560a_is_lit(jule::Str);
inline jule::Bool _20542560a_is_ignore_ident(jule::Str);
inline jule::Bool _20542560a_is_anon_ident(jule::Str);
inline jule::Bool _20542560a_is_punct(jule::I32);
inline jule::Bool _20542560a_is_space(jule::I32);
inline jule::Bool _20542560a_is_letter(jule::I32);
inline jule::Bool _20542560a_is_ident_rune(jule::Str);
inline jule::Bool _20542560a_is_decimal(jule::U8);
inline jule::Bool _20542560a_is_binary(jule::U8);
inline jule::Bool _20542560a_is_octal(jule::U8);
inline jule::Bool _20542560a_is_hex(jule::U8);
inline jule::Bool _20542560a_is_assign(jule::Uint);
inline jule::Bool _20542560a_is_postfix_op(jule::Str);
inline jule::Bool _20542560a_is_assign_op(jule::Str);
inline jule::Ref<_2053bdb25_File> _2053bdb25_new_file_set(jule::Str);
inline _20377124e_Log _20547ded2_make_err(jule::Int,jule::Int,jule::Ref<_2053bdb25_File>,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _20547ded2_bytes_has_prefix(jule::Slice<jule::U8>,jule::Str);
inline jule::Str _20547ded2_float_fmt_e(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _20547ded2_float_fmt_p(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _20547ded2_float_fmt_dotnp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _20547ded2_float_fmt_dotfp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _20547ded2_float_fmt_dotp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _20547ded2_float_num(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _20547ded2_common_num(jule::Slice<jule::U8>);
inline jule::Str _20547ded2_binary_num(jule::Slice<jule::U8>);
inline jule::Bool _20547ded2_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _20547ded2_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _20547ded2_is_float_fmt_dotnp(jule::Slice<jule::U8>,jule::Int);
inline jule::Bool _20547ded2_is_float_fmt_dotp(jule::Slice<jule::U8>,jule::Int);
inline jule::Bool _20547ded2_is_float_fmt_dotfp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _20547ded2_octal_num(jule::Slice<jule::U8>);
inline jule::Str _20547ded2_hex_num(jule::Slice<jule::U8>);
inline jule::Str _20547ded2_hex_escape(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _20547ded2_big_unicode_point_escape(jule::Slice<jule::U8>);
inline jule::Str _20547ded2_little_unicode_point_escape(jule::Slice<jule::U8>);
inline jule::Str _20547ded2_hex_byte_escape(jule::Slice<jule::U8>);
inline jule::Str _20547ded2_byte_escape(jule::Slice<jule::U8>);
inline jule::Slice<_20377124e_Log> _20547ded2_lex(jule::Ref<_2053bdb25_File>);
inline jule::Ref<_2053a3313_FileInfo> _2053a3313_parse_file(jule::Ref<_2053bdb25_File>);
inline jule::Ref<_2053a3313_PackageInfo> _2053a3313_parse_package(jule::Slice<jule::Ref<_2053bdb25_File>>);
inline std::tuple<jule::Ref<_20521102d_Ast>,jule::Slice<_20377124e_Log>> _2053a3313_parse_fileset(jule::Ref<_2053bdb25_File>);
inline jule::Ref<_2053703bd_ScopeTree> _2053cae51_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _2053cae51_is_st(_20542560a_Token,_20542560a_Token);
inline jule::Bool _2053cae51_prev_is_incomplete_binary_expr(jule::Slice<_20542560a_Token>&,jule::Int&);
inline std::tuple<jule::Int,jule::Bool> _2053cae51_next_st_pos(jule::Slice<_20542560a_Token>,jule::Int);
inline std::tuple<jule::Slice<_20542560a_Token>,jule::Bool> _2053cae51_skip_st(jule::Int&,jule::Slice<_20542560a_Token>);
inline jule::Slice<jule::Ref<_2053cae51_Stmt>> _2053cae51_split_stms(jule::Slice<_20542560a_Token>);
inline jule::Slice<_20542560a_Token> _2054205a0_is_fn_call(jule::Slice<_20542560a_Token>);
inline jule::Ref<_2054205a0_CallData> _2054205a0_get_call_data(jule::Slice<_20542560a_Token>);
inline jule::Slice<_20542560a_Token> _2054205a0_get_block_expr(jule::Slice<_20542560a_Token>);
inline std::tuple<jule::Slice<_20542560a_Token>,jule::Slice<_20542560a_Token>> _2054205a0_split_colon(jule::Slice<_20542560a_Token>);
inline jule::Slice<_20542560a_Token> _2054205a0_eliminate_comments(jule::Slice<_20542560a_Token>);
inline jule::Int _2054205a0_find_lowest_prec_op(jule::Slice<_20542560a_Token>);
inline jule::Ref<_2053703bd_IdentExpr> _2054205a0_build_ident_expr(_20542560a_Token);
inline std::tuple<jule::Slice<_20542560a_Token>,jule::Int> _2054205a0_get_range_expr_tokens(jule::Slice<_20542560a_Token>);
inline jule::Bool _20543982d_check_assign_tokens(jule::Slice<_20542560a_Token>);
inline _20377124e_Log _206540c0d_make_err(jule::Int,jule::Int,jule::Ref<_2053bdb25_File>,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_20542560a_Token> _206540c0d_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_20542560a_Token>);
inline std::tuple<jule::Slice<_20542560a_Token>,jule::Slice<_20542560a_Token>> _206540c0d_range_last(jule::Slice<_20542560a_Token>);
inline std::tuple<jule::Slice<jule::Slice<_20542560a_Token>>,jule::Slice<_20377124e_Log>> _206540c0d_parts(jule::Slice<_20542560a_Token>,jule::Uint,jule::Bool);
inline jule::Str _206540c0d_get_close_kind_of_brace(jule::Str);
inline _20377124e_Log _206540c0d_compiler_err(_20542560a_Token,jule::Str,jule::Slice<jule::Any>);
inline void _206540c0d_push_suggestion(_20377124e_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ref<_2053703bd_Comment> _206540c0d_build_comment(_20542560a_Token);
inline jule::Str _206540c0d_tokstoa(jule::Slice<_20542560a_Token>);
inline jule::Ref<_2053703bd_TypeDecl> _206581226_build_void_type(void);
inline jule::Ref<_2053703bd_TypeDecl> _206581226_build_prim_type(_20542560a_Token);
inline std::tuple<jule::Slice<_20542560a_Token>,jule::Int> _206581226_split_map_range(jule::Slice<_20542560a_Token>,jule::Int&);
inline void _1a89ca987_lshift_unsig(_1a89ca987_Const&,_1a89ca987_Const&);
inline void _1a89ca987_rshift_unsig(_1a89ca987_Const&,_1a89ca987_Const&);
inline jule::Bool _1da96e289_check_bit(jule::Str,jule::Int,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>);
inline jule::Str _1da96e289_real_kind_of(jule::Str);
inline jule::Int _1da96e289_bitsize_of(jule::Str);
inline jule::Str _1da96e289_int_from_bits(jule::U64);
inline jule::Str _1da96e289_uint_from_bits(jule::U64);
inline jule::Str _1da96e289_float_from_bits(jule::U64);
inline jule::Bool _1da96e289_check_bit_int(jule::Str,jule::Int);
inline jule::Bool _1da96e289_check_bit_uint(jule::Str,jule::Int);
inline jule::Bool _1da96e289_check_bit_float(jule::Str,jule::Int);
inline jule::U64 _1da96e289_bitsize_of_float(jule::F64);
inline jule::U64 _1da96e289_bitsize_of_int(jule::I64);
inline jule::U64 _1da96e289_bitsize_of_uint(jule::U64);
inline jule::F64 _1da826509_min(jule::Str);
inline jule::F64 _1da826509_max(jule::Str);
inline jule::Bool _1da90ea98_is_i8_compatible(jule::Str);
inline jule::Bool _1da90ea98_is_i16_compatible(jule::Str);
inline jule::Bool _1da90ea98_is_i32_compatible(jule::Str);
inline jule::Bool _1da90ea98_is_i64_compatible(jule::Str);
inline jule::Bool _1da90ea98_is_u8_compatible(jule::Str);
inline jule::Bool _1da90ea98_is_u16_compatible(jule::Str);
inline jule::Bool _1da90ea98_is_u32_compatible(jule::Str);
inline jule::Bool _1da90ea98_is_u64_compatible(jule::Str);
inline jule::Bool _1da90ea98_is_f32_compatible(jule::Str);
inline jule::Bool _1da90ea98_is_f64_compatible(jule::Str);
inline jule::Bool _1da90ea98_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _1da90ea98_is_i16_greater(jule::Str);
inline jule::Bool _1da90ea98_is_i32_greater(jule::Str);
inline jule::Bool _1da90ea98_is_i64_greater(jule::Str);
inline jule::Bool _1da90ea98_is_u8_greater(jule::Str);
inline jule::Bool _1da90ea98_is_u16_greater(jule::Str);
inline jule::Bool _1da90ea98_is_u32_greater(jule::Str);
inline jule::Bool _1da90ea98_is_u64_greater(jule::Str);
inline jule::Bool _1da90ea98_is_f32_greater(jule::Str);
inline jule::Bool _1da90ea98_is_f64_greater(jule::Str);
inline jule::Bool _1da90ea98_is_greater(jule::Str,jule::Str);
inline jule::Bool _1a8a8de8a_is_sig_int(jule::Str);
inline jule::Bool _1a8a8de8a_is_unsig_int(jule::Str);
inline jule::Bool _1a8a8de8a_is_int(jule::Str);
inline jule::Bool _1a8a8de8a_is_float(jule::Str);
inline jule::Bool _1a8a8de8a_is_num(jule::Str);
inline jule::Bool _1a8a8de8a_is_sig_num(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1a8bded22_is_byte_lit(jule::Str);
inline jule::I32 _1a8bded22_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1a8bded22_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1a8bded22_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1a8bded22_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1a8bded22_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Str _1a8bded22_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Str _206a20e79_str_repeat(jule::Str,jule::Int);
inline jule::Str _206a20e79_build_doc(jule::Ref<_2053703bd_CommentGroup>);
inline jule::Ref<_1da411226_TypeSymbol> _206a20e79_build_type(jule::Ref<_2053703bd_TypeDecl>);
inline jule::Ref<_1da2d3bdc_Value> _206a20e79_build_expr(jule::Ref<_2053703bd_Expr>);
inline jule::Ref<_1da411226_TypeAlias> _206a20e79_build_type_alias(jule::Ref<_2053703bd_TypeAliasDecl>);
inline jule::Ref<_2053cdc01_Field> _206a20e79_build_field(jule::Ref<_2053703bd_FieldDecl>);
inline jule::Slice<jule::Ref<_2053cdc01_Field>> _206a20e79_build_fields(jule::Slice<jule::Ref<_2053703bd_FieldDecl>>);
inline jule::Ref<_2053cdc01_Struct> _206a20e79_build_struct(jule::Ref<_2053703bd_StructDecl>);
inline jule::Ref<_2053ddd54_Param> _206a20e79_build_param(jule::Ref<_2053703bd_ParamDecl>);
inline jule::Slice<jule::Ref<_2053ddd54_Param>> _206a20e79_build_params(jule::Slice<jule::Ref<_2053703bd_ParamDecl>>);
inline jule::Ref<_2053ddd54_RetType> _206a20e79_build_ret_type(jule::Ref<_2053703bd_RetTypeDecl>);
inline jule::Ref<_2053ddd54_Fn> _206a20e79_build_fn(jule::Ref<_2053703bd_FnDecl>);
inline jule::Slice<jule::Ref<_2053ddd54_Fn>> _206a20e79_build_methods(jule::Slice<jule::Ref<_2053703bd_FnDecl>>);
inline jule::Ref<_2065895c5_Trait> _206a20e79_build_trait(jule::Ref<_2053703bd_TraitDecl>);
inline jule::Ref<_206b06c0d_EnumItem> _206a20e79_build_enum_item(jule::Ref<_2053703bd_EnumItemDecl>);
inline jule::Slice<jule::Ref<_206b06c0d_EnumItem>> _206a20e79_build_enum_items(jule::Slice<jule::Ref<_2053703bd_EnumItemDecl>>);
inline jule::Ref<_206b06c0d_Enum> _206a20e79_build_enum(jule::Ref<_2053703bd_EnumDecl>);
inline jule::Ref<_1d9e22661_Var> _206a20e79_build_var(jule::Ref<_2053703bd_VarDecl>);
inline jule::Ref<_206b07093_Impl> _206a20e79_build_impl(jule::Ref<_2053703bd_Impl>);
inline jule::Ref<_206b0557a_ScopeChecker> _206b0557a_new_scope_checker_base(jule::Ref<_1d9dc7517_Sema>,jule::Ref<_2053ddd54_FnIns>);
inline jule::Ref<_206b0557a_ScopeChecker> _206b0557a_new_scope_checker(jule::Ref<_1d9dc7517_Sema>,jule::Ref<_2053ddd54_FnIns>);
inline jule::Ref<_206b0557a_ScopeLabel> _206b0557a_find_label_parent(jule::Str,jule::Ref<_206b0557a_ScopeChecker>);
inline jule::Int _206b0557a_count_match_type(jule::Ref<_206b0557a_Match>,jule::Ref<_1da411226_TypeKind>);
inline jule::Slice<jule::Ref<_1da2d3bdc_Data>> _206b0557a_get_datas_from_tuple_data(jule::Ref<_1da2d3bdc_Data>);
inline jule::Slice<jule::Any> _206b0557a_get_expr_models(jule::Any);
inline jule::Bool _206b0557a_check_mut(jule::Ref<_1d9dc7517_Sema>,jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);
inline jule::Bool _206b0557a_check_assign(jule::Ref<_1d9dc7517_Sema>,jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>,_20542560a_Token);
inline jule::Bool _206b0557a_is_valid_ast_st_for_next_st(jule::Any);
inline jule::Bool _206b0557a_is_valid_st_for_next_st(jule::Any);
inline jule::Bool _206b0557a_st_is_def(jule::Any);
inline jule::Ref<_1d9e22661_Var> _206e66325_find_var_in_package(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_1da411226_TypeAlias> _206e66325_find_type_alias_in_package(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_2053cdc01_Struct> _206e66325_find_struct_in_package(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_2053ddd54_Fn> _206e66325_find_fn_in_package(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_2065895c5_Trait> _206e66325_find_trait_in_package(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>,jule::Str);
inline jule::Ref<_206b06c0d_Enum> _206e66325_find_enum_in_package(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>,jule::Str);
inline _20377124e_Log _1d9dc7517_compiler_err(_20542560a_Token,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1d9dc7517_imp_is_lookupable(jule::Ref<_206e66325_ImportInfo>,jule::Str);
inline jule::Slice<jule::Ref<_1d9e22661_Var>> _1d9dc7517_build_ret_vars(jule::Ref<_2053ddd54_FnIns>);
inline jule::Slice<jule::Ref<_1d9e22661_Var>> _1d9dc7517_build_param_vars(jule::Ref<_2053ddd54_FnIns>);
inline jule::Slice<jule::Ref<_1da411226_TypeAlias>> _1d9dc7517_build_generic_type_aliases(jule::Ref<_2053ddd54_FnIns>);
inline jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_find_file(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>,jule::Ref<_2053bdb25_File>);
inline std::tuple<jule::Bool,jule::Bool> _1d9dc7517_conditional_has_ret(jule::Ref<_206b0557a_Conditional>);
inline jule::Bool _1d9dc7517_match_has_ret(jule::Ref<_206b0557a_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1d9dc7517___has_ret(jule::Ref<_206b0557a_Scope>);
inline jule::Bool _1d9dc7517_has_ret(jule::Ref<_206b0557a_Scope>);
inline void _1d9dc7517_push_suggestion(_20377124e_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ref<_1da411226_TypeKind>> _1da120d15_get_fn_result_types(jule::Ref<_2053ddd54_FnIns>);
inline jule::Bool _1da120d15_trait_has_reference_receiver(jule::Ref<_2065895c5_Trait>);
inline jule::Bool _1da120d15_float_assignable(jule::Str,jule::Ref<_1da2d3bdc_Data>);
inline jule::Bool _1da120d15_sig_assignable(jule::Str,jule::Ref<_1da2d3bdc_Data>);
inline jule::Bool _1da120d15_unsig_assignable(jule::Str,jule::Ref<_1da2d3bdc_Data>);
inline jule::Bool _1da120d15_int_assignable(jule::Str,jule::Ref<_1da2d3bdc_Data>);
inline jule::Any _1da2d3bdc_find_builtins_import(jule::Str,jule::Ref<_206e66325_ImportInfo>);
inline jule::Any _1da2d3bdc_find_builtins_sema(jule::Str,jule::Ref<_1d9dc7517_Sema>);
inline jule::Bool _1da2d3bdc_is_ok_for_shifting(jule::Ref<_1da2d3bdc_Data>);
inline jule::Bool _1da2d3bdc_is_instanced_struct(jule::Ref<_2053cdc01_StructIns>);
inline void _1da2d3bdc_normalize_bitsize(jule::Ref<_1da2d3bdc_Data>);
inline void _1da2d3bdc_normalize_type(jule::Ref<_1da2d3bdc_Data>);
inline void _1da2d3bdc_apply_cast_kind_model(jule::Ref<_1da2d3bdc_Data>);
inline void _1da2d3bdc_apply_cast_kind(jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_build_void_data(void);
inline jule::Str _1da2d3bdc_kind_by_bitsize(jule::Any);
inline jule::Str _1da2d3bdc_check_data_for_integer_indexing(jule::Ref<_1da2d3bdc_Data>);
inline jule::Bool _1da411226_can_get_ptr(jule::Ref<_1da2d3bdc_Data>);
inline jule::Bool _1da411226_is_valid_for_ref(jule::Ref<_1da411226_TypeKind>);
inline jule::Str _1da411226_build_link_path_by_tokens(jule::Slice<_20542560a_Token>);
inline jule::Ref<_1da411226_Prim> _1da411226_build_prim_type(jule::Str);
inline jule::Ref<_2053cdc01_Struct> _1da411226_get_struct_from_kind(jule::Ref<_1da411226_TypeKind>);
inline jule::Bool _1da411226_is_prim(jule::Str);
inline std::tuple<jule::Ref<_1da2aa301_SymbolTable>,jule::Slice<_20377124e_Log>> _206c8d01a_build_symbols(jule::Ref<_20521102d_Ast>,jule::Trait<_206e66325_Importer>,jule::Ref<_206a20e79_SymbolBuilder>);
inline std::tuple<jule::Ref<_206e66325_Package>,jule::Slice<_20377124e_Log>> _206c8d01a___analyze_package(jule::Slice<jule::Ref<_20521102d_Ast>>,jule::Trait<_206e66325_Importer>,jule::Int);
inline std::tuple<jule::Ref<_206e66325_Package>,jule::Slice<_20377124e_Log>> _206c8d01a_analyze_package(jule::Slice<jule::Ref<_20521102d_Ast>>,jule::Trait<_206e66325_Importer>,jule::Int);
inline std::tuple<jule::Ref<_1da2aa301_SymbolTable>,jule::Slice<_20377124e_Log>> _206c8d01a_analyze_file(jule::Ref<_20521102d_Ast>,jule::Trait<_206e66325_Importer>,jule::Int);
inline void _206c94dac_init(void);
inline jule::Ref<_2053ddd54_FnIns> _206c94dac_find_builtin_fn(jule::Str);
inline jule::Ref<_1da411226_TypeAlias> _206c94dac_find_builtin_type_alias(jule::Str);
inline jule::Ref<_2065895c5_Trait> _206c94dac_find_builtin_trait(jule::Str);
inline jule::Any _206c94dac_find_builtin_def(jule::Str);
inline jule::Any _206c94dac_find_builtin_def_std_mem(jule::Str);
inline jule::Any _206c94dac_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _206c94dac_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_common_plain(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_common(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_common_mut(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_out(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_outln(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_new(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_real(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_drop(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_panic(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_make(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_append(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_copy(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_recover(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_clone(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_std_mem_size_of(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_std_mem_align_of(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_std_jule_integrated_to_str(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>);
inline std::tuple<jule::Bool,jule::Bool> _204b7a5ad_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _204b7a5ad_check_arch(jule::Str);
inline jule::Bool _204b7a5ad_is_pass_file_annotation(jule::Str);
inline jule::Bool _204ae7b9b_eval_directive_ident(jule::Str);
inline jule::Bool _204ae7b9b_eval_directive_part(jule::Str);
inline jule::Slice<jule::Str> _204ae7b9b_split_operans(jule::Str,jule::Str);
inline jule::Bool _204ae7b9b_eval_directive_expr(jule::Str);
inline void _204b8e12c_set_os_flags(void);
inline void _204b8e12c_set_arch_flags(void);
inline void _204b8e12c_init_flags(void);
inline void _204dc9ec2_exit_err(jule::Str);
inline jule::Slice<jule::U8> _204dc9ec2_read_buff(jule::Str);
inline _20377124e_Log _204dc9ec2_flat_compiler_err(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_20522b4aa_DirEntry>>,jule::Str> _204dc9ec2_read_package_dirents(jule::Str);
inline jule::Str _204dc9ec2_concat_all_parts(jule::Slice<jule::Str>);
inline jule::Bool _204dc9ec2_is_pass_build_directives(jule::Ref<_20521102d_Ast>&);
inline void _204a33ac6_push_passes(jule::Ref<_206e66325_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _204a33ac6_get_all_unique_passes(jule::Ref<_206e66325_Package>&,jule::Slice<jule::Ref<_206e66325_ImportInfo>>);
inline jule::Bool _20382b5b2_is_exist_0(jule::Slice<jule::Any>,jule::Ref<_2053ddd54_FnIns>);
inline jule::Bool _20382b5b2_is_exist_1(jule::Slice<jule::Any>,jule::Ref<_1d9e22661_Var>);
inline jule::Bool _20382b5b2_is_exist_2(jule::Slice<jule::Any>,jule::Ref<_2053cdc01_StructIns>);
inline jule::Bool _20382b5b2_is_exist_3(jule::Slice<jule::Any>,jule::Ref<_2065895c5_Trait>);
inline jule::Bool _20382b5b2_is_exist_ref(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _20382b5b2_is_dead(jule::Any);
inline void _20382b5b2_drop_ref(jule::Slice<jule::Any>&,jule::Int);
inline jule::Bool _20382b5b2_is_all_references_are_dead_0(jule::Ref<_206a20e79_ReferenceStack>);
inline jule::Bool _20382b5b2_is_all_references_are_dead_1(jule::Ref<_206a20e79_ReferenceStack>);
inline jule::Bool _20382b5b2_is_all_references_are_dead_2(jule::Ref<_206a20e79_ReferenceStack>);
inline jule::Bool _20382b5b2_is_fn_dead(jule::Ref<_2053ddd54_FnIns>);
inline jule::Bool _20382b5b2_is_var_dead(jule::Ref<_1d9e22661_Var>);
inline jule::Bool _20382b5b2_kind_is_dead(jule::Ref<_1da411226_TypeKind>);
inline jule::Bool _20382b5b2_is_any_generic_is_dead(jule::Slice<jule::Ref<_1da411226_TypeKind>>&);
inline jule::Bool _20382b5b2_is_struct_dead(jule::Ref<_2053cdc01_StructIns>);
inline jule::Bool _20382b5b2_is_trait_dead(jule::Ref<_2065895c5_Trait>);
inline void _20382b5b2_eliminate_dead_functions(jule::Slice<jule::Ref<_2053ddd54_Fn>>&);
inline void _20382b5b2_eliminate_dead_globals(jule::Ref<_206e66325_Package>&);
inline void _20382b5b2_eliminate_dead_functions_package(jule::Ref<_206e66325_Package>&);
inline void _20382b5b2_eliminate_dead_structs(jule::Ref<_206e66325_Package>&);
inline void _20382b5b2_eliminate_dead_traits(jule::Ref<_206e66325_Package>&);
inline void _20382b5b2_catch_alive_init(jule::Ref<_206e66325_Package>&);
inline void _20382b5b2_eliminate_package(jule::Ref<_206e66325_Package>&);
inline void _20382b5b2_eliminate(jule::Ref<_204a33ac6_IR>&);
inline void _20385a2c2_eliminate_dead_code_of_scope(jule::Ref<_206b0557a_Scope>);
inline jule::Str _2049ab4bb_gen_if(jule::Ref<_206b0557a_If>);
inline jule::Str _2049ab4bb_gen_conditional(jule::Ref<_206b0557a_Conditional>);
inline jule::Str _2049ab4bb_gen_inf_iter(jule::Ref<_206b0557a_InfIter>);
inline jule::Str _2049ab4bb_gen_while_iter(jule::Ref<_206b0557a_WhileIter>);
inline jule::Trait<_2049ab4bb_RangeSetter> _2049ab4bb_get_range_setter(jule::Ref<_206b0557a_RangeIter>);
inline jule::Str _2049ab4bb_gen_range_iter(jule::Ref<_206b0557a_RangeIter>);
inline jule::Str _2049ab4bb_gen_cont(jule::Ref<_206b0557a_ContSt>);
inline jule::Str _2049ab4bb_gen_label(jule::Ref<_206b0557a_Label>);
inline jule::Str _2049ab4bb_gen_goto(jule::Ref<_206b0557a_GotoSt>);
inline jule::Str _2049ab4bb_gen_postfix(jule::Ref<_206b0557a_Postfix>);
inline jule::Str _2049ab4bb_gen_div_by_zero_assign(jule::Ref<_206b0557a_Assign>);
inline jule::Str _2049ab4bb_gen_assign(jule::Ref<_206b0557a_Assign>);
inline jule::Str _2049ab4bb_gen_multi_assign(jule::Ref<_206b0557a_MultiAssign>);
inline jule::Str _2049ab4bb_gen_case(jule::Ref<_206b0557a_Match>,jule::Ref<_206b0557a_Case>);
inline jule::Str _2049ab4bb_gen_match(jule::Ref<_206b0557a_Match>);
inline jule::Str _2049ab4bb_gen_fall_st(jule::Ref<_206b0557a_FallSt>);
inline jule::Str _2049ab4bb_gen_break_st(jule::Ref<_206b0557a_BreakSt>);
inline jule::Str _2049ab4bb_gen_ret_vars(jule::Ref<_206b0557a_RetSt>);
inline jule::Str _2049ab4bb_gen_ret_expr_tuple(jule::Ref<_206b0557a_RetSt>);
inline jule::Str _2049ab4bb_gen_ret_expr(jule::Ref<_206b0557a_RetSt>);
inline jule::Str _2049ab4bb_gen_ret_st(jule::Ref<_206b0557a_RetSt>);
inline jule::Str _2049ab4bb_gen_ret_st_with_defaults(jule::Ref<_1da411226_TypeKind>);
inline jule::Str _2049ab4bb_gen_recover(jule::Ref<_206b0557a_Recover>);
inline jule::Str _2049ab4bb_gen_data_expr(jule::Ref<_1da2d3bdc_Data>);
inline jule::Str _2049ab4bb_gen_st(jule::Any);
inline jule::Str _2049ab4bb_gen_scope(jule::Ref<_206b0557a_Scope>);
inline jule::Str _2049ab4bb_gen_fn_scope(jule::Ref<_2053ddd54_FnIns>);
inline jule::Str _2049ab4bb_gen_method_scope(jule::Ref<_2053ddd54_FnIns>);
inline jule::Str _204b36833_concat_all_parts(jule::Slice<jule::Str>);
inline jule::Str _204b36833_get_accessor(jule::Ref<_1da411226_TypeKind>);
inline jule::Str _204b36833_decompose_common_esq(jule::U8);
inline jule::Str _204b36833_sbtoa(jule::U8);
inline jule::Str _204b36833_get_str_model(jule::Ref<_1a89ca987_Const>);
inline jule::Str _204b36833_get_bool_model(jule::Ref<_1a89ca987_Const>);
inline jule::Str _204b36833_get_nil_model(void);
inline jule::Str _204b36833_gen_float_special_cases(jule::F64);
inline jule::Str _204b36833_ftoa(jule::F64,jule::Int);
inline jule::Str _204b36833_get_f32_model(jule::Ref<_1a89ca987_Const>);
inline jule::Str _204b36833_get_f64_model(jule::Ref<_1a89ca987_Const>);
inline jule::Str _204b36833_get_float_model(jule::Ref<_1da2d3bdc_Data>);
inline jule::Str _204b36833_i64toa(jule::I64);
inline jule::Str _204b36833_get_i64_model(jule::Ref<_1a89ca987_Const>);
inline jule::Str _204b36833_u64toa(jule::U64);
inline jule::Str _204b36833_get_u64_model(jule::Ref<_1a89ca987_Const>);
inline jule::Str _204b36833_gen_const_expr(jule::Ref<_1da2d3bdc_Data>);
inline jule::Str _204b36833_gen_const_expr_model(jule::Ref<_1a89ca987_Const>);
inline jule::Str _204b36833_gen_div_by_zero_binop_expr_model(jule::Str,jule::Any,jule::Any);
inline jule::Str _204b36833_gen_binop_expr_model(jule::Ref<_206e63542_BinopExprModel>);
inline jule::Str _204b36833_gen_var_expr_model(jule::Ref<_1d9e22661_Var>);
inline jule::Str _204b36833_gen_struct_expr_model(jule::Ref<_2053cdc01_Struct>);
inline jule::Str _204b36833_gen_struct_ins_expr_model(jule::Ref<_2053cdc01_StructIns>);
inline jule::Str _204b36833_gen_unary_expr_model(jule::Ref<_206e63542_UnaryExprModel>);
inline jule::Str _204b36833_gen_get_ref_ptr_expr_model(jule::Ref<_206e63542_GetRefPtrExprModel>);
inline jule::Str _204b36833_gen_cpp_struct_lit_expr_model(jule::Ref<_206e63542_StructLitExprModel>);
inline jule::Str _204b36833_gen_struct_lit_expr_model(jule::Ref<_206e63542_StructLitExprModel>);
inline jule::Str _204b36833_gen_alloc_struct_lit_expr_model(jule::Ref<_206e63542_AllocStructLitExprModel>);
inline jule::Str _204b36833_gen_casting_expr_model(jule::Ref<_206e63542_CastingExprModel>);
inline jule::Str _204b36833_gen_arg_expr_models(jule::Slice<jule::Any>);
inline jule::Str _204b36833_gen_expr_model_for_call(jule::Any);
inline jule::Str _204b36833_gen_fn_call_expr_model(jule::Ref<_206e63542_FnCallExprModel>);
inline jule::Str _204b36833_gen_slice_expr_model(jule::Ref<_206e63542_SliceExprModel>);
inline jule::Str _204b36833_gen_indexing_expr_model(jule::Ref<_206e63542_IndexigExprModel>);
inline jule::Str _204b36833_gen_anon_fn_expr_model(jule::Ref<_206e63542_AnonFnExprModel>);
inline jule::Str _204b36833_gen_map_expr_model(jule::Ref<_206e63542_MapExprModel>);
inline jule::Str _204b36833_gen_slicing_expr_model(jule::Ref<_206e63542_SlicingExprModel>);
inline jule::Str _204b36833_gen_trait_sub_ident_expr_model(jule::Ref<_206e63542_TraitSubIdentExprModel>);
inline jule::Str _204b36833_gen_struct_sub_ident_expr_model(jule::Ref<_206e63542_StructSubIdentExprModel>);
inline jule::Str _204b36833_gen_common_ident_expr_model(jule::Ref<_206e63542_CommonIdentExprModel>);
inline jule::Str _204b36833_gen_common_sub_ident_expr_model(jule::Ref<_206e63542_CommonSubIdentExprModel>);
inline jule::Str _204b36833_gen_array_expr_model(jule::Ref<_206e63542_ArrayExprModel>);
inline jule::Str _204b36833_gen_fn_ins_expr_model_common(jule::Ref<_2053ddd54_FnIns>);
inline jule::Str _204b36833_gen_fn_ins_expr_model(jule::Ref<_2053ddd54_FnIns>);
inline jule::Str _204b36833_gen_tuple_expr_model(jule::Ref<_206e63542_TupleExprModel>);
inline jule::Str _204b36833_gen_builtin_new_call_expr_model(jule::Ref<_206e63542_BuiltinNewCallExprModel>);
inline jule::Str _204b36833_gen_builtin_out_call_expr_model(jule::Ref<_206e63542_BuiltinOutCallExprModel>);
inline jule::Str _204b36833_gen_builtin_outln_call_expr_model(jule::Ref<_206e63542_BuiltinOutlnCallExprModel>);
inline jule::Str _204b36833_gen_builtin_real_call_expr_model(jule::Ref<_206e63542_BuiltinRealCallExprModel>);
inline jule::Str _204b36833_gen_builtin_drop_call_expr_model(jule::Ref<_206e63542_BuiltinDropCallExprModel>);
inline jule::Str _204b36833_gen_builtin_panic_call_expr_model(jule::Ref<_206e63542_BuiltinPanicCallExprModel>);
inline jule::Str _204b36833_gen_builtin_make_call_expr_model(jule::Ref<_206e63542_BuiltinMakeCallExprModel>);
inline jule::Str _204b36833_gen_builtin_append_call_expr_model_assign_opt(jule::Bool,jule::Str&,jule::Ref<_1da411226_TypeKind>&,jule::Ref<_206e63542_SliceExprModel>&,jule::Ref<_206e63542_BuiltinAppendCallExprModel>&);
inline std::tuple<jule::Str,jule::Bool> _204b36833_gen_builtin_append_call_expr_model_assign(jule::Any,jule::Ref<_206e63542_BuiltinAppendCallExprModel>);
inline jule::Str _204b36833_gen_builtin_append_call_expr_model(jule::Ref<_206e63542_BuiltinAppendCallExprModel>);
inline jule::Str _204b36833_gen_builtin_clone_call_expr_model(jule::Ref<_206e63542_BuiltinCloneCallExprModel>);
inline jule::Str _204b36833_gen_sizeof_expr_model(jule::Ref<_206e63542_SizeofExprModel>);
inline jule::Str _204b36833_gen_alignof_expr_model(jule::Ref<_206e63542_AlignofExprModel>);
inline jule::Str _204b36833_gen_rune_expr_model(jule::Ref<_206e63542_RuneExprModel>);
inline jule::Str _204b36833_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_206e63542_BuiltinErrorTraitSubIdentExprModel>);
inline jule::Str _204b36833_gen_explicit_deref_expr_model(jule::Ref<_206e63542_ExplicitDerefExprModel>);
inline jule::Str _204b36833_gen_struct_static_ident_expr_model(jule::Ref<_206e63542_StructStaticIdentExprModel>);
inline jule::Str _204b36833_gen_integrated_to_str_expr_model(jule::Ref<_206e63542_IntegratedToStrExprModel>);
inline jule::Str _204b36833_gen_expr_model(jule::Any);
inline jule::Str _204b36833_gen_expr(jule::Any);
inline jule::Str _204b36833_gen_val(jule::Ref<_1da2d3bdc_Value>);
inline jule::Str _204b36833_get_init_expr(jule::Ref<_1da411226_TypeKind>);
inline jule::Str _1a8a513e2_get_derive_fn_decl_clone(jule::Ref<_2053cdc01_Struct>&);
inline jule::Str _1a8a513e2_get_derive_fn_def_clone(jule::Ref<_2053cdc01_Struct>&);
inline jule::Str _1a8e524c4_as_ident(jule::Str);
inline jule::Str _1a8e524c4_as_jt(jule::Str);
inline jule::Str _1a8e524c4_get_addr_as_ident(jule::Uintptr);
inline jule::Str _1a8e524c4_as_out_ident(jule::Str,jule::Uintptr);
inline jule::Str _1a8e524c4_as_local_ident(jule::Int,jule::Int,jule::Str);
inline jule::Str _1a8e524c4_fn_out_ident(jule::Ref<_2053ddd54_Fn>&);
inline jule::Str _1a8e524c4_fn_ins_out_ident(jule::Ref<_2053ddd54_FnIns>&);
inline jule::Str _1a8e524c4_trait_out_ident(jule::Ref<_2065895c5_Trait>);
inline jule::Str _1a8e524c4_param_out_ident(jule::Ref<_2053ddd54_Param>&);
inline jule::Str _1a8e524c4_struct_out_ident(jule::Ref<_2053cdc01_Struct>&);
inline jule::Str _1a8e524c4_struct_ins_out_ident(jule::Ref<_2053cdc01_StructIns>&);
inline jule::Str _1a8e524c4_field_out_ident(jule::Ref<_2053cdc01_Field>&);
inline jule::Str _1a8e524c4_var_out_ident(jule::Ref<_1d9e22661_Var>);
inline jule::Str _1a8e524c4_iter_begin_label_ident(jule::Uintptr);
inline jule::Str _1a8e524c4_iter_end_label_ident(jule::Uintptr);
inline jule::Str _1a8e524c4_iter_next_label_ident(jule::Uintptr);
inline jule::Str _1a8e524c4_label_ident(jule::Str);
inline jule::Str _1a8e524c4_match_end_label_ident(jule::Uintptr);
inline jule::Str _1a8e524c4_case_begin_label_ident(jule::Uintptr);
inline jule::Str _1a8e524c4_case_end_label_ident(jule::Uintptr);
inline jule::Bool _1a8e8c223_any_equals_0(jule::Ref<_1d9e22661_Var>&,jule::Any&);
inline jule::Bool _1a8e8c223_any_equals_1(jule::Ref<_2053cdc01_FieldIns>&,jule::Any&);
inline jule::Ref<_2053703bd_Directive> _1a8e8c223_find_directive(jule::Slice<jule::Ref<_2053703bd_Directive>>&,jule::Str);
inline jule::Bool _1a8e8c223_has_directive(jule::Slice<jule::Ref<_2053703bd_Directive>>&,jule::Str);
inline jule::Str _1a8e8c223_gen_prim_kind(jule::Ref<_1da411226_Prim>);
inline jule::Str _1a8e8c223_gen_tuple_kind(jule::Ref<_1da411226_Tuple>);
inline jule::Str _1a8e8c223_as_ref_kind(jule::Str);
inline jule::Str _1a8e8c223_gen_ref_kind(jule::Ref<_1da411226_Ref>);
inline jule::Str _1a8e8c223_gen_ptr_kind(jule::Ref<_1da411226_Ptr>);
inline jule::Str _1a8e8c223_gen_enum_kind(jule::Ref<_206b06c0d_Enum>);
inline jule::Str _1a8e8c223_as_slice_kind(jule::Ref<_1da411226_TypeKind>);
inline jule::Str _1a8e8c223_gen_slice_kind(jule::Ref<_1da411226_Slc>);
inline jule::Str _1a8e8c223_gen_map_kind(jule::Ref<_1da411226_Map>);
inline jule::Str _1a8e8c223_gen_trait_kind_from_ident(jule::Str);
inline jule::Str _1a8e8c223_gen_trait_kind(jule::Ref<_2065895c5_Trait>);
inline jule::Str _1a8e8c223_gen_struct_kind(jule::Ref<_2053cdc01_Struct>);
inline jule::Str _1a8e8c223_gen_struct_kind_ins(jule::Ref<_2053cdc01_StructIns>);
inline jule::Str _1a8e8c223_gen_array_kind(jule::Ref<_1da411226_Arr>);
inline jule::Str _1a8e8c223_gen_fn_anon_decl(jule::Ref<_2053ddd54_FnIns>);
inline jule::Str _1a8e8c223_gen_fn_kind(jule::Ref<_2053ddd54_FnIns>);
inline jule::Str _1a8e8c223_gen_type_kind(jule::Ref<_1da411226_TypeKind>);
inline void _1a8e8cc29_add_indent(void);
inline void _1a8e8cc29_done_indent(void);
inline jule::Str _1a8e8cc29_indent(void);
inline jule::Bool _1a8e8cc29_is_cpp_header_file(jule::Str);
inline jule::Str _1a8e8cc29_gen_links(jule::Ref<_204a33ac6_IR>&);
inline jule::Str _1a8e8cc29_gen_fn_result(jule::Ref<_2053ddd54_Fn>&);
inline jule::Str _1a8e8cc29_gen_fn_ins_result(jule::Ref<_2053ddd54_FnIns>&);
inline jule::Str _1a8e8cc29_gen_param_prototype(jule::Ref<_2053ddd54_Param>&);
inline jule::Str _1a8e8cc29_gen_param_ins(jule::Ref<_2053ddd54_ParamIns>&);
inline jule::Str _1a8e8cc29_gen_param_ins_prototype(jule::Ref<_2053ddd54_ParamIns>&);
inline jule::Str _1a8e8cc29_gen_param(jule::Ref<_2053ddd54_Param>&);
inline jule::Str _1a8e8cc29_gen_params(jule::Slice<jule::Ref<_2053ddd54_Param>>&);
inline jule::Str _1a8e8cc29_gen_params_ins(jule::Slice<jule::Ref<_2053ddd54_ParamIns>>&);
inline jule::Str _1a8e8cc29_gen_params_prototypes(jule::Slice<jule::Ref<_2053ddd54_ParamIns>>&);
inline jule::Str _1a8e8cc29_gen_trait(jule::Ref<_2065895c5_Trait>&);
inline jule::Str _1a8e8cc29_gen_traits_tbl(jule::Ref<_1da2aa301_SymbolTable>&);
inline jule::Str _1a8e8cc29_gen_traits_pkg(jule::Ref<_206e66325_Package>&);
inline jule::Str _1a8e8cc29_gen_traits(jule::Ref<_204a33ac6_IR>&);
inline jule::Str _1a8e8cc29_gen_trait_prototype(jule::Ref<_2065895c5_Trait>&);
inline jule::Str _1a8e8cc29_gen_trait_prototypes(jule::Ref<_206e66325_Package>&);
inline jule::Str _1a8e8cc29_gen_struct_plain_prototype(jule::Ref<_2053cdc01_Struct>&);
inline jule::Str _1a8e8cc29_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_2053cdc01_Struct>>&);
inline jule::Str _1a8e8cc29_gen_struct_traits(jule::Ref<_2053cdc01_Struct>&);
inline jule::Str _1a8e8cc29_gen_field_decl(jule::Ref<_2053cdc01_FieldIns>&);
inline jule::Str _1a8e8cc29_gen_struct_self_field_type_kind(jule::Ref<_2053cdc01_StructIns>&);
inline jule::Str _1a8e8cc29_gen_struct_self_field(jule::Ref<_2053cdc01_StructIns>&);
inline jule::Str _1a8e8cc29_gen_struct_self_field_init_st(jule::Ref<_2053cdc01_StructIns>&);
inline jule::Str _1a8e8cc29_gen_struct_constructor(jule::Ref<_2053cdc01_StructIns>&);
inline jule::Str _1a8e8cc29_gen_struct_destructor(jule::Ref<_2053cdc01_StructIns>&);
inline jule::Str _1a8e8cc29_gen_struct_operators(jule::Ref<_2053cdc01_StructIns>&);
inline jule::Str _1a8e8cc29_gen_struct_derive_defs_prototypes(jule::Ref<_2053cdc01_StructIns>&);
inline jule::Str _1a8e8cc29_gen_struct_ins_prototype(jule::Ref<_2053cdc01_StructIns>&);
inline jule::Str _1a8e8cc29_gen_struct_prototype(jule::Ref<_2053cdc01_Struct>&);
inline jule::Str _1a8e8cc29_gen_struct_prototypes(jule::Slice<jule::Ref<_2053cdc01_Struct>>&);
inline jule::Str _1a8e8cc29_gen_fn_decl_head(jule::Ref<_2053ddd54_FnIns>&,jule::Bool);
inline jule::Str _1a8e8cc29_gen_fn_prototype(jule::Ref<_2053ddd54_Fn>&,jule::Bool);
inline jule::Str _1a8e8cc29_gen_fn_prototypes(jule::Ref<_206e66325_Package>&);
inline jule::Str _1a8e8cc29_gen_prototypes(jule::Ref<_204a33ac6_IR>&);
inline jule::Str _1a8e8cc29_gen_var_init_expr(jule::Ref<_1d9e22661_Var>&,jule::Str);
inline jule::Str _1a8e8cc29_gen_var(jule::Ref<_1d9e22661_Var>);
inline jule::Str _1a8e8cc29_gen_globals(jule::Slice<jule::Ref<_1d9e22661_Var>>&);
inline jule::Str _1a8e8cc29_gen_fn(jule::Ref<_2053ddd54_Fn>&);
inline jule::Str _1a8e8cc29_gen_pkg_fns(jule::Ref<_206e66325_Package>&);
inline jule::Str _1a8e8cc29_gen_struct_method_defs(jule::Ref<_2053cdc01_StructIns>&);
inline jule::Str _1a8e8cc29_gen_struct_ostream(jule::Ref<_2053cdc01_StructIns>&);
inline jule::Str _1a8e8cc29_gen_struct_derive_defs(jule::Ref<_2053cdc01_StructIns>&);
inline jule::Str _1a8e8cc29_gen_struct_ins(jule::Ref<_2053cdc01_StructIns>&);
inline jule::Str _1a8e8cc29_gen_struct(jule::Ref<_2053cdc01_Struct>&);
inline jule::Str _1a8e8cc29_gen_structs(jule::Slice<jule::Ref<_2053cdc01_Struct>>&);
inline jule::Str _1a8e8cc29_gen_fns(jule::Ref<_204a33ac6_IR>&);
inline void _1a8e8cc29_push_init(jule::Ref<_206e66325_Package>&,jule::Str&);
inline jule::Str _1a8e8cc29_gen_init_caller(jule::Ref<_204a33ac6_IR>&);
inline void _1a8e8cc29_append_standard(jule::Str&,jule::Str,jule::Str);
inline jule::Str _1a8e8cc29_gen(jule::Ref<_204a33ac6_IR>&);
inline jule::Str _20373171a_str_repeat(jule::Str,jule::Int);
inline void _20373171a_print_error_message(jule::Str);
inline void _20373171a_help(void);
inline void _20373171a_version(void);
inline void _20373171a_tool_distos(void);
inline void _20373171a_tool_distarch(void);
inline void _20373171a_tool(void);
inline void _20373171a_julenv(void);
inline jule::Bool _20373171a_process_command(void);
inline void _20373171a_exit_err(jule::Str);
void entry_point(void);
inline void _2037315e9___init_common(void);
inline void _203771628_init(void);
inline jule::Int _2037747c4_system(jule::Str);
inline std::tuple<jule::Str,jule::Str> _2037747c4_get_option(jule::Slice<jule::Str>&,jule::Int&);
inline jule::Str _2037747c4_get_option_value(jule::Slice<jule::Str>&,jule::Int&);
inline void _2037747c4_parse_out_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _2037747c4_parse_opt_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _2037747c4_check_target_arch(jule::Str);
inline void _2037747c4_check_target_os(jule::Str);
inline void _2037747c4_parse_target_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _2037747c4_parse_compiler_option(jule::Slice<jule::Str>&,jule::Int&);
inline jule::Str _2037747c4_parse_options(jule::Slice<jule::Str>&);
inline void _2037747c4_write_output(jule::Str,jule::Str);
inline void _2037747c4_clear_objects(void);
inline void _2037747c4_compile_ir(jule::Str,jule::Str);
inline void _2037747c4_do_spell(jule::Str,jule::Str,jule::Str);
inline void _2037747c4_check_mode(void);
inline void _2037747c4_check_compiler(void);
inline void _2037747c4_set(void);
inline jule::Bool _2037747c4_is_cpp_source_file(jule::Str);
inline std::tuple<jule::Str,jule::Str> _2037747c4_gen_compile_cmd(jule::Str,jule::Ref<_204a33ac6_IR>&);
inline jule::Str _2037747c4_get_compile_path(void);
inline void _2037747c4_apply_target_independent_optimizations(jule::Ref<_204a33ac6_IR>&);
inline void _2037747c4_compile_command(void);


static jule::Array<jule::Array<jule::Str,2>,4> _20373171a_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,4>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)})});
static jule::Str _2037747c4_COMPILER = jule::Str("", 0);
static jule::Str _2037747c4_COMPILER_PATH = jule::Str("", 0);
static jule::Str _2037747c4_OUT_DIR = jule::Str("dist", 4);
static jule::Int _2037747c4_MODE = 0LLU;
static jule::Str _2037747c4_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Str _2037747c4_OUT = jule::Str("", 0);
static jule::Str _2037747c4_CPP_STD = jule::Str("c++17", 5);
static jule::Int _2037747c4_SEMA_FLAGS = 0LL;
static jule::Uintptr _203935853_STDIN = 0LL;
static jule::Uintptr _203935853_STDOUT = 1LL;
static jule::Uintptr _203935853_STDERR = 2LL;
static jule::Slice<jule::Str> _20391c818_ARGS = nullptr;
static jule::Slice<jule::Str> _20391c818_ENV = nullptr;
static jule::Array<jule::Str,4> _2037761bb_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _2037761bb_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _2037761bb_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Array<jule::Str,6> _2037d887c_DIRECTIVES = jule::Array<jule::Str,6>({jule::Str("cdef", 4),jule::Str("typedef", 7),jule::Str("derive", 6),jule::Str("pass", 4),jule::Str("build", 5),jule::Str("namespace", 9)});
static jule::Array<jule::Str,3> _2037d86a1_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,3> _2037d86a1_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _203845d29_PATH_STDLIB = jule::Str("", 0);
static jule::Str _203845d29_PATH_EXEC = jule::Str("", 0);
static jule::Str _203845d29_PATH_WD = jule::Str("", 0);
static jule::Str _203845d29_PATH_API = jule::Str("", 0);
static jule::Array<jule::U8,32> _20525c51e_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _20525c51e_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static jule::Trait<jule::Error> _20532e338_OVERFLOW_ERROR = jule::new_struct<_20532e338_bits_error>(new( std::nothrow ) _20532e338_bits_error(jule::Str("integer overflow", 16)));
static jule::Trait<jule::Error> _20532e338_DIVIDE_ERROR = jule::new_struct<_20532e338_bits_error>(new( std::nothrow ) _20532e338_bits_error(jule::Str("integer divide by zero", 22)));
static jule::Array<jule::F64,6> _204a2e5b6__SIN = jule::Array<jule::F64,6>({0.00000000015896230157654656,-0.000000025050747762857807,0.0000027557313621385722,-0.0001984126982958954,0.008333333333322118,-0.1666666666666663});
static jule::Array<jule::F64,6> _204a2e5b6__COS = jule::Array<jule::F64,6>({-0.000000000011358536521387682,0.000000002087570084197473,-0.0000002755731417929674,0.000024801587288851704,-0.0013888888888873056,0.041666666666666595});
static jule::Array<jule::F64,3> _204a2e7c5__TAN_P = jule::Array<jule::F64,3>({-13093.693918138379,1153516.6483858742,-17956525.197648488});
static jule::Array<jule::F64,5> _204a2e7c5__TAN_Q = jule::Array<jule::F64,5>({1LL,13681.296347069296,-1320892.3444021097,25008380.18233579,-53869575.592945464});
static jule::Array<jule::U64,20> _204a322ab_M_PI4 = jule::Array<jule::U64,20>({1LLU,5040379952546458195LLU,17892431488136887169LLU,13169980181085364355LLU,18204331823439776451LLU,7946843935494350272LLU,905889640498799673LLU,18175356263134875261LLU,15061281708168349961LLU,15220161563773041794LLU,8296664548579374057LLU,4109744767560208502LLU,4607516669194743839LLU,16023283104648321598LLU,15739233654134936430LLU,11424645774684705882LLU,16883842788696515318LLU,8795094592981902804LLU,15561835991111744016LLU,12395701187267450711LLU});
static jule::Array<jule::F64,6> _204bc0e1c_P_1R8 = jule::Array<jule::F64,6>({0LL,0.11718749999998865,13.239480659307358,412.05185430737856,3874.7453891396053,7914.479540318917});
static jule::Array<jule::F64,5> _204bc0e1c_P_1S8 = jule::Array<jule::F64,5>({114.20737037567841,3650.9308342085346,36956.206026903346,97602.79359349508,30804.27206278888});
static jule::Array<jule::F64,6> _204bc0e1c_P_1R5 = jule::Array<jule::F64,6>({0.000000000013199051955624352,0.1171874931906141,6.802751278684329,108.30818299018911,517.6361395331998,528.7152013633375});
static jule::Array<jule::F64,5> _204bc0e1c_P_1S5 = jule::Array<jule::F64,5>({59.28059872211313,991.4014187336144,5353.26695291488,7844.690317495512,1504.0468881036106});
static jule::Array<jule::F64,6> _204bc0e1c_P_1R3 = jule::Array<jule::F64,6>({0.000000003025039161373736,0.11718686556725359,3.9329775003331564,35.11940355916369,91.05501107507813,48.55906851973649});
static jule::Array<jule::F64,5> _204bc0e1c_P_1S3 = jule::Array<jule::F64,5>({34.79130950012515,336.76245874782575,1046.8713997577513,890.8113463982564,103.78793243963928});
static jule::Array<jule::F64,6> _204bc0e1c_P_1R2 = jule::Array<jule::F64,6>({0.00000010771083010687374,0.11717621946268335,2.368514966676088,12.242610914826123,17.693971127168773,5.073523125888185});
static jule::Array<jule::F64,5> _204bc0e1c_P_1S2 = jule::Array<jule::F64,5>({21.43648593638214,125.29022716840275,232.2764690571628,117.6793732871471,8.364638933716183});
static jule::Array<jule::F64,6> _204bc0e1c_Q_1R8 = jule::Array<jule::F64,6>({0LL,-0.10253906249999271,-16.271753454459,-759.6017225139501,-11849.806670242959,-48438.512428575035});
static jule::Array<jule::F64,6> _204bc0e1c_Q_1S8 = jule::Array<jule::F64,6>({161.3953697007229,7825.385999233485,133875.33628724958,719657.7236832409,666601.2326177764,-294490.26430383464});
static jule::Array<jule::F64,6> _204bc0e1c_Q_1R5 = jule::Array<jule::F64,6>({-0.00000000002089799311417641,-0.10253905024137543,-8.05644828123936,-183.66960747488838,-1373.1937606550816,-2612.4444045321566});
static jule::Array<jule::F64,6> _204bc0e1c_Q_1S5 = jule::Array<jule::F64,6>({81.27655013843358,1991.7987346048596,17468.48519249089,49851.42709103523,27948.075163891812,-4719.183547951285});
static jule::Array<jule::F64,6> _204bc0e1c_Q_1R3 = jule::Array<jule::F64,6>({-0.000000005078312264617666,-0.10253782982083709,-4.610115811394734,-57.847221656278364,-228.2445407376317,-219.21012847890933});
static jule::Array<jule::F64,6> _204bc0e1c_Q_1S3 = jule::Array<jule::F64,6>({47.66515503237295,673.8651126766997,3380.1528667952634,5547.729097207228,1903.119193388108,-135.20119144430734});
static jule::Array<jule::F64,6> _204bc0e1c_Q_1R2 = jule::Array<jule::F64,6>({-0.00000017838172751095887,-0.10251704260798555,-2.7522056827818746,-19.663616264370372,-42.32531333728305,-21.371921170370406});
static jule::Array<jule::F64,6> _204bc0e1c_Q_1S2 = jule::Array<jule::F64,6>({29.533362906052385,252.98154998219053,757.5028348686454,739.3932053204672,155.94900333666612,-4.959498988226282});
static jule::Array<jule::F64,6> _204cae0b5_P_0R8 = jule::Array<jule::F64,6>({0LL,-0.07031249999999004,-8.081670412753498,-257.06310567970485,-2485.216410094288,-5253.043804907295});
static jule::Array<jule::F64,5> _204cae0b5_P_0S8 = jule::Array<jule::F64,5>({116.53436461966818,3833.7447536412183,40597.857264847255,116752.97256437592,47627.728414673096});
static jule::Array<jule::F64,6> _204cae0b5_P_0R5 = jule::Array<jule::F64,6>({-0.00000000001141254646918945,-0.07031249408735993,-4.159610644705878,-67.67476522651673,-331.23129964917297,-346.4333883656049});
static jule::Array<jule::F64,5> _204cae0b5_P_0S5 = jule::Array<jule::F64,5>({60.753938269230034,1051.2523059570458,5978.970943338558,9625.445143577745,2406.058159229391});
static jule::Array<jule::F64,6> _204cae0b5_P_0R3 = jule::Array<jule::F64,6>({-0.000000002547046017719519,-0.07031196163814817,-2.409032215495296,-21.96597747348831,-58.07917047017376,-31.44794705948885});
static jule::Array<jule::F64,5> _204cae0b5_P_0S3 = jule::Array<jule::F64,5>({35.85603380552097,361.51398305030386,1193.6078379211153,1127.9967985690741,173.58093081333575});
static jule::Array<jule::F64,6> _204cae0b5_P_0R2 = jule::Array<jule::F64,6>({-0.00000008875343330325264,-0.07030309954836247,-1.4507384678095299,-7.635696138235278,-11.193166886035675,-3.2336457935133534});
static jule::Array<jule::F64,5> _204cae0b5_P_0S2 = jule::Array<jule::F64,5>({22.22029975320888,136.2067942182152,270.4702786580835,153.87539420832033,14.65761769482562});
static jule::Array<jule::F64,6> _204cae0b5_Q_0R8 = jule::Array<jule::F64,6>({0LL,0.0732421874999935,11.76820646822527,557.6733802564019,8859.197207564686,37014.62677768878});
static jule::Array<jule::F64,6> _204cae0b5_Q_0S8 = jule::Array<jule::F64,6>({163.77602689568982,8098.344946564498,142538.29141912048,803309.2571195144,840501.5798190605,-343899.2935378666});
static jule::Array<jule::F64,6> _204cae0b5_Q_0R5 = jule::Array<jule::F64,6>({0.000000000018408596359451553,0.07324217666126848,5.8356350896205695,135.11157728644983,1027.243765961641,1989.9778586460538});
static jule::Array<jule::F64,6> _204cae0b5_Q_0S5 = jule::Array<jule::F64,6>({82.77661022365378,2077.81416421393,18847.28877857181,56751.11228949473,35976.75384251145,-5354.342756019448});
static jule::Array<jule::F64,6> _204cae0b5_Q_0R3 = jule::Array<jule::F64,6>({0.000000004377410140897386,0.07324111800429114,3.344231375161707,42.621844074541265,170.8080913405656,166.73394869665117});
static jule::Array<jule::F64,6> _204cae0b5_Q_0S3 = jule::Array<jule::F64,6>({48.75887297245872,709.689221056606,3704.1482262011136,6460.425167525689,2516.3336892036896,-149.2474518361564});
static jule::Array<jule::F64,6> _204cae0b5_Q_0R2 = jule::Array<jule::F64,6>({0.00000015044444488698327,0.07322342659630793,1.99819174093816,14.495602934788574,31.666231750478154,16.252707571092927});
static jule::Array<jule::F64,6> _204cae0b5_Q_0S2 = jule::Array<jule::F64,6>({30.36558483552192,269.34811860804984,844.7837575953201,882.9358451124886,212.66638851179883,-5.3109549388266695});
static jule::Array<jule::F64,12> _204da66b8__LGAM_A = jule::Array<jule::F64,12>({0.07721566490153287,0.3224670334241136,0.06735230105312927,0.020580808432516733,0.007385550860814029,0.0028905138367341563,0.0011927076318336207,0.0005100697921535113,0.00022086279071390839,0.00010801156724758394,0.000025214456545125733,0.000044864094961891516});
static jule::Array<jule::F64,7> _204da66b8__LGAM_R = jule::Array<jule::F64,7>({1LL,1.3920053346762105,0.7219355475671381,0.17193386563280308,0.01864591917156529,0.0007779424963818936,0.000007326684307446256});
static jule::Array<jule::F64,7> _204da66b8__LGAM_S = jule::Array<jule::F64,7>({-0.07721566490153287,0.21498241596060885,0.325778796408931,0.14635047265246445,0.02664227030336386,0.0018402845140733772,0.00003194753265841009});
static jule::Array<jule::F64,15> _204da66b8__LGAM_T = jule::Array<jule::F64,15>({0.48383612272381005,-0.1475877229945939,0.06462494023913339,-0.032788541075985965,0.01797067508118204,-0.010314224129834144,0.006100538702462913,-0.0036845201678113826,0.0022596478090061247,-0.0014034646998923284,0.000881081882437654,-0.0005385953053567405,0.00031563207090362595,-0.00031275416837512086,0.0003355291926355191});
static jule::Array<jule::F64,6> _204da66b8__LGAM_U = jule::Array<jule::F64,6>({-0.07721566490153287,0.6328270640250934,1.4549225013723477,0.9777175279633727,0.22896372806469245,0.013381091853678766});
static jule::Array<jule::F64,6> _204da66b8__LGAM_V = jule::Array<jule::F64,6>({1LL,2.4559779371304113,2.128489763798934,0.7692851504566728,0.10422264559336913,0.003217092422824239});
static jule::Array<jule::F64,7> _204da66b8__LGAM_W = jule::Array<jule::F64,7>({0.4189385332046727,0.08333333333333297,-0.0027777777772877554,0.0007936505586430196,-0.00059518755745034,0.0008363399189962821,-0.0016309293409657527});
static jule::Array<jule::F64,3> _204e49b79_TANH_P = jule::Array<jule::F64,3>({-0.9643991794250523,-99.28772310019185,-1614.6876844170845});
static jule::Array<jule::F64,3> _204e49b79_TANH_Q = jule::Array<jule::F64,3>({112.81167849163293,2235.4883906010045,4844.063053251255});
static jule::Array<jule::F64,7> _205003eec__GAM_P = jule::Array<jule::F64,7>({0.00016011952247675185,0.0011913514700658638,0.010421379756176158,0.04763678004571372,0.20744822764843598,0.4942148268014971,1LL});
static jule::Array<jule::F64,8> _205003eec__GAM_Q = jule::Array<jule::F64,8>({-0.000023158187332412014,0.0005396055804933034,-0.004456419138517973,0.011813978522206043,0.035823639860549865,-0.23459179571824335,0.0714304917030273,1LL});
static jule::Array<jule::F64,5> _205003eec__GAM_S = jule::Array<jule::F64,5>({0.0007873113957930937,-0.00022954996161337813,-0.0026813261780578124,0.0034722222160545866,0.08333333333334822});
static jule::Array<jule::F64,32> _205056879_POW10_TAB = jule::Array<jule::F64,32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0,100000000000000000000000.0,1000000000000000000000000.0,10000000000000000000000000.0,100000000000000000000000000.0,1000000000000000000000000000.0,10000000000000000000000000000.0,100000000000000000000000000000.0,1000000000000000000000000000000.0,10000000000000000000000000000000.0});
static jule::Array<jule::F64,10> _205056879_POW10_POSTAB32 = jule::Array<jule::F64,10>({1LL,100000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0});
static jule::Array<jule::F64,11> _205056879_POW10_NEGTAB32 = jule::Array<jule::F64,11>({1LL,0.00000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001});
static _203830374_FloatInfo _203830374_F32_INFO = _203830374_FloatInfo(23LLU,8LLU,-127LL);
static _203830374_FloatInfo _203830374_F64_INFO = _203830374_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _203842a5c_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _20384ee76_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _20384ee76_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
static jule::Slice<jule::F32> _20384ee76_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
static jule::Array<jule::U64,20> _2047bd4cb_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_2047bec19_LeftCheat> _2047bec19_LEFTCHEATS = jule::Slice<_2047bec19_LeftCheat>({_2047bec19_LeftCheat(0LL,jule::Str("", 0)),_2047bec19_LeftCheat(1LL,jule::Str("5", 1)),_2047bec19_LeftCheat(1LL,jule::Str("25", 2)),_2047bec19_LeftCheat(1LL,jule::Str("125", 3)),_2047bec19_LeftCheat(2LL,jule::Str("625", 3)),_2047bec19_LeftCheat(2LL,jule::Str("3125", 4)),_2047bec19_LeftCheat(2LL,jule::Str("15625", 5)),_2047bec19_LeftCheat(3LL,jule::Str("78125", 5)),_2047bec19_LeftCheat(3LL,jule::Str("390625", 6)),_2047bec19_LeftCheat(3LL,jule::Str("1953125", 7)),_2047bec19_LeftCheat(4LL,jule::Str("9765625", 7)),_2047bec19_LeftCheat(4LL,jule::Str("48828125", 8)),_2047bec19_LeftCheat(4LL,jule::Str("244140625", 9)),_2047bec19_LeftCheat(4LL,jule::Str("1220703125", 10)),_2047bec19_LeftCheat(5LL,jule::Str("6103515625", 10)),_2047bec19_LeftCheat(5LL,jule::Str("30517578125", 11)),_2047bec19_LeftCheat(5LL,jule::Str("152587890625", 12)),_2047bec19_LeftCheat(6LL,jule::Str("762939453125", 12)),_2047bec19_LeftCheat(6LL,jule::Str("3814697265625", 13)),_2047bec19_LeftCheat(6LL,jule::Str("19073486328125", 14)),_2047bec19_LeftCheat(7LL,jule::Str("95367431640625", 14)),_2047bec19_LeftCheat(7LL,jule::Str("476837158203125", 15)),_2047bec19_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_2047bec19_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_2047bec19_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_2047bec19_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_2047bec19_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_2047bec19_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_2047bec19_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_2047bec19_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_2047bec19_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_2047bec19_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_2047bec19_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_2047bec19_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_2047bec19_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_2047bec19_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_2047bec19_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_2047bec19_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_2047bec19_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_2047bec19_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_2047bec19_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_2047bec19_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_2047bec19_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_2047bec19_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_2047bec19_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_2047bec19_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_2047bec19_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_2047bec19_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_2047bec19_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_2047bec19_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_2047bec19_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_2047bec19_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_2047bec19_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_2047bec19_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_2047bec19_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_2047bec19_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_2047bec19_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_2047bec19_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_2047bec19_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_2047bec19_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_2047bec19_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Str _204e61a09_OS = jule::Str("linux", 5);
static jule::Str _204e61a09_ARCH = jule::Str("i386", 4);
static jule::Slice<jule::Str> _205094587_OPTIMIZATIONS = nullptr;
static jule::Ref<_20548c650_RangeTable> _20548cac3__C = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(0LLU,31LLU,1LLU),_20548c650_Range16(127LLU,159LLU,1LLU),_20548c650_Range16(173LLU,1536LLU,1363LLU),_20548c650_Range16(1537LLU,1541LLU,1LLU),_20548c650_Range16(1564LLU,1757LLU,193LLU),_20548c650_Range16(1807LLU,2192LLU,385LLU),_20548c650_Range16(2193LLU,2274LLU,81LLU),_20548c650_Range16(6158LLU,8203LLU,2045LLU),_20548c650_Range16(8204LLU,8207LLU,1LLU),_20548c650_Range16(8234LLU,8238LLU,1LLU),_20548c650_Range16(8288LLU,8292LLU,1LLU),_20548c650_Range16(8294LLU,8303LLU,1LLU),_20548c650_Range16(55296LLU,63743LLU,1LLU),_20548c650_Range16(65279LLU,65529LLU,250LLU),_20548c650_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69821LLU,69837LLU,16LLU),_20548c650_Range32(78896LLU,78911LLU,1LLU),_20548c650_Range32(113824LLU,113827LLU,1LLU),_20548c650_Range32(119155LLU,119162LLU,1LLU),_20548c650_Range32(917505LLU,917536LLU,31LLU),_20548c650_Range32(917537LLU,917631LLU,1LLU),_20548c650_Range32(983040LLU,1048573LLU,1LLU),_20548c650_Range32(1048576LLU,1114109LLU,1LLU)}),2LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(0LLU,31LLU,1LLU),_20548c650_Range16(127LLU,159LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),2LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CF = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(173LLU,1536LLU,1363LLU),_20548c650_Range16(1537LLU,1541LLU,1LLU),_20548c650_Range16(1564LLU,1757LLU,193LLU),_20548c650_Range16(1807LLU,2192LLU,385LLU),_20548c650_Range16(2193LLU,2274LLU,81LLU),_20548c650_Range16(6158LLU,8203LLU,2045LLU),_20548c650_Range16(8204LLU,8207LLU,1LLU),_20548c650_Range16(8234LLU,8238LLU,1LLU),_20548c650_Range16(8288LLU,8292LLU,1LLU),_20548c650_Range16(8294LLU,8303LLU,1LLU),_20548c650_Range16(65279LLU,65529LLU,250LLU),_20548c650_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69821LLU,69837LLU,16LLU),_20548c650_Range32(78896LLU,78911LLU,1LLU),_20548c650_Range32(113824LLU,113827LLU,1LLU),_20548c650_Range32(119155LLU,119162LLU,1LLU),_20548c650_Range32(917505LLU,917536LLU,31LLU),_20548c650_Range32(917537LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(57344LLU,63743LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(983040LLU,1048573LLU,1LLU),_20548c650_Range32(1048576LLU,1114109LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CS = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(55296LLU,57343LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__L = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(65LLU,90LLU,1LLU),_20548c650_Range16(97LLU,122LLU,1LLU),_20548c650_Range16(170LLU,181LLU,11LLU),_20548c650_Range16(186LLU,192LLU,6LLU),_20548c650_Range16(193LLU,214LLU,1LLU),_20548c650_Range16(216LLU,246LLU,1LLU),_20548c650_Range16(248LLU,705LLU,1LLU),_20548c650_Range16(710LLU,721LLU,1LLU),_20548c650_Range16(736LLU,740LLU,1LLU),_20548c650_Range16(748LLU,750LLU,2LLU),_20548c650_Range16(880LLU,884LLU,1LLU),_20548c650_Range16(886LLU,887LLU,1LLU),_20548c650_Range16(890LLU,893LLU,1LLU),_20548c650_Range16(895LLU,902LLU,7LLU),_20548c650_Range16(904LLU,906LLU,1LLU),_20548c650_Range16(908LLU,910LLU,2LLU),_20548c650_Range16(911LLU,929LLU,1LLU),_20548c650_Range16(931LLU,1013LLU,1LLU),_20548c650_Range16(1015LLU,1153LLU,1LLU),_20548c650_Range16(1162LLU,1327LLU,1LLU),_20548c650_Range16(1329LLU,1366LLU,1LLU),_20548c650_Range16(1369LLU,1376LLU,7LLU),_20548c650_Range16(1377LLU,1416LLU,1LLU),_20548c650_Range16(1488LLU,1514LLU,1LLU),_20548c650_Range16(1519LLU,1522LLU,1LLU),_20548c650_Range16(1568LLU,1610LLU,1LLU),_20548c650_Range16(1646LLU,1647LLU,1LLU),_20548c650_Range16(1649LLU,1747LLU,1LLU),_20548c650_Range16(1749LLU,1765LLU,16LLU),_20548c650_Range16(1766LLU,1774LLU,8LLU),_20548c650_Range16(1775LLU,1786LLU,11LLU),_20548c650_Range16(1787LLU,1788LLU,1LLU),_20548c650_Range16(1791LLU,1808LLU,17LLU),_20548c650_Range16(1810LLU,1839LLU,1LLU),_20548c650_Range16(1869LLU,1957LLU,1LLU),_20548c650_Range16(1969LLU,1994LLU,25LLU),_20548c650_Range16(1995LLU,2026LLU,1LLU),_20548c650_Range16(2036LLU,2037LLU,1LLU),_20548c650_Range16(2042LLU,2048LLU,6LLU),_20548c650_Range16(2049LLU,2069LLU,1LLU),_20548c650_Range16(2074LLU,2084LLU,10LLU),_20548c650_Range16(2088LLU,2112LLU,24LLU),_20548c650_Range16(2113LLU,2136LLU,1LLU),_20548c650_Range16(2144LLU,2154LLU,1LLU),_20548c650_Range16(2160LLU,2183LLU,1LLU),_20548c650_Range16(2185LLU,2190LLU,1LLU),_20548c650_Range16(2208LLU,2249LLU,1LLU),_20548c650_Range16(2308LLU,2361LLU,1LLU),_20548c650_Range16(2365LLU,2384LLU,19LLU),_20548c650_Range16(2392LLU,2401LLU,1LLU),_20548c650_Range16(2417LLU,2432LLU,1LLU),_20548c650_Range16(2437LLU,2444LLU,1LLU),_20548c650_Range16(2447LLU,2448LLU,1LLU),_20548c650_Range16(2451LLU,2472LLU,1LLU),_20548c650_Range16(2474LLU,2480LLU,1LLU),_20548c650_Range16(2482LLU,2486LLU,4LLU),_20548c650_Range16(2487LLU,2489LLU,1LLU),_20548c650_Range16(2493LLU,2510LLU,17LLU),_20548c650_Range16(2524LLU,2525LLU,1LLU),_20548c650_Range16(2527LLU,2529LLU,1LLU),_20548c650_Range16(2544LLU,2545LLU,1LLU),_20548c650_Range16(2556LLU,2565LLU,9LLU),_20548c650_Range16(2566LLU,2570LLU,1LLU),_20548c650_Range16(2575LLU,2576LLU,1LLU),_20548c650_Range16(2579LLU,2600LLU,1LLU),_20548c650_Range16(2602LLU,2608LLU,1LLU),_20548c650_Range16(2610LLU,2611LLU,1LLU),_20548c650_Range16(2613LLU,2614LLU,1LLU),_20548c650_Range16(2616LLU,2617LLU,1LLU),_20548c650_Range16(2649LLU,2652LLU,1LLU),_20548c650_Range16(2654LLU,2674LLU,20LLU),_20548c650_Range16(2675LLU,2676LLU,1LLU),_20548c650_Range16(2693LLU,2701LLU,1LLU),_20548c650_Range16(2703LLU,2705LLU,1LLU),_20548c650_Range16(2707LLU,2728LLU,1LLU),_20548c650_Range16(2730LLU,2736LLU,1LLU),_20548c650_Range16(2738LLU,2739LLU,1LLU),_20548c650_Range16(2741LLU,2745LLU,1LLU),_20548c650_Range16(2749LLU,2768LLU,19LLU),_20548c650_Range16(2784LLU,2785LLU,1LLU),_20548c650_Range16(2809LLU,2821LLU,12LLU),_20548c650_Range16(2822LLU,2828LLU,1LLU),_20548c650_Range16(2831LLU,2832LLU,1LLU),_20548c650_Range16(2835LLU,2856LLU,1LLU),_20548c650_Range16(2858LLU,2864LLU,1LLU),_20548c650_Range16(2866LLU,2867LLU,1LLU),_20548c650_Range16(2869LLU,2873LLU,1LLU),_20548c650_Range16(2877LLU,2908LLU,31LLU),_20548c650_Range16(2909LLU,2911LLU,2LLU),_20548c650_Range16(2912LLU,2913LLU,1LLU),_20548c650_Range16(2929LLU,2947LLU,18LLU),_20548c650_Range16(2949LLU,2954LLU,1LLU),_20548c650_Range16(2958LLU,2960LLU,1LLU),_20548c650_Range16(2962LLU,2965LLU,1LLU),_20548c650_Range16(2969LLU,2970LLU,1LLU),_20548c650_Range16(2972LLU,2974LLU,2LLU),_20548c650_Range16(2975LLU,2979LLU,4LLU),_20548c650_Range16(2980LLU,2984LLU,4LLU),_20548c650_Range16(2985LLU,2986LLU,1LLU),_20548c650_Range16(2990LLU,3001LLU,1LLU),_20548c650_Range16(3024LLU,3077LLU,53LLU),_20548c650_Range16(3078LLU,3084LLU,1LLU),_20548c650_Range16(3086LLU,3088LLU,1LLU),_20548c650_Range16(3090LLU,3112LLU,1LLU),_20548c650_Range16(3114LLU,3129LLU,1LLU),_20548c650_Range16(3133LLU,3160LLU,27LLU),_20548c650_Range16(3161LLU,3162LLU,1LLU),_20548c650_Range16(3165LLU,3168LLU,3LLU),_20548c650_Range16(3169LLU,3200LLU,31LLU),_20548c650_Range16(3205LLU,3212LLU,1LLU),_20548c650_Range16(3214LLU,3216LLU,1LLU),_20548c650_Range16(3218LLU,3240LLU,1LLU),_20548c650_Range16(3242LLU,3251LLU,1LLU),_20548c650_Range16(3253LLU,3257LLU,1LLU),_20548c650_Range16(3261LLU,3293LLU,32LLU),_20548c650_Range16(3294LLU,3296LLU,2LLU),_20548c650_Range16(3297LLU,3313LLU,16LLU),_20548c650_Range16(3314LLU,3332LLU,18LLU),_20548c650_Range16(3333LLU,3340LLU,1LLU),_20548c650_Range16(3342LLU,3344LLU,1LLU),_20548c650_Range16(3346LLU,3386LLU,1LLU),_20548c650_Range16(3389LLU,3406LLU,17LLU),_20548c650_Range16(3412LLU,3414LLU,1LLU),_20548c650_Range16(3423LLU,3425LLU,1LLU),_20548c650_Range16(3450LLU,3455LLU,1LLU),_20548c650_Range16(3461LLU,3478LLU,1LLU),_20548c650_Range16(3482LLU,3505LLU,1LLU),_20548c650_Range16(3507LLU,3515LLU,1LLU),_20548c650_Range16(3517LLU,3520LLU,3LLU),_20548c650_Range16(3521LLU,3526LLU,1LLU),_20548c650_Range16(3585LLU,3632LLU,1LLU),_20548c650_Range16(3634LLU,3635LLU,1LLU),_20548c650_Range16(3648LLU,3654LLU,1LLU),_20548c650_Range16(3713LLU,3714LLU,1LLU),_20548c650_Range16(3716LLU,3718LLU,2LLU),_20548c650_Range16(3719LLU,3722LLU,1LLU),_20548c650_Range16(3724LLU,3747LLU,1LLU),_20548c650_Range16(3749LLU,3751LLU,2LLU),_20548c650_Range16(3752LLU,3760LLU,1LLU),_20548c650_Range16(3762LLU,3763LLU,1LLU),_20548c650_Range16(3773LLU,3776LLU,3LLU),_20548c650_Range16(3777LLU,3780LLU,1LLU),_20548c650_Range16(3782LLU,3804LLU,22LLU),_20548c650_Range16(3805LLU,3807LLU,1LLU),_20548c650_Range16(3840LLU,3904LLU,64LLU),_20548c650_Range16(3905LLU,3911LLU,1LLU),_20548c650_Range16(3913LLU,3948LLU,1LLU),_20548c650_Range16(3976LLU,3980LLU,1LLU),_20548c650_Range16(4096LLU,4138LLU,1LLU),_20548c650_Range16(4159LLU,4176LLU,17LLU),_20548c650_Range16(4177LLU,4181LLU,1LLU),_20548c650_Range16(4186LLU,4189LLU,1LLU),_20548c650_Range16(4193LLU,4197LLU,4LLU),_20548c650_Range16(4198LLU,4206LLU,8LLU),_20548c650_Range16(4207LLU,4208LLU,1LLU),_20548c650_Range16(4213LLU,4225LLU,1LLU),_20548c650_Range16(4238LLU,4256LLU,18LLU),_20548c650_Range16(4257LLU,4293LLU,1LLU),_20548c650_Range16(4295LLU,4301LLU,6LLU),_20548c650_Range16(4304LLU,4346LLU,1LLU),_20548c650_Range16(4348LLU,4680LLU,1LLU),_20548c650_Range16(4682LLU,4685LLU,1LLU),_20548c650_Range16(4688LLU,4694LLU,1LLU),_20548c650_Range16(4696LLU,4698LLU,2LLU),_20548c650_Range16(4699LLU,4701LLU,1LLU),_20548c650_Range16(4704LLU,4744LLU,1LLU),_20548c650_Range16(4746LLU,4749LLU,1LLU),_20548c650_Range16(4752LLU,4784LLU,1LLU),_20548c650_Range16(4786LLU,4789LLU,1LLU),_20548c650_Range16(4792LLU,4798LLU,1LLU),_20548c650_Range16(4800LLU,4802LLU,2LLU),_20548c650_Range16(4803LLU,4805LLU,1LLU),_20548c650_Range16(4808LLU,4822LLU,1LLU),_20548c650_Range16(4824LLU,4880LLU,1LLU),_20548c650_Range16(4882LLU,4885LLU,1LLU),_20548c650_Range16(4888LLU,4954LLU,1LLU),_20548c650_Range16(4992LLU,5007LLU,1LLU),_20548c650_Range16(5024LLU,5109LLU,1LLU),_20548c650_Range16(5112LLU,5117LLU,1LLU),_20548c650_Range16(5121LLU,5740LLU,1LLU),_20548c650_Range16(5743LLU,5759LLU,1LLU),_20548c650_Range16(5761LLU,5786LLU,1LLU),_20548c650_Range16(5792LLU,5866LLU,1LLU),_20548c650_Range16(5873LLU,5880LLU,1LLU),_20548c650_Range16(5888LLU,5905LLU,1LLU),_20548c650_Range16(5919LLU,5937LLU,1LLU),_20548c650_Range16(5952LLU,5969LLU,1LLU),_20548c650_Range16(5984LLU,5996LLU,1LLU),_20548c650_Range16(5998LLU,6000LLU,1LLU),_20548c650_Range16(6016LLU,6067LLU,1LLU),_20548c650_Range16(6103LLU,6108LLU,5LLU),_20548c650_Range16(6176LLU,6264LLU,1LLU),_20548c650_Range16(6272LLU,6276LLU,1LLU),_20548c650_Range16(6279LLU,6312LLU,1LLU),_20548c650_Range16(6314LLU,6320LLU,6LLU),_20548c650_Range16(6321LLU,6389LLU,1LLU),_20548c650_Range16(6400LLU,6430LLU,1LLU),_20548c650_Range16(6480LLU,6509LLU,1LLU),_20548c650_Range16(6512LLU,6516LLU,1LLU),_20548c650_Range16(6528LLU,6571LLU,1LLU),_20548c650_Range16(6576LLU,6601LLU,1LLU),_20548c650_Range16(6656LLU,6678LLU,1LLU),_20548c650_Range16(6688LLU,6740LLU,1LLU),_20548c650_Range16(6823LLU,6917LLU,94LLU),_20548c650_Range16(6918LLU,6963LLU,1LLU),_20548c650_Range16(6981LLU,6988LLU,1LLU),_20548c650_Range16(7043LLU,7072LLU,1LLU),_20548c650_Range16(7086LLU,7087LLU,1LLU),_20548c650_Range16(7098LLU,7141LLU,1LLU),_20548c650_Range16(7168LLU,7203LLU,1LLU),_20548c650_Range16(7245LLU,7247LLU,1LLU),_20548c650_Range16(7258LLU,7293LLU,1LLU),_20548c650_Range16(7296LLU,7304LLU,1LLU),_20548c650_Range16(7312LLU,7354LLU,1LLU),_20548c650_Range16(7357LLU,7359LLU,1LLU),_20548c650_Range16(7401LLU,7404LLU,1LLU),_20548c650_Range16(7406LLU,7411LLU,1LLU),_20548c650_Range16(7413LLU,7414LLU,1LLU),_20548c650_Range16(7418LLU,7424LLU,6LLU),_20548c650_Range16(7425LLU,7615LLU,1LLU),_20548c650_Range16(7680LLU,7957LLU,1LLU),_20548c650_Range16(7960LLU,7965LLU,1LLU),_20548c650_Range16(7968LLU,8005LLU,1LLU),_20548c650_Range16(8008LLU,8013LLU,1LLU),_20548c650_Range16(8016LLU,8023LLU,1LLU),_20548c650_Range16(8025LLU,8031LLU,2LLU),_20548c650_Range16(8032LLU,8061LLU,1LLU),_20548c650_Range16(8064LLU,8116LLU,1LLU),_20548c650_Range16(8118LLU,8124LLU,1LLU),_20548c650_Range16(8126LLU,8130LLU,4LLU),_20548c650_Range16(8131LLU,8132LLU,1LLU),_20548c650_Range16(8134LLU,8140LLU,1LLU),_20548c650_Range16(8144LLU,8147LLU,1LLU),_20548c650_Range16(8150LLU,8155LLU,1LLU),_20548c650_Range16(8160LLU,8172LLU,1LLU),_20548c650_Range16(8178LLU,8180LLU,1LLU),_20548c650_Range16(8182LLU,8188LLU,1LLU),_20548c650_Range16(8305LLU,8319LLU,14LLU),_20548c650_Range16(8336LLU,8348LLU,1LLU),_20548c650_Range16(8450LLU,8455LLU,5LLU),_20548c650_Range16(8458LLU,8467LLU,1LLU),_20548c650_Range16(8469LLU,8473LLU,4LLU),_20548c650_Range16(8474LLU,8477LLU,1LLU),_20548c650_Range16(8484LLU,8490LLU,2LLU),_20548c650_Range16(8491LLU,8493LLU,1LLU),_20548c650_Range16(8495LLU,8505LLU,1LLU),_20548c650_Range16(8508LLU,8511LLU,1LLU),_20548c650_Range16(8517LLU,8521LLU,1LLU),_20548c650_Range16(8526LLU,8579LLU,53LLU),_20548c650_Range16(8580LLU,11264LLU,2684LLU),_20548c650_Range16(11265LLU,11492LLU,1LLU),_20548c650_Range16(11499LLU,11502LLU,1LLU),_20548c650_Range16(11506LLU,11507LLU,1LLU),_20548c650_Range16(11520LLU,11557LLU,1LLU),_20548c650_Range16(11559LLU,11565LLU,6LLU),_20548c650_Range16(11568LLU,11623LLU,1LLU),_20548c650_Range16(11631LLU,11648LLU,17LLU),_20548c650_Range16(11649LLU,11670LLU,1LLU),_20548c650_Range16(11680LLU,11686LLU,1LLU),_20548c650_Range16(11688LLU,11694LLU,1LLU),_20548c650_Range16(11696LLU,11702LLU,1LLU),_20548c650_Range16(11704LLU,11710LLU,1LLU),_20548c650_Range16(11712LLU,11718LLU,1LLU),_20548c650_Range16(11720LLU,11726LLU,1LLU),_20548c650_Range16(11728LLU,11734LLU,1LLU),_20548c650_Range16(11736LLU,11742LLU,1LLU),_20548c650_Range16(11823LLU,12293LLU,470LLU),_20548c650_Range16(12294LLU,12337LLU,43LLU),_20548c650_Range16(12338LLU,12341LLU,1LLU),_20548c650_Range16(12347LLU,12348LLU,1LLU),_20548c650_Range16(12353LLU,12438LLU,1LLU),_20548c650_Range16(12445LLU,12447LLU,1LLU),_20548c650_Range16(12449LLU,12538LLU,1LLU),_20548c650_Range16(12540LLU,12543LLU,1LLU),_20548c650_Range16(12549LLU,12591LLU,1LLU),_20548c650_Range16(12593LLU,12686LLU,1LLU),_20548c650_Range16(12704LLU,12735LLU,1LLU),_20548c650_Range16(12784LLU,12799LLU,1LLU),_20548c650_Range16(13312LLU,19903LLU,1LLU),_20548c650_Range16(19968LLU,42124LLU,1LLU),_20548c650_Range16(42192LLU,42237LLU,1LLU),_20548c650_Range16(42240LLU,42508LLU,1LLU),_20548c650_Range16(42512LLU,42527LLU,1LLU),_20548c650_Range16(42538LLU,42539LLU,1LLU),_20548c650_Range16(42560LLU,42606LLU,1LLU),_20548c650_Range16(42623LLU,42653LLU,1LLU),_20548c650_Range16(42656LLU,42725LLU,1LLU),_20548c650_Range16(42775LLU,42783LLU,1LLU),_20548c650_Range16(42786LLU,42888LLU,1LLU),_20548c650_Range16(42891LLU,42954LLU,1LLU),_20548c650_Range16(42960LLU,42961LLU,1LLU),_20548c650_Range16(42963LLU,42965LLU,2LLU),_20548c650_Range16(42966LLU,42969LLU,1LLU),_20548c650_Range16(42994LLU,43009LLU,1LLU),_20548c650_Range16(43011LLU,43013LLU,1LLU),_20548c650_Range16(43015LLU,43018LLU,1LLU),_20548c650_Range16(43020LLU,43042LLU,1LLU),_20548c650_Range16(43072LLU,43123LLU,1LLU),_20548c650_Range16(43138LLU,43187LLU,1LLU),_20548c650_Range16(43250LLU,43255LLU,1LLU),_20548c650_Range16(43259LLU,43261LLU,2LLU),_20548c650_Range16(43262LLU,43274LLU,12LLU),_20548c650_Range16(43275LLU,43301LLU,1LLU),_20548c650_Range16(43312LLU,43334LLU,1LLU),_20548c650_Range16(43360LLU,43388LLU,1LLU),_20548c650_Range16(43396LLU,43442LLU,1LLU),_20548c650_Range16(43471LLU,43488LLU,17LLU),_20548c650_Range16(43489LLU,43492LLU,1LLU),_20548c650_Range16(43494LLU,43503LLU,1LLU),_20548c650_Range16(43514LLU,43518LLU,1LLU),_20548c650_Range16(43520LLU,43560LLU,1LLU),_20548c650_Range16(43584LLU,43586LLU,1LLU),_20548c650_Range16(43588LLU,43595LLU,1LLU),_20548c650_Range16(43616LLU,43638LLU,1LLU),_20548c650_Range16(43642LLU,43646LLU,4LLU),_20548c650_Range16(43647LLU,43695LLU,1LLU),_20548c650_Range16(43697LLU,43701LLU,4LLU),_20548c650_Range16(43702LLU,43705LLU,3LLU),_20548c650_Range16(43706LLU,43709LLU,1LLU),_20548c650_Range16(43712LLU,43714LLU,2LLU),_20548c650_Range16(43739LLU,43741LLU,1LLU),_20548c650_Range16(43744LLU,43754LLU,1LLU),_20548c650_Range16(43762LLU,43764LLU,1LLU),_20548c650_Range16(43777LLU,43782LLU,1LLU),_20548c650_Range16(43785LLU,43790LLU,1LLU),_20548c650_Range16(43793LLU,43798LLU,1LLU),_20548c650_Range16(43808LLU,43814LLU,1LLU),_20548c650_Range16(43816LLU,43822LLU,1LLU),_20548c650_Range16(43824LLU,43866LLU,1LLU),_20548c650_Range16(43868LLU,43881LLU,1LLU),_20548c650_Range16(43888LLU,44002LLU,1LLU),_20548c650_Range16(44032LLU,55203LLU,1LLU),_20548c650_Range16(55216LLU,55238LLU,1LLU),_20548c650_Range16(55243LLU,55291LLU,1LLU),_20548c650_Range16(63744LLU,64109LLU,1LLU),_20548c650_Range16(64112LLU,64217LLU,1LLU),_20548c650_Range16(64256LLU,64262LLU,1LLU),_20548c650_Range16(64275LLU,64279LLU,1LLU),_20548c650_Range16(64285LLU,64287LLU,2LLU),_20548c650_Range16(64288LLU,64296LLU,1LLU),_20548c650_Range16(64298LLU,64310LLU,1LLU),_20548c650_Range16(64312LLU,64316LLU,1LLU),_20548c650_Range16(64318LLU,64320LLU,2LLU),_20548c650_Range16(64321LLU,64323LLU,2LLU),_20548c650_Range16(64324LLU,64326LLU,2LLU),_20548c650_Range16(64327LLU,64433LLU,1LLU),_20548c650_Range16(64467LLU,64829LLU,1LLU),_20548c650_Range16(64848LLU,64911LLU,1LLU),_20548c650_Range16(64914LLU,64967LLU,1LLU),_20548c650_Range16(65008LLU,65019LLU,1LLU),_20548c650_Range16(65136LLU,65140LLU,1LLU),_20548c650_Range16(65142LLU,65276LLU,1LLU),_20548c650_Range16(65313LLU,65338LLU,1LLU),_20548c650_Range16(65345LLU,65370LLU,1LLU),_20548c650_Range16(65382LLU,65470LLU,1LLU),_20548c650_Range16(65474LLU,65479LLU,1LLU),_20548c650_Range16(65482LLU,65487LLU,1LLU),_20548c650_Range16(65490LLU,65495LLU,1LLU),_20548c650_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(65536LLU,65547LLU,1LLU),_20548c650_Range32(65549LLU,65574LLU,1LLU),_20548c650_Range32(65576LLU,65594LLU,1LLU),_20548c650_Range32(65596LLU,65597LLU,1LLU),_20548c650_Range32(65599LLU,65613LLU,1LLU),_20548c650_Range32(65616LLU,65629LLU,1LLU),_20548c650_Range32(65664LLU,65786LLU,1LLU),_20548c650_Range32(66176LLU,66204LLU,1LLU),_20548c650_Range32(66208LLU,66256LLU,1LLU),_20548c650_Range32(66304LLU,66335LLU,1LLU),_20548c650_Range32(66349LLU,66368LLU,1LLU),_20548c650_Range32(66370LLU,66377LLU,1LLU),_20548c650_Range32(66384LLU,66421LLU,1LLU),_20548c650_Range32(66432LLU,66461LLU,1LLU),_20548c650_Range32(66464LLU,66499LLU,1LLU),_20548c650_Range32(66504LLU,66511LLU,1LLU),_20548c650_Range32(66560LLU,66717LLU,1LLU),_20548c650_Range32(66736LLU,66771LLU,1LLU),_20548c650_Range32(66776LLU,66811LLU,1LLU),_20548c650_Range32(66816LLU,66855LLU,1LLU),_20548c650_Range32(66864LLU,66915LLU,1LLU),_20548c650_Range32(66928LLU,66938LLU,1LLU),_20548c650_Range32(66940LLU,66954LLU,1LLU),_20548c650_Range32(66956LLU,66962LLU,1LLU),_20548c650_Range32(66964LLU,66965LLU,1LLU),_20548c650_Range32(66967LLU,66977LLU,1LLU),_20548c650_Range32(66979LLU,66993LLU,1LLU),_20548c650_Range32(66995LLU,67001LLU,1LLU),_20548c650_Range32(67003LLU,67004LLU,1LLU),_20548c650_Range32(67072LLU,67382LLU,1LLU),_20548c650_Range32(67392LLU,67413LLU,1LLU),_20548c650_Range32(67424LLU,67431LLU,1LLU),_20548c650_Range32(67456LLU,67461LLU,1LLU),_20548c650_Range32(67463LLU,67504LLU,1LLU),_20548c650_Range32(67506LLU,67514LLU,1LLU),_20548c650_Range32(67584LLU,67589LLU,1LLU),_20548c650_Range32(67592LLU,67594LLU,2LLU),_20548c650_Range32(67595LLU,67637LLU,1LLU),_20548c650_Range32(67639LLU,67640LLU,1LLU),_20548c650_Range32(67644LLU,67647LLU,3LLU),_20548c650_Range32(67648LLU,67669LLU,1LLU),_20548c650_Range32(67680LLU,67702LLU,1LLU),_20548c650_Range32(67712LLU,67742LLU,1LLU),_20548c650_Range32(67808LLU,67826LLU,1LLU),_20548c650_Range32(67828LLU,67829LLU,1LLU),_20548c650_Range32(67840LLU,67861LLU,1LLU),_20548c650_Range32(67872LLU,67897LLU,1LLU),_20548c650_Range32(67968LLU,68023LLU,1LLU),_20548c650_Range32(68030LLU,68031LLU,1LLU),_20548c650_Range32(68096LLU,68112LLU,16LLU),_20548c650_Range32(68113LLU,68115LLU,1LLU),_20548c650_Range32(68117LLU,68119LLU,1LLU),_20548c650_Range32(68121LLU,68149LLU,1LLU),_20548c650_Range32(68192LLU,68220LLU,1LLU),_20548c650_Range32(68224LLU,68252LLU,1LLU),_20548c650_Range32(68288LLU,68295LLU,1LLU),_20548c650_Range32(68297LLU,68324LLU,1LLU),_20548c650_Range32(68352LLU,68405LLU,1LLU),_20548c650_Range32(68416LLU,68437LLU,1LLU),_20548c650_Range32(68448LLU,68466LLU,1LLU),_20548c650_Range32(68480LLU,68497LLU,1LLU),_20548c650_Range32(68608LLU,68680LLU,1LLU),_20548c650_Range32(68736LLU,68786LLU,1LLU),_20548c650_Range32(68800LLU,68850LLU,1LLU),_20548c650_Range32(68864LLU,68899LLU,1LLU),_20548c650_Range32(69248LLU,69289LLU,1LLU),_20548c650_Range32(69296LLU,69297LLU,1LLU),_20548c650_Range32(69376LLU,69404LLU,1LLU),_20548c650_Range32(69415LLU,69424LLU,9LLU),_20548c650_Range32(69425LLU,69445LLU,1LLU),_20548c650_Range32(69488LLU,69505LLU,1LLU),_20548c650_Range32(69552LLU,69572LLU,1LLU),_20548c650_Range32(69600LLU,69622LLU,1LLU),_20548c650_Range32(69635LLU,69687LLU,1LLU),_20548c650_Range32(69745LLU,69746LLU,1LLU),_20548c650_Range32(69749LLU,69763LLU,14LLU),_20548c650_Range32(69764LLU,69807LLU,1LLU),_20548c650_Range32(69840LLU,69864LLU,1LLU),_20548c650_Range32(69891LLU,69926LLU,1LLU),_20548c650_Range32(69956LLU,69959LLU,3LLU),_20548c650_Range32(69968LLU,70002LLU,1LLU),_20548c650_Range32(70006LLU,70019LLU,13LLU),_20548c650_Range32(70020LLU,70066LLU,1LLU),_20548c650_Range32(70081LLU,70084LLU,1LLU),_20548c650_Range32(70106LLU,70108LLU,2LLU),_20548c650_Range32(70144LLU,70161LLU,1LLU),_20548c650_Range32(70163LLU,70187LLU,1LLU),_20548c650_Range32(70207LLU,70208LLU,1LLU),_20548c650_Range32(70272LLU,70278LLU,1LLU),_20548c650_Range32(70280LLU,70282LLU,2LLU),_20548c650_Range32(70283LLU,70285LLU,1LLU),_20548c650_Range32(70287LLU,70301LLU,1LLU),_20548c650_Range32(70303LLU,70312LLU,1LLU),_20548c650_Range32(70320LLU,70366LLU,1LLU),_20548c650_Range32(70405LLU,70412LLU,1LLU),_20548c650_Range32(70415LLU,70416LLU,1LLU),_20548c650_Range32(70419LLU,70440LLU,1LLU),_20548c650_Range32(70442LLU,70448LLU,1LLU),_20548c650_Range32(70450LLU,70451LLU,1LLU),_20548c650_Range32(70453LLU,70457LLU,1LLU),_20548c650_Range32(70461LLU,70480LLU,19LLU),_20548c650_Range32(70493LLU,70497LLU,1LLU),_20548c650_Range32(70656LLU,70708LLU,1LLU),_20548c650_Range32(70727LLU,70730LLU,1LLU),_20548c650_Range32(70751LLU,70753LLU,1LLU),_20548c650_Range32(70784LLU,70831LLU,1LLU),_20548c650_Range32(70852LLU,70853LLU,1LLU),_20548c650_Range32(70855LLU,71040LLU,185LLU),_20548c650_Range32(71041LLU,71086LLU,1LLU),_20548c650_Range32(71128LLU,71131LLU,1LLU),_20548c650_Range32(71168LLU,71215LLU,1LLU),_20548c650_Range32(71236LLU,71296LLU,60LLU),_20548c650_Range32(71297LLU,71338LLU,1LLU),_20548c650_Range32(71352LLU,71424LLU,72LLU),_20548c650_Range32(71425LLU,71450LLU,1LLU),_20548c650_Range32(71488LLU,71494LLU,1LLU),_20548c650_Range32(71680LLU,71723LLU,1LLU),_20548c650_Range32(71840LLU,71903LLU,1LLU),_20548c650_Range32(71935LLU,71942LLU,1LLU),_20548c650_Range32(71945LLU,71948LLU,3LLU),_20548c650_Range32(71949LLU,71955LLU,1LLU),_20548c650_Range32(71957LLU,71958LLU,1LLU),_20548c650_Range32(71960LLU,71983LLU,1LLU),_20548c650_Range32(71999LLU,72001LLU,2LLU),_20548c650_Range32(72096LLU,72103LLU,1LLU),_20548c650_Range32(72106LLU,72144LLU,1LLU),_20548c650_Range32(72161LLU,72163LLU,2LLU),_20548c650_Range32(72192LLU,72203LLU,11LLU),_20548c650_Range32(72204LLU,72242LLU,1LLU),_20548c650_Range32(72250LLU,72272LLU,22LLU),_20548c650_Range32(72284LLU,72329LLU,1LLU),_20548c650_Range32(72349LLU,72368LLU,19LLU),_20548c650_Range32(72369LLU,72440LLU,1LLU),_20548c650_Range32(72704LLU,72712LLU,1LLU),_20548c650_Range32(72714LLU,72750LLU,1LLU),_20548c650_Range32(72768LLU,72818LLU,50LLU),_20548c650_Range32(72819LLU,72847LLU,1LLU),_20548c650_Range32(72960LLU,72966LLU,1LLU),_20548c650_Range32(72968LLU,72969LLU,1LLU),_20548c650_Range32(72971LLU,73008LLU,1LLU),_20548c650_Range32(73030LLU,73056LLU,26LLU),_20548c650_Range32(73057LLU,73061LLU,1LLU),_20548c650_Range32(73063LLU,73064LLU,1LLU),_20548c650_Range32(73066LLU,73097LLU,1LLU),_20548c650_Range32(73112LLU,73440LLU,328LLU),_20548c650_Range32(73441LLU,73458LLU,1LLU),_20548c650_Range32(73474LLU,73476LLU,2LLU),_20548c650_Range32(73477LLU,73488LLU,1LLU),_20548c650_Range32(73490LLU,73523LLU,1LLU),_20548c650_Range32(73648LLU,73728LLU,80LLU),_20548c650_Range32(73729LLU,74649LLU,1LLU),_20548c650_Range32(74880LLU,75075LLU,1LLU),_20548c650_Range32(77712LLU,77808LLU,1LLU),_20548c650_Range32(77824LLU,78895LLU,1LLU),_20548c650_Range32(78913LLU,78918LLU,1LLU),_20548c650_Range32(82944LLU,83526LLU,1LLU),_20548c650_Range32(92160LLU,92728LLU,1LLU),_20548c650_Range32(92736LLU,92766LLU,1LLU),_20548c650_Range32(92784LLU,92862LLU,1LLU),_20548c650_Range32(92880LLU,92909LLU,1LLU),_20548c650_Range32(92928LLU,92975LLU,1LLU),_20548c650_Range32(92992LLU,92995LLU,1LLU),_20548c650_Range32(93027LLU,93047LLU,1LLU),_20548c650_Range32(93053LLU,93071LLU,1LLU),_20548c650_Range32(93760LLU,93823LLU,1LLU),_20548c650_Range32(93952LLU,94026LLU,1LLU),_20548c650_Range32(94032LLU,94099LLU,67LLU),_20548c650_Range32(94100LLU,94111LLU,1LLU),_20548c650_Range32(94176LLU,94177LLU,1LLU),_20548c650_Range32(94179LLU,94208LLU,29LLU),_20548c650_Range32(94209LLU,100343LLU,1LLU),_20548c650_Range32(100352LLU,101589LLU,1LLU),_20548c650_Range32(101632LLU,101640LLU,1LLU),_20548c650_Range32(110576LLU,110579LLU,1LLU),_20548c650_Range32(110581LLU,110587LLU,1LLU),_20548c650_Range32(110589LLU,110590LLU,1LLU),_20548c650_Range32(110592LLU,110882LLU,1LLU),_20548c650_Range32(110898LLU,110928LLU,30LLU),_20548c650_Range32(110929LLU,110930LLU,1LLU),_20548c650_Range32(110933LLU,110948LLU,15LLU),_20548c650_Range32(110949LLU,110951LLU,1LLU),_20548c650_Range32(110960LLU,111355LLU,1LLU),_20548c650_Range32(113664LLU,113770LLU,1LLU),_20548c650_Range32(113776LLU,113788LLU,1LLU),_20548c650_Range32(113792LLU,113800LLU,1LLU),_20548c650_Range32(113808LLU,113817LLU,1LLU),_20548c650_Range32(119808LLU,119892LLU,1LLU),_20548c650_Range32(119894LLU,119964LLU,1LLU),_20548c650_Range32(119966LLU,119967LLU,1LLU),_20548c650_Range32(119970LLU,119973LLU,3LLU),_20548c650_Range32(119974LLU,119977LLU,3LLU),_20548c650_Range32(119978LLU,119980LLU,1LLU),_20548c650_Range32(119982LLU,119993LLU,1LLU),_20548c650_Range32(119995LLU,119997LLU,2LLU),_20548c650_Range32(119998LLU,120003LLU,1LLU),_20548c650_Range32(120005LLU,120069LLU,1LLU),_20548c650_Range32(120071LLU,120074LLU,1LLU),_20548c650_Range32(120077LLU,120084LLU,1LLU),_20548c650_Range32(120086LLU,120092LLU,1LLU),_20548c650_Range32(120094LLU,120121LLU,1LLU),_20548c650_Range32(120123LLU,120126LLU,1LLU),_20548c650_Range32(120128LLU,120132LLU,1LLU),_20548c650_Range32(120134LLU,120138LLU,4LLU),_20548c650_Range32(120139LLU,120144LLU,1LLU),_20548c650_Range32(120146LLU,120485LLU,1LLU),_20548c650_Range32(120488LLU,120512LLU,1LLU),_20548c650_Range32(120514LLU,120538LLU,1LLU),_20548c650_Range32(120540LLU,120570LLU,1LLU),_20548c650_Range32(120572LLU,120596LLU,1LLU),_20548c650_Range32(120598LLU,120628LLU,1LLU),_20548c650_Range32(120630LLU,120654LLU,1LLU),_20548c650_Range32(120656LLU,120686LLU,1LLU),_20548c650_Range32(120688LLU,120712LLU,1LLU),_20548c650_Range32(120714LLU,120744LLU,1LLU),_20548c650_Range32(120746LLU,120770LLU,1LLU),_20548c650_Range32(120772LLU,120779LLU,1LLU),_20548c650_Range32(122624LLU,122654LLU,1LLU),_20548c650_Range32(122661LLU,122666LLU,1LLU),_20548c650_Range32(122928LLU,122989LLU,1LLU),_20548c650_Range32(123136LLU,123180LLU,1LLU),_20548c650_Range32(123191LLU,123197LLU,1LLU),_20548c650_Range32(123214LLU,123536LLU,322LLU),_20548c650_Range32(123537LLU,123565LLU,1LLU),_20548c650_Range32(123584LLU,123627LLU,1LLU),_20548c650_Range32(124112LLU,124139LLU,1LLU),_20548c650_Range32(124896LLU,124902LLU,1LLU),_20548c650_Range32(124904LLU,124907LLU,1LLU),_20548c650_Range32(124909LLU,124910LLU,1LLU),_20548c650_Range32(124912LLU,124926LLU,1LLU),_20548c650_Range32(124928LLU,125124LLU,1LLU),_20548c650_Range32(125184LLU,125251LLU,1LLU),_20548c650_Range32(125259LLU,126464LLU,1205LLU),_20548c650_Range32(126465LLU,126467LLU,1LLU),_20548c650_Range32(126469LLU,126495LLU,1LLU),_20548c650_Range32(126497LLU,126498LLU,1LLU),_20548c650_Range32(126500LLU,126503LLU,3LLU),_20548c650_Range32(126505LLU,126514LLU,1LLU),_20548c650_Range32(126516LLU,126519LLU,1LLU),_20548c650_Range32(126521LLU,126523LLU,2LLU),_20548c650_Range32(126530LLU,126535LLU,5LLU),_20548c650_Range32(126537LLU,126541LLU,2LLU),_20548c650_Range32(126542LLU,126543LLU,1LLU),_20548c650_Range32(126545LLU,126546LLU,1LLU),_20548c650_Range32(126548LLU,126551LLU,3LLU),_20548c650_Range32(126553LLU,126561LLU,2LLU),_20548c650_Range32(126562LLU,126564LLU,2LLU),_20548c650_Range32(126567LLU,126570LLU,1LLU),_20548c650_Range32(126572LLU,126578LLU,1LLU),_20548c650_Range32(126580LLU,126583LLU,1LLU),_20548c650_Range32(126585LLU,126588LLU,1LLU),_20548c650_Range32(126590LLU,126592LLU,2LLU),_20548c650_Range32(126593LLU,126601LLU,1LLU),_20548c650_Range32(126603LLU,126619LLU,1LLU),_20548c650_Range32(126625LLU,126627LLU,1LLU),_20548c650_Range32(126629LLU,126633LLU,1LLU),_20548c650_Range32(126635LLU,126651LLU,1LLU),_20548c650_Range32(131072LLU,173791LLU,1LLU),_20548c650_Range32(173824LLU,177977LLU,1LLU),_20548c650_Range32(177984LLU,178205LLU,1LLU),_20548c650_Range32(178208LLU,183969LLU,1LLU),_20548c650_Range32(183984LLU,191456LLU,1LLU),_20548c650_Range32(194560LLU,195101LLU,1LLU),_20548c650_Range32(196608LLU,201546LLU,1LLU),_20548c650_Range32(201552LLU,205743LLU,1LLU)}),6LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LL = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(97LLU,122LLU,1LLU),_20548c650_Range16(181LLU,223LLU,42LLU),_20548c650_Range16(224LLU,246LLU,1LLU),_20548c650_Range16(248LLU,255LLU,1LLU),_20548c650_Range16(257LLU,311LLU,2LLU),_20548c650_Range16(312LLU,328LLU,2LLU),_20548c650_Range16(329LLU,375LLU,2LLU),_20548c650_Range16(378LLU,382LLU,2LLU),_20548c650_Range16(383LLU,384LLU,1LLU),_20548c650_Range16(387LLU,389LLU,2LLU),_20548c650_Range16(392LLU,396LLU,4LLU),_20548c650_Range16(397LLU,402LLU,5LLU),_20548c650_Range16(405LLU,409LLU,4LLU),_20548c650_Range16(410LLU,411LLU,1LLU),_20548c650_Range16(414LLU,417LLU,3LLU),_20548c650_Range16(419LLU,421LLU,2LLU),_20548c650_Range16(424LLU,426LLU,2LLU),_20548c650_Range16(427LLU,429LLU,2LLU),_20548c650_Range16(432LLU,436LLU,4LLU),_20548c650_Range16(438LLU,441LLU,3LLU),_20548c650_Range16(442LLU,445LLU,3LLU),_20548c650_Range16(446LLU,447LLU,1LLU),_20548c650_Range16(454LLU,460LLU,3LLU),_20548c650_Range16(462LLU,476LLU,2LLU),_20548c650_Range16(477LLU,495LLU,2LLU),_20548c650_Range16(496LLU,499LLU,3LLU),_20548c650_Range16(501LLU,505LLU,4LLU),_20548c650_Range16(507LLU,563LLU,2LLU),_20548c650_Range16(564LLU,569LLU,1LLU),_20548c650_Range16(572LLU,575LLU,3LLU),_20548c650_Range16(576LLU,578LLU,2LLU),_20548c650_Range16(583LLU,591LLU,2LLU),_20548c650_Range16(592LLU,659LLU,1LLU),_20548c650_Range16(661LLU,687LLU,1LLU),_20548c650_Range16(881LLU,883LLU,2LLU),_20548c650_Range16(887LLU,891LLU,4LLU),_20548c650_Range16(892LLU,893LLU,1LLU),_20548c650_Range16(912LLU,940LLU,28LLU),_20548c650_Range16(941LLU,974LLU,1LLU),_20548c650_Range16(976LLU,977LLU,1LLU),_20548c650_Range16(981LLU,983LLU,1LLU),_20548c650_Range16(985LLU,1007LLU,2LLU),_20548c650_Range16(1008LLU,1011LLU,1LLU),_20548c650_Range16(1013LLU,1019LLU,3LLU),_20548c650_Range16(1020LLU,1072LLU,52LLU),_20548c650_Range16(1073LLU,1119LLU,1LLU),_20548c650_Range16(1121LLU,1153LLU,2LLU),_20548c650_Range16(1163LLU,1215LLU,2LLU),_20548c650_Range16(1218LLU,1230LLU,2LLU),_20548c650_Range16(1231LLU,1327LLU,2LLU),_20548c650_Range16(1376LLU,1416LLU,1LLU),_20548c650_Range16(4304LLU,4346LLU,1LLU),_20548c650_Range16(4349LLU,4351LLU,1LLU),_20548c650_Range16(5112LLU,5117LLU,1LLU),_20548c650_Range16(7296LLU,7304LLU,1LLU),_20548c650_Range16(7424LLU,7467LLU,1LLU),_20548c650_Range16(7531LLU,7543LLU,1LLU),_20548c650_Range16(7545LLU,7578LLU,1LLU),_20548c650_Range16(7681LLU,7829LLU,2LLU),_20548c650_Range16(7830LLU,7837LLU,1LLU),_20548c650_Range16(7839LLU,7935LLU,2LLU),_20548c650_Range16(7936LLU,7943LLU,1LLU),_20548c650_Range16(7952LLU,7957LLU,1LLU),_20548c650_Range16(7968LLU,7975LLU,1LLU),_20548c650_Range16(7984LLU,7991LLU,1LLU),_20548c650_Range16(8000LLU,8005LLU,1LLU),_20548c650_Range16(8016LLU,8023LLU,1LLU),_20548c650_Range16(8032LLU,8039LLU,1LLU),_20548c650_Range16(8048LLU,8061LLU,1LLU),_20548c650_Range16(8064LLU,8071LLU,1LLU),_20548c650_Range16(8080LLU,8087LLU,1LLU),_20548c650_Range16(8096LLU,8103LLU,1LLU),_20548c650_Range16(8112LLU,8116LLU,1LLU),_20548c650_Range16(8118LLU,8119LLU,1LLU),_20548c650_Range16(8126LLU,8130LLU,4LLU),_20548c650_Range16(8131LLU,8132LLU,1LLU),_20548c650_Range16(8134LLU,8135LLU,1LLU),_20548c650_Range16(8144LLU,8147LLU,1LLU),_20548c650_Range16(8150LLU,8151LLU,1LLU),_20548c650_Range16(8160LLU,8167LLU,1LLU),_20548c650_Range16(8178LLU,8180LLU,1LLU),_20548c650_Range16(8182LLU,8183LLU,1LLU),_20548c650_Range16(8458LLU,8462LLU,4LLU),_20548c650_Range16(8463LLU,8467LLU,4LLU),_20548c650_Range16(8495LLU,8505LLU,5LLU),_20548c650_Range16(8508LLU,8509LLU,1LLU),_20548c650_Range16(8518LLU,8521LLU,1LLU),_20548c650_Range16(8526LLU,8580LLU,54LLU),_20548c650_Range16(11312LLU,11359LLU,1LLU),_20548c650_Range16(11361LLU,11365LLU,4LLU),_20548c650_Range16(11366LLU,11372LLU,2LLU),_20548c650_Range16(11377LLU,11379LLU,2LLU),_20548c650_Range16(11380LLU,11382LLU,2LLU),_20548c650_Range16(11383LLU,11387LLU,1LLU),_20548c650_Range16(11393LLU,11491LLU,2LLU),_20548c650_Range16(11492LLU,11500LLU,8LLU),_20548c650_Range16(11502LLU,11507LLU,5LLU),_20548c650_Range16(11520LLU,11557LLU,1LLU),_20548c650_Range16(11559LLU,11565LLU,6LLU),_20548c650_Range16(42561LLU,42605LLU,2LLU),_20548c650_Range16(42625LLU,42651LLU,2LLU),_20548c650_Range16(42787LLU,42799LLU,2LLU),_20548c650_Range16(42800LLU,42801LLU,1LLU),_20548c650_Range16(42803LLU,42865LLU,2LLU),_20548c650_Range16(42866LLU,42872LLU,1LLU),_20548c650_Range16(42874LLU,42876LLU,2LLU),_20548c650_Range16(42879LLU,42887LLU,2LLU),_20548c650_Range16(42892LLU,42894LLU,2LLU),_20548c650_Range16(42897LLU,42899LLU,2LLU),_20548c650_Range16(42900LLU,42901LLU,1LLU),_20548c650_Range16(42903LLU,42921LLU,2LLU),_20548c650_Range16(42927LLU,42933LLU,6LLU),_20548c650_Range16(42935LLU,42947LLU,2LLU),_20548c650_Range16(42952LLU,42954LLU,2LLU),_20548c650_Range16(42961LLU,42969LLU,2LLU),_20548c650_Range16(42998LLU,43002LLU,4LLU),_20548c650_Range16(43824LLU,43866LLU,1LLU),_20548c650_Range16(43872LLU,43880LLU,1LLU),_20548c650_Range16(43888LLU,43967LLU,1LLU),_20548c650_Range16(64256LLU,64262LLU,1LLU),_20548c650_Range16(64275LLU,64279LLU,1LLU),_20548c650_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66600LLU,66639LLU,1LLU),_20548c650_Range32(66776LLU,66811LLU,1LLU),_20548c650_Range32(66967LLU,66977LLU,1LLU),_20548c650_Range32(66979LLU,66993LLU,1LLU),_20548c650_Range32(66995LLU,67001LLU,1LLU),_20548c650_Range32(67003LLU,67004LLU,1LLU),_20548c650_Range32(68800LLU,68850LLU,1LLU),_20548c650_Range32(71872LLU,71903LLU,1LLU),_20548c650_Range32(93792LLU,93823LLU,1LLU),_20548c650_Range32(119834LLU,119859LLU,1LLU),_20548c650_Range32(119886LLU,119892LLU,1LLU),_20548c650_Range32(119894LLU,119911LLU,1LLU),_20548c650_Range32(119938LLU,119963LLU,1LLU),_20548c650_Range32(119990LLU,119993LLU,1LLU),_20548c650_Range32(119995LLU,119997LLU,2LLU),_20548c650_Range32(119998LLU,120003LLU,1LLU),_20548c650_Range32(120005LLU,120015LLU,1LLU),_20548c650_Range32(120042LLU,120067LLU,1LLU),_20548c650_Range32(120094LLU,120119LLU,1LLU),_20548c650_Range32(120146LLU,120171LLU,1LLU),_20548c650_Range32(120198LLU,120223LLU,1LLU),_20548c650_Range32(120250LLU,120275LLU,1LLU),_20548c650_Range32(120302LLU,120327LLU,1LLU),_20548c650_Range32(120354LLU,120379LLU,1LLU),_20548c650_Range32(120406LLU,120431LLU,1LLU),_20548c650_Range32(120458LLU,120485LLU,1LLU),_20548c650_Range32(120514LLU,120538LLU,1LLU),_20548c650_Range32(120540LLU,120545LLU,1LLU),_20548c650_Range32(120572LLU,120596LLU,1LLU),_20548c650_Range32(120598LLU,120603LLU,1LLU),_20548c650_Range32(120630LLU,120654LLU,1LLU),_20548c650_Range32(120656LLU,120661LLU,1LLU),_20548c650_Range32(120688LLU,120712LLU,1LLU),_20548c650_Range32(120714LLU,120719LLU,1LLU),_20548c650_Range32(120746LLU,120770LLU,1LLU),_20548c650_Range32(120772LLU,120777LLU,1LLU),_20548c650_Range32(120779LLU,122624LLU,1845LLU),_20548c650_Range32(122625LLU,122633LLU,1LLU),_20548c650_Range32(122635LLU,122654LLU,1LLU),_20548c650_Range32(122661LLU,122666LLU,1LLU),_20548c650_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LM = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(688LLU,705LLU,1LLU),_20548c650_Range16(710LLU,721LLU,1LLU),_20548c650_Range16(736LLU,740LLU,1LLU),_20548c650_Range16(748LLU,750LLU,2LLU),_20548c650_Range16(884LLU,890LLU,6LLU),_20548c650_Range16(1369LLU,1600LLU,231LLU),_20548c650_Range16(1765LLU,1766LLU,1LLU),_20548c650_Range16(2036LLU,2037LLU,1LLU),_20548c650_Range16(2042LLU,2074LLU,32LLU),_20548c650_Range16(2084LLU,2088LLU,4LLU),_20548c650_Range16(2249LLU,2417LLU,168LLU),_20548c650_Range16(3654LLU,3782LLU,128LLU),_20548c650_Range16(4348LLU,6103LLU,1755LLU),_20548c650_Range16(6211LLU,6823LLU,612LLU),_20548c650_Range16(7288LLU,7293LLU,1LLU),_20548c650_Range16(7468LLU,7530LLU,1LLU),_20548c650_Range16(7544LLU,7579LLU,35LLU),_20548c650_Range16(7580LLU,7615LLU,1LLU),_20548c650_Range16(8305LLU,8319LLU,14LLU),_20548c650_Range16(8336LLU,8348LLU,1LLU),_20548c650_Range16(11388LLU,11389LLU,1LLU),_20548c650_Range16(11631LLU,11823LLU,192LLU),_20548c650_Range16(12293LLU,12337LLU,44LLU),_20548c650_Range16(12338LLU,12341LLU,1LLU),_20548c650_Range16(12347LLU,12445LLU,98LLU),_20548c650_Range16(12446LLU,12540LLU,94LLU),_20548c650_Range16(12541LLU,12542LLU,1LLU),_20548c650_Range16(40981LLU,42232LLU,1251LLU),_20548c650_Range16(42233LLU,42237LLU,1LLU),_20548c650_Range16(42508LLU,42623LLU,115LLU),_20548c650_Range16(42652LLU,42653LLU,1LLU),_20548c650_Range16(42775LLU,42783LLU,1LLU),_20548c650_Range16(42864LLU,42888LLU,24LLU),_20548c650_Range16(42994LLU,42996LLU,1LLU),_20548c650_Range16(43000LLU,43001LLU,1LLU),_20548c650_Range16(43471LLU,43494LLU,23LLU),_20548c650_Range16(43632LLU,43741LLU,109LLU),_20548c650_Range16(43763LLU,43764LLU,1LLU),_20548c650_Range16(43868LLU,43871LLU,1LLU),_20548c650_Range16(43881LLU,65392LLU,21511LLU),_20548c650_Range16(65438LLU,65439LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(67456LLU,67461LLU,1LLU),_20548c650_Range32(67463LLU,67504LLU,1LLU),_20548c650_Range32(67506LLU,67514LLU,1LLU),_20548c650_Range32(92992LLU,92995LLU,1LLU),_20548c650_Range32(94099LLU,94111LLU,1LLU),_20548c650_Range32(94176LLU,94177LLU,1LLU),_20548c650_Range32(94179LLU,110576LLU,16397LLU),_20548c650_Range32(110577LLU,110579LLU,1LLU),_20548c650_Range32(110581LLU,110587LLU,1LLU),_20548c650_Range32(110589LLU,110590LLU,1LLU),_20548c650_Range32(122928LLU,122989LLU,1LLU),_20548c650_Range32(123191LLU,123197LLU,1LLU),_20548c650_Range32(124139LLU,125259LLU,1120LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(170LLU,186LLU,16LLU),_20548c650_Range16(443LLU,448LLU,5LLU),_20548c650_Range16(449LLU,451LLU,1LLU),_20548c650_Range16(660LLU,1488LLU,828LLU),_20548c650_Range16(1489LLU,1514LLU,1LLU),_20548c650_Range16(1519LLU,1522LLU,1LLU),_20548c650_Range16(1568LLU,1599LLU,1LLU),_20548c650_Range16(1601LLU,1610LLU,1LLU),_20548c650_Range16(1646LLU,1647LLU,1LLU),_20548c650_Range16(1649LLU,1747LLU,1LLU),_20548c650_Range16(1749LLU,1774LLU,25LLU),_20548c650_Range16(1775LLU,1786LLU,11LLU),_20548c650_Range16(1787LLU,1788LLU,1LLU),_20548c650_Range16(1791LLU,1808LLU,17LLU),_20548c650_Range16(1810LLU,1839LLU,1LLU),_20548c650_Range16(1869LLU,1957LLU,1LLU),_20548c650_Range16(1969LLU,1994LLU,25LLU),_20548c650_Range16(1995LLU,2026LLU,1LLU),_20548c650_Range16(2048LLU,2069LLU,1LLU),_20548c650_Range16(2112LLU,2136LLU,1LLU),_20548c650_Range16(2144LLU,2154LLU,1LLU),_20548c650_Range16(2160LLU,2183LLU,1LLU),_20548c650_Range16(2185LLU,2190LLU,1LLU),_20548c650_Range16(2208LLU,2248LLU,1LLU),_20548c650_Range16(2308LLU,2361LLU,1LLU),_20548c650_Range16(2365LLU,2384LLU,19LLU),_20548c650_Range16(2392LLU,2401LLU,1LLU),_20548c650_Range16(2418LLU,2432LLU,1LLU),_20548c650_Range16(2437LLU,2444LLU,1LLU),_20548c650_Range16(2447LLU,2448LLU,1LLU),_20548c650_Range16(2451LLU,2472LLU,1LLU),_20548c650_Range16(2474LLU,2480LLU,1LLU),_20548c650_Range16(2482LLU,2486LLU,4LLU),_20548c650_Range16(2487LLU,2489LLU,1LLU),_20548c650_Range16(2493LLU,2510LLU,17LLU),_20548c650_Range16(2524LLU,2525LLU,1LLU),_20548c650_Range16(2527LLU,2529LLU,1LLU),_20548c650_Range16(2544LLU,2545LLU,1LLU),_20548c650_Range16(2556LLU,2565LLU,9LLU),_20548c650_Range16(2566LLU,2570LLU,1LLU),_20548c650_Range16(2575LLU,2576LLU,1LLU),_20548c650_Range16(2579LLU,2600LLU,1LLU),_20548c650_Range16(2602LLU,2608LLU,1LLU),_20548c650_Range16(2610LLU,2611LLU,1LLU),_20548c650_Range16(2613LLU,2614LLU,1LLU),_20548c650_Range16(2616LLU,2617LLU,1LLU),_20548c650_Range16(2649LLU,2652LLU,1LLU),_20548c650_Range16(2654LLU,2674LLU,20LLU),_20548c650_Range16(2675LLU,2676LLU,1LLU),_20548c650_Range16(2693LLU,2701LLU,1LLU),_20548c650_Range16(2703LLU,2705LLU,1LLU),_20548c650_Range16(2707LLU,2728LLU,1LLU),_20548c650_Range16(2730LLU,2736LLU,1LLU),_20548c650_Range16(2738LLU,2739LLU,1LLU),_20548c650_Range16(2741LLU,2745LLU,1LLU),_20548c650_Range16(2749LLU,2768LLU,19LLU),_20548c650_Range16(2784LLU,2785LLU,1LLU),_20548c650_Range16(2809LLU,2821LLU,12LLU),_20548c650_Range16(2822LLU,2828LLU,1LLU),_20548c650_Range16(2831LLU,2832LLU,1LLU),_20548c650_Range16(2835LLU,2856LLU,1LLU),_20548c650_Range16(2858LLU,2864LLU,1LLU),_20548c650_Range16(2866LLU,2867LLU,1LLU),_20548c650_Range16(2869LLU,2873LLU,1LLU),_20548c650_Range16(2877LLU,2908LLU,31LLU),_20548c650_Range16(2909LLU,2911LLU,2LLU),_20548c650_Range16(2912LLU,2913LLU,1LLU),_20548c650_Range16(2929LLU,2947LLU,18LLU),_20548c650_Range16(2949LLU,2954LLU,1LLU),_20548c650_Range16(2958LLU,2960LLU,1LLU),_20548c650_Range16(2962LLU,2965LLU,1LLU),_20548c650_Range16(2969LLU,2970LLU,1LLU),_20548c650_Range16(2972LLU,2974LLU,2LLU),_20548c650_Range16(2975LLU,2979LLU,4LLU),_20548c650_Range16(2980LLU,2984LLU,4LLU),_20548c650_Range16(2985LLU,2986LLU,1LLU),_20548c650_Range16(2990LLU,3001LLU,1LLU),_20548c650_Range16(3024LLU,3077LLU,53LLU),_20548c650_Range16(3078LLU,3084LLU,1LLU),_20548c650_Range16(3086LLU,3088LLU,1LLU),_20548c650_Range16(3090LLU,3112LLU,1LLU),_20548c650_Range16(3114LLU,3129LLU,1LLU),_20548c650_Range16(3133LLU,3160LLU,27LLU),_20548c650_Range16(3161LLU,3162LLU,1LLU),_20548c650_Range16(3165LLU,3168LLU,3LLU),_20548c650_Range16(3169LLU,3200LLU,31LLU),_20548c650_Range16(3205LLU,3212LLU,1LLU),_20548c650_Range16(3214LLU,3216LLU,1LLU),_20548c650_Range16(3218LLU,3240LLU,1LLU),_20548c650_Range16(3242LLU,3251LLU,1LLU),_20548c650_Range16(3253LLU,3257LLU,1LLU),_20548c650_Range16(3261LLU,3293LLU,32LLU),_20548c650_Range16(3294LLU,3296LLU,2LLU),_20548c650_Range16(3297LLU,3313LLU,16LLU),_20548c650_Range16(3314LLU,3332LLU,18LLU),_20548c650_Range16(3333LLU,3340LLU,1LLU),_20548c650_Range16(3342LLU,3344LLU,1LLU),_20548c650_Range16(3346LLU,3386LLU,1LLU),_20548c650_Range16(3389LLU,3406LLU,17LLU),_20548c650_Range16(3412LLU,3414LLU,1LLU),_20548c650_Range16(3423LLU,3425LLU,1LLU),_20548c650_Range16(3450LLU,3455LLU,1LLU),_20548c650_Range16(3461LLU,3478LLU,1LLU),_20548c650_Range16(3482LLU,3505LLU,1LLU),_20548c650_Range16(3507LLU,3515LLU,1LLU),_20548c650_Range16(3517LLU,3520LLU,3LLU),_20548c650_Range16(3521LLU,3526LLU,1LLU),_20548c650_Range16(3585LLU,3632LLU,1LLU),_20548c650_Range16(3634LLU,3635LLU,1LLU),_20548c650_Range16(3648LLU,3653LLU,1LLU),_20548c650_Range16(3713LLU,3714LLU,1LLU),_20548c650_Range16(3716LLU,3718LLU,2LLU),_20548c650_Range16(3719LLU,3722LLU,1LLU),_20548c650_Range16(3724LLU,3747LLU,1LLU),_20548c650_Range16(3749LLU,3751LLU,2LLU),_20548c650_Range16(3752LLU,3760LLU,1LLU),_20548c650_Range16(3762LLU,3763LLU,1LLU),_20548c650_Range16(3773LLU,3776LLU,3LLU),_20548c650_Range16(3777LLU,3780LLU,1LLU),_20548c650_Range16(3804LLU,3807LLU,1LLU),_20548c650_Range16(3840LLU,3904LLU,64LLU),_20548c650_Range16(3905LLU,3911LLU,1LLU),_20548c650_Range16(3913LLU,3948LLU,1LLU),_20548c650_Range16(3976LLU,3980LLU,1LLU),_20548c650_Range16(4096LLU,4138LLU,1LLU),_20548c650_Range16(4159LLU,4176LLU,17LLU),_20548c650_Range16(4177LLU,4181LLU,1LLU),_20548c650_Range16(4186LLU,4189LLU,1LLU),_20548c650_Range16(4193LLU,4197LLU,4LLU),_20548c650_Range16(4198LLU,4206LLU,8LLU),_20548c650_Range16(4207LLU,4208LLU,1LLU),_20548c650_Range16(4213LLU,4225LLU,1LLU),_20548c650_Range16(4238LLU,4352LLU,114LLU),_20548c650_Range16(4353LLU,4680LLU,1LLU),_20548c650_Range16(4682LLU,4685LLU,1LLU),_20548c650_Range16(4688LLU,4694LLU,1LLU),_20548c650_Range16(4696LLU,4698LLU,2LLU),_20548c650_Range16(4699LLU,4701LLU,1LLU),_20548c650_Range16(4704LLU,4744LLU,1LLU),_20548c650_Range16(4746LLU,4749LLU,1LLU),_20548c650_Range16(4752LLU,4784LLU,1LLU),_20548c650_Range16(4786LLU,4789LLU,1LLU),_20548c650_Range16(4792LLU,4798LLU,1LLU),_20548c650_Range16(4800LLU,4802LLU,2LLU),_20548c650_Range16(4803LLU,4805LLU,1LLU),_20548c650_Range16(4808LLU,4822LLU,1LLU),_20548c650_Range16(4824LLU,4880LLU,1LLU),_20548c650_Range16(4882LLU,4885LLU,1LLU),_20548c650_Range16(4888LLU,4954LLU,1LLU),_20548c650_Range16(4992LLU,5007LLU,1LLU),_20548c650_Range16(5121LLU,5740LLU,1LLU),_20548c650_Range16(5743LLU,5759LLU,1LLU),_20548c650_Range16(5761LLU,5786LLU,1LLU),_20548c650_Range16(5792LLU,5866LLU,1LLU),_20548c650_Range16(5873LLU,5880LLU,1LLU),_20548c650_Range16(5888LLU,5905LLU,1LLU),_20548c650_Range16(5919LLU,5937LLU,1LLU),_20548c650_Range16(5952LLU,5969LLU,1LLU),_20548c650_Range16(5984LLU,5996LLU,1LLU),_20548c650_Range16(5998LLU,6000LLU,1LLU),_20548c650_Range16(6016LLU,6067LLU,1LLU),_20548c650_Range16(6108LLU,6176LLU,68LLU),_20548c650_Range16(6177LLU,6210LLU,1LLU),_20548c650_Range16(6212LLU,6264LLU,1LLU),_20548c650_Range16(6272LLU,6276LLU,1LLU),_20548c650_Range16(6279LLU,6312LLU,1LLU),_20548c650_Range16(6314LLU,6320LLU,6LLU),_20548c650_Range16(6321LLU,6389LLU,1LLU),_20548c650_Range16(6400LLU,6430LLU,1LLU),_20548c650_Range16(6480LLU,6509LLU,1LLU),_20548c650_Range16(6512LLU,6516LLU,1LLU),_20548c650_Range16(6528LLU,6571LLU,1LLU),_20548c650_Range16(6576LLU,6601LLU,1LLU),_20548c650_Range16(6656LLU,6678LLU,1LLU),_20548c650_Range16(6688LLU,6740LLU,1LLU),_20548c650_Range16(6917LLU,6963LLU,1LLU),_20548c650_Range16(6981LLU,6988LLU,1LLU),_20548c650_Range16(7043LLU,7072LLU,1LLU),_20548c650_Range16(7086LLU,7087LLU,1LLU),_20548c650_Range16(7098LLU,7141LLU,1LLU),_20548c650_Range16(7168LLU,7203LLU,1LLU),_20548c650_Range16(7245LLU,7247LLU,1LLU),_20548c650_Range16(7258LLU,7287LLU,1LLU),_20548c650_Range16(7401LLU,7404LLU,1LLU),_20548c650_Range16(7406LLU,7411LLU,1LLU),_20548c650_Range16(7413LLU,7414LLU,1LLU),_20548c650_Range16(7418LLU,8501LLU,1083LLU),_20548c650_Range16(8502LLU,8504LLU,1LLU),_20548c650_Range16(11568LLU,11623LLU,1LLU),_20548c650_Range16(11648LLU,11670LLU,1LLU),_20548c650_Range16(11680LLU,11686LLU,1LLU),_20548c650_Range16(11688LLU,11694LLU,1LLU),_20548c650_Range16(11696LLU,11702LLU,1LLU),_20548c650_Range16(11704LLU,11710LLU,1LLU),_20548c650_Range16(11712LLU,11718LLU,1LLU),_20548c650_Range16(11720LLU,11726LLU,1LLU),_20548c650_Range16(11728LLU,11734LLU,1LLU),_20548c650_Range16(11736LLU,11742LLU,1LLU),_20548c650_Range16(12294LLU,12348LLU,54LLU),_20548c650_Range16(12353LLU,12438LLU,1LLU),_20548c650_Range16(12447LLU,12449LLU,2LLU),_20548c650_Range16(12450LLU,12538LLU,1LLU),_20548c650_Range16(12543LLU,12549LLU,6LLU),_20548c650_Range16(12550LLU,12591LLU,1LLU),_20548c650_Range16(12593LLU,12686LLU,1LLU),_20548c650_Range16(12704LLU,12735LLU,1LLU),_20548c650_Range16(12784LLU,12799LLU,1LLU),_20548c650_Range16(13312LLU,19903LLU,1LLU),_20548c650_Range16(19968LLU,40980LLU,1LLU),_20548c650_Range16(40982LLU,42124LLU,1LLU),_20548c650_Range16(42192LLU,42231LLU,1LLU),_20548c650_Range16(42240LLU,42507LLU,1LLU),_20548c650_Range16(42512LLU,42527LLU,1LLU),_20548c650_Range16(42538LLU,42539LLU,1LLU),_20548c650_Range16(42606LLU,42656LLU,50LLU),_20548c650_Range16(42657LLU,42725LLU,1LLU),_20548c650_Range16(42895LLU,42999LLU,104LLU),_20548c650_Range16(43003LLU,43009LLU,1LLU),_20548c650_Range16(43011LLU,43013LLU,1LLU),_20548c650_Range16(43015LLU,43018LLU,1LLU),_20548c650_Range16(43020LLU,43042LLU,1LLU),_20548c650_Range16(43072LLU,43123LLU,1LLU),_20548c650_Range16(43138LLU,43187LLU,1LLU),_20548c650_Range16(43250LLU,43255LLU,1LLU),_20548c650_Range16(43259LLU,43261LLU,2LLU),_20548c650_Range16(43262LLU,43274LLU,12LLU),_20548c650_Range16(43275LLU,43301LLU,1LLU),_20548c650_Range16(43312LLU,43334LLU,1LLU),_20548c650_Range16(43360LLU,43388LLU,1LLU),_20548c650_Range16(43396LLU,43442LLU,1LLU),_20548c650_Range16(43488LLU,43492LLU,1LLU),_20548c650_Range16(43495LLU,43503LLU,1LLU),_20548c650_Range16(43514LLU,43518LLU,1LLU),_20548c650_Range16(43520LLU,43560LLU,1LLU),_20548c650_Range16(43584LLU,43586LLU,1LLU),_20548c650_Range16(43588LLU,43595LLU,1LLU),_20548c650_Range16(43616LLU,43631LLU,1LLU),_20548c650_Range16(43633LLU,43638LLU,1LLU),_20548c650_Range16(43642LLU,43646LLU,4LLU),_20548c650_Range16(43647LLU,43695LLU,1LLU),_20548c650_Range16(43697LLU,43701LLU,4LLU),_20548c650_Range16(43702LLU,43705LLU,3LLU),_20548c650_Range16(43706LLU,43709LLU,1LLU),_20548c650_Range16(43712LLU,43714LLU,2LLU),_20548c650_Range16(43739LLU,43740LLU,1LLU),_20548c650_Range16(43744LLU,43754LLU,1LLU),_20548c650_Range16(43762LLU,43777LLU,15LLU),_20548c650_Range16(43778LLU,43782LLU,1LLU),_20548c650_Range16(43785LLU,43790LLU,1LLU),_20548c650_Range16(43793LLU,43798LLU,1LLU),_20548c650_Range16(43808LLU,43814LLU,1LLU),_20548c650_Range16(43816LLU,43822LLU,1LLU),_20548c650_Range16(43968LLU,44002LLU,1LLU),_20548c650_Range16(44032LLU,55203LLU,1LLU),_20548c650_Range16(55216LLU,55238LLU,1LLU),_20548c650_Range16(55243LLU,55291LLU,1LLU),_20548c650_Range16(63744LLU,64109LLU,1LLU),_20548c650_Range16(64112LLU,64217LLU,1LLU),_20548c650_Range16(64285LLU,64287LLU,2LLU),_20548c650_Range16(64288LLU,64296LLU,1LLU),_20548c650_Range16(64298LLU,64310LLU,1LLU),_20548c650_Range16(64312LLU,64316LLU,1LLU),_20548c650_Range16(64318LLU,64320LLU,2LLU),_20548c650_Range16(64321LLU,64323LLU,2LLU),_20548c650_Range16(64324LLU,64326LLU,2LLU),_20548c650_Range16(64327LLU,64433LLU,1LLU),_20548c650_Range16(64467LLU,64829LLU,1LLU),_20548c650_Range16(64848LLU,64911LLU,1LLU),_20548c650_Range16(64914LLU,64967LLU,1LLU),_20548c650_Range16(65008LLU,65019LLU,1LLU),_20548c650_Range16(65136LLU,65140LLU,1LLU),_20548c650_Range16(65142LLU,65276LLU,1LLU),_20548c650_Range16(65382LLU,65391LLU,1LLU),_20548c650_Range16(65393LLU,65437LLU,1LLU),_20548c650_Range16(65440LLU,65470LLU,1LLU),_20548c650_Range16(65474LLU,65479LLU,1LLU),_20548c650_Range16(65482LLU,65487LLU,1LLU),_20548c650_Range16(65490LLU,65495LLU,1LLU),_20548c650_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(65536LLU,65547LLU,1LLU),_20548c650_Range32(65549LLU,65574LLU,1LLU),_20548c650_Range32(65576LLU,65594LLU,1LLU),_20548c650_Range32(65596LLU,65597LLU,1LLU),_20548c650_Range32(65599LLU,65613LLU,1LLU),_20548c650_Range32(65616LLU,65629LLU,1LLU),_20548c650_Range32(65664LLU,65786LLU,1LLU),_20548c650_Range32(66176LLU,66204LLU,1LLU),_20548c650_Range32(66208LLU,66256LLU,1LLU),_20548c650_Range32(66304LLU,66335LLU,1LLU),_20548c650_Range32(66349LLU,66368LLU,1LLU),_20548c650_Range32(66370LLU,66377LLU,1LLU),_20548c650_Range32(66384LLU,66421LLU,1LLU),_20548c650_Range32(66432LLU,66461LLU,1LLU),_20548c650_Range32(66464LLU,66499LLU,1LLU),_20548c650_Range32(66504LLU,66511LLU,1LLU),_20548c650_Range32(66640LLU,66717LLU,1LLU),_20548c650_Range32(66816LLU,66855LLU,1LLU),_20548c650_Range32(66864LLU,66915LLU,1LLU),_20548c650_Range32(67072LLU,67382LLU,1LLU),_20548c650_Range32(67392LLU,67413LLU,1LLU),_20548c650_Range32(67424LLU,67431LLU,1LLU),_20548c650_Range32(67584LLU,67589LLU,1LLU),_20548c650_Range32(67592LLU,67594LLU,2LLU),_20548c650_Range32(67595LLU,67637LLU,1LLU),_20548c650_Range32(67639LLU,67640LLU,1LLU),_20548c650_Range32(67644LLU,67647LLU,3LLU),_20548c650_Range32(67648LLU,67669LLU,1LLU),_20548c650_Range32(67680LLU,67702LLU,1LLU),_20548c650_Range32(67712LLU,67742LLU,1LLU),_20548c650_Range32(67808LLU,67826LLU,1LLU),_20548c650_Range32(67828LLU,67829LLU,1LLU),_20548c650_Range32(67840LLU,67861LLU,1LLU),_20548c650_Range32(67872LLU,67897LLU,1LLU),_20548c650_Range32(67968LLU,68023LLU,1LLU),_20548c650_Range32(68030LLU,68031LLU,1LLU),_20548c650_Range32(68096LLU,68112LLU,16LLU),_20548c650_Range32(68113LLU,68115LLU,1LLU),_20548c650_Range32(68117LLU,68119LLU,1LLU),_20548c650_Range32(68121LLU,68149LLU,1LLU),_20548c650_Range32(68192LLU,68220LLU,1LLU),_20548c650_Range32(68224LLU,68252LLU,1LLU),_20548c650_Range32(68288LLU,68295LLU,1LLU),_20548c650_Range32(68297LLU,68324LLU,1LLU),_20548c650_Range32(68352LLU,68405LLU,1LLU),_20548c650_Range32(68416LLU,68437LLU,1LLU),_20548c650_Range32(68448LLU,68466LLU,1LLU),_20548c650_Range32(68480LLU,68497LLU,1LLU),_20548c650_Range32(68608LLU,68680LLU,1LLU),_20548c650_Range32(68864LLU,68899LLU,1LLU),_20548c650_Range32(69248LLU,69289LLU,1LLU),_20548c650_Range32(69296LLU,69297LLU,1LLU),_20548c650_Range32(69376LLU,69404LLU,1LLU),_20548c650_Range32(69415LLU,69424LLU,9LLU),_20548c650_Range32(69425LLU,69445LLU,1LLU),_20548c650_Range32(69488LLU,69505LLU,1LLU),_20548c650_Range32(69552LLU,69572LLU,1LLU),_20548c650_Range32(69600LLU,69622LLU,1LLU),_20548c650_Range32(69635LLU,69687LLU,1LLU),_20548c650_Range32(69745LLU,69746LLU,1LLU),_20548c650_Range32(69749LLU,69763LLU,14LLU),_20548c650_Range32(69764LLU,69807LLU,1LLU),_20548c650_Range32(69840LLU,69864LLU,1LLU),_20548c650_Range32(69891LLU,69926LLU,1LLU),_20548c650_Range32(69956LLU,69959LLU,3LLU),_20548c650_Range32(69968LLU,70002LLU,1LLU),_20548c650_Range32(70006LLU,70019LLU,13LLU),_20548c650_Range32(70020LLU,70066LLU,1LLU),_20548c650_Range32(70081LLU,70084LLU,1LLU),_20548c650_Range32(70106LLU,70108LLU,2LLU),_20548c650_Range32(70144LLU,70161LLU,1LLU),_20548c650_Range32(70163LLU,70187LLU,1LLU),_20548c650_Range32(70207LLU,70208LLU,1LLU),_20548c650_Range32(70272LLU,70278LLU,1LLU),_20548c650_Range32(70280LLU,70282LLU,2LLU),_20548c650_Range32(70283LLU,70285LLU,1LLU),_20548c650_Range32(70287LLU,70301LLU,1LLU),_20548c650_Range32(70303LLU,70312LLU,1LLU),_20548c650_Range32(70320LLU,70366LLU,1LLU),_20548c650_Range32(70405LLU,70412LLU,1LLU),_20548c650_Range32(70415LLU,70416LLU,1LLU),_20548c650_Range32(70419LLU,70440LLU,1LLU),_20548c650_Range32(70442LLU,70448LLU,1LLU),_20548c650_Range32(70450LLU,70451LLU,1LLU),_20548c650_Range32(70453LLU,70457LLU,1LLU),_20548c650_Range32(70461LLU,70480LLU,19LLU),_20548c650_Range32(70493LLU,70497LLU,1LLU),_20548c650_Range32(70656LLU,70708LLU,1LLU),_20548c650_Range32(70727LLU,70730LLU,1LLU),_20548c650_Range32(70751LLU,70753LLU,1LLU),_20548c650_Range32(70784LLU,70831LLU,1LLU),_20548c650_Range32(70852LLU,70853LLU,1LLU),_20548c650_Range32(70855LLU,71040LLU,185LLU),_20548c650_Range32(71041LLU,71086LLU,1LLU),_20548c650_Range32(71128LLU,71131LLU,1LLU),_20548c650_Range32(71168LLU,71215LLU,1LLU),_20548c650_Range32(71236LLU,71296LLU,60LLU),_20548c650_Range32(71297LLU,71338LLU,1LLU),_20548c650_Range32(71352LLU,71424LLU,72LLU),_20548c650_Range32(71425LLU,71450LLU,1LLU),_20548c650_Range32(71488LLU,71494LLU,1LLU),_20548c650_Range32(71680LLU,71723LLU,1LLU),_20548c650_Range32(71935LLU,71942LLU,1LLU),_20548c650_Range32(71945LLU,71948LLU,3LLU),_20548c650_Range32(71949LLU,71955LLU,1LLU),_20548c650_Range32(71957LLU,71958LLU,1LLU),_20548c650_Range32(71960LLU,71983LLU,1LLU),_20548c650_Range32(71999LLU,72001LLU,2LLU),_20548c650_Range32(72096LLU,72103LLU,1LLU),_20548c650_Range32(72106LLU,72144LLU,1LLU),_20548c650_Range32(72161LLU,72163LLU,2LLU),_20548c650_Range32(72192LLU,72203LLU,11LLU),_20548c650_Range32(72204LLU,72242LLU,1LLU),_20548c650_Range32(72250LLU,72272LLU,22LLU),_20548c650_Range32(72284LLU,72329LLU,1LLU),_20548c650_Range32(72349LLU,72368LLU,19LLU),_20548c650_Range32(72369LLU,72440LLU,1LLU),_20548c650_Range32(72704LLU,72712LLU,1LLU),_20548c650_Range32(72714LLU,72750LLU,1LLU),_20548c650_Range32(72768LLU,72818LLU,50LLU),_20548c650_Range32(72819LLU,72847LLU,1LLU),_20548c650_Range32(72960LLU,72966LLU,1LLU),_20548c650_Range32(72968LLU,72969LLU,1LLU),_20548c650_Range32(72971LLU,73008LLU,1LLU),_20548c650_Range32(73030LLU,73056LLU,26LLU),_20548c650_Range32(73057LLU,73061LLU,1LLU),_20548c650_Range32(73063LLU,73064LLU,1LLU),_20548c650_Range32(73066LLU,73097LLU,1LLU),_20548c650_Range32(73112LLU,73440LLU,328LLU),_20548c650_Range32(73441LLU,73458LLU,1LLU),_20548c650_Range32(73474LLU,73476LLU,2LLU),_20548c650_Range32(73477LLU,73488LLU,1LLU),_20548c650_Range32(73490LLU,73523LLU,1LLU),_20548c650_Range32(73648LLU,73728LLU,80LLU),_20548c650_Range32(73729LLU,74649LLU,1LLU),_20548c650_Range32(74880LLU,75075LLU,1LLU),_20548c650_Range32(77712LLU,77808LLU,1LLU),_20548c650_Range32(77824LLU,78895LLU,1LLU),_20548c650_Range32(78913LLU,78918LLU,1LLU),_20548c650_Range32(82944LLU,83526LLU,1LLU),_20548c650_Range32(92160LLU,92728LLU,1LLU),_20548c650_Range32(92736LLU,92766LLU,1LLU),_20548c650_Range32(92784LLU,92862LLU,1LLU),_20548c650_Range32(92880LLU,92909LLU,1LLU),_20548c650_Range32(92928LLU,92975LLU,1LLU),_20548c650_Range32(93027LLU,93047LLU,1LLU),_20548c650_Range32(93053LLU,93071LLU,1LLU),_20548c650_Range32(93952LLU,94026LLU,1LLU),_20548c650_Range32(94032LLU,94208LLU,176LLU),_20548c650_Range32(94209LLU,100343LLU,1LLU),_20548c650_Range32(100352LLU,101589LLU,1LLU),_20548c650_Range32(101632LLU,101640LLU,1LLU),_20548c650_Range32(110592LLU,110882LLU,1LLU),_20548c650_Range32(110898LLU,110928LLU,30LLU),_20548c650_Range32(110929LLU,110930LLU,1LLU),_20548c650_Range32(110933LLU,110948LLU,15LLU),_20548c650_Range32(110949LLU,110951LLU,1LLU),_20548c650_Range32(110960LLU,111355LLU,1LLU),_20548c650_Range32(113664LLU,113770LLU,1LLU),_20548c650_Range32(113776LLU,113788LLU,1LLU),_20548c650_Range32(113792LLU,113800LLU,1LLU),_20548c650_Range32(113808LLU,113817LLU,1LLU),_20548c650_Range32(122634LLU,123136LLU,502LLU),_20548c650_Range32(123137LLU,123180LLU,1LLU),_20548c650_Range32(123214LLU,123536LLU,322LLU),_20548c650_Range32(123537LLU,123565LLU,1LLU),_20548c650_Range32(123584LLU,123627LLU,1LLU),_20548c650_Range32(124112LLU,124138LLU,1LLU),_20548c650_Range32(124896LLU,124902LLU,1LLU),_20548c650_Range32(124904LLU,124907LLU,1LLU),_20548c650_Range32(124909LLU,124910LLU,1LLU),_20548c650_Range32(124912LLU,124926LLU,1LLU),_20548c650_Range32(124928LLU,125124LLU,1LLU),_20548c650_Range32(126464LLU,126467LLU,1LLU),_20548c650_Range32(126469LLU,126495LLU,1LLU),_20548c650_Range32(126497LLU,126498LLU,1LLU),_20548c650_Range32(126500LLU,126503LLU,3LLU),_20548c650_Range32(126505LLU,126514LLU,1LLU),_20548c650_Range32(126516LLU,126519LLU,1LLU),_20548c650_Range32(126521LLU,126523LLU,2LLU),_20548c650_Range32(126530LLU,126535LLU,5LLU),_20548c650_Range32(126537LLU,126541LLU,2LLU),_20548c650_Range32(126542LLU,126543LLU,1LLU),_20548c650_Range32(126545LLU,126546LLU,1LLU),_20548c650_Range32(126548LLU,126551LLU,3LLU),_20548c650_Range32(126553LLU,126561LLU,2LLU),_20548c650_Range32(126562LLU,126564LLU,2LLU),_20548c650_Range32(126567LLU,126570LLU,1LLU),_20548c650_Range32(126572LLU,126578LLU,1LLU),_20548c650_Range32(126580LLU,126583LLU,1LLU),_20548c650_Range32(126585LLU,126588LLU,1LLU),_20548c650_Range32(126590LLU,126592LLU,2LLU),_20548c650_Range32(126593LLU,126601LLU,1LLU),_20548c650_Range32(126603LLU,126619LLU,1LLU),_20548c650_Range32(126625LLU,126627LLU,1LLU),_20548c650_Range32(126629LLU,126633LLU,1LLU),_20548c650_Range32(126635LLU,126651LLU,1LLU),_20548c650_Range32(131072LLU,173791LLU,1LLU),_20548c650_Range32(173824LLU,177977LLU,1LLU),_20548c650_Range32(177984LLU,178205LLU,1LLU),_20548c650_Range32(178208LLU,183969LLU,1LLU),_20548c650_Range32(183984LLU,191456LLU,1LLU),_20548c650_Range32(194560LLU,195101LLU,1LLU),_20548c650_Range32(196608LLU,201546LLU,1LLU),_20548c650_Range32(201552LLU,205743LLU,1LLU)}),1LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LT = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(453LLU,459LLU,3LLU),_20548c650_Range16(498LLU,8072LLU,7574LLU),_20548c650_Range16(8073LLU,8079LLU,1LLU),_20548c650_Range16(8088LLU,8095LLU,1LLU),_20548c650_Range16(8104LLU,8111LLU,1LLU),_20548c650_Range16(8124LLU,8140LLU,16LLU),_20548c650_Range16(8188LLU,8188LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LU = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(65LLU,90LLU,1LLU),_20548c650_Range16(192LLU,214LLU,1LLU),_20548c650_Range16(216LLU,222LLU,1LLU),_20548c650_Range16(256LLU,310LLU,2LLU),_20548c650_Range16(313LLU,327LLU,2LLU),_20548c650_Range16(330LLU,376LLU,2LLU),_20548c650_Range16(377LLU,381LLU,2LLU),_20548c650_Range16(385LLU,386LLU,1LLU),_20548c650_Range16(388LLU,390LLU,2LLU),_20548c650_Range16(391LLU,393LLU,2LLU),_20548c650_Range16(394LLU,395LLU,1LLU),_20548c650_Range16(398LLU,401LLU,1LLU),_20548c650_Range16(403LLU,404LLU,1LLU),_20548c650_Range16(406LLU,408LLU,1LLU),_20548c650_Range16(412LLU,413LLU,1LLU),_20548c650_Range16(415LLU,416LLU,1LLU),_20548c650_Range16(418LLU,422LLU,2LLU),_20548c650_Range16(423LLU,425LLU,2LLU),_20548c650_Range16(428LLU,430LLU,2LLU),_20548c650_Range16(431LLU,433LLU,2LLU),_20548c650_Range16(434LLU,435LLU,1LLU),_20548c650_Range16(437LLU,439LLU,2LLU),_20548c650_Range16(440LLU,444LLU,4LLU),_20548c650_Range16(452LLU,461LLU,3LLU),_20548c650_Range16(463LLU,475LLU,2LLU),_20548c650_Range16(478LLU,494LLU,2LLU),_20548c650_Range16(497LLU,500LLU,3LLU),_20548c650_Range16(502LLU,504LLU,1LLU),_20548c650_Range16(506LLU,562LLU,2LLU),_20548c650_Range16(570LLU,571LLU,1LLU),_20548c650_Range16(573LLU,574LLU,1LLU),_20548c650_Range16(577LLU,579LLU,2LLU),_20548c650_Range16(580LLU,582LLU,1LLU),_20548c650_Range16(584LLU,590LLU,2LLU),_20548c650_Range16(880LLU,882LLU,2LLU),_20548c650_Range16(886LLU,895LLU,9LLU),_20548c650_Range16(902LLU,904LLU,2LLU),_20548c650_Range16(905LLU,906LLU,1LLU),_20548c650_Range16(908LLU,910LLU,2LLU),_20548c650_Range16(911LLU,913LLU,2LLU),_20548c650_Range16(914LLU,929LLU,1LLU),_20548c650_Range16(931LLU,939LLU,1LLU),_20548c650_Range16(975LLU,978LLU,3LLU),_20548c650_Range16(979LLU,980LLU,1LLU),_20548c650_Range16(984LLU,1006LLU,2LLU),_20548c650_Range16(1012LLU,1015LLU,3LLU),_20548c650_Range16(1017LLU,1018LLU,1LLU),_20548c650_Range16(1021LLU,1071LLU,1LLU),_20548c650_Range16(1120LLU,1152LLU,2LLU),_20548c650_Range16(1162LLU,1216LLU,2LLU),_20548c650_Range16(1217LLU,1229LLU,2LLU),_20548c650_Range16(1232LLU,1326LLU,2LLU),_20548c650_Range16(1329LLU,1366LLU,1LLU),_20548c650_Range16(4256LLU,4293LLU,1LLU),_20548c650_Range16(4295LLU,4301LLU,6LLU),_20548c650_Range16(5024LLU,5109LLU,1LLU),_20548c650_Range16(7312LLU,7354LLU,1LLU),_20548c650_Range16(7357LLU,7359LLU,1LLU),_20548c650_Range16(7680LLU,7828LLU,2LLU),_20548c650_Range16(7838LLU,7934LLU,2LLU),_20548c650_Range16(7944LLU,7951LLU,1LLU),_20548c650_Range16(7960LLU,7965LLU,1LLU),_20548c650_Range16(7976LLU,7983LLU,1LLU),_20548c650_Range16(7992LLU,7999LLU,1LLU),_20548c650_Range16(8008LLU,8013LLU,1LLU),_20548c650_Range16(8025LLU,8031LLU,2LLU),_20548c650_Range16(8040LLU,8047LLU,1LLU),_20548c650_Range16(8120LLU,8123LLU,1LLU),_20548c650_Range16(8136LLU,8139LLU,1LLU),_20548c650_Range16(8152LLU,8155LLU,1LLU),_20548c650_Range16(8168LLU,8172LLU,1LLU),_20548c650_Range16(8184LLU,8187LLU,1LLU),_20548c650_Range16(8450LLU,8455LLU,5LLU),_20548c650_Range16(8459LLU,8461LLU,1LLU),_20548c650_Range16(8464LLU,8466LLU,1LLU),_20548c650_Range16(8469LLU,8473LLU,4LLU),_20548c650_Range16(8474LLU,8477LLU,1LLU),_20548c650_Range16(8484LLU,8490LLU,2LLU),_20548c650_Range16(8491LLU,8493LLU,1LLU),_20548c650_Range16(8496LLU,8499LLU,1LLU),_20548c650_Range16(8510LLU,8511LLU,1LLU),_20548c650_Range16(8517LLU,8579LLU,62LLU),_20548c650_Range16(11264LLU,11311LLU,1LLU),_20548c650_Range16(11360LLU,11362LLU,2LLU),_20548c650_Range16(11363LLU,11364LLU,1LLU),_20548c650_Range16(11367LLU,11373LLU,2LLU),_20548c650_Range16(11374LLU,11376LLU,1LLU),_20548c650_Range16(11378LLU,11381LLU,3LLU),_20548c650_Range16(11390LLU,11392LLU,1LLU),_20548c650_Range16(11394LLU,11490LLU,2LLU),_20548c650_Range16(11499LLU,11501LLU,2LLU),_20548c650_Range16(11506LLU,42560LLU,31054LLU),_20548c650_Range16(42562LLU,42604LLU,2LLU),_20548c650_Range16(42624LLU,42650LLU,2LLU),_20548c650_Range16(42786LLU,42798LLU,2LLU),_20548c650_Range16(42802LLU,42862LLU,2LLU),_20548c650_Range16(42873LLU,42877LLU,2LLU),_20548c650_Range16(42878LLU,42886LLU,2LLU),_20548c650_Range16(42891LLU,42893LLU,2LLU),_20548c650_Range16(42896LLU,42898LLU,2LLU),_20548c650_Range16(42902LLU,42922LLU,2LLU),_20548c650_Range16(42923LLU,42926LLU,1LLU),_20548c650_Range16(42928LLU,42932LLU,1LLU),_20548c650_Range16(42934LLU,42948LLU,2LLU),_20548c650_Range16(42949LLU,42951LLU,1LLU),_20548c650_Range16(42953LLU,42960LLU,7LLU),_20548c650_Range16(42966LLU,42968LLU,2LLU),_20548c650_Range16(42997LLU,65313LLU,22316LLU),_20548c650_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66560LLU,66599LLU,1LLU),_20548c650_Range32(66736LLU,66771LLU,1LLU),_20548c650_Range32(66928LLU,66938LLU,1LLU),_20548c650_Range32(66940LLU,66954LLU,1LLU),_20548c650_Range32(66956LLU,66962LLU,1LLU),_20548c650_Range32(66964LLU,66965LLU,1LLU),_20548c650_Range32(68736LLU,68786LLU,1LLU),_20548c650_Range32(71840LLU,71871LLU,1LLU),_20548c650_Range32(93760LLU,93791LLU,1LLU),_20548c650_Range32(119808LLU,119833LLU,1LLU),_20548c650_Range32(119860LLU,119885LLU,1LLU),_20548c650_Range32(119912LLU,119937LLU,1LLU),_20548c650_Range32(119964LLU,119966LLU,2LLU),_20548c650_Range32(119967LLU,119973LLU,3LLU),_20548c650_Range32(119974LLU,119977LLU,3LLU),_20548c650_Range32(119978LLU,119980LLU,1LLU),_20548c650_Range32(119982LLU,119989LLU,1LLU),_20548c650_Range32(120016LLU,120041LLU,1LLU),_20548c650_Range32(120068LLU,120069LLU,1LLU),_20548c650_Range32(120071LLU,120074LLU,1LLU),_20548c650_Range32(120077LLU,120084LLU,1LLU),_20548c650_Range32(120086LLU,120092LLU,1LLU),_20548c650_Range32(120120LLU,120121LLU,1LLU),_20548c650_Range32(120123LLU,120126LLU,1LLU),_20548c650_Range32(120128LLU,120132LLU,1LLU),_20548c650_Range32(120134LLU,120138LLU,4LLU),_20548c650_Range32(120139LLU,120144LLU,1LLU),_20548c650_Range32(120172LLU,120197LLU,1LLU),_20548c650_Range32(120224LLU,120249LLU,1LLU),_20548c650_Range32(120276LLU,120301LLU,1LLU),_20548c650_Range32(120328LLU,120353LLU,1LLU),_20548c650_Range32(120380LLU,120405LLU,1LLU),_20548c650_Range32(120432LLU,120457LLU,1LLU),_20548c650_Range32(120488LLU,120512LLU,1LLU),_20548c650_Range32(120546LLU,120570LLU,1LLU),_20548c650_Range32(120604LLU,120628LLU,1LLU),_20548c650_Range32(120662LLU,120686LLU,1LLU),_20548c650_Range32(120720LLU,120744LLU,1LLU),_20548c650_Range32(120778LLU,125184LLU,4406LLU),_20548c650_Range32(125185LLU,125217LLU,1LLU)}),3LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__M = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(768LLU,879LLU,1LLU),_20548c650_Range16(1155LLU,1161LLU,1LLU),_20548c650_Range16(1425LLU,1469LLU,1LLU),_20548c650_Range16(1471LLU,1473LLU,2LLU),_20548c650_Range16(1474LLU,1476LLU,2LLU),_20548c650_Range16(1477LLU,1479LLU,2LLU),_20548c650_Range16(1552LLU,1562LLU,1LLU),_20548c650_Range16(1611LLU,1631LLU,1LLU),_20548c650_Range16(1648LLU,1750LLU,102LLU),_20548c650_Range16(1751LLU,1756LLU,1LLU),_20548c650_Range16(1759LLU,1764LLU,1LLU),_20548c650_Range16(1767LLU,1768LLU,1LLU),_20548c650_Range16(1770LLU,1773LLU,1LLU),_20548c650_Range16(1809LLU,1840LLU,31LLU),_20548c650_Range16(1841LLU,1866LLU,1LLU),_20548c650_Range16(1958LLU,1968LLU,1LLU),_20548c650_Range16(2027LLU,2035LLU,1LLU),_20548c650_Range16(2045LLU,2070LLU,25LLU),_20548c650_Range16(2071LLU,2073LLU,1LLU),_20548c650_Range16(2075LLU,2083LLU,1LLU),_20548c650_Range16(2085LLU,2087LLU,1LLU),_20548c650_Range16(2089LLU,2093LLU,1LLU),_20548c650_Range16(2137LLU,2139LLU,1LLU),_20548c650_Range16(2200LLU,2207LLU,1LLU),_20548c650_Range16(2250LLU,2273LLU,1LLU),_20548c650_Range16(2275LLU,2307LLU,1LLU),_20548c650_Range16(2362LLU,2364LLU,1LLU),_20548c650_Range16(2366LLU,2383LLU,1LLU),_20548c650_Range16(2385LLU,2391LLU,1LLU),_20548c650_Range16(2402LLU,2403LLU,1LLU),_20548c650_Range16(2433LLU,2435LLU,1LLU),_20548c650_Range16(2492LLU,2494LLU,2LLU),_20548c650_Range16(2495LLU,2500LLU,1LLU),_20548c650_Range16(2503LLU,2504LLU,1LLU),_20548c650_Range16(2507LLU,2509LLU,1LLU),_20548c650_Range16(2519LLU,2530LLU,11LLU),_20548c650_Range16(2531LLU,2558LLU,27LLU),_20548c650_Range16(2561LLU,2563LLU,1LLU),_20548c650_Range16(2620LLU,2622LLU,2LLU),_20548c650_Range16(2623LLU,2626LLU,1LLU),_20548c650_Range16(2631LLU,2632LLU,1LLU),_20548c650_Range16(2635LLU,2637LLU,1LLU),_20548c650_Range16(2641LLU,2672LLU,31LLU),_20548c650_Range16(2673LLU,2677LLU,4LLU),_20548c650_Range16(2689LLU,2691LLU,1LLU),_20548c650_Range16(2748LLU,2750LLU,2LLU),_20548c650_Range16(2751LLU,2757LLU,1LLU),_20548c650_Range16(2759LLU,2761LLU,1LLU),_20548c650_Range16(2763LLU,2765LLU,1LLU),_20548c650_Range16(2786LLU,2787LLU,1LLU),_20548c650_Range16(2810LLU,2815LLU,1LLU),_20548c650_Range16(2817LLU,2819LLU,1LLU),_20548c650_Range16(2876LLU,2878LLU,2LLU),_20548c650_Range16(2879LLU,2884LLU,1LLU),_20548c650_Range16(2887LLU,2888LLU,1LLU),_20548c650_Range16(2891LLU,2893LLU,1LLU),_20548c650_Range16(2901LLU,2903LLU,1LLU),_20548c650_Range16(2914LLU,2915LLU,1LLU),_20548c650_Range16(2946LLU,3006LLU,60LLU),_20548c650_Range16(3007LLU,3010LLU,1LLU),_20548c650_Range16(3014LLU,3016LLU,1LLU),_20548c650_Range16(3018LLU,3021LLU,1LLU),_20548c650_Range16(3031LLU,3072LLU,41LLU),_20548c650_Range16(3073LLU,3076LLU,1LLU),_20548c650_Range16(3132LLU,3134LLU,2LLU),_20548c650_Range16(3135LLU,3140LLU,1LLU),_20548c650_Range16(3142LLU,3144LLU,1LLU),_20548c650_Range16(3146LLU,3149LLU,1LLU),_20548c650_Range16(3157LLU,3158LLU,1LLU),_20548c650_Range16(3170LLU,3171LLU,1LLU),_20548c650_Range16(3201LLU,3203LLU,1LLU),_20548c650_Range16(3260LLU,3262LLU,2LLU),_20548c650_Range16(3263LLU,3268LLU,1LLU),_20548c650_Range16(3270LLU,3272LLU,1LLU),_20548c650_Range16(3274LLU,3277LLU,1LLU),_20548c650_Range16(3285LLU,3286LLU,1LLU),_20548c650_Range16(3298LLU,3299LLU,1LLU),_20548c650_Range16(3315LLU,3328LLU,13LLU),_20548c650_Range16(3329LLU,3331LLU,1LLU),_20548c650_Range16(3387LLU,3388LLU,1LLU),_20548c650_Range16(3390LLU,3396LLU,1LLU),_20548c650_Range16(3398LLU,3400LLU,1LLU),_20548c650_Range16(3402LLU,3405LLU,1LLU),_20548c650_Range16(3415LLU,3426LLU,11LLU),_20548c650_Range16(3427LLU,3457LLU,30LLU),_20548c650_Range16(3458LLU,3459LLU,1LLU),_20548c650_Range16(3530LLU,3535LLU,5LLU),_20548c650_Range16(3536LLU,3540LLU,1LLU),_20548c650_Range16(3542LLU,3544LLU,2LLU),_20548c650_Range16(3545LLU,3551LLU,1LLU),_20548c650_Range16(3570LLU,3571LLU,1LLU),_20548c650_Range16(3633LLU,3636LLU,3LLU),_20548c650_Range16(3637LLU,3642LLU,1LLU),_20548c650_Range16(3655LLU,3662LLU,1LLU),_20548c650_Range16(3761LLU,3764LLU,3LLU),_20548c650_Range16(3765LLU,3772LLU,1LLU),_20548c650_Range16(3784LLU,3790LLU,1LLU),_20548c650_Range16(3864LLU,3865LLU,1LLU),_20548c650_Range16(3893LLU,3897LLU,2LLU),_20548c650_Range16(3902LLU,3903LLU,1LLU),_20548c650_Range16(3953LLU,3972LLU,1LLU),_20548c650_Range16(3974LLU,3975LLU,1LLU),_20548c650_Range16(3981LLU,3991LLU,1LLU),_20548c650_Range16(3993LLU,4028LLU,1LLU),_20548c650_Range16(4038LLU,4139LLU,101LLU),_20548c650_Range16(4140LLU,4158LLU,1LLU),_20548c650_Range16(4182LLU,4185LLU,1LLU),_20548c650_Range16(4190LLU,4192LLU,1LLU),_20548c650_Range16(4194LLU,4196LLU,1LLU),_20548c650_Range16(4199LLU,4205LLU,1LLU),_20548c650_Range16(4209LLU,4212LLU,1LLU),_20548c650_Range16(4226LLU,4237LLU,1LLU),_20548c650_Range16(4239LLU,4250LLU,11LLU),_20548c650_Range16(4251LLU,4253LLU,1LLU),_20548c650_Range16(4957LLU,4959LLU,1LLU),_20548c650_Range16(5906LLU,5909LLU,1LLU),_20548c650_Range16(5938LLU,5940LLU,1LLU),_20548c650_Range16(5970LLU,5971LLU,1LLU),_20548c650_Range16(6002LLU,6003LLU,1LLU),_20548c650_Range16(6068LLU,6099LLU,1LLU),_20548c650_Range16(6109LLU,6155LLU,46LLU),_20548c650_Range16(6156LLU,6157LLU,1LLU),_20548c650_Range16(6159LLU,6277LLU,118LLU),_20548c650_Range16(6278LLU,6313LLU,35LLU),_20548c650_Range16(6432LLU,6443LLU,1LLU),_20548c650_Range16(6448LLU,6459LLU,1LLU),_20548c650_Range16(6679LLU,6683LLU,1LLU),_20548c650_Range16(6741LLU,6750LLU,1LLU),_20548c650_Range16(6752LLU,6780LLU,1LLU),_20548c650_Range16(6783LLU,6832LLU,49LLU),_20548c650_Range16(6833LLU,6862LLU,1LLU),_20548c650_Range16(6912LLU,6916LLU,1LLU),_20548c650_Range16(6964LLU,6980LLU,1LLU),_20548c650_Range16(7019LLU,7027LLU,1LLU),_20548c650_Range16(7040LLU,7042LLU,1LLU),_20548c650_Range16(7073LLU,7085LLU,1LLU),_20548c650_Range16(7142LLU,7155LLU,1LLU),_20548c650_Range16(7204LLU,7223LLU,1LLU),_20548c650_Range16(7376LLU,7378LLU,1LLU),_20548c650_Range16(7380LLU,7400LLU,1LLU),_20548c650_Range16(7405LLU,7412LLU,7LLU),_20548c650_Range16(7415LLU,7417LLU,1LLU),_20548c650_Range16(7616LLU,7679LLU,1LLU),_20548c650_Range16(8400LLU,8432LLU,1LLU),_20548c650_Range16(11503LLU,11505LLU,1LLU),_20548c650_Range16(11647LLU,11744LLU,97LLU),_20548c650_Range16(11745LLU,11775LLU,1LLU),_20548c650_Range16(12330LLU,12335LLU,1LLU),_20548c650_Range16(12441LLU,12442LLU,1LLU),_20548c650_Range16(42607LLU,42610LLU,1LLU),_20548c650_Range16(42612LLU,42621LLU,1LLU),_20548c650_Range16(42654LLU,42655LLU,1LLU),_20548c650_Range16(42736LLU,42737LLU,1LLU),_20548c650_Range16(43010LLU,43014LLU,4LLU),_20548c650_Range16(43019LLU,43043LLU,24LLU),_20548c650_Range16(43044LLU,43047LLU,1LLU),_20548c650_Range16(43052LLU,43136LLU,84LLU),_20548c650_Range16(43137LLU,43188LLU,51LLU),_20548c650_Range16(43189LLU,43205LLU,1LLU),_20548c650_Range16(43232LLU,43249LLU,1LLU),_20548c650_Range16(43263LLU,43302LLU,39LLU),_20548c650_Range16(43303LLU,43309LLU,1LLU),_20548c650_Range16(43335LLU,43347LLU,1LLU),_20548c650_Range16(43392LLU,43395LLU,1LLU),_20548c650_Range16(43443LLU,43456LLU,1LLU),_20548c650_Range16(43493LLU,43561LLU,68LLU),_20548c650_Range16(43562LLU,43574LLU,1LLU),_20548c650_Range16(43587LLU,43596LLU,9LLU),_20548c650_Range16(43597LLU,43643LLU,46LLU),_20548c650_Range16(43644LLU,43645LLU,1LLU),_20548c650_Range16(43696LLU,43698LLU,2LLU),_20548c650_Range16(43699LLU,43700LLU,1LLU),_20548c650_Range16(43703LLU,43704LLU,1LLU),_20548c650_Range16(43710LLU,43711LLU,1LLU),_20548c650_Range16(43713LLU,43755LLU,42LLU),_20548c650_Range16(43756LLU,43759LLU,1LLU),_20548c650_Range16(43765LLU,43766LLU,1LLU),_20548c650_Range16(44003LLU,44010LLU,1LLU),_20548c650_Range16(44012LLU,44013LLU,1LLU),_20548c650_Range16(64286LLU,65024LLU,738LLU),_20548c650_Range16(65025LLU,65039LLU,1LLU),_20548c650_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66045LLU,66272LLU,227LLU),_20548c650_Range32(66422LLU,66426LLU,1LLU),_20548c650_Range32(68097LLU,68099LLU,1LLU),_20548c650_Range32(68101LLU,68102LLU,1LLU),_20548c650_Range32(68108LLU,68111LLU,1LLU),_20548c650_Range32(68152LLU,68154LLU,1LLU),_20548c650_Range32(68159LLU,68325LLU,166LLU),_20548c650_Range32(68326LLU,68900LLU,574LLU),_20548c650_Range32(68901LLU,68903LLU,1LLU),_20548c650_Range32(69291LLU,69292LLU,1LLU),_20548c650_Range32(69373LLU,69375LLU,1LLU),_20548c650_Range32(69446LLU,69456LLU,1LLU),_20548c650_Range32(69506LLU,69509LLU,1LLU),_20548c650_Range32(69632LLU,69634LLU,1LLU),_20548c650_Range32(69688LLU,69702LLU,1LLU),_20548c650_Range32(69744LLU,69747LLU,3LLU),_20548c650_Range32(69748LLU,69759LLU,11LLU),_20548c650_Range32(69760LLU,69762LLU,1LLU),_20548c650_Range32(69808LLU,69818LLU,1LLU),_20548c650_Range32(69826LLU,69888LLU,62LLU),_20548c650_Range32(69889LLU,69890LLU,1LLU),_20548c650_Range32(69927LLU,69940LLU,1LLU),_20548c650_Range32(69957LLU,69958LLU,1LLU),_20548c650_Range32(70003LLU,70016LLU,13LLU),_20548c650_Range32(70017LLU,70018LLU,1LLU),_20548c650_Range32(70067LLU,70080LLU,1LLU),_20548c650_Range32(70089LLU,70092LLU,1LLU),_20548c650_Range32(70094LLU,70095LLU,1LLU),_20548c650_Range32(70188LLU,70199LLU,1LLU),_20548c650_Range32(70206LLU,70209LLU,3LLU),_20548c650_Range32(70367LLU,70378LLU,1LLU),_20548c650_Range32(70400LLU,70403LLU,1LLU),_20548c650_Range32(70459LLU,70460LLU,1LLU),_20548c650_Range32(70462LLU,70468LLU,1LLU),_20548c650_Range32(70471LLU,70472LLU,1LLU),_20548c650_Range32(70475LLU,70477LLU,1LLU),_20548c650_Range32(70487LLU,70498LLU,11LLU),_20548c650_Range32(70499LLU,70502LLU,3LLU),_20548c650_Range32(70503LLU,70508LLU,1LLU),_20548c650_Range32(70512LLU,70516LLU,1LLU),_20548c650_Range32(70709LLU,70726LLU,1LLU),_20548c650_Range32(70750LLU,70832LLU,82LLU),_20548c650_Range32(70833LLU,70851LLU,1LLU),_20548c650_Range32(71087LLU,71093LLU,1LLU),_20548c650_Range32(71096LLU,71104LLU,1LLU),_20548c650_Range32(71132LLU,71133LLU,1LLU),_20548c650_Range32(71216LLU,71232LLU,1LLU),_20548c650_Range32(71339LLU,71351LLU,1LLU),_20548c650_Range32(71453LLU,71467LLU,1LLU),_20548c650_Range32(71724LLU,71738LLU,1LLU),_20548c650_Range32(71984LLU,71989LLU,1LLU),_20548c650_Range32(71991LLU,71992LLU,1LLU),_20548c650_Range32(71995LLU,71998LLU,1LLU),_20548c650_Range32(72000LLU,72002LLU,2LLU),_20548c650_Range32(72003LLU,72145LLU,142LLU),_20548c650_Range32(72146LLU,72151LLU,1LLU),_20548c650_Range32(72154LLU,72160LLU,1LLU),_20548c650_Range32(72164LLU,72193LLU,29LLU),_20548c650_Range32(72194LLU,72202LLU,1LLU),_20548c650_Range32(72243LLU,72249LLU,1LLU),_20548c650_Range32(72251LLU,72254LLU,1LLU),_20548c650_Range32(72263LLU,72273LLU,10LLU),_20548c650_Range32(72274LLU,72283LLU,1LLU),_20548c650_Range32(72330LLU,72345LLU,1LLU),_20548c650_Range32(72751LLU,72758LLU,1LLU),_20548c650_Range32(72760LLU,72767LLU,1LLU),_20548c650_Range32(72850LLU,72871LLU,1LLU),_20548c650_Range32(72873LLU,72886LLU,1LLU),_20548c650_Range32(73009LLU,73014LLU,1LLU),_20548c650_Range32(73018LLU,73020LLU,2LLU),_20548c650_Range32(73021LLU,73023LLU,2LLU),_20548c650_Range32(73024LLU,73029LLU,1LLU),_20548c650_Range32(73031LLU,73098LLU,67LLU),_20548c650_Range32(73099LLU,73102LLU,1LLU),_20548c650_Range32(73104LLU,73105LLU,1LLU),_20548c650_Range32(73107LLU,73111LLU,1LLU),_20548c650_Range32(73459LLU,73462LLU,1LLU),_20548c650_Range32(73472LLU,73473LLU,1LLU),_20548c650_Range32(73475LLU,73524LLU,49LLU),_20548c650_Range32(73525LLU,73530LLU,1LLU),_20548c650_Range32(73534LLU,73538LLU,1LLU),_20548c650_Range32(78912LLU,78919LLU,7LLU),_20548c650_Range32(78920LLU,78933LLU,1LLU),_20548c650_Range32(92912LLU,92916LLU,1LLU),_20548c650_Range32(92976LLU,92982LLU,1LLU),_20548c650_Range32(94031LLU,94033LLU,2LLU),_20548c650_Range32(94034LLU,94087LLU,1LLU),_20548c650_Range32(94095LLU,94098LLU,1LLU),_20548c650_Range32(94180LLU,94192LLU,12LLU),_20548c650_Range32(94193LLU,113821LLU,19628LLU),_20548c650_Range32(113822LLU,118528LLU,4706LLU),_20548c650_Range32(118529LLU,118573LLU,1LLU),_20548c650_Range32(118576LLU,118598LLU,1LLU),_20548c650_Range32(119141LLU,119145LLU,1LLU),_20548c650_Range32(119149LLU,119154LLU,1LLU),_20548c650_Range32(119163LLU,119170LLU,1LLU),_20548c650_Range32(119173LLU,119179LLU,1LLU),_20548c650_Range32(119210LLU,119213LLU,1LLU),_20548c650_Range32(119362LLU,119364LLU,1LLU),_20548c650_Range32(121344LLU,121398LLU,1LLU),_20548c650_Range32(121403LLU,121452LLU,1LLU),_20548c650_Range32(121461LLU,121476LLU,15LLU),_20548c650_Range32(121499LLU,121503LLU,1LLU),_20548c650_Range32(121505LLU,121519LLU,1LLU),_20548c650_Range32(122880LLU,122886LLU,1LLU),_20548c650_Range32(122888LLU,122904LLU,1LLU),_20548c650_Range32(122907LLU,122913LLU,1LLU),_20548c650_Range32(122915LLU,122916LLU,1LLU),_20548c650_Range32(122918LLU,122922LLU,1LLU),_20548c650_Range32(123023LLU,123184LLU,161LLU),_20548c650_Range32(123185LLU,123190LLU,1LLU),_20548c650_Range32(123566LLU,123628LLU,62LLU),_20548c650_Range32(123629LLU,123631LLU,1LLU),_20548c650_Range32(124140LLU,124143LLU,1LLU),_20548c650_Range32(125136LLU,125142LLU,1LLU),_20548c650_Range32(125252LLU,125258LLU,1LLU),_20548c650_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(2307LLU,2363LLU,56LLU),_20548c650_Range16(2366LLU,2368LLU,1LLU),_20548c650_Range16(2377LLU,2380LLU,1LLU),_20548c650_Range16(2382LLU,2383LLU,1LLU),_20548c650_Range16(2434LLU,2435LLU,1LLU),_20548c650_Range16(2494LLU,2496LLU,1LLU),_20548c650_Range16(2503LLU,2504LLU,1LLU),_20548c650_Range16(2507LLU,2508LLU,1LLU),_20548c650_Range16(2519LLU,2563LLU,44LLU),_20548c650_Range16(2622LLU,2624LLU,1LLU),_20548c650_Range16(2691LLU,2750LLU,59LLU),_20548c650_Range16(2751LLU,2752LLU,1LLU),_20548c650_Range16(2761LLU,2763LLU,2LLU),_20548c650_Range16(2764LLU,2818LLU,54LLU),_20548c650_Range16(2819LLU,2878LLU,59LLU),_20548c650_Range16(2880LLU,2887LLU,7LLU),_20548c650_Range16(2888LLU,2891LLU,3LLU),_20548c650_Range16(2892LLU,2903LLU,11LLU),_20548c650_Range16(3006LLU,3007LLU,1LLU),_20548c650_Range16(3009LLU,3010LLU,1LLU),_20548c650_Range16(3014LLU,3016LLU,1LLU),_20548c650_Range16(3018LLU,3020LLU,1LLU),_20548c650_Range16(3031LLU,3073LLU,42LLU),_20548c650_Range16(3074LLU,3075LLU,1LLU),_20548c650_Range16(3137LLU,3140LLU,1LLU),_20548c650_Range16(3202LLU,3203LLU,1LLU),_20548c650_Range16(3262LLU,3264LLU,2LLU),_20548c650_Range16(3265LLU,3268LLU,1LLU),_20548c650_Range16(3271LLU,3272LLU,1LLU),_20548c650_Range16(3274LLU,3275LLU,1LLU),_20548c650_Range16(3285LLU,3286LLU,1LLU),_20548c650_Range16(3315LLU,3330LLU,15LLU),_20548c650_Range16(3331LLU,3390LLU,59LLU),_20548c650_Range16(3391LLU,3392LLU,1LLU),_20548c650_Range16(3398LLU,3400LLU,1LLU),_20548c650_Range16(3402LLU,3404LLU,1LLU),_20548c650_Range16(3415LLU,3458LLU,43LLU),_20548c650_Range16(3459LLU,3535LLU,76LLU),_20548c650_Range16(3536LLU,3537LLU,1LLU),_20548c650_Range16(3544LLU,3551LLU,1LLU),_20548c650_Range16(3570LLU,3571LLU,1LLU),_20548c650_Range16(3902LLU,3903LLU,1LLU),_20548c650_Range16(3967LLU,4139LLU,172LLU),_20548c650_Range16(4140LLU,4145LLU,5LLU),_20548c650_Range16(4152LLU,4155LLU,3LLU),_20548c650_Range16(4156LLU,4182LLU,26LLU),_20548c650_Range16(4183LLU,4194LLU,11LLU),_20548c650_Range16(4195LLU,4196LLU,1LLU),_20548c650_Range16(4199LLU,4205LLU,1LLU),_20548c650_Range16(4227LLU,4228LLU,1LLU),_20548c650_Range16(4231LLU,4236LLU,1LLU),_20548c650_Range16(4239LLU,4250LLU,11LLU),_20548c650_Range16(4251LLU,4252LLU,1LLU),_20548c650_Range16(5909LLU,5940LLU,31LLU),_20548c650_Range16(6070LLU,6078LLU,8LLU),_20548c650_Range16(6079LLU,6085LLU,1LLU),_20548c650_Range16(6087LLU,6088LLU,1LLU),_20548c650_Range16(6435LLU,6438LLU,1LLU),_20548c650_Range16(6441LLU,6443LLU,1LLU),_20548c650_Range16(6448LLU,6449LLU,1LLU),_20548c650_Range16(6451LLU,6456LLU,1LLU),_20548c650_Range16(6681LLU,6682LLU,1LLU),_20548c650_Range16(6741LLU,6743LLU,2LLU),_20548c650_Range16(6753LLU,6755LLU,2LLU),_20548c650_Range16(6756LLU,6765LLU,9LLU),_20548c650_Range16(6766LLU,6770LLU,1LLU),_20548c650_Range16(6916LLU,6965LLU,49LLU),_20548c650_Range16(6971LLU,6973LLU,2LLU),_20548c650_Range16(6974LLU,6977LLU,1LLU),_20548c650_Range16(6979LLU,6980LLU,1LLU),_20548c650_Range16(7042LLU,7073LLU,31LLU),_20548c650_Range16(7078LLU,7079LLU,1LLU),_20548c650_Range16(7082LLU,7143LLU,61LLU),_20548c650_Range16(7146LLU,7148LLU,1LLU),_20548c650_Range16(7150LLU,7154LLU,4LLU),_20548c650_Range16(7155LLU,7204LLU,49LLU),_20548c650_Range16(7205LLU,7211LLU,1LLU),_20548c650_Range16(7220LLU,7221LLU,1LLU),_20548c650_Range16(7393LLU,7415LLU,22LLU),_20548c650_Range16(12334LLU,12335LLU,1LLU),_20548c650_Range16(43043LLU,43044LLU,1LLU),_20548c650_Range16(43047LLU,43136LLU,89LLU),_20548c650_Range16(43137LLU,43188LLU,51LLU),_20548c650_Range16(43189LLU,43203LLU,1LLU),_20548c650_Range16(43346LLU,43347LLU,1LLU),_20548c650_Range16(43395LLU,43444LLU,49LLU),_20548c650_Range16(43445LLU,43450LLU,5LLU),_20548c650_Range16(43451LLU,43454LLU,3LLU),_20548c650_Range16(43455LLU,43456LLU,1LLU),_20548c650_Range16(43567LLU,43568LLU,1LLU),_20548c650_Range16(43571LLU,43572LLU,1LLU),_20548c650_Range16(43597LLU,43643LLU,46LLU),_20548c650_Range16(43645LLU,43755LLU,110LLU),_20548c650_Range16(43758LLU,43759LLU,1LLU),_20548c650_Range16(43765LLU,44003LLU,238LLU),_20548c650_Range16(44004LLU,44006LLU,2LLU),_20548c650_Range16(44007LLU,44009LLU,2LLU),_20548c650_Range16(44010LLU,44012LLU,2LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69632LLU,69634LLU,2LLU),_20548c650_Range32(69762LLU,69808LLU,46LLU),_20548c650_Range32(69809LLU,69810LLU,1LLU),_20548c650_Range32(69815LLU,69816LLU,1LLU),_20548c650_Range32(69932LLU,69957LLU,25LLU),_20548c650_Range32(69958LLU,70018LLU,60LLU),_20548c650_Range32(70067LLU,70069LLU,1LLU),_20548c650_Range32(70079LLU,70080LLU,1LLU),_20548c650_Range32(70094LLU,70188LLU,94LLU),_20548c650_Range32(70189LLU,70190LLU,1LLU),_20548c650_Range32(70194LLU,70195LLU,1LLU),_20548c650_Range32(70197LLU,70368LLU,171LLU),_20548c650_Range32(70369LLU,70370LLU,1LLU),_20548c650_Range32(70402LLU,70403LLU,1LLU),_20548c650_Range32(70462LLU,70463LLU,1LLU),_20548c650_Range32(70465LLU,70468LLU,1LLU),_20548c650_Range32(70471LLU,70472LLU,1LLU),_20548c650_Range32(70475LLU,70477LLU,1LLU),_20548c650_Range32(70487LLU,70498LLU,11LLU),_20548c650_Range32(70499LLU,70709LLU,210LLU),_20548c650_Range32(70710LLU,70711LLU,1LLU),_20548c650_Range32(70720LLU,70721LLU,1LLU),_20548c650_Range32(70725LLU,70832LLU,107LLU),_20548c650_Range32(70833LLU,70834LLU,1LLU),_20548c650_Range32(70841LLU,70843LLU,2LLU),_20548c650_Range32(70844LLU,70846LLU,1LLU),_20548c650_Range32(70849LLU,71087LLU,238LLU),_20548c650_Range32(71088LLU,71089LLU,1LLU),_20548c650_Range32(71096LLU,71099LLU,1LLU),_20548c650_Range32(71102LLU,71216LLU,114LLU),_20548c650_Range32(71217LLU,71218LLU,1LLU),_20548c650_Range32(71227LLU,71228LLU,1LLU),_20548c650_Range32(71230LLU,71340LLU,110LLU),_20548c650_Range32(71342LLU,71343LLU,1LLU),_20548c650_Range32(71350LLU,71456LLU,106LLU),_20548c650_Range32(71457LLU,71462LLU,5LLU),_20548c650_Range32(71724LLU,71726LLU,1LLU),_20548c650_Range32(71736LLU,71984LLU,248LLU),_20548c650_Range32(71985LLU,71989LLU,1LLU),_20548c650_Range32(71991LLU,71992LLU,1LLU),_20548c650_Range32(71997LLU,72000LLU,3LLU),_20548c650_Range32(72002LLU,72145LLU,143LLU),_20548c650_Range32(72146LLU,72147LLU,1LLU),_20548c650_Range32(72156LLU,72159LLU,1LLU),_20548c650_Range32(72164LLU,72249LLU,85LLU),_20548c650_Range32(72279LLU,72280LLU,1LLU),_20548c650_Range32(72343LLU,72751LLU,408LLU),_20548c650_Range32(72766LLU,72873LLU,107LLU),_20548c650_Range32(72881LLU,72884LLU,3LLU),_20548c650_Range32(73098LLU,73102LLU,1LLU),_20548c650_Range32(73107LLU,73108LLU,1LLU),_20548c650_Range32(73110LLU,73461LLU,351LLU),_20548c650_Range32(73462LLU,73475LLU,13LLU),_20548c650_Range32(73524LLU,73525LLU,1LLU),_20548c650_Range32(73534LLU,73535LLU,1LLU),_20548c650_Range32(73537LLU,94033LLU,20496LLU),_20548c650_Range32(94034LLU,94087LLU,1LLU),_20548c650_Range32(94192LLU,94193LLU,1LLU),_20548c650_Range32(119141LLU,119142LLU,1LLU),_20548c650_Range32(119149LLU,119154LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__ME = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(1160LLU,1161LLU,1LLU),_20548c650_Range16(6846LLU,8413LLU,1567LLU),_20548c650_Range16(8414LLU,8416LLU,1LLU),_20548c650_Range16(8418LLU,8420LLU,1LLU),_20548c650_Range16(42608LLU,42610LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(768LLU,879LLU,1LLU),_20548c650_Range16(1155LLU,1159LLU,1LLU),_20548c650_Range16(1425LLU,1469LLU,1LLU),_20548c650_Range16(1471LLU,1473LLU,2LLU),_20548c650_Range16(1474LLU,1476LLU,2LLU),_20548c650_Range16(1477LLU,1479LLU,2LLU),_20548c650_Range16(1552LLU,1562LLU,1LLU),_20548c650_Range16(1611LLU,1631LLU,1LLU),_20548c650_Range16(1648LLU,1750LLU,102LLU),_20548c650_Range16(1751LLU,1756LLU,1LLU),_20548c650_Range16(1759LLU,1764LLU,1LLU),_20548c650_Range16(1767LLU,1768LLU,1LLU),_20548c650_Range16(1770LLU,1773LLU,1LLU),_20548c650_Range16(1809LLU,1840LLU,31LLU),_20548c650_Range16(1841LLU,1866LLU,1LLU),_20548c650_Range16(1958LLU,1968LLU,1LLU),_20548c650_Range16(2027LLU,2035LLU,1LLU),_20548c650_Range16(2045LLU,2070LLU,25LLU),_20548c650_Range16(2071LLU,2073LLU,1LLU),_20548c650_Range16(2075LLU,2083LLU,1LLU),_20548c650_Range16(2085LLU,2087LLU,1LLU),_20548c650_Range16(2089LLU,2093LLU,1LLU),_20548c650_Range16(2137LLU,2139LLU,1LLU),_20548c650_Range16(2200LLU,2207LLU,1LLU),_20548c650_Range16(2250LLU,2273LLU,1LLU),_20548c650_Range16(2275LLU,2306LLU,1LLU),_20548c650_Range16(2362LLU,2364LLU,2LLU),_20548c650_Range16(2369LLU,2376LLU,1LLU),_20548c650_Range16(2381LLU,2385LLU,4LLU),_20548c650_Range16(2386LLU,2391LLU,1LLU),_20548c650_Range16(2402LLU,2403LLU,1LLU),_20548c650_Range16(2433LLU,2492LLU,59LLU),_20548c650_Range16(2497LLU,2500LLU,1LLU),_20548c650_Range16(2509LLU,2530LLU,21LLU),_20548c650_Range16(2531LLU,2558LLU,27LLU),_20548c650_Range16(2561LLU,2562LLU,1LLU),_20548c650_Range16(2620LLU,2625LLU,5LLU),_20548c650_Range16(2626LLU,2631LLU,5LLU),_20548c650_Range16(2632LLU,2635LLU,3LLU),_20548c650_Range16(2636LLU,2637LLU,1LLU),_20548c650_Range16(2641LLU,2672LLU,31LLU),_20548c650_Range16(2673LLU,2677LLU,4LLU),_20548c650_Range16(2689LLU,2690LLU,1LLU),_20548c650_Range16(2748LLU,2753LLU,5LLU),_20548c650_Range16(2754LLU,2757LLU,1LLU),_20548c650_Range16(2759LLU,2760LLU,1LLU),_20548c650_Range16(2765LLU,2786LLU,21LLU),_20548c650_Range16(2787LLU,2810LLU,23LLU),_20548c650_Range16(2811LLU,2815LLU,1LLU),_20548c650_Range16(2817LLU,2876LLU,59LLU),_20548c650_Range16(2879LLU,2881LLU,2LLU),_20548c650_Range16(2882LLU,2884LLU,1LLU),_20548c650_Range16(2893LLU,2901LLU,8LLU),_20548c650_Range16(2902LLU,2914LLU,12LLU),_20548c650_Range16(2915LLU,2946LLU,31LLU),_20548c650_Range16(3008LLU,3021LLU,13LLU),_20548c650_Range16(3072LLU,3076LLU,4LLU),_20548c650_Range16(3132LLU,3134LLU,2LLU),_20548c650_Range16(3135LLU,3136LLU,1LLU),_20548c650_Range16(3142LLU,3144LLU,1LLU),_20548c650_Range16(3146LLU,3149LLU,1LLU),_20548c650_Range16(3157LLU,3158LLU,1LLU),_20548c650_Range16(3170LLU,3171LLU,1LLU),_20548c650_Range16(3201LLU,3260LLU,59LLU),_20548c650_Range16(3263LLU,3270LLU,7LLU),_20548c650_Range16(3276LLU,3277LLU,1LLU),_20548c650_Range16(3298LLU,3299LLU,1LLU),_20548c650_Range16(3328LLU,3329LLU,1LLU),_20548c650_Range16(3387LLU,3388LLU,1LLU),_20548c650_Range16(3393LLU,3396LLU,1LLU),_20548c650_Range16(3405LLU,3426LLU,21LLU),_20548c650_Range16(3427LLU,3457LLU,30LLU),_20548c650_Range16(3530LLU,3538LLU,8LLU),_20548c650_Range16(3539LLU,3540LLU,1LLU),_20548c650_Range16(3542LLU,3633LLU,91LLU),_20548c650_Range16(3636LLU,3642LLU,1LLU),_20548c650_Range16(3655LLU,3662LLU,1LLU),_20548c650_Range16(3761LLU,3764LLU,3LLU),_20548c650_Range16(3765LLU,3772LLU,1LLU),_20548c650_Range16(3784LLU,3790LLU,1LLU),_20548c650_Range16(3864LLU,3865LLU,1LLU),_20548c650_Range16(3893LLU,3897LLU,2LLU),_20548c650_Range16(3953LLU,3966LLU,1LLU),_20548c650_Range16(3968LLU,3972LLU,1LLU),_20548c650_Range16(3974LLU,3975LLU,1LLU),_20548c650_Range16(3981LLU,3991LLU,1LLU),_20548c650_Range16(3993LLU,4028LLU,1LLU),_20548c650_Range16(4038LLU,4141LLU,103LLU),_20548c650_Range16(4142LLU,4144LLU,1LLU),_20548c650_Range16(4146LLU,4151LLU,1LLU),_20548c650_Range16(4153LLU,4154LLU,1LLU),_20548c650_Range16(4157LLU,4158LLU,1LLU),_20548c650_Range16(4184LLU,4185LLU,1LLU),_20548c650_Range16(4190LLU,4192LLU,1LLU),_20548c650_Range16(4209LLU,4212LLU,1LLU),_20548c650_Range16(4226LLU,4229LLU,3LLU),_20548c650_Range16(4230LLU,4237LLU,7LLU),_20548c650_Range16(4253LLU,4957LLU,704LLU),_20548c650_Range16(4958LLU,4959LLU,1LLU),_20548c650_Range16(5906LLU,5908LLU,1LLU),_20548c650_Range16(5938LLU,5939LLU,1LLU),_20548c650_Range16(5970LLU,5971LLU,1LLU),_20548c650_Range16(6002LLU,6003LLU,1LLU),_20548c650_Range16(6068LLU,6069LLU,1LLU),_20548c650_Range16(6071LLU,6077LLU,1LLU),_20548c650_Range16(6086LLU,6089LLU,3LLU),_20548c650_Range16(6090LLU,6099LLU,1LLU),_20548c650_Range16(6109LLU,6155LLU,46LLU),_20548c650_Range16(6156LLU,6157LLU,1LLU),_20548c650_Range16(6159LLU,6277LLU,118LLU),_20548c650_Range16(6278LLU,6313LLU,35LLU),_20548c650_Range16(6432LLU,6434LLU,1LLU),_20548c650_Range16(6439LLU,6440LLU,1LLU),_20548c650_Range16(6450LLU,6457LLU,7LLU),_20548c650_Range16(6458LLU,6459LLU,1LLU),_20548c650_Range16(6679LLU,6680LLU,1LLU),_20548c650_Range16(6683LLU,6742LLU,59LLU),_20548c650_Range16(6744LLU,6750LLU,1LLU),_20548c650_Range16(6752LLU,6754LLU,2LLU),_20548c650_Range16(6757LLU,6764LLU,1LLU),_20548c650_Range16(6771LLU,6780LLU,1LLU),_20548c650_Range16(6783LLU,6832LLU,49LLU),_20548c650_Range16(6833LLU,6845LLU,1LLU),_20548c650_Range16(6847LLU,6862LLU,1LLU),_20548c650_Range16(6912LLU,6915LLU,1LLU),_20548c650_Range16(6964LLU,6966LLU,2LLU),_20548c650_Range16(6967LLU,6970LLU,1LLU),_20548c650_Range16(6972LLU,6978LLU,6LLU),_20548c650_Range16(7019LLU,7027LLU,1LLU),_20548c650_Range16(7040LLU,7041LLU,1LLU),_20548c650_Range16(7074LLU,7077LLU,1LLU),_20548c650_Range16(7080LLU,7081LLU,1LLU),_20548c650_Range16(7083LLU,7085LLU,1LLU),_20548c650_Range16(7142LLU,7144LLU,2LLU),_20548c650_Range16(7145LLU,7149LLU,4LLU),_20548c650_Range16(7151LLU,7153LLU,1LLU),_20548c650_Range16(7212LLU,7219LLU,1LLU),_20548c650_Range16(7222LLU,7223LLU,1LLU),_20548c650_Range16(7376LLU,7378LLU,1LLU),_20548c650_Range16(7380LLU,7392LLU,1LLU),_20548c650_Range16(7394LLU,7400LLU,1LLU),_20548c650_Range16(7405LLU,7412LLU,7LLU),_20548c650_Range16(7416LLU,7417LLU,1LLU),_20548c650_Range16(7616LLU,7679LLU,1LLU),_20548c650_Range16(8400LLU,8412LLU,1LLU),_20548c650_Range16(8417LLU,8421LLU,4LLU),_20548c650_Range16(8422LLU,8432LLU,1LLU),_20548c650_Range16(11503LLU,11505LLU,1LLU),_20548c650_Range16(11647LLU,11744LLU,97LLU),_20548c650_Range16(11745LLU,11775LLU,1LLU),_20548c650_Range16(12330LLU,12333LLU,1LLU),_20548c650_Range16(12441LLU,12442LLU,1LLU),_20548c650_Range16(42607LLU,42612LLU,5LLU),_20548c650_Range16(42613LLU,42621LLU,1LLU),_20548c650_Range16(42654LLU,42655LLU,1LLU),_20548c650_Range16(42736LLU,42737LLU,1LLU),_20548c650_Range16(43010LLU,43014LLU,4LLU),_20548c650_Range16(43019LLU,43045LLU,26LLU),_20548c650_Range16(43046LLU,43052LLU,6LLU),_20548c650_Range16(43204LLU,43205LLU,1LLU),_20548c650_Range16(43232LLU,43249LLU,1LLU),_20548c650_Range16(43263LLU,43302LLU,39LLU),_20548c650_Range16(43303LLU,43309LLU,1LLU),_20548c650_Range16(43335LLU,43345LLU,1LLU),_20548c650_Range16(43392LLU,43394LLU,1LLU),_20548c650_Range16(43443LLU,43446LLU,3LLU),_20548c650_Range16(43447LLU,43449LLU,1LLU),_20548c650_Range16(43452LLU,43453LLU,1LLU),_20548c650_Range16(43493LLU,43561LLU,68LLU),_20548c650_Range16(43562LLU,43566LLU,1LLU),_20548c650_Range16(43569LLU,43570LLU,1LLU),_20548c650_Range16(43573LLU,43574LLU,1LLU),_20548c650_Range16(43587LLU,43596LLU,9LLU),_20548c650_Range16(43644LLU,43696LLU,52LLU),_20548c650_Range16(43698LLU,43700LLU,1LLU),_20548c650_Range16(43703LLU,43704LLU,1LLU),_20548c650_Range16(43710LLU,43711LLU,1LLU),_20548c650_Range16(43713LLU,43756LLU,43LLU),_20548c650_Range16(43757LLU,43766LLU,9LLU),_20548c650_Range16(44005LLU,44008LLU,3LLU),_20548c650_Range16(44013LLU,64286LLU,20273LLU),_20548c650_Range16(65024LLU,65039LLU,1LLU),_20548c650_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66045LLU,66272LLU,227LLU),_20548c650_Range32(66422LLU,66426LLU,1LLU),_20548c650_Range32(68097LLU,68099LLU,1LLU),_20548c650_Range32(68101LLU,68102LLU,1LLU),_20548c650_Range32(68108LLU,68111LLU,1LLU),_20548c650_Range32(68152LLU,68154LLU,1LLU),_20548c650_Range32(68159LLU,68325LLU,166LLU),_20548c650_Range32(68326LLU,68900LLU,574LLU),_20548c650_Range32(68901LLU,68903LLU,1LLU),_20548c650_Range32(69291LLU,69292LLU,1LLU),_20548c650_Range32(69373LLU,69375LLU,1LLU),_20548c650_Range32(69446LLU,69456LLU,1LLU),_20548c650_Range32(69506LLU,69509LLU,1LLU),_20548c650_Range32(69633LLU,69688LLU,55LLU),_20548c650_Range32(69689LLU,69702LLU,1LLU),_20548c650_Range32(69744LLU,69747LLU,3LLU),_20548c650_Range32(69748LLU,69759LLU,11LLU),_20548c650_Range32(69760LLU,69761LLU,1LLU),_20548c650_Range32(69811LLU,69814LLU,1LLU),_20548c650_Range32(69817LLU,69818LLU,1LLU),_20548c650_Range32(69826LLU,69888LLU,62LLU),_20548c650_Range32(69889LLU,69890LLU,1LLU),_20548c650_Range32(69927LLU,69931LLU,1LLU),_20548c650_Range32(69933LLU,69940LLU,1LLU),_20548c650_Range32(70003LLU,70016LLU,13LLU),_20548c650_Range32(70017LLU,70070LLU,53LLU),_20548c650_Range32(70071LLU,70078LLU,1LLU),_20548c650_Range32(70089LLU,70092LLU,1LLU),_20548c650_Range32(70095LLU,70191LLU,96LLU),_20548c650_Range32(70192LLU,70193LLU,1LLU),_20548c650_Range32(70196LLU,70198LLU,2LLU),_20548c650_Range32(70199LLU,70206LLU,7LLU),_20548c650_Range32(70209LLU,70367LLU,158LLU),_20548c650_Range32(70371LLU,70378LLU,1LLU),_20548c650_Range32(70400LLU,70401LLU,1LLU),_20548c650_Range32(70459LLU,70460LLU,1LLU),_20548c650_Range32(70464LLU,70502LLU,38LLU),_20548c650_Range32(70503LLU,70508LLU,1LLU),_20548c650_Range32(70512LLU,70516LLU,1LLU),_20548c650_Range32(70712LLU,70719LLU,1LLU),_20548c650_Range32(70722LLU,70724LLU,1LLU),_20548c650_Range32(70726LLU,70750LLU,24LLU),_20548c650_Range32(70835LLU,70840LLU,1LLU),_20548c650_Range32(70842LLU,70847LLU,5LLU),_20548c650_Range32(70848LLU,70850LLU,2LLU),_20548c650_Range32(70851LLU,71090LLU,239LLU),_20548c650_Range32(71091LLU,71093LLU,1LLU),_20548c650_Range32(71100LLU,71101LLU,1LLU),_20548c650_Range32(71103LLU,71104LLU,1LLU),_20548c650_Range32(71132LLU,71133LLU,1LLU),_20548c650_Range32(71219LLU,71226LLU,1LLU),_20548c650_Range32(71229LLU,71231LLU,2LLU),_20548c650_Range32(71232LLU,71339LLU,107LLU),_20548c650_Range32(71341LLU,71344LLU,3LLU),_20548c650_Range32(71345LLU,71349LLU,1LLU),_20548c650_Range32(71351LLU,71453LLU,102LLU),_20548c650_Range32(71454LLU,71455LLU,1LLU),_20548c650_Range32(71458LLU,71461LLU,1LLU),_20548c650_Range32(71463LLU,71467LLU,1LLU),_20548c650_Range32(71727LLU,71735LLU,1LLU),_20548c650_Range32(71737LLU,71738LLU,1LLU),_20548c650_Range32(71995LLU,71996LLU,1LLU),_20548c650_Range32(71998LLU,72003LLU,5LLU),_20548c650_Range32(72148LLU,72151LLU,1LLU),_20548c650_Range32(72154LLU,72155LLU,1LLU),_20548c650_Range32(72160LLU,72193LLU,33LLU),_20548c650_Range32(72194LLU,72202LLU,1LLU),_20548c650_Range32(72243LLU,72248LLU,1LLU),_20548c650_Range32(72251LLU,72254LLU,1LLU),_20548c650_Range32(72263LLU,72273LLU,10LLU),_20548c650_Range32(72274LLU,72278LLU,1LLU),_20548c650_Range32(72281LLU,72283LLU,1LLU),_20548c650_Range32(72330LLU,72342LLU,1LLU),_20548c650_Range32(72344LLU,72345LLU,1LLU),_20548c650_Range32(72752LLU,72758LLU,1LLU),_20548c650_Range32(72760LLU,72765LLU,1LLU),_20548c650_Range32(72767LLU,72850LLU,83LLU),_20548c650_Range32(72851LLU,72871LLU,1LLU),_20548c650_Range32(72874LLU,72880LLU,1LLU),_20548c650_Range32(72882LLU,72883LLU,1LLU),_20548c650_Range32(72885LLU,72886LLU,1LLU),_20548c650_Range32(73009LLU,73014LLU,1LLU),_20548c650_Range32(73018LLU,73020LLU,2LLU),_20548c650_Range32(73021LLU,73023LLU,2LLU),_20548c650_Range32(73024LLU,73029LLU,1LLU),_20548c650_Range32(73031LLU,73104LLU,73LLU),_20548c650_Range32(73105LLU,73109LLU,4LLU),_20548c650_Range32(73111LLU,73459LLU,348LLU),_20548c650_Range32(73460LLU,73472LLU,12LLU),_20548c650_Range32(73473LLU,73526LLU,53LLU),_20548c650_Range32(73527LLU,73530LLU,1LLU),_20548c650_Range32(73536LLU,73538LLU,2LLU),_20548c650_Range32(78912LLU,78919LLU,7LLU),_20548c650_Range32(78920LLU,78933LLU,1LLU),_20548c650_Range32(92912LLU,92916LLU,1LLU),_20548c650_Range32(92976LLU,92982LLU,1LLU),_20548c650_Range32(94031LLU,94095LLU,64LLU),_20548c650_Range32(94096LLU,94098LLU,1LLU),_20548c650_Range32(94180LLU,113821LLU,19641LLU),_20548c650_Range32(113822LLU,118528LLU,4706LLU),_20548c650_Range32(118529LLU,118573LLU,1LLU),_20548c650_Range32(118576LLU,118598LLU,1LLU),_20548c650_Range32(119143LLU,119145LLU,1LLU),_20548c650_Range32(119163LLU,119170LLU,1LLU),_20548c650_Range32(119173LLU,119179LLU,1LLU),_20548c650_Range32(119210LLU,119213LLU,1LLU),_20548c650_Range32(119362LLU,119364LLU,1LLU),_20548c650_Range32(121344LLU,121398LLU,1LLU),_20548c650_Range32(121403LLU,121452LLU,1LLU),_20548c650_Range32(121461LLU,121476LLU,15LLU),_20548c650_Range32(121499LLU,121503LLU,1LLU),_20548c650_Range32(121505LLU,121519LLU,1LLU),_20548c650_Range32(122880LLU,122886LLU,1LLU),_20548c650_Range32(122888LLU,122904LLU,1LLU),_20548c650_Range32(122907LLU,122913LLU,1LLU),_20548c650_Range32(122915LLU,122916LLU,1LLU),_20548c650_Range32(122918LLU,122922LLU,1LLU),_20548c650_Range32(123023LLU,123184LLU,161LLU),_20548c650_Range32(123185LLU,123190LLU,1LLU),_20548c650_Range32(123566LLU,123628LLU,62LLU),_20548c650_Range32(123629LLU,123631LLU,1LLU),_20548c650_Range32(124140LLU,124143LLU,1LLU),_20548c650_Range32(125136LLU,125142LLU,1LLU),_20548c650_Range32(125252LLU,125258LLU,1LLU),_20548c650_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__N = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(48LLU,57LLU,1LLU),_20548c650_Range16(178LLU,179LLU,1LLU),_20548c650_Range16(185LLU,188LLU,3LLU),_20548c650_Range16(189LLU,190LLU,1LLU),_20548c650_Range16(1632LLU,1641LLU,1LLU),_20548c650_Range16(1776LLU,1785LLU,1LLU),_20548c650_Range16(1984LLU,1993LLU,1LLU),_20548c650_Range16(2406LLU,2415LLU,1LLU),_20548c650_Range16(2534LLU,2543LLU,1LLU),_20548c650_Range16(2548LLU,2553LLU,1LLU),_20548c650_Range16(2662LLU,2671LLU,1LLU),_20548c650_Range16(2790LLU,2799LLU,1LLU),_20548c650_Range16(2918LLU,2927LLU,1LLU),_20548c650_Range16(2930LLU,2935LLU,1LLU),_20548c650_Range16(3046LLU,3058LLU,1LLU),_20548c650_Range16(3174LLU,3183LLU,1LLU),_20548c650_Range16(3192LLU,3198LLU,1LLU),_20548c650_Range16(3302LLU,3311LLU,1LLU),_20548c650_Range16(3416LLU,3422LLU,1LLU),_20548c650_Range16(3430LLU,3448LLU,1LLU),_20548c650_Range16(3558LLU,3567LLU,1LLU),_20548c650_Range16(3664LLU,3673LLU,1LLU),_20548c650_Range16(3792LLU,3801LLU,1LLU),_20548c650_Range16(3872LLU,3891LLU,1LLU),_20548c650_Range16(4160LLU,4169LLU,1LLU),_20548c650_Range16(4240LLU,4249LLU,1LLU),_20548c650_Range16(4969LLU,4988LLU,1LLU),_20548c650_Range16(5870LLU,5872LLU,1LLU),_20548c650_Range16(6112LLU,6121LLU,1LLU),_20548c650_Range16(6128LLU,6137LLU,1LLU),_20548c650_Range16(6160LLU,6169LLU,1LLU),_20548c650_Range16(6470LLU,6479LLU,1LLU),_20548c650_Range16(6608LLU,6618LLU,1LLU),_20548c650_Range16(6784LLU,6793LLU,1LLU),_20548c650_Range16(6800LLU,6809LLU,1LLU),_20548c650_Range16(6992LLU,7001LLU,1LLU),_20548c650_Range16(7088LLU,7097LLU,1LLU),_20548c650_Range16(7232LLU,7241LLU,1LLU),_20548c650_Range16(7248LLU,7257LLU,1LLU),_20548c650_Range16(8304LLU,8308LLU,4LLU),_20548c650_Range16(8309LLU,8313LLU,1LLU),_20548c650_Range16(8320LLU,8329LLU,1LLU),_20548c650_Range16(8528LLU,8578LLU,1LLU),_20548c650_Range16(8581LLU,8585LLU,1LLU),_20548c650_Range16(9312LLU,9371LLU,1LLU),_20548c650_Range16(9450LLU,9471LLU,1LLU),_20548c650_Range16(10102LLU,10131LLU,1LLU),_20548c650_Range16(11517LLU,12295LLU,778LLU),_20548c650_Range16(12321LLU,12329LLU,1LLU),_20548c650_Range16(12344LLU,12346LLU,1LLU),_20548c650_Range16(12690LLU,12693LLU,1LLU),_20548c650_Range16(12832LLU,12841LLU,1LLU),_20548c650_Range16(12872LLU,12879LLU,1LLU),_20548c650_Range16(12881LLU,12895LLU,1LLU),_20548c650_Range16(12928LLU,12937LLU,1LLU),_20548c650_Range16(12977LLU,12991LLU,1LLU),_20548c650_Range16(42528LLU,42537LLU,1LLU),_20548c650_Range16(42726LLU,42735LLU,1LLU),_20548c650_Range16(43056LLU,43061LLU,1LLU),_20548c650_Range16(43216LLU,43225LLU,1LLU),_20548c650_Range16(43264LLU,43273LLU,1LLU),_20548c650_Range16(43472LLU,43481LLU,1LLU),_20548c650_Range16(43504LLU,43513LLU,1LLU),_20548c650_Range16(43600LLU,43609LLU,1LLU),_20548c650_Range16(44016LLU,44025LLU,1LLU),_20548c650_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(65799LLU,65843LLU,1LLU),_20548c650_Range32(65856LLU,65912LLU,1LLU),_20548c650_Range32(65930LLU,65931LLU,1LLU),_20548c650_Range32(66273LLU,66299LLU,1LLU),_20548c650_Range32(66336LLU,66339LLU,1LLU),_20548c650_Range32(66369LLU,66378LLU,9LLU),_20548c650_Range32(66513LLU,66517LLU,1LLU),_20548c650_Range32(66720LLU,66729LLU,1LLU),_20548c650_Range32(67672LLU,67679LLU,1LLU),_20548c650_Range32(67705LLU,67711LLU,1LLU),_20548c650_Range32(67751LLU,67759LLU,1LLU),_20548c650_Range32(67835LLU,67839LLU,1LLU),_20548c650_Range32(67862LLU,67867LLU,1LLU),_20548c650_Range32(68028LLU,68029LLU,1LLU),_20548c650_Range32(68032LLU,68047LLU,1LLU),_20548c650_Range32(68050LLU,68095LLU,1LLU),_20548c650_Range32(68160LLU,68168LLU,1LLU),_20548c650_Range32(68221LLU,68222LLU,1LLU),_20548c650_Range32(68253LLU,68255LLU,1LLU),_20548c650_Range32(68331LLU,68335LLU,1LLU),_20548c650_Range32(68440LLU,68447LLU,1LLU),_20548c650_Range32(68472LLU,68479LLU,1LLU),_20548c650_Range32(68521LLU,68527LLU,1LLU),_20548c650_Range32(68858LLU,68863LLU,1LLU),_20548c650_Range32(68912LLU,68921LLU,1LLU),_20548c650_Range32(69216LLU,69246LLU,1LLU),_20548c650_Range32(69405LLU,69414LLU,1LLU),_20548c650_Range32(69457LLU,69460LLU,1LLU),_20548c650_Range32(69573LLU,69579LLU,1LLU),_20548c650_Range32(69714LLU,69743LLU,1LLU),_20548c650_Range32(69872LLU,69881LLU,1LLU),_20548c650_Range32(69942LLU,69951LLU,1LLU),_20548c650_Range32(70096LLU,70105LLU,1LLU),_20548c650_Range32(70113LLU,70132LLU,1LLU),_20548c650_Range32(70384LLU,70393LLU,1LLU),_20548c650_Range32(70736LLU,70745LLU,1LLU),_20548c650_Range32(70864LLU,70873LLU,1LLU),_20548c650_Range32(71248LLU,71257LLU,1LLU),_20548c650_Range32(71360LLU,71369LLU,1LLU),_20548c650_Range32(71472LLU,71483LLU,1LLU),_20548c650_Range32(71904LLU,71922LLU,1LLU),_20548c650_Range32(72016LLU,72025LLU,1LLU),_20548c650_Range32(72784LLU,72812LLU,1LLU),_20548c650_Range32(73040LLU,73049LLU,1LLU),_20548c650_Range32(73120LLU,73129LLU,1LLU),_20548c650_Range32(73552LLU,73561LLU,1LLU),_20548c650_Range32(73664LLU,73684LLU,1LLU),_20548c650_Range32(74752LLU,74862LLU,1LLU),_20548c650_Range32(92768LLU,92777LLU,1LLU),_20548c650_Range32(92864LLU,92873LLU,1LLU),_20548c650_Range32(93008LLU,93017LLU,1LLU),_20548c650_Range32(93019LLU,93025LLU,1LLU),_20548c650_Range32(93824LLU,93846LLU,1LLU),_20548c650_Range32(119488LLU,119507LLU,1LLU),_20548c650_Range32(119520LLU,119539LLU,1LLU),_20548c650_Range32(119648LLU,119672LLU,1LLU),_20548c650_Range32(120782LLU,120831LLU,1LLU),_20548c650_Range32(123200LLU,123209LLU,1LLU),_20548c650_Range32(123632LLU,123641LLU,1LLU),_20548c650_Range32(124144LLU,124153LLU,1LLU),_20548c650_Range32(125127LLU,125135LLU,1LLU),_20548c650_Range32(125264LLU,125273LLU,1LLU),_20548c650_Range32(126065LLU,126123LLU,1LLU),_20548c650_Range32(126125LLU,126127LLU,1LLU),_20548c650_Range32(126129LLU,126132LLU,1LLU),_20548c650_Range32(126209LLU,126253LLU,1LLU),_20548c650_Range32(126255LLU,126269LLU,1LLU),_20548c650_Range32(127232LLU,127244LLU,1LLU),_20548c650_Range32(130032LLU,130041LLU,1LLU)}),4LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__ND = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(48LLU,57LLU,1LLU),_20548c650_Range16(1632LLU,1641LLU,1LLU),_20548c650_Range16(1776LLU,1785LLU,1LLU),_20548c650_Range16(1984LLU,1993LLU,1LLU),_20548c650_Range16(2406LLU,2415LLU,1LLU),_20548c650_Range16(2534LLU,2543LLU,1LLU),_20548c650_Range16(2662LLU,2671LLU,1LLU),_20548c650_Range16(2790LLU,2799LLU,1LLU),_20548c650_Range16(2918LLU,2927LLU,1LLU),_20548c650_Range16(3046LLU,3055LLU,1LLU),_20548c650_Range16(3174LLU,3183LLU,1LLU),_20548c650_Range16(3302LLU,3311LLU,1LLU),_20548c650_Range16(3430LLU,3439LLU,1LLU),_20548c650_Range16(3558LLU,3567LLU,1LLU),_20548c650_Range16(3664LLU,3673LLU,1LLU),_20548c650_Range16(3792LLU,3801LLU,1LLU),_20548c650_Range16(3872LLU,3881LLU,1LLU),_20548c650_Range16(4160LLU,4169LLU,1LLU),_20548c650_Range16(4240LLU,4249LLU,1LLU),_20548c650_Range16(6112LLU,6121LLU,1LLU),_20548c650_Range16(6160LLU,6169LLU,1LLU),_20548c650_Range16(6470LLU,6479LLU,1LLU),_20548c650_Range16(6608LLU,6617LLU,1LLU),_20548c650_Range16(6784LLU,6793LLU,1LLU),_20548c650_Range16(6800LLU,6809LLU,1LLU),_20548c650_Range16(6992LLU,7001LLU,1LLU),_20548c650_Range16(7088LLU,7097LLU,1LLU),_20548c650_Range16(7232LLU,7241LLU,1LLU),_20548c650_Range16(7248LLU,7257LLU,1LLU),_20548c650_Range16(42528LLU,42537LLU,1LLU),_20548c650_Range16(43216LLU,43225LLU,1LLU),_20548c650_Range16(43264LLU,43273LLU,1LLU),_20548c650_Range16(43472LLU,43481LLU,1LLU),_20548c650_Range16(43504LLU,43513LLU,1LLU),_20548c650_Range16(43600LLU,43609LLU,1LLU),_20548c650_Range16(44016LLU,44025LLU,1LLU),_20548c650_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66720LLU,66729LLU,1LLU),_20548c650_Range32(68912LLU,68921LLU,1LLU),_20548c650_Range32(69734LLU,69743LLU,1LLU),_20548c650_Range32(69872LLU,69881LLU,1LLU),_20548c650_Range32(69942LLU,69951LLU,1LLU),_20548c650_Range32(70096LLU,70105LLU,1LLU),_20548c650_Range32(70384LLU,70393LLU,1LLU),_20548c650_Range32(70736LLU,70745LLU,1LLU),_20548c650_Range32(70864LLU,70873LLU,1LLU),_20548c650_Range32(71248LLU,71257LLU,1LLU),_20548c650_Range32(71360LLU,71369LLU,1LLU),_20548c650_Range32(71472LLU,71481LLU,1LLU),_20548c650_Range32(71904LLU,71913LLU,1LLU),_20548c650_Range32(72016LLU,72025LLU,1LLU),_20548c650_Range32(72784LLU,72793LLU,1LLU),_20548c650_Range32(73040LLU,73049LLU,1LLU),_20548c650_Range32(73120LLU,73129LLU,1LLU),_20548c650_Range32(73552LLU,73561LLU,1LLU),_20548c650_Range32(92768LLU,92777LLU,1LLU),_20548c650_Range32(92864LLU,92873LLU,1LLU),_20548c650_Range32(93008LLU,93017LLU,1LLU),_20548c650_Range32(120782LLU,120831LLU,1LLU),_20548c650_Range32(123200LLU,123209LLU,1LLU),_20548c650_Range32(123632LLU,123641LLU,1LLU),_20548c650_Range32(124144LLU,124153LLU,1LLU),_20548c650_Range32(125264LLU,125273LLU,1LLU),_20548c650_Range32(130032LLU,130041LLU,1LLU)}),1LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__NL = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(5870LLU,5872LLU,1LLU),_20548c650_Range16(8544LLU,8578LLU,1LLU),_20548c650_Range16(8581LLU,8584LLU,1LLU),_20548c650_Range16(12295LLU,12321LLU,26LLU),_20548c650_Range16(12322LLU,12329LLU,1LLU),_20548c650_Range16(12344LLU,12346LLU,1LLU),_20548c650_Range16(42726LLU,42735LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(65856LLU,65908LLU,1LLU),_20548c650_Range32(66369LLU,66378LLU,9LLU),_20548c650_Range32(66513LLU,66517LLU,1LLU),_20548c650_Range32(74752LLU,74862LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__NO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(178LLU,179LLU,1LLU),_20548c650_Range16(185LLU,188LLU,3LLU),_20548c650_Range16(189LLU,190LLU,1LLU),_20548c650_Range16(2548LLU,2553LLU,1LLU),_20548c650_Range16(2930LLU,2935LLU,1LLU),_20548c650_Range16(3056LLU,3058LLU,1LLU),_20548c650_Range16(3192LLU,3198LLU,1LLU),_20548c650_Range16(3416LLU,3422LLU,1LLU),_20548c650_Range16(3440LLU,3448LLU,1LLU),_20548c650_Range16(3882LLU,3891LLU,1LLU),_20548c650_Range16(4969LLU,4988LLU,1LLU),_20548c650_Range16(6128LLU,6137LLU,1LLU),_20548c650_Range16(6618LLU,8304LLU,1686LLU),_20548c650_Range16(8308LLU,8313LLU,1LLU),_20548c650_Range16(8320LLU,8329LLU,1LLU),_20548c650_Range16(8528LLU,8543LLU,1LLU),_20548c650_Range16(8585LLU,9312LLU,727LLU),_20548c650_Range16(9313LLU,9371LLU,1LLU),_20548c650_Range16(9450LLU,9471LLU,1LLU),_20548c650_Range16(10102LLU,10131LLU,1LLU),_20548c650_Range16(11517LLU,12690LLU,1173LLU),_20548c650_Range16(12691LLU,12693LLU,1LLU),_20548c650_Range16(12832LLU,12841LLU,1LLU),_20548c650_Range16(12872LLU,12879LLU,1LLU),_20548c650_Range16(12881LLU,12895LLU,1LLU),_20548c650_Range16(12928LLU,12937LLU,1LLU),_20548c650_Range16(12977LLU,12991LLU,1LLU),_20548c650_Range16(43056LLU,43061LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(65799LLU,65843LLU,1LLU),_20548c650_Range32(65909LLU,65912LLU,1LLU),_20548c650_Range32(65930LLU,65931LLU,1LLU),_20548c650_Range32(66273LLU,66299LLU,1LLU),_20548c650_Range32(66336LLU,66339LLU,1LLU),_20548c650_Range32(67672LLU,67679LLU,1LLU),_20548c650_Range32(67705LLU,67711LLU,1LLU),_20548c650_Range32(67751LLU,67759LLU,1LLU),_20548c650_Range32(67835LLU,67839LLU,1LLU),_20548c650_Range32(67862LLU,67867LLU,1LLU),_20548c650_Range32(68028LLU,68029LLU,1LLU),_20548c650_Range32(68032LLU,68047LLU,1LLU),_20548c650_Range32(68050LLU,68095LLU,1LLU),_20548c650_Range32(68160LLU,68168LLU,1LLU),_20548c650_Range32(68221LLU,68222LLU,1LLU),_20548c650_Range32(68253LLU,68255LLU,1LLU),_20548c650_Range32(68331LLU,68335LLU,1LLU),_20548c650_Range32(68440LLU,68447LLU,1LLU),_20548c650_Range32(68472LLU,68479LLU,1LLU),_20548c650_Range32(68521LLU,68527LLU,1LLU),_20548c650_Range32(68858LLU,68863LLU,1LLU),_20548c650_Range32(69216LLU,69246LLU,1LLU),_20548c650_Range32(69405LLU,69414LLU,1LLU),_20548c650_Range32(69457LLU,69460LLU,1LLU),_20548c650_Range32(69573LLU,69579LLU,1LLU),_20548c650_Range32(69714LLU,69733LLU,1LLU),_20548c650_Range32(70113LLU,70132LLU,1LLU),_20548c650_Range32(71482LLU,71483LLU,1LLU),_20548c650_Range32(71914LLU,71922LLU,1LLU),_20548c650_Range32(72794LLU,72812LLU,1LLU),_20548c650_Range32(73664LLU,73684LLU,1LLU),_20548c650_Range32(93019LLU,93025LLU,1LLU),_20548c650_Range32(93824LLU,93846LLU,1LLU),_20548c650_Range32(119488LLU,119507LLU,1LLU),_20548c650_Range32(119520LLU,119539LLU,1LLU),_20548c650_Range32(119648LLU,119672LLU,1LLU),_20548c650_Range32(125127LLU,125135LLU,1LLU),_20548c650_Range32(126065LLU,126123LLU,1LLU),_20548c650_Range32(126125LLU,126127LLU,1LLU),_20548c650_Range32(126129LLU,126132LLU,1LLU),_20548c650_Range32(126209LLU,126253LLU,1LLU),_20548c650_Range32(126255LLU,126269LLU,1LLU),_20548c650_Range32(127232LLU,127244LLU,1LLU)}),3LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__P = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(33LLU,35LLU,1LLU),_20548c650_Range16(37LLU,42LLU,1LLU),_20548c650_Range16(44LLU,47LLU,1LLU),_20548c650_Range16(58LLU,59LLU,1LLU),_20548c650_Range16(63LLU,64LLU,1LLU),_20548c650_Range16(91LLU,93LLU,1LLU),_20548c650_Range16(95LLU,123LLU,28LLU),_20548c650_Range16(125LLU,161LLU,36LLU),_20548c650_Range16(167LLU,171LLU,4LLU),_20548c650_Range16(182LLU,183LLU,1LLU),_20548c650_Range16(187LLU,191LLU,4LLU),_20548c650_Range16(894LLU,903LLU,9LLU),_20548c650_Range16(1370LLU,1375LLU,1LLU),_20548c650_Range16(1417LLU,1418LLU,1LLU),_20548c650_Range16(1470LLU,1472LLU,2LLU),_20548c650_Range16(1475LLU,1478LLU,3LLU),_20548c650_Range16(1523LLU,1524LLU,1LLU),_20548c650_Range16(1545LLU,1546LLU,1LLU),_20548c650_Range16(1548LLU,1549LLU,1LLU),_20548c650_Range16(1563LLU,1565LLU,2LLU),_20548c650_Range16(1566LLU,1567LLU,1LLU),_20548c650_Range16(1642LLU,1645LLU,1LLU),_20548c650_Range16(1748LLU,1792LLU,44LLU),_20548c650_Range16(1793LLU,1805LLU,1LLU),_20548c650_Range16(2039LLU,2041LLU,1LLU),_20548c650_Range16(2096LLU,2110LLU,1LLU),_20548c650_Range16(2142LLU,2404LLU,262LLU),_20548c650_Range16(2405LLU,2416LLU,11LLU),_20548c650_Range16(2557LLU,2678LLU,121LLU),_20548c650_Range16(2800LLU,3191LLU,391LLU),_20548c650_Range16(3204LLU,3572LLU,368LLU),_20548c650_Range16(3663LLU,3674LLU,11LLU),_20548c650_Range16(3675LLU,3844LLU,169LLU),_20548c650_Range16(3845LLU,3858LLU,1LLU),_20548c650_Range16(3860LLU,3898LLU,38LLU),_20548c650_Range16(3899LLU,3901LLU,1LLU),_20548c650_Range16(3973LLU,4048LLU,75LLU),_20548c650_Range16(4049LLU,4052LLU,1LLU),_20548c650_Range16(4057LLU,4058LLU,1LLU),_20548c650_Range16(4170LLU,4175LLU,1LLU),_20548c650_Range16(4347LLU,4960LLU,613LLU),_20548c650_Range16(4961LLU,4968LLU,1LLU),_20548c650_Range16(5120LLU,5742LLU,622LLU),_20548c650_Range16(5787LLU,5788LLU,1LLU),_20548c650_Range16(5867LLU,5869LLU,1LLU),_20548c650_Range16(5941LLU,5942LLU,1LLU),_20548c650_Range16(6100LLU,6102LLU,1LLU),_20548c650_Range16(6104LLU,6106LLU,1LLU),_20548c650_Range16(6144LLU,6154LLU,1LLU),_20548c650_Range16(6468LLU,6469LLU,1LLU),_20548c650_Range16(6686LLU,6687LLU,1LLU),_20548c650_Range16(6816LLU,6822LLU,1LLU),_20548c650_Range16(6824LLU,6829LLU,1LLU),_20548c650_Range16(7002LLU,7008LLU,1LLU),_20548c650_Range16(7037LLU,7038LLU,1LLU),_20548c650_Range16(7164LLU,7167LLU,1LLU),_20548c650_Range16(7227LLU,7231LLU,1LLU),_20548c650_Range16(7294LLU,7295LLU,1LLU),_20548c650_Range16(7360LLU,7367LLU,1LLU),_20548c650_Range16(7379LLU,8208LLU,829LLU),_20548c650_Range16(8209LLU,8231LLU,1LLU),_20548c650_Range16(8240LLU,8259LLU,1LLU),_20548c650_Range16(8261LLU,8273LLU,1LLU),_20548c650_Range16(8275LLU,8286LLU,1LLU),_20548c650_Range16(8317LLU,8318LLU,1LLU),_20548c650_Range16(8333LLU,8334LLU,1LLU),_20548c650_Range16(8968LLU,8971LLU,1LLU),_20548c650_Range16(9001LLU,9002LLU,1LLU),_20548c650_Range16(10088LLU,10101LLU,1LLU),_20548c650_Range16(10181LLU,10182LLU,1LLU),_20548c650_Range16(10214LLU,10223LLU,1LLU),_20548c650_Range16(10627LLU,10648LLU,1LLU),_20548c650_Range16(10712LLU,10715LLU,1LLU),_20548c650_Range16(10748LLU,10749LLU,1LLU),_20548c650_Range16(11513LLU,11516LLU,1LLU),_20548c650_Range16(11518LLU,11519LLU,1LLU),_20548c650_Range16(11632LLU,11776LLU,144LLU),_20548c650_Range16(11777LLU,11822LLU,1LLU),_20548c650_Range16(11824LLU,11855LLU,1LLU),_20548c650_Range16(11858LLU,11869LLU,1LLU),_20548c650_Range16(12289LLU,12291LLU,1LLU),_20548c650_Range16(12296LLU,12305LLU,1LLU),_20548c650_Range16(12308LLU,12319LLU,1LLU),_20548c650_Range16(12336LLU,12349LLU,13LLU),_20548c650_Range16(12448LLU,12539LLU,91LLU),_20548c650_Range16(42238LLU,42239LLU,1LLU),_20548c650_Range16(42509LLU,42511LLU,1LLU),_20548c650_Range16(42611LLU,42622LLU,11LLU),_20548c650_Range16(42738LLU,42743LLU,1LLU),_20548c650_Range16(43124LLU,43127LLU,1LLU),_20548c650_Range16(43214LLU,43215LLU,1LLU),_20548c650_Range16(43256LLU,43258LLU,1LLU),_20548c650_Range16(43260LLU,43310LLU,50LLU),_20548c650_Range16(43311LLU,43359LLU,48LLU),_20548c650_Range16(43457LLU,43469LLU,1LLU),_20548c650_Range16(43486LLU,43487LLU,1LLU),_20548c650_Range16(43612LLU,43615LLU,1LLU),_20548c650_Range16(43742LLU,43743LLU,1LLU),_20548c650_Range16(43760LLU,43761LLU,1LLU),_20548c650_Range16(44011LLU,64830LLU,20819LLU),_20548c650_Range16(64831LLU,65040LLU,209LLU),_20548c650_Range16(65041LLU,65049LLU,1LLU),_20548c650_Range16(65072LLU,65106LLU,1LLU),_20548c650_Range16(65108LLU,65121LLU,1LLU),_20548c650_Range16(65123LLU,65128LLU,5LLU),_20548c650_Range16(65130LLU,65131LLU,1LLU),_20548c650_Range16(65281LLU,65283LLU,1LLU),_20548c650_Range16(65285LLU,65290LLU,1LLU),_20548c650_Range16(65292LLU,65295LLU,1LLU),_20548c650_Range16(65306LLU,65307LLU,1LLU),_20548c650_Range16(65311LLU,65312LLU,1LLU),_20548c650_Range16(65339LLU,65341LLU,1LLU),_20548c650_Range16(65343LLU,65371LLU,28LLU),_20548c650_Range16(65373LLU,65375LLU,2LLU),_20548c650_Range16(65376LLU,65381LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(65792LLU,65794LLU,1LLU),_20548c650_Range32(66463LLU,66512LLU,49LLU),_20548c650_Range32(66927LLU,67671LLU,744LLU),_20548c650_Range32(67871LLU,67903LLU,32LLU),_20548c650_Range32(68176LLU,68184LLU,1LLU),_20548c650_Range32(68223LLU,68336LLU,113LLU),_20548c650_Range32(68337LLU,68342LLU,1LLU),_20548c650_Range32(68409LLU,68415LLU,1LLU),_20548c650_Range32(68505LLU,68508LLU,1LLU),_20548c650_Range32(69293LLU,69461LLU,168LLU),_20548c650_Range32(69462LLU,69465LLU,1LLU),_20548c650_Range32(69510LLU,69513LLU,1LLU),_20548c650_Range32(69703LLU,69709LLU,1LLU),_20548c650_Range32(69819LLU,69820LLU,1LLU),_20548c650_Range32(69822LLU,69825LLU,1LLU),_20548c650_Range32(69952LLU,69955LLU,1LLU),_20548c650_Range32(70004LLU,70005LLU,1LLU),_20548c650_Range32(70085LLU,70088LLU,1LLU),_20548c650_Range32(70093LLU,70107LLU,14LLU),_20548c650_Range32(70109LLU,70111LLU,1LLU),_20548c650_Range32(70200LLU,70205LLU,1LLU),_20548c650_Range32(70313LLU,70731LLU,418LLU),_20548c650_Range32(70732LLU,70735LLU,1LLU),_20548c650_Range32(70746LLU,70747LLU,1LLU),_20548c650_Range32(70749LLU,70854LLU,105LLU),_20548c650_Range32(71105LLU,71127LLU,1LLU),_20548c650_Range32(71233LLU,71235LLU,1LLU),_20548c650_Range32(71264LLU,71276LLU,1LLU),_20548c650_Range32(71353LLU,71484LLU,131LLU),_20548c650_Range32(71485LLU,71486LLU,1LLU),_20548c650_Range32(71739LLU,72004LLU,265LLU),_20548c650_Range32(72005LLU,72006LLU,1LLU),_20548c650_Range32(72162LLU,72255LLU,93LLU),_20548c650_Range32(72256LLU,72262LLU,1LLU),_20548c650_Range32(72346LLU,72348LLU,1LLU),_20548c650_Range32(72350LLU,72354LLU,1LLU),_20548c650_Range32(72448LLU,72457LLU,1LLU),_20548c650_Range32(72769LLU,72773LLU,1LLU),_20548c650_Range32(72816LLU,72817LLU,1LLU),_20548c650_Range32(73463LLU,73464LLU,1LLU),_20548c650_Range32(73539LLU,73551LLU,1LLU),_20548c650_Range32(73727LLU,74864LLU,1137LLU),_20548c650_Range32(74865LLU,74868LLU,1LLU),_20548c650_Range32(77809LLU,77810LLU,1LLU),_20548c650_Range32(92782LLU,92783LLU,1LLU),_20548c650_Range32(92917LLU,92983LLU,66LLU),_20548c650_Range32(92984LLU,92987LLU,1LLU),_20548c650_Range32(92996LLU,93847LLU,851LLU),_20548c650_Range32(93848LLU,93850LLU,1LLU),_20548c650_Range32(94178LLU,113823LLU,19645LLU),_20548c650_Range32(121479LLU,121483LLU,1LLU),_20548c650_Range32(125278LLU,125279LLU,1LLU)}),11LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(95LLU,8255LLU,8160LLU),_20548c650_Range16(8256LLU,8276LLU,20LLU),_20548c650_Range16(65075LLU,65076LLU,1LLU),_20548c650_Range16(65101LLU,65103LLU,1LLU),_20548c650_Range16(65343LLU,65343LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PD = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(45LLU,1418LLU,1373LLU),_20548c650_Range16(1470LLU,5120LLU,3650LLU),_20548c650_Range16(6150LLU,8208LLU,2058LLU),_20548c650_Range16(8209LLU,8213LLU,1LLU),_20548c650_Range16(11799LLU,11802LLU,3LLU),_20548c650_Range16(11834LLU,11835LLU,1LLU),_20548c650_Range16(11840LLU,11869LLU,29LLU),_20548c650_Range16(12316LLU,12336LLU,20LLU),_20548c650_Range16(12448LLU,65073LLU,52625LLU),_20548c650_Range16(65074LLU,65112LLU,38LLU),_20548c650_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(41LLU,93LLU,52LLU),_20548c650_Range16(125LLU,3899LLU,3774LLU),_20548c650_Range16(3901LLU,5788LLU,1887LLU),_20548c650_Range16(8262LLU,8318LLU,56LLU),_20548c650_Range16(8334LLU,8969LLU,635LLU),_20548c650_Range16(8971LLU,9002LLU,31LLU),_20548c650_Range16(10089LLU,10101LLU,2LLU),_20548c650_Range16(10182LLU,10215LLU,33LLU),_20548c650_Range16(10217LLU,10223LLU,2LLU),_20548c650_Range16(10628LLU,10648LLU,2LLU),_20548c650_Range16(10713LLU,10715LLU,2LLU),_20548c650_Range16(10749LLU,11811LLU,1062LLU),_20548c650_Range16(11813LLU,11817LLU,2LLU),_20548c650_Range16(11862LLU,11868LLU,2LLU),_20548c650_Range16(12297LLU,12305LLU,2LLU),_20548c650_Range16(12309LLU,12315LLU,2LLU),_20548c650_Range16(12318LLU,12319LLU,1LLU),_20548c650_Range16(64830LLU,65048LLU,218LLU),_20548c650_Range16(65078LLU,65092LLU,2LLU),_20548c650_Range16(65096LLU,65114LLU,18LLU),_20548c650_Range16(65116LLU,65118LLU,2LLU),_20548c650_Range16(65289LLU,65341LLU,52LLU),_20548c650_Range16(65373LLU,65379LLU,3LLU)}),jule::Slice<_20548c650_Range32>(),1LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PF = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(187LLU,8217LLU,8030LLU),_20548c650_Range16(8221LLU,8250LLU,29LLU),_20548c650_Range16(11779LLU,11781LLU,2LLU),_20548c650_Range16(11786LLU,11789LLU,3LLU),_20548c650_Range16(11805LLU,11809LLU,4LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(171LLU,8216LLU,8045LLU),_20548c650_Range16(8219LLU,8220LLU,1LLU),_20548c650_Range16(8223LLU,8249LLU,26LLU),_20548c650_Range16(11778LLU,11780LLU,2LLU),_20548c650_Range16(11785LLU,11788LLU,3LLU),_20548c650_Range16(11804LLU,11808LLU,4LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(33LLU,35LLU,1LLU),_20548c650_Range16(37LLU,39LLU,1LLU),_20548c650_Range16(42LLU,46LLU,2LLU),_20548c650_Range16(47LLU,58LLU,11LLU),_20548c650_Range16(59LLU,63LLU,4LLU),_20548c650_Range16(64LLU,92LLU,28LLU),_20548c650_Range16(161LLU,167LLU,6LLU),_20548c650_Range16(182LLU,183LLU,1LLU),_20548c650_Range16(191LLU,894LLU,703LLU),_20548c650_Range16(903LLU,1370LLU,467LLU),_20548c650_Range16(1371LLU,1375LLU,1LLU),_20548c650_Range16(1417LLU,1472LLU,55LLU),_20548c650_Range16(1475LLU,1478LLU,3LLU),_20548c650_Range16(1523LLU,1524LLU,1LLU),_20548c650_Range16(1545LLU,1546LLU,1LLU),_20548c650_Range16(1548LLU,1549LLU,1LLU),_20548c650_Range16(1563LLU,1565LLU,2LLU),_20548c650_Range16(1566LLU,1567LLU,1LLU),_20548c650_Range16(1642LLU,1645LLU,1LLU),_20548c650_Range16(1748LLU,1792LLU,44LLU),_20548c650_Range16(1793LLU,1805LLU,1LLU),_20548c650_Range16(2039LLU,2041LLU,1LLU),_20548c650_Range16(2096LLU,2110LLU,1LLU),_20548c650_Range16(2142LLU,2404LLU,262LLU),_20548c650_Range16(2405LLU,2416LLU,11LLU),_20548c650_Range16(2557LLU,2678LLU,121LLU),_20548c650_Range16(2800LLU,3191LLU,391LLU),_20548c650_Range16(3204LLU,3572LLU,368LLU),_20548c650_Range16(3663LLU,3674LLU,11LLU),_20548c650_Range16(3675LLU,3844LLU,169LLU),_20548c650_Range16(3845LLU,3858LLU,1LLU),_20548c650_Range16(3860LLU,3973LLU,113LLU),_20548c650_Range16(4048LLU,4052LLU,1LLU),_20548c650_Range16(4057LLU,4058LLU,1LLU),_20548c650_Range16(4170LLU,4175LLU,1LLU),_20548c650_Range16(4347LLU,4960LLU,613LLU),_20548c650_Range16(4961LLU,4968LLU,1LLU),_20548c650_Range16(5742LLU,5867LLU,125LLU),_20548c650_Range16(5868LLU,5869LLU,1LLU),_20548c650_Range16(5941LLU,5942LLU,1LLU),_20548c650_Range16(6100LLU,6102LLU,1LLU),_20548c650_Range16(6104LLU,6106LLU,1LLU),_20548c650_Range16(6144LLU,6149LLU,1LLU),_20548c650_Range16(6151LLU,6154LLU,1LLU),_20548c650_Range16(6468LLU,6469LLU,1LLU),_20548c650_Range16(6686LLU,6687LLU,1LLU),_20548c650_Range16(6816LLU,6822LLU,1LLU),_20548c650_Range16(6824LLU,6829LLU,1LLU),_20548c650_Range16(7002LLU,7008LLU,1LLU),_20548c650_Range16(7037LLU,7038LLU,1LLU),_20548c650_Range16(7164LLU,7167LLU,1LLU),_20548c650_Range16(7227LLU,7231LLU,1LLU),_20548c650_Range16(7294LLU,7295LLU,1LLU),_20548c650_Range16(7360LLU,7367LLU,1LLU),_20548c650_Range16(7379LLU,8214LLU,835LLU),_20548c650_Range16(8215LLU,8224LLU,9LLU),_20548c650_Range16(8225LLU,8231LLU,1LLU),_20548c650_Range16(8240LLU,8248LLU,1LLU),_20548c650_Range16(8251LLU,8254LLU,1LLU),_20548c650_Range16(8257LLU,8259LLU,1LLU),_20548c650_Range16(8263LLU,8273LLU,1LLU),_20548c650_Range16(8275LLU,8277LLU,2LLU),_20548c650_Range16(8278LLU,8286LLU,1LLU),_20548c650_Range16(11513LLU,11516LLU,1LLU),_20548c650_Range16(11518LLU,11519LLU,1LLU),_20548c650_Range16(11632LLU,11776LLU,144LLU),_20548c650_Range16(11777LLU,11782LLU,5LLU),_20548c650_Range16(11783LLU,11784LLU,1LLU),_20548c650_Range16(11787LLU,11790LLU,3LLU),_20548c650_Range16(11791LLU,11798LLU,1LLU),_20548c650_Range16(11800LLU,11801LLU,1LLU),_20548c650_Range16(11803LLU,11806LLU,3LLU),_20548c650_Range16(11807LLU,11818LLU,11LLU),_20548c650_Range16(11819LLU,11822LLU,1LLU),_20548c650_Range16(11824LLU,11833LLU,1LLU),_20548c650_Range16(11836LLU,11839LLU,1LLU),_20548c650_Range16(11841LLU,11843LLU,2LLU),_20548c650_Range16(11844LLU,11855LLU,1LLU),_20548c650_Range16(11858LLU,11860LLU,1LLU),_20548c650_Range16(12289LLU,12291LLU,1LLU),_20548c650_Range16(12349LLU,12539LLU,190LLU),_20548c650_Range16(42238LLU,42239LLU,1LLU),_20548c650_Range16(42509LLU,42511LLU,1LLU),_20548c650_Range16(42611LLU,42622LLU,11LLU),_20548c650_Range16(42738LLU,42743LLU,1LLU),_20548c650_Range16(43124LLU,43127LLU,1LLU),_20548c650_Range16(43214LLU,43215LLU,1LLU),_20548c650_Range16(43256LLU,43258LLU,1LLU),_20548c650_Range16(43260LLU,43310LLU,50LLU),_20548c650_Range16(43311LLU,43359LLU,48LLU),_20548c650_Range16(43457LLU,43469LLU,1LLU),_20548c650_Range16(43486LLU,43487LLU,1LLU),_20548c650_Range16(43612LLU,43615LLU,1LLU),_20548c650_Range16(43742LLU,43743LLU,1LLU),_20548c650_Range16(43760LLU,43761LLU,1LLU),_20548c650_Range16(44011LLU,65040LLU,21029LLU),_20548c650_Range16(65041LLU,65046LLU,1LLU),_20548c650_Range16(65049LLU,65072LLU,23LLU),_20548c650_Range16(65093LLU,65094LLU,1LLU),_20548c650_Range16(65097LLU,65100LLU,1LLU),_20548c650_Range16(65104LLU,65106LLU,1LLU),_20548c650_Range16(65108LLU,65111LLU,1LLU),_20548c650_Range16(65119LLU,65121LLU,1LLU),_20548c650_Range16(65128LLU,65130LLU,2LLU),_20548c650_Range16(65131LLU,65281LLU,150LLU),_20548c650_Range16(65282LLU,65283LLU,1LLU),_20548c650_Range16(65285LLU,65287LLU,1LLU),_20548c650_Range16(65290LLU,65294LLU,2LLU),_20548c650_Range16(65295LLU,65306LLU,11LLU),_20548c650_Range16(65307LLU,65311LLU,4LLU),_20548c650_Range16(65312LLU,65340LLU,28LLU),_20548c650_Range16(65377LLU,65380LLU,3LLU),_20548c650_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(65792LLU,65794LLU,1LLU),_20548c650_Range32(66463LLU,66512LLU,49LLU),_20548c650_Range32(66927LLU,67671LLU,744LLU),_20548c650_Range32(67871LLU,67903LLU,32LLU),_20548c650_Range32(68176LLU,68184LLU,1LLU),_20548c650_Range32(68223LLU,68336LLU,113LLU),_20548c650_Range32(68337LLU,68342LLU,1LLU),_20548c650_Range32(68409LLU,68415LLU,1LLU),_20548c650_Range32(68505LLU,68508LLU,1LLU),_20548c650_Range32(69461LLU,69465LLU,1LLU),_20548c650_Range32(69510LLU,69513LLU,1LLU),_20548c650_Range32(69703LLU,69709LLU,1LLU),_20548c650_Range32(69819LLU,69820LLU,1LLU),_20548c650_Range32(69822LLU,69825LLU,1LLU),_20548c650_Range32(69952LLU,69955LLU,1LLU),_20548c650_Range32(70004LLU,70005LLU,1LLU),_20548c650_Range32(70085LLU,70088LLU,1LLU),_20548c650_Range32(70093LLU,70107LLU,14LLU),_20548c650_Range32(70109LLU,70111LLU,1LLU),_20548c650_Range32(70200LLU,70205LLU,1LLU),_20548c650_Range32(70313LLU,70731LLU,418LLU),_20548c650_Range32(70732LLU,70735LLU,1LLU),_20548c650_Range32(70746LLU,70747LLU,1LLU),_20548c650_Range32(70749LLU,70854LLU,105LLU),_20548c650_Range32(71105LLU,71127LLU,1LLU),_20548c650_Range32(71233LLU,71235LLU,1LLU),_20548c650_Range32(71264LLU,71276LLU,1LLU),_20548c650_Range32(71353LLU,71484LLU,131LLU),_20548c650_Range32(71485LLU,71486LLU,1LLU),_20548c650_Range32(71739LLU,72004LLU,265LLU),_20548c650_Range32(72005LLU,72006LLU,1LLU),_20548c650_Range32(72162LLU,72255LLU,93LLU),_20548c650_Range32(72256LLU,72262LLU,1LLU),_20548c650_Range32(72346LLU,72348LLU,1LLU),_20548c650_Range32(72350LLU,72354LLU,1LLU),_20548c650_Range32(72448LLU,72457LLU,1LLU),_20548c650_Range32(72769LLU,72773LLU,1LLU),_20548c650_Range32(72816LLU,72817LLU,1LLU),_20548c650_Range32(73463LLU,73464LLU,1LLU),_20548c650_Range32(73539LLU,73551LLU,1LLU),_20548c650_Range32(73727LLU,74864LLU,1137LLU),_20548c650_Range32(74865LLU,74868LLU,1LLU),_20548c650_Range32(77809LLU,77810LLU,1LLU),_20548c650_Range32(92782LLU,92783LLU,1LLU),_20548c650_Range32(92917LLU,92983LLU,66LLU),_20548c650_Range32(92984LLU,92987LLU,1LLU),_20548c650_Range32(92996LLU,93847LLU,851LLU),_20548c650_Range32(93848LLU,93850LLU,1LLU),_20548c650_Range32(94178LLU,113823LLU,19645LLU),_20548c650_Range32(121479LLU,121483LLU,1LLU),_20548c650_Range32(125278LLU,125279LLU,1LLU)}),8LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PS = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(40LLU,91LLU,51LLU),_20548c650_Range16(123LLU,3898LLU,3775LLU),_20548c650_Range16(3900LLU,5787LLU,1887LLU),_20548c650_Range16(8218LLU,8222LLU,4LLU),_20548c650_Range16(8261LLU,8317LLU,56LLU),_20548c650_Range16(8333LLU,8968LLU,635LLU),_20548c650_Range16(8970LLU,9001LLU,31LLU),_20548c650_Range16(10088LLU,10100LLU,2LLU),_20548c650_Range16(10181LLU,10214LLU,33LLU),_20548c650_Range16(10216LLU,10222LLU,2LLU),_20548c650_Range16(10627LLU,10647LLU,2LLU),_20548c650_Range16(10712LLU,10714LLU,2LLU),_20548c650_Range16(10748LLU,11810LLU,1062LLU),_20548c650_Range16(11812LLU,11816LLU,2LLU),_20548c650_Range16(11842LLU,11861LLU,19LLU),_20548c650_Range16(11863LLU,11867LLU,2LLU),_20548c650_Range16(12296LLU,12304LLU,2LLU),_20548c650_Range16(12308LLU,12314LLU,2LLU),_20548c650_Range16(12317LLU,64831LLU,52514LLU),_20548c650_Range16(65047LLU,65077LLU,30LLU),_20548c650_Range16(65079LLU,65091LLU,2LLU),_20548c650_Range16(65095LLU,65113LLU,18LLU),_20548c650_Range16(65115LLU,65117LLU,2LLU),_20548c650_Range16(65288LLU,65339LLU,51LLU),_20548c650_Range16(65371LLU,65375LLU,4LLU),_20548c650_Range16(65378LLU,65378LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),1LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__S = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(36LLU,43LLU,7LLU),_20548c650_Range16(60LLU,62LLU,1LLU),_20548c650_Range16(94LLU,96LLU,2LLU),_20548c650_Range16(124LLU,126LLU,2LLU),_20548c650_Range16(162LLU,166LLU,1LLU),_20548c650_Range16(168LLU,169LLU,1LLU),_20548c650_Range16(172LLU,174LLU,2LLU),_20548c650_Range16(175LLU,177LLU,1LLU),_20548c650_Range16(180LLU,184LLU,4LLU),_20548c650_Range16(215LLU,247LLU,32LLU),_20548c650_Range16(706LLU,709LLU,1LLU),_20548c650_Range16(722LLU,735LLU,1LLU),_20548c650_Range16(741LLU,747LLU,1LLU),_20548c650_Range16(749LLU,751LLU,2LLU),_20548c650_Range16(752LLU,767LLU,1LLU),_20548c650_Range16(885LLU,900LLU,15LLU),_20548c650_Range16(901LLU,1014LLU,113LLU),_20548c650_Range16(1154LLU,1421LLU,267LLU),_20548c650_Range16(1422LLU,1423LLU,1LLU),_20548c650_Range16(1542LLU,1544LLU,1LLU),_20548c650_Range16(1547LLU,1550LLU,3LLU),_20548c650_Range16(1551LLU,1758LLU,207LLU),_20548c650_Range16(1769LLU,1789LLU,20LLU),_20548c650_Range16(1790LLU,2038LLU,248LLU),_20548c650_Range16(2046LLU,2047LLU,1LLU),_20548c650_Range16(2184LLU,2546LLU,362LLU),_20548c650_Range16(2547LLU,2554LLU,7LLU),_20548c650_Range16(2555LLU,2801LLU,246LLU),_20548c650_Range16(2928LLU,3059LLU,131LLU),_20548c650_Range16(3060LLU,3066LLU,1LLU),_20548c650_Range16(3199LLU,3407LLU,208LLU),_20548c650_Range16(3449LLU,3647LLU,198LLU),_20548c650_Range16(3841LLU,3843LLU,1LLU),_20548c650_Range16(3859LLU,3861LLU,2LLU),_20548c650_Range16(3862LLU,3863LLU,1LLU),_20548c650_Range16(3866LLU,3871LLU,1LLU),_20548c650_Range16(3892LLU,3896LLU,2LLU),_20548c650_Range16(4030LLU,4037LLU,1LLU),_20548c650_Range16(4039LLU,4044LLU,1LLU),_20548c650_Range16(4046LLU,4047LLU,1LLU),_20548c650_Range16(4053LLU,4056LLU,1LLU),_20548c650_Range16(4254LLU,4255LLU,1LLU),_20548c650_Range16(5008LLU,5017LLU,1LLU),_20548c650_Range16(5741LLU,6107LLU,366LLU),_20548c650_Range16(6464LLU,6622LLU,158LLU),_20548c650_Range16(6623LLU,6655LLU,1LLU),_20548c650_Range16(7009LLU,7018LLU,1LLU),_20548c650_Range16(7028LLU,7036LLU,1LLU),_20548c650_Range16(8125LLU,8127LLU,2LLU),_20548c650_Range16(8128LLU,8129LLU,1LLU),_20548c650_Range16(8141LLU,8143LLU,1LLU),_20548c650_Range16(8157LLU,8159LLU,1LLU),_20548c650_Range16(8173LLU,8175LLU,1LLU),_20548c650_Range16(8189LLU,8190LLU,1LLU),_20548c650_Range16(8260LLU,8274LLU,14LLU),_20548c650_Range16(8314LLU,8316LLU,1LLU),_20548c650_Range16(8330LLU,8332LLU,1LLU),_20548c650_Range16(8352LLU,8384LLU,1LLU),_20548c650_Range16(8448LLU,8449LLU,1LLU),_20548c650_Range16(8451LLU,8454LLU,1LLU),_20548c650_Range16(8456LLU,8457LLU,1LLU),_20548c650_Range16(8468LLU,8470LLU,2LLU),_20548c650_Range16(8471LLU,8472LLU,1LLU),_20548c650_Range16(8478LLU,8483LLU,1LLU),_20548c650_Range16(8485LLU,8489LLU,2LLU),_20548c650_Range16(8494LLU,8506LLU,12LLU),_20548c650_Range16(8507LLU,8512LLU,5LLU),_20548c650_Range16(8513LLU,8516LLU,1LLU),_20548c650_Range16(8522LLU,8525LLU,1LLU),_20548c650_Range16(8527LLU,8586LLU,59LLU),_20548c650_Range16(8587LLU,8592LLU,5LLU),_20548c650_Range16(8593LLU,8967LLU,1LLU),_20548c650_Range16(8972LLU,9000LLU,1LLU),_20548c650_Range16(9003LLU,9254LLU,1LLU),_20548c650_Range16(9280LLU,9290LLU,1LLU),_20548c650_Range16(9372LLU,9449LLU,1LLU),_20548c650_Range16(9472LLU,10087LLU,1LLU),_20548c650_Range16(10132LLU,10180LLU,1LLU),_20548c650_Range16(10183LLU,10213LLU,1LLU),_20548c650_Range16(10224LLU,10626LLU,1LLU),_20548c650_Range16(10649LLU,10711LLU,1LLU),_20548c650_Range16(10716LLU,10747LLU,1LLU),_20548c650_Range16(10750LLU,11123LLU,1LLU),_20548c650_Range16(11126LLU,11157LLU,1LLU),_20548c650_Range16(11159LLU,11263LLU,1LLU),_20548c650_Range16(11493LLU,11498LLU,1LLU),_20548c650_Range16(11856LLU,11857LLU,1LLU),_20548c650_Range16(11904LLU,11929LLU,1LLU),_20548c650_Range16(11931LLU,12019LLU,1LLU),_20548c650_Range16(12032LLU,12245LLU,1LLU),_20548c650_Range16(12272LLU,12283LLU,1LLU),_20548c650_Range16(12292LLU,12306LLU,14LLU),_20548c650_Range16(12307LLU,12320LLU,13LLU),_20548c650_Range16(12342LLU,12343LLU,1LLU),_20548c650_Range16(12350LLU,12351LLU,1LLU),_20548c650_Range16(12443LLU,12444LLU,1LLU),_20548c650_Range16(12688LLU,12689LLU,1LLU),_20548c650_Range16(12694LLU,12703LLU,1LLU),_20548c650_Range16(12736LLU,12771LLU,1LLU),_20548c650_Range16(12800LLU,12830LLU,1LLU),_20548c650_Range16(12842LLU,12871LLU,1LLU),_20548c650_Range16(12880LLU,12896LLU,16LLU),_20548c650_Range16(12897LLU,12927LLU,1LLU),_20548c650_Range16(12938LLU,12976LLU,1LLU),_20548c650_Range16(12992LLU,13311LLU,1LLU),_20548c650_Range16(19904LLU,19967LLU,1LLU),_20548c650_Range16(42128LLU,42182LLU,1LLU),_20548c650_Range16(42752LLU,42774LLU,1LLU),_20548c650_Range16(42784LLU,42785LLU,1LLU),_20548c650_Range16(42889LLU,42890LLU,1LLU),_20548c650_Range16(43048LLU,43051LLU,1LLU),_20548c650_Range16(43062LLU,43065LLU,1LLU),_20548c650_Range16(43639LLU,43641LLU,1LLU),_20548c650_Range16(43867LLU,43882LLU,15LLU),_20548c650_Range16(43883LLU,64297LLU,20414LLU),_20548c650_Range16(64434LLU,64450LLU,1LLU),_20548c650_Range16(64832LLU,64847LLU,1LLU),_20548c650_Range16(64975LLU,65020LLU,45LLU),_20548c650_Range16(65021LLU,65023LLU,1LLU),_20548c650_Range16(65122LLU,65124LLU,2LLU),_20548c650_Range16(65125LLU,65126LLU,1LLU),_20548c650_Range16(65129LLU,65284LLU,155LLU),_20548c650_Range16(65291LLU,65308LLU,17LLU),_20548c650_Range16(65309LLU,65310LLU,1LLU),_20548c650_Range16(65342LLU,65344LLU,2LLU),_20548c650_Range16(65372LLU,65374LLU,2LLU),_20548c650_Range16(65504LLU,65510LLU,1LLU),_20548c650_Range16(65512LLU,65518LLU,1LLU),_20548c650_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(65847LLU,65855LLU,1LLU),_20548c650_Range32(65913LLU,65929LLU,1LLU),_20548c650_Range32(65932LLU,65934LLU,1LLU),_20548c650_Range32(65936LLU,65948LLU,1LLU),_20548c650_Range32(65952LLU,66000LLU,48LLU),_20548c650_Range32(66001LLU,66044LLU,1LLU),_20548c650_Range32(67703LLU,67704LLU,1LLU),_20548c650_Range32(68296LLU,71487LLU,3191LLU),_20548c650_Range32(73685LLU,73713LLU,1LLU),_20548c650_Range32(92988LLU,92991LLU,1LLU),_20548c650_Range32(92997LLU,113820LLU,20823LLU),_20548c650_Range32(118608LLU,118723LLU,1LLU),_20548c650_Range32(118784LLU,119029LLU,1LLU),_20548c650_Range32(119040LLU,119078LLU,1LLU),_20548c650_Range32(119081LLU,119140LLU,1LLU),_20548c650_Range32(119146LLU,119148LLU,1LLU),_20548c650_Range32(119171LLU,119172LLU,1LLU),_20548c650_Range32(119180LLU,119209LLU,1LLU),_20548c650_Range32(119214LLU,119274LLU,1LLU),_20548c650_Range32(119296LLU,119361LLU,1LLU),_20548c650_Range32(119365LLU,119552LLU,187LLU),_20548c650_Range32(119553LLU,119638LLU,1LLU),_20548c650_Range32(120513LLU,120539LLU,26LLU),_20548c650_Range32(120571LLU,120597LLU,26LLU),_20548c650_Range32(120629LLU,120655LLU,26LLU),_20548c650_Range32(120687LLU,120713LLU,26LLU),_20548c650_Range32(120745LLU,120771LLU,26LLU),_20548c650_Range32(120832LLU,121343LLU,1LLU),_20548c650_Range32(121399LLU,121402LLU,1LLU),_20548c650_Range32(121453LLU,121460LLU,1LLU),_20548c650_Range32(121462LLU,121475LLU,1LLU),_20548c650_Range32(121477LLU,121478LLU,1LLU),_20548c650_Range32(123215LLU,123647LLU,432LLU),_20548c650_Range32(126124LLU,126128LLU,4LLU),_20548c650_Range32(126254LLU,126704LLU,450LLU),_20548c650_Range32(126705LLU,126976LLU,271LLU),_20548c650_Range32(126977LLU,127019LLU,1LLU),_20548c650_Range32(127024LLU,127123LLU,1LLU),_20548c650_Range32(127136LLU,127150LLU,1LLU),_20548c650_Range32(127153LLU,127167LLU,1LLU),_20548c650_Range32(127169LLU,127183LLU,1LLU),_20548c650_Range32(127185LLU,127221LLU,1LLU),_20548c650_Range32(127245LLU,127405LLU,1LLU),_20548c650_Range32(127462LLU,127490LLU,1LLU),_20548c650_Range32(127504LLU,127547LLU,1LLU),_20548c650_Range32(127552LLU,127560LLU,1LLU),_20548c650_Range32(127568LLU,127569LLU,1LLU),_20548c650_Range32(127584LLU,127589LLU,1LLU),_20548c650_Range32(127744LLU,128727LLU,1LLU),_20548c650_Range32(128732LLU,128748LLU,1LLU),_20548c650_Range32(128752LLU,128764LLU,1LLU),_20548c650_Range32(128768LLU,128886LLU,1LLU),_20548c650_Range32(128891LLU,128985LLU,1LLU),_20548c650_Range32(128992LLU,129003LLU,1LLU),_20548c650_Range32(129008LLU,129024LLU,16LLU),_20548c650_Range32(129025LLU,129035LLU,1LLU),_20548c650_Range32(129040LLU,129095LLU,1LLU),_20548c650_Range32(129104LLU,129113LLU,1LLU),_20548c650_Range32(129120LLU,129159LLU,1LLU),_20548c650_Range32(129168LLU,129197LLU,1LLU),_20548c650_Range32(129200LLU,129201LLU,1LLU),_20548c650_Range32(129280LLU,129619LLU,1LLU),_20548c650_Range32(129632LLU,129645LLU,1LLU),_20548c650_Range32(129648LLU,129660LLU,1LLU),_20548c650_Range32(129664LLU,129672LLU,1LLU),_20548c650_Range32(129680LLU,129725LLU,1LLU),_20548c650_Range32(129727LLU,129733LLU,1LLU),_20548c650_Range32(129742LLU,129755LLU,1LLU),_20548c650_Range32(129760LLU,129768LLU,1LLU),_20548c650_Range32(129776LLU,129784LLU,1LLU),_20548c650_Range32(129792LLU,129938LLU,1LLU),_20548c650_Range32(129940LLU,129994LLU,1LLU)}),10LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(36LLU,162LLU,126LLU),_20548c650_Range16(163LLU,165LLU,1LLU),_20548c650_Range16(1423LLU,1547LLU,124LLU),_20548c650_Range16(2046LLU,2047LLU,1LLU),_20548c650_Range16(2546LLU,2547LLU,1LLU),_20548c650_Range16(2555LLU,2801LLU,246LLU),_20548c650_Range16(3065LLU,3647LLU,582LLU),_20548c650_Range16(6107LLU,8352LLU,2245LLU),_20548c650_Range16(8353LLU,8384LLU,1LLU),_20548c650_Range16(43064LLU,65020LLU,21956LLU),_20548c650_Range16(65129LLU,65284LLU,155LLU),_20548c650_Range16(65504LLU,65505LLU,1LLU),_20548c650_Range16(65509LLU,65510LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(73693LLU,73696LLU,1LLU),_20548c650_Range32(123647LLU,126128LLU,2481LLU)}),2LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SK = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(94LLU,96LLU,2LLU),_20548c650_Range16(168LLU,175LLU,7LLU),_20548c650_Range16(180LLU,184LLU,4LLU),_20548c650_Range16(706LLU,709LLU,1LLU),_20548c650_Range16(722LLU,735LLU,1LLU),_20548c650_Range16(741LLU,747LLU,1LLU),_20548c650_Range16(749LLU,751LLU,2LLU),_20548c650_Range16(752LLU,767LLU,1LLU),_20548c650_Range16(885LLU,900LLU,15LLU),_20548c650_Range16(901LLU,2184LLU,1283LLU),_20548c650_Range16(8125LLU,8127LLU,2LLU),_20548c650_Range16(8128LLU,8129LLU,1LLU),_20548c650_Range16(8141LLU,8143LLU,1LLU),_20548c650_Range16(8157LLU,8159LLU,1LLU),_20548c650_Range16(8173LLU,8175LLU,1LLU),_20548c650_Range16(8189LLU,8190LLU,1LLU),_20548c650_Range16(12443LLU,12444LLU,1LLU),_20548c650_Range16(42752LLU,42774LLU,1LLU),_20548c650_Range16(42784LLU,42785LLU,1LLU),_20548c650_Range16(42889LLU,42890LLU,1LLU),_20548c650_Range16(43867LLU,43882LLU,15LLU),_20548c650_Range16(43883LLU,64434LLU,20551LLU),_20548c650_Range16(64435LLU,64450LLU,1LLU),_20548c650_Range16(65342LLU,65344LLU,2LLU),_20548c650_Range16(65507LLU,65507LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(127995LLU,127999LLU,1LLU)}),3LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SM = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(43LLU,60LLU,17LLU),_20548c650_Range16(61LLU,62LLU,1LLU),_20548c650_Range16(124LLU,126LLU,2LLU),_20548c650_Range16(172LLU,177LLU,5LLU),_20548c650_Range16(215LLU,247LLU,32LLU),_20548c650_Range16(1014LLU,1542LLU,528LLU),_20548c650_Range16(1543LLU,1544LLU,1LLU),_20548c650_Range16(8260LLU,8274LLU,14LLU),_20548c650_Range16(8314LLU,8316LLU,1LLU),_20548c650_Range16(8330LLU,8332LLU,1LLU),_20548c650_Range16(8472LLU,8512LLU,40LLU),_20548c650_Range16(8513LLU,8516LLU,1LLU),_20548c650_Range16(8523LLU,8592LLU,69LLU),_20548c650_Range16(8593LLU,8596LLU,1LLU),_20548c650_Range16(8602LLU,8603LLU,1LLU),_20548c650_Range16(8608LLU,8614LLU,3LLU),_20548c650_Range16(8622LLU,8654LLU,32LLU),_20548c650_Range16(8655LLU,8658LLU,3LLU),_20548c650_Range16(8660LLU,8692LLU,32LLU),_20548c650_Range16(8693LLU,8959LLU,1LLU),_20548c650_Range16(8992LLU,8993LLU,1LLU),_20548c650_Range16(9084LLU,9115LLU,31LLU),_20548c650_Range16(9116LLU,9139LLU,1LLU),_20548c650_Range16(9180LLU,9185LLU,1LLU),_20548c650_Range16(9655LLU,9665LLU,10LLU),_20548c650_Range16(9720LLU,9727LLU,1LLU),_20548c650_Range16(9839LLU,10176LLU,337LLU),_20548c650_Range16(10177LLU,10180LLU,1LLU),_20548c650_Range16(10183LLU,10213LLU,1LLU),_20548c650_Range16(10224LLU,10239LLU,1LLU),_20548c650_Range16(10496LLU,10626LLU,1LLU),_20548c650_Range16(10649LLU,10711LLU,1LLU),_20548c650_Range16(10716LLU,10747LLU,1LLU),_20548c650_Range16(10750LLU,11007LLU,1LLU),_20548c650_Range16(11056LLU,11076LLU,1LLU),_20548c650_Range16(11079LLU,11084LLU,1LLU),_20548c650_Range16(64297LLU,65122LLU,825LLU),_20548c650_Range16(65124LLU,65126LLU,1LLU),_20548c650_Range16(65291LLU,65308LLU,17LLU),_20548c650_Range16(65309LLU,65310LLU,1LLU),_20548c650_Range16(65372LLU,65374LLU,2LLU),_20548c650_Range16(65506LLU,65513LLU,7LLU),_20548c650_Range16(65514LLU,65516LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(120513LLU,120539LLU,26LLU),_20548c650_Range32(120571LLU,120597LLU,26LLU),_20548c650_Range32(120629LLU,120655LLU,26LLU),_20548c650_Range32(120687LLU,120713LLU,26LLU),_20548c650_Range32(120745LLU,120771LLU,26LLU),_20548c650_Range32(126704LLU,126705LLU,1LLU)}),5LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(166LLU,169LLU,3LLU),_20548c650_Range16(174LLU,176LLU,2LLU),_20548c650_Range16(1154LLU,1421LLU,267LLU),_20548c650_Range16(1422LLU,1550LLU,128LLU),_20548c650_Range16(1551LLU,1758LLU,207LLU),_20548c650_Range16(1769LLU,1789LLU,20LLU),_20548c650_Range16(1790LLU,2038LLU,248LLU),_20548c650_Range16(2554LLU,2928LLU,374LLU),_20548c650_Range16(3059LLU,3064LLU,1LLU),_20548c650_Range16(3066LLU,3199LLU,133LLU),_20548c650_Range16(3407LLU,3449LLU,42LLU),_20548c650_Range16(3841LLU,3843LLU,1LLU),_20548c650_Range16(3859LLU,3861LLU,2LLU),_20548c650_Range16(3862LLU,3863LLU,1LLU),_20548c650_Range16(3866LLU,3871LLU,1LLU),_20548c650_Range16(3892LLU,3896LLU,2LLU),_20548c650_Range16(4030LLU,4037LLU,1LLU),_20548c650_Range16(4039LLU,4044LLU,1LLU),_20548c650_Range16(4046LLU,4047LLU,1LLU),_20548c650_Range16(4053LLU,4056LLU,1LLU),_20548c650_Range16(4254LLU,4255LLU,1LLU),_20548c650_Range16(5008LLU,5017LLU,1LLU),_20548c650_Range16(5741LLU,6464LLU,723LLU),_20548c650_Range16(6622LLU,6655LLU,1LLU),_20548c650_Range16(7009LLU,7018LLU,1LLU),_20548c650_Range16(7028LLU,7036LLU,1LLU),_20548c650_Range16(8448LLU,8449LLU,1LLU),_20548c650_Range16(8451LLU,8454LLU,1LLU),_20548c650_Range16(8456LLU,8457LLU,1LLU),_20548c650_Range16(8468LLU,8470LLU,2LLU),_20548c650_Range16(8471LLU,8478LLU,7LLU),_20548c650_Range16(8479LLU,8483LLU,1LLU),_20548c650_Range16(8485LLU,8489LLU,2LLU),_20548c650_Range16(8494LLU,8506LLU,12LLU),_20548c650_Range16(8507LLU,8522LLU,15LLU),_20548c650_Range16(8524LLU,8525LLU,1LLU),_20548c650_Range16(8527LLU,8586LLU,59LLU),_20548c650_Range16(8587LLU,8597LLU,10LLU),_20548c650_Range16(8598LLU,8601LLU,1LLU),_20548c650_Range16(8604LLU,8607LLU,1LLU),_20548c650_Range16(8609LLU,8610LLU,1LLU),_20548c650_Range16(8612LLU,8613LLU,1LLU),_20548c650_Range16(8615LLU,8621LLU,1LLU),_20548c650_Range16(8623LLU,8653LLU,1LLU),_20548c650_Range16(8656LLU,8657LLU,1LLU),_20548c650_Range16(8659LLU,8661LLU,2LLU),_20548c650_Range16(8662LLU,8691LLU,1LLU),_20548c650_Range16(8960LLU,8967LLU,1LLU),_20548c650_Range16(8972LLU,8991LLU,1LLU),_20548c650_Range16(8994LLU,9000LLU,1LLU),_20548c650_Range16(9003LLU,9083LLU,1LLU),_20548c650_Range16(9085LLU,9114LLU,1LLU),_20548c650_Range16(9140LLU,9179LLU,1LLU),_20548c650_Range16(9186LLU,9254LLU,1LLU),_20548c650_Range16(9280LLU,9290LLU,1LLU),_20548c650_Range16(9372LLU,9449LLU,1LLU),_20548c650_Range16(9472LLU,9654LLU,1LLU),_20548c650_Range16(9656LLU,9664LLU,1LLU),_20548c650_Range16(9666LLU,9719LLU,1LLU),_20548c650_Range16(9728LLU,9838LLU,1LLU),_20548c650_Range16(9840LLU,10087LLU,1LLU),_20548c650_Range16(10132LLU,10175LLU,1LLU),_20548c650_Range16(10240LLU,10495LLU,1LLU),_20548c650_Range16(11008LLU,11055LLU,1LLU),_20548c650_Range16(11077LLU,11078LLU,1LLU),_20548c650_Range16(11085LLU,11123LLU,1LLU),_20548c650_Range16(11126LLU,11157LLU,1LLU),_20548c650_Range16(11159LLU,11263LLU,1LLU),_20548c650_Range16(11493LLU,11498LLU,1LLU),_20548c650_Range16(11856LLU,11857LLU,1LLU),_20548c650_Range16(11904LLU,11929LLU,1LLU),_20548c650_Range16(11931LLU,12019LLU,1LLU),_20548c650_Range16(12032LLU,12245LLU,1LLU),_20548c650_Range16(12272LLU,12283LLU,1LLU),_20548c650_Range16(12292LLU,12306LLU,14LLU),_20548c650_Range16(12307LLU,12320LLU,13LLU),_20548c650_Range16(12342LLU,12343LLU,1LLU),_20548c650_Range16(12350LLU,12351LLU,1LLU),_20548c650_Range16(12688LLU,12689LLU,1LLU),_20548c650_Range16(12694LLU,12703LLU,1LLU),_20548c650_Range16(12736LLU,12771LLU,1LLU),_20548c650_Range16(12800LLU,12830LLU,1LLU),_20548c650_Range16(12842LLU,12871LLU,1LLU),_20548c650_Range16(12880LLU,12896LLU,16LLU),_20548c650_Range16(12897LLU,12927LLU,1LLU),_20548c650_Range16(12938LLU,12976LLU,1LLU),_20548c650_Range16(12992LLU,13311LLU,1LLU),_20548c650_Range16(19904LLU,19967LLU,1LLU),_20548c650_Range16(42128LLU,42182LLU,1LLU),_20548c650_Range16(43048LLU,43051LLU,1LLU),_20548c650_Range16(43062LLU,43063LLU,1LLU),_20548c650_Range16(43065LLU,43639LLU,574LLU),_20548c650_Range16(43640LLU,43641LLU,1LLU),_20548c650_Range16(64832LLU,64847LLU,1LLU),_20548c650_Range16(64975LLU,65021LLU,46LLU),_20548c650_Range16(65022LLU,65023LLU,1LLU),_20548c650_Range16(65508LLU,65512LLU,4LLU),_20548c650_Range16(65517LLU,65518LLU,1LLU),_20548c650_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(65847LLU,65855LLU,1LLU),_20548c650_Range32(65913LLU,65929LLU,1LLU),_20548c650_Range32(65932LLU,65934LLU,1LLU),_20548c650_Range32(65936LLU,65948LLU,1LLU),_20548c650_Range32(65952LLU,66000LLU,48LLU),_20548c650_Range32(66001LLU,66044LLU,1LLU),_20548c650_Range32(67703LLU,67704LLU,1LLU),_20548c650_Range32(68296LLU,71487LLU,3191LLU),_20548c650_Range32(73685LLU,73692LLU,1LLU),_20548c650_Range32(73697LLU,73713LLU,1LLU),_20548c650_Range32(92988LLU,92991LLU,1LLU),_20548c650_Range32(92997LLU,113820LLU,20823LLU),_20548c650_Range32(118608LLU,118723LLU,1LLU),_20548c650_Range32(118784LLU,119029LLU,1LLU),_20548c650_Range32(119040LLU,119078LLU,1LLU),_20548c650_Range32(119081LLU,119140LLU,1LLU),_20548c650_Range32(119146LLU,119148LLU,1LLU),_20548c650_Range32(119171LLU,119172LLU,1LLU),_20548c650_Range32(119180LLU,119209LLU,1LLU),_20548c650_Range32(119214LLU,119274LLU,1LLU),_20548c650_Range32(119296LLU,119361LLU,1LLU),_20548c650_Range32(119365LLU,119552LLU,187LLU),_20548c650_Range32(119553LLU,119638LLU,1LLU),_20548c650_Range32(120832LLU,121343LLU,1LLU),_20548c650_Range32(121399LLU,121402LLU,1LLU),_20548c650_Range32(121453LLU,121460LLU,1LLU),_20548c650_Range32(121462LLU,121475LLU,1LLU),_20548c650_Range32(121477LLU,121478LLU,1LLU),_20548c650_Range32(123215LLU,126124LLU,2909LLU),_20548c650_Range32(126254LLU,126976LLU,722LLU),_20548c650_Range32(126977LLU,127019LLU,1LLU),_20548c650_Range32(127024LLU,127123LLU,1LLU),_20548c650_Range32(127136LLU,127150LLU,1LLU),_20548c650_Range32(127153LLU,127167LLU,1LLU),_20548c650_Range32(127169LLU,127183LLU,1LLU),_20548c650_Range32(127185LLU,127221LLU,1LLU),_20548c650_Range32(127245LLU,127405LLU,1LLU),_20548c650_Range32(127462LLU,127490LLU,1LLU),_20548c650_Range32(127504LLU,127547LLU,1LLU),_20548c650_Range32(127552LLU,127560LLU,1LLU),_20548c650_Range32(127568LLU,127569LLU,1LLU),_20548c650_Range32(127584LLU,127589LLU,1LLU),_20548c650_Range32(127744LLU,127994LLU,1LLU),_20548c650_Range32(128000LLU,128727LLU,1LLU),_20548c650_Range32(128732LLU,128748LLU,1LLU),_20548c650_Range32(128752LLU,128764LLU,1LLU),_20548c650_Range32(128768LLU,128886LLU,1LLU),_20548c650_Range32(128891LLU,128985LLU,1LLU),_20548c650_Range32(128992LLU,129003LLU,1LLU),_20548c650_Range32(129008LLU,129024LLU,16LLU),_20548c650_Range32(129025LLU,129035LLU,1LLU),_20548c650_Range32(129040LLU,129095LLU,1LLU),_20548c650_Range32(129104LLU,129113LLU,1LLU),_20548c650_Range32(129120LLU,129159LLU,1LLU),_20548c650_Range32(129168LLU,129197LLU,1LLU),_20548c650_Range32(129200LLU,129201LLU,1LLU),_20548c650_Range32(129280LLU,129619LLU,1LLU),_20548c650_Range32(129632LLU,129645LLU,1LLU),_20548c650_Range32(129648LLU,129660LLU,1LLU),_20548c650_Range32(129664LLU,129672LLU,1LLU),_20548c650_Range32(129680LLU,129725LLU,1LLU),_20548c650_Range32(129727LLU,129733LLU,1LLU),_20548c650_Range32(129742LLU,129755LLU,1LLU),_20548c650_Range32(129760LLU,129768LLU,1LLU),_20548c650_Range32(129776LLU,129784LLU,1LLU),_20548c650_Range32(129792LLU,129938LLU,1LLU),_20548c650_Range32(129940LLU,129994LLU,1LLU)}),2LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__Z = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(32LLU,160LLU,128LLU),_20548c650_Range16(5760LLU,8192LLU,2432LLU),_20548c650_Range16(8193LLU,8202LLU,1LLU),_20548c650_Range16(8232LLU,8233LLU,1LLU),_20548c650_Range16(8239LLU,8287LLU,48LLU),_20548c650_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),1LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__ZL = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(8232LLU,8232LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__ZP = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(8233LLU,8233LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__ZS = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(32LLU,160LLU,128LLU),_20548c650_Range16(5760LLU,8192LLU,2432LLU),_20548c650_Range16(8193LLU,8202LLU,1LLU),_20548c650_Range16(8239LLU,8287LLU,48LLU),_20548c650_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),1LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3_CC = _20548cac3__CC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CF = _20548cac3__CF;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CO = _20548cac3__CO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CS = _20548cac3__CS;
static jule::Ref<_20548c650_RangeTable> _20548cac3_DIGIT = _20548cac3__ND;
static jule::Ref<_20548c650_RangeTable> _20548cac3_ND = _20548cac3__ND;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LETTER = _20548cac3__L;
static jule::Ref<_20548c650_RangeTable> _20548cac3_L = _20548cac3__L;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LM = _20548cac3__LM;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LO = _20548cac3__LO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LOWER = _20548cac3__LL;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LL = _20548cac3__LL;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MARK = _20548cac3__M;
static jule::Ref<_20548c650_RangeTable> _20548cac3_M = _20548cac3__M;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MC = _20548cac3__MC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_ME = _20548cac3__ME;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MN = _20548cac3__MN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_NL = _20548cac3__NL;
static jule::Ref<_20548c650_RangeTable> _20548cac3_NO = _20548cac3__NO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_NUMBER = _20548cac3__N;
static jule::Ref<_20548c650_RangeTable> _20548cac3_N = _20548cac3__N;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OTHER = _20548cac3__C;
static jule::Ref<_20548c650_RangeTable> _20548cac3_C = _20548cac3__C;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PC = _20548cac3__PC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PD = _20548cac3__PD;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PE = _20548cac3__PE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PF = _20548cac3__PF;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PI = _20548cac3__PI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PO = _20548cac3__PO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PS = _20548cac3__PS;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PUNCT = _20548cac3__P;
static jule::Ref<_20548c650_RangeTable> _20548cac3_P = _20548cac3__P;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SC = _20548cac3__SC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SK = _20548cac3__SK;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SM = _20548cac3__SM;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SO = _20548cac3__SO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SPACE = _20548cac3__Z;
static jule::Ref<_20548c650_RangeTable> _20548cac3_Z = _20548cac3__Z;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SYMBOL = _20548cac3__S;
static jule::Ref<_20548c650_RangeTable> _20548cac3_S = _20548cac3__S;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TITLE = _20548cac3__LT;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LT = _20548cac3__LT;
static jule::Ref<_20548c650_RangeTable> _20548cac3_UPPER = _20548cac3__LU;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LU = _20548cac3__LU;
static jule::Ref<_20548c650_RangeTable> _20548cac3_ZL = _20548cac3__ZL;
static jule::Ref<_20548c650_RangeTable> _20548cac3_ZP = _20548cac3__ZP;
static jule::Ref<_20548c650_RangeTable> _20548cac3_ZS = _20548cac3__ZS;
static jule::Map<jule::Str,jule::Ref<_20548c650_RangeTable>> _20548cac3_CATEGORIES = jule::Map<jule::Str,jule::Ref<_20548c650_RangeTable>>({{jule::Str("C", 1),_20548cac3_C},{jule::Str("CC", 2),_20548cac3_CC},{jule::Str("CF", 2),_20548cac3_CF},{jule::Str("CO", 2),_20548cac3_CO},{jule::Str("CS", 2),_20548cac3_CS},{jule::Str("L", 1),_20548cac3_L},{jule::Str("LL", 2),_20548cac3_LL},{jule::Str("LM", 2),_20548cac3_LM},{jule::Str("LO", 2),_20548cac3_LO},{jule::Str("LT", 2),_20548cac3_LT},{jule::Str("LU", 2),_20548cac3_LU},{jule::Str("M", 1),_20548cac3_M},{jule::Str("MC", 2),_20548cac3_MC},{jule::Str("ME", 2),_20548cac3_ME},{jule::Str("MN", 2),_20548cac3_MN},{jule::Str("N", 1),_20548cac3_N},{jule::Str("ND", 2),_20548cac3_ND},{jule::Str("NL", 2),_20548cac3_NL},{jule::Str("NO", 2),_20548cac3_NO},{jule::Str("P", 1),_20548cac3_P},{jule::Str("PC", 2),_20548cac3_PC},{jule::Str("PD", 2),_20548cac3_PD},{jule::Str("PE", 2),_20548cac3_PE},{jule::Str("PF", 2),_20548cac3_PF},{jule::Str("PI", 2),_20548cac3_PI},{jule::Str("PO", 2),_20548cac3_PO},{jule::Str("PS", 2),_20548cac3_PS},{jule::Str("S", 1),_20548cac3_S},{jule::Str("SC", 2),_20548cac3_SC},{jule::Str("SK", 2),_20548cac3_SK},{jule::Str("SM", 2),_20548cac3_SM},{jule::Str("SO", 2),_20548cac3_SO},{jule::Str("Z", 1),_20548cac3_Z},{jule::Str("ZL", 2),_20548cac3_ZL},{jule::Str("ZP", 2),_20548cac3_ZP},{jule::Str("ZS", 2),_20548cac3_ZS}});
static jule::Slice<jule::Ref<_20548c650_RangeTable>> _205583b75_GRAPHIC_RANGES = jule::Slice<jule::Ref<_20548c650_RangeTable>>({_20548cac3_L,_20548cac3_M,_20548cac3_N,_20548cac3_P,_20548cac3_S,_20548cac3_ZS});
static jule::Ref<_20548c650_RangeTable> _20548cac3__ADLAM = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(125184LLU,125259LLU,1LLU),_20548c650_Range32(125264LLU,125273LLU,1LLU),_20548c650_Range32(125278LLU,125279LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__AHOM = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(71424LLU,71450LLU,1LLU),_20548c650_Range32(71453LLU,71467LLU,1LLU),_20548c650_Range32(71472LLU,71494LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__ANATOLIAN_HIEROGLYPHS = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(82944LLU,83526LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__ARABIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(1536LLU,1540LLU,1LLU),_20548c650_Range16(1542LLU,1547LLU,1LLU),_20548c650_Range16(1549LLU,1562LLU,1LLU),_20548c650_Range16(1564LLU,1566LLU,1LLU),_20548c650_Range16(1568LLU,1599LLU,1LLU),_20548c650_Range16(1601LLU,1610LLU,1LLU),_20548c650_Range16(1622LLU,1647LLU,1LLU),_20548c650_Range16(1649LLU,1756LLU,1LLU),_20548c650_Range16(1758LLU,1791LLU,1LLU),_20548c650_Range16(1872LLU,1919LLU,1LLU),_20548c650_Range16(2160LLU,2190LLU,1LLU),_20548c650_Range16(2192LLU,2193LLU,1LLU),_20548c650_Range16(2200LLU,2273LLU,1LLU),_20548c650_Range16(2275LLU,2303LLU,1LLU),_20548c650_Range16(64336LLU,64450LLU,1LLU),_20548c650_Range16(64467LLU,64829LLU,1LLU),_20548c650_Range16(64832LLU,64911LLU,1LLU),_20548c650_Range16(64914LLU,64967LLU,1LLU),_20548c650_Range16(64975LLU,65008LLU,33LLU),_20548c650_Range16(65009LLU,65023LLU,1LLU),_20548c650_Range16(65136LLU,65140LLU,1LLU),_20548c650_Range16(65142LLU,65276LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69216LLU,69246LLU,1LLU),_20548c650_Range32(69373LLU,69375LLU,1LLU),_20548c650_Range32(126464LLU,126467LLU,1LLU),_20548c650_Range32(126469LLU,126495LLU,1LLU),_20548c650_Range32(126497LLU,126498LLU,1LLU),_20548c650_Range32(126500LLU,126503LLU,3LLU),_20548c650_Range32(126505LLU,126514LLU,1LLU),_20548c650_Range32(126516LLU,126519LLU,1LLU),_20548c650_Range32(126521LLU,126523LLU,2LLU),_20548c650_Range32(126530LLU,126535LLU,5LLU),_20548c650_Range32(126537LLU,126541LLU,2LLU),_20548c650_Range32(126542LLU,126543LLU,1LLU),_20548c650_Range32(126545LLU,126546LLU,1LLU),_20548c650_Range32(126548LLU,126551LLU,3LLU),_20548c650_Range32(126553LLU,126561LLU,2LLU),_20548c650_Range32(126562LLU,126564LLU,2LLU),_20548c650_Range32(126567LLU,126570LLU,1LLU),_20548c650_Range32(126572LLU,126578LLU,1LLU),_20548c650_Range32(126580LLU,126583LLU,1LLU),_20548c650_Range32(126585LLU,126588LLU,1LLU),_20548c650_Range32(126590LLU,126592LLU,2LLU),_20548c650_Range32(126593LLU,126601LLU,1LLU),_20548c650_Range32(126603LLU,126619LLU,1LLU),_20548c650_Range32(126625LLU,126627LLU,1LLU),_20548c650_Range32(126629LLU,126633LLU,1LLU),_20548c650_Range32(126635LLU,126651LLU,1LLU),_20548c650_Range32(126704LLU,126705LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__ARMENIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(1329LLU,1366LLU,1LLU),_20548c650_Range16(1369LLU,1418LLU,1LLU),_20548c650_Range16(1421LLU,1423LLU,1LLU),_20548c650_Range16(64275LLU,64279LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__AVESTAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(68352LLU,68405LLU,1LLU),_20548c650_Range32(68409LLU,68415LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__BALINESE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(6912LLU,6988LLU,1LLU),_20548c650_Range16(6992LLU,7038LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__BAMUM = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(42656LLU,42743LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(92160LLU,92728LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__BASSA_VAH = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(92880LLU,92909LLU,1LLU),_20548c650_Range32(92912LLU,92917LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__BATAK = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(7104LLU,7155LLU,1LLU),_20548c650_Range16(7164LLU,7167LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__BENGALI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(2432LLU,2435LLU,1LLU),_20548c650_Range16(2437LLU,2444LLU,1LLU),_20548c650_Range16(2447LLU,2448LLU,1LLU),_20548c650_Range16(2451LLU,2472LLU,1LLU),_20548c650_Range16(2474LLU,2480LLU,1LLU),_20548c650_Range16(2482LLU,2486LLU,4LLU),_20548c650_Range16(2487LLU,2489LLU,1LLU),_20548c650_Range16(2492LLU,2500LLU,1LLU),_20548c650_Range16(2503LLU,2504LLU,1LLU),_20548c650_Range16(2507LLU,2510LLU,1LLU),_20548c650_Range16(2519LLU,2524LLU,5LLU),_20548c650_Range16(2525LLU,2527LLU,2LLU),_20548c650_Range16(2528LLU,2531LLU,1LLU),_20548c650_Range16(2534LLU,2558LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__BHAIKSUKI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(72704LLU,72712LLU,1LLU),_20548c650_Range32(72714LLU,72758LLU,1LLU),_20548c650_Range32(72760LLU,72773LLU,1LLU),_20548c650_Range32(72784LLU,72812LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__BOPOMOFO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(746LLU,747LLU,1LLU),_20548c650_Range16(12549LLU,12591LLU,1LLU),_20548c650_Range16(12704LLU,12735LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__BRAHMI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69632LLU,69709LLU,1LLU),_20548c650_Range32(69714LLU,69749LLU,1LLU),_20548c650_Range32(69759LLU,69759LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__BRAILLE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(10240LLU,10495LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__BUGINESE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(6656LLU,6683LLU,1LLU),_20548c650_Range16(6686LLU,6687LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__BUHID = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(5952LLU,5971LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CANADIAN_ABORIGINAL = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(5120LLU,5759LLU,1LLU),_20548c650_Range16(6320LLU,6389LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(72368LLU,72383LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CARIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66208LLU,66256LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CAUCASIAN_ALBANIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66864LLU,66915LLU,1LLU),_20548c650_Range32(66927LLU,66927LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CHAKMA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69888LLU,69940LLU,1LLU),_20548c650_Range32(69942LLU,69959LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CHAM = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(43520LLU,43574LLU,1LLU),_20548c650_Range16(43584LLU,43597LLU,1LLU),_20548c650_Range16(43600LLU,43609LLU,1LLU),_20548c650_Range16(43612LLU,43615LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CHEROKEE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(5024LLU,5109LLU,1LLU),_20548c650_Range16(5112LLU,5117LLU,1LLU),_20548c650_Range16(43888LLU,43967LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CHORASMIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69552LLU,69579LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__COMMON = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(0LLU,64LLU,1LLU),_20548c650_Range16(91LLU,96LLU,1LLU),_20548c650_Range16(123LLU,169LLU,1LLU),_20548c650_Range16(171LLU,185LLU,1LLU),_20548c650_Range16(187LLU,191LLU,1LLU),_20548c650_Range16(215LLU,247LLU,32LLU),_20548c650_Range16(697LLU,735LLU,1LLU),_20548c650_Range16(741LLU,745LLU,1LLU),_20548c650_Range16(748LLU,767LLU,1LLU),_20548c650_Range16(884LLU,894LLU,10LLU),_20548c650_Range16(901LLU,903LLU,2LLU),_20548c650_Range16(1541LLU,1548LLU,7LLU),_20548c650_Range16(1563LLU,1567LLU,4LLU),_20548c650_Range16(1600LLU,1757LLU,157LLU),_20548c650_Range16(2274LLU,2404LLU,130LLU),_20548c650_Range16(2405LLU,3647LLU,1242LLU),_20548c650_Range16(4053LLU,4056LLU,1LLU),_20548c650_Range16(4347LLU,5867LLU,1520LLU),_20548c650_Range16(5868LLU,5869LLU,1LLU),_20548c650_Range16(5941LLU,5942LLU,1LLU),_20548c650_Range16(6146LLU,6147LLU,1LLU),_20548c650_Range16(6149LLU,7379LLU,1230LLU),_20548c650_Range16(7393LLU,7401LLU,8LLU),_20548c650_Range16(7402LLU,7404LLU,1LLU),_20548c650_Range16(7406LLU,7411LLU,1LLU),_20548c650_Range16(7413LLU,7415LLU,1LLU),_20548c650_Range16(7418LLU,8192LLU,774LLU),_20548c650_Range16(8193LLU,8203LLU,1LLU),_20548c650_Range16(8206LLU,8292LLU,1LLU),_20548c650_Range16(8294LLU,8304LLU,1LLU),_20548c650_Range16(8308LLU,8318LLU,1LLU),_20548c650_Range16(8320LLU,8334LLU,1LLU),_20548c650_Range16(8352LLU,8384LLU,1LLU),_20548c650_Range16(8448LLU,8485LLU,1LLU),_20548c650_Range16(8487LLU,8489LLU,1LLU),_20548c650_Range16(8492LLU,8497LLU,1LLU),_20548c650_Range16(8499LLU,8525LLU,1LLU),_20548c650_Range16(8527LLU,8543LLU,1LLU),_20548c650_Range16(8585LLU,8587LLU,1LLU),_20548c650_Range16(8592LLU,9254LLU,1LLU),_20548c650_Range16(9280LLU,9290LLU,1LLU),_20548c650_Range16(9312LLU,10239LLU,1LLU),_20548c650_Range16(10496LLU,11123LLU,1LLU),_20548c650_Range16(11126LLU,11157LLU,1LLU),_20548c650_Range16(11159LLU,11263LLU,1LLU),_20548c650_Range16(11776LLU,11869LLU,1LLU),_20548c650_Range16(12272LLU,12283LLU,1LLU),_20548c650_Range16(12288LLU,12292LLU,1LLU),_20548c650_Range16(12294LLU,12296LLU,2LLU),_20548c650_Range16(12297LLU,12320LLU,1LLU),_20548c650_Range16(12336LLU,12343LLU,1LLU),_20548c650_Range16(12348LLU,12351LLU,1LLU),_20548c650_Range16(12443LLU,12444LLU,1LLU),_20548c650_Range16(12448LLU,12539LLU,91LLU),_20548c650_Range16(12540LLU,12688LLU,148LLU),_20548c650_Range16(12689LLU,12703LLU,1LLU),_20548c650_Range16(12736LLU,12771LLU,1LLU),_20548c650_Range16(12832LLU,12895LLU,1LLU),_20548c650_Range16(12927LLU,13007LLU,1LLU),_20548c650_Range16(13055LLU,13144LLU,89LLU),_20548c650_Range16(13145LLU,13311LLU,1LLU),_20548c650_Range16(19904LLU,19967LLU,1LLU),_20548c650_Range16(42752LLU,42785LLU,1LLU),_20548c650_Range16(42888LLU,42890LLU,1LLU),_20548c650_Range16(43056LLU,43065LLU,1LLU),_20548c650_Range16(43310LLU,43471LLU,161LLU),_20548c650_Range16(43867LLU,43882LLU,15LLU),_20548c650_Range16(43883LLU,64830LLU,20947LLU),_20548c650_Range16(64831LLU,65040LLU,209LLU),_20548c650_Range16(65041LLU,65049LLU,1LLU),_20548c650_Range16(65072LLU,65106LLU,1LLU),_20548c650_Range16(65108LLU,65126LLU,1LLU),_20548c650_Range16(65128LLU,65131LLU,1LLU),_20548c650_Range16(65279LLU,65281LLU,2LLU),_20548c650_Range16(65282LLU,65312LLU,1LLU),_20548c650_Range16(65339LLU,65344LLU,1LLU),_20548c650_Range16(65371LLU,65381LLU,1LLU),_20548c650_Range16(65392LLU,65438LLU,46LLU),_20548c650_Range16(65439LLU,65504LLU,65LLU),_20548c650_Range16(65505LLU,65510LLU,1LLU),_20548c650_Range16(65512LLU,65518LLU,1LLU),_20548c650_Range16(65529LLU,65533LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(65792LLU,65794LLU,1LLU),_20548c650_Range32(65799LLU,65843LLU,1LLU),_20548c650_Range32(65847LLU,65855LLU,1LLU),_20548c650_Range32(65936LLU,65948LLU,1LLU),_20548c650_Range32(66000LLU,66044LLU,1LLU),_20548c650_Range32(66273LLU,66299LLU,1LLU),_20548c650_Range32(113824LLU,113827LLU,1LLU),_20548c650_Range32(118608LLU,118723LLU,1LLU),_20548c650_Range32(118784LLU,119029LLU,1LLU),_20548c650_Range32(119040LLU,119078LLU,1LLU),_20548c650_Range32(119081LLU,119142LLU,1LLU),_20548c650_Range32(119146LLU,119162LLU,1LLU),_20548c650_Range32(119171LLU,119172LLU,1LLU),_20548c650_Range32(119180LLU,119209LLU,1LLU),_20548c650_Range32(119214LLU,119274LLU,1LLU),_20548c650_Range32(119488LLU,119507LLU,1LLU),_20548c650_Range32(119520LLU,119539LLU,1LLU),_20548c650_Range32(119552LLU,119638LLU,1LLU),_20548c650_Range32(119648LLU,119672LLU,1LLU),_20548c650_Range32(119808LLU,119892LLU,1LLU),_20548c650_Range32(119894LLU,119964LLU,1LLU),_20548c650_Range32(119966LLU,119967LLU,1LLU),_20548c650_Range32(119970LLU,119973LLU,3LLU),_20548c650_Range32(119974LLU,119977LLU,3LLU),_20548c650_Range32(119978LLU,119980LLU,1LLU),_20548c650_Range32(119982LLU,119993LLU,1LLU),_20548c650_Range32(119995LLU,119997LLU,2LLU),_20548c650_Range32(119998LLU,120003LLU,1LLU),_20548c650_Range32(120005LLU,120069LLU,1LLU),_20548c650_Range32(120071LLU,120074LLU,1LLU),_20548c650_Range32(120077LLU,120084LLU,1LLU),_20548c650_Range32(120086LLU,120092LLU,1LLU),_20548c650_Range32(120094LLU,120121LLU,1LLU),_20548c650_Range32(120123LLU,120126LLU,1LLU),_20548c650_Range32(120128LLU,120132LLU,1LLU),_20548c650_Range32(120134LLU,120138LLU,4LLU),_20548c650_Range32(120139LLU,120144LLU,1LLU),_20548c650_Range32(120146LLU,120485LLU,1LLU),_20548c650_Range32(120488LLU,120779LLU,1LLU),_20548c650_Range32(120782LLU,120831LLU,1LLU),_20548c650_Range32(126065LLU,126132LLU,1LLU),_20548c650_Range32(126209LLU,126269LLU,1LLU),_20548c650_Range32(126976LLU,127019LLU,1LLU),_20548c650_Range32(127024LLU,127123LLU,1LLU),_20548c650_Range32(127136LLU,127150LLU,1LLU),_20548c650_Range32(127153LLU,127167LLU,1LLU),_20548c650_Range32(127169LLU,127183LLU,1LLU),_20548c650_Range32(127185LLU,127221LLU,1LLU),_20548c650_Range32(127232LLU,127405LLU,1LLU),_20548c650_Range32(127462LLU,127487LLU,1LLU),_20548c650_Range32(127489LLU,127490LLU,1LLU),_20548c650_Range32(127504LLU,127547LLU,1LLU),_20548c650_Range32(127552LLU,127560LLU,1LLU),_20548c650_Range32(127568LLU,127569LLU,1LLU),_20548c650_Range32(127584LLU,127589LLU,1LLU),_20548c650_Range32(127744LLU,128727LLU,1LLU),_20548c650_Range32(128732LLU,128748LLU,1LLU),_20548c650_Range32(128752LLU,128764LLU,1LLU),_20548c650_Range32(128768LLU,128886LLU,1LLU),_20548c650_Range32(128891LLU,128985LLU,1LLU),_20548c650_Range32(128992LLU,129003LLU,1LLU),_20548c650_Range32(129008LLU,129024LLU,16LLU),_20548c650_Range32(129025LLU,129035LLU,1LLU),_20548c650_Range32(129040LLU,129095LLU,1LLU),_20548c650_Range32(129104LLU,129113LLU,1LLU),_20548c650_Range32(129120LLU,129159LLU,1LLU),_20548c650_Range32(129168LLU,129197LLU,1LLU),_20548c650_Range32(129200LLU,129201LLU,1LLU),_20548c650_Range32(129280LLU,129619LLU,1LLU),_20548c650_Range32(129632LLU,129645LLU,1LLU),_20548c650_Range32(129648LLU,129660LLU,1LLU),_20548c650_Range32(129664LLU,129672LLU,1LLU),_20548c650_Range32(129680LLU,129725LLU,1LLU),_20548c650_Range32(129727LLU,129733LLU,1LLU),_20548c650_Range32(129742LLU,129755LLU,1LLU),_20548c650_Range32(129760LLU,129768LLU,1LLU),_20548c650_Range32(129776LLU,129784LLU,1LLU),_20548c650_Range32(129792LLU,129938LLU,1LLU),_20548c650_Range32(129940LLU,129994LLU,1LLU),_20548c650_Range32(130032LLU,130041LLU,1LLU),_20548c650_Range32(917505LLU,917536LLU,31LLU),_20548c650_Range32(917537LLU,917631LLU,1LLU)}),6LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__COPTIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(994LLU,1007LLU,1LLU),_20548c650_Range16(11392LLU,11507LLU,1LLU),_20548c650_Range16(11513LLU,11519LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CUNEIFORM = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(73728LLU,74649LLU,1LLU),_20548c650_Range32(74752LLU,74862LLU,1LLU),_20548c650_Range32(74864LLU,74868LLU,1LLU),_20548c650_Range32(74880LLU,75075LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CYPRIOT = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(67584LLU,67589LLU,1LLU),_20548c650_Range32(67592LLU,67594LLU,2LLU),_20548c650_Range32(67595LLU,67637LLU,1LLU),_20548c650_Range32(67639LLU,67640LLU,1LLU),_20548c650_Range32(67644LLU,67647LLU,3LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CYPRO_MINOAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(77712LLU,77810LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__CYRILLIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(1024LLU,1156LLU,1LLU),_20548c650_Range16(1159LLU,1327LLU,1LLU),_20548c650_Range16(7296LLU,7304LLU,1LLU),_20548c650_Range16(7467LLU,7544LLU,77LLU),_20548c650_Range16(11744LLU,11775LLU,1LLU),_20548c650_Range16(42560LLU,42655LLU,1LLU),_20548c650_Range16(65070LLU,65071LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(122928LLU,122989LLU,1LLU),_20548c650_Range32(123023LLU,123023LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__DESERET = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66560LLU,66639LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__DEVANAGARI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(2304LLU,2384LLU,1LLU),_20548c650_Range16(2389LLU,2403LLU,1LLU),_20548c650_Range16(2406LLU,2431LLU,1LLU),_20548c650_Range16(43232LLU,43263LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(72448LLU,72457LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__DIVES_AKURU = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(71936LLU,71942LLU,1LLU),_20548c650_Range32(71945LLU,71948LLU,3LLU),_20548c650_Range32(71949LLU,71955LLU,1LLU),_20548c650_Range32(71957LLU,71958LLU,1LLU),_20548c650_Range32(71960LLU,71989LLU,1LLU),_20548c650_Range32(71991LLU,71992LLU,1LLU),_20548c650_Range32(71995LLU,72006LLU,1LLU),_20548c650_Range32(72016LLU,72025LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__DOGRA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(71680LLU,71739LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__DUPLOYAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(113664LLU,113770LLU,1LLU),_20548c650_Range32(113776LLU,113788LLU,1LLU),_20548c650_Range32(113792LLU,113800LLU,1LLU),_20548c650_Range32(113808LLU,113817LLU,1LLU),_20548c650_Range32(113820LLU,113823LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__EGYPTIAN_HIEROGLYPHS = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(77824LLU,78933LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__ELBASAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66816LLU,66855LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__ELYMAIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69600LLU,69622LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__ETHIOPIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(4608LLU,4680LLU,1LLU),_20548c650_Range16(4682LLU,4685LLU,1LLU),_20548c650_Range16(4688LLU,4694LLU,1LLU),_20548c650_Range16(4696LLU,4698LLU,2LLU),_20548c650_Range16(4699LLU,4701LLU,1LLU),_20548c650_Range16(4704LLU,4744LLU,1LLU),_20548c650_Range16(4746LLU,4749LLU,1LLU),_20548c650_Range16(4752LLU,4784LLU,1LLU),_20548c650_Range16(4786LLU,4789LLU,1LLU),_20548c650_Range16(4792LLU,4798LLU,1LLU),_20548c650_Range16(4800LLU,4802LLU,2LLU),_20548c650_Range16(4803LLU,4805LLU,1LLU),_20548c650_Range16(4808LLU,4822LLU,1LLU),_20548c650_Range16(4824LLU,4880LLU,1LLU),_20548c650_Range16(4882LLU,4885LLU,1LLU),_20548c650_Range16(4888LLU,4954LLU,1LLU),_20548c650_Range16(4957LLU,4988LLU,1LLU),_20548c650_Range16(4992LLU,5017LLU,1LLU),_20548c650_Range16(11648LLU,11670LLU,1LLU),_20548c650_Range16(11680LLU,11686LLU,1LLU),_20548c650_Range16(11688LLU,11694LLU,1LLU),_20548c650_Range16(11696LLU,11702LLU,1LLU),_20548c650_Range16(11704LLU,11710LLU,1LLU),_20548c650_Range16(11712LLU,11718LLU,1LLU),_20548c650_Range16(11720LLU,11726LLU,1LLU),_20548c650_Range16(11728LLU,11734LLU,1LLU),_20548c650_Range16(11736LLU,11742LLU,1LLU),_20548c650_Range16(43777LLU,43782LLU,1LLU),_20548c650_Range16(43785LLU,43790LLU,1LLU),_20548c650_Range16(43793LLU,43798LLU,1LLU),_20548c650_Range16(43808LLU,43814LLU,1LLU),_20548c650_Range16(43816LLU,43822LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(124896LLU,124902LLU,1LLU),_20548c650_Range32(124904LLU,124907LLU,1LLU),_20548c650_Range32(124909LLU,124910LLU,1LLU),_20548c650_Range32(124912LLU,124926LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__GEORGIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(4256LLU,4293LLU,1LLU),_20548c650_Range16(4295LLU,4301LLU,6LLU),_20548c650_Range16(4304LLU,4346LLU,1LLU),_20548c650_Range16(4348LLU,4351LLU,1LLU),_20548c650_Range16(7312LLU,7354LLU,1LLU),_20548c650_Range16(7357LLU,7359LLU,1LLU),_20548c650_Range16(11520LLU,11557LLU,1LLU),_20548c650_Range16(11559LLU,11565LLU,6LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__GLAGOLITIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(11264LLU,11359LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(122880LLU,122886LLU,1LLU),_20548c650_Range32(122888LLU,122904LLU,1LLU),_20548c650_Range32(122907LLU,122913LLU,1LLU),_20548c650_Range32(122915LLU,122916LLU,1LLU),_20548c650_Range32(122918LLU,122922LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__GOTHIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66352LLU,66378LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__GRANTHA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(70400LLU,70403LLU,1LLU),_20548c650_Range32(70405LLU,70412LLU,1LLU),_20548c650_Range32(70415LLU,70416LLU,1LLU),_20548c650_Range32(70419LLU,70440LLU,1LLU),_20548c650_Range32(70442LLU,70448LLU,1LLU),_20548c650_Range32(70450LLU,70451LLU,1LLU),_20548c650_Range32(70453LLU,70457LLU,1LLU),_20548c650_Range32(70460LLU,70468LLU,1LLU),_20548c650_Range32(70471LLU,70472LLU,1LLU),_20548c650_Range32(70475LLU,70477LLU,1LLU),_20548c650_Range32(70480LLU,70487LLU,7LLU),_20548c650_Range32(70493LLU,70499LLU,1LLU),_20548c650_Range32(70502LLU,70508LLU,1LLU),_20548c650_Range32(70512LLU,70516LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__GREEK = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(880LLU,883LLU,1LLU),_20548c650_Range16(885LLU,887LLU,1LLU),_20548c650_Range16(890LLU,893LLU,1LLU),_20548c650_Range16(895LLU,900LLU,5LLU),_20548c650_Range16(902LLU,904LLU,2LLU),_20548c650_Range16(905LLU,906LLU,1LLU),_20548c650_Range16(908LLU,910LLU,2LLU),_20548c650_Range16(911LLU,929LLU,1LLU),_20548c650_Range16(931LLU,993LLU,1LLU),_20548c650_Range16(1008LLU,1023LLU,1LLU),_20548c650_Range16(7462LLU,7466LLU,1LLU),_20548c650_Range16(7517LLU,7521LLU,1LLU),_20548c650_Range16(7526LLU,7530LLU,1LLU),_20548c650_Range16(7615LLU,7936LLU,321LLU),_20548c650_Range16(7937LLU,7957LLU,1LLU),_20548c650_Range16(7960LLU,7965LLU,1LLU),_20548c650_Range16(7968LLU,8005LLU,1LLU),_20548c650_Range16(8008LLU,8013LLU,1LLU),_20548c650_Range16(8016LLU,8023LLU,1LLU),_20548c650_Range16(8025LLU,8031LLU,2LLU),_20548c650_Range16(8032LLU,8061LLU,1LLU),_20548c650_Range16(8064LLU,8116LLU,1LLU),_20548c650_Range16(8118LLU,8132LLU,1LLU),_20548c650_Range16(8134LLU,8147LLU,1LLU),_20548c650_Range16(8150LLU,8155LLU,1LLU),_20548c650_Range16(8157LLU,8175LLU,1LLU),_20548c650_Range16(8178LLU,8180LLU,1LLU),_20548c650_Range16(8182LLU,8190LLU,1LLU),_20548c650_Range16(8486LLU,43877LLU,35391LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(65856LLU,65934LLU,1LLU),_20548c650_Range32(65952LLU,119296LLU,53344LLU),_20548c650_Range32(119297LLU,119365LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__GUJARATI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(2689LLU,2691LLU,1LLU),_20548c650_Range16(2693LLU,2701LLU,1LLU),_20548c650_Range16(2703LLU,2705LLU,1LLU),_20548c650_Range16(2707LLU,2728LLU,1LLU),_20548c650_Range16(2730LLU,2736LLU,1LLU),_20548c650_Range16(2738LLU,2739LLU,1LLU),_20548c650_Range16(2741LLU,2745LLU,1LLU),_20548c650_Range16(2748LLU,2757LLU,1LLU),_20548c650_Range16(2759LLU,2761LLU,1LLU),_20548c650_Range16(2763LLU,2765LLU,1LLU),_20548c650_Range16(2768LLU,2784LLU,16LLU),_20548c650_Range16(2785LLU,2787LLU,1LLU),_20548c650_Range16(2790LLU,2801LLU,1LLU),_20548c650_Range16(2809LLU,2815LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__GUNJALA_GONDI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(73056LLU,73061LLU,1LLU),_20548c650_Range32(73063LLU,73064LLU,1LLU),_20548c650_Range32(73066LLU,73102LLU,1LLU),_20548c650_Range32(73104LLU,73105LLU,1LLU),_20548c650_Range32(73107LLU,73112LLU,1LLU),_20548c650_Range32(73120LLU,73129LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__GURMUKHI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(2561LLU,2563LLU,1LLU),_20548c650_Range16(2565LLU,2570LLU,1LLU),_20548c650_Range16(2575LLU,2576LLU,1LLU),_20548c650_Range16(2579LLU,2600LLU,1LLU),_20548c650_Range16(2602LLU,2608LLU,1LLU),_20548c650_Range16(2610LLU,2611LLU,1LLU),_20548c650_Range16(2613LLU,2614LLU,1LLU),_20548c650_Range16(2616LLU,2617LLU,1LLU),_20548c650_Range16(2620LLU,2622LLU,2LLU),_20548c650_Range16(2623LLU,2626LLU,1LLU),_20548c650_Range16(2631LLU,2632LLU,1LLU),_20548c650_Range16(2635LLU,2637LLU,1LLU),_20548c650_Range16(2641LLU,2649LLU,8LLU),_20548c650_Range16(2650LLU,2652LLU,1LLU),_20548c650_Range16(2654LLU,2662LLU,8LLU),_20548c650_Range16(2663LLU,2678LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__HAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(11904LLU,11929LLU,1LLU),_20548c650_Range16(11931LLU,12019LLU,1LLU),_20548c650_Range16(12032LLU,12245LLU,1LLU),_20548c650_Range16(12293LLU,12295LLU,2LLU),_20548c650_Range16(12321LLU,12329LLU,1LLU),_20548c650_Range16(12344LLU,12347LLU,1LLU),_20548c650_Range16(13312LLU,19903LLU,1LLU),_20548c650_Range16(19968LLU,40959LLU,1LLU),_20548c650_Range16(63744LLU,64109LLU,1LLU),_20548c650_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(94178LLU,94179LLU,1LLU),_20548c650_Range32(94192LLU,94193LLU,1LLU),_20548c650_Range32(131072LLU,173791LLU,1LLU),_20548c650_Range32(173824LLU,177977LLU,1LLU),_20548c650_Range32(177984LLU,178205LLU,1LLU),_20548c650_Range32(178208LLU,183969LLU,1LLU),_20548c650_Range32(183984LLU,191456LLU,1LLU),_20548c650_Range32(194560LLU,195101LLU,1LLU),_20548c650_Range32(196608LLU,201546LLU,1LLU),_20548c650_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__HANGUL = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(4352LLU,4607LLU,1LLU),_20548c650_Range16(12334LLU,12335LLU,1LLU),_20548c650_Range16(12593LLU,12686LLU,1LLU),_20548c650_Range16(12800LLU,12830LLU,1LLU),_20548c650_Range16(12896LLU,12926LLU,1LLU),_20548c650_Range16(43360LLU,43388LLU,1LLU),_20548c650_Range16(44032LLU,55203LLU,1LLU),_20548c650_Range16(55216LLU,55238LLU,1LLU),_20548c650_Range16(55243LLU,55291LLU,1LLU),_20548c650_Range16(65440LLU,65470LLU,1LLU),_20548c650_Range16(65474LLU,65479LLU,1LLU),_20548c650_Range16(65482LLU,65487LLU,1LLU),_20548c650_Range16(65490LLU,65495LLU,1LLU),_20548c650_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__HANIFI_ROHINGYA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(68864LLU,68903LLU,1LLU),_20548c650_Range32(68912LLU,68921LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__HANUNOO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(5920LLU,5940LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__HATRAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(67808LLU,67826LLU,1LLU),_20548c650_Range32(67828LLU,67829LLU,1LLU),_20548c650_Range32(67835LLU,67839LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__HEBREW = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(1425LLU,1479LLU,1LLU),_20548c650_Range16(1488LLU,1514LLU,1LLU),_20548c650_Range16(1519LLU,1524LLU,1LLU),_20548c650_Range16(64285LLU,64310LLU,1LLU),_20548c650_Range16(64312LLU,64316LLU,1LLU),_20548c650_Range16(64318LLU,64320LLU,2LLU),_20548c650_Range16(64321LLU,64323LLU,2LLU),_20548c650_Range16(64324LLU,64326LLU,2LLU),_20548c650_Range16(64327LLU,64335LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__HIRAGANA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(12353LLU,12438LLU,1LLU),_20548c650_Range16(12445LLU,12447LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(110593LLU,110879LLU,1LLU),_20548c650_Range32(110898LLU,110928LLU,30LLU),_20548c650_Range32(110929LLU,110930LLU,1LLU),_20548c650_Range32(127488LLU,127488LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__IMPERIAL_ARAMAIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(67648LLU,67669LLU,1LLU),_20548c650_Range32(67671LLU,67679LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__INHERITED = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(768LLU,879LLU,1LLU),_20548c650_Range16(1157LLU,1158LLU,1LLU),_20548c650_Range16(1611LLU,1621LLU,1LLU),_20548c650_Range16(1648LLU,2385LLU,737LLU),_20548c650_Range16(2386LLU,2388LLU,1LLU),_20548c650_Range16(6832LLU,6862LLU,1LLU),_20548c650_Range16(7376LLU,7378LLU,1LLU),_20548c650_Range16(7380LLU,7392LLU,1LLU),_20548c650_Range16(7394LLU,7400LLU,1LLU),_20548c650_Range16(7405LLU,7412LLU,7LLU),_20548c650_Range16(7416LLU,7417LLU,1LLU),_20548c650_Range16(7616LLU,7679LLU,1LLU),_20548c650_Range16(8204LLU,8205LLU,1LLU),_20548c650_Range16(8400LLU,8432LLU,1LLU),_20548c650_Range16(12330LLU,12333LLU,1LLU),_20548c650_Range16(12441LLU,12442LLU,1LLU),_20548c650_Range16(65024LLU,65039LLU,1LLU),_20548c650_Range16(65056LLU,65069LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66045LLU,66272LLU,227LLU),_20548c650_Range32(70459LLU,118528LLU,48069LLU),_20548c650_Range32(118529LLU,118573LLU,1LLU),_20548c650_Range32(118576LLU,118598LLU,1LLU),_20548c650_Range32(119143LLU,119145LLU,1LLU),_20548c650_Range32(119163LLU,119170LLU,1LLU),_20548c650_Range32(119173LLU,119179LLU,1LLU),_20548c650_Range32(119210LLU,119213LLU,1LLU),_20548c650_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__INSCRIPTIONAL_PAHLAVI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(68448LLU,68466LLU,1LLU),_20548c650_Range32(68472LLU,68479LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__INSCRIPTIONAL_PARTHIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(68416LLU,68437LLU,1LLU),_20548c650_Range32(68440LLU,68447LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__JAVANESE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(43392LLU,43469LLU,1LLU),_20548c650_Range16(43472LLU,43481LLU,1LLU),_20548c650_Range16(43486LLU,43487LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__KAITHI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69760LLU,69826LLU,1LLU),_20548c650_Range32(69837LLU,69837LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__KANNADA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(3200LLU,3212LLU,1LLU),_20548c650_Range16(3214LLU,3216LLU,1LLU),_20548c650_Range16(3218LLU,3240LLU,1LLU),_20548c650_Range16(3242LLU,3251LLU,1LLU),_20548c650_Range16(3253LLU,3257LLU,1LLU),_20548c650_Range16(3260LLU,3268LLU,1LLU),_20548c650_Range16(3270LLU,3272LLU,1LLU),_20548c650_Range16(3274LLU,3277LLU,1LLU),_20548c650_Range16(3285LLU,3286LLU,1LLU),_20548c650_Range16(3293LLU,3294LLU,1LLU),_20548c650_Range16(3296LLU,3299LLU,1LLU),_20548c650_Range16(3302LLU,3311LLU,1LLU),_20548c650_Range16(3313LLU,3315LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__KATAKANA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(12449LLU,12538LLU,1LLU),_20548c650_Range16(12541LLU,12543LLU,1LLU),_20548c650_Range16(12784LLU,12799LLU,1LLU),_20548c650_Range16(13008LLU,13054LLU,1LLU),_20548c650_Range16(13056LLU,13143LLU,1LLU),_20548c650_Range16(65382LLU,65391LLU,1LLU),_20548c650_Range16(65393LLU,65437LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(110576LLU,110579LLU,1LLU),_20548c650_Range32(110581LLU,110587LLU,1LLU),_20548c650_Range32(110589LLU,110590LLU,1LLU),_20548c650_Range32(110592LLU,110880LLU,288LLU),_20548c650_Range32(110881LLU,110882LLU,1LLU),_20548c650_Range32(110933LLU,110948LLU,15LLU),_20548c650_Range32(110949LLU,110951LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__KAWI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(73472LLU,73488LLU,1LLU),_20548c650_Range32(73490LLU,73530LLU,1LLU),_20548c650_Range32(73534LLU,73561LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__KAYAH_LI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(43264LLU,43309LLU,1LLU),_20548c650_Range16(43311LLU,43311LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__KHAROSHTHI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(68096LLU,68099LLU,1LLU),_20548c650_Range32(68101LLU,68102LLU,1LLU),_20548c650_Range32(68108LLU,68115LLU,1LLU),_20548c650_Range32(68117LLU,68119LLU,1LLU),_20548c650_Range32(68121LLU,68149LLU,1LLU),_20548c650_Range32(68152LLU,68154LLU,1LLU),_20548c650_Range32(68159LLU,68168LLU,1LLU),_20548c650_Range32(68176LLU,68184LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__KHITAN_SMALL_SCRIPT = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(94180LLU,101120LLU,6940LLU),_20548c650_Range32(101121LLU,101589LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__KHMER = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(6016LLU,6109LLU,1LLU),_20548c650_Range16(6112LLU,6121LLU,1LLU),_20548c650_Range16(6128LLU,6137LLU,1LLU),_20548c650_Range16(6624LLU,6655LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__KHOJKI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(70144LLU,70161LLU,1LLU),_20548c650_Range32(70163LLU,70209LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__KHUDAWADI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(70320LLU,70378LLU,1LLU),_20548c650_Range32(70384LLU,70393LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LAO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(3713LLU,3714LLU,1LLU),_20548c650_Range16(3716LLU,3718LLU,2LLU),_20548c650_Range16(3719LLU,3722LLU,1LLU),_20548c650_Range16(3724LLU,3747LLU,1LLU),_20548c650_Range16(3749LLU,3751LLU,2LLU),_20548c650_Range16(3752LLU,3773LLU,1LLU),_20548c650_Range16(3776LLU,3780LLU,1LLU),_20548c650_Range16(3782LLU,3784LLU,2LLU),_20548c650_Range16(3785LLU,3790LLU,1LLU),_20548c650_Range16(3792LLU,3801LLU,1LLU),_20548c650_Range16(3804LLU,3807LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LATIN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(65LLU,90LLU,1LLU),_20548c650_Range16(97LLU,122LLU,1LLU),_20548c650_Range16(170LLU,186LLU,16LLU),_20548c650_Range16(192LLU,214LLU,1LLU),_20548c650_Range16(216LLU,246LLU,1LLU),_20548c650_Range16(248LLU,696LLU,1LLU),_20548c650_Range16(736LLU,740LLU,1LLU),_20548c650_Range16(7424LLU,7461LLU,1LLU),_20548c650_Range16(7468LLU,7516LLU,1LLU),_20548c650_Range16(7522LLU,7525LLU,1LLU),_20548c650_Range16(7531LLU,7543LLU,1LLU),_20548c650_Range16(7545LLU,7614LLU,1LLU),_20548c650_Range16(7680LLU,7935LLU,1LLU),_20548c650_Range16(8305LLU,8319LLU,14LLU),_20548c650_Range16(8336LLU,8348LLU,1LLU),_20548c650_Range16(8490LLU,8491LLU,1LLU),_20548c650_Range16(8498LLU,8526LLU,28LLU),_20548c650_Range16(8544LLU,8584LLU,1LLU),_20548c650_Range16(11360LLU,11391LLU,1LLU),_20548c650_Range16(42786LLU,42887LLU,1LLU),_20548c650_Range16(42891LLU,42954LLU,1LLU),_20548c650_Range16(42960LLU,42961LLU,1LLU),_20548c650_Range16(42963LLU,42965LLU,2LLU),_20548c650_Range16(42966LLU,42969LLU,1LLU),_20548c650_Range16(42994LLU,43007LLU,1LLU),_20548c650_Range16(43824LLU,43866LLU,1LLU),_20548c650_Range16(43868LLU,43876LLU,1LLU),_20548c650_Range16(43878LLU,43881LLU,1LLU),_20548c650_Range16(64256LLU,64262LLU,1LLU),_20548c650_Range16(65313LLU,65338LLU,1LLU),_20548c650_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(67456LLU,67461LLU,1LLU),_20548c650_Range32(67463LLU,67504LLU,1LLU),_20548c650_Range32(67506LLU,67514LLU,1LLU),_20548c650_Range32(122624LLU,122654LLU,1LLU),_20548c650_Range32(122661LLU,122666LLU,1LLU)}),5LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LEPCHA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(7168LLU,7223LLU,1LLU),_20548c650_Range16(7227LLU,7241LLU,1LLU),_20548c650_Range16(7245LLU,7247LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LIMBU = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(6400LLU,6430LLU,1LLU),_20548c650_Range16(6432LLU,6443LLU,1LLU),_20548c650_Range16(6448LLU,6459LLU,1LLU),_20548c650_Range16(6464LLU,6468LLU,4LLU),_20548c650_Range16(6469LLU,6479LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LINEAR_A = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(67072LLU,67382LLU,1LLU),_20548c650_Range32(67392LLU,67413LLU,1LLU),_20548c650_Range32(67424LLU,67431LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LINEAR_B = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(65536LLU,65547LLU,1LLU),_20548c650_Range32(65549LLU,65574LLU,1LLU),_20548c650_Range32(65576LLU,65594LLU,1LLU),_20548c650_Range32(65596LLU,65597LLU,1LLU),_20548c650_Range32(65599LLU,65613LLU,1LLU),_20548c650_Range32(65616LLU,65629LLU,1LLU),_20548c650_Range32(65664LLU,65786LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LISU = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(42192LLU,42239LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(73648LLU,73648LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LYCIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66176LLU,66204LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LYDIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(67872LLU,67897LLU,1LLU),_20548c650_Range32(67903LLU,67903LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MAHAJANI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69968LLU,70006LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MAKASAR = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(73440LLU,73464LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MALAYALAM = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(3328LLU,3340LLU,1LLU),_20548c650_Range16(3342LLU,3344LLU,1LLU),_20548c650_Range16(3346LLU,3396LLU,1LLU),_20548c650_Range16(3398LLU,3400LLU,1LLU),_20548c650_Range16(3402LLU,3407LLU,1LLU),_20548c650_Range16(3412LLU,3427LLU,1LLU),_20548c650_Range16(3430LLU,3455LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MANDAIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(2112LLU,2139LLU,1LLU),_20548c650_Range16(2142LLU,2142LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MANICHAEAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(68288LLU,68326LLU,1LLU),_20548c650_Range32(68331LLU,68342LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MARCHEN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(72816LLU,72847LLU,1LLU),_20548c650_Range32(72850LLU,72871LLU,1LLU),_20548c650_Range32(72873LLU,72886LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MASARAM_GONDI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(72960LLU,72966LLU,1LLU),_20548c650_Range32(72968LLU,72969LLU,1LLU),_20548c650_Range32(72971LLU,73014LLU,1LLU),_20548c650_Range32(73018LLU,73020LLU,2LLU),_20548c650_Range32(73021LLU,73023LLU,2LLU),_20548c650_Range32(73024LLU,73031LLU,1LLU),_20548c650_Range32(73040LLU,73049LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MEDEFAIDRIN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(93760LLU,93850LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MEETEI_MAYEK = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(43744LLU,43766LLU,1LLU),_20548c650_Range16(43968LLU,44013LLU,1LLU),_20548c650_Range16(44016LLU,44025LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MENDE_KIKAKUI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(124928LLU,125124LLU,1LLU),_20548c650_Range32(125127LLU,125142LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MEROITIC_CURSIVE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(68000LLU,68023LLU,1LLU),_20548c650_Range32(68028LLU,68047LLU,1LLU),_20548c650_Range32(68050LLU,68095LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MEROITIC_HIEROGLYPHS = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(67968LLU,67999LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MIAO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(93952LLU,94026LLU,1LLU),_20548c650_Range32(94031LLU,94087LLU,1LLU),_20548c650_Range32(94095LLU,94111LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MODI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(71168LLU,71236LLU,1LLU),_20548c650_Range32(71248LLU,71257LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MONGOLIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(6144LLU,6145LLU,1LLU),_20548c650_Range16(6148LLU,6150LLU,2LLU),_20548c650_Range16(6151LLU,6169LLU,1LLU),_20548c650_Range16(6176LLU,6264LLU,1LLU),_20548c650_Range16(6272LLU,6314LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(71264LLU,71276LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MRO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(92736LLU,92766LLU,1LLU),_20548c650_Range32(92768LLU,92777LLU,1LLU),_20548c650_Range32(92782LLU,92783LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MULTANI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(70272LLU,70278LLU,1LLU),_20548c650_Range32(70280LLU,70282LLU,2LLU),_20548c650_Range32(70283LLU,70285LLU,1LLU),_20548c650_Range32(70287LLU,70301LLU,1LLU),_20548c650_Range32(70303LLU,70313LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__MYANMAR = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(4096LLU,4255LLU,1LLU),_20548c650_Range16(43488LLU,43518LLU,1LLU),_20548c650_Range16(43616LLU,43647LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__NABATAEAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(67712LLU,67742LLU,1LLU),_20548c650_Range32(67751LLU,67759LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__NAG_MUNDARI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(124112LLU,124153LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__NANDINAGARI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(72096LLU,72103LLU,1LLU),_20548c650_Range32(72106LLU,72151LLU,1LLU),_20548c650_Range32(72154LLU,72164LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__NEW_TAI_LUE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(6528LLU,6571LLU,1LLU),_20548c650_Range16(6576LLU,6601LLU,1LLU),_20548c650_Range16(6608LLU,6618LLU,1LLU),_20548c650_Range16(6622LLU,6623LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__NEWA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(70656LLU,70747LLU,1LLU),_20548c650_Range32(70749LLU,70753LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__NKO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(1984LLU,2042LLU,1LLU),_20548c650_Range16(2045LLU,2047LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__NUSHU = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(94177LLU,110960LLU,16783LLU),_20548c650_Range32(110961LLU,111355LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__NYIAKENG_PUACHUE_HMONG = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(123136LLU,123180LLU,1LLU),_20548c650_Range32(123184LLU,123197LLU,1LLU),_20548c650_Range32(123200LLU,123209LLU,1LLU),_20548c650_Range32(123214LLU,123215LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OGHAM = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(5760LLU,5788LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OL_CHIKI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(7248LLU,7295LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OLD_HUNGARIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(68736LLU,68786LLU,1LLU),_20548c650_Range32(68800LLU,68850LLU,1LLU),_20548c650_Range32(68858LLU,68863LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OLD_ITALIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66304LLU,66339LLU,1LLU),_20548c650_Range32(66349LLU,66351LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OLD_NORTH_ARABIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(68224LLU,68255LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OLD_PERMIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66384LLU,66426LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OLD_PERSIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66464LLU,66499LLU,1LLU),_20548c650_Range32(66504LLU,66517LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OLD_SOGDIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69376LLU,69415LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OLD_SOUTH_ARABIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(68192LLU,68223LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OLD_TURKIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(68608LLU,68680LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OLD_UYGHUR = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69488LLU,69513LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__ORIYA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(2817LLU,2819LLU,1LLU),_20548c650_Range16(2821LLU,2828LLU,1LLU),_20548c650_Range16(2831LLU,2832LLU,1LLU),_20548c650_Range16(2835LLU,2856LLU,1LLU),_20548c650_Range16(2858LLU,2864LLU,1LLU),_20548c650_Range16(2866LLU,2867LLU,1LLU),_20548c650_Range16(2869LLU,2873LLU,1LLU),_20548c650_Range16(2876LLU,2884LLU,1LLU),_20548c650_Range16(2887LLU,2888LLU,1LLU),_20548c650_Range16(2891LLU,2893LLU,1LLU),_20548c650_Range16(2901LLU,2903LLU,1LLU),_20548c650_Range16(2908LLU,2909LLU,1LLU),_20548c650_Range16(2911LLU,2915LLU,1LLU),_20548c650_Range16(2918LLU,2935LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OSAGE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66736LLU,66771LLU,1LLU),_20548c650_Range32(66776LLU,66811LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OSMANYA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66688LLU,66717LLU,1LLU),_20548c650_Range32(66720LLU,66729LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PAHAWH_HMONG = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(92928LLU,92997LLU,1LLU),_20548c650_Range32(93008LLU,93017LLU,1LLU),_20548c650_Range32(93019LLU,93025LLU,1LLU),_20548c650_Range32(93027LLU,93047LLU,1LLU),_20548c650_Range32(93053LLU,93071LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PALMYRENE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(67680LLU,67711LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PAU_CIN_HAU = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(72384LLU,72440LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PHAGS_PA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(43072LLU,43127LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PHOENICIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(67840LLU,67867LLU,1LLU),_20548c650_Range32(67871LLU,67871LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PSALTER_PAHLAVI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(68480LLU,68497LLU,1LLU),_20548c650_Range32(68505LLU,68508LLU,1LLU),_20548c650_Range32(68521LLU,68527LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__REJANG = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(43312LLU,43347LLU,1LLU),_20548c650_Range16(43359LLU,43359LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__RUNIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(5792LLU,5866LLU,1LLU),_20548c650_Range16(5870LLU,5880LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SAMARITAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(2048LLU,2093LLU,1LLU),_20548c650_Range16(2096LLU,2110LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SAURASHTRA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(43136LLU,43205LLU,1LLU),_20548c650_Range16(43214LLU,43225LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SHARADA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(70016LLU,70111LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SHAVIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66640LLU,66687LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SIDDHAM = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(71040LLU,71093LLU,1LLU),_20548c650_Range32(71096LLU,71133LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SIGN_WRITING = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(120832LLU,121483LLU,1LLU),_20548c650_Range32(121499LLU,121503LLU,1LLU),_20548c650_Range32(121505LLU,121519LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SINHALA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(3457LLU,3459LLU,1LLU),_20548c650_Range16(3461LLU,3478LLU,1LLU),_20548c650_Range16(3482LLU,3505LLU,1LLU),_20548c650_Range16(3507LLU,3515LLU,1LLU),_20548c650_Range16(3517LLU,3520LLU,3LLU),_20548c650_Range16(3521LLU,3526LLU,1LLU),_20548c650_Range16(3530LLU,3535LLU,5LLU),_20548c650_Range16(3536LLU,3540LLU,1LLU),_20548c650_Range16(3542LLU,3544LLU,2LLU),_20548c650_Range16(3545LLU,3551LLU,1LLU),_20548c650_Range16(3558LLU,3567LLU,1LLU),_20548c650_Range16(3570LLU,3572LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(70113LLU,70132LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SOGDIAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69424LLU,69465LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SORA_SOMPENG = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69840LLU,69864LLU,1LLU),_20548c650_Range32(69872LLU,69881LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SOYOMBO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(72272LLU,72354LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SUNDANESE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(7040LLU,7103LLU,1LLU),_20548c650_Range16(7360LLU,7367LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SYLOTI_NAGRI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(43008LLU,43052LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SYRIAC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(1792LLU,1805LLU,1LLU),_20548c650_Range16(1807LLU,1866LLU,1LLU),_20548c650_Range16(1869LLU,1871LLU,1LLU),_20548c650_Range16(2144LLU,2154LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TAGALOG = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(5888LLU,5909LLU,1LLU),_20548c650_Range16(5919LLU,5919LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TAGBANWA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(5984LLU,5996LLU,1LLU),_20548c650_Range16(5998LLU,6000LLU,1LLU),_20548c650_Range16(6002LLU,6003LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TAI_LE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(6480LLU,6509LLU,1LLU),_20548c650_Range16(6512LLU,6516LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TAI_THAM = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(6688LLU,6750LLU,1LLU),_20548c650_Range16(6752LLU,6780LLU,1LLU),_20548c650_Range16(6783LLU,6793LLU,1LLU),_20548c650_Range16(6800LLU,6809LLU,1LLU),_20548c650_Range16(6816LLU,6829LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TAI_VIET = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(43648LLU,43714LLU,1LLU),_20548c650_Range16(43739LLU,43743LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TAKRI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(71296LLU,71353LLU,1LLU),_20548c650_Range32(71360LLU,71369LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TAMIL = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(2946LLU,2947LLU,1LLU),_20548c650_Range16(2949LLU,2954LLU,1LLU),_20548c650_Range16(2958LLU,2960LLU,1LLU),_20548c650_Range16(2962LLU,2965LLU,1LLU),_20548c650_Range16(2969LLU,2970LLU,1LLU),_20548c650_Range16(2972LLU,2974LLU,2LLU),_20548c650_Range16(2975LLU,2979LLU,4LLU),_20548c650_Range16(2980LLU,2984LLU,4LLU),_20548c650_Range16(2985LLU,2986LLU,1LLU),_20548c650_Range16(2990LLU,3001LLU,1LLU),_20548c650_Range16(3006LLU,3010LLU,1LLU),_20548c650_Range16(3014LLU,3016LLU,1LLU),_20548c650_Range16(3018LLU,3021LLU,1LLU),_20548c650_Range16(3024LLU,3031LLU,7LLU),_20548c650_Range16(3046LLU,3066LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(73664LLU,73713LLU,1LLU),_20548c650_Range32(73727LLU,73727LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TANGSA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(92784LLU,92862LLU,1LLU),_20548c650_Range32(92864LLU,92873LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TANGUT = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(94176LLU,94208LLU,32LLU),_20548c650_Range32(94209LLU,100343LLU,1LLU),_20548c650_Range32(100352LLU,101119LLU,1LLU),_20548c650_Range32(101632LLU,101640LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TELUGU = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(3072LLU,3084LLU,1LLU),_20548c650_Range16(3086LLU,3088LLU,1LLU),_20548c650_Range16(3090LLU,3112LLU,1LLU),_20548c650_Range16(3114LLU,3129LLU,1LLU),_20548c650_Range16(3132LLU,3140LLU,1LLU),_20548c650_Range16(3142LLU,3144LLU,1LLU),_20548c650_Range16(3146LLU,3149LLU,1LLU),_20548c650_Range16(3157LLU,3158LLU,1LLU),_20548c650_Range16(3160LLU,3162LLU,1LLU),_20548c650_Range16(3165LLU,3168LLU,3LLU),_20548c650_Range16(3169LLU,3171LLU,1LLU),_20548c650_Range16(3174LLU,3183LLU,1LLU),_20548c650_Range16(3191LLU,3199LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__THAANA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(1920LLU,1969LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__THAI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(3585LLU,3642LLU,1LLU),_20548c650_Range16(3648LLU,3675LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TIBETAN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(3840LLU,3911LLU,1LLU),_20548c650_Range16(3913LLU,3948LLU,1LLU),_20548c650_Range16(3953LLU,3991LLU,1LLU),_20548c650_Range16(3993LLU,4028LLU,1LLU),_20548c650_Range16(4030LLU,4044LLU,1LLU),_20548c650_Range16(4046LLU,4052LLU,1LLU),_20548c650_Range16(4057LLU,4058LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TIFINAGH = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(11568LLU,11623LLU,1LLU),_20548c650_Range16(11631LLU,11632LLU,1LLU),_20548c650_Range16(11647LLU,11647LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TIRHUTA = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(70784LLU,70855LLU,1LLU),_20548c650_Range32(70864LLU,70873LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TOTO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(123536LLU,123566LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__UGARITIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66432LLU,66461LLU,1LLU),_20548c650_Range32(66463LLU,66463LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__VAI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(42240LLU,42539LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__VITHKUQI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66928LLU,66938LLU,1LLU),_20548c650_Range32(66940LLU,66954LLU,1LLU),_20548c650_Range32(66956LLU,66962LLU,1LLU),_20548c650_Range32(66964LLU,66965LLU,1LLU),_20548c650_Range32(66967LLU,66977LLU,1LLU),_20548c650_Range32(66979LLU,66993LLU,1LLU),_20548c650_Range32(66995LLU,67001LLU,1LLU),_20548c650_Range32(67003LLU,67004LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__WANCHO = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(123584LLU,123641LLU,1LLU),_20548c650_Range32(123647LLU,123647LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__WARANG_CITI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(71840LLU,71922LLU,1LLU),_20548c650_Range32(71935LLU,71935LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__YEZIDI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69248LLU,69289LLU,1LLU),_20548c650_Range32(69291LLU,69293LLU,1LLU),_20548c650_Range32(69296LLU,69297LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__YI = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(40960LLU,42124LLU,1LLU),_20548c650_Range16(42128LLU,42182LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__ZANABAZAR_SQUARE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(72192LLU,72263LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3_ADLAM = _20548cac3__ADLAM;
static jule::Ref<_20548c650_RangeTable> _20548cac3_AHOM = _20548cac3__AHOM;
static jule::Ref<_20548c650_RangeTable> _20548cac3_ANATOLIAN_HIEROGLYPHS = _20548cac3__ANATOLIAN_HIEROGLYPHS;
static jule::Ref<_20548c650_RangeTable> _20548cac3_ARABIC = _20548cac3__ARABIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_ARMENIAN = _20548cac3__ARMENIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_AVESTAN = _20548cac3__AVESTAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_BALINESE = _20548cac3__BALINESE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_BAMUM = _20548cac3__BAMUM;
static jule::Ref<_20548c650_RangeTable> _20548cac3_BASSA_VAH = _20548cac3__BASSA_VAH;
static jule::Ref<_20548c650_RangeTable> _20548cac3_BATAK = _20548cac3__BATAK;
static jule::Ref<_20548c650_RangeTable> _20548cac3_BENGALI = _20548cac3__BENGALI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_BHAIKSUKI = _20548cac3__BHAIKSUKI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_BOPOMOFO = _20548cac3__BOPOMOFO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_BRAHMI = _20548cac3__BRAHMI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_BRAILLE = _20548cac3__BRAILLE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_BUGINESE = _20548cac3__BUGINESE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_BUHID = _20548cac3__BUHID;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CANADIAN_ABORIGINAL = _20548cac3__CANADIAN_ABORIGINAL;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CARIAN = _20548cac3__CARIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CAUCASIAN_ALBANIAN = _20548cac3__CAUCASIAN_ALBANIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CHAKMA = _20548cac3__CHAKMA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CHAM = _20548cac3__CHAM;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CHEROKEE = _20548cac3__CHEROKEE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CHORASMIAN = _20548cac3__CHORASMIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_COMMON = _20548cac3__COMMON;
static jule::Ref<_20548c650_RangeTable> _20548cac3_COPTIC = _20548cac3__COPTIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CUNEIFORM = _20548cac3__CUNEIFORM;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CYPRIOT = _20548cac3__CYPRIOT;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CYPRO_MINOAN = _20548cac3__CYPRO_MINOAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_CYRILLIC = _20548cac3__CYRILLIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_DESERET = _20548cac3__DESERET;
static jule::Ref<_20548c650_RangeTable> _20548cac3_DEVANAGARI = _20548cac3__DEVANAGARI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_DIVES_AKURU = _20548cac3__DIVES_AKURU;
static jule::Ref<_20548c650_RangeTable> _20548cac3_DOGRA = _20548cac3__DOGRA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_DUPLOYAN = _20548cac3__DUPLOYAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_EGYPTIAN_HIEROGLYPHS = _20548cac3__EGYPTIAN_HIEROGLYPHS;
static jule::Ref<_20548c650_RangeTable> _20548cac3_ELBASAN = _20548cac3__ELBASAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_ELYMAIC = _20548cac3__ELYMAIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_ETHIOPIC = _20548cac3__ETHIOPIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_GEORGIAN = _20548cac3__GEORGIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_GLAGOLITIC = _20548cac3__GLAGOLITIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_GOTHIC = _20548cac3__GOTHIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_GRANTHA = _20548cac3__GRANTHA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_GREEK = _20548cac3__GREEK;
static jule::Ref<_20548c650_RangeTable> _20548cac3_GUJARATI = _20548cac3__GUJARATI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_GUNJALA_GONDI = _20548cac3__GUNJALA_GONDI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_GURMUKHI = _20548cac3__GURMUKHI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_HAN = _20548cac3__HAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_HANGUL = _20548cac3__HANGUL;
static jule::Ref<_20548c650_RangeTable> _20548cac3_HANIFI_ROHINGYA = _20548cac3__HANIFI_ROHINGYA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_HANUNOO = _20548cac3__HANUNOO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_HATRAN = _20548cac3__HATRAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_HEBREW = _20548cac3__HEBREW;
static jule::Ref<_20548c650_RangeTable> _20548cac3_HIRAGANA = _20548cac3__HIRAGANA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_IMPERIAL_ARAMAIC = _20548cac3__IMPERIAL_ARAMAIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_INHERITED = _20548cac3__INHERITED;
static jule::Ref<_20548c650_RangeTable> _20548cac3_INSCRIPTIONAL_PAHLAVI = _20548cac3__INSCRIPTIONAL_PAHLAVI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_INSCRIPTIONAL_PARTHIAN = _20548cac3__INSCRIPTIONAL_PARTHIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_JAVANESE = _20548cac3__JAVANESE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_KAITHI = _20548cac3__KAITHI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_KANNADA = _20548cac3__KANNADA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_KATAKANA = _20548cac3__KATAKANA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_KAWI = _20548cac3__KAWI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_KAYAH_LI = _20548cac3__KAYAH_LI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_KHAROSHTHI = _20548cac3__KHAROSHTHI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_KHITAN_SMALL_SCRIPT = _20548cac3__KHITAN_SMALL_SCRIPT;
static jule::Ref<_20548c650_RangeTable> _20548cac3_KHMER = _20548cac3__KHMER;
static jule::Ref<_20548c650_RangeTable> _20548cac3_KHOJKI = _20548cac3__KHOJKI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_KHUDAWADI = _20548cac3__KHUDAWADI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LAO = _20548cac3__LAO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LATIN = _20548cac3__LATIN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LEPCHA = _20548cac3__LEPCHA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LIMBU = _20548cac3__LIMBU;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LINEAR_A = _20548cac3__LINEAR_A;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LINEAR_B = _20548cac3__LINEAR_B;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LISU = _20548cac3__LISU;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LYCIAN = _20548cac3__LYCIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LYDIAN = _20548cac3__LYDIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MAHAJANI = _20548cac3__MAHAJANI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MAKASAR = _20548cac3__MAKASAR;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MALAYALAM = _20548cac3__MALAYALAM;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MANDAIC = _20548cac3__MANDAIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MANICHAEAN = _20548cac3__MANICHAEAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MARCHEN = _20548cac3__MARCHEN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MASARAM_GONDI = _20548cac3__MASARAM_GONDI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MEDEFAIDRIN = _20548cac3__MEDEFAIDRIN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MEETEI_MAYEK = _20548cac3__MEETEI_MAYEK;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MENDE_KIKAKUI = _20548cac3__MENDE_KIKAKUI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MEROITIC_CURSIVE = _20548cac3__MEROITIC_CURSIVE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MEROITIC_HIEROGLYPHS = _20548cac3__MEROITIC_HIEROGLYPHS;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MIAO = _20548cac3__MIAO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MODI = _20548cac3__MODI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MONGOLIAN = _20548cac3__MONGOLIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MRO = _20548cac3__MRO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MULTANI = _20548cac3__MULTANI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_MYANMAR = _20548cac3__MYANMAR;
static jule::Ref<_20548c650_RangeTable> _20548cac3_NABATAEAN = _20548cac3__NABATAEAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_NAG_MUNDARI = _20548cac3__NAG_MUNDARI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_NANDINAGARI = _20548cac3__NANDINAGARI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_NEW_TAI_LUE = _20548cac3__NEW_TAI_LUE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_NEWA = _20548cac3__NEWA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_NKO = _20548cac3__NKO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_NUSHU = _20548cac3__NUSHU;
static jule::Ref<_20548c650_RangeTable> _20548cac3_NYIAKENG_PUACHUE_HMONG = _20548cac3__NYIAKENG_PUACHUE_HMONG;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OGHAM = _20548cac3__OGHAM;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OL_CHIKI = _20548cac3__OL_CHIKI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OLD_HUNGARIAN = _20548cac3__OLD_HUNGARIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OLD_ITALIC = _20548cac3__OLD_ITALIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OLD_NORTH_ARABIAN = _20548cac3__OLD_NORTH_ARABIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OLD_PERMIC = _20548cac3__OLD_PERMIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OLD_PERSIAN = _20548cac3__OLD_PERSIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OLD_SOGDIAN = _20548cac3__OLD_SOGDIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OLD_SOUTH_ARABIAN = _20548cac3__OLD_SOUTH_ARABIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OLD_TURKIC = _20548cac3__OLD_TURKIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OLD_UYGHUR = _20548cac3__OLD_UYGHUR;
static jule::Ref<_20548c650_RangeTable> _20548cac3_ORIYA = _20548cac3__ORIYA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OSAGE = _20548cac3__OSAGE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OSMANYA = _20548cac3__OSMANYA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PAHAWH_HMONG = _20548cac3__PAHAWH_HMONG;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PALMYRENE = _20548cac3__PALMYRENE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PAU_CIN_HAU = _20548cac3__PAU_CIN_HAU;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PHAGS_PA = _20548cac3__PHAGS_PA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PHOENICIAN = _20548cac3__PHOENICIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PSALTER_PAHLAVI = _20548cac3__PSALTER_PAHLAVI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_REJANG = _20548cac3__REJANG;
static jule::Ref<_20548c650_RangeTable> _20548cac3_RUNIC = _20548cac3__RUNIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SAMARITAN = _20548cac3__SAMARITAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SAURASHTRA = _20548cac3__SAURASHTRA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SHARADA = _20548cac3__SHARADA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SHAVIAN = _20548cac3__SHAVIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SIDDHAM = _20548cac3__SIDDHAM;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SIGN_WRITING = _20548cac3__SIGN_WRITING;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SINHALA = _20548cac3__SINHALA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SOGDIAN = _20548cac3__SOGDIAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SORA_SOMPENG = _20548cac3__SORA_SOMPENG;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SOYOMBO = _20548cac3__SOYOMBO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SUNDANESE = _20548cac3__SUNDANESE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SYLOTI_NAGRI = _20548cac3__SYLOTI_NAGRI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SYRIAC = _20548cac3__SYRIAC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TAGALOG = _20548cac3__TAGALOG;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TAGBANWA = _20548cac3__TAGBANWA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TAI_LE = _20548cac3__TAI_LE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TAI_THAM = _20548cac3__TAI_THAM;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TAI_VIET = _20548cac3__TAI_VIET;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TAKRI = _20548cac3__TAKRI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TAMIL = _20548cac3__TAMIL;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TANGSA = _20548cac3__TANGSA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TANGUT = _20548cac3__TANGUT;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TELUGU = _20548cac3__TELUGU;
static jule::Ref<_20548c650_RangeTable> _20548cac3_THAANA = _20548cac3__THAANA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_THAI = _20548cac3__THAI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TIBETAN = _20548cac3__TIBETAN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TIFINAGH = _20548cac3__TIFINAGH;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TIRHUTA = _20548cac3__TIRHUTA;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TOTO = _20548cac3__TOTO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_UGARITIC = _20548cac3__UGARITIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_VAI = _20548cac3__VAI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_VITHKUQI = _20548cac3__VITHKUQI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_WANCHO = _20548cac3__WANCHO;
static jule::Ref<_20548c650_RangeTable> _20548cac3_WARANG_CITI = _20548cac3__WARANG_CITI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_YEZIDI = _20548cac3__YEZIDI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_YI = _20548cac3__YI;
static jule::Ref<_20548c650_RangeTable> _20548cac3_ZANABAZAR_SQUARE = _20548cac3__ZANABAZAR_SQUARE;
static jule::Map<jule::Str,jule::Ref<_20548c650_RangeTable>> _20548cac3_SCRIPTS = jule::Map<jule::Str,jule::Ref<_20548c650_RangeTable>>({{jule::Str("Adlam", 5),_20548cac3_ADLAM},{jule::Str("Ahom", 4),_20548cac3_AHOM},{jule::Str("Anatolian_Hieroglyphs", 21),_20548cac3_ANATOLIAN_HIEROGLYPHS},{jule::Str("Arabic", 6),_20548cac3_ARABIC},{jule::Str("Armenian", 8),_20548cac3_ARMENIAN},{jule::Str("Avestan", 7),_20548cac3_AVESTAN},{jule::Str("Balinese", 8),_20548cac3_BALINESE},{jule::Str("Bamum", 5),_20548cac3_BAMUM},{jule::Str("Bassa_Vah", 9),_20548cac3_BASSA_VAH},{jule::Str("Batak", 5),_20548cac3_BATAK},{jule::Str("Bengali", 7),_20548cac3_BENGALI},{jule::Str("Bhaiksuki", 9),_20548cac3_BHAIKSUKI},{jule::Str("Bopomofo", 8),_20548cac3_BOPOMOFO},{jule::Str("Brahmi", 6),_20548cac3_BRAHMI},{jule::Str("Braille", 7),_20548cac3_BRAILLE},{jule::Str("Buginese", 8),_20548cac3_BUGINESE},{jule::Str("Buhid", 5),_20548cac3_BUHID},{jule::Str("Canadian_Aboriginal", 19),_20548cac3_CANADIAN_ABORIGINAL},{jule::Str("Carian", 6),_20548cac3_CARIAN},{jule::Str("Caucasian_Albanian", 18),_20548cac3_CAUCASIAN_ALBANIAN},{jule::Str("Chakma", 6),_20548cac3_CHAKMA},{jule::Str("Cham", 4),_20548cac3_CHAM},{jule::Str("Cherokee", 8),_20548cac3_CHEROKEE},{jule::Str("Chorasmian", 10),_20548cac3_CHORASMIAN},{jule::Str("Common", 6),_20548cac3_COMMON},{jule::Str("Coptic", 6),_20548cac3_COPTIC},{jule::Str("Cuneiform", 9),_20548cac3_CUNEIFORM},{jule::Str("Cypriot", 7),_20548cac3_CYPRIOT},{jule::Str("Cypro_Minoan", 12),_20548cac3_CYPRO_MINOAN},{jule::Str("Cyrillic", 8),_20548cac3_CYRILLIC},{jule::Str("Deseret", 7),_20548cac3_DESERET},{jule::Str("Devanagari", 10),_20548cac3_DEVANAGARI},{jule::Str("Dives_Akuru", 11),_20548cac3_DIVES_AKURU},{jule::Str("Dogra", 5),_20548cac3_DOGRA},{jule::Str("Duployan", 8),_20548cac3_DUPLOYAN},{jule::Str("Egyptian_Hieroglyphs", 20),_20548cac3_EGYPTIAN_HIEROGLYPHS},{jule::Str("Elbasan", 7),_20548cac3_ELBASAN},{jule::Str("Elymaic", 7),_20548cac3_ELYMAIC},{jule::Str("Ethiopic", 8),_20548cac3_ETHIOPIC},{jule::Str("Georgian", 8),_20548cac3_GEORGIAN},{jule::Str("Glagolitic", 10),_20548cac3_GLAGOLITIC},{jule::Str("Gothic", 6),_20548cac3_GOTHIC},{jule::Str("Grantha", 7),_20548cac3_GRANTHA},{jule::Str("Greek", 5),_20548cac3_GREEK},{jule::Str("Gujarati", 8),_20548cac3_GUJARATI},{jule::Str("Gunjala_Gondi", 13),_20548cac3_GUNJALA_GONDI},{jule::Str("Gurmukhi", 8),_20548cac3_GURMUKHI},{jule::Str("Han", 3),_20548cac3_HAN},{jule::Str("Hangul", 6),_20548cac3_HANGUL},{jule::Str("Hanifi_Rohingya", 15),_20548cac3_HANIFI_ROHINGYA},{jule::Str("Hanunoo", 7),_20548cac3_HANUNOO},{jule::Str("Hatran", 6),_20548cac3_HATRAN},{jule::Str("Hebrew", 6),_20548cac3_HEBREW},{jule::Str("Hiragana", 8),_20548cac3_HIRAGANA},{jule::Str("Imperial_Aramaic", 16),_20548cac3_IMPERIAL_ARAMAIC},{jule::Str("Inherited", 9),_20548cac3_INHERITED},{jule::Str("Inscriptional_Pahlavi", 21),_20548cac3_INSCRIPTIONAL_PAHLAVI},{jule::Str("Inscriptional_Parthian", 22),_20548cac3_INSCRIPTIONAL_PARTHIAN},{jule::Str("Javanese", 8),_20548cac3_JAVANESE},{jule::Str("Kaithi", 6),_20548cac3_KAITHI},{jule::Str("Kannada", 7),_20548cac3_KANNADA},{jule::Str("Katakana", 8),_20548cac3_KATAKANA},{jule::Str("Kawi", 4),_20548cac3_KAWI},{jule::Str("Kayah_Li", 8),_20548cac3_KAYAH_LI},{jule::Str("Kharoshthi", 10),_20548cac3_KHAROSHTHI},{jule::Str("Khitan_Small_Script", 19),_20548cac3_KHITAN_SMALL_SCRIPT},{jule::Str("Khmer", 5),_20548cac3_KHMER},{jule::Str("Khojki", 6),_20548cac3_KHOJKI},{jule::Str("Khudawadi", 9),_20548cac3_KHUDAWADI},{jule::Str("Lao", 3),_20548cac3_LAO},{jule::Str("Latin", 5),_20548cac3_LATIN},{jule::Str("Lepcha", 6),_20548cac3_LEPCHA},{jule::Str("Limbu", 5),_20548cac3_LIMBU},{jule::Str("Linear_A", 8),_20548cac3_LINEAR_A},{jule::Str("Linear_B", 8),_20548cac3_LINEAR_B},{jule::Str("Lisu", 4),_20548cac3_LISU},{jule::Str("Lycian", 6),_20548cac3_LYCIAN},{jule::Str("Lydian", 6),_20548cac3_LYDIAN},{jule::Str("Mahajani", 8),_20548cac3_MAHAJANI},{jule::Str("Makasar", 7),_20548cac3_MAKASAR},{jule::Str("Malayalam", 9),_20548cac3_MALAYALAM},{jule::Str("Mandaic", 7),_20548cac3_MANDAIC},{jule::Str("Manichaean", 10),_20548cac3_MANICHAEAN},{jule::Str("Marchen", 7),_20548cac3_MARCHEN},{jule::Str("Masaram_Gondi", 13),_20548cac3_MASARAM_GONDI},{jule::Str("Medefaidrin", 11),_20548cac3_MEDEFAIDRIN},{jule::Str("Meetei_Mayek", 12),_20548cac3_MEETEI_MAYEK},{jule::Str("Mende_Kikakui", 13),_20548cac3_MENDE_KIKAKUI},{jule::Str("Meroitic_Cursive", 16),_20548cac3_MEROITIC_CURSIVE},{jule::Str("Meroitic_Hieroglyphs", 20),_20548cac3_MEROITIC_HIEROGLYPHS},{jule::Str("Miao", 4),_20548cac3_MIAO},{jule::Str("Modi", 4),_20548cac3_MODI},{jule::Str("Mongolian", 9),_20548cac3_MONGOLIAN},{jule::Str("Mro", 3),_20548cac3_MRO},{jule::Str("Multani", 7),_20548cac3_MULTANI},{jule::Str("Myanmar", 7),_20548cac3_MYANMAR},{jule::Str("Nabataean", 9),_20548cac3_NABATAEAN},{jule::Str("Nag_Mundari", 11),_20548cac3_NAG_MUNDARI},{jule::Str("Nandinagari", 11),_20548cac3_NANDINAGARI},{jule::Str("New_Tai_Lue", 11),_20548cac3_NEW_TAI_LUE},{jule::Str("Newa", 4),_20548cac3_NEWA},{jule::Str("Nko", 3),_20548cac3_NKO},{jule::Str("Nushu", 5),_20548cac3_NUSHU},{jule::Str("Nyiakeng_Puachue_Hmong", 22),_20548cac3_NYIAKENG_PUACHUE_HMONG},{jule::Str("Ogham", 5),_20548cac3_OGHAM},{jule::Str("Ol_Chiki", 8),_20548cac3_OL_CHIKI},{jule::Str("Old_Hungarian", 13),_20548cac3_OLD_HUNGARIAN},{jule::Str("Old_Italic", 10),_20548cac3_OLD_ITALIC},{jule::Str("Old_North_Arabian", 17),_20548cac3_OLD_NORTH_ARABIAN},{jule::Str("Old_Permic", 10),_20548cac3_OLD_PERMIC},{jule::Str("Old_Persian", 11),_20548cac3_OLD_PERSIAN},{jule::Str("Old_Sogdian", 11),_20548cac3_OLD_SOGDIAN},{jule::Str("Old_South_Arabian", 17),_20548cac3_OLD_SOUTH_ARABIAN},{jule::Str("Old_Turkic", 10),_20548cac3_OLD_TURKIC},{jule::Str("Old_Uyghur", 10),_20548cac3_OLD_UYGHUR},{jule::Str("Oriya", 5),_20548cac3_ORIYA},{jule::Str("Osage", 5),_20548cac3_OSAGE},{jule::Str("Osmanya", 7),_20548cac3_OSMANYA},{jule::Str("Pahawh_Hmong", 12),_20548cac3_PAHAWH_HMONG},{jule::Str("Palmyrene", 9),_20548cac3_PALMYRENE},{jule::Str("Pau_Cin_Hau", 11),_20548cac3_PAU_CIN_HAU},{jule::Str("Phags_Pa", 8),_20548cac3_PHAGS_PA},{jule::Str("Phoenician", 10),_20548cac3_PHOENICIAN},{jule::Str("Psalter_Pahlavi", 15),_20548cac3_PSALTER_PAHLAVI},{jule::Str("Rejang", 6),_20548cac3_REJANG},{jule::Str("Runic", 5),_20548cac3_RUNIC},{jule::Str("Samaritan", 9),_20548cac3_SAMARITAN},{jule::Str("Saurashtra", 10),_20548cac3_SAURASHTRA},{jule::Str("Sharada", 7),_20548cac3_SHARADA},{jule::Str("Shavian", 7),_20548cac3_SHAVIAN},{jule::Str("Siddham", 7),_20548cac3_SIDDHAM},{jule::Str("SignWriting", 11),_20548cac3_SIGN_WRITING},{jule::Str("Sinhala", 7),_20548cac3_SINHALA},{jule::Str("Sogdian", 7),_20548cac3_SOGDIAN},{jule::Str("Sora_Sompeng", 12),_20548cac3_SORA_SOMPENG},{jule::Str("Soyombo", 7),_20548cac3_SOYOMBO},{jule::Str("Sundanese", 9),_20548cac3_SUNDANESE},{jule::Str("Syloti_Nagri", 12),_20548cac3_SYLOTI_NAGRI},{jule::Str("Syriac", 6),_20548cac3_SYRIAC},{jule::Str("Tagalog", 7),_20548cac3_TAGALOG},{jule::Str("Tagbanwa", 8),_20548cac3_TAGBANWA},{jule::Str("Tai_Le", 6),_20548cac3_TAI_LE},{jule::Str("Tai_Tham", 8),_20548cac3_TAI_THAM},{jule::Str("Tai_Viet", 8),_20548cac3_TAI_VIET},{jule::Str("Takri", 5),_20548cac3_TAKRI},{jule::Str("Tamil", 5),_20548cac3_TAMIL},{jule::Str("Tangsa", 6),_20548cac3_TANGSA},{jule::Str("Tangut", 6),_20548cac3_TANGUT},{jule::Str("Telugu", 6),_20548cac3_TELUGU},{jule::Str("Thaana", 6),_20548cac3_THAANA},{jule::Str("Thai", 4),_20548cac3_THAI},{jule::Str("Tibetan", 7),_20548cac3_TIBETAN},{jule::Str("Tifinagh", 8),_20548cac3_TIFINAGH},{jule::Str("Tirhuta", 7),_20548cac3_TIRHUTA},{jule::Str("Toto", 4),_20548cac3_TOTO},{jule::Str("Ugaritic", 8),_20548cac3_UGARITIC},{jule::Str("Vai", 3),_20548cac3_VAI},{jule::Str("Vithkuqi", 8),_20548cac3_VITHKUQI},{jule::Str("Wancho", 6),_20548cac3_WANCHO},{jule::Str("Warang_Citi", 11),_20548cac3_WARANG_CITI},{jule::Str("Yezidi", 6),_20548cac3_YEZIDI},{jule::Str("Yi", 2),_20548cac3_YI},{jule::Str("Zanabazar_Square", 16),_20548cac3_ZANABAZAR_SQUARE}});
static jule::Ref<_20548c650_RangeTable> _20548cac3__ASCII_HEX_DIGIT = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(48LLU,57LLU,1LLU),_20548c650_Range16(65LLU,70LLU,1LLU),_20548c650_Range16(97LLU,102LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),3LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__BIDI_CONTROL = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(1564LLU,8206LLU,6642LLU),_20548c650_Range16(8207LLU,8234LLU,27LLU),_20548c650_Range16(8235LLU,8238LLU,1LLU),_20548c650_Range16(8294LLU,8297LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__DASH = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(45LLU,1418LLU,1373LLU),_20548c650_Range16(1470LLU,5120LLU,3650LLU),_20548c650_Range16(6150LLU,8208LLU,2058LLU),_20548c650_Range16(8209LLU,8213LLU,1LLU),_20548c650_Range16(8275LLU,8315LLU,40LLU),_20548c650_Range16(8331LLU,8722LLU,391LLU),_20548c650_Range16(11799LLU,11802LLU,3LLU),_20548c650_Range16(11834LLU,11835LLU,1LLU),_20548c650_Range16(11840LLU,11869LLU,29LLU),_20548c650_Range16(12316LLU,12336LLU,20LLU),_20548c650_Range16(12448LLU,65073LLU,52625LLU),_20548c650_Range16(65074LLU,65112LLU,38LLU),_20548c650_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__DEPRECATED = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(329LLU,1651LLU,1322LLU),_20548c650_Range16(3959LLU,3961LLU,2LLU),_20548c650_Range16(6051LLU,6052LLU,1LLU),_20548c650_Range16(8298LLU,8303LLU,1LLU),_20548c650_Range16(9001LLU,9002LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(917505LLU,917505LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__DIACRITIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(94LLU,96LLU,2LLU),_20548c650_Range16(168LLU,175LLU,7LLU),_20548c650_Range16(180LLU,183LLU,3LLU),_20548c650_Range16(184LLU,688LLU,504LLU),_20548c650_Range16(689LLU,846LLU,1LLU),_20548c650_Range16(848LLU,855LLU,1LLU),_20548c650_Range16(861LLU,866LLU,1LLU),_20548c650_Range16(884LLU,885LLU,1LLU),_20548c650_Range16(890LLU,900LLU,10LLU),_20548c650_Range16(901LLU,1155LLU,254LLU),_20548c650_Range16(1156LLU,1159LLU,1LLU),_20548c650_Range16(1369LLU,1425LLU,56LLU),_20548c650_Range16(1426LLU,1441LLU,1LLU),_20548c650_Range16(1443LLU,1469LLU,1LLU),_20548c650_Range16(1471LLU,1473LLU,2LLU),_20548c650_Range16(1474LLU,1476LLU,2LLU),_20548c650_Range16(1611LLU,1618LLU,1LLU),_20548c650_Range16(1623LLU,1624LLU,1LLU),_20548c650_Range16(1759LLU,1760LLU,1LLU),_20548c650_Range16(1765LLU,1766LLU,1LLU),_20548c650_Range16(1770LLU,1772LLU,1LLU),_20548c650_Range16(1840LLU,1866LLU,1LLU),_20548c650_Range16(1958LLU,1968LLU,1LLU),_20548c650_Range16(2027LLU,2037LLU,1LLU),_20548c650_Range16(2072LLU,2073LLU,1LLU),_20548c650_Range16(2200LLU,2207LLU,1LLU),_20548c650_Range16(2249LLU,2258LLU,1LLU),_20548c650_Range16(2275LLU,2302LLU,1LLU),_20548c650_Range16(2364LLU,2381LLU,17LLU),_20548c650_Range16(2385LLU,2388LLU,1LLU),_20548c650_Range16(2417LLU,2492LLU,75LLU),_20548c650_Range16(2509LLU,2620LLU,111LLU),_20548c650_Range16(2637LLU,2748LLU,111LLU),_20548c650_Range16(2765LLU,2813LLU,48LLU),_20548c650_Range16(2814LLU,2815LLU,1LLU),_20548c650_Range16(2876LLU,2893LLU,17LLU),_20548c650_Range16(2901LLU,3021LLU,120LLU),_20548c650_Range16(3132LLU,3149LLU,17LLU),_20548c650_Range16(3260LLU,3277LLU,17LLU),_20548c650_Range16(3387LLU,3388LLU,1LLU),_20548c650_Range16(3405LLU,3655LLU,125LLU),_20548c650_Range16(3656LLU,3660LLU,1LLU),_20548c650_Range16(3662LLU,3770LLU,108LLU),_20548c650_Range16(3784LLU,3788LLU,1LLU),_20548c650_Range16(3864LLU,3865LLU,1LLU),_20548c650_Range16(3893LLU,3897LLU,2LLU),_20548c650_Range16(3902LLU,3903LLU,1LLU),_20548c650_Range16(3970LLU,3972LLU,1LLU),_20548c650_Range16(3974LLU,3975LLU,1LLU),_20548c650_Range16(4038LLU,4151LLU,113LLU),_20548c650_Range16(4153LLU,4154LLU,1LLU),_20548c650_Range16(4195LLU,4196LLU,1LLU),_20548c650_Range16(4201LLU,4205LLU,1LLU),_20548c650_Range16(4231LLU,4237LLU,1LLU),_20548c650_Range16(4239LLU,4250LLU,11LLU),_20548c650_Range16(4251LLU,4957LLU,706LLU),_20548c650_Range16(4958LLU,4959LLU,1LLU),_20548c650_Range16(5908LLU,5909LLU,1LLU),_20548c650_Range16(6089LLU,6099LLU,1LLU),_20548c650_Range16(6109LLU,6457LLU,348LLU),_20548c650_Range16(6458LLU,6459LLU,1LLU),_20548c650_Range16(6773LLU,6780LLU,1LLU),_20548c650_Range16(6783LLU,6832LLU,49LLU),_20548c650_Range16(6833LLU,6846LLU,1LLU),_20548c650_Range16(6849LLU,6859LLU,1LLU),_20548c650_Range16(6964LLU,6980LLU,16LLU),_20548c650_Range16(7019LLU,7027LLU,1LLU),_20548c650_Range16(7082LLU,7083LLU,1LLU),_20548c650_Range16(7222LLU,7223LLU,1LLU),_20548c650_Range16(7288LLU,7293LLU,1LLU),_20548c650_Range16(7376LLU,7400LLU,1LLU),_20548c650_Range16(7405LLU,7412LLU,7LLU),_20548c650_Range16(7415LLU,7417LLU,1LLU),_20548c650_Range16(7468LLU,7530LLU,1LLU),_20548c650_Range16(7620LLU,7631LLU,1LLU),_20548c650_Range16(7669LLU,7679LLU,1LLU),_20548c650_Range16(8125LLU,8127LLU,2LLU),_20548c650_Range16(8128LLU,8129LLU,1LLU),_20548c650_Range16(8141LLU,8143LLU,1LLU),_20548c650_Range16(8157LLU,8159LLU,1LLU),_20548c650_Range16(8173LLU,8175LLU,1LLU),_20548c650_Range16(8189LLU,8190LLU,1LLU),_20548c650_Range16(11503LLU,11505LLU,1LLU),_20548c650_Range16(11823LLU,12330LLU,507LLU),_20548c650_Range16(12331LLU,12335LLU,1LLU),_20548c650_Range16(12441LLU,12444LLU,1LLU),_20548c650_Range16(12540LLU,42607LLU,30067LLU),_20548c650_Range16(42620LLU,42621LLU,1LLU),_20548c650_Range16(42623LLU,42652LLU,29LLU),_20548c650_Range16(42653LLU,42736LLU,83LLU),_20548c650_Range16(42737LLU,42752LLU,15LLU),_20548c650_Range16(42753LLU,42785LLU,1LLU),_20548c650_Range16(42888LLU,42890LLU,1LLU),_20548c650_Range16(43000LLU,43001LLU,1LLU),_20548c650_Range16(43204LLU,43232LLU,28LLU),_20548c650_Range16(43233LLU,43249LLU,1LLU),_20548c650_Range16(43307LLU,43310LLU,1LLU),_20548c650_Range16(43347LLU,43443LLU,96LLU),_20548c650_Range16(43456LLU,43493LLU,37LLU),_20548c650_Range16(43643LLU,43645LLU,1LLU),_20548c650_Range16(43711LLU,43714LLU,1LLU),_20548c650_Range16(43766LLU,43867LLU,101LLU),_20548c650_Range16(43868LLU,43871LLU,1LLU),_20548c650_Range16(43881LLU,43883LLU,1LLU),_20548c650_Range16(44012LLU,44013LLU,1LLU),_20548c650_Range16(64286LLU,65056LLU,770LLU),_20548c650_Range16(65057LLU,65071LLU,1LLU),_20548c650_Range16(65342LLU,65344LLU,2LLU),_20548c650_Range16(65392LLU,65438LLU,46LLU),_20548c650_Range16(65439LLU,65507LLU,68LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66272LLU,67456LLU,1184LLU),_20548c650_Range32(67457LLU,67461LLU,1LLU),_20548c650_Range32(67463LLU,67504LLU,1LLU),_20548c650_Range32(67506LLU,67514LLU,1LLU),_20548c650_Range32(68325LLU,68326LLU,1LLU),_20548c650_Range32(68898LLU,68903LLU,1LLU),_20548c650_Range32(69373LLU,69375LLU,1LLU),_20548c650_Range32(69446LLU,69456LLU,1LLU),_20548c650_Range32(69506LLU,69509LLU,1LLU),_20548c650_Range32(69702LLU,69744LLU,42LLU),_20548c650_Range32(69817LLU,69818LLU,1LLU),_20548c650_Range32(69939LLU,69940LLU,1LLU),_20548c650_Range32(70003LLU,70080LLU,77LLU),_20548c650_Range32(70090LLU,70092LLU,1LLU),_20548c650_Range32(70197LLU,70198LLU,1LLU),_20548c650_Range32(70377LLU,70378LLU,1LLU),_20548c650_Range32(70460LLU,70477LLU,17LLU),_20548c650_Range32(70502LLU,70508LLU,1LLU),_20548c650_Range32(70512LLU,70516LLU,1LLU),_20548c650_Range32(70722LLU,70726LLU,4LLU),_20548c650_Range32(70850LLU,70851LLU,1LLU),_20548c650_Range32(71103LLU,71104LLU,1LLU),_20548c650_Range32(71231LLU,71350LLU,119LLU),_20548c650_Range32(71351LLU,71467LLU,116LLU),_20548c650_Range32(71737LLU,71738LLU,1LLU),_20548c650_Range32(71997LLU,71998LLU,1LLU),_20548c650_Range32(72003LLU,72160LLU,157LLU),_20548c650_Range32(72244LLU,72263LLU,19LLU),_20548c650_Range32(72345LLU,72767LLU,422LLU),_20548c650_Range32(73026LLU,73028LLU,2LLU),_20548c650_Range32(73029LLU,73111LLU,82LLU),_20548c650_Range32(78919LLU,78933LLU,1LLU),_20548c650_Range32(92912LLU,92916LLU,1LLU),_20548c650_Range32(92976LLU,92982LLU,1LLU),_20548c650_Range32(94095LLU,94111LLU,1LLU),_20548c650_Range32(94192LLU,94193LLU,1LLU),_20548c650_Range32(110576LLU,110579LLU,1LLU),_20548c650_Range32(110581LLU,110587LLU,1LLU),_20548c650_Range32(110589LLU,110590LLU,1LLU),_20548c650_Range32(118528LLU,118573LLU,1LLU),_20548c650_Range32(118576LLU,118598LLU,1LLU),_20548c650_Range32(119143LLU,119145LLU,1LLU),_20548c650_Range32(119149LLU,119154LLU,1LLU),_20548c650_Range32(119163LLU,119170LLU,1LLU),_20548c650_Range32(119173LLU,119179LLU,1LLU),_20548c650_Range32(119210LLU,119213LLU,1LLU),_20548c650_Range32(122928LLU,122989LLU,1LLU),_20548c650_Range32(123184LLU,123190LLU,1LLU),_20548c650_Range32(123566LLU,123628LLU,62LLU),_20548c650_Range32(123629LLU,123631LLU,1LLU),_20548c650_Range32(125136LLU,125142LLU,1LLU),_20548c650_Range32(125252LLU,125254LLU,1LLU),_20548c650_Range32(125256LLU,125258LLU,1LLU)}),3LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__EXTENDER = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(183LLU,720LLU,537LLU),_20548c650_Range16(721LLU,1600LLU,879LLU),_20548c650_Range16(2042LLU,2901LLU,859LLU),_20548c650_Range16(3654LLU,3782LLU,128LLU),_20548c650_Range16(6154LLU,6211LLU,57LLU),_20548c650_Range16(6823LLU,7222LLU,399LLU),_20548c650_Range16(7291LLU,12293LLU,5002LLU),_20548c650_Range16(12337LLU,12341LLU,1LLU),_20548c650_Range16(12445LLU,12446LLU,1LLU),_20548c650_Range16(12540LLU,12542LLU,1LLU),_20548c650_Range16(40981LLU,42508LLU,1527LLU),_20548c650_Range16(43471LLU,43494LLU,23LLU),_20548c650_Range16(43632LLU,43741LLU,109LLU),_20548c650_Range16(43763LLU,43764LLU,1LLU),_20548c650_Range16(65392LLU,65392LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(67457LLU,67458LLU,1LLU),_20548c650_Range32(70493LLU,71110LLU,617LLU),_20548c650_Range32(71111LLU,71112LLU,1LLU),_20548c650_Range32(72344LLU,92994LLU,20650LLU),_20548c650_Range32(92995LLU,94176LLU,1181LLU),_20548c650_Range32(94177LLU,94179LLU,2LLU),_20548c650_Range32(123196LLU,123197LLU,1LLU),_20548c650_Range32(125252LLU,125254LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__HEX_DIGIT = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(48LLU,57LLU,1LLU),_20548c650_Range16(65LLU,70LLU,1LLU),_20548c650_Range16(97LLU,102LLU,1LLU),_20548c650_Range16(65296LLU,65305LLU,1LLU),_20548c650_Range16(65313LLU,65318LLU,1LLU),_20548c650_Range16(65345LLU,65350LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),3LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__HYPHEN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(45LLU,173LLU,128LLU),_20548c650_Range16(1418LLU,6150LLU,4732LLU),_20548c650_Range16(8208LLU,8209LLU,1LLU),_20548c650_Range16(11799LLU,12539LLU,740LLU),_20548c650_Range16(65123LLU,65293LLU,170LLU),_20548c650_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),1LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__IDS_BINARY_OPERATOR = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(12272LLU,12273LLU,1LLU),_20548c650_Range16(12276LLU,12283LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__IDS_TRINARY_OPERATOR = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(12274LLU,12275LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__IDEOGRAPHIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(12294LLU,12295LLU,1LLU),_20548c650_Range16(12321LLU,12329LLU,1LLU),_20548c650_Range16(12344LLU,12346LLU,1LLU),_20548c650_Range16(13312LLU,19903LLU,1LLU),_20548c650_Range16(19968LLU,40959LLU,1LLU),_20548c650_Range16(63744LLU,64109LLU,1LLU),_20548c650_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(94180LLU,94208LLU,28LLU),_20548c650_Range32(94209LLU,100343LLU,1LLU),_20548c650_Range32(100352LLU,101589LLU,1LLU),_20548c650_Range32(101632LLU,101640LLU,1LLU),_20548c650_Range32(110960LLU,111355LLU,1LLU),_20548c650_Range32(131072LLU,173791LLU,1LLU),_20548c650_Range32(173824LLU,177977LLU,1LLU),_20548c650_Range32(177984LLU,178205LLU,1LLU),_20548c650_Range32(178208LLU,183969LLU,1LLU),_20548c650_Range32(183984LLU,191456LLU,1LLU),_20548c650_Range32(194560LLU,195101LLU,1LLU),_20548c650_Range32(196608LLU,201546LLU,1LLU),_20548c650_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__JOIN_CONTROL = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(8204LLU,8205LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__LOGICAL_ORDER_EXCEPTION = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(3648LLU,3652LLU,1LLU),_20548c650_Range16(3776LLU,3780LLU,1LLU),_20548c650_Range16(6581LLU,6583LLU,1LLU),_20548c650_Range16(6586LLU,43701LLU,37115LLU),_20548c650_Range16(43702LLU,43705LLU,3LLU),_20548c650_Range16(43707LLU,43708LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__NONCHARACTER_CODE_POINT = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(64976LLU,65007LLU,1LLU),_20548c650_Range16(65534LLU,65535LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(131070LLU,131071LLU,1LLU),_20548c650_Range32(196606LLU,196607LLU,1LLU),_20548c650_Range32(262142LLU,262143LLU,1LLU),_20548c650_Range32(327678LLU,327679LLU,1LLU),_20548c650_Range32(393214LLU,393215LLU,1LLU),_20548c650_Range32(458750LLU,458751LLU,1LLU),_20548c650_Range32(524286LLU,524287LLU,1LLU),_20548c650_Range32(589822LLU,589823LLU,1LLU),_20548c650_Range32(655358LLU,655359LLU,1LLU),_20548c650_Range32(720894LLU,720895LLU,1LLU),_20548c650_Range32(786430LLU,786431LLU,1LLU),_20548c650_Range32(851966LLU,851967LLU,1LLU),_20548c650_Range32(917502LLU,917503LLU,1LLU),_20548c650_Range32(983038LLU,983039LLU,1LLU),_20548c650_Range32(1048574LLU,1048575LLU,1LLU),_20548c650_Range32(1114110LLU,1114111LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OTHER_ALPHABETIC = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(837LLU,1456LLU,619LLU),_20548c650_Range16(1457LLU,1469LLU,1LLU),_20548c650_Range16(1471LLU,1473LLU,2LLU),_20548c650_Range16(1474LLU,1476LLU,2LLU),_20548c650_Range16(1477LLU,1479LLU,2LLU),_20548c650_Range16(1552LLU,1562LLU,1LLU),_20548c650_Range16(1611LLU,1623LLU,1LLU),_20548c650_Range16(1625LLU,1631LLU,1LLU),_20548c650_Range16(1648LLU,1750LLU,102LLU),_20548c650_Range16(1751LLU,1756LLU,1LLU),_20548c650_Range16(1761LLU,1764LLU,1LLU),_20548c650_Range16(1767LLU,1768LLU,1LLU),_20548c650_Range16(1773LLU,1809LLU,36LLU),_20548c650_Range16(1840LLU,1855LLU,1LLU),_20548c650_Range16(1958LLU,1968LLU,1LLU),_20548c650_Range16(2070LLU,2071LLU,1LLU),_20548c650_Range16(2075LLU,2083LLU,1LLU),_20548c650_Range16(2085LLU,2087LLU,1LLU),_20548c650_Range16(2089LLU,2092LLU,1LLU),_20548c650_Range16(2260LLU,2271LLU,1LLU),_20548c650_Range16(2275LLU,2281LLU,1LLU),_20548c650_Range16(2288LLU,2307LLU,1LLU),_20548c650_Range16(2362LLU,2363LLU,1LLU),_20548c650_Range16(2366LLU,2380LLU,1LLU),_20548c650_Range16(2382LLU,2383LLU,1LLU),_20548c650_Range16(2389LLU,2391LLU,1LLU),_20548c650_Range16(2402LLU,2403LLU,1LLU),_20548c650_Range16(2433LLU,2435LLU,1LLU),_20548c650_Range16(2494LLU,2500LLU,1LLU),_20548c650_Range16(2503LLU,2504LLU,1LLU),_20548c650_Range16(2507LLU,2508LLU,1LLU),_20548c650_Range16(2519LLU,2530LLU,11LLU),_20548c650_Range16(2531LLU,2561LLU,30LLU),_20548c650_Range16(2562LLU,2563LLU,1LLU),_20548c650_Range16(2622LLU,2626LLU,1LLU),_20548c650_Range16(2631LLU,2632LLU,1LLU),_20548c650_Range16(2635LLU,2636LLU,1LLU),_20548c650_Range16(2641LLU,2672LLU,31LLU),_20548c650_Range16(2673LLU,2677LLU,4LLU),_20548c650_Range16(2689LLU,2691LLU,1LLU),_20548c650_Range16(2750LLU,2757LLU,1LLU),_20548c650_Range16(2759LLU,2761LLU,1LLU),_20548c650_Range16(2763LLU,2764LLU,1LLU),_20548c650_Range16(2786LLU,2787LLU,1LLU),_20548c650_Range16(2810LLU,2812LLU,1LLU),_20548c650_Range16(2817LLU,2819LLU,1LLU),_20548c650_Range16(2878LLU,2884LLU,1LLU),_20548c650_Range16(2887LLU,2888LLU,1LLU),_20548c650_Range16(2891LLU,2892LLU,1LLU),_20548c650_Range16(2902LLU,2903LLU,1LLU),_20548c650_Range16(2914LLU,2915LLU,1LLU),_20548c650_Range16(2946LLU,3006LLU,60LLU),_20548c650_Range16(3007LLU,3010LLU,1LLU),_20548c650_Range16(3014LLU,3016LLU,1LLU),_20548c650_Range16(3018LLU,3020LLU,1LLU),_20548c650_Range16(3031LLU,3072LLU,41LLU),_20548c650_Range16(3073LLU,3076LLU,1LLU),_20548c650_Range16(3134LLU,3140LLU,1LLU),_20548c650_Range16(3142LLU,3144LLU,1LLU),_20548c650_Range16(3146LLU,3148LLU,1LLU),_20548c650_Range16(3157LLU,3158LLU,1LLU),_20548c650_Range16(3170LLU,3171LLU,1LLU),_20548c650_Range16(3201LLU,3203LLU,1LLU),_20548c650_Range16(3262LLU,3268LLU,1LLU),_20548c650_Range16(3270LLU,3272LLU,1LLU),_20548c650_Range16(3274LLU,3276LLU,1LLU),_20548c650_Range16(3285LLU,3286LLU,1LLU),_20548c650_Range16(3298LLU,3299LLU,1LLU),_20548c650_Range16(3315LLU,3328LLU,13LLU),_20548c650_Range16(3329LLU,3331LLU,1LLU),_20548c650_Range16(3390LLU,3396LLU,1LLU),_20548c650_Range16(3398LLU,3400LLU,1LLU),_20548c650_Range16(3402LLU,3404LLU,1LLU),_20548c650_Range16(3415LLU,3426LLU,11LLU),_20548c650_Range16(3427LLU,3457LLU,30LLU),_20548c650_Range16(3458LLU,3459LLU,1LLU),_20548c650_Range16(3535LLU,3540LLU,1LLU),_20548c650_Range16(3542LLU,3544LLU,2LLU),_20548c650_Range16(3545LLU,3551LLU,1LLU),_20548c650_Range16(3570LLU,3571LLU,1LLU),_20548c650_Range16(3633LLU,3636LLU,3LLU),_20548c650_Range16(3637LLU,3642LLU,1LLU),_20548c650_Range16(3661LLU,3761LLU,100LLU),_20548c650_Range16(3764LLU,3769LLU,1LLU),_20548c650_Range16(3771LLU,3772LLU,1LLU),_20548c650_Range16(3789LLU,3953LLU,164LLU),_20548c650_Range16(3954LLU,3971LLU,1LLU),_20548c650_Range16(3981LLU,3991LLU,1LLU),_20548c650_Range16(3993LLU,4028LLU,1LLU),_20548c650_Range16(4139LLU,4150LLU,1LLU),_20548c650_Range16(4152LLU,4155LLU,3LLU),_20548c650_Range16(4156LLU,4158LLU,1LLU),_20548c650_Range16(4182LLU,4185LLU,1LLU),_20548c650_Range16(4190LLU,4192LLU,1LLU),_20548c650_Range16(4194LLU,4196LLU,1LLU),_20548c650_Range16(4199LLU,4205LLU,1LLU),_20548c650_Range16(4209LLU,4212LLU,1LLU),_20548c650_Range16(4226LLU,4237LLU,1LLU),_20548c650_Range16(4239LLU,4250LLU,11LLU),_20548c650_Range16(4251LLU,4253LLU,1LLU),_20548c650_Range16(5906LLU,5907LLU,1LLU),_20548c650_Range16(5938LLU,5939LLU,1LLU),_20548c650_Range16(5970LLU,5971LLU,1LLU),_20548c650_Range16(6002LLU,6003LLU,1LLU),_20548c650_Range16(6070LLU,6088LLU,1LLU),_20548c650_Range16(6277LLU,6278LLU,1LLU),_20548c650_Range16(6313LLU,6432LLU,119LLU),_20548c650_Range16(6433LLU,6443LLU,1LLU),_20548c650_Range16(6448LLU,6456LLU,1LLU),_20548c650_Range16(6679LLU,6683LLU,1LLU),_20548c650_Range16(6741LLU,6750LLU,1LLU),_20548c650_Range16(6753LLU,6772LLU,1LLU),_20548c650_Range16(6847LLU,6848LLU,1LLU),_20548c650_Range16(6860LLU,6862LLU,1LLU),_20548c650_Range16(6912LLU,6916LLU,1LLU),_20548c650_Range16(6965LLU,6979LLU,1LLU),_20548c650_Range16(7040LLU,7042LLU,1LLU),_20548c650_Range16(7073LLU,7081LLU,1LLU),_20548c650_Range16(7084LLU,7085LLU,1LLU),_20548c650_Range16(7143LLU,7153LLU,1LLU),_20548c650_Range16(7204LLU,7222LLU,1LLU),_20548c650_Range16(7655LLU,7668LLU,1LLU),_20548c650_Range16(9398LLU,9449LLU,1LLU),_20548c650_Range16(11744LLU,11775LLU,1LLU),_20548c650_Range16(42612LLU,42619LLU,1LLU),_20548c650_Range16(42654LLU,42655LLU,1LLU),_20548c650_Range16(43010LLU,43019LLU,9LLU),_20548c650_Range16(43043LLU,43047LLU,1LLU),_20548c650_Range16(43136LLU,43137LLU,1LLU),_20548c650_Range16(43188LLU,43203LLU,1LLU),_20548c650_Range16(43205LLU,43263LLU,58LLU),_20548c650_Range16(43302LLU,43306LLU,1LLU),_20548c650_Range16(43335LLU,43346LLU,1LLU),_20548c650_Range16(43392LLU,43395LLU,1LLU),_20548c650_Range16(43444LLU,43455LLU,1LLU),_20548c650_Range16(43493LLU,43561LLU,68LLU),_20548c650_Range16(43562LLU,43574LLU,1LLU),_20548c650_Range16(43587LLU,43596LLU,9LLU),_20548c650_Range16(43597LLU,43643LLU,46LLU),_20548c650_Range16(43644LLU,43645LLU,1LLU),_20548c650_Range16(43696LLU,43698LLU,2LLU),_20548c650_Range16(43699LLU,43700LLU,1LLU),_20548c650_Range16(43703LLU,43704LLU,1LLU),_20548c650_Range16(43710LLU,43755LLU,45LLU),_20548c650_Range16(43756LLU,43759LLU,1LLU),_20548c650_Range16(43765LLU,44003LLU,238LLU),_20548c650_Range16(44004LLU,44010LLU,1LLU),_20548c650_Range16(64286LLU,64286LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66422LLU,66426LLU,1LLU),_20548c650_Range32(68097LLU,68099LLU,1LLU),_20548c650_Range32(68101LLU,68102LLU,1LLU),_20548c650_Range32(68108LLU,68111LLU,1LLU),_20548c650_Range32(68900LLU,68903LLU,1LLU),_20548c650_Range32(69291LLU,69292LLU,1LLU),_20548c650_Range32(69632LLU,69634LLU,1LLU),_20548c650_Range32(69688LLU,69701LLU,1LLU),_20548c650_Range32(69747LLU,69748LLU,1LLU),_20548c650_Range32(69760LLU,69762LLU,1LLU),_20548c650_Range32(69808LLU,69816LLU,1LLU),_20548c650_Range32(69826LLU,69888LLU,62LLU),_20548c650_Range32(69889LLU,69890LLU,1LLU),_20548c650_Range32(69927LLU,69938LLU,1LLU),_20548c650_Range32(69957LLU,69958LLU,1LLU),_20548c650_Range32(70016LLU,70018LLU,1LLU),_20548c650_Range32(70067LLU,70079LLU,1LLU),_20548c650_Range32(70094LLU,70095LLU,1LLU),_20548c650_Range32(70188LLU,70196LLU,1LLU),_20548c650_Range32(70199LLU,70206LLU,7LLU),_20548c650_Range32(70209LLU,70367LLU,158LLU),_20548c650_Range32(70368LLU,70376LLU,1LLU),_20548c650_Range32(70400LLU,70403LLU,1LLU),_20548c650_Range32(70462LLU,70468LLU,1LLU),_20548c650_Range32(70471LLU,70472LLU,1LLU),_20548c650_Range32(70475LLU,70476LLU,1LLU),_20548c650_Range32(70487LLU,70498LLU,11LLU),_20548c650_Range32(70499LLU,70709LLU,210LLU),_20548c650_Range32(70710LLU,70721LLU,1LLU),_20548c650_Range32(70723LLU,70725LLU,1LLU),_20548c650_Range32(70832LLU,70849LLU,1LLU),_20548c650_Range32(71087LLU,71093LLU,1LLU),_20548c650_Range32(71096LLU,71102LLU,1LLU),_20548c650_Range32(71132LLU,71133LLU,1LLU),_20548c650_Range32(71216LLU,71230LLU,1LLU),_20548c650_Range32(71232LLU,71339LLU,107LLU),_20548c650_Range32(71340LLU,71349LLU,1LLU),_20548c650_Range32(71453LLU,71466LLU,1LLU),_20548c650_Range32(71724LLU,71736LLU,1LLU),_20548c650_Range32(71984LLU,71989LLU,1LLU),_20548c650_Range32(71991LLU,71992LLU,1LLU),_20548c650_Range32(71995LLU,71996LLU,1LLU),_20548c650_Range32(72000LLU,72002LLU,2LLU),_20548c650_Range32(72145LLU,72151LLU,1LLU),_20548c650_Range32(72154LLU,72159LLU,1LLU),_20548c650_Range32(72164LLU,72193LLU,29LLU),_20548c650_Range32(72194LLU,72202LLU,1LLU),_20548c650_Range32(72245LLU,72249LLU,1LLU),_20548c650_Range32(72251LLU,72254LLU,1LLU),_20548c650_Range32(72273LLU,72283LLU,1LLU),_20548c650_Range32(72330LLU,72343LLU,1LLU),_20548c650_Range32(72751LLU,72758LLU,1LLU),_20548c650_Range32(72760LLU,72766LLU,1LLU),_20548c650_Range32(72850LLU,72871LLU,1LLU),_20548c650_Range32(72873LLU,72886LLU,1LLU),_20548c650_Range32(73009LLU,73014LLU,1LLU),_20548c650_Range32(73018LLU,73020LLU,2LLU),_20548c650_Range32(73021LLU,73023LLU,2LLU),_20548c650_Range32(73024LLU,73025LLU,1LLU),_20548c650_Range32(73027LLU,73031LLU,4LLU),_20548c650_Range32(73098LLU,73102LLU,1LLU),_20548c650_Range32(73104LLU,73105LLU,1LLU),_20548c650_Range32(73107LLU,73110LLU,1LLU),_20548c650_Range32(73459LLU,73462LLU,1LLU),_20548c650_Range32(73472LLU,73473LLU,1LLU),_20548c650_Range32(73475LLU,73524LLU,49LLU),_20548c650_Range32(73525LLU,73530LLU,1LLU),_20548c650_Range32(73534LLU,73536LLU,1LLU),_20548c650_Range32(94031LLU,94033LLU,2LLU),_20548c650_Range32(94034LLU,94087LLU,1LLU),_20548c650_Range32(94095LLU,94098LLU,1LLU),_20548c650_Range32(94192LLU,94193LLU,1LLU),_20548c650_Range32(113822LLU,122880LLU,9058LLU),_20548c650_Range32(122881LLU,122886LLU,1LLU),_20548c650_Range32(122888LLU,122904LLU,1LLU),_20548c650_Range32(122907LLU,122913LLU,1LLU),_20548c650_Range32(122915LLU,122916LLU,1LLU),_20548c650_Range32(122918LLU,122922LLU,1LLU),_20548c650_Range32(123023LLU,125255LLU,2232LLU),_20548c650_Range32(127280LLU,127305LLU,1LLU),_20548c650_Range32(127312LLU,127337LLU,1LLU),_20548c650_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OTHER_DEFAULT_IGNORABLE_CODE_POINT = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(847LLU,4447LLU,3600LLU),_20548c650_Range16(4448LLU,6068LLU,1620LLU),_20548c650_Range16(6069LLU,8293LLU,2224LLU),_20548c650_Range16(12644LLU,65440LLU,52796LLU),_20548c650_Range16(65520LLU,65528LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(917504LLU,917506LLU,2LLU),_20548c650_Range32(917507LLU,917535LLU,1LLU),_20548c650_Range32(917632LLU,917759LLU,1LLU),_20548c650_Range32(918000LLU,921599LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OTHER_GRAPHEME_EXTEND = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(2494LLU,2519LLU,25LLU),_20548c650_Range16(2878LLU,2903LLU,25LLU),_20548c650_Range16(3006LLU,3031LLU,25LLU),_20548c650_Range16(3266LLU,3285LLU,19LLU),_20548c650_Range16(3286LLU,3390LLU,104LLU),_20548c650_Range16(3415LLU,3535LLU,120LLU),_20548c650_Range16(3551LLU,6965LLU,3414LLU),_20548c650_Range16(8204LLU,12334LLU,4130LLU),_20548c650_Range16(12335LLU,65438LLU,53103LLU),_20548c650_Range16(65439LLU,65439LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(70462LLU,70487LLU,25LLU),_20548c650_Range32(70832LLU,70845LLU,13LLU),_20548c650_Range32(71087LLU,71984LLU,897LLU),_20548c650_Range32(119141LLU,119150LLU,9LLU),_20548c650_Range32(119151LLU,119154LLU,1LLU),_20548c650_Range32(917536LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OTHER_ID_CONTINUE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(183LLU,903LLU,720LLU),_20548c650_Range16(4969LLU,4977LLU,1LLU),_20548c650_Range16(6618LLU,6618LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OTHER_ID_START = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(6277LLU,6278LLU,1LLU),_20548c650_Range16(8472LLU,8494LLU,22LLU),_20548c650_Range16(12443LLU,12444LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OTHER_LOWERCASE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(170LLU,186LLU,16LLU),_20548c650_Range16(688LLU,696LLU,1LLU),_20548c650_Range16(704LLU,705LLU,1LLU),_20548c650_Range16(736LLU,740LLU,1LLU),_20548c650_Range16(837LLU,890LLU,53LLU),_20548c650_Range16(4348LLU,7468LLU,3120LLU),_20548c650_Range16(7469LLU,7530LLU,1LLU),_20548c650_Range16(7544LLU,7579LLU,35LLU),_20548c650_Range16(7580LLU,7615LLU,1LLU),_20548c650_Range16(8305LLU,8319LLU,14LLU),_20548c650_Range16(8336LLU,8348LLU,1LLU),_20548c650_Range16(8560LLU,8575LLU,1LLU),_20548c650_Range16(9424LLU,9449LLU,1LLU),_20548c650_Range16(11388LLU,11389LLU,1LLU),_20548c650_Range16(42652LLU,42653LLU,1LLU),_20548c650_Range16(42864LLU,42994LLU,130LLU),_20548c650_Range16(42995LLU,42996LLU,1LLU),_20548c650_Range16(43000LLU,43001LLU,1LLU),_20548c650_Range16(43868LLU,43871LLU,1LLU),_20548c650_Range16(43881LLU,43881LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(67456LLU,67459LLU,3LLU),_20548c650_Range32(67460LLU,67461LLU,1LLU),_20548c650_Range32(67463LLU,67504LLU,1LLU),_20548c650_Range32(67506LLU,67514LLU,1LLU),_20548c650_Range32(122928LLU,122989LLU,1LLU)}),1LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OTHER_MATH = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(94LLU,976LLU,882LLU),_20548c650_Range16(977LLU,978LLU,1LLU),_20548c650_Range16(981LLU,1008LLU,27LLU),_20548c650_Range16(1009LLU,1012LLU,3LLU),_20548c650_Range16(1013LLU,8214LLU,7201LLU),_20548c650_Range16(8242LLU,8244LLU,1LLU),_20548c650_Range16(8256LLU,8289LLU,33LLU),_20548c650_Range16(8290LLU,8292LLU,1LLU),_20548c650_Range16(8317LLU,8318LLU,1LLU),_20548c650_Range16(8333LLU,8334LLU,1LLU),_20548c650_Range16(8400LLU,8412LLU,1LLU),_20548c650_Range16(8417LLU,8421LLU,4LLU),_20548c650_Range16(8422LLU,8427LLU,5LLU),_20548c650_Range16(8428LLU,8431LLU,1LLU),_20548c650_Range16(8450LLU,8455LLU,5LLU),_20548c650_Range16(8458LLU,8467LLU,1LLU),_20548c650_Range16(8469LLU,8473LLU,4LLU),_20548c650_Range16(8474LLU,8477LLU,1LLU),_20548c650_Range16(8484LLU,8488LLU,4LLU),_20548c650_Range16(8489LLU,8492LLU,3LLU),_20548c650_Range16(8493LLU,8495LLU,2LLU),_20548c650_Range16(8496LLU,8497LLU,1LLU),_20548c650_Range16(8499LLU,8504LLU,1LLU),_20548c650_Range16(8508LLU,8511LLU,1LLU),_20548c650_Range16(8517LLU,8521LLU,1LLU),_20548c650_Range16(8597LLU,8601LLU,1LLU),_20548c650_Range16(8604LLU,8607LLU,1LLU),_20548c650_Range16(8609LLU,8610LLU,1LLU),_20548c650_Range16(8612LLU,8613LLU,1LLU),_20548c650_Range16(8615LLU,8617LLU,2LLU),_20548c650_Range16(8618LLU,8621LLU,1LLU),_20548c650_Range16(8624LLU,8625LLU,1LLU),_20548c650_Range16(8630LLU,8631LLU,1LLU),_20548c650_Range16(8636LLU,8653LLU,1LLU),_20548c650_Range16(8656LLU,8657LLU,1LLU),_20548c650_Range16(8659LLU,8661LLU,2LLU),_20548c650_Range16(8662LLU,8667LLU,1LLU),_20548c650_Range16(8669LLU,8676LLU,7LLU),_20548c650_Range16(8677LLU,8968LLU,291LLU),_20548c650_Range16(8969LLU,8971LLU,1LLU),_20548c650_Range16(9140LLU,9141LLU,1LLU),_20548c650_Range16(9143LLU,9168LLU,25LLU),_20548c650_Range16(9186LLU,9632LLU,446LLU),_20548c650_Range16(9633LLU,9646LLU,13LLU),_20548c650_Range16(9647LLU,9654LLU,1LLU),_20548c650_Range16(9660LLU,9664LLU,1LLU),_20548c650_Range16(9670LLU,9671LLU,1LLU),_20548c650_Range16(9674LLU,9675LLU,1LLU),_20548c650_Range16(9679LLU,9683LLU,1LLU),_20548c650_Range16(9698LLU,9700LLU,2LLU),_20548c650_Range16(9703LLU,9708LLU,1LLU),_20548c650_Range16(9733LLU,9734LLU,1LLU),_20548c650_Range16(9792LLU,9794LLU,2LLU),_20548c650_Range16(9824LLU,9827LLU,1LLU),_20548c650_Range16(9837LLU,9838LLU,1LLU),_20548c650_Range16(10181LLU,10182LLU,1LLU),_20548c650_Range16(10214LLU,10223LLU,1LLU),_20548c650_Range16(10627LLU,10648LLU,1LLU),_20548c650_Range16(10712LLU,10715LLU,1LLU),_20548c650_Range16(10748LLU,10749LLU,1LLU),_20548c650_Range16(65121LLU,65123LLU,2LLU),_20548c650_Range16(65128LLU,65340LLU,212LLU),_20548c650_Range16(65342LLU,65342LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(119808LLU,119892LLU,1LLU),_20548c650_Range32(119894LLU,119964LLU,1LLU),_20548c650_Range32(119966LLU,119967LLU,1LLU),_20548c650_Range32(119970LLU,119973LLU,3LLU),_20548c650_Range32(119974LLU,119977LLU,3LLU),_20548c650_Range32(119978LLU,119980LLU,1LLU),_20548c650_Range32(119982LLU,119993LLU,1LLU),_20548c650_Range32(119995LLU,119997LLU,2LLU),_20548c650_Range32(119998LLU,120003LLU,1LLU),_20548c650_Range32(120005LLU,120069LLU,1LLU),_20548c650_Range32(120071LLU,120074LLU,1LLU),_20548c650_Range32(120077LLU,120084LLU,1LLU),_20548c650_Range32(120086LLU,120092LLU,1LLU),_20548c650_Range32(120094LLU,120121LLU,1LLU),_20548c650_Range32(120123LLU,120126LLU,1LLU),_20548c650_Range32(120128LLU,120132LLU,1LLU),_20548c650_Range32(120134LLU,120138LLU,4LLU),_20548c650_Range32(120139LLU,120144LLU,1LLU),_20548c650_Range32(120146LLU,120485LLU,1LLU),_20548c650_Range32(120488LLU,120512LLU,1LLU),_20548c650_Range32(120514LLU,120538LLU,1LLU),_20548c650_Range32(120540LLU,120570LLU,1LLU),_20548c650_Range32(120572LLU,120596LLU,1LLU),_20548c650_Range32(120598LLU,120628LLU,1LLU),_20548c650_Range32(120630LLU,120654LLU,1LLU),_20548c650_Range32(120656LLU,120686LLU,1LLU),_20548c650_Range32(120688LLU,120712LLU,1LLU),_20548c650_Range32(120714LLU,120744LLU,1LLU),_20548c650_Range32(120746LLU,120770LLU,1LLU),_20548c650_Range32(120772LLU,120779LLU,1LLU),_20548c650_Range32(120782LLU,120831LLU,1LLU),_20548c650_Range32(126464LLU,126467LLU,1LLU),_20548c650_Range32(126469LLU,126495LLU,1LLU),_20548c650_Range32(126497LLU,126498LLU,1LLU),_20548c650_Range32(126500LLU,126503LLU,3LLU),_20548c650_Range32(126505LLU,126514LLU,1LLU),_20548c650_Range32(126516LLU,126519LLU,1LLU),_20548c650_Range32(126521LLU,126523LLU,2LLU),_20548c650_Range32(126530LLU,126535LLU,5LLU),_20548c650_Range32(126537LLU,126541LLU,2LLU),_20548c650_Range32(126542LLU,126543LLU,1LLU),_20548c650_Range32(126545LLU,126546LLU,1LLU),_20548c650_Range32(126548LLU,126551LLU,3LLU),_20548c650_Range32(126553LLU,126561LLU,2LLU),_20548c650_Range32(126562LLU,126564LLU,2LLU),_20548c650_Range32(126567LLU,126570LLU,1LLU),_20548c650_Range32(126572LLU,126578LLU,1LLU),_20548c650_Range32(126580LLU,126583LLU,1LLU),_20548c650_Range32(126585LLU,126588LLU,1LLU),_20548c650_Range32(126590LLU,126592LLU,2LLU),_20548c650_Range32(126593LLU,126601LLU,1LLU),_20548c650_Range32(126603LLU,126619LLU,1LLU),_20548c650_Range32(126625LLU,126627LLU,1LLU),_20548c650_Range32(126629LLU,126633LLU,1LLU),_20548c650_Range32(126635LLU,126651LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__OTHER_UPPERCASE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(8544LLU,8559LLU,1LLU),_20548c650_Range16(9398LLU,9423LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(127280LLU,127305LLU,1LLU),_20548c650_Range32(127312LLU,127337LLU,1LLU),_20548c650_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PATTERN_SYNTAX = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(33LLU,47LLU,1LLU),_20548c650_Range16(58LLU,64LLU,1LLU),_20548c650_Range16(91LLU,94LLU,1LLU),_20548c650_Range16(96LLU,123LLU,27LLU),_20548c650_Range16(124LLU,126LLU,1LLU),_20548c650_Range16(161LLU,167LLU,1LLU),_20548c650_Range16(169LLU,171LLU,2LLU),_20548c650_Range16(172LLU,176LLU,2LLU),_20548c650_Range16(177LLU,187LLU,5LLU),_20548c650_Range16(191LLU,215LLU,24LLU),_20548c650_Range16(247LLU,8208LLU,7961LLU),_20548c650_Range16(8209LLU,8231LLU,1LLU),_20548c650_Range16(8240LLU,8254LLU,1LLU),_20548c650_Range16(8257LLU,8275LLU,1LLU),_20548c650_Range16(8277LLU,8286LLU,1LLU),_20548c650_Range16(8592LLU,9311LLU,1LLU),_20548c650_Range16(9472LLU,10101LLU,1LLU),_20548c650_Range16(10132LLU,11263LLU,1LLU),_20548c650_Range16(11776LLU,11903LLU,1LLU),_20548c650_Range16(12289LLU,12291LLU,1LLU),_20548c650_Range16(12296LLU,12320LLU,1LLU),_20548c650_Range16(12336LLU,64830LLU,52494LLU),_20548c650_Range16(64831LLU,65093LLU,262LLU),_20548c650_Range16(65094LLU,65094LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),10LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PATTERN_WHITE_SPACE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(9LLU,13LLU,1LLU),_20548c650_Range16(32LLU,133LLU,101LLU),_20548c650_Range16(8206LLU,8207LLU,1LLU),_20548c650_Range16(8232LLU,8233LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),2LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__PREPENDED_CONCATENATION_MARK = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(1536LLU,1541LLU,1LLU),_20548c650_Range16(1757LLU,1807LLU,50LLU),_20548c650_Range16(2192LLU,2193LLU,1LLU),_20548c650_Range16(2274LLU,2274LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(69821LLU,69837LLU,16LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__QUOTATION_MARK = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(34LLU,39LLU,5LLU),_20548c650_Range16(171LLU,187LLU,16LLU),_20548c650_Range16(8216LLU,8223LLU,1LLU),_20548c650_Range16(8249LLU,8250LLU,1LLU),_20548c650_Range16(11842LLU,12300LLU,458LLU),_20548c650_Range16(12301LLU,12303LLU,1LLU),_20548c650_Range16(12317LLU,12319LLU,1LLU),_20548c650_Range16(65089LLU,65092LLU,1LLU),_20548c650_Range16(65282LLU,65287LLU,5LLU),_20548c650_Range16(65378LLU,65379LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),2LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__RADICAL = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(11904LLU,11929LLU,1LLU),_20548c650_Range16(11931LLU,12019LLU,1LLU),_20548c650_Range16(12032LLU,12245LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__REGIONAL_INDICATOR = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(127462LLU,127487LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SENTENCE_TERMINAL = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(33LLU,46LLU,13LLU),_20548c650_Range16(63LLU,1417LLU,1354LLU),_20548c650_Range16(1565LLU,1567LLU,1LLU),_20548c650_Range16(1748LLU,1792LLU,44LLU),_20548c650_Range16(1793LLU,1794LLU,1LLU),_20548c650_Range16(2041LLU,2103LLU,62LLU),_20548c650_Range16(2105LLU,2109LLU,4LLU),_20548c650_Range16(2110LLU,2404LLU,294LLU),_20548c650_Range16(2405LLU,4170LLU,1765LLU),_20548c650_Range16(4171LLU,4962LLU,791LLU),_20548c650_Range16(4967LLU,4968LLU,1LLU),_20548c650_Range16(5742LLU,5941LLU,199LLU),_20548c650_Range16(5942LLU,6147LLU,205LLU),_20548c650_Range16(6153LLU,6468LLU,315LLU),_20548c650_Range16(6469LLU,6824LLU,355LLU),_20548c650_Range16(6825LLU,6827LLU,1LLU),_20548c650_Range16(7002LLU,7003LLU,1LLU),_20548c650_Range16(7006LLU,7007LLU,1LLU),_20548c650_Range16(7037LLU,7038LLU,1LLU),_20548c650_Range16(7227LLU,7228LLU,1LLU),_20548c650_Range16(7294LLU,7295LLU,1LLU),_20548c650_Range16(8252LLU,8253LLU,1LLU),_20548c650_Range16(8263LLU,8265LLU,1LLU),_20548c650_Range16(11822LLU,11836LLU,14LLU),_20548c650_Range16(11859LLU,11860LLU,1LLU),_20548c650_Range16(12290LLU,42239LLU,29949LLU),_20548c650_Range16(42510LLU,42511LLU,1LLU),_20548c650_Range16(42739LLU,42743LLU,4LLU),_20548c650_Range16(43126LLU,43127LLU,1LLU),_20548c650_Range16(43214LLU,43215LLU,1LLU),_20548c650_Range16(43311LLU,43464LLU,153LLU),_20548c650_Range16(43465LLU,43613LLU,148LLU),_20548c650_Range16(43614LLU,43615LLU,1LLU),_20548c650_Range16(43760LLU,43761LLU,1LLU),_20548c650_Range16(44011LLU,65106LLU,21095LLU),_20548c650_Range16(65110LLU,65111LLU,1LLU),_20548c650_Range16(65281LLU,65294LLU,13LLU),_20548c650_Range16(65311LLU,65377LLU,66LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(68182LLU,68183LLU,1LLU),_20548c650_Range32(69461LLU,69465LLU,1LLU),_20548c650_Range32(69510LLU,69513LLU,1LLU),_20548c650_Range32(69703LLU,69704LLU,1LLU),_20548c650_Range32(69822LLU,69825LLU,1LLU),_20548c650_Range32(69953LLU,69955LLU,1LLU),_20548c650_Range32(70085LLU,70086LLU,1LLU),_20548c650_Range32(70093LLU,70110LLU,17LLU),_20548c650_Range32(70111LLU,70200LLU,89LLU),_20548c650_Range32(70201LLU,70203LLU,2LLU),_20548c650_Range32(70204LLU,70313LLU,109LLU),_20548c650_Range32(70731LLU,70732LLU,1LLU),_20548c650_Range32(71106LLU,71107LLU,1LLU),_20548c650_Range32(71113LLU,71127LLU,1LLU),_20548c650_Range32(71233LLU,71234LLU,1LLU),_20548c650_Range32(71484LLU,71486LLU,1LLU),_20548c650_Range32(72004LLU,72006LLU,2LLU),_20548c650_Range32(72258LLU,72259LLU,1LLU),_20548c650_Range32(72347LLU,72348LLU,1LLU),_20548c650_Range32(72769LLU,72770LLU,1LLU),_20548c650_Range32(73463LLU,73464LLU,1LLU),_20548c650_Range32(73539LLU,73540LLU,1LLU),_20548c650_Range32(92782LLU,92783LLU,1LLU),_20548c650_Range32(92917LLU,92983LLU,66LLU),_20548c650_Range32(92984LLU,92996LLU,12LLU),_20548c650_Range32(93848LLU,113823LLU,19975LLU),_20548c650_Range32(121480LLU,121480LLU,1LLU)}),1LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__SOFT_DOTTED = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(105LLU,106LLU,1LLU),_20548c650_Range16(303LLU,585LLU,282LLU),_20548c650_Range16(616LLU,669LLU,53LLU),_20548c650_Range16(690LLU,1011LLU,321LLU),_20548c650_Range16(1110LLU,1112LLU,2LLU),_20548c650_Range16(7522LLU,7574LLU,52LLU),_20548c650_Range16(7588LLU,7592LLU,4LLU),_20548c650_Range16(7725LLU,7883LLU,158LLU),_20548c650_Range16(8305LLU,8520LLU,215LLU),_20548c650_Range16(8521LLU,11388LLU,2867LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(119842LLU,119843LLU,1LLU),_20548c650_Range32(119894LLU,119895LLU,1LLU),_20548c650_Range32(119946LLU,119947LLU,1LLU),_20548c650_Range32(119998LLU,119999LLU,1LLU),_20548c650_Range32(120050LLU,120051LLU,1LLU),_20548c650_Range32(120102LLU,120103LLU,1LLU),_20548c650_Range32(120154LLU,120155LLU,1LLU),_20548c650_Range32(120206LLU,120207LLU,1LLU),_20548c650_Range32(120258LLU,120259LLU,1LLU),_20548c650_Range32(120310LLU,120311LLU,1LLU),_20548c650_Range32(120362LLU,120363LLU,1LLU),_20548c650_Range32(120414LLU,120415LLU,1LLU),_20548c650_Range32(120466LLU,120467LLU,1LLU),_20548c650_Range32(122650LLU,122956LLU,306LLU),_20548c650_Range32(122957LLU,122984LLU,27LLU)}),1LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__TERMINAL_PUNCTUATION = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(33LLU,44LLU,11LLU),_20548c650_Range16(46LLU,58LLU,12LLU),_20548c650_Range16(59LLU,63LLU,4LLU),_20548c650_Range16(894LLU,903LLU,9LLU),_20548c650_Range16(1417LLU,1475LLU,58LLU),_20548c650_Range16(1548LLU,1563LLU,15LLU),_20548c650_Range16(1565LLU,1567LLU,1LLU),_20548c650_Range16(1748LLU,1792LLU,44LLU),_20548c650_Range16(1793LLU,1802LLU,1LLU),_20548c650_Range16(1804LLU,2040LLU,236LLU),_20548c650_Range16(2041LLU,2096LLU,55LLU),_20548c650_Range16(2097LLU,2110LLU,1LLU),_20548c650_Range16(2142LLU,2404LLU,262LLU),_20548c650_Range16(2405LLU,3674LLU,1269LLU),_20548c650_Range16(3675LLU,3848LLU,173LLU),_20548c650_Range16(3853LLU,3858LLU,1LLU),_20548c650_Range16(4170LLU,4171LLU,1LLU),_20548c650_Range16(4961LLU,4968LLU,1LLU),_20548c650_Range16(5742LLU,5867LLU,125LLU),_20548c650_Range16(5868LLU,5869LLU,1LLU),_20548c650_Range16(5941LLU,5942LLU,1LLU),_20548c650_Range16(6100LLU,6102LLU,1LLU),_20548c650_Range16(6106LLU,6146LLU,40LLU),_20548c650_Range16(6147LLU,6149LLU,1LLU),_20548c650_Range16(6152LLU,6153LLU,1LLU),_20548c650_Range16(6468LLU,6469LLU,1LLU),_20548c650_Range16(6824LLU,6827LLU,1LLU),_20548c650_Range16(7002LLU,7003LLU,1LLU),_20548c650_Range16(7005LLU,7007LLU,1LLU),_20548c650_Range16(7037LLU,7038LLU,1LLU),_20548c650_Range16(7227LLU,7231LLU,1LLU),_20548c650_Range16(7294LLU,7295LLU,1LLU),_20548c650_Range16(8252LLU,8253LLU,1LLU),_20548c650_Range16(8263LLU,8265LLU,1LLU),_20548c650_Range16(11822LLU,11836LLU,14LLU),_20548c650_Range16(11841LLU,11852LLU,11LLU),_20548c650_Range16(11854LLU,11855LLU,1LLU),_20548c650_Range16(11859LLU,11860LLU,1LLU),_20548c650_Range16(12289LLU,12290LLU,1LLU),_20548c650_Range16(42238LLU,42239LLU,1LLU),_20548c650_Range16(42509LLU,42511LLU,1LLU),_20548c650_Range16(42739LLU,42743LLU,1LLU),_20548c650_Range16(43126LLU,43127LLU,1LLU),_20548c650_Range16(43214LLU,43215LLU,1LLU),_20548c650_Range16(43311LLU,43463LLU,152LLU),_20548c650_Range16(43464LLU,43465LLU,1LLU),_20548c650_Range16(43613LLU,43615LLU,1LLU),_20548c650_Range16(43743LLU,43760LLU,17LLU),_20548c650_Range16(43761LLU,44011LLU,250LLU),_20548c650_Range16(65104LLU,65106LLU,1LLU),_20548c650_Range16(65108LLU,65111LLU,1LLU),_20548c650_Range16(65281LLU,65292LLU,11LLU),_20548c650_Range16(65294LLU,65306LLU,12LLU),_20548c650_Range16(65307LLU,65311LLU,4LLU),_20548c650_Range16(65377LLU,65380LLU,3LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66463LLU,66512LLU,49LLU),_20548c650_Range32(67671LLU,67871LLU,200LLU),_20548c650_Range32(68182LLU,68183LLU,1LLU),_20548c650_Range32(68336LLU,68341LLU,1LLU),_20548c650_Range32(68410LLU,68415LLU,1LLU),_20548c650_Range32(68505LLU,68508LLU,1LLU),_20548c650_Range32(69461LLU,69465LLU,1LLU),_20548c650_Range32(69510LLU,69513LLU,1LLU),_20548c650_Range32(69703LLU,69709LLU,1LLU),_20548c650_Range32(69822LLU,69825LLU,1LLU),_20548c650_Range32(69953LLU,69955LLU,1LLU),_20548c650_Range32(70085LLU,70086LLU,1LLU),_20548c650_Range32(70093LLU,70110LLU,17LLU),_20548c650_Range32(70111LLU,70200LLU,89LLU),_20548c650_Range32(70201LLU,70204LLU,1LLU),_20548c650_Range32(70313LLU,70731LLU,418LLU),_20548c650_Range32(70732LLU,70733LLU,1LLU),_20548c650_Range32(70746LLU,70747LLU,1LLU),_20548c650_Range32(71106LLU,71109LLU,1LLU),_20548c650_Range32(71113LLU,71127LLU,1LLU),_20548c650_Range32(71233LLU,71234LLU,1LLU),_20548c650_Range32(71484LLU,71486LLU,1LLU),_20548c650_Range32(72004LLU,72006LLU,2LLU),_20548c650_Range32(72258LLU,72259LLU,1LLU),_20548c650_Range32(72347LLU,72348LLU,1LLU),_20548c650_Range32(72353LLU,72354LLU,1LLU),_20548c650_Range32(72769LLU,72771LLU,1LLU),_20548c650_Range32(72817LLU,73463LLU,646LLU),_20548c650_Range32(73464LLU,73539LLU,75LLU),_20548c650_Range32(73540LLU,74864LLU,1324LLU),_20548c650_Range32(74865LLU,74868LLU,1LLU),_20548c650_Range32(92782LLU,92783LLU,1LLU),_20548c650_Range32(92917LLU,92983LLU,66LLU),_20548c650_Range32(92984LLU,92985LLU,1LLU),_20548c650_Range32(92996LLU,93847LLU,851LLU),_20548c650_Range32(93848LLU,113823LLU,19975LLU),_20548c650_Range32(121479LLU,121482LLU,1LLU)}),3LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3__UNIFIED_IDEOGRAPH = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(13312LLU,19903LLU,1LLU),_20548c650_Range16(19968LLU,40959LLU,1LLU),_20548c650_Range16(64014LLU,64015LLU,1LLU),_20548c650_Range16(64017LLU,64019LLU,2LLU),_20548c650_Range16(64020LLU,64031LLU,11LLU),_20548c650_Range16(64033LLU,64035LLU,2LLU),_20548c650_Range16(64036LLU,64039LLU,3LLU),_20548c650_Range16(64040LLU,64041LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(131072LLU,173791LLU,1LLU),_20548c650_Range32(173824LLU,177977LLU,1LLU),_20548c650_Range32(177984LLU,178205LLU,1LLU),_20548c650_Range32(178208LLU,183969LLU,1LLU),_20548c650_Range32(183984LLU,191456LLU,1LLU),_20548c650_Range32(196608LLU,201546LLU,1LLU),_20548c650_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__VARIATION_SELECTOR = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(6155LLU,6157LLU,1LLU),_20548c650_Range16(6159LLU,65024LLU,58865LLU),_20548c650_Range16(65025LLU,65039LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3__WHITE_SPACE = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(9LLU,13LLU,1LLU),_20548c650_Range16(32LLU,133LLU,101LLU),_20548c650_Range16(160LLU,5760LLU,5600LLU),_20548c650_Range16(8192LLU,8202LLU,1LLU),_20548c650_Range16(8232LLU,8233LLU,1LLU),_20548c650_Range16(8239LLU,8287LLU,48LLU),_20548c650_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),2LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3_ASCII_HEX_DIGIT = _20548cac3__ASCII_HEX_DIGIT;
static jule::Ref<_20548c650_RangeTable> _20548cac3_BIDI_CONTROL = _20548cac3__BIDI_CONTROL;
static jule::Ref<_20548c650_RangeTable> _20548cac3_DASH = _20548cac3__DASH;
static jule::Ref<_20548c650_RangeTable> _20548cac3_DEPRECATED = _20548cac3__DEPRECATED;
static jule::Ref<_20548c650_RangeTable> _20548cac3_DIACRITIC = _20548cac3__DIACRITIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_EXTENDER = _20548cac3__EXTENDER;
static jule::Ref<_20548c650_RangeTable> _20548cac3_HEX_DIGIT = _20548cac3__HEX_DIGIT;
static jule::Ref<_20548c650_RangeTable> _20548cac3_HYPHEN = _20548cac3__HYPHEN;
static jule::Ref<_20548c650_RangeTable> _20548cac3_IDS_BINARY_OPERATOR = _20548cac3__IDS_BINARY_OPERATOR;
static jule::Ref<_20548c650_RangeTable> _20548cac3_IDS_TRINARY_OPERATOR = _20548cac3__IDS_TRINARY_OPERATOR;
static jule::Ref<_20548c650_RangeTable> _20548cac3_IDEOGRAPHIC = _20548cac3__IDEOGRAPHIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_JOIN_CONTROL = _20548cac3__JOIN_CONTROL;
static jule::Ref<_20548c650_RangeTable> _20548cac3_LOGICAL_ORDER_EXCEPTION = _20548cac3__LOGICAL_ORDER_EXCEPTION;
static jule::Ref<_20548c650_RangeTable> _20548cac3_NONCHARACTER_CODE_POINT = _20548cac3__NONCHARACTER_CODE_POINT;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OTHER_ALPHABETIC = _20548cac3__OTHER_ALPHABETIC;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OTHER_DEFAULT_IGNORABLE_CODE_POINT = _20548cac3__OTHER_DEFAULT_IGNORABLE_CODE_POINT;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OTHER_GRAPHEME_EXTEND = _20548cac3__OTHER_GRAPHEME_EXTEND;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OTHER_ID_CONTINUE = _20548cac3__OTHER_ID_CONTINUE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OTHER_ID_START = _20548cac3__OTHER_ID_START;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OTHER_LOWERCASE = _20548cac3__OTHER_LOWERCASE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OTHER_MATH = _20548cac3__OTHER_MATH;
static jule::Ref<_20548c650_RangeTable> _20548cac3_OTHER_UPPERCASE = _20548cac3__OTHER_UPPERCASE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PATTERN_SYNTAX = _20548cac3__PATTERN_SYNTAX;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PATTERN_WHITE_SPACE = _20548cac3__PATTERN_WHITE_SPACE;
static jule::Ref<_20548c650_RangeTable> _20548cac3_PREPENDED_CONCATENATION_MARK = _20548cac3__PREPENDED_CONCATENATION_MARK;
static jule::Ref<_20548c650_RangeTable> _20548cac3_QUOTATION_MARK = _20548cac3__QUOTATION_MARK;
static jule::Ref<_20548c650_RangeTable> _20548cac3_RADICAL = _20548cac3__RADICAL;
static jule::Ref<_20548c650_RangeTable> _20548cac3_REGIONAL_INDICATOR = _20548cac3__REGIONAL_INDICATOR;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SENTENCE_TERMINAL = _20548cac3__SENTENCE_TERMINAL;
static jule::Ref<_20548c650_RangeTable> _20548cac3_SOFT_DOTTED = _20548cac3__SOFT_DOTTED;
static jule::Ref<_20548c650_RangeTable> _20548cac3_TERMINAL_PUNCTUATION = _20548cac3__TERMINAL_PUNCTUATION;
static jule::Ref<_20548c650_RangeTable> _20548cac3_UNIFIED_IDEOGRAPH = _20548cac3__UNIFIED_IDEOGRAPH;
static jule::Ref<_20548c650_RangeTable> _20548cac3_VARIATION_SELECTOR = _20548cac3__VARIATION_SELECTOR;
static jule::Ref<_20548c650_RangeTable> _20548cac3_WHITE_SPACE = _20548cac3__WHITE_SPACE;
static jule::Map<jule::Str,jule::Ref<_20548c650_RangeTable>> _20548cac3_PROPERTIES = jule::Map<jule::Str,jule::Ref<_20548c650_RangeTable>>({{jule::Str("ASCII_HEX_DIGIT", 15),_20548cac3_ASCII_HEX_DIGIT},{jule::Str("BIDI_CONTROL", 12),_20548cac3_BIDI_CONTROL},{jule::Str("DASH", 4),_20548cac3_DASH},{jule::Str("DEPRECATED", 10),_20548cac3_DEPRECATED},{jule::Str("DIACRITIC", 9),_20548cac3_DIACRITIC},{jule::Str("EXTENDER", 8),_20548cac3_EXTENDER},{jule::Str("HEX_DIGIT", 9),_20548cac3_HEX_DIGIT},{jule::Str("HYPHEN", 6),_20548cac3_HYPHEN},{jule::Str("IDS_BINARY_OPERATOR", 19),_20548cac3_IDS_BINARY_OPERATOR},{jule::Str("IDS_TRINARY_OPERATOR", 20),_20548cac3_IDS_TRINARY_OPERATOR},{jule::Str("IDEOGRAPHIC", 11),_20548cac3_IDEOGRAPHIC},{jule::Str("JOIN_CONTROL", 12),_20548cac3_JOIN_CONTROL},{jule::Str("LOGICAL_ORDER_EXCEPTION", 23),_20548cac3_LOGICAL_ORDER_EXCEPTION},{jule::Str("NONCHARACTER_CODE_POINT", 23),_20548cac3_NONCHARACTER_CODE_POINT},{jule::Str("OTHER_ALPHABETIC", 16),_20548cac3_OTHER_ALPHABETIC},{jule::Str("OTHER_DEFAULT_IGNORABLE_CODE_POINT", 34),_20548cac3_OTHER_DEFAULT_IGNORABLE_CODE_POINT},{jule::Str("OTHER_GRAPHEME_EXTEND", 21),_20548cac3_OTHER_GRAPHEME_EXTEND},{jule::Str("OTHER_ID_CONTINUE", 17),_20548cac3_OTHER_ID_CONTINUE},{jule::Str("OTHER_ID_START", 14),_20548cac3_OTHER_ID_START},{jule::Str("OTHER_LOWERCASE", 15),_20548cac3_OTHER_LOWERCASE},{jule::Str("OTHER_MATH", 10),_20548cac3_OTHER_MATH},{jule::Str("OTHER_UPPERCASE", 15),_20548cac3_OTHER_UPPERCASE},{jule::Str("PATTERN_SYNTAX", 14),_20548cac3_PATTERN_SYNTAX},{jule::Str("PATTERN_WHITE_SPACE", 19),_20548cac3_PATTERN_WHITE_SPACE},{jule::Str("PREPENDED_CONCATENATION_MARK", 28),_20548cac3_PREPENDED_CONCATENATION_MARK},{jule::Str("QUOTATION_MARK", 14),_20548cac3_QUOTATION_MARK},{jule::Str("RADICAL", 7),_20548cac3_RADICAL},{jule::Str("REGIONAL_INDICATOR", 18),_20548cac3_REGIONAL_INDICATOR},{jule::Str("SENTENCE_TERMINAL", 17),_20548cac3_SENTENCE_TERMINAL},{jule::Str("SOFT_DOTTED", 11),_20548cac3_SOFT_DOTTED},{jule::Str("TERMINAL_PUNCTUATION", 20),_20548cac3_TERMINAL_PUNCTUATION},{jule::Str("UNIFIED_IDEOGRAPH", 17),_20548cac3_UNIFIED_IDEOGRAPH},{jule::Str("VARIATION_SELECTOR", 18),_20548cac3_VARIATION_SELECTOR},{jule::Str("WHITE_SPACE", 11),_20548cac3_WHITE_SPACE}});
static jule::Array<jule::U8,256> _20548cac3__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
static jule::Array<jule::U16,128> _20548cac3_ASCII_FOLD = jule::Array<jule::U16,128>({0LLU,1LLU,2LLU,3LLU,4LLU,5LLU,6LLU,7LLU,8LLU,9LLU,10LLU,11LLU,12LLU,13LLU,14LLU,15LLU,16LLU,17LLU,18LLU,19LLU,20LLU,21LLU,22LLU,23LLU,24LLU,25LLU,26LLU,27LLU,28LLU,29LLU,30LLU,31LLU,32LLU,33LLU,34LLU,35LLU,36LLU,37LLU,38LLU,39LLU,40LLU,41LLU,42LLU,43LLU,44LLU,45LLU,46LLU,47LLU,48LLU,49LLU,50LLU,51LLU,52LLU,53LLU,54LLU,55LLU,56LLU,57LLU,58LLU,59LLU,60LLU,61LLU,62LLU,63LLU,64LLU,97LLU,98LLU,99LLU,100LLU,101LLU,102LLU,103LLU,104LLU,105LLU,106LLU,107LLU,108LLU,109LLU,110LLU,111LLU,112LLU,113LLU,114LLU,115LLU,116LLU,117LLU,118LLU,119LLU,120LLU,121LLU,122LLU,91LLU,92LLU,93LLU,94LLU,95LLU,96LLU,65LLU,66LLU,67LLU,68LLU,69LLU,70LLU,71LLU,72LLU,73LLU,74LLU,8490LLU,76LLU,77LLU,78LLU,79LLU,80LLU,81LLU,82LLU,383LLU,84LLU,85LLU,86LLU,87LLU,88LLU,89LLU,90LLU,123LLU,124LLU,125LLU,126LLU,127LLU});
static jule::Slice<_20548c650_FoldPair> _20548cac3_CASE_ORBIT = jule::Slice<_20548c650_FoldPair>({_20548c650_FoldPair(75LLU,107LLU),_20548c650_FoldPair(83LLU,115LLU),_20548c650_FoldPair(107LLU,8490LLU),_20548c650_FoldPair(115LLU,383LLU),_20548c650_FoldPair(181LLU,924LLU),_20548c650_FoldPair(197LLU,229LLU),_20548c650_FoldPair(223LLU,7838LLU),_20548c650_FoldPair(229LLU,8491LLU),_20548c650_FoldPair(304LLU,304LLU),_20548c650_FoldPair(305LLU,305LLU),_20548c650_FoldPair(383LLU,83LLU),_20548c650_FoldPair(452LLU,453LLU),_20548c650_FoldPair(453LLU,454LLU),_20548c650_FoldPair(454LLU,452LLU),_20548c650_FoldPair(455LLU,456LLU),_20548c650_FoldPair(456LLU,457LLU),_20548c650_FoldPair(457LLU,455LLU),_20548c650_FoldPair(458LLU,459LLU),_20548c650_FoldPair(459LLU,460LLU),_20548c650_FoldPair(460LLU,458LLU),_20548c650_FoldPair(497LLU,498LLU),_20548c650_FoldPair(498LLU,499LLU),_20548c650_FoldPair(499LLU,497LLU),_20548c650_FoldPair(837LLU,921LLU),_20548c650_FoldPair(914LLU,946LLU),_20548c650_FoldPair(917LLU,949LLU),_20548c650_FoldPair(920LLU,952LLU),_20548c650_FoldPair(921LLU,953LLU),_20548c650_FoldPair(922LLU,954LLU),_20548c650_FoldPair(924LLU,956LLU),_20548c650_FoldPair(928LLU,960LLU),_20548c650_FoldPair(929LLU,961LLU),_20548c650_FoldPair(931LLU,962LLU),_20548c650_FoldPair(934LLU,966LLU),_20548c650_FoldPair(937LLU,969LLU),_20548c650_FoldPair(946LLU,976LLU),_20548c650_FoldPair(949LLU,1013LLU),_20548c650_FoldPair(952LLU,977LLU),_20548c650_FoldPair(953LLU,8126LLU),_20548c650_FoldPair(954LLU,1008LLU),_20548c650_FoldPair(956LLU,181LLU),_20548c650_FoldPair(960LLU,982LLU),_20548c650_FoldPair(961LLU,1009LLU),_20548c650_FoldPair(962LLU,963LLU),_20548c650_FoldPair(963LLU,931LLU),_20548c650_FoldPair(966LLU,981LLU),_20548c650_FoldPair(969LLU,8486LLU),_20548c650_FoldPair(976LLU,914LLU),_20548c650_FoldPair(977LLU,1012LLU),_20548c650_FoldPair(981LLU,934LLU),_20548c650_FoldPair(982LLU,928LLU),_20548c650_FoldPair(1008LLU,922LLU),_20548c650_FoldPair(1009LLU,929LLU),_20548c650_FoldPair(1012LLU,920LLU),_20548c650_FoldPair(1013LLU,917LLU),_20548c650_FoldPair(1042LLU,1074LLU),_20548c650_FoldPair(1044LLU,1076LLU),_20548c650_FoldPair(1054LLU,1086LLU),_20548c650_FoldPair(1057LLU,1089LLU),_20548c650_FoldPair(1058LLU,1090LLU),_20548c650_FoldPair(1066LLU,1098LLU),_20548c650_FoldPair(1074LLU,7296LLU),_20548c650_FoldPair(1076LLU,7297LLU),_20548c650_FoldPair(1086LLU,7298LLU),_20548c650_FoldPair(1089LLU,7299LLU),_20548c650_FoldPair(1090LLU,7300LLU),_20548c650_FoldPair(1098LLU,7302LLU),_20548c650_FoldPair(1122LLU,1123LLU),_20548c650_FoldPair(1123LLU,7303LLU),_20548c650_FoldPair(7296LLU,1042LLU),_20548c650_FoldPair(7297LLU,1044LLU),_20548c650_FoldPair(7298LLU,1054LLU),_20548c650_FoldPair(7299LLU,1057LLU),_20548c650_FoldPair(7300LLU,7301LLU),_20548c650_FoldPair(7301LLU,1058LLU),_20548c650_FoldPair(7302LLU,1066LLU),_20548c650_FoldPair(7303LLU,1122LLU),_20548c650_FoldPair(7304LLU,42570LLU),_20548c650_FoldPair(7776LLU,7777LLU),_20548c650_FoldPair(7777LLU,7835LLU),_20548c650_FoldPair(7835LLU,7776LLU),_20548c650_FoldPair(7838LLU,223LLU),_20548c650_FoldPair(8126LLU,837LLU),_20548c650_FoldPair(8486LLU,937LLU),_20548c650_FoldPair(8490LLU,75LLU),_20548c650_FoldPair(8491LLU,197LLU),_20548c650_FoldPair(42570LLU,42571LLU),_20548c650_FoldPair(42571LLU,7304LLU)});
static jule::Ref<_20548c650_RangeTable> _20548cac3_FOLD_L = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(837LLU,837LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3_FOLD_LL = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(65LLU,90LLU,1LLU),_20548c650_Range16(192LLU,214LLU,1LLU),_20548c650_Range16(216LLU,222LLU,1LLU),_20548c650_Range16(256LLU,302LLU,2LLU),_20548c650_Range16(306LLU,310LLU,2LLU),_20548c650_Range16(313LLU,327LLU,2LLU),_20548c650_Range16(330LLU,376LLU,2LLU),_20548c650_Range16(377LLU,381LLU,2LLU),_20548c650_Range16(385LLU,386LLU,1LLU),_20548c650_Range16(388LLU,390LLU,2LLU),_20548c650_Range16(391LLU,393LLU,2LLU),_20548c650_Range16(394LLU,395LLU,1LLU),_20548c650_Range16(398LLU,401LLU,1LLU),_20548c650_Range16(403LLU,404LLU,1LLU),_20548c650_Range16(406LLU,408LLU,1LLU),_20548c650_Range16(412LLU,413LLU,1LLU),_20548c650_Range16(415LLU,416LLU,1LLU),_20548c650_Range16(418LLU,422LLU,2LLU),_20548c650_Range16(423LLU,425LLU,2LLU),_20548c650_Range16(428LLU,430LLU,2LLU),_20548c650_Range16(431LLU,433LLU,2LLU),_20548c650_Range16(434LLU,435LLU,1LLU),_20548c650_Range16(437LLU,439LLU,2LLU),_20548c650_Range16(440LLU,444LLU,4LLU),_20548c650_Range16(452LLU,453LLU,1LLU),_20548c650_Range16(455LLU,456LLU,1LLU),_20548c650_Range16(458LLU,459LLU,1LLU),_20548c650_Range16(461LLU,475LLU,2LLU),_20548c650_Range16(478LLU,494LLU,2LLU),_20548c650_Range16(497LLU,498LLU,1LLU),_20548c650_Range16(500LLU,502LLU,2LLU),_20548c650_Range16(503LLU,504LLU,1LLU),_20548c650_Range16(506LLU,562LLU,2LLU),_20548c650_Range16(570LLU,571LLU,1LLU),_20548c650_Range16(573LLU,574LLU,1LLU),_20548c650_Range16(577LLU,579LLU,2LLU),_20548c650_Range16(580LLU,582LLU,1LLU),_20548c650_Range16(584LLU,590LLU,2LLU),_20548c650_Range16(837LLU,880LLU,43LLU),_20548c650_Range16(882LLU,886LLU,4LLU),_20548c650_Range16(895LLU,902LLU,7LLU),_20548c650_Range16(904LLU,906LLU,1LLU),_20548c650_Range16(908LLU,910LLU,2LLU),_20548c650_Range16(911LLU,913LLU,2LLU),_20548c650_Range16(914LLU,929LLU,1LLU),_20548c650_Range16(931LLU,939LLU,1LLU),_20548c650_Range16(975LLU,984LLU,9LLU),_20548c650_Range16(986LLU,1006LLU,2LLU),_20548c650_Range16(1012LLU,1015LLU,3LLU),_20548c650_Range16(1017LLU,1018LLU,1LLU),_20548c650_Range16(1021LLU,1071LLU,1LLU),_20548c650_Range16(1120LLU,1152LLU,2LLU),_20548c650_Range16(1162LLU,1216LLU,2LLU),_20548c650_Range16(1217LLU,1229LLU,2LLU),_20548c650_Range16(1232LLU,1326LLU,2LLU),_20548c650_Range16(1329LLU,1366LLU,1LLU),_20548c650_Range16(4256LLU,4293LLU,1LLU),_20548c650_Range16(4295LLU,4301LLU,6LLU),_20548c650_Range16(5024LLU,5109LLU,1LLU),_20548c650_Range16(7312LLU,7354LLU,1LLU),_20548c650_Range16(7357LLU,7359LLU,1LLU),_20548c650_Range16(7680LLU,7828LLU,2LLU),_20548c650_Range16(7838LLU,7934LLU,2LLU),_20548c650_Range16(7944LLU,7951LLU,1LLU),_20548c650_Range16(7960LLU,7965LLU,1LLU),_20548c650_Range16(7976LLU,7983LLU,1LLU),_20548c650_Range16(7992LLU,7999LLU,1LLU),_20548c650_Range16(8008LLU,8013LLU,1LLU),_20548c650_Range16(8025LLU,8031LLU,2LLU),_20548c650_Range16(8040LLU,8047LLU,1LLU),_20548c650_Range16(8072LLU,8079LLU,1LLU),_20548c650_Range16(8088LLU,8095LLU,1LLU),_20548c650_Range16(8104LLU,8111LLU,1LLU),_20548c650_Range16(8120LLU,8124LLU,1LLU),_20548c650_Range16(8136LLU,8140LLU,1LLU),_20548c650_Range16(8152LLU,8155LLU,1LLU),_20548c650_Range16(8168LLU,8172LLU,1LLU),_20548c650_Range16(8184LLU,8188LLU,1LLU),_20548c650_Range16(8486LLU,8490LLU,4LLU),_20548c650_Range16(8491LLU,8498LLU,7LLU),_20548c650_Range16(8579LLU,11264LLU,2685LLU),_20548c650_Range16(11265LLU,11311LLU,1LLU),_20548c650_Range16(11360LLU,11362LLU,2LLU),_20548c650_Range16(11363LLU,11364LLU,1LLU),_20548c650_Range16(11367LLU,11373LLU,2LLU),_20548c650_Range16(11374LLU,11376LLU,1LLU),_20548c650_Range16(11378LLU,11381LLU,3LLU),_20548c650_Range16(11390LLU,11392LLU,1LLU),_20548c650_Range16(11394LLU,11490LLU,2LLU),_20548c650_Range16(11499LLU,11501LLU,2LLU),_20548c650_Range16(11506LLU,42560LLU,31054LLU),_20548c650_Range16(42562LLU,42604LLU,2LLU),_20548c650_Range16(42624LLU,42650LLU,2LLU),_20548c650_Range16(42786LLU,42798LLU,2LLU),_20548c650_Range16(42802LLU,42862LLU,2LLU),_20548c650_Range16(42873LLU,42877LLU,2LLU),_20548c650_Range16(42878LLU,42886LLU,2LLU),_20548c650_Range16(42891LLU,42893LLU,2LLU),_20548c650_Range16(42896LLU,42898LLU,2LLU),_20548c650_Range16(42902LLU,42922LLU,2LLU),_20548c650_Range16(42923LLU,42926LLU,1LLU),_20548c650_Range16(42928LLU,42932LLU,1LLU),_20548c650_Range16(42934LLU,42948LLU,2LLU),_20548c650_Range16(42949LLU,42951LLU,1LLU),_20548c650_Range16(42953LLU,42960LLU,7LLU),_20548c650_Range16(42966LLU,42968LLU,2LLU),_20548c650_Range16(42997LLU,65313LLU,22316LLU),_20548c650_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66560LLU,66599LLU,1LLU),_20548c650_Range32(66736LLU,66771LLU,1LLU),_20548c650_Range32(66928LLU,66938LLU,1LLU),_20548c650_Range32(66940LLU,66954LLU,1LLU),_20548c650_Range32(66956LLU,66962LLU,1LLU),_20548c650_Range32(66964LLU,66965LLU,1LLU),_20548c650_Range32(68736LLU,68786LLU,1LLU),_20548c650_Range32(71840LLU,71871LLU,1LLU),_20548c650_Range32(93760LLU,93791LLU,1LLU),_20548c650_Range32(125184LLU,125217LLU,1LLU)}),3LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3_FOLD_LT = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(452LLU,454LLU,2LLU),_20548c650_Range16(455LLU,457LLU,2LLU),_20548c650_Range16(458LLU,460LLU,2LLU),_20548c650_Range16(497LLU,499LLU,2LLU),_20548c650_Range16(8064LLU,8071LLU,1LLU),_20548c650_Range16(8080LLU,8087LLU,1LLU),_20548c650_Range16(8096LLU,8103LLU,1LLU),_20548c650_Range16(8115LLU,8131LLU,16LLU),_20548c650_Range16(8179LLU,8179LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3_FOLD_LU = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(97LLU,122LLU,1LLU),_20548c650_Range16(181LLU,223LLU,42LLU),_20548c650_Range16(224LLU,246LLU,1LLU),_20548c650_Range16(248LLU,255LLU,1LLU),_20548c650_Range16(257LLU,303LLU,2LLU),_20548c650_Range16(307LLU,311LLU,2LLU),_20548c650_Range16(314LLU,328LLU,2LLU),_20548c650_Range16(331LLU,375LLU,2LLU),_20548c650_Range16(378LLU,382LLU,2LLU),_20548c650_Range16(383LLU,384LLU,1LLU),_20548c650_Range16(387LLU,389LLU,2LLU),_20548c650_Range16(392LLU,396LLU,4LLU),_20548c650_Range16(402LLU,405LLU,3LLU),_20548c650_Range16(409LLU,410LLU,1LLU),_20548c650_Range16(414LLU,417LLU,3LLU),_20548c650_Range16(419LLU,421LLU,2LLU),_20548c650_Range16(424LLU,429LLU,5LLU),_20548c650_Range16(432LLU,436LLU,4LLU),_20548c650_Range16(438LLU,441LLU,3LLU),_20548c650_Range16(445LLU,447LLU,2LLU),_20548c650_Range16(453LLU,454LLU,1LLU),_20548c650_Range16(456LLU,457LLU,1LLU),_20548c650_Range16(459LLU,460LLU,1LLU),_20548c650_Range16(462LLU,476LLU,2LLU),_20548c650_Range16(477LLU,495LLU,2LLU),_20548c650_Range16(498LLU,499LLU,1LLU),_20548c650_Range16(501LLU,505LLU,4LLU),_20548c650_Range16(507LLU,543LLU,2LLU),_20548c650_Range16(547LLU,563LLU,2LLU),_20548c650_Range16(572LLU,575LLU,3LLU),_20548c650_Range16(576LLU,578LLU,2LLU),_20548c650_Range16(583LLU,591LLU,2LLU),_20548c650_Range16(592LLU,596LLU,1LLU),_20548c650_Range16(598LLU,599LLU,1LLU),_20548c650_Range16(601LLU,603LLU,2LLU),_20548c650_Range16(604LLU,608LLU,4LLU),_20548c650_Range16(609LLU,613LLU,2LLU),_20548c650_Range16(614LLU,616LLU,2LLU),_20548c650_Range16(617LLU,620LLU,1LLU),_20548c650_Range16(623LLU,625LLU,2LLU),_20548c650_Range16(626LLU,629LLU,3LLU),_20548c650_Range16(637LLU,640LLU,3LLU),_20548c650_Range16(642LLU,643LLU,1LLU),_20548c650_Range16(647LLU,652LLU,1LLU),_20548c650_Range16(658LLU,669LLU,11LLU),_20548c650_Range16(670LLU,837LLU,167LLU),_20548c650_Range16(881LLU,883LLU,2LLU),_20548c650_Range16(887LLU,891LLU,4LLU),_20548c650_Range16(892LLU,893LLU,1LLU),_20548c650_Range16(940LLU,943LLU,1LLU),_20548c650_Range16(945LLU,974LLU,1LLU),_20548c650_Range16(976LLU,977LLU,1LLU),_20548c650_Range16(981LLU,983LLU,1LLU),_20548c650_Range16(985LLU,1007LLU,2LLU),_20548c650_Range16(1008LLU,1011LLU,1LLU),_20548c650_Range16(1013LLU,1019LLU,3LLU),_20548c650_Range16(1072LLU,1119LLU,1LLU),_20548c650_Range16(1121LLU,1153LLU,2LLU),_20548c650_Range16(1163LLU,1215LLU,2LLU),_20548c650_Range16(1218LLU,1230LLU,2LLU),_20548c650_Range16(1231LLU,1327LLU,2LLU),_20548c650_Range16(1377LLU,1414LLU,1LLU),_20548c650_Range16(4304LLU,4346LLU,1LLU),_20548c650_Range16(4349LLU,4351LLU,1LLU),_20548c650_Range16(5112LLU,5117LLU,1LLU),_20548c650_Range16(7296LLU,7304LLU,1LLU),_20548c650_Range16(7545LLU,7549LLU,4LLU),_20548c650_Range16(7566LLU,7681LLU,115LLU),_20548c650_Range16(7683LLU,7829LLU,2LLU),_20548c650_Range16(7835LLU,7841LLU,6LLU),_20548c650_Range16(7843LLU,7935LLU,2LLU),_20548c650_Range16(7936LLU,7943LLU,1LLU),_20548c650_Range16(7952LLU,7957LLU,1LLU),_20548c650_Range16(7968LLU,7975LLU,1LLU),_20548c650_Range16(7984LLU,7991LLU,1LLU),_20548c650_Range16(8000LLU,8005LLU,1LLU),_20548c650_Range16(8017LLU,8023LLU,2LLU),_20548c650_Range16(8032LLU,8039LLU,1LLU),_20548c650_Range16(8048LLU,8061LLU,1LLU),_20548c650_Range16(8112LLU,8113LLU,1LLU),_20548c650_Range16(8126LLU,8144LLU,18LLU),_20548c650_Range16(8145LLU,8160LLU,15LLU),_20548c650_Range16(8161LLU,8165LLU,4LLU),_20548c650_Range16(8526LLU,8580LLU,54LLU),_20548c650_Range16(11312LLU,11359LLU,1LLU),_20548c650_Range16(11361LLU,11365LLU,4LLU),_20548c650_Range16(11366LLU,11372LLU,2LLU),_20548c650_Range16(11379LLU,11382LLU,3LLU),_20548c650_Range16(11393LLU,11491LLU,2LLU),_20548c650_Range16(11500LLU,11502LLU,2LLU),_20548c650_Range16(11507LLU,11520LLU,13LLU),_20548c650_Range16(11521LLU,11557LLU,1LLU),_20548c650_Range16(11559LLU,11565LLU,6LLU),_20548c650_Range16(42561LLU,42605LLU,2LLU),_20548c650_Range16(42625LLU,42651LLU,2LLU),_20548c650_Range16(42787LLU,42799LLU,2LLU),_20548c650_Range16(42803LLU,42863LLU,2LLU),_20548c650_Range16(42874LLU,42876LLU,2LLU),_20548c650_Range16(42879LLU,42887LLU,2LLU),_20548c650_Range16(42892LLU,42897LLU,5LLU),_20548c650_Range16(42899LLU,42900LLU,1LLU),_20548c650_Range16(42903LLU,42921LLU,2LLU),_20548c650_Range16(42933LLU,42947LLU,2LLU),_20548c650_Range16(42952LLU,42954LLU,2LLU),_20548c650_Range16(42961LLU,42967LLU,6LLU),_20548c650_Range16(42969LLU,42998LLU,29LLU),_20548c650_Range16(43859LLU,43888LLU,29LLU),_20548c650_Range16(43889LLU,43967LLU,1LLU),_20548c650_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_20548c650_Range32>({_20548c650_Range32(66600LLU,66639LLU,1LLU),_20548c650_Range32(66776LLU,66811LLU,1LLU),_20548c650_Range32(66967LLU,66977LLU,1LLU),_20548c650_Range32(66979LLU,66993LLU,1LLU),_20548c650_Range32(66995LLU,67001LLU,1LLU),_20548c650_Range32(67003LLU,67004LLU,1LLU),_20548c650_Range32(68800LLU,68850LLU,1LLU),_20548c650_Range32(71872LLU,71903LLU,1LLU),_20548c650_Range32(93792LLU,93823LLU,1LLU),_20548c650_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ref<_20548c650_RangeTable> _20548cac3_FOLD_M = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(921LLU,953LLU,32LLU),_20548c650_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3_FOLD_MN = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(921LLU,953LLU,32LLU),_20548c650_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Map<jule::Str,jule::Ref<_20548c650_RangeTable>> _20548cac3_FOLD_CATEGORY = jule::Map<jule::Str,jule::Ref<_20548c650_RangeTable>>({{jule::Str("L", 1),_20548cac3_FOLD_L},{jule::Str("LL", 2),_20548cac3_FOLD_LL},{jule::Str("LT", 2),_20548cac3_FOLD_LT},{jule::Str("LU", 2),_20548cac3_FOLD_LU},{jule::Str("M", 1),_20548cac3_FOLD_M},{jule::Str("MN", 2),_20548cac3_FOLD_MN}});
static jule::Ref<_20548c650_RangeTable> _20548cac3_FOLD_COMMON = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(924LLU,956LLU,32LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3_FOLD_GREEK = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(181LLU,837LLU,656LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Ref<_20548c650_RangeTable> _20548cac3_FOLD_INHERITED = jule::new_struct<_20548c650_RangeTable>(new( std::nothrow ) _20548c650_RangeTable(jule::Slice<_20548c650_Range16>({_20548c650_Range16(921LLU,953LLU,32LLU),_20548c650_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_20548c650_Range32>(),jule::Int()));
static jule::Map<jule::Str,jule::Ref<_20548c650_RangeTable>> _20548cac3_FOLD_SCRIPT = jule::Map<jule::Str,jule::Ref<_20548c650_RangeTable>>({{jule::Str("Common", 6),_20548cac3_FOLD_COMMON},{jule::Str("Greek", 5),_20548cac3_FOLD_GREEK},{jule::Str("Inherited", 9),_20548cac3_FOLD_INHERITED}});
static jule::Slice<_20548c650_CaseRange> _20548cac3__CASE_RANGES = jule::Slice<_20548c650_CaseRange>({_20548c650_CaseRange(65LLU,90LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_20548c650_CaseRange(97LLU,122LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_20548c650_CaseRange(181LLU,181LLU,jule::Array<jule::I32,3>({743LL,0LL,743LL})),_20548c650_CaseRange(192LLU,214LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_20548c650_CaseRange(216LLU,222LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_20548c650_CaseRange(224LLU,246LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_20548c650_CaseRange(248LLU,254LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_20548c650_CaseRange(255LLU,255LLU,jule::Array<jule::I32,3>({121LL,0LL,121LL})),_20548c650_CaseRange(256LLU,303LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(304LLU,304LLU,jule::Array<jule::I32,3>({0LL,-199LL,0LL})),_20548c650_CaseRange(305LLU,305LLU,jule::Array<jule::I32,3>({-232LL,0LL,-232LL})),_20548c650_CaseRange(306LLU,311LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(313LLU,328LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(330LLU,375LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(376LLU,376LLU,jule::Array<jule::I32,3>({0LL,-121LL,0LL})),_20548c650_CaseRange(377LLU,382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(383LLU,383LLU,jule::Array<jule::I32,3>({-300LL,0LL,-300LL})),_20548c650_CaseRange(384LLU,384LLU,jule::Array<jule::I32,3>({195LL,0LL,195LL})),_20548c650_CaseRange(385LLU,385LLU,jule::Array<jule::I32,3>({0LL,210LL,0LL})),_20548c650_CaseRange(386LLU,389LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(390LLU,390LLU,jule::Array<jule::I32,3>({0LL,206LL,0LL})),_20548c650_CaseRange(391LLU,392LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(393LLU,394LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_20548c650_CaseRange(395LLU,396LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(398LLU,398LLU,jule::Array<jule::I32,3>({0LL,79LL,0LL})),_20548c650_CaseRange(399LLU,399LLU,jule::Array<jule::I32,3>({0LL,202LL,0LL})),_20548c650_CaseRange(400LLU,400LLU,jule::Array<jule::I32,3>({0LL,203LL,0LL})),_20548c650_CaseRange(401LLU,402LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(403LLU,403LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_20548c650_CaseRange(404LLU,404LLU,jule::Array<jule::I32,3>({0LL,207LL,0LL})),_20548c650_CaseRange(405LLU,405LLU,jule::Array<jule::I32,3>({97LL,0LL,97LL})),_20548c650_CaseRange(406LLU,406LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_20548c650_CaseRange(407LLU,407LLU,jule::Array<jule::I32,3>({0LL,209LL,0LL})),_20548c650_CaseRange(408LLU,409LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(410LLU,410LLU,jule::Array<jule::I32,3>({163LL,0LL,163LL})),_20548c650_CaseRange(412LLU,412LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_20548c650_CaseRange(413LLU,413LLU,jule::Array<jule::I32,3>({0LL,213LL,0LL})),_20548c650_CaseRange(414LLU,414LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_20548c650_CaseRange(415LLU,415LLU,jule::Array<jule::I32,3>({0LL,214LL,0LL})),_20548c650_CaseRange(416LLU,421LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(422LLU,422LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_20548c650_CaseRange(423LLU,424LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(425LLU,425LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_20548c650_CaseRange(428LLU,429LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(430LLU,430LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_20548c650_CaseRange(431LLU,432LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(433LLU,434LLU,jule::Array<jule::I32,3>({0LL,217LL,0LL})),_20548c650_CaseRange(435LLU,438LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(439LLU,439LLU,jule::Array<jule::I32,3>({0LL,219LL,0LL})),_20548c650_CaseRange(440LLU,441LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(444LLU,445LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(447LLU,447LLU,jule::Array<jule::I32,3>({56LL,0LL,56LL})),_20548c650_CaseRange(452LLU,452LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_20548c650_CaseRange(453LLU,453LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_20548c650_CaseRange(454LLU,454LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_20548c650_CaseRange(455LLU,455LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_20548c650_CaseRange(456LLU,456LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_20548c650_CaseRange(457LLU,457LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_20548c650_CaseRange(458LLU,458LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_20548c650_CaseRange(459LLU,459LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_20548c650_CaseRange(460LLU,460LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_20548c650_CaseRange(461LLU,476LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(477LLU,477LLU,jule::Array<jule::I32,3>({-79LL,0LL,-79LL})),_20548c650_CaseRange(478LLU,495LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(497LLU,497LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_20548c650_CaseRange(498LLU,498LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_20548c650_CaseRange(499LLU,499LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_20548c650_CaseRange(500LLU,501LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(502LLU,502LLU,jule::Array<jule::I32,3>({0LL,-97LL,0LL})),_20548c650_CaseRange(503LLU,503LLU,jule::Array<jule::I32,3>({0LL,-56LL,0LL})),_20548c650_CaseRange(504LLU,543LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(544LLU,544LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_20548c650_CaseRange(546LLU,563LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(570LLU,570LLU,jule::Array<jule::I32,3>({0LL,10795LL,0LL})),_20548c650_CaseRange(571LLU,572LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(573LLU,573LLU,jule::Array<jule::I32,3>({0LL,-163LL,0LL})),_20548c650_CaseRange(574LLU,574LLU,jule::Array<jule::I32,3>({0LL,10792LL,0LL})),_20548c650_CaseRange(575LLU,576LLU,jule::Array<jule::I32,3>({10815LL,0LL,10815LL})),_20548c650_CaseRange(577LLU,578LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(579LLU,579LLU,jule::Array<jule::I32,3>({0LL,-195LL,0LL})),_20548c650_CaseRange(580LLU,580LLU,jule::Array<jule::I32,3>({0LL,69LL,0LL})),_20548c650_CaseRange(581LLU,581LLU,jule::Array<jule::I32,3>({0LL,71LL,0LL})),_20548c650_CaseRange(582LLU,591LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(592LLU,592LLU,jule::Array<jule::I32,3>({10783LL,0LL,10783LL})),_20548c650_CaseRange(593LLU,593LLU,jule::Array<jule::I32,3>({10780LL,0LL,10780LL})),_20548c650_CaseRange(594LLU,594LLU,jule::Array<jule::I32,3>({10782LL,0LL,10782LL})),_20548c650_CaseRange(595LLU,595LLU,jule::Array<jule::I32,3>({-210LL,0LL,-210LL})),_20548c650_CaseRange(596LLU,596LLU,jule::Array<jule::I32,3>({-206LL,0LL,-206LL})),_20548c650_CaseRange(598LLU,599LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_20548c650_CaseRange(601LLU,601LLU,jule::Array<jule::I32,3>({-202LL,0LL,-202LL})),_20548c650_CaseRange(603LLU,603LLU,jule::Array<jule::I32,3>({-203LL,0LL,-203LL})),_20548c650_CaseRange(604LLU,604LLU,jule::Array<jule::I32,3>({42319LL,0LL,42319LL})),_20548c650_CaseRange(608LLU,608LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_20548c650_CaseRange(609LLU,609LLU,jule::Array<jule::I32,3>({42315LL,0LL,42315LL})),_20548c650_CaseRange(611LLU,611LLU,jule::Array<jule::I32,3>({-207LL,0LL,-207LL})),_20548c650_CaseRange(613LLU,613LLU,jule::Array<jule::I32,3>({42280LL,0LL,42280LL})),_20548c650_CaseRange(614LLU,614LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_20548c650_CaseRange(616LLU,616LLU,jule::Array<jule::I32,3>({-209LL,0LL,-209LL})),_20548c650_CaseRange(617LLU,617LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_20548c650_CaseRange(618LLU,618LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_20548c650_CaseRange(619LLU,619LLU,jule::Array<jule::I32,3>({10743LL,0LL,10743LL})),_20548c650_CaseRange(620LLU,620LLU,jule::Array<jule::I32,3>({42305LL,0LL,42305LL})),_20548c650_CaseRange(623LLU,623LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_20548c650_CaseRange(625LLU,625LLU,jule::Array<jule::I32,3>({10749LL,0LL,10749LL})),_20548c650_CaseRange(626LLU,626LLU,jule::Array<jule::I32,3>({-213LL,0LL,-213LL})),_20548c650_CaseRange(629LLU,629LLU,jule::Array<jule::I32,3>({-214LL,0LL,-214LL})),_20548c650_CaseRange(637LLU,637LLU,jule::Array<jule::I32,3>({10727LL,0LL,10727LL})),_20548c650_CaseRange(640LLU,640LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_20548c650_CaseRange(642LLU,642LLU,jule::Array<jule::I32,3>({42307LL,0LL,42307LL})),_20548c650_CaseRange(643LLU,643LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_20548c650_CaseRange(647LLU,647LLU,jule::Array<jule::I32,3>({42282LL,0LL,42282LL})),_20548c650_CaseRange(648LLU,648LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_20548c650_CaseRange(649LLU,649LLU,jule::Array<jule::I32,3>({-69LL,0LL,-69LL})),_20548c650_CaseRange(650LLU,651LLU,jule::Array<jule::I32,3>({-217LL,0LL,-217LL})),_20548c650_CaseRange(652LLU,652LLU,jule::Array<jule::I32,3>({-71LL,0LL,-71LL})),_20548c650_CaseRange(658LLU,658LLU,jule::Array<jule::I32,3>({-219LL,0LL,-219LL})),_20548c650_CaseRange(669LLU,669LLU,jule::Array<jule::I32,3>({42261LL,0LL,42261LL})),_20548c650_CaseRange(670LLU,670LLU,jule::Array<jule::I32,3>({42258LL,0LL,42258LL})),_20548c650_CaseRange(837LLU,837LLU,jule::Array<jule::I32,3>({84LL,0LL,84LL})),_20548c650_CaseRange(880LLU,883LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(886LLU,887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(891LLU,893LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_20548c650_CaseRange(895LLU,895LLU,jule::Array<jule::I32,3>({0LL,116LL,0LL})),_20548c650_CaseRange(902LLU,902LLU,jule::Array<jule::I32,3>({0LL,38LL,0LL})),_20548c650_CaseRange(904LLU,906LLU,jule::Array<jule::I32,3>({0LL,37LL,0LL})),_20548c650_CaseRange(908LLU,908LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_20548c650_CaseRange(910LLU,911LLU,jule::Array<jule::I32,3>({0LL,63LL,0LL})),_20548c650_CaseRange(913LLU,929LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_20548c650_CaseRange(931LLU,939LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_20548c650_CaseRange(940LLU,940LLU,jule::Array<jule::I32,3>({-38LL,0LL,-38LL})),_20548c650_CaseRange(941LLU,943LLU,jule::Array<jule::I32,3>({-37LL,0LL,-37LL})),_20548c650_CaseRange(945LLU,961LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_20548c650_CaseRange(962LLU,962LLU,jule::Array<jule::I32,3>({-31LL,0LL,-31LL})),_20548c650_CaseRange(963LLU,971LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_20548c650_CaseRange(972LLU,972LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_20548c650_CaseRange(973LLU,974LLU,jule::Array<jule::I32,3>({-63LL,0LL,-63LL})),_20548c650_CaseRange(975LLU,975LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_20548c650_CaseRange(976LLU,976LLU,jule::Array<jule::I32,3>({-62LL,0LL,-62LL})),_20548c650_CaseRange(977LLU,977LLU,jule::Array<jule::I32,3>({-57LL,0LL,-57LL})),_20548c650_CaseRange(981LLU,981LLU,jule::Array<jule::I32,3>({-47LL,0LL,-47LL})),_20548c650_CaseRange(982LLU,982LLU,jule::Array<jule::I32,3>({-54LL,0LL,-54LL})),_20548c650_CaseRange(983LLU,983LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_20548c650_CaseRange(984LLU,1007LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(1008LLU,1008LLU,jule::Array<jule::I32,3>({-86LL,0LL,-86LL})),_20548c650_CaseRange(1009LLU,1009LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_20548c650_CaseRange(1010LLU,1010LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_20548c650_CaseRange(1011LLU,1011LLU,jule::Array<jule::I32,3>({-116LL,0LL,-116LL})),_20548c650_CaseRange(1012LLU,1012LLU,jule::Array<jule::I32,3>({0LL,-60LL,0LL})),_20548c650_CaseRange(1013LLU,1013LLU,jule::Array<jule::I32,3>({-96LL,0LL,-96LL})),_20548c650_CaseRange(1015LLU,1016LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(1017LLU,1017LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_20548c650_CaseRange(1018LLU,1019LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(1021LLU,1023LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_20548c650_CaseRange(1024LLU,1039LLU,jule::Array<jule::I32,3>({0LL,80LL,0LL})),_20548c650_CaseRange(1040LLU,1071LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_20548c650_CaseRange(1072LLU,1103LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_20548c650_CaseRange(1104LLU,1119LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_20548c650_CaseRange(1120LLU,1153LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(1162LLU,1215LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(1216LLU,1216LLU,jule::Array<jule::I32,3>({0LL,15LL,0LL})),_20548c650_CaseRange(1217LLU,1230LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(1231LLU,1231LLU,jule::Array<jule::I32,3>({-15LL,0LL,-15LL})),_20548c650_CaseRange(1232LLU,1327LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(1329LLU,1366LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_20548c650_CaseRange(1377LLU,1414LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_20548c650_CaseRange(4256LLU,4293LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_20548c650_CaseRange(4295LLU,4295LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_20548c650_CaseRange(4301LLU,4301LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_20548c650_CaseRange(4304LLU,4346LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_20548c650_CaseRange(4349LLU,4351LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_20548c650_CaseRange(5024LLU,5103LLU,jule::Array<jule::I32,3>({0LL,38864LL,0LL})),_20548c650_CaseRange(5104LLU,5109LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_20548c650_CaseRange(5112LLU,5117LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_20548c650_CaseRange(7296LLU,7296LLU,jule::Array<jule::I32,3>({-6254LL,0LL,-6254LL})),_20548c650_CaseRange(7297LLU,7297LLU,jule::Array<jule::I32,3>({-6253LL,0LL,-6253LL})),_20548c650_CaseRange(7298LLU,7298LLU,jule::Array<jule::I32,3>({-6244LL,0LL,-6244LL})),_20548c650_CaseRange(7299LLU,7300LLU,jule::Array<jule::I32,3>({-6242LL,0LL,-6242LL})),_20548c650_CaseRange(7301LLU,7301LLU,jule::Array<jule::I32,3>({-6243LL,0LL,-6243LL})),_20548c650_CaseRange(7302LLU,7302LLU,jule::Array<jule::I32,3>({-6236LL,0LL,-6236LL})),_20548c650_CaseRange(7303LLU,7303LLU,jule::Array<jule::I32,3>({-6181LL,0LL,-6181LL})),_20548c650_CaseRange(7304LLU,7304LLU,jule::Array<jule::I32,3>({35266LL,0LL,35266LL})),_20548c650_CaseRange(7312LLU,7354LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_20548c650_CaseRange(7357LLU,7359LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_20548c650_CaseRange(7545LLU,7545LLU,jule::Array<jule::I32,3>({35332LL,0LL,35332LL})),_20548c650_CaseRange(7549LLU,7549LLU,jule::Array<jule::I32,3>({3814LL,0LL,3814LL})),_20548c650_CaseRange(7566LLU,7566LLU,jule::Array<jule::I32,3>({35384LL,0LL,35384LL})),_20548c650_CaseRange(7680LLU,7829LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(7835LLU,7835LLU,jule::Array<jule::I32,3>({-59LL,0LL,-59LL})),_20548c650_CaseRange(7838LLU,7838LLU,jule::Array<jule::I32,3>({0LL,-7615LL,0LL})),_20548c650_CaseRange(7840LLU,7935LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(7936LLU,7943LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(7944LLU,7951LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(7952LLU,7957LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(7960LLU,7965LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(7968LLU,7975LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(7976LLU,7983LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(7984LLU,7991LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(7992LLU,7999LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(8000LLU,8005LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(8008LLU,8013LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(8017LLU,8017LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(8019LLU,8019LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(8021LLU,8021LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(8023LLU,8023LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(8025LLU,8025LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(8027LLU,8027LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(8029LLU,8029LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(8031LLU,8031LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(8032LLU,8039LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(8040LLU,8047LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(8048LLU,8049LLU,jule::Array<jule::I32,3>({74LL,0LL,74LL})),_20548c650_CaseRange(8050LLU,8053LLU,jule::Array<jule::I32,3>({86LL,0LL,86LL})),_20548c650_CaseRange(8054LLU,8055LLU,jule::Array<jule::I32,3>({100LL,0LL,100LL})),_20548c650_CaseRange(8056LLU,8057LLU,jule::Array<jule::I32,3>({128LL,0LL,128LL})),_20548c650_CaseRange(8058LLU,8059LLU,jule::Array<jule::I32,3>({112LL,0LL,112LL})),_20548c650_CaseRange(8060LLU,8061LLU,jule::Array<jule::I32,3>({126LL,0LL,126LL})),_20548c650_CaseRange(8064LLU,8071LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(8072LLU,8079LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(8080LLU,8087LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(8088LLU,8095LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(8096LLU,8103LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(8104LLU,8111LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(8112LLU,8113LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(8115LLU,8115LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_20548c650_CaseRange(8120LLU,8121LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(8122LLU,8123LLU,jule::Array<jule::I32,3>({0LL,-74LL,0LL})),_20548c650_CaseRange(8124LLU,8124LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_20548c650_CaseRange(8126LLU,8126LLU,jule::Array<jule::I32,3>({-7205LL,0LL,-7205LL})),_20548c650_CaseRange(8131LLU,8131LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_20548c650_CaseRange(8136LLU,8139LLU,jule::Array<jule::I32,3>({0LL,-86LL,0LL})),_20548c650_CaseRange(8140LLU,8140LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_20548c650_CaseRange(8144LLU,8145LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(8152LLU,8153LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(8154LLU,8155LLU,jule::Array<jule::I32,3>({0LL,-100LL,0LL})),_20548c650_CaseRange(8160LLU,8161LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_20548c650_CaseRange(8165LLU,8165LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_20548c650_CaseRange(8168LLU,8169LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_20548c650_CaseRange(8170LLU,8171LLU,jule::Array<jule::I32,3>({0LL,-112LL,0LL})),_20548c650_CaseRange(8172LLU,8172LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_20548c650_CaseRange(8179LLU,8179LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_20548c650_CaseRange(8184LLU,8185LLU,jule::Array<jule::I32,3>({0LL,-128LL,0LL})),_20548c650_CaseRange(8186LLU,8187LLU,jule::Array<jule::I32,3>({0LL,-126LL,0LL})),_20548c650_CaseRange(8188LLU,8188LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_20548c650_CaseRange(8486LLU,8486LLU,jule::Array<jule::I32,3>({0LL,-7517LL,0LL})),_20548c650_CaseRange(8490LLU,8490LLU,jule::Array<jule::I32,3>({0LL,-8383LL,0LL})),_20548c650_CaseRange(8491LLU,8491LLU,jule::Array<jule::I32,3>({0LL,-8262LL,0LL})),_20548c650_CaseRange(8498LLU,8498LLU,jule::Array<jule::I32,3>({0LL,28LL,0LL})),_20548c650_CaseRange(8526LLU,8526LLU,jule::Array<jule::I32,3>({-28LL,0LL,-28LL})),_20548c650_CaseRange(8544LLU,8559LLU,jule::Array<jule::I32,3>({0LL,16LL,0LL})),_20548c650_CaseRange(8560LLU,8575LLU,jule::Array<jule::I32,3>({-16LL,0LL,-16LL})),_20548c650_CaseRange(8579LLU,8580LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(9398LLU,9423LLU,jule::Array<jule::I32,3>({0LL,26LL,0LL})),_20548c650_CaseRange(9424LLU,9449LLU,jule::Array<jule::I32,3>({-26LL,0LL,-26LL})),_20548c650_CaseRange(11264LLU,11311LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_20548c650_CaseRange(11312LLU,11359LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_20548c650_CaseRange(11360LLU,11361LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(11362LLU,11362LLU,jule::Array<jule::I32,3>({0LL,-10743LL,0LL})),_20548c650_CaseRange(11363LLU,11363LLU,jule::Array<jule::I32,3>({0LL,-3814LL,0LL})),_20548c650_CaseRange(11364LLU,11364LLU,jule::Array<jule::I32,3>({0LL,-10727LL,0LL})),_20548c650_CaseRange(11365LLU,11365LLU,jule::Array<jule::I32,3>({-10795LL,0LL,-10795LL})),_20548c650_CaseRange(11366LLU,11366LLU,jule::Array<jule::I32,3>({-10792LL,0LL,-10792LL})),_20548c650_CaseRange(11367LLU,11372LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(11373LLU,11373LLU,jule::Array<jule::I32,3>({0LL,-10780LL,0LL})),_20548c650_CaseRange(11374LLU,11374LLU,jule::Array<jule::I32,3>({0LL,-10749LL,0LL})),_20548c650_CaseRange(11375LLU,11375LLU,jule::Array<jule::I32,3>({0LL,-10783LL,0LL})),_20548c650_CaseRange(11376LLU,11376LLU,jule::Array<jule::I32,3>({0LL,-10782LL,0LL})),_20548c650_CaseRange(11378LLU,11379LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(11381LLU,11382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(11390LLU,11391LLU,jule::Array<jule::I32,3>({0LL,-10815LL,0LL})),_20548c650_CaseRange(11392LLU,11491LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(11499LLU,11502LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(11506LLU,11507LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(11520LLU,11557LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_20548c650_CaseRange(11559LLU,11559LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_20548c650_CaseRange(11565LLU,11565LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_20548c650_CaseRange(42560LLU,42605LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(42624LLU,42651LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(42786LLU,42799LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(42802LLU,42863LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(42873LLU,42876LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(42877LLU,42877LLU,jule::Array<jule::I32,3>({0LL,-35332LL,0LL})),_20548c650_CaseRange(42878LLU,42887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(42891LLU,42892LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(42893LLU,42893LLU,jule::Array<jule::I32,3>({0LL,-42280LL,0LL})),_20548c650_CaseRange(42896LLU,42899LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(42900LLU,42900LLU,jule::Array<jule::I32,3>({48LL,0LL,48LL})),_20548c650_CaseRange(42902LLU,42921LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(42922LLU,42922LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_20548c650_CaseRange(42923LLU,42923LLU,jule::Array<jule::I32,3>({0LL,-42319LL,0LL})),_20548c650_CaseRange(42924LLU,42924LLU,jule::Array<jule::I32,3>({0LL,-42315LL,0LL})),_20548c650_CaseRange(42925LLU,42925LLU,jule::Array<jule::I32,3>({0LL,-42305LL,0LL})),_20548c650_CaseRange(42926LLU,42926LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_20548c650_CaseRange(42928LLU,42928LLU,jule::Array<jule::I32,3>({0LL,-42258LL,0LL})),_20548c650_CaseRange(42929LLU,42929LLU,jule::Array<jule::I32,3>({0LL,-42282LL,0LL})),_20548c650_CaseRange(42930LLU,42930LLU,jule::Array<jule::I32,3>({0LL,-42261LL,0LL})),_20548c650_CaseRange(42931LLU,42931LLU,jule::Array<jule::I32,3>({0LL,928LL,0LL})),_20548c650_CaseRange(42932LLU,42947LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(42948LLU,42948LLU,jule::Array<jule::I32,3>({0LL,-48LL,0LL})),_20548c650_CaseRange(42949LLU,42949LLU,jule::Array<jule::I32,3>({0LL,-42307LL,0LL})),_20548c650_CaseRange(42950LLU,42950LLU,jule::Array<jule::I32,3>({0LL,-35384LL,0LL})),_20548c650_CaseRange(42951LLU,42954LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(42960LLU,42961LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(42966LLU,42969LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(42997LLU,42998LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_20548c650_CaseRange(43859LLU,43859LLU,jule::Array<jule::I32,3>({-928LL,0LL,-928LL})),_20548c650_CaseRange(43888LLU,43967LLU,jule::Array<jule::I32,3>({-38864LL,0LL,-38864LL})),_20548c650_CaseRange(65313LLU,65338LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_20548c650_CaseRange(65345LLU,65370LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_20548c650_CaseRange(66560LLU,66599LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_20548c650_CaseRange(66600LLU,66639LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_20548c650_CaseRange(66736LLU,66771LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_20548c650_CaseRange(66776LLU,66811LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_20548c650_CaseRange(66928LLU,66938LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_20548c650_CaseRange(66940LLU,66954LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_20548c650_CaseRange(66956LLU,66962LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_20548c650_CaseRange(66964LLU,66965LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_20548c650_CaseRange(66967LLU,66977LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_20548c650_CaseRange(66979LLU,66993LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_20548c650_CaseRange(66995LLU,67001LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_20548c650_CaseRange(67003LLU,67004LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_20548c650_CaseRange(68736LLU,68786LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_20548c650_CaseRange(68800LLU,68850LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_20548c650_CaseRange(71840LLU,71871LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_20548c650_CaseRange(71872LLU,71903LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_20548c650_CaseRange(93760LLU,93791LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_20548c650_CaseRange(93792LLU,93823LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_20548c650_CaseRange(125184LLU,125217LLU,jule::Array<jule::I32,3>({0LL,34LL,0LL})),_20548c650_CaseRange(125218LLU,125251LLU,jule::Array<jule::I32,3>({-34LL,0LL,-34LL}))});
static jule::Slice<_20548c650_CaseRange> _20548cac3_CASE_RANGES = _20548cac3__CASE_RANGES;
static jule::Array<jule::U8,256> _2062e3ad2_FIRST = jule::Array<jule::U8,256>({});
static jule::Array<_2062e3ad2_accept_range,16> _2062e3ad2_ACCEPT_RANGES = jule::Array<_2062e3ad2_accept_range,16>({_2062e3ad2_accept_range(128LLU,191LLU),_2062e3ad2_accept_range(160LLU,191LLU),_2062e3ad2_accept_range(128LLU,159LLU),_2062e3ad2_accept_range(144LLU,191LLU),_2062e3ad2_accept_range(128LLU,143LLU)});
static jule::Array<jule::I32,33> _20542560a_PUNCTS = jule::Array<jule::I32,33>({'!','#','$',',','.','\'','\"',':',';','<','>','=','?','-','+','*','(',')','[',']','{','}','%','&','/','\\','@','^','_','`','|','~',166LL});
static jule::Array<jule::I32,5> _20542560a_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _20542560a_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,13> _20542560a_BIN_OPS = jule::Array<jule::Str,13>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("!", 1),jule::Str("&&", 2),jule::Str("||", 2)});
static jule::Array<jule::Str,2> _20542560a_WEAK_OPS = jule::Array<jule::Str,2>({jule::Str("...", 3),jule::Str(":", 1)});
static jule::Array<jule::Str,2> _20542560a_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _20542560a_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_20547ded2_KindPair,46> _20547ded2_KEYWORDS = jule::Array<_20547ded2_KindPair,46>({_20547ded2_KindPair(jule::Str("i8", 2),1LLU),_20547ded2_KindPair(jule::Str("i16", 3),1LLU),_20547ded2_KindPair(jule::Str("i32", 3),1LLU),_20547ded2_KindPair(jule::Str("i64", 3),1LLU),_20547ded2_KindPair(jule::Str("u8", 2),1LLU),_20547ded2_KindPair(jule::Str("u16", 3),1LLU),_20547ded2_KindPair(jule::Str("u32", 3),1LLU),_20547ded2_KindPair(jule::Str("u64", 3),1LLU),_20547ded2_KindPair(jule::Str("f32", 3),1LLU),_20547ded2_KindPair(jule::Str("f64", 3),1LLU),_20547ded2_KindPair(jule::Str("uint", 4),1LLU),_20547ded2_KindPair(jule::Str("int", 3),1LLU),_20547ded2_KindPair(jule::Str("uintptr", 7),1LLU),_20547ded2_KindPair(jule::Str("bool", 4),1LLU),_20547ded2_KindPair(jule::Str("str", 3),1LLU),_20547ded2_KindPair(jule::Str("any", 3),1LLU),_20547ded2_KindPair(jule::Str("true", 4),6LLU),_20547ded2_KindPair(jule::Str("false", 5),6LLU),_20547ded2_KindPair(jule::Str("nil", 3),6LLU),_20547ded2_KindPair(jule::Str("const", 5),9LLU),_20547ded2_KindPair(jule::Str("ret", 3),4LLU),_20547ded2_KindPair(jule::Str("type", 4),10LLU),_20547ded2_KindPair(jule::Str("for", 3),12LLU),_20547ded2_KindPair(jule::Str("break", 5),13LLU),_20547ded2_KindPair(jule::Str("continue", 8),14LLU),_20547ded2_KindPair(jule::Str("in", 2),15LLU),_20547ded2_KindPair(jule::Str("if", 2),16LLU),_20547ded2_KindPair(jule::Str("else", 4),17LLU),_20547ded2_KindPair(jule::Str("use", 3),19LLU),_20547ded2_KindPair(jule::Str("pub", 3),21LLU),_20547ded2_KindPair(jule::Str("goto", 4),22LLU),_20547ded2_KindPair(jule::Str("enum", 4),24LLU),_20547ded2_KindPair(jule::Str("struct", 6),25LLU),_20547ded2_KindPair(jule::Str("co", 2),26LLU),_20547ded2_KindPair(jule::Str("match", 5),27LLU),_20547ded2_KindPair(jule::Str("self", 4),28LLU),_20547ded2_KindPair(jule::Str("trait", 5),29LLU),_20547ded2_KindPair(jule::Str("impl", 4),30LLU),_20547ded2_KindPair(jule::Str("cpp", 3),31LLU),_20547ded2_KindPair(jule::Str("fall", 4),32LLU),_20547ded2_KindPair(jule::Str("fn", 2),33LLU),_20547ded2_KindPair(jule::Str("let", 3),34LLU),_20547ded2_KindPair(jule::Str("unsafe", 6),35LLU),_20547ded2_KindPair(jule::Str("mut", 3),36LLU),_20547ded2_KindPair(jule::Str("defer", 5),37LLU),_20547ded2_KindPair(jule::Str("static", 6),38LLU)});
static jule::Array<_20547ded2_KindPair,38> _20547ded2_BASIC_OPS = jule::Array<_20547ded2_KindPair,38>({_20547ded2_KindPair(jule::Str("::", 2),23LLU),_20547ded2_KindPair(jule::Str(":", 1),11LLU),_20547ded2_KindPair(jule::Str(";", 1),5LLU),_20547ded2_KindPair(jule::Str(",", 1),8LLU),_20547ded2_KindPair(jule::Str("...", 3),7LLU),_20547ded2_KindPair(jule::Str(".", 1),20LLU),_20547ded2_KindPair(jule::Str("+=", 2),7LLU),_20547ded2_KindPair(jule::Str("-=", 2),7LLU),_20547ded2_KindPair(jule::Str("*=", 2),7LLU),_20547ded2_KindPair(jule::Str("/=", 2),7LLU),_20547ded2_KindPair(jule::Str("%=", 2),7LLU),_20547ded2_KindPair(jule::Str("<<=", 3),7LLU),_20547ded2_KindPair(jule::Str(">>=", 3),7LLU),_20547ded2_KindPair(jule::Str("^=", 2),7LLU),_20547ded2_KindPair(jule::Str("&=", 2),7LLU),_20547ded2_KindPair(jule::Str("|=", 2),7LLU),_20547ded2_KindPair(jule::Str("==", 2),7LLU),_20547ded2_KindPair(jule::Str("!=", 2),7LLU),_20547ded2_KindPair(jule::Str(">=", 2),7LLU),_20547ded2_KindPair(jule::Str("<=", 2),7LLU),_20547ded2_KindPair(jule::Str("&&", 2),7LLU),_20547ded2_KindPair(jule::Str("||", 2),7LLU),_20547ded2_KindPair(jule::Str("<<", 2),7LLU),_20547ded2_KindPair(jule::Str(">>", 2),7LLU),_20547ded2_KindPair(jule::Str("++", 2),7LLU),_20547ded2_KindPair(jule::Str("--", 2),7LLU),_20547ded2_KindPair(jule::Str("+", 1),7LLU),_20547ded2_KindPair(jule::Str("-", 1),7LLU),_20547ded2_KindPair(jule::Str("*", 1),7LLU),_20547ded2_KindPair(jule::Str("/", 1),7LLU),_20547ded2_KindPair(jule::Str("%", 1),7LLU),_20547ded2_KindPair(jule::Str("&", 1),7LLU),_20547ded2_KindPair(jule::Str("|", 1),7LLU),_20547ded2_KindPair(jule::Str("^", 1),7LLU),_20547ded2_KindPair(jule::Str("!", 1),7LLU),_20547ded2_KindPair(jule::Str("<", 1),7LLU),_20547ded2_KindPair(jule::Str(">", 1),7LLU),_20547ded2_KindPair(jule::Str("=", 1),7LLU)});
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_OUT = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns());
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_OUTLN = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns());
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_NEW = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns());
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_DROP = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns());
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_PANIC = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns());
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_MAKE = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns());
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_APPEND = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns());
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_RECOVER = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns());
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_CLONE = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns());
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns());
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns());
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns());
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_REAL = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>(),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_2053ddd54_FnIns> _206c94dac_BUILTIN_FN_COPY = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>(),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("int", 3)))),jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_1da411226_TypeAlias> _206c94dac_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_1da411226_TypeAlias>(new( std::nothrow ) _1da411226_TypeAlias(jule::Ref<_2053703bd_ScopeTree>(),true,jule::Bool(),jule::Bool(),_20542560a_Token(),jule::Str(),jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_1da411226_TypeAlias> _206c94dac_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_1da411226_TypeAlias>(new( std::nothrow ) _1da411226_TypeAlias(jule::Ref<_2053703bd_ScopeTree>(),true,jule::Bool(),jule::Bool(),_20542560a_Token(),jule::Str(),jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_2065895c5_Trait> _206c94dac_BUILTIN_TRAIT_ERROR = jule::new_struct<_2065895c5_Trait>(new( std::nothrow ) _2065895c5_Trait(_20542560a_Token(),jule::Str("Error", 5),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_2053ddd54_Fn>>({jule::new_struct<_2053ddd54_Fn>(new( std::nothrow ) _2053ddd54_Fn(jule::Ref<_1d9dc7517_Sema>(),_20542560a_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("error", 5),jule::Slice<jule::Ref<_2053703bd_Directive>>(),jule::Str(),jule::Ref<_2053703bd_ScopeTree>(),jule::Slice<jule::Ref<_2053703bd_GenericDecl>>(),jule::new_struct<_2053ddd54_RetType>(new( std::nothrow ) _2053ddd54_RetType(jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_20542560a_Token(),jule::Any(jule::new_struct<_2053703bd_IdentTypeDecl>(new( std::nothrow ) _2053703bd_IdentTypeDecl(_20542560a_Token(),jule::Str("str", 3),jule::Bool(),jule::Slice<jule::Ref<_2053703bd_TypeDecl>>()))))),jule::Ref<_1da411226_TypeKind>())),jule::Slice<_20542560a_Token>())),jule::Slice<jule::Ref<_2053ddd54_Param>>({jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_2053cdc01_Struct>(),jule::Slice<jule::Ref<_2053ddd54_FnIns>>()))}),jule::Slice<jule::Ref<_2053cdc01_Struct>>()));
static jule::Ref<_2065895c5_Trait> _206c94dac_BUILTIN_TRAIT_DISPOSE = jule::new_struct<_2065895c5_Trait>(new( std::nothrow ) _2065895c5_Trait(_20542560a_Token(),jule::Str("Dispose", 7),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_2053ddd54_Fn>>({jule::new_struct<_2053ddd54_Fn>(new( std::nothrow ) _2053ddd54_Fn(jule::Ref<_1d9dc7517_Sema>(),_20542560a_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("dispose", 7),jule::Slice<jule::Ref<_2053703bd_Directive>>(),jule::Str(),jule::Ref<_2053703bd_ScopeTree>(),jule::Slice<jule::Ref<_2053703bd_GenericDecl>>(),jule::Ref<_2053ddd54_RetType>(),jule::Slice<jule::Ref<_2053ddd54_Param>>({jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_2053cdc01_Struct>(),jule::Slice<jule::Ref<_2053ddd54_FnIns>>()))}),jule::Slice<jule::Ref<_2053cdc01_Struct>>()));
static jule::Slice<jule::Str> _204b8e12c_FLAGS = nullptr;
static jule::Slice<jule::Any> _20382b5b2_deads = nullptr;
static jule::Slice<jule::Any> _20382b5b2_checking = nullptr;
static jule::Any _20382b5b2_current = jule::Any(nullptr);
static jule::Any _20382b5b2_main_current = jule::Any(nullptr);
static jule::U64 _1a8e8cc29_INDENT = 0LL;

inline void _203731143_AnsiEscape::_static_method_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void _203731143_AnsiEscape::_static_method_print(jule::Str _2021_escape,jule::Str _2034_text) {
	jule::out(_2021_escape);
	jule::out(_2034_text);
	_203731143_AnsiEscape::_static_method_reset();
}







std::ostream &operator<<(std::ostream &_Stream, const _203731143_AnsiEscape &_Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void _203731143_Logger::_static_method_log_flat(_20377124e_Log& _3125_l) {
	jule::outln(_3125_l._field_text);
}



inline void _203731143_Logger::_static_method_log_error(_20377124e_Log& _3426_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_3426_l._field_text);
	_203731143_AnsiEscape::_static_method_reset();
	jule::out(jule::Str("\n  --> ", 7));
	jule::out(_3426_l._field_path);
	jule::out(jule::Str(":", 1));
	jule::out(_2049bd7b9_itoa(_3426_l._field_row));
	jule::out(jule::Str(":", 1));
	jule::out(_2049bd7b9_itoa(_3426_l._field_column));
	if (_3426_l._field_line.len() != 0LL) {
		jule::Str _4721_line = _3426_l._field_line.ltrim(jule::Str("\r\n\v\b ", 5));
		jule::I64 _4821_offset = (_3426_l._field_line.len() - _4721_line.len()) + 1LL;
		jule::I64 _4921_old_len = _4721_line.len();
		_4721_line=_4721_line.ltrim(jule::Str("\t", 1));
		if (_4921_old_len != _4721_line.len()) {
			_4821_offset+=static_cast<jule::I64>((_4921_old_len - _4721_line.len()) * 8LL);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _5517_row = _2049bd7b9_itoa(_3426_l._field_row);
		jule::out(_5517_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_4721_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_20373171a_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5517_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_20373171a_str_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_3426_l._field_column - _4821_offset)));
		jule::out(jule::Str("^", 1));
		if (_3426_l._field_suggestion.len() != 0LL) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_20373171a_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5517_row.len())));
			jule::out(jule::Str(" | ", 3));
			_203731143_AnsiEscape::_static_method_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_3426_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void _203731143_Logger::_static_method_log(_20377124e_Log& _7620_l) {
	{
		auto _match_expr{ _7620_l._field_kind };
		if (!((0LLU) == _match_expr)) { goto _case_end_4403028576; }
		_case_begin_4403028576:;
		{
			_203731143_Logger::_static_method_log_flat(_7620_l);
		}
		goto _match_end_4403027152;
		_case_end_4403028576:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4403028688; }
		_case_begin_4403028688:;
		{
			_203731143_Logger::_static_method_log_error(_7620_l);
		}
		goto _match_end_4403027152;
		_case_end_4403028688:;
		_match_end_4403027152:;
	}
}



inline void _203731143_Logger::_static_method_print_logs(jule::Slice<_20377124e_Log>& _8427_logs) {
	{
		auto _range_expr = _8427_logs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_20377124e_Log _203731143_l = *_range_begin;
			_iter_begin_4403032912:;
			{
				_203731143_Logger::_static_method_log(_203731143_l);
			}
			_iter_next_4403032912:;
			++_range_begin;
			if (_range_begin != _range_end) { _203731143_l = *_range_begin; goto _iter_begin_4403032912; }
			_iter_end_4403032912:;
		}
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_2049bd7b9_itoa(static_cast<jule::I64>(_8427_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, const _203731143_Logger &_Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _203896264_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[static_cast<jule::Int>(_5324_i)];
	}
	return (*this)._field_path[static_cast<jule::Int>(_5324_i)];
}



inline void _203896264_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[static_cast<jule::Int>((*this)._field_w)] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_path.len())));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,static_cast<jule::Int>((*this)._field_w))));
	}
	(*this)._field_buff[static_cast<jule::Int>((*this)._field_w)]=_6025_c;
	((*this)._field_w)++;
}



inline jule::Str _203896264_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len + (*this)._field_w));
	}
	return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len)) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,static_cast<jule::Int>((*this)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, const _203896264_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _20377124e_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20532e338_bits_error::_method_error(void) {
	return jule::Str("runtime error: ", 15) + (*this)._field_message;
}







std::ostream &operator<<(std::ostream &_Stream, const _20532e338_bits_error &_Src) {
	_Stream << "bits_error{";
	_Stream << "message:" << _Src._field_message;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _203830374_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _203830374_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2047bec19_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2047bec19_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '+'))) { goto _case_end_4379685440; }
		_case_begin_4379685440:;
		{
			(_23017_i)++;
		}
		goto _match_end_4379686272;
		_case_end_4379685440:;
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '-'))) { goto _case_end_4379685888; }
		_case_begin_4379685888:;
		{
			(*this)._field_neg=true;
			(_23017_i)++;
		}
		goto _match_end_4379686272;
		_case_end_4379685888:;
		_match_end_4379686272:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	_iter_begin_4379685088:;
	if (!(_23017_i < _22922_s.len())) { goto _iter_end_4379685088; }
	{
		{
			if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '.'))) { goto _case_end_4379693456; }
			_case_begin_4379693456:;
			{
				if (_24717_sawdot) {
					return _22932_ok;
				}
				_24717_sawdot=true;
				(*this)._field_dp=(*this)._field_nd;
				goto _iter_next_4379685088;
			}
			goto _match_end_4379693216;
			_case_end_4379693456:;
			if (!((('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _case_end_4379693584; }
			_case_begin_4379693584:;
			{
				_24817_sawdigits=true;
				if ((_22922_s[static_cast<jule::Int>(_23017_i)] == '0') && ((*this)._field_nd == 0LL)) {
					((*this)._field_dp)--;
					goto _iter_next_4379685088;
				}
				if ((*this)._field_nd < 800LL) {
					(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_22922_s[static_cast<jule::Int>(_23017_i)];
					((*this)._field_nd)++;
				} else if (_22922_s[static_cast<jule::Int>(_23017_i)] != '0') {
					(*this)._field_trunc=true;
				}
				goto _iter_next_4379685088;
			}
			goto _match_end_4379693216;
			_case_end_4379693584:;
			_match_end_4379693216:;
		}
		goto _iter_end_4379685088;
	}
	_iter_next_4379685088:;
	(_23017_i)++;
	goto _iter_begin_4379685088;
	_iter_end_4379685088:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_20383c161_lower(_22922_s[static_cast<jule::Int>(_23017_i)]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[static_cast<jule::Int>(_23017_i)] == '+') {
			(_23017_i)++;
		} else if (_22922_s[static_cast<jule::Int>(_23017_i)] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[static_cast<jule::Int>(_23017_i)] < '0')) || (_22922_s[static_cast<jule::Int>(_23017_i)] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		_iter_begin_4379718784:;
		if (!((_23017_i < _22922_s.len()) && (('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _iter_end_4379718784; }
		{
			if (_30121_e < 10000LL) {
				_30121_e=static_cast<jule::Int>(((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[static_cast<jule::Int>(_23017_i)])) - '0');
			}
		}
		_iter_next_4379718784:;
		(_23017_i)++;
		goto _iter_begin_4379718784;
		_iter_end_4379718784:;
		(*this)._field_dp+=static_cast<jule::Int>(_30121_e * _29121_esign);
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



inline std::tuple<jule::U64,jule::Bool> _2047bec19_Decimal::_method_float_bits(_203830374_FloatInfo& _31830_flt) {
	jule::U64 _31848_b = jule::U64();
	jule::Bool _31856_overflow = jule::Bool();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LL;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	_iter_begin_4379743984:;
	if (!((*this)._field_dp > 0LL)) { goto _iter_end_4379743984; }
	{
		jule::Int _34521_n = 0LL;
		if ((*this)._field_dp >= _20384ee76_POWTAB.len()) {
			_34521_n=27LL;
		} else {
			_34521_n=_20384ee76_POWTAB[static_cast<jule::Int>((*this)._field_dp)];
		}
		(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
		_31917_exp+=_34521_n;
	}
	_iter_next_4379743984:;
	goto _iter_begin_4379743984;
	_iter_end_4379743984:;
	_iter_begin_4379746096:;
	if (!(((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d[0LL] < '5')))) { goto _iter_end_4379746096; }
	{
		jule::Int _35521_n = 0LL;
		if ((-((*this)._field_dp)) >= _20384ee76_POWTAB.len()) {
			_35521_n=27LL;
		} else {
			_35521_n=_20384ee76_POWTAB[static_cast<jule::Int>((-((*this)._field_dp)))];
		}
		(*this)._method_shift(_35521_n);
		_31917_exp-=_35521_n;
	}
	_iter_next_4379746096:;
	goto _iter_begin_4379746096;
	_iter_end_4379746096:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + _31830_flt._field_bias);
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & ((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	_31856_overflow = _31856_overflow;
	return std::make_tuple(_31848_b,_31856_overflow);
}



inline void _2047bec19_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>({});
	jule::Int _15617_n = 0LL;
	_iter_begin_4379786608:;
	if (!(_15229_v > 0LL)) { goto _iter_end_4379786608; }
	{
		jule::U64 _15817_v1 = jule::div(_15229_v,10LL);
		_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
		_15317_buf[static_cast<jule::Int>(_15617_n)]=static_cast<jule::U8>(_15229_v + '0');
		(_15617_n)++;
		_15229_v=_15817_v1;
	}
	_iter_next_4379786608:;
	goto _iter_begin_4379786608;
	_iter_end_4379786608:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	_iter_begin_4379787312:;
	if (!(_15617_n >= 0LL)) { goto _iter_end_4379787312; }
	{
		(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_15317_buf[static_cast<jule::Int>(_15617_n)];
		((*this)._field_nd)++;
	}
	_iter_next_4379787312:;
	(_15617_n)--;
	goto _iter_begin_4379787312;
	_iter_end_4379787312:;
	(*this)._field_dp=(*this)._field_nd;
	_2047bec19_trim((*this));
}



inline void _2047bec19_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if (!(((*this)._field_nd == 0LL))) { goto _case_end_4379798912; }
		goto _match_end_4379798672;
		_case_end_4379798912:;
		if (!((_17728_k > 0LL))) { goto _case_end_4379799040; }
		_case_begin_4379799040:;
		{
			_iter_begin_4379800352:;
			if (!(_17728_k > 60LL)) { goto _iter_end_4379800352; }
			{
				_2047bec19_left_shift((*this),60LLU);
				_17728_k-=60LL;
			}
			_iter_next_4379800352:;
			goto _iter_begin_4379800352;
			_iter_end_4379800352:;
			_2047bec19_left_shift((*this),static_cast<jule::Uint>(_17728_k));
		}
		goto _match_end_4379798672;
		_case_end_4379799040:;
		if (!((_17728_k < 0LL))) { goto _case_end_4379799168; }
		_case_begin_4379799168:;
		{
			_iter_begin_4379799344:;
			if (!(_17728_k < -60LL)) { goto _iter_end_4379799344; }
			{
				_2047bec19_right_shift((*this),60LLU);
				_17728_k+=60LL;
			}
			_iter_next_4379799344:;
			goto _iter_begin_4379799344;
			_iter_end_4379799344:;
			_2047bec19_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
		}
		goto _match_end_4379798672;
		_case_end_4379799168:;
		_match_end_4379798672:;
	}
}



inline void _2047bec19_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_2047bec19_trim((*this));
}



inline void _2047bec19_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	_iter_begin_4379812144:;
	if (!(_21217_i >= 0LL)) { goto _iter_end_4379812144; }
	{
		jule::U8 _21417_c = (*this)._field_d[static_cast<jule::Int>(_21217_i)];
		if (_21417_c < '9') {
			((*this)._field_d[static_cast<jule::Int>(_21217_i)])++;
			(*this)._field_nd=static_cast<jule::Int>(_21217_i + 1LL);
			return;
		}
	}
	_iter_next_4379812144:;
	(_21217_i)--;
	goto _iter_begin_4379812144;
	_iter_end_4379812144:;
	(*this)._field_d[0LL]='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _2047bec19_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_2047bec19_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _2047bec19_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LL;
	_iter_begin_4379821904:;
	if (!((_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd))) { goto _iter_end_4379821904; }
	{
		_25117_n=static_cast<jule::U64>((_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[static_cast<jule::Int>(_25017_i)] - '0'));
	}
	_iter_next_4379821904:;
	(_25017_i)++;
	goto _iter_begin_4379821904;
	_iter_end_4379821904:;
	_iter_begin_4379831200:;
	if (!(_25017_i < (*this)._field_dp)) { goto _iter_end_4379831200; }
	{
		_25117_n*=10LL;
	}
	_iter_next_4379831200:;
	(_25017_i)++;
	goto _iter_begin_4379831200;
	_iter_end_4379831200:;
	if (_2047bec19_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _2047bec19_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _20522b4aa_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Int,jule::Int> _20522c3ce_File::_method_write(jule::Slice<jule::U8> _1528_buff) {
	jule::Int _1544_n = jule::Int();
	if (_1528_buff.len() == 0LL) {
		_1544_n = 0LL;
		return std::make_tuple(_1544_n,0LLU);
	}
	_1544_n=static_cast<jule::Int>(static_cast<jule::Int>(_203997e37_write(static_cast<jule::Int>((*this)._field_handle),(&(_1528_buff[0LL])),static_cast<jule::Uint>(_1528_buff.len()))));
	if (_1544_n == -1LL) {
		_1544_n = 0LL;
		return std::make_tuple(_1544_n,_2050be293_get_last_fs_error());
	}
	_1544_n = _1544_n;
	return std::make_tuple(_1544_n,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _20522c3ce_File::_method_read(jule::Slice<jule::U8> _3731_buff) {
	jule::Int _3747_n = jule::Int();
	if (_3731_buff.len() == 0LL) {
		_3747_n = 0LL;
		return std::make_tuple(_3747_n,0LLU);
	}
	_3747_n=static_cast<jule::Int>(static_cast<jule::Int>(_203997e37_read(static_cast<jule::Int>((*this)._field_handle),(&(_3731_buff[0LL])),static_cast<jule::Uint>(_3731_buff.len()))));
	if (_3747_n == -1LL) {
		_3747_n=0LL;
		_3747_n = _3747_n;
		return std::make_tuple(_3747_n,_2050be293_get_last_fs_error());
	}
	_3747_n = _3747_n;
	return std::make_tuple(_3747_n,0LLU);
}



inline jule::Ref<_20522c3ce_File> _20522c3ce_File::_static_method_new(jule::Uintptr _4523_handle) {
	return jule::new_struct<_20522c3ce_File>(new( std::nothrow ) _20522c3ce_File(_4523_handle));
}



inline std::tuple<jule::I64,jule::Int> _20522c3ce_File::_method_seek(jule::I64 _6027_offset,jule::Int _6040_origin) {
	jule::I64 _6113_pos = _203997e37_seek(static_cast<jule::Int>((*this)._field_handle),_6027_offset,static_cast<jule::Int>(_6040_origin));
	return std::make_tuple(_6113_pos,0LLU);
}



inline jule::Int _20522c3ce_File::_method_close(void) {
	if (_203997e37_close(static_cast<jule::Int>((*this)._field_handle)) == -1LL) {
		return _2050be293_get_last_fs_error();
	}
	return 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _20522c3ce_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20537ab26_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



inline jule::Bool _20537ab26_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _20537ab26_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _20548c650_FoldPair &_Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _20548c650_CaseRange &_Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _20548c650_Range16 &_Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _20548c650_Range32 &_Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _20548c650_RangeTable &_Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2062e3ad2_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _20542560a_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return -1LL;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str(">>", 2)) == _match_expr || (jule::Str("<<", 2)) == _match_expr || (jule::Str("&", 1)) == _match_expr)) { goto _case_end_4385231424; }
		_case_begin_4385231424:;
		{
			return 5LL;
		}
		goto _match_end_4385228416;
		_case_end_4385231424:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4385231536; }
		_case_begin_4385231536:;
		{
			return 4LL;
		}
		goto _match_end_4385228416;
		_case_end_4385231536:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("=", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4385231712; }
		_case_begin_4385231712:;
		{
			return 3LL;
		}
		goto _match_end_4385228416;
		_case_end_4385231712:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4385231824; }
		_case_begin_4385231824:;
		{
			return 2LL;
		}
		goto _match_end_4385228416;
		_case_end_4385231824:;
		if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4385231936; }
		_case_begin_4385231936:;
		{
			return 1LL;
		}
		goto _match_end_4385228416;
		_case_end_4385231936:;
		_case_begin_4385229536:;
		{
			return -1LL;
		}
		goto _match_end_4385228416;
		_case_end_4385229536:;
		_match_end_4385228416:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _20542560a_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053bdb25_File::_method_is_ok(void) {
	jule::Int _1917_err;
	std::tie(std::ignore,_1917_err) = _205127c47_stat((*this)._field__path);
	return _1917_err == 0LLU;
}



inline void _2053bdb25_File::_method_fill(jule::Slice<jule::U8> _2431_data) {
	(*this)._field_data=_2431_data;
}



inline jule::Str _2053bdb25_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _2053bdb25_File::_method_dir(void) {
	return _203896264_dir((*this)._field__path);
}



inline jule::Str _2053bdb25_File::_method_name(void) {
	return _203896264_base((*this)._field__path);
}



inline jule::Uintptr _2053bdb25_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



inline jule::Slice<_20542560a_Token> _2053bdb25_File::_method_tokens(void) {
	return (*this)._field__tokens;
}



inline jule::Str _2053bdb25_File::_method_get_row(jule::Int _4426_row) {
	jule::Int _4517_n = 0LL;
	jule::Int _4617_line_start = 0LL;
	jule::Int _4717_i = 0LL;
	_iter_begin_4385254048:;
	if (!(_4717_i < (*this)._field_data.len())) { goto _iter_end_4385254048; }
	{
		if ((*this)._field_data[static_cast<jule::Int>(_4717_i)] != '\n') {
			goto _iter_next_4385254048;
		}
		(_4517_n)++;
		if (_4517_n == _4426_row) {
			return static_cast<jule::Str>((*this)._field_data.slice(static_cast<jule::Int>(_4617_line_start),static_cast<jule::Int>(_4717_i)));
		}
		_4617_line_start=static_cast<jule::Int>(_4717_i + 1LL);
	}
	_iter_next_4385254048:;
	(_4717_i)++;
	goto _iter_begin_4385254048;
	_iter_end_4385254048:;
	return jule::Str("", 0);
}







std::ostream &operator<<(std::ostream &_Stream, const _2053bdb25_File &_Src) {
	_Stream << "File{";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _20547ded2_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _20547ded2_Lex::_method_push_err(jule::Str _40227_fmt,jule::Slice<jule::Any> _40240_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_20377124e_Log>({_20547ded2_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_40227_fmt,_40240_args)}));
}



inline void _20547ded2_Lex::_method_push_err_tok(_20542560a_Token _40731_token,jule::Str _40745_fmt) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_20377124e_Log>({_20547ded2_make_err(_40731_token._field_row,_40731_token._field_column,(*this)._field_file,_40745_fmt,jule::Slice<jule::Any>({}))}));
}



inline void _20547ded2_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	_iter_begin_4385272992:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4385272992; }
	{
		_20542560a_Token _41721_token = (*this)._method_token();
		if (_41721_token._field_id != 0LLU) {
			(*this)._field_tokens=jule::append((*this)._field_tokens,jule::Slice<_20542560a_Token>({_41721_token}));
		}
	}
	_iter_next_4385272992:;
	goto _iter_begin_4385272992;
	_iter_end_4385272992:;
}



inline jule::Str _20547ded2_Lex::_method_id(jule::Slice<jule::U8> _42621_ln) {
	if (_42621_ln.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::I32 _43014_r;
	jule::Int _43021_i;
	std::tie(_43014_r,_43021_i) = _2062e3ad2_decode_rune(_42621_ln);
	if ((_43014_r != '_') && (!(_20542560a_is_letter(_43014_r)))) {
		return jule::Str("", 0);
	}
	_iter_begin_4385287968:;
	if (!(_43021_i < _42621_ln.len())) { goto _iter_end_4385287968; }
	{
		jule::I32 _43618_r;
		jule::Int _43621_n;
		std::tie(_43618_r,_43621_n) = _2062e3ad2_decode_rune(_42621_ln.slice(static_cast<jule::Int>(_43021_i)));
		if (((_43618_r != '_') && (!(_20542560a_is_decimal(static_cast<jule::U8>(_43618_r))))) && (!(_20542560a_is_letter(_43618_r)))) {
			(*this)._field_pos+=_43021_i;
			return static_cast<jule::Str>(_42621_ln.slice(0LL,static_cast<jule::Int>(_43021_i)));
		}
		_43021_i+=_43621_n;
	}
	_iter_next_4385287968:;
	goto _iter_begin_4385287968;
	_iter_end_4385287968:;
	(*this)._field_pos+=static_cast<jule::I64>(_42621_ln.len());
	return static_cast<jule::Str>(_42621_ln);
}



inline jule::Slice<jule::U8> _20547ded2_Lex::_method_resume(void) {
	jule::Int _45117_i = (*this)._field_pos;
	_iter_begin_4385299120:;
	if (!(_45117_i < (*this)._field_file->_field_data.len())) { goto _iter_end_4385299120; }
	{
		jule::I32 _45317_r = static_cast<jule::I32>((*this)._field_file->_field_data[static_cast<jule::Int>(_45117_i)]);
		if (_20542560a_is_space(_45317_r)) {
			((*this)._field_pos)++;
			{
				auto _match_expr{ _45317_r };
				if (!(('\n') == _match_expr)) { goto _case_end_4385305824; }
				_case_begin_4385305824:;
				{
					(*this)._method_new_line();
				}
				goto _match_end_4385303312;
				_case_end_4385305824:;
				if (!(('\t') == _match_expr)) { goto _case_end_4385305936; }
				_case_begin_4385305936:;
				{
					(*this)._field_column+=8LL;
				}
				goto _match_end_4385303312;
				_case_end_4385305936:;
				_case_begin_4385304224:;
				{
					((*this)._field_column)++;
				}
				goto _match_end_4385303312;
				_case_end_4385304224:;
				_match_end_4385303312:;
			}
			goto _iter_next_4385299120;
		}
		jule::Int _46421_j = _45117_i;
		_iter_begin_4385307184:;
		if (!(_46421_j < (*this)._field_file->_field_data.len())) { goto _iter_end_4385307184; }
		{
			if ((*this)._field_file->_field_data[static_cast<jule::Int>(_46421_j)] == '\n') {
				goto _iter_end_4385307184;
			}
		}
		_iter_next_4385307184:;
		(_46421_j)++;
		goto _iter_begin_4385307184;
		_iter_end_4385307184:;
		return (*this)._field_file->_field_data.slice(static_cast<jule::Int>(_45117_i),static_cast<jule::Int>(_46421_j));
	}
	_iter_next_4385299120:;
	(_45117_i)++;
	goto _iter_begin_4385299120;
	_iter_end_4385299120:;
	return nullptr;
}



inline void _20547ded2_Lex::_method_lex_line_comment(_20542560a_Token& _47640_token) {
	jule::Int _47713_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	_iter_begin_4385318592:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4385318592; }
	{
		jule::U8 _48117_r = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if ((_48117_r == '\n') || (_48117_r == '\r')) {
			if ((*this)._method_is_first_token_of_line()) {
				_47640_token._field_id=18LLU;
				_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(static_cast<jule::Int>(_47713_start),static_cast<jule::Int>((*this)._field_pos)));
			}
			return;
		}
	}
	_iter_next_4385318592:;
	((*this)._field_pos)++;
	goto _iter_begin_4385318592;
	_iter_end_4385318592:;
	if ((*this)._method_is_first_token_of_line()) {
		_47640_token._field_id=18LLU;
		_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(static_cast<jule::Int>(_47713_start)));
	}
}



inline void _20547ded2_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	_iter_begin_4385332240:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4385332240; }
	{
		jule::U8 _50017_r = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_50017_r == '\r') {
			goto _iter_next_4385332240;
		}
		if (_50017_r == '\n') {
			(*this)._method_new_line();
			goto _iter_next_4385332240;
		}
		(*this)._field_column+=1LL;
		if (((((*this)._field_pos + 1LL) < (*this)._field_file->_field_data.len()) && (_50017_r == '*')) && ((*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos + 1LL)] == '/')) {
			(*this)._field_column+=2LL;
			(*this)._field_pos+=2LL;
			return;
		}
	}
	_iter_next_4385332240:;
	((*this)._field_pos)++;
	goto _iter_begin_4385332240;
	_iter_end_4385332240:;
	(*this)._method_push_err(jule::Str("missing block comment close", 27),jule::Slice<jule::Any>({}));
}



inline jule::Str _20547ded2_Lex::_method_num(jule::Slice<jule::U8> _52122_txt) {
	jule::Str _52137_lit = jule::Str();
	_52137_lit=_20547ded2_hex_num(_52122_txt);
	if (_52137_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52137_lit=_20547ded2_octal_num(_52122_txt);
	if (_52137_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52137_lit=_20547ded2_binary_num(_52122_txt);
	if (_52137_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52137_lit=_20547ded2_common_num(_52122_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_52137_lit.len());
	return _52137_lit;
}



inline jule::Str _20547ded2_Lex::_method_escape_seq(jule::Slice<jule::U8> _54029_txt) {
	jule::Str _54117_seq = jule::Str("", 0);
	if (_54029_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto _match_expr{ _54029_txt[1LL] };
		if (!(('\\') == _match_expr || ('\'') == _match_expr || ('\"') == _match_expr || ('a') == _match_expr || ('b') == _match_expr || ('f') == _match_expr || ('n') == _match_expr || ('r') == _match_expr || ('t') == _match_expr || ('v') == _match_expr)) { goto _case_end_4385366176; }
		_case_begin_4385366176:;
		{
			(*this)._field_pos+=2LL;
			return static_cast<jule::Str>(_54029_txt.slice(0LL,2LL));
		}
		goto _match_end_4385363504;
		_case_end_4385366176:;
		if (!(('U') == _match_expr)) { goto _case_end_4385365536; }
		_case_begin_4385365536:;
		{
			_54117_seq=_20547ded2_big_unicode_point_escape(_54029_txt);
		}
		goto _match_end_4385363504;
		_case_end_4385365536:;
		if (!(('u') == _match_expr)) { goto _case_end_4385365648; }
		_case_begin_4385365648:;
		{
			_54117_seq=_20547ded2_little_unicode_point_escape(_54029_txt);
		}
		goto _match_end_4385363504;
		_case_end_4385365648:;
		if (!(('x') == _match_expr)) { goto _case_end_4385365760; }
		_case_begin_4385365760:;
		{
			_54117_seq=_20547ded2_hex_byte_escape(_54029_txt);
		}
		goto _match_end_4385363504;
		_case_end_4385365760:;
		_case_begin_4385365232:;
		{
			_54117_seq=_20547ded2_byte_escape(_54029_txt);
		}
		goto _match_end_4385363504;
		_case_end_4385365232:;
		_match_end_4385363504:;
	}
	_julec_label_end:;
	if (_54117_seq == jule::Str("", 0)) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>({}));
		return jule::Str("", 0);
	}
	(*this)._field_pos+=static_cast<jule::I64>(_54117_seq.len());
	return _54117_seq;
}



inline jule::Str _20547ded2_Lex::_method_get_rune(jule::Slice<jule::U8> _57427_txt,jule::Bool _57440_raw) {
	if ((!(_57440_raw)) && (_57427_txt[0LL] == '\\')) {
		return (*this)._method_escape_seq(_57427_txt);
	}
	jule::I32 _57914_r;
	jule::Int _57917_n;
	std::tie(_57914_r,_57917_n) = _2062e3ad2_decode_rune(_57427_txt);
	(*this)._field_pos+=_57917_n;
	return static_cast<jule::Str>(_57914_r);
}



inline jule::Str _20547ded2_Lex::_method_lex_rune(jule::Slice<jule::U8> _58427_txt) {
	jule::Str _58517_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58717_n = 0LL;
	jule::Int _58817_i = 1LL;
	_iter_begin_4385386656:;
	if (!(_58817_i < _58427_txt.len())) { goto _iter_end_4385386656; }
	{
		if (_58427_txt[static_cast<jule::Int>(_58817_i)] == '\r') {
			goto _iter_next_4385386656;
		}
		if (_58427_txt[static_cast<jule::Int>(_58817_i)] == '\n') {
			(*this)._method_push_err(jule::Str("rune is not finished", 20),jule::Slice<jule::Any>({}));
			((*this)._field_pos)++;
			(*this)._method_new_line();
			return jule::Str("", 0);
		}
		jule::Str _60017_r = (*this)._method_get_rune(_58427_txt.slice(static_cast<jule::Int>(_58817_i)),false);
		_58517_run+=_60017_r;
		jule::I64 _60217_length = _60017_r.len();
		(*this)._field_column+=_60217_length;
		if (_60017_r == jule::Str("'", 1)) {
			((*this)._field_pos)++;
			goto _iter_end_4385386656;
		}
		if (_60217_length > 1LL) {
			_58817_i+=static_cast<jule::I64>(_60217_length - 1LL);
		}
		(_58717_n)++;
	}
	_iter_next_4385386656:;
	(_58817_i)++;
	goto _iter_begin_4385386656;
	_iter_end_4385386656:;
	if (_58717_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>({}));
	} else if (_58717_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune is should be single", 24),jule::Slice<jule::Any>({}));
	}
	return _58517_run;
}



inline jule::Str _20547ded2_Lex::_method_lex_str(void) {
	jule::Str _62417_s = jule::Str("", 0);
	jule::U8 _62513_mark = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
	((*this)._field_pos)++;
	jule::Bool _62713_raw = _62513_mark == '`';
	_62417_s+=static_cast<jule::Str>(_62513_mark);
	((*this)._field_column)++;
	_iter_begin_4385414896:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4385414896; }
	{
		jule::U8 _63217_ch = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_63217_ch == '\r') {
			goto _iter_next_4385414896;
		}
		if (_63217_ch == '\n') {
			(*this)._method_new_line();
			if ((!(_62713_raw))) {
				(*this)._method_push_err(jule::Str("string is not finished", 22),jule::Slice<jule::Any>({}));
				((*this)._field_pos)++;
				return jule::Str("", 0);
			}
		}
		jule::Str _64417_r = (*this)._method_get_rune((*this)._field_file->_field_data.slice(static_cast<jule::Int>((*this)._field_pos)),_62713_raw);
		_62417_s+=_64417_r;
		(*this)._field_column+=static_cast<jule::I64>(_64417_r.len());
		if (_63217_ch == _62513_mark) {
			goto _iter_end_4385414896;
		}
	}
	_iter_next_4385414896:;
	goto _iter_begin_4385414896;
	_iter_end_4385414896:;
	return _62417_s;
}



inline jule::Bool _20547ded2_Lex::_method_is_first_token_of_line(void) {
	return (*this)._field_column == 1LL;
}



inline void _20547ded2_Lex::_method_new_line(void) {
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _20547ded2_Lex::_method_is_op(jule::Slice<jule::U8> _66424_txt,jule::Str _66437_kind,jule::Uint _66448_id,_20542560a_Token& _66466_t) {
	if ((!(_20547ded2_bytes_has_prefix(_66424_txt,_66437_kind)))) {
		return false;
	}
	_66466_t._field_kind=_66437_kind;
	_66466_t._field_id=_66448_id;
	(*this)._field_pos+=static_cast<jule::I64>(_66437_kind.len());
	return true;
}



inline jule::Bool _20547ded2_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _67532_txt,_20542560a_Token& _67550_tok) {
	{
		auto _range_expr = _20547ded2_BASIC_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_20547ded2_KindPair _20547ded2_pair = *_range_begin;
			_iter_begin_4385443744:;
			{
				if ((*this)._method_is_op(_67532_txt,_20547ded2_pair._field_kind,_20547ded2_pair._field_id,_67550_tok)) {
					return true;
				}
			}
			_iter_next_4385443744:;
			++_range_begin;
			if (_range_begin != _range_end) { _20547ded2_pair = *_range_begin; goto _iter_begin_4385443744; }
			_iter_end_4385443744:;
		}
	}
	return false;
}



inline jule::Bool _20547ded2_Lex::_method_lex_id(jule::Slice<jule::U8> _68525_txt,_20542560a_Token& _68543_t) {
	jule::Str _68613_lex = (*this)._method_id(_68525_txt);
	if (_68613_lex == jule::Str("", 0)) {
		return false;
	}
	_68543_t._field_kind=_68613_lex;
	_68543_t._field_id=2LLU;
	return true;
}



inline jule::Bool _20547ded2_Lex::_method_lex_num(jule::Slice<jule::U8> _69626_txt,_20542560a_Token& _69644_t) {
	jule::Str _69713_lex = (*this)._method_num(_69626_txt);
	if (_69713_lex == jule::Str("", 0)) {
		return false;
	}
	_69644_t._field_kind=_69713_lex;
	_69644_t._field_id=6LLU;
	return true;
}



inline _20542560a_Token _20547ded2_Lex::_method_token(void) {
	_20542560a_Token _70917_t = _20542560a_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _71113_txt = (*this)._method_resume();
	if (_71113_txt == nullptr) {
		return _70917_t;
	}
	_70917_t._field_column=(*this)._field_column;
	_70917_t._field_row=(*this)._field_row;
	{
		if (!(((*this)._method_lex_num(_71113_txt,_70917_t)))) { goto _case_end_4385470576; }
		goto _match_end_4385464208;
		_case_end_4385470576:;
		if (!((_71113_txt[0LL] == '\''))) { goto _case_end_4385470688; }
		_case_begin_4385470688:;
		{
			_70917_t._field_kind=(*this)._method_lex_rune(_71113_txt);
			_70917_t._field_id=6LLU;
			return _70917_t;
		}
		goto _match_end_4385464208;
		_case_end_4385470688:;
		if (!(((_71113_txt[0LL] == '\"') || (_71113_txt[0LL] == '`')))) { goto _case_end_4385466224; }
		_case_begin_4385466224:;
		{
			_70917_t._field_kind=(*this)._method_lex_str();
			_70917_t._field_id=6LLU;
			return _70917_t;
		}
		goto _match_end_4385464208;
		_case_end_4385466224:;
		if (!((_20547ded2_bytes_has_prefix(_71113_txt,jule::Str("//", 2))))) { goto _case_end_4385466336; }
		_case_begin_4385466336:;
		{
			(*this)._method_lex_line_comment(_70917_t);
			return _70917_t;
		}
		goto _match_end_4385464208;
		_case_end_4385466336:;
		if (!((_20547ded2_bytes_has_prefix(_71113_txt,jule::Str("/*", 2))))) { goto _case_end_4385466448; }
		_case_begin_4385466448:;
		{
			(*this)._method_lex_range_comment();
			return _70917_t;
		}
		goto _match_end_4385464208;
		_case_end_4385466448:;
		if (!(((*this)._method_is_op(_71113_txt,jule::Str("(", 1),3LLU,_70917_t)) || ((*this)._method_is_op(_71113_txt,jule::Str(")", 1),3LLU,_70917_t)) || ((*this)._method_is_op(_71113_txt,jule::Str("{", 1),3LLU,_70917_t)) || ((*this)._method_is_op(_71113_txt,jule::Str("}", 1),3LLU,_70917_t)) || ((*this)._method_is_op(_71113_txt,jule::Str("[", 1),3LLU,_70917_t)) || ((*this)._method_is_op(_71113_txt,jule::Str("]", 1),3LLU,_70917_t)) || ((*this)._method_lex_basic_ops(_71113_txt,_70917_t)))) { goto _case_end_4385471248; }
		goto _match_end_4385464208;
		_case_end_4385471248:;
		if (!(((*this)._method_lex_id(_71113_txt,_70917_t)))) { goto _case_end_4385471360; }
		_case_begin_4385471360:;
		{
			{
				auto _range_expr = _20547ded2_KEYWORDS;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					_20547ded2_KindPair _20547ded2_pair = *_range_begin;
					_iter_begin_4385488560:;
					{
						if (_20547ded2_pair._field_kind == _70917_t._field_kind) {
							_70917_t._field_id=_20547ded2_pair._field_id;
							goto _iter_end_4385488560;
						}
					}
					_iter_next_4385488560:;
					++_range_begin;
					if (_range_begin != _range_end) { _20547ded2_pair = *_range_begin; goto _iter_begin_4385488560; }
					_iter_end_4385488560:;
				}
			}
		}
		goto _match_end_4385464208;
		_case_end_4385471360:;
		_case_begin_4385465776:;
		{
			jule::I32 _76118_r;
			jule::Int _76121_sz;
			std::tie(_76118_r,_76121_sz) = _2062e3ad2_decode_rune(_71113_txt);
			(*this)._method_push_err(jule::Str("undefined code content: @", 25),jule::Slice<jule::Any>({jule::Any(_76118_r)}));
			((*this)._field_column)++;
			(*this)._field_pos+=_76121_sz;
			return _70917_t;
		}
		goto _match_end_4385464208;
		_case_end_4385465776:;
		_match_end_4385464208:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_70917_t._field_kind.len());
	return _70917_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _20547ded2_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _20521102d_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_Node::_method_is_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_EnumDecl>>() || _match_expr.type_is<jule::Ref<_2053703bd_FnDecl>>() || _match_expr.type_is<jule::Ref<_2053703bd_StructDecl>>() || _match_expr.type_is<jule::Ref<_2053703bd_TraitDecl>>() || _match_expr.type_is<jule::Ref<_2053703bd_TypeAliasDecl>>() || _match_expr.type_is<jule::Ref<_2053703bd_FieldDecl>>() || _match_expr.type_is<jule::Ref<_2053703bd_UseDecl>>() || _match_expr.type_is<jule::Ref<_2053703bd_VarDecl>>() || _match_expr.type_is<jule::Ref<_2053703bd_TypeDecl>>())) { goto _case_end_4385596816; }
		_case_begin_4385596816:;
		{
			return true;
		}
		goto _match_end_4385595776;
		_case_end_4385596816:;
		_case_begin_4385596512:;
		{
			return false;
		}
		goto _match_end_4385595776;
		_case_end_4385596512:;
		_match_end_4385595776:;
	}
}



inline jule::Bool _2053703bd_Node::_method_is_comment(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_Comment>>() || _match_expr.type_is<jule::Ref<_2053703bd_CommentGroup>>())) { goto _case_end_4385613904; }
		_case_begin_4385613904:;
		{
			return true;
		}
		goto _match_end_4385611712;
		_case_end_4385613904:;
		_case_begin_4385613600:;
		{
			return false;
		}
		goto _match_end_4385611712;
		_case_end_4385613600:;
		_match_end_4385611712:;
	}
}



inline jule::Bool _2053703bd_Node::_method_is_impl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_Impl>>())) { goto _case_end_4385617744; }
		_case_begin_4385617744:;
		{
			return true;
		}
		goto _match_end_4385616176;
		_case_end_4385617744:;
		_case_begin_4385617440:;
		{
			return false;
		}
		goto _match_end_4385616176;
		_case_end_4385617440:;
		_match_end_4385616176:;
	}
}



inline jule::Bool _2053703bd_Node::_method_is_use_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_UseDecl>>())) { goto _case_end_4385621264; }
		_case_begin_4385621264:;
		{
			return true;
		}
		goto _match_end_4385618480;
		_case_end_4385621264:;
		_case_begin_4385620960:;
		{
			return false;
		}
		goto _match_end_4385618480;
		_case_end_4385620960:;
		_match_end_4385618480:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_Comment::_method_is_directive(void) {
	return (*this)._field_text.has_prefix(jule::Str("jule:", 5));
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_RefTypeDecl &_Src) {
	_Stream << "RefTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_PtrTypeDecl::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_ArrTypeDecl::_method_auto_sized(void) {
	return (!(jule::real((*this)._field_size)));
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_Expr::_method_is_fn_call(void) {
	if ((*this)._field_kind == nullptr) {
		return false;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_FnCallExpr>>())) { goto _case_end_4385640336; }
		_case_begin_4385640336:;
		{
			return true;
		}
		goto _match_end_4385638368;
		_case_end_4385640336:;
		_case_begin_4385639856:;
		{
			return false;
		}
		goto _match_end_4385638368;
		_case_end_4385639856:;
		_match_end_4385638368:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "concurrent:" << _Src._field_concurrent;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



inline jule::Bool _2053703bd_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_FnDecl::_method_is_anon(void) {
	return (*this)._field_ident == jule::Str("<anonymous>", 11);
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_EnumItemDecl::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_expr)));
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_EnumDecl::_method_default_typed(void) {
	return (!(jule::real((*this)._field_kind)));
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053703bd_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _2053703bd_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053703bd_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053a3313_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053a3313_PackageInfo &_Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053cae51_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _2053cae51_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _2053cae51_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



inline jule::Bool _2053cae51_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stms.len();
}



inline jule::Bool _2053cae51_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stms.len();
}



inline void _2053cae51_ScopeParser::_method_push_err(_20542560a_Token _17527_token,jule::Str _17541_fmt) {
	(*this)._field_p->_method_push_err(_17527_token,_17541_fmt,jule::Slice<jule::Any>({}));
}



inline void _2053cae51_ScopeParser::_method_push_suggestion(jule::Str _17834_fmt,jule::Slice<jule::Any> _17847_args) {
	(*this)._field_p->_method_push_suggestion(_17834_fmt,_17847_args);
}



inline void _2053cae51_ScopeParser::_method_insert_as_next(jule::Slice<_20542560a_Token> _18237_tokens) {
	(*this)._field_stms=jule::append((*this)._field_stms.slice(0LL,static_cast<jule::Int>((*this)._field_pos + 1LL)),(*this)._field_stms.slice(static_cast<jule::Int>((*this)._field_pos)));
	(*this)._field_stms[static_cast<jule::Int>((*this)._field_pos + 1LL)]=jule::new_struct<_2053cae51_Stmt>(new( std::nothrow ) _2053cae51_Stmt(_18237_tokens,jule::Bool()));
}



inline jule::Ref<_2053cae51_Stmt> _2053cae51_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stms[static_cast<jule::Int>((*this)._field_pos)];
}



inline jule::Ref<_2053703bd_ScopeTree> _2053cae51_ScopeParser::_method_build_scope(jule::Slice<_20542560a_Token> _19234_tokens) {
	jule::Ref<_2053703bd_ScopeTree> _19317_s = _2053cae51_new_scope();
	_19317_s->_field_parent=(*this)._field_s;
	_2053cae51_ScopeParser _19517_ssp = _2053cae51_ScopeParser((*this)._field_p,jule::Ref<_2053703bd_ScopeTree>(),jule::Slice<jule::Ref<_2053cae51_Stmt>>(),jule::Int());
	_19517_ssp._method_build(_19234_tokens,_19317_s);
	return _19317_s;
}



inline jule::Any _2053cae51_ScopeParser::_method_build_var_st(jule::Slice<_20542560a_Token> _20235_tokens) {
	jule::Ref<_2053703bd_VarDecl> _20317_v = (*this)._field_p->_method_build_var(_20235_tokens);
	_20317_v->_field_scope=(*this)._field_s;
	return jule::Any(_20317_v);
}



inline jule::Any _2053cae51_ScopeParser::_method_build_ret_st(jule::Slice<_20542560a_Token> _20835_tokens) {
	jule::Ref<_2053703bd_RetSt> _20917_st = jule::new_struct<_2053703bd_RetSt>(new( std::nothrow ) _2053703bd_RetSt(_20835_tokens[0LL],jule::Ref<_2053703bd_Expr>()));
	if (_20835_tokens.len() > 1LL) {
		_20835_tokens=_20835_tokens.slice(1LL);
		_20917_st->_field_expr=(*this)._field_p->_method_build_expr(_20835_tokens);
	}
	return jule::Any(_20917_st);
}



inline jule::Any _2053cae51_ScopeParser::_method_build_while_next_iter(jule::Ref<_2053cae51_Stmt> _21944_s) {
	jule::Ref<_2053703bd_Iter> _22017_it = jule::new_struct<_2053703bd_Iter>(new( std::nothrow ) _2053703bd_Iter(_21944_s->_field_tokens[0LL],jule::Any(),jule::Ref<_2053703bd_ScopeTree>()));
	jule::Slice<_20542560a_Token> _22317_tokens = _21944_s->_field_tokens.slice(1LL);
	jule::Ref<_2053703bd_WhileKind> _22417_kind = jule::new_struct<_2053703bd_WhileKind>(new( std::nothrow ) _2053703bd_WhileKind());
	if (_22317_tokens.len() > 0LL) {
		_22417_kind->_field_expr=(*this)._field_p->_method_build_expr(_22317_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_22017_it->_field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_22317_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_20542560a_Token> _23617_st_tokens = _2054205a0_get_block_expr(_22317_tokens);
	if (_23617_st_tokens.len() > 0LL) {
		jule::Ref<_2053cae51_Stmt> _23821_stmt = jule::new_struct<_2053cae51_Stmt>(new( std::nothrow ) _2053cae51_Stmt(_23617_st_tokens,_21944_s->_field_terminated));
		_22417_kind->_field_next_token=_23617_st_tokens[0LL];
		_22417_kind->_field_next=(*this)._method_build_st(_23821_stmt);
	}
	jule::I64 _24617_i = _23617_st_tokens.len();
	jule::Slice<_20542560a_Token> _24717_block_tokens = _206540c0d_range(_24617_i,jule::Str("{", 1),jule::Str("}", 1),_22317_tokens);
	if (_24717_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_22017_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_24617_i < _22317_tokens.len()) {
		(*this)._method_push_err(_22317_tokens[static_cast<jule::Int>(_24617_i)],jule::Str("invalid syntax", 14));
	}
	_22017_it->_field_scope=(*this)._method_build_scope(_24717_block_tokens);
	_22017_it->_field_kind=jule::Any(_22417_kind);
	return jule::Any(_22017_it);
}



inline jule::Ref<_2053703bd_WhileKind> _2053cae51_ScopeParser::_method_build_while_iter_kind(jule::Slice<_20542560a_Token> _26444_tokens) {
	return jule::new_struct<_2053703bd_WhileKind>(new( std::nothrow ) _2053703bd_WhileKind((*this)._field_p->_method_build_expr(_26444_tokens),jule::Any(),_20542560a_Token()));
}



inline jule::Slice<jule::Slice<_20542560a_Token>> _2053cae51_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_20542560a_Token> _27049_toks) {
	jule::Slice<jule::Slice<_20542560a_Token>> _27118_vars;
	jule::Slice<_20377124e_Log> _27124_errs;
	std::tie(_27118_vars,_27124_errs) = _206540c0d_parts(_27049_toks,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_27124_errs);
	return _27118_vars;
}



inline jule::Ref<_2053703bd_VarDecl> _2053cae51_ScopeParser::_method_build_range_kind_key(jule::Slice<_20542560a_Token> _27643_tokens) {
	if (_27643_tokens.len() == 0LL) {
		return jule::new_ref<_2053703bd_VarDecl>();
	}
	jule::Ref<_2053703bd_VarDecl> _28017_key = jule::new_struct<_2053703bd_VarDecl>(new( std::nothrow ) _2053703bd_VarDecl(jule::Ref<_2053703bd_ScopeTree>(),_27643_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_2053703bd_Directive>>(),jule::Ref<_2053703bd_CommentGroup>(),jule::Ref<_2053703bd_TypeDecl>(),jule::Ref<_2053703bd_Expr>()));
	if (_28017_key->_field_token._field_id == 36LLU) {
		_28017_key->_field_mutable=true;
		if (_27643_tokens.len() == 1LL) {
			(*this)._method_push_err(_28017_key->_field_token,jule::Str("invalid syntax", 14));
		}
		_28017_key->_field_token=_27643_tokens[1LL];
	} else if (_27643_tokens.len() > 1LL) {
		(*this)._method_push_err(_27643_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_28017_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_28017_key->_field_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_VarDecl>();
	}
	_28017_key->_field_ident=_28017_key->_field_token._field_kind;
	return _28017_key;
}



inline jule::Slice<jule::Ref<_2053703bd_VarDecl>> _2053cae51_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_20542560a_Token>> _30144_parts) {
	jule::Slice<jule::Ref<_2053703bd_VarDecl>> _30217_keys = nullptr;
	{
		auto _range_expr = _30144_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_20542560a_Token> _2053cae51_tokens = *_range_begin;
			_iter_begin_4386374624:;
			{
				_30217_keys=jule::append(_30217_keys,jule::Slice<jule::Ref<_2053703bd_VarDecl>>({(*this)._method_build_range_kind_key(_2053cae51_tokens)}));
			}
			_iter_next_4386374624:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053cae51_tokens = *_range_begin; goto _iter_begin_4386374624; }
			_iter_end_4386374624:;
		}
	}
	return _30217_keys;
}



inline void _2053cae51_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ref<_2053703bd_RangeKind> _30950_rng,jule::Slice<_20542560a_Token> _30971_tokens) {
	jule::Slice<jule::Slice<_20542560a_Token>> _31017_key_tokens = (*this)._method_get_range_kind_keys_tokens(_30971_tokens);
	if (_31017_key_tokens.len() == 0LL) {
		return;
	}
	if (_31017_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_30950_rng->_field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ref<_2053703bd_VarDecl>> _31717_keys = (*this)._method_build_range_kind_keys(_31017_key_tokens);
	_30950_rng->_field_key_a=_31717_keys[0LL];
	if (_31717_keys.len() > 1LL) {
		_30950_rng->_field_key_b=_31717_keys[1LL];
	}
}



inline void _2053cae51_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ref<_2053703bd_RangeKind> _32453_rng,jule::Slice<_20542560a_Token> _32474_tokens) {
	jule::Int _32517_i = 0LL;
	jule::Slice<_20542560a_Token> _32617_rang = _206540c0d_range(_32517_i,jule::Str("(", 1),jule::Str(")", 1),_32474_tokens);
	if (_32517_i < _32474_tokens.len()) {
		(*this)._method_push_err(_32453_rng->_field_in_token,jule::Str("invalid syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_32453_rng,_32617_rang);
}



inline void _2053cae51_ScopeParser::_method_setup_range_kind_keys(jule::Ref<_2053703bd_RangeKind> _33344_rng,jule::Slice<_20542560a_Token> _33365_tokens) {
	if (_33365_tokens[0LL]._field_id == 3LLU) {
		if (_33365_tokens[0LL]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_33365_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_33344_rng,_33365_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_33344_rng,_33365_tokens);
}



inline jule::Ref<_2053703bd_RangeKind> _2053cae51_ScopeParser::_method_build_range_iter_kind(jule::Slice<_20542560a_Token> _34544_var_tokens,jule::Slice<_20542560a_Token> _34613_expr_tokens,_20542560a_Token _34639_in_token) {
	jule::Ref<_2053703bd_RangeKind> _34717_rng = jule::new_struct<_2053703bd_RangeKind>(new( std::nothrow ) _2053703bd_RangeKind(_34639_in_token,jule::Ref<_2053703bd_Expr>(),jule::Ref<_2053703bd_VarDecl>(),jule::Ref<_2053703bd_VarDecl>()));
	if (_34613_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_34717_rng->_field_in_token,jule::Str("expression missing", 18));
		return _34717_rng;
	}
	_34717_rng->_field_expr=(*this)._field_p->_method_build_expr(_34613_expr_tokens);
	if (_34544_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_34717_rng,_34544_var_tokens);
	}
	return _34717_rng;
}



inline jule::Any _2053cae51_ScopeParser::_method_build_common_iter_kind(jule::Slice<_20542560a_Token> _36145_tokens,_20542560a_Token _36162_err_tok) {
	jule::Int _36217_brace_n = 0LL;
	{
		auto _range_expr = _36145_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2053cae51_i = 0;
			_20542560a_Token _2053cae51_tok = *_range_begin;
			_iter_begin_4386424480:;
			{
				if (_2053cae51_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _2053cae51_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4386428832; }
						_case_begin_4386428832:;
						{
							(_36217_brace_n)++;
							goto _iter_next_4386424480;
						}
						goto _match_end_4386427248;
						_case_end_4386428832:;
						_case_begin_4386428032:;
						{
							(_36217_brace_n)--;
						}
						goto _match_end_4386427248;
						_case_end_4386428032:;
						_match_end_4386427248:;
					}
				}
				if (_36217_brace_n != 0LL) {
					goto _iter_next_4386424480;
				}
				{
					auto _match_expr{ _2053cae51_tok._field_id };
					if (!((15LLU) == _match_expr)) { goto _case_end_4386430240; }
					_case_begin_4386430240:;
					{
						jule::Slice<_20542560a_Token> _38125_decl_tokens = _36145_tokens.slice(0LL,static_cast<jule::Int>(_2053cae51_i));
						jule::Slice<_20542560a_Token> _38225_expr_tokens = _36145_tokens.slice(static_cast<jule::Int>(_2053cae51_i + 1LL));
						return jule::Any((*this)._method_build_range_iter_kind(_38125_decl_tokens,_38225_expr_tokens,_2053cae51_tok));
					}
					goto _match_end_4386426704;
					_case_end_4386430240:;
					_match_end_4386426704:;
				}
			}
			_iter_next_4386424480:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2053cae51_i; _2053cae51_tok = *_range_begin; goto _iter_begin_4386424480; }
			_iter_end_4386424480:;
		}
	}
	return jule::Any((*this)._method_build_while_iter_kind(_36145_tokens));
}



inline jule::Any _2053cae51_ScopeParser::_method_build_common_iter(jule::Slice<_20542560a_Token> _38940_tokens) {
	jule::Ref<_2053703bd_Iter> _39017_it = jule::new_struct<_2053703bd_Iter>(new( std::nothrow ) _2053703bd_Iter(_38940_tokens[0LL],jule::Any(),jule::Ref<_2053703bd_ScopeTree>()));
	_38940_tokens=_38940_tokens.slice(1LL);
	if (_38940_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_39017_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	jule::Slice<_20542560a_Token> _40017_expr_tokens = _2054205a0_get_block_expr(_38940_tokens);
	if (_40017_expr_tokens.len() > 0LL) {
		_39017_it->_field_kind=(*this)._method_build_common_iter_kind(_40017_expr_tokens,_39017_it->_field_token);
	}
	jule::I64 _40417_i = _40017_expr_tokens.len();
	jule::Slice<_20542560a_Token> _40517_scope_tokens = _206540c0d_range(_40417_i,jule::Str("{", 1),jule::Str("}", 1),_38940_tokens);
	if (_40517_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_39017_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_40417_i < _38940_tokens.len()) {
		(*this)._method_push_err(_38940_tokens[static_cast<jule::Int>(_40417_i)],jule::Str("invalid syntax", 14));
	}
	_39017_it->_field_scope=(*this)._method_build_scope(_40517_scope_tokens);
	return jule::Any(_39017_it);
}



inline jule::Any _2053cae51_ScopeParser::_method_buid_iter_st(jule::Ref<_2053cae51_Stmt> _41935_st) {
	if (_41935_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_41935_st);
	}
	return (*this)._method_build_common_iter(_41935_st->_field_tokens);
}



inline jule::Any _2053cae51_ScopeParser::_method_build_break_st(jule::Slice<_20542560a_Token> _42637_tokens) {
	jule::Ref<_2053703bd_BreakSt> _42717_brk = jule::new_struct<_2053703bd_BreakSt>(new( std::nothrow ) _2053703bd_BreakSt(_42637_tokens[0LL],_20542560a_Token()));
	if (_42637_tokens.len() > 1LL) {
		if (_42637_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_42637_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_42717_brk->_field_label=_42637_tokens[1LL];
			if (_42637_tokens.len() > 2LL) {
				(*this)._method_push_err(_42637_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_42717_brk);
}



inline jule::Any _2053cae51_ScopeParser::_method_build_cont_st(jule::Slice<_20542560a_Token> _44436_tokens) {
	jule::Ref<_2053703bd_ContSt> _44517_cont = jule::new_struct<_2053703bd_ContSt>(new( std::nothrow ) _2053703bd_ContSt(_44436_tokens[0LL],_20542560a_Token()));
	if (_44436_tokens.len() > 1LL) {
		if (_44436_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_44436_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_44517_cont->_field_label=_44436_tokens[1LL];
			if (_44436_tokens.len() > 2LL) {
				(*this)._method_push_err(_44436_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44517_cont);
}



inline jule::Ref<_2053703bd_If> _2053cae51_ScopeParser::_method_build_if(jule::Slice<_20542560a_Token>& _46232_tokens) {
	jule::Ref<_2053703bd_If> _46317_model = jule::new_struct<_2053703bd_If>(new( std::nothrow ) _2053703bd_If(_46232_tokens[0LL],jule::Ref<_2053703bd_Expr>(),jule::Ref<_2053703bd_ScopeTree>()));
	_46232_tokens=_46232_tokens.slice(1LL);
	jule::Slice<_20542560a_Token> _46717_expr_tokens = _2054205a0_get_block_expr(_46232_tokens);
	jule::Int _46817_i = 0LL;
	if (_46717_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_46317_model->_field_token,jule::Str("expression missing", 18));
	} else {
		_46817_i=static_cast<jule::I64>(_46717_expr_tokens.len());
	}
	jule::Slice<_20542560a_Token> _47417_scope_tokens = _206540c0d_range(_46817_i,jule::Str("{", 1),jule::Str("}", 1),_46232_tokens);
	if (_47417_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_46317_model->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_If>();
	}
	if (_46817_i < _46232_tokens.len()) {
		if (_46232_tokens[static_cast<jule::Int>(_46817_i)]._field_id == 17LLU) {
			_46232_tokens=_46232_tokens.slice(static_cast<jule::Int>(_46817_i));
		} else {
			(*this)._method_push_err(_46232_tokens[static_cast<jule::Int>(_46817_i)],jule::Str("invalid syntax", 14));
			_46232_tokens=nullptr;
		}
	}
	_46317_model->_field_expr=(*this)._field_p->_method_build_expr(_46717_expr_tokens);
	_46317_model->_field_scope=(*this)._method_build_scope(_47417_scope_tokens);
	return _46317_model;
}



inline jule::Ref<_2053703bd_Else> _2053cae51_ScopeParser::_method_build_else(jule::Slice<_20542560a_Token> _49433_tokens) {
	jule::Ref<_2053703bd_Else> _49517_els = jule::new_struct<_2053703bd_Else>(new( std::nothrow ) _2053703bd_Else(_49433_tokens[0LL],jule::Ref<_2053703bd_ScopeTree>()));
	_49433_tokens=_49433_tokens.slice(1LL);
	jule::Int _49917_i = 0LL;
	jule::Slice<_20542560a_Token> _50017_scope_tokens = _206540c0d_range(_49917_i,jule::Str("{", 1),jule::Str("}", 1),_49433_tokens);
	if (_50017_scope_tokens == nullptr) {
		if (_49917_i < _49433_tokens.len()) {
			(*this)._method_push_err(_49517_els->_field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_49517_els->_field_token,jule::Str("body is not exist", 17));
			(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_2053703bd_Else>();
	}
	if (_49917_i < _49433_tokens.len()) {
		(*this)._method_push_err(_49433_tokens[static_cast<jule::Int>(_49917_i)],jule::Str("invalid syntax", 14));
	}
	_49517_els->_field_scope=(*this)._method_build_scope(_50017_scope_tokens);
	return _49517_els;
}



inline jule::Any _2053cae51_ScopeParser::_method_build_if_else_chain(jule::Slice<_20542560a_Token> _51842_tokens) {
	jule::Ref<_2053703bd_Conditional> _51917_chain = jule::new_struct<_2053703bd_Conditional>(new( std::nothrow ) _2053703bd_Conditional((*this)._method_build_if(_51842_tokens),jule::Slice<jule::Ref<_2053703bd_If>>(),jule::Ref<_2053703bd_Else>()));
	if ((!(jule::real(_51917_chain->_field_head)))) {
		return jule::Any(nullptr);
	}
	_iter_begin_4386540976:;
	if (!(_51842_tokens != nullptr)) { goto _iter_end_4386540976; }
	{
		if (_51842_tokens[0LL]._field_id != 17LLU) {
			goto _iter_end_4386540976;
		}
		if ((_51842_tokens.len() > 1LL) && (_51842_tokens[1LL]._field_id == 16LLU)) {
			_51842_tokens=_51842_tokens.slice(1LL);
			jule::Ref<_2053703bd_If> _53125_elif = (*this)._method_build_if(_51842_tokens);
			_51917_chain->_field_tail=jule::append(_51917_chain->_field_tail,jule::Slice<jule::Ref<_2053703bd_If>>({_53125_elif}));
			goto _iter_next_4386540976;
		}
		_51917_chain->_field_default=(*this)._method_build_else(_51842_tokens);
		goto _iter_end_4386540976;
	}
	_iter_next_4386540976:;
	goto _iter_begin_4386540976;
	_iter_end_4386540976:;
	return jule::Any(_51917_chain);
}



inline jule::Any _2053cae51_ScopeParser::_method_build_comment_st(_20542560a_Token _54135_token) {
	return jule::Any(_206540c0d_build_comment(_54135_token));
}



inline jule::Any _2053cae51_ScopeParser::_method_build_call_st(jule::Slice<_20542560a_Token> _54536_tokens) {
	_20542560a_Token _54613_token = _54536_tokens[0LL];
	if (_2054205a0_is_fn_call(_54536_tokens) == nullptr) {
		(*this)._method_push_err(_54613_token,jule::Str("statement must have function call expression", 44));
	}
	jule::Ref<_2053703bd_Expr> _55017_expr = (*this)._field_p->_method_build_expr(_54536_tokens);
	if (jule::real(_55017_expr) && (!(_55017_expr->_method_is_fn_call()))) {
		(*this)._method_push_err(_54613_token,jule::Str("invalid syntax", 14));
	}
	return jule::Any(_55017_expr);
}



inline jule::Any _2053cae51_ScopeParser::_method_build_co_call_st(jule::Slice<_20542560a_Token> _55739_tokens) {
	_55739_tokens=_55739_tokens.slice(1LL);
	jule::Any _55917_cc = (*this)._method_build_call_st(_55739_tokens);
	_55917_cc.operator jule::Ref<_2053703bd_Expr>()->_field_kind.operator jule::Ref<_2053703bd_FnCallExpr>()->_field_concurrent=true;
	return _55917_cc;
}



inline jule::Any _2053cae51_ScopeParser::_method_build_goto_st(jule::Slice<_20542560a_Token> _56436_tokens) {
	jule::Ref<_2053703bd_GotoSt> _56517_gt = jule::new_struct<_2053703bd_GotoSt>(new( std::nothrow ) _2053703bd_GotoSt(_56436_tokens[0LL],_20542560a_Token()));
	if (_56436_tokens.len() == 1LL) {
		(*this)._method_push_err(_56517_gt->_field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if (_56436_tokens.len() > 2LL) {
		(*this)._method_push_err(_56436_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_20542560a_Token _57417_ident_token = _56436_tokens[1LL];
	if (_57417_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_57417_ident_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::Any(_56517_gt);
	}
	_56517_gt->_field_label=_57417_ident_token;
	return jule::Any(_56517_gt);
}



inline jule::Any _2053cae51_ScopeParser::_method_build_fall_st(jule::Slice<_20542560a_Token> _58436_tokens) {
	jule::Ref<_2053703bd_FallSt> _58517_fll = jule::new_struct<_2053703bd_FallSt>(new( std::nothrow ) _2053703bd_FallSt(_58436_tokens[0LL]));
	if (_58436_tokens.len() > 1LL) {
		(*this)._method_push_err(_58436_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_58517_fll);
}



inline jule::Any _2053cae51_ScopeParser::_method_build_type_alias_st(jule::Slice<_20542560a_Token> _59442_tokens) {
	jule::Ref<_2053703bd_TypeAliasDecl> _59517_tad = (*this)._field_p->_method_build_type_alias_decl(_59442_tokens);
	_59517_tad->_field_scope=(*this)._field_s;
	return jule::Any(_59517_tad);
}



inline void _2053cae51_ScopeParser::_method_push_case_expr(jule::Slice<_20542560a_Token> _60037_tokens,_20542560a_Token _60058_token,jule::Bool _6019_type_match,jule::Slice<jule::Ref<_2053703bd_Expr>>& _60132_exprs) {
	if (_60037_tokens.len() == 0LL) {
		return;
	}
	if (_6019_type_match) {
		jule::Int _60721_i = 0LL;
		jule::Ref<_2053703bd_TypeDecl> _60822_t;
		jule::Bool _60825_ok;
		std::tie(_60822_t,_60825_ok) = (*this)._field_p->_method_build_type(_60037_tokens,(&(_60721_i)),true);
		if (_60825_ok) {
			_60132_exprs=jule::append(_60132_exprs,jule::Slice<jule::Ref<_2053703bd_Expr>>({jule::new_struct<_2053703bd_Expr>(new( std::nothrow ) _2053703bd_Expr(_60058_token,jule::Any(_60822_t)))}));
		}
		if (_60721_i < _60037_tokens.len()) {
			(*this)._method_push_err(_60037_tokens[static_cast<jule::Int>(_60721_i)],jule::Str("invalid syntax", 14));
		}
		return;
	}
	_60132_exprs=jule::append(_60132_exprs,jule::Slice<jule::Ref<_2053703bd_Expr>>({(*this)._field_p->_method_build_expr(_60037_tokens)}));
}



inline jule::Slice<jule::Ref<_2053703bd_Expr>> _2053cae51_ScopeParser::_method_build_case_exprs(jule::Slice<_20542560a_Token>& _62340_tokens,jule::Bool _62357_type_match) {
	jule::Slice<jule::Ref<_2053703bd_Expr>> _62417_exprs = nullptr;
	jule::Int _62617_brace_n = 0LL;
	jule::Int _62717_j = 0LL;
	{
		auto _range_expr = _62340_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2053cae51_i = 0;
			_20542560a_Token _2053cae51_tok = *_range_begin;
			_iter_begin_4386624368:;
			{
				if (_2053cae51_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _2053cae51_tok._field_kind };
						if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4386628912; }
						_case_begin_4386628912:;
						{
							(_62617_brace_n)++;
						}
						goto _match_end_4386627328;
						_case_end_4386628912:;
						_case_begin_4386628112:;
						{
							(_62617_brace_n)--;
						}
						goto _match_end_4386627328;
						_case_end_4386628112:;
						_match_end_4386627328:;
					}
					goto _iter_next_4386624368;
				} else if (_62617_brace_n != 0LL) {
					goto _iter_next_4386624368;
				}
				{
					if (!(((_2053cae51_tok._field_id == 7LLU) && (_2053cae51_tok._field_kind == jule::Str("|", 1))))) { goto _case_end_4386626832; }
					_case_begin_4386626832:;
					{
						(*this)._method_push_case_expr(_62340_tokens.slice(static_cast<jule::Int>(_62717_j),static_cast<jule::Int>(_2053cae51_i)),_2053cae51_tok,_62357_type_match,_62417_exprs);
						_62717_j=static_cast<jule::Int>(_2053cae51_i + 1LL);
					}
					goto _match_end_4386630208;
					_case_end_4386626832:;
					if (!((_2053cae51_tok._field_id == 11LLU))) { goto _case_end_4386626944; }
					_case_begin_4386626944:;
					{
						(*this)._method_push_case_expr(_62340_tokens.slice(static_cast<jule::Int>(_62717_j),static_cast<jule::Int>(_2053cae51_i)),_2053cae51_tok,_62357_type_match,_62417_exprs);
						_62340_tokens=_62340_tokens.slice(static_cast<jule::Int>(_2053cae51_i + 1LL));
						return _62417_exprs;
					}
					goto _match_end_4386630208;
					_case_end_4386626944:;
					_match_end_4386630208:;
				}
			}
			_iter_next_4386624368:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2053cae51_i; _2053cae51_tok = *_range_begin; goto _iter_begin_4386624368; }
			_iter_end_4386624368:;
		}
	}
	(*this)._method_push_err(_62340_tokens[0LL],jule::Str("invalid syntax", 14));
	_62340_tokens=nullptr;
	return nullptr;
}



inline jule::Ref<_2053703bd_ScopeTree> _2053cae51_ScopeParser::_method_build_case_scope(jule::Slice<_20542560a_Token>& _65940_tokens) {
	jule::Int _66017_n = 0LL;
	_iter_begin_4386644304:;
	{
		jule::Int _66221_i = 0LL;
		jule::Slice<_20542560a_Token> _66322_next;
		std::tie(_66322_next,std::ignore) = _2053cae51_skip_st(_66221_i,_65940_tokens.slice(static_cast<jule::Int>(_66017_n)));
		if (_66322_next.len() == 0LL) {
			goto _iter_end_4386644304;
		}
		_20542560a_Token _66717_tok = _66322_next[0LL];
		if ((_66717_tok._field_id != 7LLU) || (_66717_tok._field_kind != jule::Str("|", 1))) {
			_66017_n+=_66221_i;
			goto _iter_next_4386644304;
		}
		jule::Ref<_2053703bd_ScopeTree> _67221_scope = (*this)._method_build_scope(_65940_tokens.slice(0LL,static_cast<jule::Int>(_66017_n)));
		_65940_tokens=_65940_tokens.slice(static_cast<jule::Int>(_66017_n));
		return _67221_scope;
	}
	_iter_next_4386644304:;
	goto _iter_begin_4386644304;
	_iter_end_4386644304:;
	jule::Ref<_2053703bd_ScopeTree> _67617_scope = (*this)._method_build_scope(_65940_tokens);
	_65940_tokens=nullptr;
	return _67617_scope;
}



inline std::tuple<jule::Ref<_2053703bd_Case>,jule::Bool> _2053cae51_ScopeParser::_method_build_case(jule::Slice<_20542560a_Token>& _68134_tokens,jule::Bool _68151_type_match) {
	jule::Ref<_2053703bd_Case> _68217_c = jule::new_struct<_2053703bd_Case>(new( std::nothrow ) _2053703bd_Case(_68134_tokens[0LL],jule::Ref<_2053703bd_ScopeTree>(),jule::Slice<jule::Ref<_2053703bd_Expr>>()));
	_68134_tokens=_68134_tokens.slice(1LL);
	_68217_c->_field_exprs=(*this)._method_build_case_exprs(_68134_tokens,_68151_type_match);
	_68217_c->_field_scope=(*this)._method_build_case_scope(_68134_tokens);
	jule::Bool _68813_is_default = _68217_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_68217_c,_68813_is_default);
}



inline std::tuple<jule::Slice<jule::Ref<_2053703bd_Case>>,jule::Ref<_2053703bd_Else>> _2053cae51_ScopeParser::_method_build_cases(jule::Slice<_20542560a_Token> _69234_tokens,jule::Bool _69251_type_match) {
	jule::Slice<jule::Ref<_2053703bd_Case>> _69317_cases = nullptr;
	jule::Ref<_2053703bd_Else> _69417_def = jule::new_ref<_2053703bd_Else>();
	_iter_begin_4386675776:;
	if (!(_69234_tokens.len() > 0LL)) { goto _iter_end_4386675776; }
	{
		_20542560a_Token _69621_tok = _69234_tokens[0LL];
		if (_69621_tok._field_id == 18LLU) {
			_69234_tokens=_69234_tokens.slice(1LL);
			goto _iter_next_4386675776;
		}
		if ((_69621_tok._field_id != 7LLU) || (_69621_tok._field_kind != jule::Str("|", 1))) {
			(*this)._method_push_err(_69621_tok,jule::Str("invalid syntax", 14));
			goto _iter_end_4386675776;
		}
		jule::Ref<_2053703bd_Case> _70722_c;
		jule::Bool _70725_is_default;
		std::tie(_70722_c,_70725_is_default) = (*this)._method_build_case(_69234_tokens,_69251_type_match);
		if (_70725_is_default) {
			_70722_c->_field_token=_69621_tok;
			if ((!(jule::real(_69417_def)))) {
				_69417_def=jule::new_struct<_2053703bd_Else>(new( std::nothrow ) _2053703bd_Else(_70722_c->_field_token,_70722_c->_field_scope));
			} else {
				(*this)._method_push_err(_69621_tok,jule::Str("invalid syntax", 14));
			}
		} else {
			_69317_cases=jule::append(_69317_cases,jule::Slice<jule::Ref<_2053703bd_Case>>({_70722_c}));
		}
	}
	_iter_next_4386675776:;
	goto _iter_begin_4386675776;
	_iter_end_4386675776:;
	return std::make_tuple(_69317_cases,_69417_def);
}



inline jule::Ref<_2053703bd_MatchCase> _2053cae51_ScopeParser::_method_build_match_case(jule::Slice<_20542560a_Token> _72539_tokens) {
	jule::Ref<_2053703bd_MatchCase> _72617_m = jule::new_struct<_2053703bd_MatchCase>(new( std::nothrow ) _2053703bd_MatchCase(_72539_tokens[0LL],jule::Bool(),jule::Ref<_2053703bd_Expr>(),jule::Slice<jule::Ref<_2053703bd_Case>>(),jule::Ref<_2053703bd_Else>()));
	_72539_tokens=_72539_tokens.slice(1LL);
	if ((_72539_tokens.len() > 0LL) && (_72539_tokens[0LL]._field_id == 10LLU)) {
		_72617_m->_field_type_match=true;
		_72539_tokens=_72539_tokens.slice(1LL);
	}
	jule::Slice<_20542560a_Token> _73617_expr_tokens = _2054205a0_get_block_expr(_72539_tokens);
	if (_73617_expr_tokens.len() > 0LL) {
		_72617_m->_field_expr=(*this)._field_p->_method_build_expr(_73617_expr_tokens);
	} else if (_72617_m->_field_type_match) {
		(*this)._method_push_err(_72617_m->_field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _74317_i = _73617_expr_tokens.len();
	jule::Slice<_20542560a_Token> _74417_block_toks = _206540c0d_range(_74317_i,jule::Str("{", 1),jule::Str("}", 1),_72539_tokens);
	if (_74417_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_72617_m->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_MatchCase>();
	}
	std::tie(_72617_m->_field_cases,_72617_m->_field_default) = (*this)._method_build_cases(_74417_block_toks,_72617_m->_field_type_match);
	return _72617_m;
}



inline jule::Ref<_2053703bd_ScopeTree> _2053cae51_ScopeParser::_method_build_scope_st(jule::Slice<_20542560a_Token> _75637_tokens) {
	jule::Bool _75717_is_unsafe = false;
	jule::Bool _75817_is_deferred = false;
	_20542560a_Token _75917_token = _75637_tokens[0LL];
	if (_75917_token._field_id == 35LLU) {
		_75717_is_unsafe=true;
		_75637_tokens=_75637_tokens.slice(1LL);
		if (_75637_tokens.len() == 0LL) {
			(*this)._method_push_err(_75917_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_2053703bd_ScopeTree>();
		}
		_75917_token=_75637_tokens[0LL];
		if (_75917_token._field_id == 37LLU) {
			_75817_is_deferred=true;
			_75637_tokens=_75637_tokens.slice(1LL);
			if (_75637_tokens.len() == 0LL) {
				(*this)._method_push_err(_75917_token,jule::Str("invalid syntax", 14));
				return jule::new_ref<_2053703bd_ScopeTree>();
			}
		}
	} else if (_75917_token._field_id == 37LLU) {
		_75817_is_deferred=true;
		_75637_tokens=_75637_tokens.slice(1LL);
		if (_75637_tokens.len() == 0LL) {
			(*this)._method_push_err(_75917_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_2053703bd_ScopeTree>();
		}
	}
	jule::Int _78517_i = 0LL;
	jule::Slice<_20542560a_Token> _78617_scope_tokens = _206540c0d_range(_78517_i,jule::Str("{", 1),jule::Str("}", 1),_75637_tokens);
	if (_78617_scope_tokens == nullptr) {
		(*this)._method_push_err(_75917_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_2053703bd_ScopeTree>();
	} else if (_78517_i < _75637_tokens.len()) {
		(*this)._method_push_err(_75637_tokens[static_cast<jule::Int>(_78517_i)],jule::Str("invalid syntax", 14));
	}
	jule::Ref<_2053703bd_ScopeTree> _79317_scope = (*this)._method_build_scope(_78617_scope_tokens);
	_79317_scope->_field_unsafety=_75717_is_unsafe;
	_79317_scope->_field_deferred=_75817_is_deferred;
	return _79317_scope;
}



inline jule::Ref<_2053703bd_LabelSt> _2053cae51_ScopeParser::_method_build_label_st(jule::Slice<_20542560a_Token> _79937_tokens) {
	jule::Ref<_2053703bd_LabelSt> _80017_lbl = jule::new_struct<_2053703bd_LabelSt>(new( std::nothrow ) _2053703bd_LabelSt(_79937_tokens[0LL],_79937_tokens[0LL]._field_kind));
	if (_79937_tokens.len() > 2LL) {
		_79937_tokens=_79937_tokens.slice(2LL);
		(*this)._method_insert_as_next(_79937_tokens);
	}
	return _80017_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _2053cae51_ScopeParser::_method_build_id_st(jule::Slice<_20542560a_Token> _81434_tokens) {
	jule::Bool _81463_ok = jule::Bool();
	if (_81434_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_81463_ok);
	}
	_20542560a_Token _81917_token = _81434_tokens[1LL];
	{
		auto _match_expr{ _81917_token._field_id };
		if (!((11LLU) == _match_expr)) { goto _case_end_4386753824; }
		_case_begin_4386753824:;
		{
			_81463_ok = true;
			return std::make_tuple(jule::Any((*this)._method_build_label_st(_81434_tokens)),_81463_ok);
		}
		goto _match_end_4386750256;
		_case_end_4386753824:;
		_match_end_4386750256:;
	}
	return std::make_tuple(jule::Any(),_81463_ok);
}



inline jule::Ref<_20543982d_AssignInfo> _2053cae51_ScopeParser::_method_build_assign_info(jule::Slice<_20542560a_Token> _82840_tokens) {
	jule::Ref<_20543982d_AssignInfo> _82917_info = jule::new_struct<_20543982d_AssignInfo>(new( std::nothrow ) _20543982d_AssignInfo(jule::Slice<_20542560a_Token>(),jule::Slice<_20542560a_Token>(),_20542560a_Token(),true));
	jule::Int _83217_brace_n = 0LL;
	{
		auto _range_expr = _82840_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2053cae51_i = 0;
			_20542560a_Token _2053cae51_token = *_range_begin;
			_iter_begin_4386762096:;
			{
				if (_2053cae51_token._field_id == 3LLU) {
					{
						auto _match_expr{ _2053cae51_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4386766560; }
						_case_begin_4386766560:;
						{
							(_83217_brace_n)++;
						}
						goto _match_end_4386764976;
						_case_end_4386766560:;
						_case_begin_4386765760:;
						{
							(_83217_brace_n)--;
						}
						goto _match_end_4386764976;
						_case_end_4386765760:;
						_match_end_4386764976:;
					}
				}
				{
					if (!((_83217_brace_n > 0LL))) { goto _case_end_4386767808; }
					_case_begin_4386767808:;
					{
						goto _iter_next_4386762096;
					}
					goto _match_end_4386767648;
					_case_end_4386767808:;
					if (!((_2053cae51_token._field_id != 7LLU))) { goto _case_end_4386767920; }
					_case_begin_4386767920:;
					{
						goto _iter_next_4386762096;
					}
					goto _match_end_4386767648;
					_case_end_4386767920:;
					if (!(((!(_20542560a_is_assign_op(_2053cae51_token._field_kind)))))) { goto _case_end_4386764368; }
					_case_begin_4386764368:;
					{
						goto _iter_next_4386762096;
					}
					goto _match_end_4386767648;
					_case_end_4386764368:;
					_match_end_4386767648:;
				}
				_82917_info->_field_l=_82840_tokens.slice(0LL,static_cast<jule::Int>(_2053cae51_i));
				if (_82917_info->_field_l.len() == 0LL) {
					_82917_info->_field_ok=false;
				}
				_82917_info->_field_setter=_2053cae51_token;
				if ((_2053cae51_i + 1LL) >= _82840_tokens.len()) {
					_82917_info->_field_r=nullptr;
					_82917_info->_field_ok=_20542560a_is_postfix_op(_82917_info->_field_setter._field_kind);
					goto _iter_end_4386762096;
				}
				_82917_info->_field_r=_82840_tokens.slice(static_cast<jule::Int>(_2053cae51_i + 1LL));
				if (_20542560a_is_postfix_op(_82917_info->_field_setter._field_kind)) {
					if (_82917_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_82917_info->_field_r[0LL],jule::Str("invalid syntax", 14));
						_82917_info->_field_r=nullptr;
					}
				}
				goto _iter_end_4386762096;
			}
			_iter_next_4386762096:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2053cae51_i; _2053cae51_token = *_range_begin; goto _iter_begin_4386762096; }
			_iter_end_4386762096:;
		}
	}
	return _82917_info;
}



inline jule::Ref<_2053703bd_AssignLeft> _2053cae51_ScopeParser::_method_build_assign_l(jule::Slice<_20542560a_Token> _87537_tokens) {
	jule::Ref<_2053703bd_AssignLeft> _87617_l = jule::new_struct<_2053703bd_AssignLeft>(new( std::nothrow ) _2053703bd_AssignLeft(_87537_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ref<_2053703bd_Expr>()));
	if (_87537_tokens[0LL]._field_id == 2LLU) {
		_87617_l->_field_ident=_87617_l->_field_token._field_kind;
	}
	_87617_l->_field_expr=(*this)._field_p->_method_build_expr(_87537_tokens);
	return _87617_l;
}



inline jule::Slice<jule::Ref<_2053703bd_AssignLeft>> _2053cae51_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_20542560a_Token>> _88838_parts) {
	jule::Slice<jule::Ref<_2053703bd_AssignLeft>> _88917_lefts = nullptr;
	{
		auto _range_expr = _88838_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_20542560a_Token> _2053cae51_part = *_range_begin;
			_iter_begin_4386795872:;
			{
				jule::Ref<_2053703bd_AssignLeft> _89121_l = (*this)._method_build_assign_l(_2053cae51_part);
				_88917_lefts=jule::append(_88917_lefts,jule::Slice<jule::Ref<_2053703bd_AssignLeft>>({_89121_l}));
			}
			_iter_next_4386795872:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053cae51_part = *_range_begin; goto _iter_begin_4386795872; }
			_iter_end_4386795872:;
		}
	}
	return _88917_lefts;
}



inline std::tuple<jule::Ref<_2053703bd_AssignSt>,jule::Bool> _2053cae51_ScopeParser::_method_build_plain_assign(jule::Slice<_20542560a_Token> _89841_tokens) {
	jule::Ref<_20543982d_AssignInfo> _89917_info = (*this)._method_build_assign_info(_89841_tokens);
	if ((!(_89917_info->_field_ok))) {
		return std::make_tuple(jule::new_ref<_2053703bd_AssignSt>(),false);
	}
	jule::Ref<_2053703bd_AssignSt> _90417_assign = jule::new_struct<_2053703bd_AssignSt>(new( std::nothrow ) _2053703bd_AssignSt(jule::Bool(),_89917_info->_field_setter,jule::Slice<jule::Ref<_2053703bd_AssignLeft>>(),jule::Ref<_2053703bd_Expr>()));
	jule::Slice<jule::Slice<_20542560a_Token>> _90818_parts;
	jule::Slice<_20377124e_Log> _90825_errs;
	std::tie(_90818_parts,_90825_errs) = _206540c0d_parts(_89917_info->_field_l,8LLU,true);
	if (_90825_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_90825_errs);
		return std::make_tuple(jule::new_ref<_2053703bd_AssignSt>(),false);
	}
	_90417_assign->_field_left=(*this)._method_build_assign_ls(_90818_parts);
	if (_89917_info->_field_r != nullptr) {
		_90417_assign->_field_right=(*this)._field_p->_method_build_expr(_89917_info->_field_r);
	}
	return std::make_tuple(_90417_assign,true);
}



inline std::tuple<jule::Ref<_2053703bd_AssignSt>,jule::Bool> _2053cae51_ScopeParser::_method_build_decl_assign(jule::Slice<_20542560a_Token> _92240_tokens) {
	if (_92240_tokens.len() < 1LL) {
		return std::make_tuple(jule::new_ref<_2053703bd_AssignSt>(),false);
	}
	_92240_tokens=_92240_tokens.slice(1LL);
	_20542560a_Token _92817_token = _92240_tokens[0LL];
	if ((_92817_token._field_id != 3LLU) || (_92817_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(jule::new_ref<_2053703bd_AssignSt>(),false);
	}
	jule::Ref<_2053703bd_AssignSt> _93317_assign = jule::new_struct<_2053703bd_AssignSt>(new( std::nothrow ) _2053703bd_AssignSt(true,_20542560a_Token(),jule::Slice<jule::Ref<_2053703bd_AssignLeft>>(),jule::Ref<_2053703bd_Expr>()));
	jule::Int _93717_i = 0LL;
	jule::Slice<_20542560a_Token> _93817_rang = _206540c0d_range(_93717_i,jule::Str("(", 1),jule::Str(")", 1),_92240_tokens);
	if (_93817_rang == nullptr) {
		(*this)._method_push_err(_92817_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(jule::new_ref<_2053703bd_AssignSt>(),false);
	} else if ((_93717_i + 1LL) < _92240_tokens.len()) {
		_93317_assign->_field_setter=_92240_tokens[static_cast<jule::Int>(_93717_i)];
		(_93717_i)++;
		_93317_assign->_field_right=(*this)._field_p->_method_build_expr(_92240_tokens.slice(static_cast<jule::Int>(_93717_i)));
	}
	jule::Slice<jule::Slice<_20542560a_Token>> _94918_parts;
	jule::Slice<_20377124e_Log> _94925_errs;
	std::tie(_94918_parts,_94925_errs) = _206540c0d_parts(_93817_rang,8LLU,true);
	if (_94925_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_94925_errs);
		return std::make_tuple(jule::new_ref<_2053703bd_AssignSt>(),false);
	}
	{
		auto _range_expr = _94918_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_20542560a_Token> _2053cae51_part = *_range_begin;
			_iter_begin_4386838688:;
			{
				jule::Bool _95621_is_mut = false;
				jule::Bool _95721_is_ref = false;
				_92817_token=_2053cae51_part[0LL];
				if (_92817_token._field_id == 36LLU) {
					_95621_is_mut=true;
					_2053cae51_part=_2053cae51_part.slice(1LL);
					if (_2053cae51_part.len() == 0LL) {
						(*this)._method_push_err(_92817_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4386838688;
					}
				}
				if ((_2053cae51_part[0LL]._field_id == 7LLU) && (_2053cae51_part[0LL]._field_kind == jule::Str("&", 1))) {
					_95721_is_ref=true;
					_2053cae51_part=_2053cae51_part.slice(1LL);
					if (_2053cae51_part.len() == 0LL) {
						(*this)._method_push_err(_92817_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4386838688;
					}
				}
				if (((_2053cae51_part[0LL]._field_id != 2LLU) && (_2053cae51_part[0LL]._field_id != 3LLU)) && (_2053cae51_part[0LL]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_92817_token,jule::Str("invalid syntax", 14));
					goto _iter_next_4386838688;
				}
				jule::Ref<_2053703bd_AssignLeft> _98521_l = (*this)._method_build_assign_l(_2053cae51_part);
				_98521_l->_field_mutable=_95621_is_mut;
				_98521_l->_field_reference=_95721_is_ref;
				_93317_assign->_field_left=jule::append(_93317_assign->_field_left,jule::Slice<jule::Ref<_2053703bd_AssignLeft>>({_98521_l}));
			}
			_iter_next_4386838688:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053cae51_part = *_range_begin; goto _iter_begin_4386838688; }
			_iter_end_4386838688:;
		}
	}
	return std::make_tuple(_93317_assign,true);
}



inline std::tuple<jule::Ref<_2053703bd_AssignSt>,jule::Bool> _2053cae51_ScopeParser::_method_build_assign_st(jule::Slice<_20542560a_Token> _99438_tokens) {
	jule::Ref<_2053703bd_AssignSt> _99457_st = jule::Ref<_2053703bd_AssignSt>();
	jule::Bool _99472_ok = jule::Bool();
	if ((!(_20543982d_check_assign_tokens(_99438_tokens)))) {
		_99457_st = jule::new_ref<_2053703bd_AssignSt>();
		_99472_ok = false;
		return std::make_tuple(_99457_st,_99472_ok);
	}
	{
		auto _match_expr{ _99438_tokens[0LL]._field_id };
		if (!((34LLU) == _match_expr)) { goto _case_end_4386875536; }
		_case_begin_4386875536:;
		{
			std::tie(_99457_st,_99472_ok) = (*this)._method_build_decl_assign(_99438_tokens);
		}
		goto _match_end_4386871296;
		_case_end_4386875536:;
		_case_begin_4386873520:;
		{
			std::tie(_99457_st,_99472_ok) = (*this)._method_build_plain_assign(_99438_tokens);
		}
		goto _match_end_4386871296;
		_case_end_4386873520:;
		_match_end_4386871296:;
	}
	return std::make_tuple(_99457_st,_99472_ok);
}



inline jule::Any _2053cae51_ScopeParser::_method_build_st(jule::Ref<_2053cae51_Stmt> _100731_st) {
	_20542560a_Token _100817_token = _100731_st->_field_tokens[0LL];
	if (_100817_token._field_id == 2LLU) {
		jule::Any _101022_s;
		jule::Bool _101025_ok;
		std::tie(_101022_s,_101025_ok) = (*this)._method_build_id_st(_100731_st->_field_tokens);
		if (_101025_ok) {
			return _101022_s;
		}
	}
	jule::Ref<_2053703bd_AssignSt> _101618_s;
	jule::Bool _101621_ok;
	std::tie(_101618_s,_101621_ok) = (*this)._method_build_assign_st(_100731_st->_field_tokens);
	if (_101621_ok) {
		return jule::Any(_101618_s);
	}
	{
		auto _match_expr{ _100817_token._field_id };
		if (!((38LLU) == _match_expr || (9LLU) == _match_expr || (34LLU) == _match_expr || (36LLU) == _match_expr)) { goto _case_end_4386888640; }
		_case_begin_4386888640:;
		{
			return (*this)._method_build_var_st(_100731_st->_field_tokens);
		}
		goto _match_end_4386886960;
		_case_end_4386888640:;
		if (!((4LLU) == _match_expr)) { goto _case_end_4386887344; }
		_case_begin_4386887344:;
		{
			return (*this)._method_build_ret_st(_100731_st->_field_tokens);
		}
		goto _match_end_4386886960;
		_case_end_4386887344:;
		if (!((12LLU) == _match_expr)) { goto _case_end_4386887456; }
		_case_begin_4386887456:;
		{
			return (*this)._method_buid_iter_st(_100731_st);
		}
		goto _match_end_4386886960;
		_case_end_4386887456:;
		if (!((13LLU) == _match_expr)) { goto _case_end_4386887568; }
		_case_begin_4386887568:;
		{
			return (*this)._method_build_break_st(_100731_st->_field_tokens);
		}
		goto _match_end_4386886960;
		_case_end_4386887568:;
		if (!((14LLU) == _match_expr)) { goto _case_end_4386887680; }
		_case_begin_4386887680:;
		{
			return (*this)._method_build_cont_st(_100731_st->_field_tokens);
		}
		goto _match_end_4386886960;
		_case_end_4386887680:;
		if (!((16LLU) == _match_expr)) { goto _case_end_4386887792; }
		_case_begin_4386887792:;
		{
			return (*this)._method_build_if_else_chain(_100731_st->_field_tokens);
		}
		goto _match_end_4386886960;
		_case_end_4386887792:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4386887904; }
		_case_begin_4386887904:;
		{
			return (*this)._method_build_comment_st(_100817_token);
		}
		goto _match_end_4386886960;
		_case_end_4386887904:;
		if (!((26LLU) == _match_expr)) { goto _case_end_4386888016; }
		_case_begin_4386888016:;
		{
			return (*this)._method_build_co_call_st(_100731_st->_field_tokens);
		}
		goto _match_end_4386886960;
		_case_end_4386888016:;
		if (!((22LLU) == _match_expr)) { goto _case_end_4386888128; }
		_case_begin_4386888128:;
		{
			return (*this)._method_build_goto_st(_100731_st->_field_tokens);
		}
		goto _match_end_4386886960;
		_case_end_4386888128:;
		if (!((32LLU) == _match_expr)) { goto _case_end_4386890704; }
		_case_begin_4386890704:;
		{
			return (*this)._method_build_fall_st(_100731_st->_field_tokens);
		}
		goto _match_end_4386886960;
		_case_end_4386890704:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4386890816; }
		_case_begin_4386890816:;
		{
			return (*this)._method_build_type_alias_st(_100731_st->_field_tokens);
		}
		goto _match_end_4386886960;
		_case_end_4386890816:;
		if (!((27LLU) == _match_expr)) { goto _case_end_4386890928; }
		_case_begin_4386890928:;
		{
			return jule::Any((*this)._method_build_match_case(_100731_st->_field_tokens));
		}
		goto _match_end_4386886960;
		_case_end_4386890928:;
		if (!((35LLU) == _match_expr || (37LLU) == _match_expr)) { goto _case_end_4386891040; }
		_case_begin_4386891040:;
		{
			return jule::Any((*this)._method_build_scope_st(_100731_st->_field_tokens));
		}
		goto _match_end_4386886960;
		_case_end_4386891040:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4386891152; }
		_case_begin_4386891152:;
		{
			if (_100817_token._field_kind == jule::Str("{", 1)) {
				return jule::Any((*this)._method_build_scope_st(_100731_st->_field_tokens));
			}
		}
		goto _match_end_4386886960;
		_case_end_4386891152:;
		_case_begin_4386884624:;
		{
			if (_2054205a0_is_fn_call(_100731_st->_field_tokens) != nullptr) {
				return (*this)._method_build_call_st(_100731_st->_field_tokens);
			}
		}
		goto _match_end_4386886960;
		_case_end_4386884624:;
		_match_end_4386886960:;
	}
	(*this)._method_push_err(_100817_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _2053cae51_ScopeParser::_method_build(jule::Slice<_20542560a_Token> _108328_tokens,jule::Ref<_2053703bd_ScopeTree> _108349_s) {
	if ((!(jule::real(_108349_s)))) {
		return;
	}
	(*this)._field_stms=_2053cae51_split_stms(_108328_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_108349_s;
	_iter_begin_4386913776:;
	if (!((!((*this)._method_is_last_st())) && (!((*this)._method_finished())))) { goto _iter_end_4386913776; }
	{
		jule::Ref<_2053cae51_Stmt> _109221_st = (*this)._method_next();
		jule::Any _109321_data = (*this)._method_build_st(_109221_st);
		if (_109321_data != nullptr) {
			(*this)._field_s->_field_stmts=jule::append((*this)._field_s->_field_stmts,jule::Slice<jule::Any>({_109321_data}));
		}
		if ((*this)._method_stopped()) {
			goto _iter_end_4386913776;
		}
	}
	_iter_next_4386913776:;
	goto _iter_begin_4386913776;
	_iter_end_4386913776:;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053cae51_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stms:" << _Src._field_stms << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2054205a0_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _2054205a0_Precedencer::_method_set(jule::Int _15522_level,jule::Any _15534_expr) {
	{
		auto _range_expr = (*this)._field_pairs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2054205a0_i = 0;
			jule::Slice<jule::Any> _2054205a0_pair = *_range_begin;
			_iter_begin_4386923248:;
			{
				jule::Int _15717_pair_level = _2054205a0_pair[0LL].operator jule::Int();
				if (_15522_level > _15717_pair_level) {
					jule::Slice<jule::Slice<jule::Any>> _15925_first = (*this)._field_pairs.slice(0LL,static_cast<jule::Int>(_2054205a0_i));
					jule::Slice<jule::Slice<jule::Any>> _16025_buffer = jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15522_level),_15534_expr})});
					jule::Slice<jule::Slice<jule::Any>> _16125_appended = jule::append(_16025_buffer,(*this)._field_pairs.slice(static_cast<jule::Int>(_2054205a0_i)));
					(*this)._field_pairs=jule::append(_15925_first,_16125_appended);
					return;
				}
			}
			_iter_next_4386923248:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2054205a0_i; _2054205a0_pair = *_range_begin; goto _iter_begin_4386923248; }
			_iter_end_4386923248:;
		}
	}
	(*this)._field_pairs=jule::append((*this)._field_pairs,jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15522_level),_15534_expr})}));
}



inline jule::Any _2054205a0_Precedencer::_method_get_lower(void) {
	jule::I64 _17017_i = (*this)._field_pairs.len() - 1LL;
	_iter_begin_4386922640:;
	if (!(_17017_i >= 0LL)) { goto _iter_end_4386922640; }
	{
		jule::Any _17221_data = (*this)._field_pairs[static_cast<jule::Int>(_17017_i)][1LL];
		if (_17221_data != nullptr) {
			return _17221_data;
		}
	}
	_iter_next_4386922640:;
	(_17017_i)--;
	goto _iter_begin_4386922640;
	_iter_end_4386922640:;
	return jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _2054205a0_Precedencer &_Src) {
	_Stream << "Precedencer{";
	_Stream << "pairs:" << _Src._field_pairs;
	_Stream << "}";
	return _Stream;
}



inline void _2054205a0_ExprBuilder::_method_push_err(_20542560a_Token _28727_token,jule::Str _28741_fmt,jule::Slice<jule::Any> _28754_args) {
	(*this)._field_p->_method_push_err(_28727_token,_28741_fmt,_28754_args);
}



inline void _2054205a0_ExprBuilder::_method_push_suggestion(jule::Str _29234_fmt,jule::Slice<jule::Any> _29247_args) {
	(*this)._field_p->_method_push_suggestion(_29234_fmt,_29247_args);
}



inline jule::Ref<_2053703bd_TupleExpr> _2054205a0_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_20542560a_Token>> _29634_parts) {
	jule::Ref<_2053703bd_TupleExpr> _29717_tuple = jule::new_struct<_2053703bd_TupleExpr>(new( std::nothrow ) _2053703bd_TupleExpr(jule::Slice<jule::Ref<_2053703bd_Expr>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_29634_parts.len())))));
	{
		auto _range_expr = _29634_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2054205a0_i = 0;
			jule::Slice<_20542560a_Token> _2054205a0_part = *_range_begin;
			_iter_begin_4386976176:;
			{
				_29717_tuple->_field_expr[static_cast<jule::Int>(_2054205a0_i)]=(*this)._method_build_from_tokens(_2054205a0_part);
			}
			_iter_next_4386976176:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2054205a0_i; _2054205a0_part = *_range_begin; goto _iter_begin_4386976176; }
			_iter_end_4386976176:;
		}
	}
	return _29717_tuple;
}



inline jule::Ref<_2053703bd_LitExpr> _2054205a0_ExprBuilder::_method_build_lit(_20542560a_Token _30628_token) {
	return jule::new_struct<_2053703bd_LitExpr>(new( std::nothrow ) _2053703bd_LitExpr(_30628_token,_30628_token._field_kind));
}



inline jule::Ref<_2053703bd_TypeDecl> _2054205a0_ExprBuilder::_method_build_primitive_type(_20542560a_Token _31339_token) {
	return _206581226_build_prim_type(_31339_token);
}



inline jule::Any _2054205a0_ExprBuilder::_method_build_single(_20542560a_Token _31735_token) {
	{
		auto _match_expr{ _31735_token._field_id };
		if (!((6LLU) == _match_expr)) { goto _case_end_4386992416; }
		_case_begin_4386992416:;
		{
			return jule::Any((*this)._method_build_lit(_31735_token));
		}
		goto _match_end_4386988640;
		_case_end_4386992416:;
		if (!((2LLU) == _match_expr || (28LLU) == _match_expr)) { goto _case_end_4386989616; }
		_case_begin_4386989616:;
		{
			return jule::Any(_2054205a0_build_ident_expr(_31735_token));
		}
		goto _match_end_4386988640;
		_case_end_4386989616:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4386989728; }
		_case_begin_4386989728:;
		{
			return jule::Any((*this)._method_build_primitive_type(_31735_token));
		}
		goto _match_end_4386988640;
		_case_end_4386989728:;
		_case_begin_4386989312:;
		{
			(*this)._method_push_err(_31735_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4386988640;
		_case_end_4386989312:;
		_match_end_4386988640:;
	}
}



inline jule::Ref<_2053703bd_IdentExpr> _2054205a0_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_20542560a_Token> _33545_tokens) {
	if (_33545_tokens[0LL]._field_id != 31LLU) {
		return jule::new_ref<_2053703bd_IdentExpr>();
	} else if (_33545_tokens[1LL]._field_id != 20LLU) {
		(*this)._method_push_err(_33545_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_IdentExpr>();
	}
	_20542560a_Token _34317_token = _33545_tokens[2LL];
	if (_34317_token._field_id != 2LLU) {
		(*this)._method_push_err(_33545_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_IdentExpr>();
	}
	jule::Ref<_2053703bd_IdentExpr> _34917_expr = _2054205a0_build_ident_expr(_34317_token);
	_34917_expr->_field_cpp_linked=true;
	return _34917_expr;
}



inline jule::Ref<_2053703bd_UnaryExpr> _2054205a0_ExprBuilder::_method_build_unary(jule::Slice<_20542560a_Token> _35434_tokens) {
	_20542560a_Token _35517_op = _35434_tokens[0LL];
	if (_35434_tokens.len() == 1LL) {
		(*this)._method_push_err(_35517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_UnaryExpr>();
	} else if ((!(_20542560a_is_unary_op(_35517_op._field_kind)))) {
		(*this)._method_push_err(_35517_op,jule::Str("invalid_operator_for_unary: @", 29),jule::Slice<jule::Any>({jule::Any(_35517_op._field_kind)}));
		return jule::new_ref<_2053703bd_UnaryExpr>();
	}
	_35434_tokens=_35434_tokens.slice(1LL);
	return jule::new_struct<_2053703bd_UnaryExpr>(new( std::nothrow ) _2053703bd_UnaryExpr(_35517_op,(*this)._method_build(_35434_tokens)));
}



inline jule::Ref<_2053703bd_SubIdentExpr> _2054205a0_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_20542560a_Token> _37542_tokens) {
	jule::I64 _37617_i = _37542_tokens.len() - 1LL;
	_20542560a_Token _37717_ident_token = _37542_tokens[static_cast<jule::Int>(_37617_i)];
	(_37617_i)--;
	_37542_tokens=_37542_tokens.slice(0LL,static_cast<jule::Int>(_37617_i));
	if (_37542_tokens.len() == 0LL) {
		(*this)._method_push_err(_37717_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_SubIdentExpr>();
	}
	return jule::new_struct<_2053703bd_SubIdentExpr>(new( std::nothrow ) _2053703bd_SubIdentExpr(jule::Bool(),(*this)._method_build(_37542_tokens),_37717_ident_token));
}



inline jule::Ref<_2053703bd_NsSelectionExpr> _2054205a0_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_20542560a_Token> _39041_tokens) {
	jule::Ref<_2053703bd_NsSelectionExpr> _39117_ns = jule::new_struct<_2053703bd_NsSelectionExpr>(new( std::nothrow ) _2053703bd_NsSelectionExpr());
	{
		auto _range_expr = _39041_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2054205a0_i = 0;
			_20542560a_Token _2054205a0_token = *_range_begin;
			_iter_begin_4387038112:;
			{
				if (jule::mod(_2054205a0_i,2LL) == 0LL) {
					if (_2054205a0_token._field_id != 2LLU) {
						(*this)._method_push_err(_2054205a0_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					}
					_39117_ns->_field_ns=jule::append(_39117_ns->_field_ns,jule::Slice<_20542560a_Token>({_2054205a0_token}));
				} else if (_2054205a0_token._field_id != 23LLU) {
					(*this)._method_push_err(_2054205a0_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>({}));
				}
			}
			_iter_next_4387038112:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2054205a0_i; _2054205a0_token = *_range_begin; goto _iter_begin_4387038112; }
			_iter_end_4387038112:;
		}
	}
	_39117_ns->_field_ident=_39117_ns->_field_ns[static_cast<jule::Int>(_39117_ns->_field_ns.len() - 1LL)];
	_39117_ns->_field_ns=_39117_ns->_field_ns.slice(0LL,static_cast<jule::Int>(_39117_ns->_field_ns.len() - 1LL));
	return _39117_ns;
}



inline jule::Ref<_2053703bd_TypeDecl> _2054205a0_ExprBuilder::_method_build_type(jule::Slice<_20542560a_Token> _40933_tokens) {
	jule::Int _41017_i = 0LL;
	jule::Ref<_2053703bd_TypeDecl> _41118_t;
	jule::Bool _41121_ok;
	std::tie(_41118_t,_41121_ok) = (*this)._field_p->_method_build_type(_40933_tokens,(&(_41017_i)),false);
	if ((!(_41121_ok))) {
		(*this)._method_push_err(_40933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_TypeDecl>();
	}
	if (_41017_i < _40933_tokens.len()) {
		(*this)._method_push_err(_40933_tokens[static_cast<jule::Int>(_41017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _41118_t;
}



inline jule::Any _2054205a0_ExprBuilder::_method_build_sub_ident(jule::Slice<_20542560a_Token> _42338_tokens) {
	jule::I64 _42413_i = _42338_tokens.len() - 2LL;
	_20542560a_Token _42513_token = _42338_tokens[static_cast<jule::Int>(_42413_i)];
	{
		auto _match_expr{ _42513_token._field_id };
		if (!((20LLU) == _match_expr)) { goto _case_end_4387069840; }
		_case_begin_4387069840:;
		{
			return jule::Any((*this)._method_build_obj_sub_ident(_42338_tokens));
		}
		goto _match_end_4387067408;
		_case_end_4387069840:;
		if (!((23LLU) == _match_expr)) { goto _case_end_4387069952; }
		_case_begin_4387069952:;
		{
			return jule::Any((*this)._method_build_ns_sub_ident(_42338_tokens));
		}
		goto _match_end_4387067408;
		_case_end_4387069952:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4387070064; }
		_case_begin_4387070064:;
		{
			if (_42513_token._field_kind == jule::Str("]", 1)) {
				return jule::Any((*this)._method_build_type(_42338_tokens));
			}
		}
		goto _match_end_4387067408;
		_case_end_4387070064:;
		_match_end_4387067408:;
	}
	(*this)._method_push_err(_42513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_2053703bd_VariadicExpr> _2054205a0_ExprBuilder::_method_build_variadic(jule::Slice<_20542560a_Token> _44437_tokens) {
	_20542560a_Token _44517_token = _44437_tokens[static_cast<jule::Int>(_44437_tokens.len() - 1LL)];
	_44437_tokens=_44437_tokens.slice(0LL,static_cast<jule::Int>(_44437_tokens.len() - 1LL));
	return jule::new_struct<_2053703bd_VariadicExpr>(new( std::nothrow ) _2053703bd_VariadicExpr(_44517_token,(*this)._method_build(_44437_tokens)));
}



inline jule::Any _2054205a0_ExprBuilder::_method_build_op_right(jule::Slice<_20542560a_Token> _45337_tokens) {
	_20542560a_Token _45417_token = _45337_tokens[static_cast<jule::Int>(_45337_tokens.len() - 1LL)];
	{
		auto _match_expr{ _45417_token._field_kind };
		if (!((jule::Str("...", 3)) == _match_expr)) { goto _case_end_4387089200; }
		_case_begin_4387089200:;
		{
			return jule::Any((*this)._method_build_variadic(_45337_tokens));
		}
		goto _match_end_4387087696;
		_case_end_4387089200:;
		_case_begin_4387088384:;
		{
			(*this)._method_push_err(_45417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4387087696;
		_case_end_4387088384:;
		_match_end_4387087696:;
	}
}



inline jule::Any _2054205a0_ExprBuilder::_method_build_between_parentheses(jule::Slice<_20542560a_Token> _46548_tokens) {
	_20542560a_Token _46613_token = _46548_tokens[0LL];
	_46548_tokens=_46548_tokens.slice(1LL,static_cast<jule::Int>(_46548_tokens.len() - 1LL));
	if (_46548_tokens.len() == 0LL) {
		(*this)._method_push_err(_46613_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_46548_tokens);
}



inline jule::Ref<_2053703bd_CastExpr> _2054205a0_ExprBuilder::_method_try_build_cast(jule::Slice<_20542560a_Token> _47637_tokens) {
	jule::Int _47717_range_n = 0LL;
	{
		auto _range_expr = _47637_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2054205a0_i = 0;
			_20542560a_Token _2054205a0_token = *_range_begin;
			_iter_begin_4387104944:;
			{
				if (_2054205a0_token._field_id == 3LLU) {
					{
						auto _match_expr{ _2054205a0_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4387109296; }
						_case_begin_4387109296:;
						{
							(_47717_range_n)++;
							goto _iter_next_4387104944;
						}
						goto _match_end_4387107712;
						_case_end_4387109296:;
						_case_begin_4387108496:;
						{
							(_47717_range_n)--;
						}
						goto _match_end_4387107712;
						_case_end_4387108496:;
						_match_end_4387107712:;
					}
				}
				if (_47717_range_n > 0LL) {
					goto _iter_next_4387104944;
				} else if ((_2054205a0_i + 1LL) == _47637_tokens.len()) {
					return jule::new_ref<_2053703bd_CastExpr>();
				}
				jule::Slice<_20542560a_Token> _49821_type_tokens = _47637_tokens.slice(0LL,static_cast<jule::Int>(_2054205a0_i + 1LL));
				jule::Slice<_20542560a_Token> _49921_expr_tokens = _47637_tokens.slice(static_cast<jule::Int>(_2054205a0_i + 1LL));
				if (_49921_expr_tokens.len() == 0LL) {
					return jule::new_ref<_2053703bd_CastExpr>();
				}
				_20542560a_Token _50617_tok = _49921_expr_tokens[0LL];
				if ((_50617_tok._field_id != 3LLU) || (_50617_tok._field_kind != jule::Str("(", 1))) {
					return jule::new_ref<_2053703bd_CastExpr>();
				}
				jule::Ref<_2053703bd_CastExpr> _51121_cast = jule::new_struct<_2053703bd_CastExpr>(new( std::nothrow ) _2053703bd_CastExpr());
				if (_49921_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_49921_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>({}));
				}
				if (_49821_type_tokens.len() == 2LL) {
					(*this)._method_push_err(_49821_type_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>({}));
				} else {
					_49821_type_tokens=_49821_type_tokens.slice(1LL,static_cast<jule::Int>(_49821_type_tokens.len() - 1LL));
					jule::Int _52525_type_index = 0LL;
					jule::Ref<_2053703bd_TypeDecl> _52626_t;
					jule::Bool _52629_ok;
					std::tie(_52626_t,_52629_ok) = (*this)._field_p->_method_build_type(_49821_type_tokens,(&(_52525_type_index)),true);
					if (_52629_ok && (_52525_type_index < _49821_type_tokens.len())) {
						(*this)._method_push_err(_49821_type_tokens[static_cast<jule::Int>(_52525_type_index)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					} else if ((!(_52629_ok))) {
						return _51121_cast;
					}
					_51121_cast->_field_kind=_52626_t;
					if (_49921_expr_tokens.len() > 2LL) {
						jule::Int _53629_j = 0LL;
						_206540c0d_range(_53629_j,jule::Str("(", 1),jule::Str(")", 1),_49921_expr_tokens);
						if (_53629_j < _49921_expr_tokens.len()) {
							return jule::new_ref<_2053703bd_CastExpr>();
						}
						_51121_cast->_field_expr=(*this)._method_build(_49921_expr_tokens.slice(0LL,static_cast<jule::Int>(_53629_j)));
					}
				}
				return _51121_cast;
			}
			_iter_next_4387104944:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2054205a0_i; _2054205a0_token = *_range_begin; goto _iter_begin_4387104944; }
			_iter_end_4387104944:;
		}
	}
	return jule::new_ref<_2053703bd_CastExpr>();
}



inline void _2054205a0_ExprBuilder::_method_push_arg(jule::Slice<jule::Ref<_2053703bd_Expr>>& _55032_args,jule::Slice<_20542560a_Token> _55051_tokens,_20542560a_Token _55068_err_token) {
	if (_55051_tokens.len() == 0LL) {
		(*this)._method_push_err(_55068_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_55032_args=jule::append(_55032_args,jule::Slice<jule::Ref<_2053703bd_Expr>>({(*this)._method_build_from_tokens(_55051_tokens)}));
}



inline jule::Slice<jule::Ref<_2053703bd_Expr>> _2054205a0_ExprBuilder::_method_build_args(jule::Slice<_20542560a_Token> _55933_tokens) {
	if (_55933_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_2053703bd_Expr>> _56517_args = nullptr;
	jule::Int _56617_last = 0LL;
	jule::Int _56717_range_n = 0LL;
	_55933_tokens=_55933_tokens.slice(1LL,static_cast<jule::Int>(_55933_tokens.len() - 1LL));
	{
		auto _range_expr = _55933_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2054205a0_i = 0;
			_20542560a_Token _2054205a0_token = *_range_begin;
			_iter_begin_4387159808:;
			{
				if (_2054205a0_token._field_id == 3LLU) {
					{
						auto _match_expr{ _2054205a0_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4387165376; }
						_case_begin_4387165376:;
						{
							(_56717_range_n)++;
						}
						goto _match_end_4387163792;
						_case_end_4387165376:;
						_case_begin_4387164576:;
						{
							(_56717_range_n)--;
						}
						goto _match_end_4387163792;
						_case_end_4387164576:;
						_match_end_4387163792:;
					}
				}
				if ((_56717_range_n > 0LL) || (_2054205a0_token._field_id != 8LLU)) {
					goto _iter_next_4387159808;
				}
				(*this)._method_push_arg(_56517_args,_55933_tokens.slice(static_cast<jule::Int>(_56617_last),static_cast<jule::Int>(_2054205a0_i)),_2054205a0_token);
				_56617_last=static_cast<jule::Int>(_2054205a0_i + 1LL);
			}
			_iter_next_4387159808:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2054205a0_i; _2054205a0_token = *_range_begin; goto _iter_begin_4387159808; }
			_iter_end_4387159808:;
		}
	}
	if (_56617_last < _55933_tokens.len()) {
		if (_56617_last == 0LL) {
			if (_55933_tokens.len() > 0LL) {
				(*this)._method_push_arg(_56517_args,_55933_tokens.slice(static_cast<jule::Int>(_56617_last)),_55933_tokens[static_cast<jule::Int>(_56617_last)]);
			}
		} else {
			(*this)._method_push_arg(_56517_args,_55933_tokens.slice(static_cast<jule::Int>(_56617_last)),_55933_tokens[static_cast<jule::Int>(_56617_last - 1LL)]);
		}
	}
	return _56517_args;
}



inline jule::Slice<jule::Ref<_2053703bd_TypeDecl>> _2054205a0_ExprBuilder::_method_build_call_generics(jule::Slice<_20542560a_Token> _60242_tokens) {
	if (_60242_tokens.len() == 0LL) {
		return nullptr;
	}
	_60242_tokens=_60242_tokens.slice(1LL,static_cast<jule::Int>(_60242_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_20542560a_Token>> _60818_parts;
	jule::Slice<_20377124e_Log> _60825_errs;
	std::tie(_60818_parts,_60825_errs) = _206540c0d_parts(_60242_tokens,8LLU,true);
	jule::Slice<jule::Ref<_2053703bd_TypeDecl>> _60917_generics = jule::Slice<jule::Ref<_2053703bd_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_60818_parts.len())));
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_60825_errs);
	{
		auto _range_expr = _60818_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2054205a0_i = 0;
			jule::Slice<_20542560a_Token> _2054205a0_part = *_range_begin;
			_iter_begin_4387185360:;
			{
				if (_2054205a0_part.len() == 0LL) {
					goto _iter_next_4387185360;
				}
				jule::Int _61521_j = 0LL;
				jule::Ref<_2053703bd_TypeDecl> _61622_generic;
				std::tie(_61622_generic,std::ignore) = (*this)._field_p->_method_build_type(_2054205a0_part,(&(_61521_j)),true);
				if (_61521_j < _2054205a0_part.len()) {
					(*this)._method_push_err(_2054205a0_part[static_cast<jule::Int>(_61521_j)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_60917_generics[static_cast<jule::Int>(_2054205a0_i)]=_61622_generic;
			}
			_iter_next_4387185360:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2054205a0_i; _2054205a0_part = *_range_begin; goto _iter_begin_4387185360; }
			_iter_end_4387185360:;
		}
	}
	return _60917_generics;
}



inline jule::Ref<_2053703bd_FnCallExpr> _2054205a0_ExprBuilder::_method_build_fn_call(_20542560a_Token _62636_token,jule::Ref<_2054205a0_CallData> _62654_data) {
	return jule::new_struct<_2053703bd_FnCallExpr>(new( std::nothrow ) _2053703bd_FnCallExpr(_62636_token,(*this)._method_build_from_tokens(_62654_data->_field_expr_tokens),(*this)._method_build_call_generics(_62654_data->_field_generics_tokens),(*this)._method_build_args(_62654_data->_field_args_tokens),jule::Bool()));
}



inline jule::Any _2054205a0_ExprBuilder::_method_build_parentheses_range(jule::Slice<_20542560a_Token> _63546_tokens) {
	_20542560a_Token _63617_token = _63546_tokens[0LL];
	{
		auto _match_expr{ _63617_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4387211456; }
		_case_begin_4387211456:;
		{
			{
				auto _match_expr{ _63617_token._field_kind };
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4387213168; }
				_case_begin_4387213168:;
				{
					jule::Ref<_2053703bd_CastExpr> _64125_expr = (*this)._method_try_build_cast(_63546_tokens);
					if (jule::real(_64125_expr)) {
						return jule::Any(_64125_expr);
					}
				}
				goto _match_end_4387212016;
				_case_end_4387213168:;
				_match_end_4387212016:;
			}
		}
		goto _match_end_4387210736;
		_case_end_4387211456:;
		_match_end_4387210736:;
	}
	jule::Ref<_2054205a0_CallData> _64817_data = _2054205a0_get_call_data(_63546_tokens);
	if (_64817_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_64817_data->_field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_63617_token,_64817_data));
}



inline jule::Ref<_2053703bd_UnsafeExpr> _2054205a0_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_20542560a_Token> _65940_tokens) {
	_20542560a_Token _66017_token = _65940_tokens[0LL];
	_65940_tokens=_65940_tokens.slice(1LL);
	jule::Int _66217_i = 0LL;
	jule::Slice<_20542560a_Token> _66317_range_tokens = _206540c0d_range(_66217_i,jule::Str("{", 1),jule::Str("}", 1),_65940_tokens);
	if (_66317_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_65940_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_UnsafeExpr>();
	}
	return jule::new_struct<_2053703bd_UnsafeExpr>(new( std::nothrow ) _2053703bd_UnsafeExpr(_66017_token,(*this)._method_build_from_tokens(_66317_range_tokens)->_field_kind));
}



inline jule::Ref<_2053703bd_FnDecl> _2054205a0_ExprBuilder::_method_build_anon_fn(jule::Slice<_20542560a_Token> _67436_tokens) {
	jule::Ref<_2053703bd_FnDecl> _67517_f = (*this)._field_p->_method_build_fn(_67436_tokens,false,false);
	if ((!(_67517_f->_method_is_anon()))) {
		(*this)._method_push_err(_67517_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>({}));
	}
	return _67517_f;
}



inline jule::Any _2054205a0_ExprBuilder::_method_build_unsafe(jule::Slice<_20542560a_Token> _68335_tokens) {
	{
		auto _match_expr{ _68335_tokens[1LL]._field_id };
		if (!((33LLU) == _match_expr)) { goto _case_end_4387261696; }
		_case_begin_4387261696:;
		{
			return jule::Any((*this)._method_build_anon_fn(_68335_tokens));
		}
		goto _match_end_4387258944;
		_case_end_4387261696:;
		_case_begin_4387260240:;
		{
			return jule::Any((*this)._method_build_unsafe_expr(_68335_tokens));
		}
		goto _match_end_4387258944;
		_case_end_4387260240:;
		_match_end_4387258944:;
	}
}



inline void _2054205a0_ExprBuilder::_method_push_range_lit_part(jule::Slice<_20542560a_Token> _69442_part,_20542560a_Token _6959_error_token,jule::Slice<jule::Slice<_20542560a_Token>>& _69534_parts) {
	if (_69442_part.len() == 0LL) {
		(*this)._method_push_err(_6959_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_69534_parts=jule::append(_69534_parts,jule::Slice<jule::Slice<_20542560a_Token>>({_69442_part}));
}



inline jule::Slice<jule::Slice<_20542560a_Token>> _2054205a0_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_20542560a_Token> _70553_tokens) {
	if (_70553_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_20542560a_Token>> _71117_parts = nullptr;
	jule::Int _71317_last = 0LL;
	jule::Int _71417_range_n = 0LL;
	_70553_tokens=_70553_tokens.slice(1LL,static_cast<jule::Int>(_70553_tokens.len() - 1LL));
	{
		auto _range_expr = _70553_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2054205a0_i = 0;
			_20542560a_Token _2054205a0_token = *_range_begin;
			_iter_begin_4387278784:;
			{
				if (_2054205a0_token._field_id == 3LLU) {
					{
						auto _match_expr{ _2054205a0_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4387284352; }
						_case_begin_4387284352:;
						{
							(_71417_range_n)++;
						}
						goto _match_end_4387282768;
						_case_end_4387284352:;
						_case_begin_4387283552:;
						{
							(_71417_range_n)--;
						}
						goto _match_end_4387282768;
						_case_end_4387283552:;
						_match_end_4387282768:;
					}
				}
				if ((_71417_range_n > 0LL) || (_2054205a0_token._field_id != 8LLU)) {
					goto _iter_next_4387278784;
				}
				(*this)._method_push_range_lit_part(_70553_tokens.slice(static_cast<jule::Int>(_71317_last),static_cast<jule::Int>(_2054205a0_i)),_2054205a0_token,_71117_parts);
				_71317_last=static_cast<jule::Int>(_2054205a0_i + 1LL);
			}
			_iter_next_4387278784:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2054205a0_i; _2054205a0_token = *_range_begin; goto _iter_begin_4387278784; }
			_iter_end_4387278784:;
		}
	}
	if (_71317_last < _70553_tokens.len()) {
		if (_71317_last == 0LL) {
			if (_70553_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_70553_tokens.slice(static_cast<jule::Int>(_71317_last)),_70553_tokens[static_cast<jule::Int>(_71317_last)],_71117_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_70553_tokens.slice(static_cast<jule::Int>(_71317_last)),_70553_tokens[static_cast<jule::Int>(_71317_last - 1LL)],_71117_parts);
		}
	}
	return _71117_parts;
}



inline jule::Ref<_2053703bd_FieldExprPair> _2054205a0_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_20542560a_Token> _74844_tokens) {
	jule::Ref<_2053703bd_FieldExprPair> _74917_pair = jule::new_struct<_2053703bd_FieldExprPair>(new( std::nothrow ) _2053703bd_FieldExprPair(_74844_tokens[0LL],jule::Any()));
	_74844_tokens=_74844_tokens.slice(2LL);
	_74917_pair->_field_expr=(*this)._method_build_from_tokens(_74844_tokens)->_field_kind;
	return _74917_pair;
}



inline jule::Any _2054205a0_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_20542560a_Token> _75744_tokens) {
	_20542560a_Token _75817_token = _75744_tokens[0LL];
	if (_75817_token._field_id == 2LLU) {
		if (_75744_tokens.len() > 1LL) {
			_75817_token=_75744_tokens[1LL];
			if (_75817_token._field_id == 11LLU) {
				return jule::Any((*this)._method_build_field_expr_pair(_75744_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_75744_tokens));
}



inline jule::Slice<jule::Any> _2054205a0_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_20542560a_Token> _77045_tokens) {
	jule::Slice<jule::Slice<_20542560a_Token>> _77117_parts = (*this)._method_get_brace_range_lit_expr_parts(_77045_tokens);
	if (_77117_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _77617_pairs = jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_77117_parts.len())));
	{
		auto _range_expr = _77117_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2054205a0_i = 0;
			jule::Slice<_20542560a_Token> _2054205a0_part = *_range_begin;
			_iter_begin_4387320176:;
			{
				_77617_pairs[static_cast<jule::Int>(_2054205a0_i)]=(*this)._method_build_struct_lit_expr(_2054205a0_part);
			}
			_iter_next_4387320176:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2054205a0_i; _2054205a0_part = *_range_begin; goto _iter_begin_4387320176; }
			_iter_end_4387320176:;
		}
	}
	return _77617_pairs;
}



inline jule::Ref<_2053703bd_StructLit> _2054205a0_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_20542560a_Token> _78349_tokens) {
	jule::Int _78417_i = 0LL;
	jule::Ref<_2053703bd_TypeDecl> _78518_t;
	jule::Bool _78521_ok;
	std::tie(_78518_t,_78521_ok) = (*this)._field_p->_method_build_type(_78349_tokens,(&(_78417_i)),true);
	if ((!(_78521_ok))) {
		return jule::new_ref<_2053703bd_StructLit>();
	} else if (_78417_i >= _78349_tokens.len()) {
		(*this)._method_push_err(_78349_tokens[static_cast<jule::Int>(_78417_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_StructLit>();
	}
	_78349_tokens=_78349_tokens.slice(static_cast<jule::Int>(_78417_i));
	_20542560a_Token _79413_token = _78349_tokens[0LL];
	if ((_79413_token._field_id != 3LLU) || (_79413_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_79413_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_StructLit>();
	}
	return jule::new_struct<_2053703bd_StructLit>(new( std::nothrow ) _2053703bd_StructLit(_78518_t,(*this)._method_build_struct_lit_exprs(_78349_tokens)));
}



inline jule::Any _2054205a0_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_20542560a_Token> _80643_tokens) {
	jule::Slice<_20542560a_Token> _80718_l;
	jule::Slice<_20542560a_Token> _80725_r;
	std::tie(_80718_l,_80725_r) = _2054205a0_split_colon(_80643_tokens);
	if (_80718_l != nullptr) {
		return jule::Any(jule::new_struct<_2053703bd_KeyValPair>(new( std::nothrow ) _2053703bd_KeyValPair((*this)._method_build_from_tokens(_80718_l)->_field_kind,(*this)._method_build_from_tokens(_80725_r)->_field_kind,_80643_tokens[static_cast<jule::Int>(_80718_l.len())])));
	}
	return jule::Any((*this)._method_build_from_tokens(_80643_tokens));
}



inline jule::Ref<_2053703bd_BraceLit> _2054205a0_ExprBuilder::_method_build_brace_lit(jule::Slice<_20542560a_Token> _81938_tokens) {
	jule::Ref<_2053703bd_BraceLit> _82017_lit = jule::new_struct<_2053703bd_BraceLit>(new( std::nothrow ) _2053703bd_BraceLit(_81938_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_20542560a_Token>> _82417_parts = (*this)._method_get_brace_range_lit_expr_parts(_81938_tokens);
	if (_82417_parts == nullptr) {
		return _82017_lit;
	}
	_82017_lit->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_82417_parts.len())));
	{
		auto _range_expr = _82417_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2054205a0_i = 0;
			jule::Slice<_20542560a_Token> _2054205a0_part = *_range_begin;
			_iter_begin_4387358256:;
			{
				_82017_lit->_field_exprs[static_cast<jule::Int>(_2054205a0_i)]=(*this)._method_build_brace_lit_part(_2054205a0_part);
			}
			_iter_next_4387358256:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2054205a0_i; _2054205a0_part = *_range_begin; goto _iter_begin_4387358256; }
			_iter_end_4387358256:;
		}
	}
	return _82017_lit;
}



inline jule::Any _2054205a0_ExprBuilder::_method_build_brace_range(jule::Slice<_20542560a_Token> _83740_tokens) {
	jule::Slice<_20542560a_Token> _83814_expr_tokens;
	jule::Int _83827_range_n;
	std::tie(_83814_expr_tokens,_83827_range_n) = _2054205a0_get_range_expr_tokens(_83740_tokens);
	{
		if (!((_83814_expr_tokens.len() == 0LL))) { goto _case_end_4387366464; }
		_case_begin_4387366464:;
		{
			return jule::Any((*this)._method_build_brace_lit(_83740_tokens));
		}
		goto _match_end_4387366320;
		_case_end_4387366464:;
		if (!((_83827_range_n > 0LL))) { goto _case_end_4387366592; }
		_case_begin_4387366592:;
		{
			(*this)._method_push_err(_83740_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4387366320;
		_case_end_4387366592:;
		_match_end_4387366320:;
	}
	{
		auto _match_expr{ _83814_expr_tokens[0LL]._field_id };
		if (!((35LLU) == _match_expr)) { goto _case_end_4387376192; }
		_case_begin_4387376192:;
		{
			return (*this)._method_build_unsafe(_83740_tokens);
		}
		goto _match_end_4387371920;
		_case_end_4387376192:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4387375440; }
		_case_begin_4387375440:;
		{
			return jule::Any((*this)._method_build_anon_fn(_83740_tokens));
		}
		goto _match_end_4387371920;
		_case_end_4387375440:;
		if (!((2LLU) == _match_expr || (31LLU) == _match_expr)) { goto _case_end_4387375552; }
		_case_begin_4387375552:;
		{
			return jule::Any((*this)._method_build_typed_struct_literal(_83740_tokens));
		}
		goto _match_end_4387371920;
		_case_end_4387375552:;
		_case_begin_4387368528:;
		{
			(*this)._method_push_err(_83814_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4387371920;
		_case_end_4387368528:;
		_match_end_4387371920:;
	}
}



inline jule::Slice<jule::Slice<_20542560a_Token>> _2054205a0_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_20542560a_Token> _86743_tokens) {
	_86743_tokens=_86743_tokens.slice(1LL,static_cast<jule::Int>(_86743_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_20542560a_Token>> _86918_parts;
	jule::Slice<_20377124e_Log> _86925_errors;
	std::tie(_86918_parts,_86925_errors) = _206540c0d_parts(_86743_tokens,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_86925_errors);
	return _86918_parts;
}



inline jule::Ref<_2053703bd_SliceExpr> _2054205a0_ExprBuilder::_method_build_slice(jule::Slice<_20542560a_Token> _87434_tokens) {
	jule::Ref<_2053703bd_SliceExpr> _87517_slc = jule::new_struct<_2053703bd_SliceExpr>(new( std::nothrow ) _2053703bd_SliceExpr(_87434_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_20542560a_Token>> _87917_parts = (*this)._method_get_enumerable_parts(_87434_tokens);
	if (_87917_parts.len() == 0LL) {
		return _87517_slc;
	}
	_87517_slc->_field_elems=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_87917_parts.len())));
	{
		auto _range_expr = _87917_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2054205a0_i = 0;
			jule::Slice<_20542560a_Token> _2054205a0_p = *_range_begin;
			_iter_begin_4387392672:;
			{
				_87517_slc->_field_elems[static_cast<jule::Int>(_2054205a0_i)]=(*this)._method_build_from_tokens(_2054205a0_p)->_field_kind;
			}
			_iter_next_4387392672:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2054205a0_i; _2054205a0_p = *_range_begin; goto _iter_begin_4387392672; }
			_iter_end_4387392672:;
		}
	}
	return _87517_slc;
}



inline jule::Ref<_2053703bd_IndexingExpr> _2054205a0_ExprBuilder::_method_build_indexing(jule::Slice<_20542560a_Token> _89237_expr_tokens,jule::Slice<_20542560a_Token> _89313_tokens,_20542560a_Token _89334_error_token) {
	_89313_tokens=_89313_tokens.slice(1LL,static_cast<jule::Int>(_89313_tokens.len() - 1LL));
	return jule::new_struct<_2053703bd_IndexingExpr>(new( std::nothrow ) _2053703bd_IndexingExpr(_89334_error_token,(*this)._method_build_from_tokens(_89237_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_89313_tokens)->_field_kind));
}



inline jule::Ref<_2053703bd_SlicingExpr> _2054205a0_ExprBuilder::_method_build_slicing(jule::Slice<_20542560a_Token> _90236_expr_tokens,jule::Slice<_20542560a_Token> _90262_slicing_tokens,jule::Int _9039_colon,_20542560a_Token _90325_error_token) {
	jule::Ref<_2053703bd_SlicingExpr> _90417_slc = jule::new_struct<_2053703bd_SlicingExpr>(new( std::nothrow ) _2053703bd_SlicingExpr(_90325_error_token,(*this)._method_build_from_tokens(_90236_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_20542560a_Token> _90917_start_expr_tokens = _90262_slicing_tokens.slice(0LL,static_cast<jule::Int>(_9039_colon));
	if (_90917_start_expr_tokens.len() > 0LL) {
		_90417_slc->_field_start=(*this)._method_build_from_tokens(_90917_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_20542560a_Token> _91417_to_expr_tokens = _90262_slicing_tokens.slice(static_cast<jule::Int>(_9039_colon + 1LL));
	if (_91417_to_expr_tokens.len() > 0LL) {
		_90417_slc->_field_to=(*this)._method_build_from_tokens(_91417_to_expr_tokens)->_field_kind;
	}
	return _90417_slc;
}



inline jule::Any _2054205a0_ExprBuilder::_method_build_bracket_range(jule::Slice<_20542560a_Token> _92242_tokens) {
	_20542560a_Token _92317_error_token = _92242_tokens[0LL];
	jule::Slice<_20542560a_Token> _92418_expr_tokens;
	jule::Int _92431_range_n;
	std::tie(_92418_expr_tokens,_92431_range_n) = _2054205a0_get_range_expr_tokens(_92242_tokens);
	{
		if (!((_92418_expr_tokens.len() == 0LL))) { goto _case_end_4387427088; }
		_case_begin_4387427088:;
		{
			return jule::Any((*this)._method_build_slice(_92242_tokens));
		}
		goto _match_end_4387426944;
		_case_end_4387427088:;
		if (!(((_92418_expr_tokens.len() == 0LL) || (_92431_range_n > 0LL)))) { goto _case_end_4387427200; }
		_case_begin_4387427200:;
		{
			(*this)._method_push_err(_92317_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4387426944;
		_case_end_4387427200:;
		_match_end_4387426944:;
	}
	_92242_tokens=_92242_tokens.slice(static_cast<jule::Int>(_92418_expr_tokens.len()));
	jule::Int _94317_i = 0LL;
	jule::Slice<_20542560a_Token> _94418_slicing_tokens;
	jule::Int _94434_colon;
	std::tie(_94418_slicing_tokens,_94434_colon) = _206581226_split_map_range(_92242_tokens,_94317_i);
	if (_94434_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_92418_expr_tokens,_94418_slicing_tokens,_94434_colon,_92317_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_92418_expr_tokens,_92242_tokens,_92317_error_token));
}



inline jule::Any _2054205a0_ExprBuilder::_method_build_data(jule::Slice<_20542560a_Token> _95133_tokens) {
	{
		auto _match_expr{ _95133_tokens.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4387440688; }
		_case_begin_4387440688:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4387439856;
		_case_end_4387440688:;
		if (!((1LL) == _match_expr)) { goto _case_end_4387440800; }
		_case_begin_4387440800:;
		{
			return (*this)._method_build_single(_95133_tokens[0LL]);
		}
		goto _match_end_4387439856;
		_case_end_4387440800:;
		if (!((3LL) == _match_expr)) { goto _case_end_4387440912; }
		_case_begin_4387440912:;
		{
			if (_95133_tokens[0LL]._field_id == 31LLU) {
				return jule::Any((*this)._method_build_cpp_linked_ident(_95133_tokens));
			}
		}
		goto _match_end_4387439856;
		_case_end_4387440912:;
		_match_end_4387439856:;
	}
	_20542560a_Token _96517_token = _95133_tokens[0LL];
	{
		auto _match_expr{ _96517_token._field_id };
		if (!((7LLU) == _match_expr)) { goto _case_end_4387448688; }
		_case_begin_4387448688:;
		{
			if ((_95133_tokens.len() > 1LL) && (_96517_token._field_kind == jule::Str("*", 1))) {
				_96517_token=_95133_tokens[1LL];
				if ((_96517_token._field_id == 1LLU) || (_96517_token._field_id == 35LLU)) {
					return jule::Any((*this)._method_build_type(_95133_tokens));
				}
			}
			return jule::Any((*this)._method_build_unary(_95133_tokens));
		}
		goto _match_end_4387446352;
		_case_end_4387448688:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4387448800; }
		_case_begin_4387448800:;
		{
			if ((_96517_token._field_kind != jule::Str("[", 1)) || (_95133_tokens.len() < 3LL)) {
				goto _match_end_4387446352;
			}
			_20542560a_Token _98317_next = _95133_tokens[1LL];
			if ((_98317_next._field_id != 3LLU) || (_98317_next._field_kind != jule::Str("]", 1))) {
				goto _match_end_4387446352;
			}
			return jule::Any((*this)._method_build_type(_95133_tokens));
		}
		goto _match_end_4387446352;
		_case_end_4387448800:;
		_match_end_4387446352:;
	}
	_96517_token=_95133_tokens[static_cast<jule::Int>(_95133_tokens.len() - 1LL)];
	{
		auto _match_expr{ _96517_token._field_id };
		if (!((2LLU) == _match_expr)) { goto _case_end_4387462288; }
		_case_begin_4387462288:;
		{
			return (*this)._method_build_sub_ident(_95133_tokens);
		}
		goto _match_end_4387461136;
		_case_end_4387462288:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4387462416; }
		_case_begin_4387462416:;
		{
			return jule::Any((*this)._method_build_type(_95133_tokens));
		}
		goto _match_end_4387461136;
		_case_end_4387462416:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4387462544; }
		_case_begin_4387462544:;
		{
			return (*this)._method_build_op_right(_95133_tokens);
		}
		goto _match_end_4387461136;
		_case_end_4387462544:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4387462672; }
		_case_begin_4387462672:;
		{
			{
				auto _match_expr{ _96517_token._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4387467296; }
				_case_begin_4387467296:;
				{
					return (*this)._method_build_parentheses_range(_95133_tokens);
				}
				goto _match_end_4387466160;
				_case_end_4387467296:;
				if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4387467408; }
				_case_begin_4387467408:;
				{
					return (*this)._method_build_brace_range(_95133_tokens);
				}
				goto _match_end_4387466160;
				_case_end_4387467408:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4387467632; }
				_case_begin_4387467632:;
				{
					return (*this)._method_build_bracket_range(_95133_tokens);
				}
				goto _match_end_4387466160;
				_case_end_4387467632:;
				_match_end_4387466160:;
			}
		}
		goto _match_end_4387461136;
		_case_end_4387462672:;
		_match_end_4387461136:;
	}
	(*this)._method_push_err(_96517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_2053703bd_BinopExpr> _2054205a0_ExprBuilder::_method_build_binop(jule::Slice<_20542560a_Token> _102034_tokens,jule::Int _102051_i) {
	jule::Slice<_20542560a_Token> _102117_left_tokens = _102034_tokens.slice(0LL,static_cast<jule::Int>(_102051_i));
	jule::Slice<_20542560a_Token> _102217_right_tokens = _102034_tokens.slice(static_cast<jule::Int>(_102051_i + 1LL));
	if (_102117_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_102034_tokens[static_cast<jule::Int>(_102051_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_BinopExpr>();
	}
	if (_102217_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_102034_tokens[static_cast<jule::Int>(_102051_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_BinopExpr>();
	}
	return jule::new_struct<_2053703bd_BinopExpr>(new( std::nothrow ) _2053703bd_BinopExpr((*this)._method_build(_102117_left_tokens),(*this)._method_build(_102217_right_tokens),_102034_tokens[static_cast<jule::Int>(_102051_i)]));
}



inline jule::Any _2054205a0_ExprBuilder::_method_build(jule::Slice<_20542560a_Token> _104328_tokens) {
	jule::Int _104413_i = _2054205a0_find_lowest_prec_op(_104328_tokens);
	if (_104413_i == -1LL) {
		return (*this)._method_build_data(_104328_tokens);
	}
	return jule::Any((*this)._method_build_binop(_104328_tokens,_104413_i));
}



inline jule::Any _2054205a0_ExprBuilder::_method_build_kind(jule::Slice<_20542560a_Token> _105133_tokens) {
	jule::Slice<jule::Slice<_20542560a_Token>> _105218_parts;
	jule::Slice<_20377124e_Log> _105225_errors;
	std::tie(_105218_parts,_105225_errors) = _206540c0d_parts(_105133_tokens,8LLU,true);
	if (_105225_errors != nullptr) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_105225_errors);
		return jule::Any(nullptr);
	} else if (_105218_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_105218_parts));
	}
	return (*this)._method_build(_105133_tokens);
}



inline jule::Ref<_2053703bd_Expr> _2054205a0_ExprBuilder::_method_build_from_tokens(jule::Slice<_20542560a_Token> _106240_tokens) {
	_106240_tokens=_2054205a0_eliminate_comments(_106240_tokens);
	if (_106240_tokens.len() == 0LL) {
		return jule::new_ref<_2053703bd_Expr>();
	}
	return jule::new_struct<_2053703bd_Expr>(new( std::nothrow ) _2053703bd_Expr(_106240_tokens[0LL],(*this)._method_build_kind(_106240_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _2054205a0_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _20543982d_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _206540c0d_Parser::_method_stop(void) {
	jule::drop((*this)._field_ast);
}



inline jule::Bool _206540c0d_Parser::_method_stopped(void) {
	return (!(jule::real((*this)._field_ast)));
}



inline void _206540c0d_Parser::_method_push_err(_20542560a_Token _24027_token,jule::Str _24041_fmt,jule::Slice<jule::Any> _24054_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_20377124e_Log>({_206540c0d_compiler_err(_24027_token,_24041_fmt,_24054_args)}));
}



inline void _206540c0d_Parser::_method_push_suggestion(jule::Str _24534_fmt,jule::Slice<jule::Any> _24547_args) {
	{
		_206540c0d_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_24534_fmt,_24547_args);
	}
}



inline jule::Ref<_2053703bd_Expr> _206540c0d_Parser::_method_build_expr(jule::Slice<_20542560a_Token> _24934_tokens) {
	jule::Ref<_2054205a0_ExprBuilder> _25017_ep = jule::new_struct<_2054205a0_ExprBuilder>(new( std::nothrow ) _2054205a0_ExprBuilder(this->self));
	jule::Ref<_2053703bd_Expr> _25117_expr = _25017_ep->_method_build_from_tokens(_24934_tokens);
	return _25117_expr;
}



inline jule::Ref<_2053703bd_Directive> _206540c0d_Parser::_method_get_directive(jule::Ref<_2053703bd_Comment> _25532_c) {
	if (_25532_c->_field_text.len() <= jule::Str("jule:", 5).len()) {
		return jule::new_ref<_2053703bd_Directive>();
	}
	jule::Ref<_2053703bd_Directive> _26017_d = jule::new_struct<_2053703bd_Directive>(new( std::nothrow ) _2053703bd_Directive(_25532_c->_field_token,jule::Str(),jule::Slice<jule::Str>()));
	jule::Str _26413_pragma = _25532_c->_field_token._field_kind.slice(static_cast<jule::Int>(jule::Str("jule:", 5).len()));
	jule::Slice<jule::Str> _26517_parts = _26413_pragma.split(jule::Str(" ", 1),-1LL);
	_26017_d->_field_tag=_26517_parts[0LL];
	_26017_d->_field_args=_26517_parts.slice(1LL);
	jule::Bool _27117_ok = false;
	{
		auto _range_expr = _2037d887c_DIRECTIVES;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _206540c0d_kind = *_range_begin;
			_iter_begin_4387540864:;
			{
				if (_26017_d->_field_tag == _206540c0d_kind) {
					_27117_ok=true;
					goto _iter_end_4387540864;
				}
			}
			_iter_next_4387540864:;
			++_range_begin;
			if (_range_begin != _range_end) { _206540c0d_kind = *_range_begin; goto _iter_begin_4387540864; }
			_iter_end_4387540864:;
		}
	}
	if ((!(_27117_ok))) {
		return jule::new_ref<_2053703bd_Directive>();
	}
	return _26017_d;
}



inline void _206540c0d_Parser::_method_push_directive(jule::Ref<_2053703bd_Comment> _28537_c) {
	jule::Ref<_2053703bd_Directive> _28617_d = (*this)._method_get_directive(_28537_c);
	if ((!(jule::real(_28617_d)))) {
		return;
	}
	{
		auto _range_expr = (*this)._field_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053703bd_Directive> _206540c0d_pd = *_range_begin;
			_iter_begin_4387547856:;
			{
				if (_28617_d->_field_tag == _206540c0d_pd->_field_tag) {
					return;
				}
			}
			_iter_next_4387547856:;
			++_range_begin;
			if (_range_begin != _range_end) { _206540c0d_pd = *_range_begin; goto _iter_begin_4387547856; }
			_iter_end_4387547856:;
		}
	}
	(*this)._field_directives=jule::append((*this)._field_directives,jule::Slice<jule::Ref<_2053703bd_Directive>>({_28617_d}));
}



inline void _206540c0d_Parser::_method_process_comment(jule::Ref<_2053703bd_Comment> _30138_c) {
	if (_30138_c->_method_is_directive()) {
		(*this)._method_push_directive(_30138_c);
		return;
	}
	if ((!(jule::real((*this)._field_comment_group)))) {
		(*this)._field_comment_group=jule::new_struct<_2053703bd_CommentGroup>(new( std::nothrow ) _2053703bd_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments=jule::append((*this)._field_comment_group->_field_comments,jule::Slice<jule::Ref<_2053703bd_Comment>>({_30138_c}));
}



inline jule::Ref<_2053703bd_ScopeTree> _206540c0d_Parser::_method_build_scope(jule::Slice<_20542560a_Token> _31235_tokens) {
	jule::Ref<_2053703bd_ScopeTree> _31317_s = _2053cae51_new_scope();
	_2053cae51_ScopeParser _31417_sp = _2053cae51_ScopeParser(this->self,jule::Ref<_2053703bd_ScopeTree>(),jule::Slice<jule::Ref<_2053cae51_Stmt>>(),jule::Int());
	_31417_sp._method_build(_31235_tokens,_31317_s);
	return _31317_s;
}



inline std::tuple<jule::Ref<_2053703bd_TypeDecl>,jule::Bool> _206540c0d_Parser::_method___build_type(jule::Slice<_20542560a_Token> _32143_tokens,jule::Int* _32213_i,jule::Bool _32222_err) {
	_206581226_TypeBuilder _32317_tb = _206581226_TypeBuilder(this->self,_32143_tokens,_32213_i,_32222_err);
	jule::Ref<_2053703bd_TypeDecl> _32918_decl;
	jule::Bool _32924_ok;
	std::tie(_32918_decl,_32924_ok) = _32317_tb._method_build();
	return std::make_tuple(_32918_decl,_32924_ok);
}



inline std::tuple<jule::Ref<_2053703bd_TypeDecl>,jule::Bool> _206540c0d_Parser::_method_build_type(jule::Slice<_20542560a_Token> _33441_tokens,jule::Int* _33513_i,jule::Bool _33522_err) {
	_20542560a_Token _33613_token = _33441_tokens[static_cast<jule::Int>((*(_33513_i)))];
	jule::Ref<_2053703bd_TypeDecl> _33718_t;
	jule::Bool _33721_ok;
	std::tie(_33718_t,_33721_ok) = this->self->_method___build_type(_33441_tokens,_33513_i,_33522_err);
	if (_33522_err && (!(_33721_ok))) {
		this->self->_method_push_err(_33613_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
	}
	return std::make_tuple(_33718_t,_33721_ok);
}



inline jule::Ref<_2053703bd_TypeAliasDecl> _206540c0d_Parser::_method_build_type_alias_decl(jule::Slice<_20542560a_Token> _34445_tokens) {
	jule::Int _34517_i = 1LL;
	if (_34517_i >= _34445_tokens.len()) {
		this->self->_method_push_err(_34445_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_TypeAliasDecl>();
	}
	jule::Ref<_2053703bd_TypeAliasDecl> _35017_tad = jule::new_struct<_2053703bd_TypeAliasDecl>(new( std::nothrow ) _2053703bd_TypeAliasDecl(jule::Ref<_2053703bd_ScopeTree>(),jule::Bool(),jule::Bool(),_34445_tokens[1LL],_34445_tokens[1LL]._field_kind,jule::Ref<_2053703bd_TypeDecl>(),jule::Ref<_2053703bd_CommentGroup>()));
	_20542560a_Token _35417_token = _34445_tokens[static_cast<jule::Int>(_34517_i)];
	if (_35417_token._field_id != 2LLU) {
		this->self->_method_push_err(_35417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_34517_i)++;
	if (_34517_i >= _34445_tokens.len()) {
		this->self->_method_push_err(_34445_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	_35417_token=_34445_tokens[static_cast<jule::Int>(_34517_i)];
	if (_35417_token._field_id != 11LLU) {
		this->self->_method_push_err(_34445_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	(_34517_i)++;
	if (_34517_i >= _34445_tokens.len()) {
		this->self->_method_push_err(_34445_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	jule::Ref<_2053703bd_TypeDecl> _37518_t;
	jule::Bool _37521_ok;
	std::tie(_37518_t,_37521_ok) = this->self->_method_build_type(_34445_tokens,(&(_34517_i)),true);
	_35017_tad->_field_kind=_37518_t;
	if (_37521_ok && (_34517_i < _34445_tokens.len())) {
		this->self->_method_push_err(_34445_tokens[static_cast<jule::Int>(_34517_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _35017_tad;
}



inline void _206540c0d_Parser::_method_build_var_type_and_expr(jule::Ref<_2053703bd_VarDecl> _38347_v,jule::Slice<_20542560a_Token> _38364_tokens) {
	jule::Int _38417_i = 0LL;
	_20542560a_Token _38517_tok = _38364_tokens[static_cast<jule::Int>(_38417_i)];
	if (_38517_tok._field_id == 11LLU) {
		(_38417_i)++;
		if ((_38417_i >= _38364_tokens.len()) || ((_38364_tokens[static_cast<jule::Int>(_38417_i)]._field_id == 7LLU) && (_38364_tokens[static_cast<jule::Int>(_38417_i)]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_38517_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Ref<_2053703bd_TypeDecl> _39322_t;
		jule::Bool _39325_ok;
		std::tie(_39322_t,_39325_ok) = this->self->_method_build_type(_38364_tokens,(&(_38417_i)),true);
		if (_39325_ok) {
			_38347_v->_field_kind=_39322_t;
			if (_38417_i >= _38364_tokens.len()) {
				return;
			}
			_38517_tok=_38364_tokens[static_cast<jule::Int>(_38417_i)];
		}
	}
	if (_38517_tok._field_id == 7LLU) {
		if (_38517_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Slice<_20542560a_Token> _40821_expr_tokens = _38364_tokens.slice(static_cast<jule::Int>(_38417_i + 1LL));
		if (_40821_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_38517_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
			return;
		}
		_38347_v->_field_expr=this->self->_method_build_expr(_40821_expr_tokens);
	} else {
		this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _206540c0d_Parser::_method_build_var_common(jule::Ref<_2053703bd_VarDecl> _41940_v,jule::Slice<_20542560a_Token> _41957_tokens) {
	_41940_v->_field_token=_41957_tokens[0LL];
	if (_41940_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_41940_v->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	_41940_v->_field_ident=_41940_v->_field_token._field_kind;
	jule::drop(_41940_v->_field_kind);
	if (_41957_tokens.len() > 1LL) {
		_41957_tokens=_41957_tokens.slice(1LL);
		this->self->_method_build_var_type_and_expr(_41940_v,_41957_tokens);
	}
}



inline void _206540c0d_Parser::_method_build_var_begin(jule::Ref<_2053703bd_VarDecl> _43438_v,jule::Ref<jule::Int> _43455_i,jule::Slice<_20542560a_Token> _43464_tokens) {
	_20542560a_Token _43513_tok = _43464_tokens[static_cast<jule::Int>(_43455_i)];
	{
		auto _match_expr{ _43513_tok._field_id };
		if (!((38LLU) == _match_expr)) { goto _case_end_4387673712; }
		_case_begin_4387673712:;
		{
			_43438_v->_field_statically=true;
			goto _case_begin_4387673824;
		}
		goto _match_end_4387670592;
		_case_end_4387673712:;
		if (!((34LLU) == _match_expr)) { goto _case_end_4387673824; }
		_case_begin_4387673824:;
		{
			(_43455_i)++;
			if (_43455_i >= _43464_tokens.len()) {
				(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			if (_43464_tokens[static_cast<jule::Int>(_43455_i)]._field_id == 36LLU) {
				_43438_v->_field_mutable=true;
				(_43455_i)++;
			}
		}
		goto _match_end_4387670592;
		_case_end_4387673824:;
		if (!((9LLU) == _match_expr)) { goto _case_end_4387673936; }
		_case_begin_4387673936:;
		{
			(_43455_i)++;
			_43438_v->_field_constant=true;
		}
		goto _match_end_4387670592;
		_case_end_4387673936:;
		_case_begin_4387671280:;
		{
			(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4387670592;
		_case_end_4387671280:;
		_match_end_4387670592:;
	}
	if (_43455_i >= _43464_tokens.len()) {
		(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline jule::Ref<_2053703bd_VarDecl> _206540c0d_Parser::_method_build_var(jule::Slice<_20542560a_Token> _46833_tokens) {
	jule::Ref<jule::Int> _46917_i = jule::new_ref<jule::Int>(0LL);
	jule::Ref<_2053703bd_VarDecl> _47017_v = jule::new_struct<_2053703bd_VarDecl>(new( std::nothrow ) _2053703bd_VarDecl(jule::Ref<_2053703bd_ScopeTree>(),_46833_tokens[static_cast<jule::Int>(_46917_i)],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_2053703bd_Directive>>(),jule::Ref<_2053703bd_CommentGroup>(),jule::Ref<_2053703bd_TypeDecl>(),jule::Ref<_2053703bd_Expr>()));
	this->self->_method_build_var_begin(_47017_v,_46917_i,_46833_tokens);
	if (_46917_i >= _46833_tokens.len()) {
		return jule::new_ref<_2053703bd_VarDecl>();
	}
	_46833_tokens=_46833_tokens.slice(static_cast<jule::Int>(_46917_i));
	if ((_46833_tokens[0LL]._field_id == 7LLU) && (_46833_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_47017_v->_field_reference=true;
		if (_46833_tokens.len() == 1LL) {
			return jule::new_ref<_2053703bd_VarDecl>();
		}
		_46833_tokens=_46833_tokens.slice(1LL);
	}
	this->self->_method_build_var_common(_47017_v,_46833_tokens);
	return _47017_v;
}



inline jule::Ref<_2053703bd_GenericDecl> _206540c0d_Parser::_method_build_generic(jule::Slice<_20542560a_Token> _49036_tokens) {
	if (_49036_tokens.len() > 1LL) {
		(*this)._method_push_err(_49036_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_2053703bd_GenericDecl> _49417_g = jule::new_struct<_2053703bd_GenericDecl>(new( std::nothrow ) _2053703bd_GenericDecl(_49036_tokens[0LL],jule::Str()));
	if (_49417_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_49417_g->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_49417_g->_field_ident=_49417_g->_field_token._field_kind;
	return _49417_g;
}



inline jule::Slice<jule::Ref<_2053703bd_GenericDecl>> _206540c0d_Parser::_method_build_generics(jule::Slice<_20542560a_Token> _50537_tokens,_20542560a_Token _50554_error_token) {
	if (_50537_tokens.len() == 0LL) {
		(*this)._method_push_err(_50554_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Slice<jule::Slice<_20542560a_Token>> _51118_parts;
	jule::Slice<_20377124e_Log> _51125_errors;
	std::tie(_51118_parts,_51125_errors) = _206540c0d_parts(_50537_tokens,8LLU,true);
	(*this)._field_errors=jule::append((*this)._field_errors,_51125_errors);
	jule::Slice<jule::Ref<_2053703bd_GenericDecl>> _51417_generics = jule::Slice<jule::Ref<_2053703bd_GenericDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_51118_parts.len())));
	{
		auto _range_expr = _51118_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206540c0d_i = 0;
			jule::Slice<_20542560a_Token> _206540c0d_part = *_range_begin;
			_iter_begin_4387718160:;
			{
				if (_51118_parts.len() > 0LL) {
					_51417_generics[static_cast<jule::Int>(_206540c0d_i)]=(*this)._method_build_generic(_206540c0d_part);
				}
			}
			_iter_next_4387718160:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206540c0d_i; _206540c0d_part = *_range_begin; goto _iter_begin_4387718160; }
			_iter_end_4387718160:;
		}
	}
	return _51417_generics;
}



inline jule::Ref<_2053703bd_ParamDecl> _206540c0d_Parser::_method_build_self_param(jule::Slice<_20542560a_Token> _52439_tokens) {
	if (_52439_tokens.len() == 0LL) {
		return jule::new_ref<_2053703bd_ParamDecl>();
	}
	jule::Ref<_2053703bd_ParamDecl> _52917_param = jule::new_struct<_2053703bd_ParamDecl>(new( std::nothrow ) _2053703bd_ParamDecl());
	jule::Int _53217_i = 0LL;
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_id == 36LLU) {
		_52917_param->_field_mutable=true;
		(_53217_i)++;
		if (_53217_i >= _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_2053703bd_ParamDecl>();
		}
	}
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_kind == jule::Str("&", 1)) {
		_52917_param->_field_ident=jule::Str("&", 1);
		(_53217_i)++;
		if (_53217_i >= _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_2053703bd_ParamDecl>();
		}
	}
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_id == 28LLU) {
		_52917_param->_field_ident+=jule::Str("self", 4);
		_52917_param->_field_token=_52439_tokens[static_cast<jule::Int>(_53217_i)];
		(_53217_i)++;
		if (_53217_i < _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	}
	return _52917_param;
}



inline void _206540c0d_Parser::_method_param_type_begin(jule::Ref<_2053703bd_ParamDecl> _56339_param,jule::Int& _56363_i,jule::Slice<_20542560a_Token> _56371_tokens) {
	_iter_begin_5204122800:;
	if (!(_56363_i < _56371_tokens.len())) { goto _iter_end_5204122800; }
	{
		_20542560a_Token _56517_token = _56371_tokens[static_cast<jule::Int>(_56363_i)];
		if (_56517_token._field_id != 7LLU) {
			return;
		} else if (_56517_token._field_kind != jule::Str("...", 3)) {
			return;
		}
		if (_56339_param->_field_variadic) {
			(*this)._method_push_err(_56517_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>({}));
			goto _iter_next_5204122800;
		}
		_56339_param->_field_variadic=true;
	}
	_iter_next_5204122800:;
	(_56363_i)++;
	goto _iter_begin_5204122800;
	_iter_end_5204122800:;
}



inline void _206540c0d_Parser::_method_build_param_type(jule::Ref<_2053703bd_ParamDecl> _58040_param,jule::Slice<_20542560a_Token> _58063_tokens,jule::Bool _58080_must_pure) {
	jule::Int _58117_i = 0LL;
	if ((!(_58080_must_pure))) {
		this->self->_method_param_type_begin(_58040_param,_58117_i,_58063_tokens);
		if (_58117_i >= _58063_tokens.len()) {
			return;
		}
	}
	std::tie(_58040_param->_field_kind,std::ignore) = this->self->_method_build_type(_58063_tokens,(&(_58117_i)),true);
	if (_58117_i < _58063_tokens.len()) {
		this->self->_method_push_err(_58063_tokens[static_cast<jule::Int>(_58117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _206540c0d_Parser::_method_param_body_id(jule::Ref<_2053703bd_ParamDecl> _59432_param,_20542560a_Token _59451_token) {
	if (_20542560a_is_ignore_ident(_59451_token._field_kind)) {
		_59432_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_59432_param->_field_ident=_59451_token._field_kind;
}



inline void _206540c0d_Parser::_method_build_param_body(jule::Ref<_2053703bd_ParamDecl> _60240_param,jule::Ref<jule::Int> _60263_i,jule::Slice<_20542560a_Token> _60276_tokens,jule::Bool _60293_must_pure) {
	this->self->_method_param_body_id(_60240_param,_60276_tokens[static_cast<jule::Int>(_60263_i)]);
	_20542560a_Token _60417_tok = _60276_tokens[static_cast<jule::Int>(_60263_i)];
	if ((_60263_i + 1LL) >= _60276_tokens.len()) {
		return;
	} else if (((_60276_tokens.len() - _60263_i) - 1LL) < 2LL) {
		this->self->_method_push_err(_60417_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return;
	}
	_60417_tok=_60276_tokens[static_cast<jule::Int>(_60263_i + 1LL)];
	if (_60417_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_60240_param,_60276_tokens,_60293_must_pure);
		return;
	}
	_60276_tokens=_60276_tokens.slice(static_cast<jule::Int>(_60263_i + 2LL));
	this->self->_method_build_param_type(_60240_param,_60276_tokens,_60293_must_pure);
}



inline jule::Ref<_2053703bd_ParamDecl> _206540c0d_Parser::_method_build_param(jule::Slice<_20542560a_Token> _62335_tokens,jule::Bool _62352_must_pure) {
	jule::Ref<_2053703bd_ParamDecl> _62417_param = jule::new_struct<_2053703bd_ParamDecl>(new( std::nothrow ) _2053703bd_ParamDecl(_62335_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_2053703bd_TypeDecl>(),jule::Str()));
	if (_62417_param->_field_token._field_id == 36LLU) {
		_62417_param->_field_mutable=true;
		if (_62335_tokens.len() == 1LL) {
			this->self->_method_push_err(_62335_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_2053703bd_ParamDecl>();
		}
		_62335_tokens=_62335_tokens.slice(1LL);
		_62417_param->_field_token=_62335_tokens[0LL];
	}
	if (_62335_tokens.len() >= 3LL) {
		if ((_62417_param->_field_token._field_id == 7LLU) && (_62417_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_62335_tokens.len() == 1LL) {
				this->self->_method_push_err(_62335_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_2053703bd_ParamDecl>();
			}
			if ((_62335_tokens[1LL]._field_id == 2LLU) && (_62335_tokens[2LL]._field_id == 11LLU)) {
				_62417_param->_field_reference=true;
				_62335_tokens=_62335_tokens.slice(1LL);
				_62417_param->_field_token=_62335_tokens[0LL];
			}
		}
	}
	if (_62417_param->_field_token._field_id != 2LLU) {
		_62417_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_62417_param,_62335_tokens,_62352_must_pure);
	} else {
		jule::Ref<jule::Int> _66021_i = jule::new_ref<jule::Int>(0LL);
		this->self->_method_build_param_body(_62417_param,_66021_i,_62335_tokens,_62352_must_pure);
	}
	return _62417_param;
}



inline void _206540c0d_Parser::_method_check_params(jule::Slice<jule::Ref<_2053703bd_ParamDecl>> _66735_params) {
	{
		auto _range_expr = _66735_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053703bd_ParamDecl> _206540c0d_param = *_range_begin;
			_iter_begin_4906238464:;
			{
				if (_206540c0d_param->_method_is_self() || jule::real(_206540c0d_param->_field_kind)) {
					goto _iter_next_4906238464;
				}
				if (_206540c0d_param->_field_token._field_id == 0LLU) {
					(*this)._method_push_err(_206540c0d_param->_field_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				} else {
					_206540c0d_param->_field_kind=jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_206540c0d_param->_field_token,jule::Any(jule::new_struct<_2053703bd_IdentTypeDecl>(new( std::nothrow ) _2053703bd_IdentTypeDecl(_206540c0d_param->_field_token,_206540c0d_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ref<_2053703bd_TypeDecl>>())))));
					_206540c0d_param->_field_ident=jule::Str("<anonymous>", 11);
					_206540c0d_param->_field_token=_20542560a_Token();
				}
			}
			_iter_next_4906238464:;
			++_range_begin;
			if (_range_begin != _range_end) { _206540c0d_param = *_range_begin; goto _iter_begin_4906238464; }
			_iter_end_4906238464:;
		}
	}
}



inline jule::Slice<jule::Ref<_2053703bd_ParamDecl>> _206540c0d_Parser::_method_build_params(jule::Slice<_20542560a_Token> _68836_tokens,jule::Bool _68853_method,jule::Bool _68867_must_pure) {
	jule::Slice<jule::Slice<_20542560a_Token>> _68918_parts;
	jule::Slice<_20377124e_Log> _68925_errs;
	std::tie(_68918_parts,_68925_errs) = _206540c0d_parts(_68836_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_68925_errs);
	if (_68918_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_2053703bd_ParamDecl>> _69517_params = nullptr;
	if (_68853_method && (_68918_parts.len() > 0LL)) {
		jule::Ref<_2053703bd_ParamDecl> _69721_param = this->self->_method_build_self_param(_68918_parts[0LL]);
		if (jule::real(_69721_param) && _69721_param->_method_is_self()) {
			_69517_params=jule::append(_69517_params,jule::Slice<jule::Ref<_2053703bd_ParamDecl>>({_69721_param}));
			_68918_parts=_68918_parts.slice(1LL);
		}
	}
	{
		auto _range_expr = _68918_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_20542560a_Token> _206540c0d_part = *_range_begin;
			_iter_begin_4906258368:;
			{
				jule::Ref<_2053703bd_ParamDecl> _70521_param = this->self->_method_build_param(_206540c0d_part,_68867_must_pure);
				if (jule::real(_70521_param)) {
					_69517_params=jule::append(_69517_params,jule::Slice<jule::Ref<_2053703bd_ParamDecl>>({_70521_param}));
				}
			}
			_iter_next_4906258368:;
			++_range_begin;
			if (_range_begin != _range_end) { _206540c0d_part = *_range_begin; goto _iter_begin_4906258368; }
			_iter_end_4906258368:;
		}
	}
	this->self->_method_check_params(_69517_params);
	return _69517_params;
}



inline std::tuple<jule::Ref<_2053703bd_RetTypeDecl>,jule::Bool> _206540c0d_Parser::_method_build_multi_ret_type(jule::Slice<_20542560a_Token> _71544_tokens,jule::Int& _71566_i) {
	jule::Ref<_2053703bd_RetTypeDecl> _71576_t = jule::Ref<_2053703bd_RetTypeDecl>();
	jule::Bool _71593_ok = jule::Bool();
	_71576_t=jule::new_struct<_2053703bd_RetTypeDecl>(new( std::nothrow ) _2053703bd_RetTypeDecl());
	(_71566_i)++;
	if (_71566_i >= _71544_tokens.len()) {
		(_71566_i)--;
		std::tie(_71576_t->_field_kind,_71593_ok) = this->self->_method_build_type(_71544_tokens,(&(_71566_i)),false);
		return std::make_tuple(_71576_t,_71593_ok);
	}
	(_71566_i)--;
	jule::Slice<_20542560a_Token> _72517_range_tokens = _206540c0d_range(_71566_i,jule::Str("(", 1),jule::Str(")", 1),_71544_tokens);
	jule::Slice<jule::Ref<_2053703bd_ParamDecl>> _72617_params = this->self->_method_build_params(_72517_range_tokens,false,true);
	jule::Slice<jule::Ref<_2053703bd_TypeDecl>> _72817_types = jule::Slice<jule::Ref<_2053703bd_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_72617_params.len())));
	{
		auto _range_expr = _72617_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206540c0d_j = 0;
			jule::Ref<_2053703bd_ParamDecl> _206540c0d_param = *_range_begin;
			_iter_begin_4906282416:;
			{
				_72817_types[static_cast<jule::Int>(_206540c0d_j)]=_206540c0d_param->_field_kind;
				if (_206540c0d_param->_field_ident != jule::Str("<anonymous>", 11)) {
					_206540c0d_param->_field_token._field_kind=_206540c0d_param->_field_ident;
				} else {
					_206540c0d_param->_field_token._field_kind=jule::Str("_", 1);
				}
				_71576_t->_field_idents=jule::append(_71576_t->_field_idents,jule::Slice<_20542560a_Token>({_206540c0d_param->_field_token}));
			}
			_iter_next_4906282416:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206540c0d_j; _206540c0d_param = *_range_begin; goto _iter_begin_4906282416; }
			_iter_end_4906282416:;
		}
	}
	if (_72817_types.len() > 1LL) {
		_71576_t->_field_kind=jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_71544_tokens[0LL],jule::Any(jule::new_struct<_2053703bd_TupleTypeDecl>(new( std::nothrow ) _2053703bd_TupleTypeDecl(_72817_types)))));
	} else {
		_71576_t->_field_kind=_72817_types[0LL];
	}
	_71593_ok=true;
	return std::make_tuple(_71576_t,_71593_ok);
}



inline std::tuple<jule::Ref<_2053703bd_RetTypeDecl>,jule::Bool> _206540c0d_Parser::_method_build_ret_type(jule::Slice<_20542560a_Token> _75538_tokens,jule::Int& _75560_i) {
	jule::Ref<_2053703bd_RetTypeDecl> _75570_t = jule::Ref<_2053703bd_RetTypeDecl>();
	jule::Bool _75587_ok = jule::Bool();
	_75570_t=jule::new_struct<_2053703bd_RetTypeDecl>(new( std::nothrow ) _2053703bd_RetTypeDecl());
	if (_75560_i >= _75538_tokens.len()) {
		return std::make_tuple(_75570_t,_75587_ok);
	}
	_20542560a_Token _76117_token = _75538_tokens[static_cast<jule::Int>(_75560_i)];
	{
		auto _match_expr{ _76117_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4388323664; }
		_case_begin_4388323664:;
		{
			if (_76117_token._field_kind == jule::Str("{", 1)) {
				return std::make_tuple(_75570_t,_75587_ok);
			}
		}
		goto _match_end_4388321952;
		_case_end_4388323664:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4388323776; }
		_case_begin_4388323776:;
		{
			if (_76117_token._field_kind == jule::Str("=", 1)) {
				return std::make_tuple(_75570_t,_75587_ok);
			}
		}
		goto _match_end_4388321952;
		_case_end_4388323776:;
		if (!((11LLU) == _match_expr)) { goto _case_end_4388323888; }
		_case_begin_4388323888:;
		{
			if ((_75560_i + 1LL) >= _75538_tokens.len()) {
				this->self->_method_push_err(_76117_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				return std::make_tuple(_75570_t,_75587_ok);
			}
			(_75560_i)++;
			_76117_token=_75538_tokens[static_cast<jule::Int>(_75560_i)];
			if (_76117_token._field_id == 3LLU) {
				{
					auto _match_expr{ _76117_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4388332768; }
					_case_begin_4388332768:;
					{
						jule::Ref<_2053703bd_RetTypeDecl> _78430_decl;
						jule::Bool _78436_ok;
						std::tie(_78430_decl,_78436_ok) = this->self->_method_build_multi_ret_type(_75538_tokens,_75560_i);
						_75570_t = _78430_decl;
						_75587_ok = _78436_ok;
						return std::make_tuple(_75570_t,_75587_ok);
					}
					goto _match_end_4388331456;
					_case_end_4388332768:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4388332880; }
					_case_begin_4388332880:;
					{
						this->self->_method_push_err(_76117_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
						return std::make_tuple(_75570_t,_75587_ok);
					}
					goto _match_end_4388331456;
					_case_end_4388332880:;
					_match_end_4388331456:;
				}
			}
			std::tie(_75570_t->_field_kind,_75587_ok) = this->self->_method_build_type(_75538_tokens,(&(_75560_i)),true);
			return std::make_tuple(_75570_t,_75587_ok);
		}
		goto _match_end_4388321952;
		_case_end_4388323888:;
		_match_end_4388321952:;
	}
	(_75560_i)++;
	this->self->_method_push_err(_76117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return std::make_tuple(_75570_t,_75587_ok);
}



inline jule::Ref<_2053703bd_FnDecl> _206540c0d_Parser::_method_build_fn_prototype(jule::Slice<_20542560a_Token> _80342_tokens,jule::Int& _80364_i,jule::Bool _80372_method) {
	jule::Ref<_2053703bd_FnDecl> _80417_f = jule::new_struct<_2053703bd_FnDecl>(new( std::nothrow ) _2053703bd_FnDecl(_80342_tokens[static_cast<jule::Int>(_80364_i)],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_2053703bd_Directive>>(),jule::Ref<_2053703bd_CommentGroup>(),jule::Ref<_2053703bd_ScopeTree>(),jule::Slice<jule::Ref<_2053703bd_GenericDecl>>(),jule::Ref<_2053703bd_RetTypeDecl>(),jule::Slice<jule::Ref<_2053703bd_ParamDecl>>()));
	if (_80417_f->_field_token._field_id == 38LLU) {
		_80417_f->_field_statically=true;
		(_80364_i)++;
		if (_80364_i >= _80342_tokens.len()) {
			this->self->_method_push_err(_80417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_2053703bd_FnDecl>();
		}
		_80417_f->_field_token=_80342_tokens[static_cast<jule::Int>(_80364_i)];
	}
	if (_80417_f->_field_token._field_id == 35LLU) {
		_80417_f->_field_unsafety=true;
		(_80364_i)++;
		if (_80364_i >= _80342_tokens.len()) {
			this->self->_method_push_err(_80417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_2053703bd_FnDecl>();
		}
		_80417_f->_field_token=_80342_tokens[static_cast<jule::Int>(_80364_i)];
	}
	(_80364_i)++;
	if (_80364_i >= _80342_tokens.len()) {
		this->self->_method_push_err(_80417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_FnDecl>();
	}
	_20542560a_Token _83713_tok = _80342_tokens[static_cast<jule::Int>(_80364_i)];
	if (_83713_tok._field_id == 2LLU) {
		(_80364_i)++;
		if (_80364_i >= _80342_tokens.len()) {
			this->self->_method_push_err(_80417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_2053703bd_FnDecl>();
		}
		_80417_f->_field_ident=_83713_tok._field_kind;
	} else {
		_80417_f->_field_ident=jule::Str("<anonymous>", 11);
	}
	_20542560a_Token _84913_error_token = _80342_tokens[static_cast<jule::Int>(_80364_i)];
	jule::Slice<_20542560a_Token> _85017_generics_tokens = _206540c0d_range(_80364_i,jule::Str("[", 1),jule::Str("]", 1),_80342_tokens);
	if (_85017_generics_tokens != nullptr) {
		_80417_f->_field_generics=this->self->_method_build_generics(_85017_generics_tokens,_84913_error_token);
	}
	if (_80342_tokens[static_cast<jule::Int>(_80364_i)]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_80342_tokens[static_cast<jule::Int>(_80364_i)],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_FnDecl>();
	}
	jule::Slice<_20542560a_Token> _86017_params_toks = _206540c0d_range(_80364_i,jule::Str("(", 1),jule::Str(")", 1),_80342_tokens);
	if (_86017_params_toks.len() > 0LL) {
		_80417_f->_field_params=this->self->_method_build_params(_86017_params_toks,_80372_method,false);
	}
	std::tie(_80417_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_80342_tokens,_80364_i);
	return _80417_f;
}



inline jule::Ref<_2053703bd_FnDecl> _206540c0d_Parser::_method_build_fn(jule::Slice<_20542560a_Token> _87132_tokens,jule::Bool _87149_method,jule::Bool _87163_prototype) {
	jule::Int _87217_i = 0LL;
	jule::Ref<_2053703bd_FnDecl> _87317_f = this->self->_method_build_fn_prototype(_87132_tokens,_87217_i,_87149_method);
	if (_87163_prototype) {
		if (_87217_i < _87132_tokens.len()) {
			this->self->_method_push_err(_87132_tokens[static_cast<jule::Int>(_87217_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		return _87317_f;
	} else if ((!(jule::real(_87317_f)))) {
		return _87317_f;
	}
	if (_87217_i >= _87132_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_87317_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_FnDecl>();
	}
	jule::Slice<_20542560a_Token> _88917_block_tokens = _206540c0d_range(_87217_i,jule::Str("{", 1),jule::Str("}", 1),_87132_tokens);
	if (_88917_block_tokens != nullptr) {
		_87317_f->_field_scope=this->self->_method_build_scope(_88917_block_tokens);
		_87317_f->_field_scope->_field_unsafety=_87317_f->_field_unsafety;
		if (_87217_i < _87132_tokens.len()) {
			this->self->_method_push_err(_87132_tokens[static_cast<jule::Int>(_87217_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_87317_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_FnDecl>();
	}
	return _87317_f;
}



inline jule::Slice<_20542560a_Token> _206540c0d_Parser::_method_get_use_decl_selectors(jule::Slice<_20542560a_Token> _90545_tokens) {
	jule::Int _90617_i = 0LL;
	_90545_tokens=_206540c0d_range(_90617_i,jule::Str("{", 1),jule::Str("}", 1),_90545_tokens);
	jule::Slice<jule::Slice<_20542560a_Token>> _90818_parts;
	jule::Slice<_20377124e_Log> _90825_errs;
	std::tie(_90818_parts,_90825_errs) = _206540c0d_parts(_90545_tokens,8LLU,true);
	if (_90825_errs.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_90825_errs);
		return nullptr;
	}
	jule::Slice<_20542560a_Token> _91417_selectors = jule::Slice<_20542560a_Token>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_90818_parts.len())));
	{
		auto _range_expr = _90818_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206540c0d_j = 0;
			jule::Slice<_20542560a_Token> _206540c0d_part = *_range_begin;
			_iter_begin_4388409936:;
			{
				if (_206540c0d_part.len() > 1LL) {
					(*this)._method_push_err(_206540c0d_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_20542560a_Token _91921_tok = _206540c0d_part[0LL];
				if ((_91921_tok._field_id != 2LLU) && (_91921_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_91921_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					goto _iter_next_4388409936;
				}
				_91417_selectors[static_cast<jule::Int>(_206540c0d_j)]=_91921_tok;
			}
			_iter_next_4388409936:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206540c0d_j; _206540c0d_part = *_range_begin; goto _iter_begin_4388409936; }
			_iter_end_4388409936:;
		}
	}
	return _91417_selectors;
}



inline void _206540c0d_Parser::_method_build_cpp_use_decl(jule::Ref<_2053703bd_UseDecl> _93041_decl,jule::Slice<_20542560a_Token> _93057_tokens) {
	if (_93057_tokens.len() > 1LL) {
		(*this)._method_push_err(_93057_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_20542560a_Token _93413_token = _93057_tokens[0LL];
	if ((_93413_token._field_id != 6LLU) || ((_93413_token._field_kind[0LL] != '`') && (_93413_token._field_kind[0LL] != '\"'))) {
		(*this)._method_push_err(_93413_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return;
	}
	_93041_decl->_field_cpp_linked=true;
	_93041_decl->_field_link_path=_93413_token._field_kind.slice(1LL,static_cast<jule::Int>(_93413_token._field_kind.len() - 1LL));
	if ((!(_2037761bb_is_std_header_path(_93041_decl->_field_link_path)))) {
		_93041_decl->_field_link_path=_203896264_join(jule::Slice<jule::Str>({_93413_token._field_file->_method_dir(),_93041_decl->_field_link_path}));
	}
}



inline void _206540c0d_Parser::_method_build_std_use_decl(jule::Ref<_2053703bd_UseDecl> _94641_decl,jule::Slice<_20542560a_Token> _94661_tokens) {
	_94641_decl->_field_std=true;
	_20542560a_Token _94917_token = _94661_tokens[0LL];
	if (_94661_tokens.len() < 3LL) {
		(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_94661_tokens=_94661_tokens.slice(2LL);
	_94917_token=_94661_tokens[static_cast<jule::Int>(_94661_tokens.len() - 1LL)];
	{
		auto _match_expr{ _94917_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4388455616; }
		_case_begin_4388455616:;
		{
			(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4388453296;
		_case_end_4388455616:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4388455744; }
		_case_begin_4388455744:;
		{
			if (_94917_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_20542560a_Token> _96721_selectors = nullptr;
			std::tie(_94661_tokens,_96721_selectors) = _206540c0d_range_last(_94661_tokens);
			_94641_decl->_field_selected=(*this)._method_get_use_decl_selectors(_96721_selectors);
			if (_94661_tokens.len() == 0LL) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_94917_token=_94661_tokens[static_cast<jule::Int>(_94661_tokens.len() - 1LL)];
			if (_94917_token._field_id != 23LLU) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_94661_tokens=_94661_tokens.slice(0LL,static_cast<jule::Int>(_94661_tokens.len() - 1LL));
			if (_94661_tokens.len() == 0LL) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4388453296;
		_case_end_4388455744:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4388455872; }
		_case_begin_4388455872:;
		{
			if (_94917_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_94661_tokens=_94661_tokens.slice(0LL,static_cast<jule::Int>(_94661_tokens.len() - 1LL));
			if (_94661_tokens.len() == 0LL) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_94917_token=_94661_tokens[static_cast<jule::Int>(_94661_tokens.len() - 1LL)];
			if (_94917_token._field_id != 23LLU) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_94661_tokens=_94661_tokens.slice(0LL,static_cast<jule::Int>(_94661_tokens.len() - 1LL));
			if (_94661_tokens.len() == 0LL) {
				(*this)._method_push_err(_94917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_94641_decl->_field_full=true;
		}
		goto _match_end_4388453296;
		_case_end_4388455872:;
		_match_end_4388453296:;
	}
	_94641_decl->_field_link_path=jule::Str("std::", 5) + _206540c0d_tokstoa(_94661_tokens);
}



inline void _206540c0d_Parser::_method_build_ident_use_decl(jule::Ref<_2053703bd_UseDecl> _101043_decl,jule::Slice<_20542560a_Token> _101063_tokens) {
	_101043_decl->_field_std=false;
	_20542560a_Token _101317_token = _101063_tokens[static_cast<jule::Int>(_101063_tokens.len() - 1LL)];
	{
		auto _match_expr{ _101317_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4388492320; }
		_case_begin_4388492320:;
		{
			(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4388488832;
		_case_end_4388492320:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4388492432; }
		_case_begin_4388492432:;
		{
			if (_101317_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_20542560a_Token> _102521_selectors = nullptr;
			std::tie(_101063_tokens,_102521_selectors) = _206540c0d_range_last(_101063_tokens);
			_101043_decl->_field_selected=(*this)._method_get_use_decl_selectors(_102521_selectors);
			if (_101063_tokens.len() == 0LL) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101317_token=_101063_tokens[static_cast<jule::Int>(_101063_tokens.len() - 1LL)];
			if (_101317_token._field_id != 23LLU) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101063_tokens=_101063_tokens.slice(0LL,static_cast<jule::Int>(_101063_tokens.len() - 1LL));
			if (_101063_tokens.len() == 0LL) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4388488832;
		_case_end_4388492432:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4388492544; }
		_case_begin_4388492544:;
		{
			if (_101317_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101063_tokens=_101063_tokens.slice(0LL,static_cast<jule::Int>(_101063_tokens.len() - 1LL));
			if (_101063_tokens.len() == 0LL) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101317_token=_101063_tokens[static_cast<jule::Int>(_101063_tokens.len() - 1LL)];
			if (_101317_token._field_id != 23LLU) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101063_tokens=_101063_tokens.slice(0LL,static_cast<jule::Int>(_101063_tokens.len() - 1LL));
			if (_101063_tokens.len() == 0LL) {
				(*this)._method_push_err(_101317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101043_decl->_field_full=true;
		}
		goto _match_end_4388488832;
		_case_end_4388492544:;
		_match_end_4388488832:;
	}
	_101043_decl->_field_link_path=_206540c0d_tokstoa(_101063_tokens);
}



inline void _206540c0d_Parser::_method_parse_use_decl(jule::Ref<_2053703bd_UseDecl> _107537_decl,jule::Slice<_20542560a_Token> _107557_tokens) {
	if (_107537_decl->_field_cpp_linked) {
		(*this)._method_build_cpp_use_decl(_107537_decl,_107557_tokens);
		return;
	}
	_20542560a_Token _108117_token = _107557_tokens[0LL];
	if (_108117_token._field_id != 2LLU) {
		(*this)._method_push_err(_108117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	if ((_107557_tokens.len() > 2LL) && (_107557_tokens[1LL]._field_id == 12LLU)) {
		_107537_decl->_field_alias=_108117_token._field_kind;
		if (_107557_tokens[2LL]._field_id != 2LLU) {
			(*this)._method_push_err(_108117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			return;
		}
		_107557_tokens=_107557_tokens.slice(2LL);
		_108117_token=_107557_tokens[0LL];
	}
	
	{
		if (!((_108117_token._field_kind == jule::Str("std", 3)))) { goto _case_end_4388542016; }
		_case_begin_4388542016:;
		{
			(*this)._method_build_std_use_decl(_107537_decl,_107557_tokens);
		}
		goto _match_end_4388541056;
		_case_end_4388542016:;
		_case_begin_4388541184:;
		{
			(*this)._method_build_ident_use_decl(_107537_decl,_107557_tokens);
		}
		goto _match_end_4388541056;
		_case_end_4388541184:;
		_match_end_4388541056:;
	}
}



inline jule::Ref<_2053703bd_UseDecl> _206540c0d_Parser::_method_build_use_decl(jule::Slice<_20542560a_Token> _111037_tokens,jule::Bool _111054_cpp_linked) {
	jule::Ref<_2053703bd_UseDecl> _111117_decl = jule::new_struct<_2053703bd_UseDecl>(new( std::nothrow ) _2053703bd_UseDecl(_111037_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_20542560a_Token>(),_111054_cpp_linked,jule::Bool()));
	if (_111037_tokens.len() < 2LL) {
		(*this)._method_push_err(_111117_decl->_field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_UseDecl>();
	}
	_111037_tokens=_111037_tokens.slice(1LL);
	(*this)._method_parse_use_decl(_111117_decl,_111037_tokens);
	return _111117_decl;
}



inline jule::Ref<_2053703bd_Expr> _206540c0d_Parser::_method_build_enum_item_expr(jule::Ref<jule::Int> _112444_i,jule::Slice<_20542560a_Token> _112457_tokens) {
	jule::Int _112517_brace_n = 0LL;
	jule::Int _112613_expr_start = _112444_i;
	_iter_begin_4388560096:;
	if (!(_112444_i < _112457_tokens.len())) { goto _iter_end_4388560096; }
	{
		_20542560a_Token _112817_t = _112457_tokens[static_cast<jule::Int>(_112444_i)];
		if (_112817_t._field_id == 3LLU) {
			{
				auto _match_expr{ _112817_t._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4388565296; }
				_case_begin_4388565296:;
				{
					(_112517_brace_n)++;
					goto _iter_next_4388560096;
				}
				goto _match_end_4388563712;
				_case_end_4388565296:;
				_case_begin_4388564496:;
				{
					(_112517_brace_n)--;
				}
				goto _match_end_4388563712;
				_case_end_4388564496:;
				_match_end_4388563712:;
			}
		}
		if (_112517_brace_n > 0LL) {
			goto _iter_next_4388560096;
		}
		if ((_112817_t._field_id == 8LLU) || ((_112444_i + 1LL) >= _112457_tokens.len())) {
			jule::Slice<_20542560a_Token> _114725_expr_tokens = nullptr;
			if (_112817_t._field_id == 8LLU) {
				_114725_expr_tokens=_112457_tokens.slice(static_cast<jule::Int>(_112613_expr_start),static_cast<jule::Int>(_112444_i));
			} else {
				_114725_expr_tokens=_112457_tokens.slice(static_cast<jule::Int>(_112613_expr_start));
			}
			return this->self->_method_build_expr(_114725_expr_tokens);
		}
	}
	_iter_next_4388560096:;
	(_112444_i)++;
	goto _iter_begin_4388560096;
	_iter_end_4388560096:;
	return jule::new_ref<_2053703bd_Expr>();
}



inline jule::Slice<jule::Ref<_2053703bd_EnumItemDecl>> _206540c0d_Parser::_method_build_enum_items(jule::Slice<_20542560a_Token> _115940_tokens) {
	jule::Slice<jule::Ref<_2053703bd_EnumItemDecl>> _116017_items = jule::Slice<jule::Ref<_2053703bd_EnumItemDecl>>::alloc(0LL);
	jule::Ref<jule::Int> _116117_i = jule::new_ref<jule::Int>(0LL);
	_iter_begin_4388580144:;
	if (!(_116117_i < _115940_tokens.len())) { goto _iter_end_4388580144; }
	{
		_20542560a_Token _116321_t = _115940_tokens[static_cast<jule::Int>(_116117_i)];
		if (_116321_t._field_id == 18LLU) {
			goto _iter_next_4388580144;
		}
		jule::Ref<_2053703bd_EnumItemDecl> _116821_item = jule::new_struct<_2053703bd_EnumItemDecl>(new( std::nothrow ) _2053703bd_EnumItemDecl());
		_116821_item->_field_token=_116321_t;
		if (_116821_item->_field_token._field_id != 2LLU) {
			this->self->_method_push_err(_116821_item->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		}
		_116821_item->_field_ident=_116821_item->_field_token._field_kind;
		if (((_116117_i + 1LL) >= _115940_tokens.len()) || (_115940_tokens[static_cast<jule::Int>(_116117_i + 1LL)]._field_id == 8LLU)) {
			if ((_116117_i + 1LL) < _115940_tokens.len()) {
				(_116117_i)++;
			}
			_116017_items=jule::append(_116017_items,jule::Slice<jule::Ref<_2053703bd_EnumItemDecl>>({_116821_item}));
			goto _iter_next_4388580144;
		}
		(_116117_i)++;
		_116321_t=_115940_tokens[static_cast<jule::Int>(_116117_i)];
		(_116117_i)++;
		if ((_116321_t._field_id != 7LLU) || (_116321_t._field_kind != jule::Str("=", 1))) {
			this->self->_method_push_err(_116321_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>({}));
			goto _iter_next_4388580144;
		}
		if ((_116117_i >= _115940_tokens.len()) || (_115940_tokens[static_cast<jule::Int>(_116117_i)]._field_id == 8LLU)) {
			this->self->_method_push_err(_116321_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
			goto _iter_next_4388580144;
		}
		_116821_item->_field_expr=this->self->_method_build_enum_item_expr(_116117_i,_115940_tokens);
		_116017_items=jule::append(_116017_items,jule::Slice<jule::Ref<_2053703bd_EnumItemDecl>>({_116821_item}));
	}
	_iter_next_4388580144:;
	(_116117_i)++;
	goto _iter_begin_4388580144;
	_iter_end_4388580144:;
	return _116017_items;
}



inline jule::Ref<_2053703bd_EnumDecl> _206540c0d_Parser::_method_build_enum_decl(jule::Slice<_20542560a_Token> _120039_tokens) {
	if ((_120039_tokens.len() < 2LL) || (_120039_tokens.len() < 3LL)) {
		this->self->_method_push_err(_120039_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_EnumDecl>();
	}
	jule::Ref<_2053703bd_EnumDecl> _120517_e = jule::new_struct<_2053703bd_EnumDecl>(new( std::nothrow ) _2053703bd_EnumDecl(_120039_tokens[1LL],jule::Bool(),jule::Str(),jule::Ref<_2053703bd_TypeDecl>(),jule::Slice<jule::Ref<_2053703bd_EnumItemDecl>>(),jule::Ref<_2053703bd_CommentGroup>()));
	if (_120517_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_120517_e->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_120517_e->_field_ident=_120517_e->_field_token._field_kind;
	jule::Int _121317_i = 2LL;
	if (_120039_tokens[static_cast<jule::Int>(_121317_i)]._field_id == 11LLU) {
		(_121317_i)++;
		if (_121317_i >= _120039_tokens.len()) {
			this->self->_method_push_err(_120039_tokens[static_cast<jule::Int>(_121317_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return _120517_e;
		}
		std::tie(_120517_e->_field_kind,std::ignore) = this->self->_method_build_type(_120039_tokens,(&(_121317_i)),true);
		if (_121317_i >= _120039_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_120517_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
			return _120517_e;
		}
	} else {
		jule::drop(_120517_e->_field_kind);
	}
	jule::Slice<_20542560a_Token> _123017_item_tokens = _206540c0d_range(_121317_i,jule::Str("{", 1),jule::Str("}", 1),_120039_tokens);
	if (_123017_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_120517_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _120517_e;
	} else if (_121317_i < _120039_tokens.len()) {
		this->self->_method_push_err(_120039_tokens[static_cast<jule::Int>(_121317_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_120517_e->_field_items=this->self->_method_build_enum_items(_123017_item_tokens);
	return _120517_e;
}



inline jule::Ref<_2053703bd_FieldDecl> _206540c0d_Parser::_method_build_field(jule::Slice<_20542560a_Token> _124335_tokens) {
	jule::Ref<_2053703bd_FieldDecl> _124417_f = jule::new_struct<_2053703bd_FieldDecl>(new( std::nothrow ) _2053703bd_FieldDecl());
	_124417_f->_field_public=_124335_tokens[0LL]._field_id == 21LLU;
	if (_124417_f->_field_public) {
		if (_124335_tokens.len() == 1LL) {
			this->self->_method_push_err(_124335_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_2053703bd_FieldDecl>();
		}
		_124335_tokens=_124335_tokens.slice(1LL);
	}
	_124417_f->_field_mutable=_124335_tokens[0LL]._field_id == 36LLU;
	if (_124417_f->_field_mutable) {
		if (_124335_tokens.len() == 1LL) {
			this->self->_method_push_err(_124335_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_2053703bd_FieldDecl>();
		}
		_124335_tokens=_124335_tokens.slice(1LL);
	}
	_124417_f->_field_token=_124335_tokens[0LL];
	if (_124417_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_124417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_FieldDecl>();
	}
	_124417_f->_field_ident=_124417_f->_field_token._field_kind;
	if (_124335_tokens.len() == 1LL) {
		this->self->_method_push_err(_124335_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_FieldDecl>();
	} else if (_124335_tokens[1LL]._field_id != 11LLU) {
		this->self->_method_push_err(_124335_tokens[1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_FieldDecl>();
	}
	_124335_tokens=_124335_tokens.slice(2LL);
	jule::Int _128117_i = 0LL;
	std::tie(_124417_f->_field_kind,std::ignore) = this->self->_method_build_type(_124335_tokens,(&(_128117_i)),true);
	if (_128117_i < _124335_tokens.len()) {
		this->self->_method_push_err(_124335_tokens[static_cast<jule::Int>(_128117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_FieldDecl>();
	}
	return _124417_f;
}



inline jule::Slice<jule::Ref<_2053703bd_FieldDecl>> _206540c0d_Parser::_method_build_struct_decl_fields(jule::Slice<_20542560a_Token> _129148_tokens) {
	jule::Slice<jule::Ref<_2053703bd_FieldDecl>> _129217_fields = nullptr;
	jule::Slice<jule::Ref<_2053cae51_Stmt>> _129317_stms = _2053cae51_split_stms(_129148_tokens);
	{
		auto _range_expr = _129317_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cae51_Stmt> _206540c0d_st = *_range_begin;
			_iter_begin_4388680656:;
			{
				_129148_tokens=_206540c0d_st->_field_tokens;
				if (_129148_tokens[0LL]._field_id == 18LLU) {
					goto _iter_next_4388680656;
				}
				jule::Ref<_2053703bd_FieldDecl> _129921_f = this->self->_method_build_field(_129148_tokens);
				_129217_fields=jule::append(_129217_fields,jule::Slice<jule::Ref<_2053703bd_FieldDecl>>({_129921_f}));
			}
			_iter_next_4388680656:;
			++_range_begin;
			if (_range_begin != _range_end) { _206540c0d_st = *_range_begin; goto _iter_begin_4388680656; }
			_iter_end_4388680656:;
		}
	}
	return _129217_fields;
}



inline jule::Ref<_2053703bd_StructDecl> _206540c0d_Parser::_method_build_struct_decl(jule::Slice<_20542560a_Token> _130541_tokens) {
	if (_130541_tokens.len() < 3LL) {
		this->self->_method_push_err(_130541_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_StructDecl>();
	}
	jule::Int _131117_i = 1LL;
	jule::Ref<_2053703bd_StructDecl> _131217_s = jule::new_struct<_2053703bd_StructDecl>(new( std::nothrow ) _2053703bd_StructDecl(_130541_tokens[static_cast<jule::Int>(_131117_i)],jule::Str(),jule::Slice<jule::Ref<_2053703bd_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_2053703bd_Directive>>(),jule::Ref<_2053703bd_CommentGroup>(),jule::Slice<jule::Ref<_2053703bd_GenericDecl>>()));
	if (_131217_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_131217_s->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_131117_i)++;
	if (_131117_i >= _130541_tokens.len()) {
		this->self->_method_push_err(_130541_tokens[static_cast<jule::Int>(_131117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _131217_s;
	}
	_131217_s->_field_ident=_131217_s->_field_token._field_kind;
	_20542560a_Token _132613_error_token = _130541_tokens[static_cast<jule::Int>(_131117_i)];
	jule::Slice<_20542560a_Token> _132717_generics_tokens = _206540c0d_range(_131117_i,jule::Str("[", 1),jule::Str("]", 1),_130541_tokens);
	if (_132717_generics_tokens != nullptr) {
		_131217_s->_field_generics=this->self->_method_build_generics(_132717_generics_tokens,_132613_error_token);
	}
	if (_131117_i >= _130541_tokens.len()) {
		this->self->_method_push_err(_130541_tokens[static_cast<jule::Int>(_131117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _131217_s;
	}
	jule::Slice<_20542560a_Token> _133617_body_tokens = _206540c0d_range(_131117_i,jule::Str("{", 1),jule::Str("}", 1),_130541_tokens);
	if (_133617_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_131217_s->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _131217_s;
	}
	if (_131117_i < _130541_tokens.len()) {
		this->self->_method_push_err(_130541_tokens[static_cast<jule::Int>(_131117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_131217_s->_field_fields=this->self->_method_build_struct_decl_fields(_133617_body_tokens);
	return _131217_s;
}



inline void _206540c0d_Parser::_method_check_method_receiver(jule::Ref<_2053703bd_FnDecl> _135040_f) {
	if (_135040_f->_field_statically) {
		if ((_135040_f->_field_params.len() > 0LL) && _135040_f->_field_params[0LL]->_method_is_self()) {
			(*this)._method_push_err(_135040_f->_field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>({}));
		}
		return;
	}
	if (_135040_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_135040_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_2053703bd_ParamDecl> _136313_param = _135040_f->_field_params[0LL];
	if ((!(_136313_param->_method_is_self()))) {
		(*this)._method_push_err(_135040_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
}



inline jule::Slice<jule::Ref<_2053703bd_FnDecl>> _206540c0d_Parser::_method_build_trait_methods(jule::Slice<_20542560a_Token> _137043_tokens) {
	jule::Slice<jule::Ref<_2053703bd_FnDecl>> _137117_methods = nullptr;
	jule::Slice<jule::Ref<_2053cae51_Stmt>> _137217_stms = _2053cae51_split_stms(_137043_tokens);
	{
		auto _range_expr = _137217_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cae51_Stmt> _206540c0d_st = *_range_begin;
			_iter_begin_4388740496:;
			{
				_137043_tokens=_2054205a0_eliminate_comments(_206540c0d_st->_field_tokens);
				if (_137043_tokens.len() == 0LL) {
					goto _iter_next_4388740496;
				}
				jule::Bool _137921_is_pub = false;
				if (_137043_tokens[0LL]._field_id == 21LLU) {
					_137921_is_pub=true;
					if (_137043_tokens.len() == 1LL) {
						this->self->_method_push_err(_137043_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4388740496;
					}
					_137043_tokens=_137043_tokens.slice(1LL);
				}
				jule::Ref<_2053703bd_FnDecl> _138921_f = this->self->_method_build_fn(_137043_tokens,true,true);
				if (jule::real(_138921_f)) {
					if (_138921_f->_method_is_anon()) {
						this->self->_method_push_err(_138921_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_method_receiver(_138921_f);
					if (_138921_f->_field_generics.len() > 0LL) {
						this->self->_method_push_err(_138921_f->_field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>({}));
					}
					_138921_f->_field_public=_137921_is_pub;
					_137117_methods=jule::append(_137117_methods,jule::Slice<jule::Ref<_2053703bd_FnDecl>>({_138921_f}));
				}
			}
			_iter_next_4388740496:;
			++_range_begin;
			if (_range_begin != _range_end) { _206540c0d_st = *_range_begin; goto _iter_begin_4388740496; }
			_iter_end_4388740496:;
		}
	}
	return _137117_methods;
}



inline jule::Ref<_2053703bd_TraitDecl> _206540c0d_Parser::_method_build_trait_decl(jule::Slice<_20542560a_Token> _140540_tokens) {
	if (_140540_tokens.len() < 3LL) {
		this->self->_method_push_err(_140540_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_TraitDecl>();
	}
	jule::Ref<_2053703bd_TraitDecl> _141017_t = jule::new_struct<_2053703bd_TraitDecl>(new( std::nothrow ) _2053703bd_TraitDecl(_140540_tokens[1LL],jule::Str(),jule::Bool(),jule::Ref<_2053703bd_CommentGroup>(),jule::Slice<jule::Ref<_2053703bd_FnDecl>>()));
	if (_141017_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_141017_t->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_141017_t->_field_ident=_141017_t->_field_token._field_kind;
	jule::Int _141817_i = 2LL;
	jule::Slice<_20542560a_Token> _141917_body_tokens = _206540c0d_range(_141817_i,jule::Str("{", 1),jule::Str("}", 1),_140540_tokens);
	if (_141917_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_141017_t->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_TraitDecl>();
	}
	if (_141817_i < _140540_tokens.len()) {
		this->self->_method_push_err(_140540_tokens[static_cast<jule::Int>(_141817_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_141017_t->_field_methods=this->self->_method_build_trait_methods(_141917_body_tokens);
	return _141017_t;
}



inline jule::Ref<_2053703bd_FnDecl> _206540c0d_Parser::_method_build_cpp_link_fn(jule::Slice<_20542560a_Token> _143341_tokens) {
	_143341_tokens=_143341_tokens.slice(1LL);
	jule::Ref<_2053703bd_FnDecl> _143517_f = this->self->_method_build_fn(_143341_tokens,false,true);
	if (jule::real(_143517_f)) {
		if (_143517_f->_method_is_anon()) {
			this->self->_method_push_err(_143517_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		_143517_f->_field_cpp_linked=true;
	}
	return _143517_f;
}



inline jule::Ref<_2053703bd_VarDecl> _206540c0d_Parser::_method_build_cpp_link_var(jule::Slice<_20542560a_Token> _144542_tokens) {
	_144542_tokens=_144542_tokens.slice(1LL);
	jule::Ref<_2053703bd_VarDecl> _144717_v = this->self->_method_build_var(_144542_tokens);
	if (jule::real(_144717_v)) {
		_144717_v->_field_cpp_linked=true;
		if (jule::real(_144717_v->_field_expr)) {
			this->self->_method_push_err(_144717_v->_field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>({}));
		}
	}
	return _144717_v;
}



inline jule::Ref<_2053703bd_StructDecl> _206540c0d_Parser::_method_build_cpp_link_struct(jule::Slice<_20542560a_Token> _145745_tokens) {
	_145745_tokens=_145745_tokens.slice(1LL);
	jule::Ref<_2053703bd_StructDecl> _145917_s = this->self->_method_build_struct_decl(_145745_tokens);
	if (jule::real(_145917_s)) {
		_145917_s->_field_cpp_linked=true;
	}
	return _145917_s;
}



inline jule::Ref<_2053703bd_TypeAliasDecl> _206540c0d_Parser::_method_build_cpp_link_type_alias(jule::Slice<_20542560a_Token> _146649_tokens) {
	_146649_tokens=_146649_tokens.slice(1LL);
	jule::Ref<_2053703bd_TypeAliasDecl> _146817_t = this->self->_method_build_type_alias_decl(_146649_tokens);
	if (jule::real(_146817_t)) {
		_146817_t->_field_cpp_linked=true;
	}
	return _146817_t;
}



inline jule::Ref<_2053703bd_UseDecl> _206540c0d_Parser::_method_build_cpp_link_use(jule::Slice<_20542560a_Token> _147542_tokens) {
	if (_147542_tokens.len() == 1LL) {
		this->self->_method_push_err(_147542_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_UseDecl>();
	}
	_147542_tokens=_147542_tokens.slice(1LL);
	
	return this->self->_method_build_use_decl(_147542_tokens,true);
}



inline jule::Any _206540c0d_Parser::_method_build_cpp_link(jule::Slice<_20542560a_Token> _148638_tokens) {
	_20542560a_Token _148717_token = _148638_tokens[0LL];
	if (_148638_tokens.len() == 1LL) {
		this->self->_method_push_err(_148717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	_148717_token=_148638_tokens[1LL];
	{
		auto _match_expr{ _148717_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4388826624; }
		_case_begin_4388826624:;
		{
			return jule::Any(this->self->_method_build_cpp_link_use(_148638_tokens));
		}
		goto _match_end_4388824864;
		_case_end_4388826624:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4388826144; }
		_case_begin_4388826144:;
		{
			return jule::Any(this->self->_method_build_cpp_link_fn(_148638_tokens));
		}
		goto _match_end_4388824864;
		_case_end_4388826144:;
		if (!((9LLU) == _match_expr || (34LLU) == _match_expr)) { goto _case_end_4388826256; }
		_case_begin_4388826256:;
		{
			return jule::Any(this->self->_method_build_cpp_link_var(_148638_tokens));
		}
		goto _match_end_4388824864;
		_case_end_4388826256:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4388826368; }
		_case_begin_4388826368:;
		{
			return jule::Any(this->self->_method_build_cpp_link_struct(_148638_tokens));
		}
		goto _match_end_4388824864;
		_case_end_4388826368:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4388828080; }
		_case_begin_4388828080:;
		{
			return jule::Any(this->self->_method_build_cpp_link_type_alias(_148638_tokens));
		}
		goto _match_end_4388824864;
		_case_end_4388828080:;
		_case_begin_4388825744:;
		{
			this->self->_method_push_err(_148717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4388824864;
		_case_end_4388825744:;
		_match_end_4388824864:;
	}
	return jule::Any(nullptr);
}



inline jule::Ref<_2053703bd_FnDecl> _206540c0d_Parser::_method_get_method(jule::Slice<_20542560a_Token> _151734_tokens) {
	jule::Int _151817_i = 0LL;
	_20542560a_Token _151917_token = _151734_tokens[static_cast<jule::Int>(_151817_i)];
	if (_151917_token._field_id == 38LLU) {
		if ((_151817_i + 1LL) >= _151734_tokens.len()) {
			this->self->_method_push_err(_151917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_2053703bd_FnDecl>();
		}
		(_151817_i)++;
		_151917_token=_151734_tokens[static_cast<jule::Int>(_151817_i)];
	}
	if (_151917_token._field_id == 35LLU) {
		if ((_151817_i + 1LL) >= _151734_tokens.len()) {
			this->self->_method_push_err(_151917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_2053703bd_FnDecl>();
		}
		(_151817_i)++;
		_151917_token=_151734_tokens[static_cast<jule::Int>(_151817_i)];
	}
	if (_151917_token._field_id != 33LLU) {
		this->self->_method_push_err(_151917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_FnDecl>();
	}
	jule::Ref<_2053703bd_FnDecl> _154317_f = this->self->_method_build_fn(_151734_tokens,true,false);
	if (jule::real(_154317_f) && _154317_f->_method_is_anon()) {
		this->self->_method_push_err(_154317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _154317_f;
}



inline void _206540c0d_Parser::_method_parse_impl_trait(jule::Ref<_2053703bd_Impl> _155040_ipl,jule::Slice<_20542560a_Token> _155056_tokens) {
	jule::Slice<jule::Ref<_2053cae51_Stmt>> _155117_stms = _2053cae51_split_stms(_155056_tokens);
	{
		auto _range_expr = _155117_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cae51_Stmt> _206540c0d_st = *_range_begin;
			_iter_begin_4388859584:;
			{
				_155056_tokens=_206540c0d_st->_field_tokens;
				_20542560a_Token _155421_token = _155056_tokens[0LL];
				jule::Bool _155521_is_pub = false;
				{
					auto _match_expr{ _155421_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_4388864656; }
					_case_begin_4388864656:;
					{
						goto _iter_next_4388859584;
					}
					goto _match_end_4388863008;
					_case_end_4388864656:;
					if (!((21LLU) == _match_expr)) { goto _case_end_4388864768; }
					_case_begin_4388864768:;
					{
						_155521_is_pub=true;
						if (_155056_tokens.len() == 1LL) {
							this->self->_method_push_err(_155056_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_4388859584;
						}
						_155056_tokens=_155056_tokens.slice(1LL);
						if (_155056_tokens.len() > 0LL) {
							_155421_token=_155056_tokens[0LL];
						}
					}
					goto _match_end_4388863008;
					_case_end_4388864768:;
					_match_end_4388863008:;
				}
				{
					auto _match_expr{ _155421_token._field_id };
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4388873856; }
					_case_begin_4388873856:;
					{
						jule::Ref<_2053703bd_FnDecl> _157725_f = this->self->_method_get_method(_155056_tokens);
						if (jule::real(_157725_f)) {
							_157725_f->_field_public=_155521_is_pub;
							this->self->_method_check_method_receiver(_157725_f);
							_155040_ipl->_field_methods=jule::append(_155040_ipl->_field_methods,jule::Slice<jule::Ref<_2053703bd_FnDecl>>({_157725_f}));
						}
					}
					goto _match_end_4388869760;
					_case_end_4388873856:;
					_case_begin_4388865744:;
					{
						this->self->_method_push_err(_155421_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4388859584;
					}
					goto _match_end_4388869760;
					_case_end_4388865744:;
					_match_end_4388869760:;
				}
			}
			_iter_next_4388859584:;
			++_range_begin;
			if (_range_begin != _range_end) { _206540c0d_st = *_range_begin; goto _iter_begin_4388859584; }
			_iter_end_4388859584:;
		}
	}
}



inline void _206540c0d_Parser::_method_parse_impl_struct(jule::Ref<_2053703bd_Impl> _159141_ipl,jule::Slice<_20542560a_Token> _159157_tokens) {
	jule::Slice<jule::Ref<_2053cae51_Stmt>> _159217_stms = _2053cae51_split_stms(_159157_tokens);
	{
		auto _range_expr = _159217_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cae51_Stmt> _206540c0d_st = *_range_begin;
			_iter_begin_4388883472:;
			{
				_159157_tokens=_206540c0d_st->_field_tokens;
				_20542560a_Token _159521_token = _159157_tokens[0LL];
				jule::Bool _159621_is_pub = false;
				{
					auto _match_expr{ _159521_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_4388888544; }
					_case_begin_4388888544:;
					{
						goto _iter_next_4388883472;
					}
					goto _match_end_4388886896;
					_case_end_4388888544:;
					if (!((21LLU) == _match_expr)) { goto _case_end_4388888656; }
					_case_begin_4388888656:;
					{
						_159621_is_pub=true;
						if (_159157_tokens.len() == 1LL) {
							this->self->_method_push_err(_159157_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_4388883472;
						}
						_159157_tokens=_159157_tokens.slice(1LL);
						if (_159157_tokens.len() > 0LL) {
							_159521_token=_159157_tokens[0LL];
						}
					}
					goto _match_end_4388886896;
					_case_end_4388888656:;
					_match_end_4388886896:;
				}
				{
					auto _match_expr{ _159521_token._field_id };
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4388897744; }
					_case_begin_4388897744:;
					{
						jule::Ref<_2053703bd_FnDecl> _161825_f = this->self->_method_get_method(_159157_tokens);
						if (jule::real(_161825_f)) {
							_161825_f->_field_public=_159621_is_pub;
							this->self->_method_check_method_receiver(_161825_f);
							_159141_ipl->_field_methods=jule::append(_159141_ipl->_field_methods,jule::Slice<jule::Ref<_2053703bd_FnDecl>>({_161825_f}));
						}
					}
					goto _match_end_4388893648;
					_case_end_4388897744:;
					_case_begin_4388889632:;
					{
						this->self->_method_push_err(_159521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4388883472;
					}
					goto _match_end_4388893648;
					_case_end_4388889632:;
					_match_end_4388893648:;
				}
			}
			_iter_next_4388883472:;
			++_range_begin;
			if (_range_begin != _range_end) { _206540c0d_st = *_range_begin; goto _iter_begin_4388883472; }
			_iter_end_4388883472:;
		}
	}
}



inline void _206540c0d_Parser::_method_parse_impl_body(jule::Ref<_2053703bd_Impl> _163239_ipl,jule::Slice<_20542560a_Token> _163255_tokens) {
	if (_163239_ipl->_method_is_trait_impl()) {
		this->self->_method_parse_impl_trait(_163239_ipl,_163255_tokens);
		return;
	}
	this->self->_method_parse_impl_struct(_163239_ipl,_163255_tokens);
}



inline jule::Ref<_2053703bd_Impl> _206540c0d_Parser::_method_build_impl(jule::Slice<_20542560a_Token> _164034_tokens) {
	_20542560a_Token _164117_token = _164034_tokens[0LL];
	if (_164034_tokens.len() < 2LL) {
		this->self->_method_push_err(_164117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_Impl>();
	}
	_164117_token=_164034_tokens[1LL];
	if (_164117_token._field_id != 2LLU) {
		this->self->_method_push_err(_164117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_Impl>();
	}
	if (_164034_tokens.len() < 3LL) {
		this->self->_method_push_err(_164117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_Impl>();
	}
	jule::Ref<_2053703bd_Impl> _165617_ipl = jule::new_struct<_2053703bd_Impl>(new( std::nothrow ) _2053703bd_Impl(_164117_token,_20542560a_Token(),jule::Slice<jule::Ref<_2053703bd_FnDecl>>()));
	_164117_token=_164034_tokens[2LL];
	if (_164117_token._field_id != 12LLU) {
		if ((_164117_token._field_id == 3LLU) && (_164117_token._field_kind == jule::Str("{", 1))) {
			std::tie(_165617_ipl->_field_base,_165617_ipl->_field_dest) = std::make_tuple(_165617_ipl->_field_dest,_165617_ipl->_field_base);
			_164034_tokens=_164034_tokens.slice(2LL);
			goto _julec_label_body;
		}
		this->self->_method_push_err(_164117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_Impl>();
	}
	if (_164034_tokens.len() < 4LL) {
		this->self->_method_push_err(_164117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_Impl>();
	}
	_164117_token=_164034_tokens[3LL];
	if (_164117_token._field_id != 2LLU) {
		this->self->_method_push_err(_164117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_Impl>();
	}
	_165617_ipl->_field_dest=_164117_token;
	_164034_tokens=_164034_tokens.slice(4LL);
	_julec_label_body:;
	jule::Int _168617_i = 0LL;
	jule::Slice<_20542560a_Token> _168717_body_tokens = _206540c0d_range(_168617_i,jule::Str("{", 1),jule::Str("}", 1),_164034_tokens);
	if (_168717_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_165617_ipl->_field_base,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053703bd_Impl>();
	}
	if (_168617_i < _164034_tokens.len()) {
		this->self->_method_push_err(_164034_tokens[static_cast<jule::Int>(_168617_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	this->self->_method_parse_impl_body(_165617_ipl,_168717_body_tokens);
	return _165617_ipl;
}



inline jule::Any _206540c0d_Parser::_method_build_node_data(jule::Slice<_20542560a_Token> _170139_tokens) {
	_20542560a_Token _170217_token = _170139_tokens[0LL];
	{
		auto _match_expr{ _170217_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4388956224; }
		_case_begin_4388956224:;
		{
			
			return jule::Any(this->self->_method_build_use_decl(_170139_tokens,false));
		}
		goto _match_end_4388954720;
		_case_end_4388956224:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4388957776; }
		_case_begin_4388957776:;
		{
			jule::Ref<_2053703bd_FnDecl> _171021_f = this->self->_method_build_fn(_170139_tokens,false,false);
			if (jule::real(_171021_f)) {
				_171021_f->_field_global=true;
				if (_171021_f->_method_is_anon()) {
					this->self->_method_push_err(_171021_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
			}
			return jule::Any(_171021_f);
		}
		goto _match_end_4388954720;
		_case_end_4388957776:;
		if (!((34LLU) == _match_expr || (9LLU) == _match_expr || (36LLU) == _match_expr || (38LLU) == _match_expr)) { goto _case_end_4388957888; }
		_case_begin_4388957888:;
		{
			return jule::Any(this->self->_method_build_var(_170139_tokens));
		}
		goto _match_end_4388954720;
		_case_end_4388957888:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4388955712; }
		_case_begin_4388955712:;
		{
			return jule::Any(this->self->_method_build_type_alias_decl(_170139_tokens));
		}
		goto _match_end_4388954720;
		_case_end_4388955712:;
		if (!((24LLU) == _match_expr)) { goto _case_end_4388955824; }
		_case_begin_4388955824:;
		{
			return jule::Any(this->self->_method_build_enum_decl(_170139_tokens));
		}
		goto _match_end_4388954720;
		_case_end_4388955824:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4388955936; }
		_case_begin_4388955936:;
		{
			return jule::Any(this->self->_method_build_struct_decl(_170139_tokens));
		}
		goto _match_end_4388954720;
		_case_end_4388955936:;
		if (!((29LLU) == _match_expr)) { goto _case_end_4388958640; }
		_case_begin_4388958640:;
		{
			return jule::Any(this->self->_method_build_trait_decl(_170139_tokens));
		}
		goto _match_end_4388954720;
		_case_end_4388958640:;
		if (!((30LLU) == _match_expr)) { goto _case_end_4388958752; }
		_case_begin_4388958752:;
		{
			return jule::Any(this->self->_method_build_impl(_170139_tokens));
		}
		goto _match_end_4388954720;
		_case_end_4388958752:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4388958864; }
		_case_begin_4388958864:;
		{
			return this->self->_method_build_cpp_link(_170139_tokens);
		}
		goto _match_end_4388954720;
		_case_end_4388958864:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4388958976; }
		_case_begin_4388958976:;
		{
			jule::Ref<_2053703bd_Comment> _174721_c = _206540c0d_build_comment(_170217_token);
			this->self->_method_process_comment(_174721_c);
			return jule::Any(_174721_c);
		}
		goto _match_end_4388954720;
		_case_end_4388958976:;
		_case_begin_4388955408:;
		{
			this->self->_method_push_err(_170217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4388954720;
		_case_end_4388955408:;
		_match_end_4388954720:;
	}
}



inline void _206540c0d_Parser::_method_check_comment_group(_2053703bd_Node _175738_node) {
	if ((!(jule::real((*this)._field_comment_group)))) {
		return;
	}
	{
		auto _match_expr{ _175738_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_Comment>>() || _match_expr.type_is<jule::Ref<_2053703bd_Directive>>())) { goto _case_end_4388980800; }
		goto _match_end_4388979360;
		_case_end_4388980800:;
		_case_begin_4388979824:;
		{
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4388979360;
		_case_end_4388979824:;
		_match_end_4388979360:;
	}
}



inline void _206540c0d_Parser::_method_check_directive(_2053703bd_Node _177134_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto _match_expr{ _177134_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_Directive>>() || _match_expr.type_is<jule::Ref<_2053703bd_Comment>>())) { goto _case_end_4388987408; }
		goto _match_end_4388985024;
		_case_end_4388987408:;
		_case_begin_4388984480:;
		{
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4388985024;
		_case_end_4388984480:;
		_match_end_4388985024:;
	}
}



inline void _206540c0d_Parser::_method_apply_meta(_2053703bd_Node _178633_node,jule::Bool _178649_is_pub) {
	{
		auto _match_expr{ _178633_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_VarDecl>>())) { goto _case_end_4388991056; }
		_case_begin_4388991056:;
		{
			jule::Ref<_2053703bd_VarDecl> _178921_v = _178633_node._field_data.operator jule::Ref<_2053703bd_VarDecl>();
			if ((!(jule::real(_178921_v)))) {
				return;
			}
			_178921_v->_field_public=_178649_is_pub;
			_178649_is_pub=false;
			_178921_v->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_178921_v->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4388990320;
		_case_end_4388991056:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_FnDecl>>())) { goto _case_end_4388991168; }
		_case_begin_4388991168:;
		{
			jule::Ref<_2053703bd_FnDecl> _180321_f = _178633_node._field_data.operator jule::Ref<_2053703bd_FnDecl>();
			if ((!(jule::real(_180321_f)))) {
				return;
			}
			_180321_f->_field_public=_178649_is_pub;
			_178649_is_pub=false;
			_180321_f->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_180321_f->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4388990320;
		_case_end_4388991168:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_TypeAliasDecl>>())) { goto _case_end_4388991296; }
		_case_begin_4388991296:;
		{
			jule::Ref<_2053703bd_TypeAliasDecl> _181621_tad = _178633_node._field_data.operator jule::Ref<_2053703bd_TypeAliasDecl>();
			if ((!(jule::real(_181621_tad)))) {
				return;
			}
			_181621_tad->_field_public=_178649_is_pub;
			_178649_is_pub=false;
			_181621_tad->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4388990320;
		_case_end_4388991296:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_EnumDecl>>())) { goto _case_end_4388991424; }
		_case_begin_4388991424:;
		{
			jule::Ref<_2053703bd_EnumDecl> _182621_ed = _178633_node._field_data.operator jule::Ref<_2053703bd_EnumDecl>();
			if ((!(jule::real(_182621_ed)))) {
				return;
			}
			_182621_ed->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_182621_ed->_field_public=_178649_is_pub;
			_178649_is_pub=false;
		}
		goto _match_end_4388990320;
		_case_end_4388991424:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_StructDecl>>())) { goto _case_end_4388991552; }
		_case_begin_4388991552:;
		{
			jule::Ref<_2053703bd_StructDecl> _183621_sd = _178633_node._field_data.operator jule::Ref<_2053703bd_StructDecl>();
			if ((!(jule::real(_183621_sd)))) {
				return;
			}
			_183621_sd->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_183621_sd->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_183621_sd->_field_public=_178649_is_pub;
			_178649_is_pub=false;
		}
		goto _match_end_4388990320;
		_case_end_4388991552:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_TraitDecl>>())) { goto _case_end_4388991680; }
		_case_begin_4388991680:;
		{
			jule::Ref<_2053703bd_TraitDecl> _184821_td = _178633_node._field_data.operator jule::Ref<_2053703bd_TraitDecl>();
			if ((!(jule::real(_184821_td)))) {
				return;
			}
			_184821_td->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_184821_td->_field_public=_178649_is_pub;
			_178649_is_pub=false;
		}
		goto _match_end_4388990320;
		_case_end_4388991680:;
		_match_end_4388990320:;
	}
	if (_178649_is_pub) {
		(*this)._method_push_err(_178633_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>({}));
	}
}



inline void _206540c0d_Parser::_method_check_use_decl(_2053703bd_Node _186233_node) {
	{
		auto _match_expr{ _186233_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_UseDecl>>())) { goto _case_end_4389028032; }
		goto _match_end_4389026352;
		_case_end_4389028032:;
		_case_begin_4389027008:;
		{
			return;
		}
		goto _match_end_4389026352;
		_case_end_4389027008:;
		_match_end_4389026352:;
	}
	if ((*this)._field_ast->_field_decls.len() > 0LL) {
		(*this)._method_push_err(_186233_node._field_token,jule::Str("use declarations must declared before other declarations", 56),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>({}));
	}
}



inline std::tuple<jule::Bool,jule::Any> _206540c0d_Parser::_method_build_general_scope_node_data(jule::Slice<_20542560a_Token> _187753_st) {
	jule::Bool _187768_is_pub = jule::Bool();
	jule::Any _187782_data = jule::Any();
	if (_187753_st[0LL]._field_id == 21LLU) {
		_187768_is_pub=true;
		_187753_st=_187753_st.slice(1LL);
		if (_187753_st.len() == 0LL) {
			this->self->_method_push_err(_187753_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return std::make_tuple(_187768_is_pub,_187782_data);
		}
	}
	_187782_data=this->self->_method_build_node_data(_187753_st);
	_187768_is_pub = _187768_is_pub;
	_187782_data = _187782_data;
	return std::make_tuple(_187768_is_pub,_187782_data);
}



inline _2053703bd_Node _206540c0d_Parser::_method_parse_node(jule::Slice<_20542560a_Token> _189234_st) {
	_2053703bd_Node _189317_node = _2053703bd_Node(_189234_st[0LL],jule::Any());
	jule::Bool _189714_is_pub;
	jule::Any _189726_data;
	std::tie(_189714_is_pub,_189726_data) = this->self->_method_build_general_scope_node_data(_189234_st);
	if (_189726_data == nullptr) {
		return _189317_node;
	}
	_189317_node._field_data=_189726_data;
	this->self->_method_apply_meta(_189317_node,_189714_is_pub);
	this->self->_method_check_comment_group(_189317_node);
	this->self->_method_check_directive(_189317_node);
	this->self->_method_check_use_decl(_189317_node);
	return _189317_node;
}



inline void _206540c0d_Parser::_method_append_node(jule::Slice<_20542560a_Token> _191135_st) {
	if (_191135_st.len() == 0LL) {
		return;
	}
	_2053703bd_Node _191617_node = this->self->_method_parse_node(_191135_st);
	if ((_191617_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (!((_191617_node._method_is_use_decl()))) { goto _case_end_4389062560; }
		_case_begin_4389062560:;
		{
			this->self->_field_ast->_field_use_decls=jule::append(this->self->_field_ast->_field_use_decls,jule::Slice<jule::Ref<_2053703bd_UseDecl>>({_191617_node._field_data.operator jule::Ref<_2053703bd_UseDecl>()}));
		}
		goto _match_end_4389061216;
		_case_end_4389062560:;
		if (!((_191617_node._method_is_decl()))) { goto _case_end_4389064272; }
		_case_begin_4389064272:;
		{
			this->self->_field_ast->_field_decls=jule::append(this->self->_field_ast->_field_decls,jule::Slice<_2053703bd_Node>({_191617_node}));
		}
		goto _match_end_4389061216;
		_case_end_4389064272:;
		if (!((_191617_node._method_is_comment()))) { goto _case_end_4389062048; }
		_case_begin_4389062048:;
		{
			jule::Ref<_2053703bd_Comment> _193121_c = _191617_node._field_data.operator jule::Ref<_2053703bd_Comment>();
			this->self->_field_ast->_field_comments=jule::append(this->self->_field_ast->_field_comments,jule::Slice<jule::Ref<_2053703bd_Comment>>({_193121_c}));
		}
		goto _match_end_4389061216;
		_case_end_4389062048:;
		if (!((_191617_node._method_is_impl()))) { goto _case_end_4389062160; }
		_case_begin_4389062160:;
		{
			this->self->_field_ast->_field_impls=jule::append(this->self->_field_ast->_field_impls,jule::Slice<jule::Ref<_2053703bd_Impl>>({_191617_node._field_data.operator jule::Ref<_2053703bd_Impl>()}));
		}
		goto _match_end_4389061216;
		_case_end_4389062160:;
		_case_begin_4389061744:;
		{
			this->self->_method_push_err(_191617_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4389061216;
		_case_end_4389061744:;
		_match_end_4389061216:;
	}
}



inline void _206540c0d_Parser::_method_remove_range(jule::Int _194231_i,jule::Str _194239_kind,jule::Slice<_20542560a_Token>& _194251_tokens,jule::Slice<jule::Int>& _194273_ranges) {
	jule::Str _194313_close = _206540c0d_get_close_kind_of_brace(_194239_kind);
	_iter_begin_4389055552:;
	if (!(_194231_i >= 0LL)) { goto _iter_end_4389055552; }
	{
		_20542560a_Token _194517_tok = _194251_tokens[static_cast<jule::Int>(_194273_ranges[static_cast<jule::Int>(_194231_i)])];
		if (_194517_tok._field_kind != _194313_close) {
			goto _iter_next_4389055552;
		}
		_194273_ranges=jule::append(_194273_ranges.slice(0LL,static_cast<jule::Int>(_194231_i)),_194273_ranges.slice(static_cast<jule::Int>(_194231_i + 1LL)));
		goto _iter_end_4389055552;
	}
	_iter_next_4389055552:;
	(_194231_i)--;
	goto _iter_begin_4389055552;
	_iter_end_4389055552:;
}



inline void _206540c0d_Parser::_method_push_wrong_order_close_err(_20542560a_Token _195545_t,jule::Slice<_20542560a_Token>& _195556_tokens,jule::Slice<jule::Int>& _195574_ranges) {
	{
		auto _match_expr{ _195556_tokens[static_cast<jule::Int>(_195574_ranges[static_cast<jule::Int>(_195574_ranges.len() - 1LL)])]._field_kind };
		if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4389096496; }
		_case_begin_4389096496:;
		{
			(*this)._method_push_err(_195545_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4389093680;
		_case_end_4389096496:;
		if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4389096624; }
		_case_begin_4389096624:;
		{
			(*this)._method_push_err(_195545_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4389093680;
		_case_end_4389096624:;
		if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4389096752; }
		_case_begin_4389096752:;
		{
			(*this)._method_push_err(_195545_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4389093680;
		_case_end_4389096752:;
		_match_end_4389093680:;
	}
}



inline void _206540c0d_Parser::_method_push_range_close(_20542560a_Token _196335_t,jule::Str _196345_left,jule::Slice<_20542560a_Token>& _196357_tokens,jule::Slice<jule::Int>& _196379_ranges) {
	jule::I64 _196413_n = _196379_ranges.len();
	if (_196413_n == 0LL) {
		{
			auto _match_expr{ _196335_t._field_kind };
			if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4389109296; }
			_case_begin_4389109296:;
			{
				(*this)._method_push_err(_196335_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4389108544;
			_case_end_4389109296:;
			if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4389109408; }
			_case_begin_4389109408:;
			{
				(*this)._method_push_err(_196335_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4389108544;
			_case_end_4389109408:;
			if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4389109536; }
			_case_begin_4389109536:;
			{
				(*this)._method_push_err(_196335_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4389108544;
			_case_end_4389109536:;
			_match_end_4389108544:;
		}
		return;
	} else if (_196357_tokens[static_cast<jule::Int>(_196379_ranges[static_cast<jule::Int>(_196413_n - 1LL)])]._field_kind != _196345_left) {
		(*this)._method_push_wrong_order_close_err(_196335_t,_196357_tokens,_196379_ranges);
	}
	(*this)._method_remove_range(static_cast<jule::I64>(_196413_n - 1LL),_196335_t._field_kind,_196357_tokens,_196379_ranges);
}



inline void _206540c0d_Parser::_method_check_ranges(jule::Slice<_20542560a_Token>& _197832_tokens) {
	jule::Slice<jule::Int> _197917_ranges = nullptr;
	{
		auto _range_expr = _197832_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206540c0d_i = 0;
			_20542560a_Token _206540c0d_token = *_range_begin;
			_iter_begin_4389122944:;
			{
				if (_206540c0d_token._field_id != 3LLU) {
					goto _iter_next_4389122944;
				}
				{
					auto _match_expr{ _206540c0d_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4389126208; }
					_case_begin_4389126208:;
					{
						_197917_ranges=jule::append(_197917_ranges,jule::Slice<jule::Int>({_206540c0d_i}));
					}
					goto _match_end_4389126432;
					_case_end_4389126208:;
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4389126704; }
					_case_begin_4389126704:;
					{
						(*this)._method_push_range_close(_206540c0d_token,jule::Str("(", 1),_197832_tokens,_197917_ranges);
					}
					goto _match_end_4389126432;
					_case_end_4389126704:;
					if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4389126816; }
					_case_begin_4389126816:;
					{
						(*this)._method_push_range_close(_206540c0d_token,jule::Str("{", 1),_197832_tokens,_197917_ranges);
					}
					goto _match_end_4389126432;
					_case_end_4389126816:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4389126928; }
					_case_begin_4389126928:;
					{
						(*this)._method_push_range_close(_206540c0d_token,jule::Str("[", 1),_197832_tokens,_197917_ranges);
					}
					goto _match_end_4389126432;
					_case_end_4389126928:;
					_match_end_4389126432:;
				}
			}
			_iter_next_4389122944:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206540c0d_i; _206540c0d_token = *_range_begin; goto _iter_begin_4389122944; }
			_iter_end_4389122944:;
		}
	}
	{
		auto _range_expr = _197917_ranges;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206540c0d_i = *_range_begin;
			_iter_begin_4389129280:;
			{
				_20542560a_Token _200417_token = _197832_tokens[static_cast<jule::Int>(_206540c0d_i)];
				{
					auto _match_expr{ _200417_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4389136352; }
					_case_begin_4389136352:;
					{
						(*this)._method_push_err(_200417_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4389135600;
					_case_end_4389136352:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4389136464; }
					_case_begin_4389136464:;
					{
						(*this)._method_push_err(_200417_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4389135600;
					_case_end_4389136464:;
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4389136592; }
					_case_begin_4389136592:;
					{
						(*this)._method_push_err(_200417_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4389135600;
					_case_end_4389136592:;
					_match_end_4389135600:;
				}
			}
			_iter_next_4389129280:;
			++_range_begin;
			if (_range_begin != _range_end) { _206540c0d_i = *_range_begin; goto _iter_begin_4389129280; }
			_iter_end_4389129280:;
		}
	}
}



inline void _206540c0d_Parser::_method_parse(jule::Ref<_2053bdb25_File> _201329_f) {
	this->self->_field_ast=jule::new_struct<_20521102d_Ast>(new( std::nothrow ) _20521102d_Ast(_201329_f,jule::Slice<jule::Ref<_2053703bd_Directive>>(),jule::Slice<jule::Ref<_2053703bd_UseDecl>>(),jule::Slice<jule::Ref<_2053703bd_Impl>>(),jule::Slice<jule::Ref<_2053703bd_Comment>>(),jule::Slice<_2053703bd_Node>()));
	jule::Slice<_20542560a_Token> _201817_tokens = _201329_f->_method_tokens();
	this->self->_method_check_ranges(_201817_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_2053cae51_Stmt>> _202417_stms = _2053cae51_split_stms(_201817_tokens);
	jule::Int _202717_i = 0LL;
	_iter_begin_4389142480:;
	if (!(_202717_i < _202417_stms.len())) { goto _iter_end_4389142480; }
	{
		jule::Ref<_2053cae51_Stmt> _202921_st = _202417_stms[static_cast<jule::Int>(_202717_i)];
		if (_202921_st->_field_tokens.len() == 0LL) {
			return;
		}
		jule::Any _203425_data;
		std::tie(std::ignore,_203425_data) = this->self->_method_build_general_scope_node_data(_202921_st->_field_tokens);
		if (_203425_data == nullptr) {
			goto _iter_end_4389142480;
		}
		if (this->self->_method_stopped()) {
			return;
		}
		_2053703bd_Node _204321_node = _2053703bd_Node(_20542560a_Token(),_203425_data);
		if (_204321_node._method_is_comment()) {
			jule::Ref<_2053703bd_Directive> _204525_d = this->self->_method_get_directive(_204321_node._field_data.operator jule::Ref<_2053703bd_Comment>());
			if (jule::real(_204525_d) && _2037d887c_is_top_directive(_204525_d->_field_tag)) {
				this->self->_field_ast->_field_top_directives=jule::append(this->self->_field_ast->_field_top_directives,jule::Slice<jule::Ref<_2053703bd_Directive>>({_204525_d}));
			}
		} else {
			goto _iter_end_4389142480;
		}
	}
	_iter_next_4389142480:;
	(_202717_i)++;
	goto _iter_begin_4389142480;
	_iter_end_4389142480:;
	this->self->_field_errors=nullptr;
	_iter_begin_4389157312:;
	if (!(_202717_i < _202417_stms.len())) { goto _iter_end_4389157312; }
	{
		jule::Ref<_2053cae51_Stmt> _205821_st = _202417_stms[static_cast<jule::Int>(_202717_i)];
		this->self->_method_append_node(_205821_st->_field_tokens);
		if (this->self->_method_stopped()) {
			goto _iter_end_4389157312;
		}
	}
	_iter_next_4389157312:;
	(_202717_i)++;
	goto _iter_begin_4389157312;
	_iter_end_4389157312:;
}







std::ostream &operator<<(std::ostream &_Stream, const _206540c0d_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _206581226_TypeBuilder::_method_push_err(_20542560a_Token _7827_token,jule::Str _7841_fmt) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7827_token,_7841_fmt,jule::Slice<jule::Any>({}));
	}
}



inline void _206581226_TypeBuilder::_method_push_suggestion(jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_suggestion(_8534_fmt,_8547_args);
	}
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_TypeBuilder::_method_build_prim(void) {
	jule::Ref<_2053703bd_TypeDecl> _9217_t = _206581226_build_prim_type((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]);
	((*((*this)._field_i)))++;
	return _9217_t;
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_TypeBuilder::_method_build_namespace(void) {
	jule::Ref<_2053703bd_TypeDecl> _9817_t = jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Any()));
	jule::Ref<_2053703bd_NamespaceTypeDecl> _10217_nst = jule::new_struct<_2053703bd_NamespaceTypeDecl>(new( std::nothrow ) _2053703bd_NamespaceTypeDecl());
	jule::Int _10317_n = 0LL;
	_iter_begin_4389188816:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_4389188816; }
	{
		_20542560a_Token _10521_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if (jule::mod(_10317_n,2LL) == 0LL) {
			if (_10521_token._field_id != 2LLU) {
				(*this)._method_push_err(_10521_token,jule::Str("invalid syntax", 14));
				(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			}
			_10217_nst->_field_idents=jule::append(_10217_nst->_field_idents,jule::Slice<_20542560a_Token>({_10521_token}));
		} else if (_10521_token._field_id != 23LLU) {
			goto _iter_end_4389188816;
		}
		(_10317_n)++;
	}
	_iter_next_4389188816:;
	((*((*this)._field_i)))++;
	goto _iter_begin_4389188816;
	_iter_end_4389188816:;
	_10217_nst->_field_idents=_10217_nst->_field_idents.slice(0LL,static_cast<jule::Int>(_10217_nst->_field_idents.len() - 1LL));
	((*((*this)._field_i)))--;
	_10217_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ref<_2053703bd_IdentTypeDecl>();
	_9817_t->_field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ref<_2053703bd_TypeDecl>> _206581226_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_20542560a_Token _13113_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_13113_token._field_id != 3LLU) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_20542560a_Token>> _13617_parts = (*this)._method_ident_generics();
	if (_13617_parts.len() == 0LL) {
		(*this)._method_push_err(_13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ref<_2053703bd_TypeDecl>> _14217_types = jule::Slice<jule::Ref<_2053703bd_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_13617_parts.len())));
	{
		auto _range_expr = _13617_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206581226_i = 0;
			jule::Slice<_20542560a_Token> _206581226_part = *_range_begin;
			_iter_begin_4389217664:;
			{
				jule::Int _14421_j = 0LL;
				jule::Ref<_2053703bd_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = (*this)._field_p->_method_build_type(_206581226_part,(&(_14421_j)),true);
				if (_14421_j < _206581226_part.len()) {
					(*this)._method_push_err(_206581226_part[static_cast<jule::Int>(_14421_j)],jule::Str("invalid syntax", 14));
				}
				_14217_types[static_cast<jule::Int>(_206581226_i)]=_14522_t;
			}
			_iter_next_4389217664:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206581226_i; _206581226_part = *_range_begin; goto _iter_begin_4389217664; }
			_iter_end_4389217664:;
		}
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_20542560a_Token>> _206581226_TypeBuilder::_method_ident_generics(void) {
	jule::Int _15513_first = (*((*this)._field_i));
	jule::Int _15617_range_n = 0LL;
	_iter_begin_4389228912:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_4389228912; }
	{
		_20542560a_Token _15817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if (_15817_token._field_id == 3LLU) {
			{
				auto _match_expr{ _15817_token._field_kind };
				if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4389233680; }
				_case_begin_4389233680:;
				{
					(_15617_range_n)++;
				}
				goto _match_end_4389232848;
				_case_end_4389233680:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4389233792; }
				_case_begin_4389233792:;
				{
					(_15617_range_n)--;
				}
				goto _match_end_4389232848;
				_case_end_4389233792:;
				_match_end_4389232848:;
			}
		}
		if (_15617_range_n == 0LL) {
			((*((*this)._field_i)))++;
			goto _iter_end_4389228912;
		}
	}
	_iter_next_4389228912:;
	((*((*this)._field_i)))++;
	goto _iter_begin_4389228912;
	_iter_end_4389228912:;
	jule::Slice<_20542560a_Token> _17017_tokens = (*this)._field_tokens.slice(static_cast<jule::Int>(_15513_first + 1LL),static_cast<jule::Int>((*((*this)._field_i)) - 1LL));
	jule::Slice<jule::Slice<_20542560a_Token>> _17118_parts;
	jule::Slice<_20377124e_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _206540c0d_parts(_17017_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_20542560a_Token _18217_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_2053703bd_IdentTypeDecl> _18317_it = jule::new_struct<_2053703bd_IdentTypeDecl>(new( std::nothrow ) _2053703bd_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ref<_2053703bd_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_18317_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_18217_token,jule::Any(_18317_it)));
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Str("invalid syntax", 14));
		return jule::new_ref<_2053703bd_TypeDecl>();
	}
	(*((*this)._field_i))+=2LL;
	jule::Ref<_2053703bd_TypeDecl> _20217_t = (*this)._method_build_ident();
	_20217_t->_field_kind.operator jule::Ref<_2053703bd_IdentTypeDecl>()->_field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_TypeBuilder::_method_build_fn(void) {
	_20542560a_Token _20817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_2053703bd_FnDecl> _20917_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false);
	if ((!(jule::real(_20917_f)))) {
		return jule::new_ref<_2053703bd_TypeDecl>();
	}
	if ((!(_20917_f->_method_is_anon()))) {
		(*this)._method_push_err(_20917_f->_field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_20817_token,jule::Any(_20917_f)));
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_TypeBuilder::_method_build_ptr(void) {
	_20542560a_Token _22317_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_22317_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_2053703bd_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_22317_token,jule::Any(jule::new_struct<_2053703bd_PtrTypeDecl>(new( std::nothrow ) _2053703bd_PtrTypeDecl(jule::new_ref<_2053703bd_TypeDecl>())))));
	}
	jule::Ref<_2053703bd_TypeDecl> _24017_elem = (*this)._method_step();
	if ((!(jule::real(_24017_elem)))) {
		return jule::new_ref<_2053703bd_TypeDecl>();
	}
	return jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_22317_token,jule::Any(jule::new_struct<_2053703bd_PtrTypeDecl>(new( std::nothrow ) _2053703bd_PtrTypeDecl(_24017_elem)))));
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_TypeBuilder::_method_build_ref(void) {
	_20542560a_Token _25417_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_25417_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_2053703bd_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	jule::Ref<_2053703bd_TypeDecl> _26117_elem = (*this)._method_step();
	if ((!(jule::real(_26117_elem)))) {
		return jule::new_ref<_2053703bd_TypeDecl>();
	}
	return jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_25417_token,jule::Any(jule::new_struct<_2053703bd_RefTypeDecl>(new( std::nothrow ) _2053703bd_RefTypeDecl(_26117_elem)))));
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_TypeBuilder::_method_build_op(void) {
	_20542560a_Token _27517_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto _match_expr{ _27517_token._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4389308032; }
		_case_begin_4389308032:;
		{
			return (*this)._method_build_ptr();
		}
		goto _match_end_4389304480;
		_case_end_4389308032:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4389308608; }
		_case_begin_4389308608:;
		{
			return (*this)._method_build_ref();
		}
		goto _match_end_4389304480;
		_case_end_4389308608:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4389308272; }
		_case_begin_4389308272:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("references cannot reference to another reference", 48));
			return (*this)._method_build_ref();
		}
		goto _match_end_4389304480;
		_case_end_4389308272:;
		_case_begin_4389305168:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_2053703bd_TypeDecl>();
		}
		goto _match_end_4389304480;
		_case_end_4389305168:;
		_match_end_4389304480:;
	}
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_TypeBuilder::_method_build_slc(void) {
	_20542560a_Token _29417_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	((*((*this)._field_i)))++;
	jule::Ref<_2053703bd_TypeDecl> _29617_elem = (*this)._method_step();
	if ((!(jule::real(_29617_elem)))) {
		return jule::new_ref<_2053703bd_TypeDecl>();
	}
	return jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_29417_token,jule::Any(jule::new_struct<_2053703bd_SlcTypeDecl>(new( std::nothrow ) _2053703bd_SlcTypeDecl(_29617_elem)))));
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) - 1LL)],jule::Str("data-type missing", 17));
		return jule::new_ref<_2053703bd_TypeDecl>();
	}
	jule::Int _31713_expr_delta = (*((*this)._field_i));
	jule::Ref<_2053703bd_TypeDecl> _31917_elem = (*this)._method_step();
	if ((!(jule::real(_31917_elem)))) {
		return jule::new_ref<_2053703bd_TypeDecl>();
	}
	jule::Ref<_2053703bd_ArrTypeDecl> _32417_arrt = jule::new_struct<_2053703bd_ArrTypeDecl>(new( std::nothrow ) _2053703bd_ArrTypeDecl(_31917_elem,jule::Ref<_2053703bd_Expr>()));
	jule::Slice<_20542560a_Token> _32821_expr_tokens;
	std::tie(std::ignore,_32821_expr_tokens) = _206540c0d_range_last((*this)._field_tokens.slice(0LL,static_cast<jule::Int>(_31713_expr_delta)));
	_32821_expr_tokens=_32821_expr_tokens.slice(1LL,static_cast<jule::Int>(_32821_expr_tokens.len() - 1LL));
	_20542560a_Token _33017_token = _32821_expr_tokens[0LL];
	if (((_32821_expr_tokens.len() == 1LL) && (_33017_token._field_id == 7LLU)) && (_33017_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32417_arrt->_field_size=(*this)._field_p->_method_build_expr(_32821_expr_tokens);
	}
	return jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_33017_token,jule::Any(_32417_arrt)));
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_TypeBuilder::_method_build_map(jule::Int _34328_colon,jule::Slice<_20542560a_Token> _34344_tokens) {
	_20542560a_Token _34417_colon_token = (*this)._field_tokens[static_cast<jule::Int>(_34328_colon)];
	if ((_34328_colon == 0LL) || ((_34328_colon + 1LL) >= _34344_tokens.len())) {
		(*this)._method_push_err(_34417_colon_token,jule::Str("data-type missing", 17));
		return jule::new_ref<_2053703bd_TypeDecl>();
	}
	jule::Slice<_20542560a_Token> _34917_key_tokens = _34344_tokens.slice(0LL,static_cast<jule::Int>(_34328_colon));
	jule::Slice<_20542560a_Token> _35017_val_tokens = _34344_tokens.slice(static_cast<jule::Int>(_34328_colon + 1LL));
	jule::Ref<_2053703bd_MapTypeDecl> _35117_mapt = jule::new_struct<_2053703bd_MapTypeDecl>(new( std::nothrow ) _2053703bd_MapTypeDecl());
	jule::Int _35317_j = 0LL;
	jule::Ref<_2053703bd_TypeDecl> _35418_keyt;
	jule::Bool _35428_ok;
	std::tie(_35418_keyt,_35428_ok) = (*this)._field_p->_method_build_type(_34917_key_tokens,(&(_35317_j)),(*this)._field_err);
	if ((!(_35428_ok))) {
		return jule::new_ref<_2053703bd_TypeDecl>();
	} else if (_35317_j < _34917_key_tokens.len()) {
		(*this)._method_push_err(_34917_key_tokens[static_cast<jule::Int>(_35317_j)],jule::Str("invalid syntax", 14));
	}
	_35117_mapt->_field_key=_35418_keyt;
	_35317_j=0LL;
	jule::Ref<_2053703bd_TypeDecl> _36318_valt;
	std::tie(_36318_valt,_35428_ok) = (*this)._field_p->_method_build_type(_35017_val_tokens,(&(_35317_j)),(*this)._field_err);
	if ((!(_35428_ok))) {
		return jule::new_ref<_2053703bd_TypeDecl>();
	} else if (_35317_j < _35017_val_tokens.len()) {
		(*this)._method_push_err(_35017_val_tokens[static_cast<jule::Int>(_35317_j)],jule::Str("invalid syntax", 14));
	}
	_35117_mapt->_field_val=_36318_valt;
	return jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_34417_colon_token,jule::Any(_35117_mapt)));
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_TypeBuilder::_method_build_enumerable(void) {
	_20542560a_Token _37817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_37817_token._field_id != 3LLU)) || (_37817_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_37817_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_2053703bd_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	_37817_token=(*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_37817_token._field_id == 3LLU) && (_37817_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_20542560a_Token> _39218_map_tokens;
	jule::Int _39230_colon;
	std::tie(_39218_map_tokens,_39230_colon) = _206581226_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_39230_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_39230_colon,_39218_map_tokens);
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_TypeBuilder::_method_step(void) {
	_20542560a_Token _40113_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto _match_expr{ _40113_token._field_id };
		if (!((1LLU) == _match_expr)) { goto _case_end_4389404464; }
		_case_begin_4389404464:;
		{
			return (*this)._method_build_prim();
		}
		goto _match_end_4389400224;
		_case_end_4389404464:;
		if (!((2LLU) == _match_expr)) { goto _case_end_4389401200; }
		_case_begin_4389401200:;
		{
			return (*this)._method_build_ident();
		}
		goto _match_end_4389400224;
		_case_end_4389401200:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4389401312; }
		_case_begin_4389401312:;
		{
			return (*this)._method_build_cpp_link();
		}
		goto _match_end_4389400224;
		_case_end_4389401312:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4389401424; }
		_case_begin_4389401424:;
		{
			return (*this)._method_build_fn();
		}
		goto _match_end_4389400224;
		_case_end_4389401424:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4389403616; }
		_case_begin_4389403616:;
		{
			return (*this)._method_build_op();
		}
		goto _match_end_4389400224;
		_case_end_4389403616:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4389403728; }
		_case_begin_4389403728:;
		{
			return (*this)._method_build_enumerable();
		}
		goto _match_end_4389400224;
		_case_end_4389403728:;
		_case_begin_4389400896:;
		{
			((*((*this)._field_i)))++;
			(*this)._method_push_err(_40113_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_2053703bd_TypeDecl>();
		}
		goto _match_end_4389400224;
		_case_end_4389400896:;
		_match_end_4389400224:;
	}
}



inline std::tuple<jule::Ref<_2053703bd_TypeDecl>,jule::Bool> _206581226_TypeBuilder::_method_build(void) {
	jule::Bool _43044_ok = jule::Bool();
	jule::Ref<_2053703bd_TypeDecl> _43117_root = (*this)._method_step();
	if ((!(jule::real(_43117_root)))) {
		_43044_ok = false;
		return std::make_tuple(_206581226_build_void_type(),_43044_ok);
	}
	_43044_ok = true;
	return std::make_tuple(_43117_root,_43044_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _206581226_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1a89ca987_Const> _1a89ca987_Const::_static_method_new_i64(jule::I64 _1327_x) {
	return jule::new_struct<_1a89ca987_Const>(new( std::nothrow ) _1a89ca987_Const(jule::Any(_1327_x)));
}



inline jule::Ref<_1a89ca987_Const> _1a89ca987_Const::_static_method_new_u64(jule::U64 _1527_x) {
	return jule::new_struct<_1a89ca987_Const>(new( std::nothrow ) _1a89ca987_Const(jule::Any(_1527_x)));
}



inline jule::Ref<_1a89ca987_Const> _1a89ca987_Const::_static_method_new_bool(jule::Bool _1728_x) {
	return jule::new_struct<_1a89ca987_Const>(new( std::nothrow ) _1a89ca987_Const(jule::Any(_1728_x)));
}



inline jule::Ref<_1a89ca987_Const> _1a89ca987_Const::_static_method_new_str(jule::Str _1927_x) {
	return jule::new_struct<_1a89ca987_Const>(new( std::nothrow ) _1a89ca987_Const(jule::Any(_1927_x)));
}



inline jule::Ref<_1a89ca987_Const> _1a89ca987_Const::_static_method_new_f64(jule::F64 _2127_x) {
	return jule::new_struct<_1a89ca987_Const>(new( std::nothrow ) _1a89ca987_Const(jule::Any(_2127_x)));
}



inline jule::Ref<_1a89ca987_Const> _1a89ca987_Const::_static_method_new_nil(void) {
	return jule::new_struct<_1a89ca987_Const>(new( std::nothrow ) _1a89ca987_Const(jule::Any(nullptr)));
}



inline jule::I64 _1a89ca987_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



inline jule::U64 _1a89ca987_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



inline jule::Bool _1a89ca987_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _1a89ca987_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str("", 0);
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _1a89ca987_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



inline jule::I64 _1a89ca987_Const::_method_as_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4389500848; }
		_case_begin_4389500848:;
		{
			return (*this)._field_data.operator jule::I64();
		}
		goto _match_end_4389498320;
		_case_end_4389500848:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4389500416; }
		_case_begin_4389500416:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4389498320;
		_case_end_4389500416:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4389500528; }
		_case_begin_4389500528:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4389498320;
		_case_end_4389500528:;
		_case_begin_4389498960:;
		{
			return 0LL;
		}
		goto _match_end_4389498320;
		_case_end_4389498960:;
		_match_end_4389498320:;
	}
}



inline jule::U64 _1a89ca987_Const::_method_as_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4389507216; }
		_case_begin_4389507216:;
		{
			return (*this)._field_data.operator jule::U64();
		}
		goto _match_end_4389504560;
		_case_end_4389507216:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4389506784; }
		_case_begin_4389506784:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4389504560;
		_case_end_4389506784:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4389506896; }
		_case_begin_4389506896:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4389504560;
		_case_end_4389506896:;
		_case_begin_4389501232:;
		{
			return 0LL;
		}
		goto _match_end_4389504560;
		_case_end_4389501232:;
		_match_end_4389504560:;
	}
}



inline jule::F64 _1a89ca987_Const::_method_as_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4389514400; }
		_case_begin_4389514400:;
		{
			return (*this)._field_data.operator jule::F64();
		}
		goto _match_end_4389511872;
		_case_end_4389514400:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4389513968; }
		_case_begin_4389513968:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4389511872;
		_case_end_4389513968:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4389514080; }
		_case_begin_4389514080:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4389511872;
		_case_end_4389514080:;
		_case_begin_4389512528:;
		{
			return 0LL;
		}
		goto _match_end_4389511872;
		_case_end_4389512528:;
		_match_end_4389511872:;
	}
}



inline void _1a89ca987_Const::_method_set_i64(jule::I64 _14030_x) {
	(*this)._field_data=jule::Any(_14030_x);
}



inline void _1a89ca987_Const::_method_set_u64(jule::U64 _14230_x) {
	(*this)._field_data=jule::Any(_14230_x);
}



inline void _1a89ca987_Const::_method_set_bool(jule::Bool _14431_x) {
	(*this)._field_data=jule::Any(_14431_x);
}



inline void _1a89ca987_Const::_method_set_str(jule::Str _14630_x) {
	(*this)._field_data=jule::Any(_14630_x);
}



inline void _1a89ca987_Const::_method_set_f64(jule::F64 _14830_x) {
	(*this)._field_data=jule::Any(_14830_x);
}



inline void _1a89ca987_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline void _1a89ca987_Const::_method_set_by_type(jule::F64 _15230_v,_1a89ca987_Const _15238_x) {
	{
		if (!((_15238_x._method_is_f64()))) { goto _case_end_4389537744; }
		_case_begin_4389537744:;
		{
			(*this)._method_set_f64(_15230_v);
		}
		goto _match_end_4389537472;
		_case_end_4389537744:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4389537872; }
		_case_begin_4389537872:;
		{
			(*this)._method_set_f64(_15230_v);
		}
		goto _match_end_4389537472;
		_case_end_4389537872:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4389538000; }
		_case_begin_4389538000:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>(_15230_v));
		}
		goto _match_end_4389537472;
		_case_end_4389538000:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4389538128; }
		_case_begin_4389538128:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>(_15230_v));
		}
		goto _match_end_4389537472;
		_case_end_4389538128:;
		_match_end_4389537472:;
	}
}



inline jule::Bool _1a89ca987_Const::_method_is_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4389546608; }
		_case_begin_4389546608:;
		{
			return true;
		}
		goto _match_end_4389536992;
		_case_end_4389546608:;
		_case_begin_4389546160:;
		{
			return false;
		}
		goto _match_end_4389536992;
		_case_end_4389546160:;
		_match_end_4389536992:;
	}
}



inline jule::Bool _1a89ca987_Const::_method_is_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4389549232; }
		_case_begin_4389549232:;
		{
			return true;
		}
		goto _match_end_4389548016;
		_case_end_4389549232:;
		_case_begin_4389548800:;
		{
			return false;
		}
		goto _match_end_4389548016;
		_case_end_4389548800:;
		_match_end_4389548016:;
	}
}



inline jule::Bool _1a89ca987_Const::_method_is_bool(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4389551840; }
		_case_begin_4389551840:;
		{
			return true;
		}
		goto _match_end_4389550624;
		_case_end_4389551840:;
		_case_begin_4389551408:;
		{
			return false;
		}
		goto _match_end_4389550624;
		_case_end_4389551408:;
		_match_end_4389550624:;
	}
}



inline jule::Bool _1a89ca987_Const::_method_is_str(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4389554448; }
		_case_begin_4389554448:;
		{
			return true;
		}
		goto _match_end_4389553232;
		_case_end_4389554448:;
		_case_begin_4389554016:;
		{
			return false;
		}
		goto _match_end_4389553232;
		_case_end_4389554016:;
		_match_end_4389553232:;
	}
}



inline jule::Bool _1a89ca987_Const::_method_is_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4389557056; }
		_case_begin_4389557056:;
		{
			return true;
		}
		goto _match_end_4389555840;
		_case_end_4389557056:;
		_case_begin_4389556624:;
		{
			return false;
		}
		goto _match_end_4389555840;
		_case_end_4389556624:;
		_match_end_4389555840:;
	}
}



inline jule::Bool _1a89ca987_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



inline jule::Bool _1a89ca987_Const::_method_are_same_types(_1a89ca987_Const _20933_x) {
	{
		if (!(((*this)._method_is_i64() == _20933_x._method_is_i64()))) { goto _case_end_4389563280; }
		_case_begin_4389563280:;
		{
			return true;
		}
		goto _match_end_4389562688;
		_case_end_4389563280:;
		if (!(((*this)._method_is_u64() == _20933_x._method_is_u64()))) { goto _case_end_4389563392; }
		_case_begin_4389563392:;
		{
			return true;
		}
		goto _match_end_4389562688;
		_case_end_4389563392:;
		if (!(((*this)._method_is_f64() == _20933_x._method_is_f64()))) { goto _case_end_4389564560; }
		_case_begin_4389564560:;
		{
			return true;
		}
		goto _match_end_4389562688;
		_case_end_4389564560:;
		if (!(((*this)._method_is_bool() == _20933_x._method_is_bool()))) { goto _case_end_4389564672; }
		_case_begin_4389564672:;
		{
			return true;
		}
		goto _match_end_4389562688;
		_case_end_4389564672:;
		if (!(((*this)._method_is_str() == _20933_x._method_is_str()))) { goto _case_end_4389564784; }
		_case_begin_4389564784:;
		{
			return true;
		}
		goto _match_end_4389562688;
		_case_end_4389564784:;
		if (!(((*this)._method_is_nil() == _20933_x._method_is_nil()))) { goto _case_end_4389564896; }
		_case_begin_4389564896:;
		{
			return true;
		}
		goto _match_end_4389562688;
		_case_end_4389564896:;
		_case_begin_4389562864:;
		{
			return false;
		}
		goto _match_end_4389562688;
		_case_end_4389562864:;
		_match_end_4389562688:;
	}
}



inline jule::Bool _1a89ca987_Const::_method_and(_1a89ca987_Const _22722_x) {
	{
		if (!(((*this)._method_is_bool() && _22722_x._method_is_bool()))) { goto _case_end_4389575376; }
		_case_begin_4389575376:;
		{
			return (*this)._method_read_bool() && _22722_x._method_read_bool();
		}
		goto _match_end_4389574896;
		_case_end_4389575376:;
		_case_begin_4389575072:;
		{
			return false;
		}
		goto _match_end_4389574896;
		_case_end_4389575072:;
		_match_end_4389574896:;
	}
}



inline jule::Bool _1a89ca987_Const::_method_or(_1a89ca987_Const _23921_x) {
	{
		if (!(((*this)._method_is_bool() && _23921_x._method_is_bool()))) { goto _case_end_4389581200; }
		_case_begin_4389581200:;
		{
			return (*this)._method_read_bool() || _23921_x._method_read_bool();
		}
		goto _match_end_4389580720;
		_case_end_4389581200:;
		_case_begin_4389580896:;
		{
			return false;
		}
		goto _match_end_4389580720;
		_case_end_4389580896:;
		_match_end_4389580720:;
	}
}



inline jule::Bool _1a89ca987_Const::_method_eqs(_1a89ca987_Const _25122_x) {
	{
		if (!(((*this)._method_is_nil()))) { goto _case_end_4389586976; }
		_case_begin_4389586976:;
		{
			return _25122_x._method_is_nil();
		}
		goto _match_end_4389586384;
		_case_end_4389586976:;
		if (!(((*this)._method_is_bool()))) { goto _case_end_4389587088; }
		_case_begin_4389587088:;
		{
			return _25122_x._method_is_bool() && ((*this)._method_read_bool() == _25122_x._method_read_bool());
		}
		goto _match_end_4389586384;
		_case_end_4389587088:;
		if (!(((*this)._method_is_str()))) { goto _case_end_4389588256; }
		_case_begin_4389588256:;
		{
			return _25122_x._method_is_str() && ((*this)._method_read_str() == _25122_x._method_read_str());
		}
		goto _match_end_4389586384;
		_case_end_4389588256:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4389588368; }
		_case_begin_4389588368:;
		{
			return (*this)._method_read_i64() == _25122_x._method_as_i64();
		}
		goto _match_end_4389586384;
		_case_end_4389588368:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4389588480; }
		_case_begin_4389588480:;
		{
			return (*this)._method_read_u64() == _25122_x._method_as_u64();
		}
		goto _match_end_4389586384;
		_case_end_4389588480:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4389588592; }
		_case_begin_4389588592:;
		{
			return (*this)._method_read_f64() == _25122_x._method_as_f64();
		}
		goto _match_end_4389586384;
		_case_end_4389588592:;
		_case_begin_4389586560:;
		{
			return false;
		}
		goto _match_end_4389586384;
		_case_end_4389586560:;
		_match_end_4389586384:;
	}
}



inline jule::Bool _1a89ca987_Const::_method_lt(_1a89ca987_Const _28321_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4389601952; }
		_case_begin_4389601952:;
		{
			return (*this)._method_read_i64() < _28321_x._method_as_i64();
		}
		goto _match_end_4389601408;
		_case_end_4389601952:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4389602064; }
		_case_begin_4389602064:;
		{
			return (*this)._method_read_u64() < _28321_x._method_as_u64();
		}
		goto _match_end_4389601408;
		_case_end_4389602064:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4389602176; }
		_case_begin_4389602176:;
		{
			return (*this)._method_read_f64() < _28321_x._method_as_f64();
		}
		goto _match_end_4389601408;
		_case_end_4389602176:;
		_case_begin_4389601584:;
		{
			return false;
		}
		goto _match_end_4389601408;
		_case_end_4389601584:;
		_match_end_4389601408:;
	}
}



inline jule::Bool _1a89ca987_Const::_method_gt(_1a89ca987_Const _30621_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4389610608; }
		_case_begin_4389610608:;
		{
			return (*this)._method_read_i64() > _30621_x._method_as_i64();
		}
		goto _match_end_4389610064;
		_case_end_4389610608:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4389610720; }
		_case_begin_4389610720:;
		{
			return (*this)._method_read_u64() > _30621_x._method_as_u64();
		}
		goto _match_end_4389610064;
		_case_end_4389610720:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4389610832; }
		_case_begin_4389610832:;
		{
			return (*this)._method_read_f64() > _30621_x._method_as_f64();
		}
		goto _match_end_4389610064;
		_case_end_4389610832:;
		_case_begin_4389610240:;
		{
			return false;
		}
		goto _match_end_4389610064;
		_case_end_4389610240:;
		_match_end_4389610064:;
	}
}



inline jule::Bool _1a89ca987_Const::_method_add(_1a89ca987_Const _32826_x) {
	{
		if (!(((*this)._method_is_str()))) { goto _case_end_4389619568; }
		_case_begin_4389619568:;
		{
			if ((!(_32826_x._method_is_str()))) {
				return false;
			}
			(*this)._method_set_str((*this)._method_read_str() + _32826_x._method_read_str());
		}
		goto _match_end_4389619040;
		_case_end_4389619568:;
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_4389619680; }
		_case_begin_4389619680:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() + _32826_x._method_as_f64()),_32826_x);
		}
		goto _match_end_4389619040;
		_case_end_4389619680:;
		_case_begin_4389619216:;
		{
			return false;
		}
		goto _match_end_4389619040;
		_case_end_4389619216:;
		_match_end_4389619040:;
	}
	return true;
}



inline jule::Bool _1a89ca987_Const::_method_sub(_1a89ca987_Const _34926_x) {
	{
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_4389630448; }
		_case_begin_4389630448:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() - _34926_x._method_as_f64()),_34926_x);
		}
		goto _match_end_4389629968;
		_case_end_4389630448:;
		_case_begin_4389630144:;
		{
			return false;
		}
		goto _match_end_4389629968;
		_case_end_4389630144:;
		_match_end_4389629968:;
	}
	return true;
}



inline jule::Bool _1a89ca987_Const::_method_mul(_1a89ca987_Const _36426_x) {
	{
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_4389637392; }
		_case_begin_4389637392:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() * _36426_x._method_as_f64()),_36426_x);
		}
		goto _match_end_4389636912;
		_case_end_4389637392:;
		_case_begin_4389637088:;
		{
			return false;
		}
		goto _match_end_4389636912;
		_case_end_4389637088:;
		_match_end_4389636912:;
	}
	return true;
}



inline jule::Bool _1a89ca987_Const::_method_div(_1a89ca987_Const _38326_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4389644464; }
		_case_begin_4389644464:;
		{
			jule::F64 _38617_l = _38326_x._method_as_f64();
			if (_38617_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_38617_l)));
		}
		goto _match_end_4389643920;
		_case_end_4389644464:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4389644576; }
		_case_begin_4389644576:;
		{
			jule::F64 _39317_l = _38326_x._method_as_f64();
			if (_39317_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_39317_l)));
		}
		goto _match_end_4389643920;
		_case_end_4389644576:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4389644688; }
		_case_begin_4389644688:;
		{
			jule::F64 _40017_l = _38326_x._method_as_f64();
			if (_40017_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_40017_l)));
		}
		goto _match_end_4389643920;
		_case_end_4389644688:;
		_case_begin_4389644096:;
		{
			return false;
		}
		goto _match_end_4389643920;
		_case_end_4389644096:;
		_match_end_4389643920:;
	}
	return true;
}



inline jule::Bool _1a89ca987_Const::_method_mod(_1a89ca987_Const _41526_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4389660768; }
		_case_begin_4389660768:;
		{
			jule::I64 _41817_l = _41526_x._method_as_i64();
			if (_41817_l == 0LL) {
				return false;
			}
			(*this)._method_set_i64(static_cast<jule::I64>(jule::mod((*this)._method_read_i64(),_41817_l)));
		}
		goto _match_end_4389660240;
		_case_end_4389660768:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4389660880; }
		_case_begin_4389660880:;
		{
			jule::U64 _42517_l = _41526_x._method_as_u64();
			if (_42517_l == 0LL) {
				return false;
			}
			(*this)._method_set_u64(static_cast<jule::U64>(jule::mod((*this)._method_read_u64(),_42517_l)));
		}
		goto _match_end_4389660240;
		_case_end_4389660880:;
		_case_begin_4389660416:;
		{
			return false;
		}
		goto _match_end_4389660240;
		_case_end_4389660416:;
		_match_end_4389660240:;
	}
	return true;
}



inline jule::Bool _1a89ca987_Const::_method_bitwise_and(_1a89ca987_Const _43934_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4389672624; }
		_case_begin_4389672624:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _43934_x._method_as_i64()));
		}
		goto _match_end_4389672096;
		_case_end_4389672624:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4389672736; }
		_case_begin_4389672736:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _43934_x._method_as_u64()));
		}
		goto _match_end_4389672096;
		_case_end_4389672736:;
		_case_begin_4389672272:;
		{
			return false;
		}
		goto _match_end_4389672096;
		_case_end_4389672272:;
		_match_end_4389672096:;
	}
	return true;
}



inline jule::Bool _1a89ca987_Const::_method_bitwise_or(_1a89ca987_Const _45533_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4389681440; }
		_case_begin_4389681440:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _45533_x._method_as_i64()));
		}
		goto _match_end_4389680912;
		_case_end_4389681440:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4389681552; }
		_case_begin_4389681552:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _45533_x._method_as_u64()));
		}
		goto _match_end_4389680912;
		_case_end_4389681552:;
		_case_begin_4389681088:;
		{
			return false;
		}
		goto _match_end_4389680912;
		_case_end_4389681088:;
		_match_end_4389680912:;
	}
	return true;
}



inline jule::Bool _1a89ca987_Const::_method_xor(_1a89ca987_Const _47126_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4389690064; }
		_case_begin_4389690064:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _47126_x._method_as_i64()));
		}
		goto _match_end_4389689536;
		_case_end_4389690064:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4389690176; }
		_case_begin_4389690176:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _47126_x._method_as_u64()));
		}
		goto _match_end_4389689536;
		_case_end_4389690176:;
		_case_begin_4389689712:;
		{
			return false;
		}
		goto _match_end_4389689536;
		_case_end_4389689712:;
		_match_end_4389689536:;
	}
	return true;
}



inline jule::Bool _1a89ca987_Const::_method_lshift(_1a89ca987_Const _48729_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4389699200; }
		_case_begin_4389699200:;
		{
			jule::I64 _49017_l = (*this)._method_as_i64();
			if (_49017_l < 0LL) {
				jule::U64 _49221_r = _48729_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_49017_l << _49221_r));
			} else {
				_1a89ca987_lshift_unsig((*this),_48729_x);
			}
		}
		goto _match_end_4389698672;
		_case_end_4389699200:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4389699312; }
		_case_begin_4389699312:;
		{
			_1a89ca987_lshift_unsig((*this),_48729_x);
		}
		goto _match_end_4389698672;
		_case_end_4389699312:;
		_case_begin_4389698848:;
		{
			return false;
		}
		goto _match_end_4389698672;
		_case_end_4389698848:;
		_match_end_4389698672:;
	}
	return true;
}



inline jule::Bool _1a89ca987_Const::_method_rshift(_1a89ca987_Const _51029_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4389710272; }
		_case_begin_4389710272:;
		{
			jule::I64 _51317_l = (*this)._method_as_i64();
			if (_51317_l < 0LL) {
				jule::U64 _51521_r = _51029_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_51317_l >> _51521_r));
			} else {
				_1a89ca987_rshift_unsig((*this),_51029_x);
			}
		}
		goto _match_end_4389709744;
		_case_end_4389710272:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4389710384; }
		_case_begin_4389710384:;
		{
			_1a89ca987_rshift_unsig((*this),_51029_x);
		}
		goto _match_end_4389709744;
		_case_end_4389710384:;
		_case_begin_4389709920:;
		{
			return false;
		}
		goto _match_end_4389709744;
		_case_end_4389709920:;
		_match_end_4389709744:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a89ca987_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







inline jule::Ref<_2053cdc01_FieldIns> _2053cdc01_Field::_method_instance(void) {
	return jule::new_struct<_2053cdc01_FieldIns>(new( std::nothrow ) _2053cdc01_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _2053cdc01_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_2053cdc01_StructIns> _2053cdc01_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	jule::Ref<_2053cdc01_StructIns> _6617_ins = jule::new_struct<_2053cdc01_StructIns>(new( std::nothrow ) _2053cdc01_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053cdc01_FieldIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_fields.len()))),jule::Slice<jule::Ref<_2053ddd54_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_methods.len()))),jule::Bool(),_206a20e79_ReferenceStack::_static_method_new()));
	{
		auto _range_expr = this->self->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2053cdc01_i = 0;
			jule::Ref<_2053cdc01_Field> _2053cdc01_f = *_range_begin;
			_iter_begin_4392116832:;
			{
				_6617_ins->_field_fields[static_cast<jule::Int>(_2053cdc01_i)]=_2053cdc01_f->_method_instance();
				if (jule::real(_2053cdc01_f->_field_kind->_field_kind) && _2053cdc01_f->_field_kind->_field_kind->_method_mutable()) {
					_6617_ins->_field_mutable=true;
				}
			}
			_iter_next_4392116832:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2053cdc01_i; _2053cdc01_f = *_range_begin; goto _iter_begin_4392116832; }
			_iter_end_4392116832:;
		}
	}
	{
		auto _range_expr = this->self->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2053cdc01_i = 0;
			jule::Ref<_2053ddd54_Fn> _2053cdc01_f = *_range_begin;
			_iter_begin_4392118448:;
			{
				jule::Ref<_2053ddd54_Fn> _8121_fins = jule::new_struct<_2053ddd54_Fn>(new( std::nothrow ) _2053ddd54_Fn(_2053cdc01_f->_field_sema,_2053cdc01_f->_field_token,_2053cdc01_f->_field_global,_2053cdc01_f->_field_unsafety,_2053cdc01_f->_field_public,_2053cdc01_f->_field_cpp_linked,_2053cdc01_f->_field_statically,_2053cdc01_f->_field_ident,_2053cdc01_f->_field_directives,_2053cdc01_f->_field_doc,_2053cdc01_f->_field_scope,_2053cdc01_f->_field_generics,_2053cdc01_f->_field_result,_2053cdc01_f->_field_params,_2053cdc01_f->_field_owner,nullptr));
				_6617_ins->_field_methods[static_cast<jule::Int>(_2053cdc01_i)]=_8121_fins;
			}
			_iter_next_4392118448:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2053cdc01_i; _2053cdc01_f = *_range_begin; goto _iter_begin_4392118448; }
			_iter_end_4392118448:;
		}
	}
	return _6617_ins;
}



inline jule::Ref<_2053cdc01_StructIns> _2053cdc01_Struct::_method_append_instance(jule::Ref<_2053cdc01_StructIns> _10738_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[0LL];
	}
	{
		auto _range_expr = (*this)._field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_StructIns> _2053cdc01_ains = *_range_begin;
			_iter_begin_4392138912:;
			{
				{
					auto _range_expr = _2053cdc01_ains->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _2053cdc01_i = 0;
						jule::Ref<_1da411226_TypeKind> _2053cdc01_ag = *_range_begin;
						_iter_begin_4392140832:;
						{
							if (_2053cdc01_ag->_method_equals(_10738_ins->_field_generics[static_cast<jule::Int>(_2053cdc01_i)])) {
								return _2053cdc01_ains;
							}
						}
						_iter_next_4392140832:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_2053cdc01_i; _2053cdc01_ag = *_range_begin; goto _iter_begin_4392140832; }
						_iter_end_4392140832:;
					}
				}
			}
			_iter_next_4392138912:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053cdc01_ains = *_range_begin; goto _iter_begin_4392138912; }
			_iter_end_4392138912:;
		}
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_2053cdc01_StructIns>>({_10738_ins}));
	return jule::new_ref<_2053cdc01_StructIns>();
}



inline jule::Ref<_2053ddd54_Fn> _2053cdc01_Struct::_method_find_method(jule::Str _12834_ident,jule::Bool _12846_statically) {
	{
		auto _range_expr = (*this)._field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _2053cdc01_f = *_range_begin;
			_iter_begin_4392150736:;
			{
				if ((_2053cdc01_f->_field_statically == _12846_statically) && (_2053cdc01_f->_field_ident == _12834_ident)) {
					return _2053cdc01_f;
				}
			}
			_iter_next_4392150736:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053cdc01_f = *_range_begin; goto _iter_begin_4392150736; }
			_iter_end_4392150736:;
		}
	}
	return jule::new_ref<_2053ddd54_Fn>();
}



inline jule::Ref<_2053cdc01_Field> _2053cdc01_Struct::_method_find_field(jule::Str _13933_ident) {
	{
		auto _range_expr = (*this)._field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Field> _2053cdc01_f = *_range_begin;
			_iter_begin_4392156336:;
			{
				if (_2053cdc01_f->_field_ident == _13933_ident) {
					return _2053cdc01_f;
				}
			}
			_iter_next_4392156336:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053cdc01_f = *_range_begin; goto _iter_begin_4392156336; }
			_iter_end_4392156336:;
		}
	}
	return jule::new_ref<_2053cdc01_Field>();
}



inline jule::Bool _2053cdc01_Struct::_method_is_implements(jule::Ref<_2065895c5_Trait> _14932_t) {
	{
		auto _range_expr = (*this)._field_implements;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2065895c5_Trait> _2053cdc01_it = *_range_begin;
			_iter_begin_4392160352:;
			{
				if ((_14932_t).alloc == (_2053cdc01_it).alloc) {
					return true;
				}
			}
			_iter_next_4392160352:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053cdc01_it = *_range_begin; goto _iter_begin_4392160352; }
			_iter_end_4392160352:;
		}
	}
	return false;
}



inline jule::Bool _2053cdc01_Struct::_method_is_derives(jule::Str _15929_ident) {
	{
		auto _range_expr = (*this)._field_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053703bd_Directive> _2053cdc01_d = *_range_begin;
			_iter_begin_4392164032:;
			{
				if (_2053cdc01_d->_field_tag == jule::Str("derive", 6)) {
					if ((_2053cdc01_d->_field_args.len() == 1LL) && (_2053cdc01_d->_field_args[0LL] == _15929_ident)) {
						return true;
					}
				}
			}
			_iter_next_4392164032:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053cdc01_d = *_range_begin; goto _iter_begin_4392164032; }
			_iter_end_4392164032:;
		}
	}
	return false;
}



inline jule::Bool _2053cdc01_Struct::_method_is_uses(jule::Ref<_2053cdc01_Struct> _17126_s) {
	{
		auto _range_expr = (*this)._field_uses;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _2053cdc01_u = *_range_begin;
			_iter_begin_4392171616:;
			{
				_iter_begin_4392172912:;
				if (!((_17126_s).alloc == (_2053cdc01_u).alloc)) { goto _iter_end_4392172912; }
				{
					return true;
				}
				_iter_next_4392172912:;
				goto _iter_begin_4392172912;
				_iter_end_4392172912:;
			}
			_iter_next_4392171616:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053cdc01_u = *_range_begin; goto _iter_begin_4392171616; }
			_iter_end_4392171616:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053cdc01_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053cdc01_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2053cdc01_StructIns::_method_to_str(void) {
	jule::Str _20217_kind = jule::Str("", 0);
	_20217_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_20217_kind+=jule::Str("[", 1);
		{
			auto _range_expr = (*this)._field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1da411226_TypeKind> _2053cdc01_g = *_range_begin;
				_iter_begin_4392177968:;
				{
					_20217_kind+=_2053cdc01_g->_method_to_str();
					_20217_kind+=jule::Str(",", 1);
				}
				_iter_next_4392177968:;
				++_range_begin;
				if (_range_begin != _range_end) { _2053cdc01_g = *_range_begin; goto _iter_begin_4392177968; }
				_iter_end_4392177968:;
			}
		}
		_20217_kind=_20217_kind.slice(0LL,static_cast<jule::Int>(_20217_kind.len() - 1LL));
		_20217_kind+=jule::Str("]", 1);
	}
	return _20217_kind;
}



inline jule::Bool _2053cdc01_StructIns::_method_equals(jule::Ref<_1da411226_TypeKind> _21721_other) {
	jule::Ref<_2053cdc01_StructIns> _21813_s = (_21721_other).alloc->_method_strct();
	if ((!(jule::real(_21813_s)))) {
		return false;
	}
	if (((*this)._field_decl).alloc != (_21813_s->_field_decl).alloc) {
		return false;
	}
	if ((*this)._field_generics.len() != _21813_s->_field_generics.len()) {
		return false;
	}
	jule::Int _23117_i = 0LL;
	_iter_begin_4392187440:;
	if (!(_23117_i < (*this)._field_generics.len())) { goto _iter_end_4392187440; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_23117_i)]->_method_equals(_21813_s->_field_generics[static_cast<jule::Int>(_23117_i)])))) {
			return false;
		}
	}
	_iter_next_4392187440:;
	(_23117_i)++;
	goto _iter_begin_4392187440;
	_iter_end_4392187440:;
	return true;
}



inline jule::Ref<_2053ddd54_Fn> _2053cdc01_StructIns::_method_find_method(jule::Str _24534_ident,jule::Bool _24546_statically) {
	{
		auto _range_expr = (*this)._field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _2053cdc01_f = *_range_begin;
			_iter_begin_4392199312:;
			{
				if ((_2053cdc01_f->_field_statically == _24546_statically) && (_2053cdc01_f->_field_ident == _24534_ident)) {
					return _2053cdc01_f;
				}
			}
			_iter_next_4392199312:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053cdc01_f = *_range_begin; goto _iter_begin_4392199312; }
			_iter_end_4392199312:;
		}
	}
	return jule::new_ref<_2053ddd54_Fn>();
}



inline jule::Ref<_2053cdc01_FieldIns> _2053cdc01_StructIns::_method_find_field(jule::Str _25633_ident) {
	{
		auto _range_expr = (*this)._field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_FieldIns> _2053cdc01_f = *_range_begin;
			_iter_begin_4392204912:;
			{
				if (_2053cdc01_f->_field_decl->_field_ident == _25633_ident) {
					return _2053cdc01_f;
				}
			}
			_iter_next_4392204912:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053cdc01_f = *_range_begin; goto _iter_begin_4392204912; }
			_iter_end_4392204912:;
		}
	}
	return jule::new_ref<_2053cdc01_FieldIns>();
}







std::ostream &operator<<(std::ostream &_Stream, const _2053cdc01_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "references:" << _Src._field_references;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053ddd54_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_2053ddd54_ParamIns> _2053ddd54_Param::_method_instance(void) {
	return jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(this->self,jule::Ref<_1da411226_TypeKind>()));
}



inline jule::Bool _2053ddd54_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _2053ddd54_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _2053ddd54_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2053ddd54_Fn::_method_is_void(void) {
	return (!(jule::real((*this)._field_result)));
}



inline jule::Bool _2053ddd54_Fn::_method_is_method(void) {
	return jule::real((*this)._field_owner);
}



inline jule::Bool _2053ddd54_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



inline jule::Bool _2053ddd54_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



inline jule::Bool _2053ddd54_Fn::_method_is_anon(void) {
	return _20542560a_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _2053ddd54_Fn::_method_any_var(void) {
	return jule::real((*this)._field_result) && ((*this)._field_result->_field_idents.len() > 0LL);
}



inline jule::Bool _2053ddd54_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto _range_expr = (*this)._field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Param> _2053ddd54_p = *_range_begin;
			_iter_begin_4392229680:;
			{
				if (_2053ddd54_p->_method_is_self()) {
					goto _iter_next_4392229680;
				}
				jule::Str _9317_pk = _2053ddd54_p->_field_kind->_field_kind->_method_to_str();
				{
					auto _range_expr = (*this)._field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_2053703bd_GenericDecl> _2053ddd54_g = *_range_begin;
						_iter_begin_4392234736:;
						{
							if (_9317_pk.find(_2053ddd54_g->_field_ident) != -1LL) {
								return true;
							}
						}
						_iter_next_4392234736:;
						++_range_begin;
						if (_range_begin != _range_end) { _2053ddd54_g = *_range_begin; goto _iter_begin_4392234736; }
						_iter_end_4392234736:;
					}
				}
			}
			_iter_next_4392229680:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053ddd54_p = *_range_begin; goto _iter_begin_4392229680; }
			_iter_end_4392229680:;
		}
	}
	return false;
}



inline jule::Bool _2053ddd54_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if ((!(jule::real((*this)._field_result->_field_kind))) || (!(jule::real((*this)._field_result->_field_kind->_field_kind)))) {
		return false;
	}
	jule::Str _11213_rk = (*this)._field_result->_field_kind->_field_kind->_method_to_str();
	{
		auto _range_expr = (*this)._field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053703bd_GenericDecl> _2053ddd54_g = *_range_begin;
			_iter_begin_4392245744:;
			{
				if (_11213_rk.find(_2053ddd54_g->_field_ident) != -1LL) {
					return true;
				}
			}
			_iter_next_4392245744:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053ddd54_g = *_range_begin; goto _iter_begin_4392245744; }
			_iter_end_4392245744:;
		}
	}
	return false;
}



inline jule::Ref<_2053ddd54_FnIns> _2053ddd54_Fn::_method_instance_force(void) {
	jule::Ref<_2053ddd54_FnIns> _12417_ins = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),this->self,jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>(),jule::Ref<_1da411226_TypeKind>(),jule::new_struct<_206b0557a_Scope>(new( std::nothrow ) _206b0557a_Scope()),_206a20e79_ReferenceStack::_static_method_new(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(),jule::Bool(),jule::Bool()));
	if (this->self->_method_is_init()) {
		_12417_ins->_field_refers=_206a20e79_ReferenceStack::_static_method_new();
	}
	_12417_ins->_field_params=jule::Slice<jule::Ref<_2053ddd54_ParamIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_params.len())));
	{
		auto _range_expr = this->self->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2053ddd54_i = 0;
			jule::Ref<_2053ddd54_Param> _2053ddd54_p = *_range_begin;
			_iter_begin_4392256944:;
			{
				_12417_ins->_field_params[static_cast<jule::Int>(_2053ddd54_i)]=_2053ddd54_p->_method_instance();
			}
			_iter_next_4392256944:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2053ddd54_i; _2053ddd54_p = *_range_begin; goto _iter_begin_4392256944; }
			_iter_end_4392256944:;
		}
	}
	if (jule::real(_12417_ins->_field_decl->_field_result)) {
		_12417_ins->_field_result=_12417_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _12417_ins;
}



inline jule::Ref<_2053ddd54_FnIns> _2053ddd54_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	return this->self->_method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _2053ddd54_Fn::_method_append_instance(jule::Ref<_2053ddd54_FnIns> _15538_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_2053ddd54_FnIns>>({_15538_ins}));
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_2053ddd54_FnIns>>({_15538_ins}));
		return std::make_tuple(true,-1LL);
	}
	{
		auto _range_expr = (*this)._field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2053ddd54_j = 0;
			jule::Ref<_2053ddd54_FnIns> _2053ddd54_ains = *_range_begin;
			_iter_begin_4392275760:;
			{
				{
					auto _range_expr = _2053ddd54_ains->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _2053ddd54_i = 0;
						jule::Ref<_1da411226_TypeKind> _2053ddd54_ag = *_range_begin;
						_iter_begin_4392280080:;
						{
							if (_2053ddd54_ag->_method_equals(_15538_ins->_field_generics[static_cast<jule::Int>(_2053ddd54_i)])) {
								return std::make_tuple(false,_2053ddd54_j);
							}
						}
						_iter_next_4392280080:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_2053ddd54_i; _2053ddd54_ag = *_range_begin; goto _iter_begin_4392280080; }
						_iter_end_4392280080:;
					}
				}
			}
			_iter_next_4392275760:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2053ddd54_j; _2053ddd54_ains = *_range_begin; goto _iter_begin_4392275760; }
			_iter_end_4392275760:;
		}
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_2053ddd54_FnIns>>({_15538_ins}));
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _2053ddd54_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2053ddd54_ParamIns::_method_to_str(void) {
	jule::Str _19517_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_mutable) {
		_19517_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_19517_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_19517_s+=jule::Str("&", 1);
		}
		_19517_s+=jule::Str("self", 4);
		return _19517_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_19517_s+=jule::Str("...", 3);
	}
	if (jule::real((*this)._field_kind)) {
		_19517_s+=(*this)._field_kind->_method_to_str();
	}
	return _19517_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053ddd54_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2053ddd54_FnIns::_method_to_str(void) {
	
	return (*this)._method_get_kind_str(false);
}



inline jule::Bool _2053ddd54_FnIns::_method_equals(jule::Ref<_1da411226_TypeKind> _25021_other) {
	jule::Ref<_2053ddd54_FnIns> _25113_f = (_25021_other).alloc->_method_fnc();
	if ((!(jule::real(_25113_f)))) {
		return false;
	}
	if ((*this)._field_decl->_field_statically != _25113_f->_field_decl->_field_statically) {
		return false;
	}
	if ((*this)._field_decl->_field_unsafety != _25113_f->_field_decl->_field_unsafety) {
		return false;
	}
	if ((*this)._field_generics.len() != _25113_f->_field_generics.len()) {
		return false;
	}
	if ((*this)._field_decl->_method_is_void() != _25113_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _27217_i = 0LL;
	_iter_begin_4392304656:;
	if (!(_27217_i < (*this)._field_generics.len())) { goto _iter_end_4392304656; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_27217_i)]->_method_equals(_25113_f->_field_generics[static_cast<jule::Int>(_27217_i)])))) {
			return false;
		}
	}
	_iter_next_4392304656:;
	(_27217_i)++;
	goto _iter_begin_4392304656;
	_iter_end_4392304656:;
	jule::Fn<jule::Bool(jule::Ref<_2053ddd54_ParamIns>,jule::Ref<_2053ddd54_ParamIns>)> _27913_check_params = jule::Fn<jule::Bool(jule::Ref<_2053ddd54_ParamIns>,jule::Ref<_2053ddd54_ParamIns>)>([=](jule::Ref<_2053ddd54_ParamIns> _27931_p1,jule::Ref<_2053ddd54_ParamIns> _27946_p2) mutable -> jule::Bool {
		if (_27931_p1->_field_decl->_field_mutable != _27946_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_27931_p1->_field_decl->_method_is_self()) {
			if ((!(_27946_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_27931_p1->_field_decl->_method_is_ref() != _27946_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_27931_p1->_field_decl->_field_reference != _27946_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_27931_p1->_field_decl->_field_variadic != _27946_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _27931_p1->_field_kind->_method_equals(_27946_p2->_field_kind);
	});
	_27217_i=0LL;
	_iter_begin_4392313968:;
	if (!(_27217_i < (*this)._field_params.len())) { goto _iter_end_4392313968; }
	{
		if ((!(_27913_check_params((*this)._field_params[static_cast<jule::Int>(_27217_i)],_25113_f->_field_params[static_cast<jule::Int>(_27217_i)])))) {
			return false;
		}
	}
	_iter_next_4392313968:;
	(_27217_i)++;
	goto _iter_begin_4392313968;
	_iter_end_4392313968:;
	if ((!((*this)._field_decl->_method_is_void()))) {
		if ((!((*this)._field_result->_method_equals(_25113_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _2053ddd54_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != nullptr;
}



inline jule::Bool _2053ddd54_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (jule::real((*this)._field_decl) && (*this)._field_decl->_method_is_anon());
}



inline jule::Str _2053ddd54_FnIns::_method_get_kind_str(jule::Bool _33431_ident) {
	jule::Str _33517_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_statically) {
		_33517_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_33517_s+=jule::Str("unsafe ", 7);
	}
	_33517_s+=jule::Str("fn", 2);
	if (_33431_ident && jule::real((*this)._field_decl)) {
		_33517_s+=jule::Str(" ", 1) + (*this)._field_decl->_field_ident;
	}
	if ((*this)._field_generics.len() > 0LL) {
		_33517_s+=jule::Str("[", 1);
		{
			auto _range_expr = (*this)._field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _2053ddd54_i = 0;
				jule::Ref<_1da411226_TypeKind> _2053ddd54_t = *_range_begin;
				_iter_begin_4392351808:;
				{
					_33517_s+=_2053ddd54_t->_method_to_str();
					if ((_2053ddd54_i + 1LL) < (*this)._field_generics.len()) {
						_33517_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4392351808:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_2053ddd54_i; _2053ddd54_t = *_range_begin; goto _iter_begin_4392351808; }
				_iter_end_4392351808:;
			}
		}
		_33517_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_33517_s+=jule::Str("[", 1);
		{
			auto _range_expr = (*this)._field_decl->_field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _2053ddd54_i = 0;
				jule::Ref<_2053703bd_GenericDecl> _2053ddd54_g = *_range_begin;
				_iter_begin_4392359456:;
				{
					_33517_s+=_2053ddd54_g->_field_ident;
					if ((_2053ddd54_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_33517_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4392359456:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_2053ddd54_i; _2053ddd54_g = *_range_begin; goto _iter_begin_4392359456; }
				_iter_end_4392359456:;
			}
		}
		_33517_s+=jule::Str("]", 1);
	}
	_33517_s+=jule::Str("(", 1);
	jule::I64 _37213_n = (*this)._field_params.len();
	if (_37213_n > 0LL) {
		{
			auto _range_expr = (*this)._field_params;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_2053ddd54_ParamIns> _2053ddd54_p = *_range_begin;
				_iter_begin_4392366784:;
				{
					_33517_s+=_2053ddd54_p->_method_to_str();
					_33517_s+=jule::Str(",", 1);
				}
				_iter_next_4392366784:;
				++_range_begin;
				if (_range_begin != _range_end) { _2053ddd54_p = *_range_begin; goto _iter_begin_4392366784; }
				_iter_end_4392366784:;
			}
		}
		_33517_s=_33517_s.slice(0LL,static_cast<jule::Int>(_33517_s.len() - 1LL));
	}
	_33517_s+=jule::Str(")", 1);
	if ((!((*this)._field_decl->_method_is_void()))) {
		_33517_s+=jule::Str(":", 1);
		_33517_s+=(*this)._field_result->_method_to_str();
	}
	return _33517_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _2053ddd54_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_206a20e79_ReferenceStack> _206a20e79_ReferenceStack::_static_method_new(void) {
	return jule::new_struct<_206a20e79_ReferenceStack>(new( std::nothrow ) _206a20e79_ReferenceStack());
}



inline jule::Int _206a20e79_ReferenceStack::_method_len(void) {
	return static_cast<jule::I64>((*this)._field_buffer.len());
}



inline jule::Any _206a20e79_ReferenceStack::_method_at(jule::Int _5825_i) {
	return (*this)._field_buffer[static_cast<jule::Int>(_5825_i)];
}



inline void _206a20e79_ReferenceStack::_method_push(jule::Any _6331_ref) {
	(*this)._field_buffer=jule::append((*this)._field_buffer,jule::Slice<jule::Any>({_6331_ref}));
}



inline jule::Bool _206a20e79_ReferenceStack::_method_exist_0(jule::Ref<_1d9e22661_Var> _6827_t) {
	{
		auto _range_expr = (*this)._field_buffer;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _206a20e79_ref = *_range_begin;
			_iter_begin_4396463680:;
			{
				{
					auto _match_expr{ _206a20e79_ref };
					if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4396465552; }
					_case_begin_4396465552:;
					{
						if ((_206a20e79_ref.operator jule::Ref<_1d9e22661_Var>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4396464992;
					_case_end_4396465552:;
					_match_end_4396464992:;
				}
			}
			_iter_next_4396463680:;
			++_range_begin;
			if (_range_begin != _range_end) { _206a20e79_ref = *_range_begin; goto _iter_begin_4396463680; }
			_iter_end_4396463680:;
		}
	}
	return false;
}

inline jule::Bool _206a20e79_ReferenceStack::_method_exist_1(jule::Ref<_2053ddd54_FnIns> _6827_t) {
	{
		auto _range_expr = (*this)._field_buffer;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _206a20e79_ref = *_range_begin;
			_iter_begin_4396475248:;
			{
				{
					auto _match_expr{ _206a20e79_ref };
					if (!(_match_expr.type_is<jule::Ref<_2053ddd54_FnIns>>())) { goto _case_end_4396477120; }
					_case_begin_4396477120:;
					{
						if ((_206a20e79_ref.operator jule::Ref<_2053ddd54_FnIns>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4396476560;
					_case_end_4396477120:;
					_match_end_4396476560:;
				}
			}
			_iter_next_4396475248:;
			++_range_begin;
			if (_range_begin != _range_end) { _206a20e79_ref = *_range_begin; goto _iter_begin_4396475248; }
			_iter_end_4396475248:;
		}
	}
	return false;
}

inline jule::Bool _206a20e79_ReferenceStack::_method_exist_2(jule::Ref<_2053cdc01_StructIns> _6827_t) {
	{
		auto _range_expr = (*this)._field_buffer;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _206a20e79_ref = *_range_begin;
			_iter_begin_4396516032:;
			{
				{
					auto _match_expr{ _206a20e79_ref };
					if (!(_match_expr.type_is<jule::Ref<_2053cdc01_StructIns>>())) { goto _case_end_4396517904; }
					_case_begin_4396517904:;
					{
						if ((_206a20e79_ref.operator jule::Ref<_2053cdc01_StructIns>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4396517344;
					_case_end_4396517904:;
					_match_end_4396517344:;
				}
			}
			_iter_next_4396516032:;
			++_range_begin;
			if (_range_begin != _range_end) { _206a20e79_ref = *_range_begin; goto _iter_begin_4396516032; }
			_iter_end_4396516032:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _206a20e79_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206a20e79_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_206a20e79_SymbolBuilder> _206a20e79_SymbolBuilder::_method_get_root(void) {
	jule::Ref<_206a20e79_SymbolBuilder> _30517_root = this->self;
	_iter_begin_4392382416:;
	if (!(jule::real(_30517_root->_field_owner))) { goto _iter_end_4392382416; }
	{
		_30517_root=_30517_root->_field_owner;
	}
	_iter_next_4392382416:;
	goto _iter_begin_4392382416;
	_iter_end_4392382416:;
	return _30517_root;
}



inline void _206a20e79_SymbolBuilder::_method_push_err(_20542560a_Token _31227_token,jule::Str _31241_fmt,jule::Slice<jule::Any> _31254_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_20377124e_Log>({_1d9dc7517_compiler_err(_31227_token,true,_31241_fmt,_31254_args)}));
}



inline void _206a20e79_SymbolBuilder::_method_push_err_text(_20542560a_Token _31632_token,jule::Str _31646_fmt,jule::Slice<jule::Any> _31659_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_20377124e_Log>({_1d9dc7517_compiler_err(_31632_token,false,_31646_fmt,_31659_args)}));
}



inline void _206a20e79_SymbolBuilder::_method_push_suggestion(jule::Str _32134_fmt,jule::Slice<jule::Any> _32147_args) {
	{
		_1d9dc7517_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_32134_fmt,_32147_args);
	}
}



inline jule::Bool _206a20e79_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ref<_2053703bd_UseDecl> _32542_decl) {
	jule::Bool _32560_ok = jule::Bool();
	if (_2037761bb_is_std_header_path(_32542_decl->_field_link_path)) {
		_32560_ok = true;
		return _32560_ok;
	}
	jule::Str _33013_ext = _203896264_ext(_32542_decl->_field_link_path);
	if ((!(_2037761bb_is_valid_header_ext(_33013_ext))) && (!(_2037761bb_is_valid_cpp_ext(_33013_ext)))) {
		(*this)._method_push_err(_32542_decl->_field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_33013_ext)}));
		_32560_ok = false;
		return _32560_ok;
	}
	jule::Ref<_20537ab26_Status> _33614_info;
	jule::Int _33620_err;
	std::tie(_33614_info,_33620_err) = _205127c47_stat(_32542_decl->_field_link_path);
	if ((_33620_err != 0LLU) || _33614_info->_method_is_dir()) {
		(*this)._method_push_err(_32542_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_32542_decl->_field_link_path)}));
		_32560_ok = false;
		return _32560_ok;
	}
	_32560_ok = true;
	return _32560_ok;
}



inline jule::Ref<_206e66325_ImportInfo> _206a20e79_SymbolBuilder::_method_build_cpp_header_import(jule::Ref<_2053703bd_UseDecl> _34646_decl) {
	jule::Str _34717_path = _34646_decl->_field_link_path;
	if ((!(_2037761bb_is_std_header_path(_34646_decl->_field_link_path)))) {
		jule::Bool _35021_ok = (*this)._method_check_cpp_use_decl_path(_34646_decl);
		if ((!(_35021_ok))) {
			return jule::new_ref<_206e66325_ImportInfo>();
		}
		std::tie(_34717_path,_35021_ok) = _203896264_abs(_34646_decl->_field_link_path);
		if ((!(_35021_ok))) {
			(*this)._method_push_err(_34646_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_34646_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_206e66325_ImportInfo>(new( std::nothrow ) _206e66325_ImportInfo(_34646_decl->_field_token,_34717_path,_34646_decl->_field_link_path,jule::Str("", 0),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_20542560a_Token>(),jule::new_ref<_206e66325_Package>()));
}



inline jule::Ref<_206e66325_ImportInfo> _206a20e79_SymbolBuilder::_method_build_std_import(jule::Ref<_2053703bd_UseDecl> _37339_decl) {
	jule::Str _37417_path = _37339_decl->_field_link_path.slice(static_cast<jule::Int>(jule::Str("std::", 5).len()));
	_37417_path=_37417_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_37417_path=_203896264_join(jule::Slice<jule::Str>({_203845d29_PATH_STDLIB,_37417_path}));
	jule::Bool _37720_ok;
	std::tie(_37417_path,_37720_ok) = _203896264_abs(_37417_path);
	if ((!(_37720_ok))) {
		(*this)._method_push_err(_37339_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_37339_decl->_field_link_path)}));
		return jule::new_ref<_206e66325_ImportInfo>();
	}
	jule::Ref<_20537ab26_Status> _38314_info;
	jule::Int _38320_err;
	std::tie(_38314_info,_38320_err) = _205127c47_stat(_37417_path);
	if ((_38320_err != 0LLU) || (!(_38314_info->_method_is_dir()))) {
		(*this)._method_push_err(_37339_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_37339_decl->_field_link_path)}));
		return jule::new_ref<_206e66325_ImportInfo>();
	}
	jule::Str _39113_ident = _37339_decl->_field_link_path.slice(static_cast<jule::Int>(_37339_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_206e66325_ImportInfo>(new( std::nothrow ) _206e66325_ImportInfo(_37339_decl->_field_token,_37417_path,_37339_decl->_field_link_path,_39113_ident,_37339_decl->_field_alias,jule::Bool(),false,true,_37339_decl->_field_full,jule::Slice<_20542560a_Token>(),jule::new_struct<_206e66325_Package>(new( std::nothrow ) _206e66325_Package(nullptr))));
}



inline jule::Ref<_206e66325_ImportInfo> _206a20e79_SymbolBuilder::_method_build_ident_import(jule::Ref<_2053703bd_UseDecl> _40842_decl) {
	jule::Str _40917_path = _40842_decl->_field_link_path;
	_40917_path=_40917_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_40917_path=_203896264_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_40917_path}));
	jule::Bool _41320_ok;
	std::tie(_40917_path,_41320_ok) = _203896264_abs(_40917_path);
	if ((!(_41320_ok))) {
		this->self->_method_push_err(_40842_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_40842_decl->_field_link_path)}));
		return jule::new_ref<_206e66325_ImportInfo>();
	}
	jule::Ref<_20537ab26_Status> _41914_info;
	jule::Int _41920_err;
	std::tie(_41914_info,_41920_err) = _205127c47_stat(_40917_path);
	if ((_41920_err != 0LLU) || (!(_41914_info->_method_is_dir()))) {
		this->self->_method_push_err(_40842_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_40842_decl->_field_link_path)}));
		return jule::new_ref<_206e66325_ImportInfo>();
	}
	jule::Str _42713_ident = _40842_decl->_field_link_path.slice(static_cast<jule::Int>(_40842_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_206e66325_ImportInfo>(new( std::nothrow ) _206e66325_ImportInfo(_40842_decl->_field_token,_40917_path,_40842_decl->_field_link_path,_42713_ident,_40842_decl->_field_alias,jule::Bool(),false,false,_40842_decl->_field_full,jule::Slice<_20542560a_Token>(),jule::new_struct<_206e66325_Package>(new( std::nothrow ) _206e66325_Package(nullptr))));
}



inline jule::Ref<_206e66325_ImportInfo> _206a20e79_SymbolBuilder::_method_build_import(jule::Ref<_2053703bd_UseDecl> _44436_decl) {
	{
		if (!((_44436_decl->_field_cpp_linked))) { goto _case_end_4392481136; }
		_case_begin_4392481136:;
		{
			return this->self->_method_build_cpp_header_import(_44436_decl);
		}
		goto _match_end_4392479504;
		_case_end_4392481136:;
		if (!((_44436_decl->_field_std))) { goto _case_end_4392480736; }
		_case_begin_4392480736:;
		{
			return this->self->_method_build_std_import(_44436_decl);
		}
		goto _match_end_4392479504;
		_case_end_4392480736:;
		_case_begin_4392479680:;
		{
			return this->self->_method_build_ident_import(_44436_decl);
		}
		goto _match_end_4392479504;
		_case_end_4392479680:;
		_match_end_4392479504:;
	}
}



inline jule::Bool _206a20e79_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ref<_206e66325_ImportInfo> _45243_pkg) {
	jule::Bool _45263_ok = jule::Bool();
	jule::Ref<_206e66325_ImportInfo> _45413_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)>([=](jule::Ref<_206e66325_ImportInfo> _45449_spkg) mutable -> jule::Bool {
		return _45243_pkg->_field_path == _45449_spkg->_field_path;
	}));
	if ((!(jule::real(_45413_lpkg)))) {
		_45263_ok = true;
		return _45263_ok;
	}
	(*this)._method_push_err(_45243_pkg->_field_token,jule::Str("duplicate use declaration: @", 28),jule::Slice<jule::Any>({jule::Any(_45243_pkg->_field_link_path)}));
	(*this)._method_push_suggestion(jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>({}));
	_45263_ok = false;
	return _45263_ok;
}



inline void _206a20e79_SymbolBuilder::_method_impl_import_selections(jule::Ref<_206e66325_ImportInfo> _46645_imp,jule::Ref<_2053703bd_UseDecl> _46667_decl) {
	{
		auto _range_expr = _46667_decl->_field_selected;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_20542560a_Token _206a20e79_ident = *_range_begin;
			_iter_begin_4392519008:;
			{
				if (_46645_imp->_method_exist_ident(_206a20e79_ident._field_kind)) {
					(*this)._method_push_err(_206a20e79_ident,jule::Str("duplicated identifier selection: @", 34),jule::Slice<jule::Any>({jule::Any(_206a20e79_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>({}));
					goto _iter_next_4392519008;
				}
				_46645_imp->_field_selected=jule::append(_46645_imp->_field_selected,jule::Slice<_20542560a_Token>({_206a20e79_ident}));
			}
			_iter_next_4392519008:;
			++_range_begin;
			if (_range_begin != _range_end) { _206a20e79_ident = *_range_begin; goto _iter_begin_4392519008; }
			_iter_end_4392519008:;
		}
	}
}



inline jule::Str _206a20e79_SymbolBuilder::_method_get_as_link_path(jule::Str _47840_path) {
	if (_47840_path.has_prefix(_203845d29_PATH_STDLIB)) {
		_47840_path=_47840_path.slice(static_cast<jule::Int>(_203845d29_PATH_STDLIB.len()));
		return jule::Str("std", 3) + _47840_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _48414_root;
	std::tie(_48414_root,std::ignore) = _203896264_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_47840_path=_47840_path.slice(static_cast<jule::Int>(_48414_root.len()));
	if (_47840_path[0LL] == 47LL) {
		_47840_path=_47840_path.slice(1LL);
	}
	return _47840_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _206a20e79_SymbolBuilder::_method_push_cycle_error(jule::Ref<_206a20e79_SymbolBuilder> _49236_sb,jule::Str _49256_path,jule::Str& _49272_message) {
	
	jule::Str _49513_refers_to = _20377124e_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_49236_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_49256_path))}));
	_49272_message=((_206a20e79_str_repeat(jule::Str(" ", 1),4LL) + _49513_refers_to) + jule::Str("\n", 1)) + _49272_message;
}



inline void _206a20e79_SymbolBuilder::_method_push_cross_cycle_error(jule::Ref<_206a20e79_SymbolBuilder> _50242_target,jule::Ref<_206e66325_ImportInfo> _50266_imp,_20542560a_Token _50284_error_token) {
	jule::Str _50317_message = jule::Str("", 0);
	this->self->_method_push_cycle_error(this->self,_50266_imp->_field_path,_50317_message);
	jule::Ref<_206a20e79_SymbolBuilder> _50717_owner = this->self->_field_owner;
	jule::Ref<_206a20e79_SymbolBuilder> _50817_old = this->self;
	_iter_begin_4392560864:;
	if (!(jule::real(_50717_owner->_field_owner))) { goto _iter_end_4392560864; }
	{
		this->self->_method_push_cycle_error(_50817_old->_field_owner,_50817_old->_field_table->_field_file->_method_dir(),_50317_message);
		if ((_50717_owner->_field_owner).alloc == (_50242_target).alloc) {
			this->self->_method_push_cycle_error(_50242_target,_50717_owner->_field_table->_field_file->_method_dir(),_50317_message);
			goto _iter_end_4392560864;
		}
		_50817_old=_50717_owner;
		_50717_owner=_50717_owner->_field_owner;
	}
	_iter_next_4392560864:;
	goto _iter_begin_4392560864;
	_iter_end_4392560864:;
	this->self->_method_push_err(_50284_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_50317_message)}));
}



inline jule::Bool _206a20e79_SymbolBuilder::_method_check_import_cycles(jule::Ref<_206e66325_ImportInfo> _52539_imp,jule::Ref<_2053703bd_UseDecl> _52557_decl) {
	if (_52539_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_52557_decl->_field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_52539_imp->_field_path))}));
		return false;
	}
	if ((!(jule::real(this->self->_field_owner)))) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _52539_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_52539_imp,_52557_decl->_field_token);
		return false;
	}
	jule::Ref<_206a20e79_SymbolBuilder> _54017_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_54017_owner->_field_table->_field_file->_method_dir() == _52539_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_54017_owner,_52539_imp,_52557_decl->_field_token);
		return false;
	}
	if (jule::real(_54017_owner->_field_owner)) {
		_54017_owner=_54017_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline jule::Bool _206a20e79_SymbolBuilder::_method_import_package(jule::Ref<_206e66325_ImportInfo>& _55539_imp,jule::Ref<_2053703bd_UseDecl> _55561_decl) {
	jule::Bool _55579_ok = jule::Bool();
	if (_55539_imp->_field_cpp_linked) {
		_55579_ok = true;
		return _55579_ok;
	}
	jule::Ref<_206e66325_ImportInfo> _56017_port = this->self->_field_importer.get()._method_get_import(_55539_imp->_field_path);
	if (jule::real(_56017_port)) {
		_55539_imp->_field_package=_56017_port->_field_package;
		_55539_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_55539_imp,_55561_decl)))) {
			_55579_ok = false;
			return _55579_ok;
		}
		jule::Slice<jule::Ref<_20521102d_Ast>> _56922_asts;
		jule::Slice<_20377124e_Log> _56928_errors;
		std::tie(_56922_asts,_56928_errors) = this->self->_field_importer.get()._method_import_package(_55539_imp->_field_path);
		if (_56928_errors.len() > 0LL) {
			this->self->_field_errors=jule::append(this->self->_field_errors,_56928_errors);
			_55579_ok = false;
			return _55579_ok;
		}
		{
			auto _range_expr = _56922_asts;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_20521102d_Ast> _206a20e79_ast = *_range_begin;
				_iter_begin_4392608144:;
				{
					jule::Ref<_1da2aa301_SymbolTable> _57626_table;
					jule::Slice<_20377124e_Log> _57633_errors;
					std::tie(_57626_table,_57633_errors) = _206c8d01a_build_symbols(_206a20e79_ast,this->self->_field_importer,this->self);
					if (_57633_errors.len() > 0LL) {
						this->self->_field_errors=jule::append(this->self->_field_errors,_57633_errors);
						this->self->_method_push_err_text(_55539_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_55539_imp->_field_link_path)}));
						_55579_ok = false;
						return _55579_ok;
					}
					_55539_imp->_field_package->_field_files=jule::append(_55539_imp->_field_package->_field_files,jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>({_57626_table}));
				}
				_iter_next_4392608144:;
				++_range_begin;
				if (_range_begin != _range_end) { _206a20e79_ast = *_range_begin; goto _iter_begin_4392608144; }
				_iter_end_4392608144:;
			}
		}
	}
	this->self->_method_impl_import_selections(_55539_imp,_55561_decl);
	_55579_ok = true;
	return _55579_ok;
}



inline jule::Ref<_206e66325_ImportInfo> _206a20e79_SymbolBuilder::_method_import_use_decl(jule::Ref<_2053703bd_UseDecl> _59439_decl) {
	jule::Ref<_206e66325_ImportInfo> _59517_imp = this->self->_method_build_import(_59439_decl);
	if ((!(jule::real(_59517_imp)))) {
		return jule::new_ref<_206e66325_ImportInfo>();
	}
	jule::Bool _60117_ok = this->self->_method_check_duplicate_use_decl(_59517_imp);
	if ((!(_60117_ok))) {
		return jule::new_ref<_206e66325_ImportInfo>();
	}
	if ((_59517_imp->_field_alias.len() != 0LL) && (_59439_decl->_field_selected.len() > 0LL)) {
		this->self->_method_push_err(_59439_decl->_field_token,jule::Str("use aliases cannot useable for selected package defines", 55),jule::Slice<jule::Any>({}));
	}
	_60117_ok=this->self->_method_import_package(_59517_imp,_59439_decl);
	this->self->_field_table->_field_imports=jule::append(this->self->_field_table->_field_imports,jule::Slice<jule::Ref<_206e66325_ImportInfo>>({_59517_imp}));
	if (_60117_ok) {
		this->self->_field_importer.get()._method_imported(_59517_imp);
		return _59517_imp;
	}
	return jule::new_ref<_206e66325_ImportInfo>();
}



inline void _206a20e79_SymbolBuilder::_method_import_use_decls(void) {
	{
		auto _range_expr = this->self->_field_ast->_field_use_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053703bd_UseDecl> _206a20e79_decl = *_range_begin;
			_iter_begin_4392631824:;
			{
				this->self->_method_import_use_decl(_206a20e79_decl);
				if (this->self->_field_errors.len() > 0LL) {
					goto _iter_end_4392631824;
				}
			}
			_iter_next_4392631824:;
			++_range_begin;
			if (_range_begin != _range_end) { _206a20e79_decl = *_range_begin; goto _iter_begin_4392631824; }
			_iter_end_4392631824:;
		}
	}
}



inline void _206a20e79_SymbolBuilder::_method_append_decl(_2053703bd_Node _63034_decl) {
	{
		auto _match_expr{ _63034_decl._field_data };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_TypeAliasDecl>>())) { goto _case_end_4392639824; }
		_case_begin_4392639824:;
		{
			jule::Ref<_1da411226_TypeAlias> _63321_ta = _206a20e79_build_type_alias(_63034_decl._field_data.operator jule::Ref<_2053703bd_TypeAliasDecl>());
			(*this)._field_table->_field_type_aliases=jule::append((*this)._field_table->_field_type_aliases,jule::Slice<jule::Ref<_1da411226_TypeAlias>>({_63321_ta}));
		}
		goto _match_end_4392636656;
		_case_end_4392639824:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_StructDecl>>())) { goto _case_end_4392637648; }
		_case_begin_4392637648:;
		{
			jule::Ref<_2053cdc01_Struct> _63721_srct = _206a20e79_build_struct(_63034_decl._field_data.operator jule::Ref<_2053703bd_StructDecl>());
			(*this)._field_table->_field_structs=jule::append((*this)._field_table->_field_structs,jule::Slice<jule::Ref<_2053cdc01_Struct>>({_63721_srct}));
		}
		goto _match_end_4392636656;
		_case_end_4392637648:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_FnDecl>>())) { goto _case_end_4392637760; }
		_case_begin_4392637760:;
		{
			jule::Ref<_2053ddd54_Fn> _64121_f = _206a20e79_build_fn(_63034_decl._field_data.operator jule::Ref<_2053703bd_FnDecl>());
			(*this)._field_table->_field_funcs=jule::append((*this)._field_table->_field_funcs,jule::Slice<jule::Ref<_2053ddd54_Fn>>({_64121_f}));
		}
		goto _match_end_4392636656;
		_case_end_4392637760:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_TraitDecl>>())) { goto _case_end_4392637872; }
		_case_begin_4392637872:;
		{
			jule::Ref<_2065895c5_Trait> _64521_t = _206a20e79_build_trait(_63034_decl._field_data.operator jule::Ref<_2053703bd_TraitDecl>());
			(*this)._field_table->_field_traits=jule::append((*this)._field_table->_field_traits,jule::Slice<jule::Ref<_2065895c5_Trait>>({_64521_t}));
		}
		goto _match_end_4392636656;
		_case_end_4392637872:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_VarDecl>>())) { goto _case_end_4392640000; }
		_case_begin_4392640000:;
		{
			jule::Ref<_1d9e22661_Var> _64921_v = _206a20e79_build_var(_63034_decl._field_data.operator jule::Ref<_2053703bd_VarDecl>());
			(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ref<_1d9e22661_Var>>({_64921_v}));
		}
		goto _match_end_4392636656;
		_case_end_4392640000:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_EnumDecl>>())) { goto _case_end_4392640112; }
		_case_begin_4392640112:;
		{
			jule::Ref<_206b06c0d_Enum> _65321_e = _206a20e79_build_enum(_63034_decl._field_data.operator jule::Ref<_2053703bd_EnumDecl>());
			(*this)._field_table->_field_enums=jule::append((*this)._field_table->_field_enums,jule::Slice<jule::Ref<_206b06c0d_Enum>>({_65321_e}));
		}
		goto _match_end_4392636656;
		_case_end_4392640112:;
		_case_begin_4392637344:;
		{
			(*this)._method_push_err(_63034_decl._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4392636656;
		_case_end_4392637344:;
		_match_end_4392636656:;
	}
}



inline void _206a20e79_SymbolBuilder::_method_append_decls(void) {
	{
		auto _range_expr = (*this)._field_ast->_field_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_2053703bd_Node _206a20e79_decl = *_range_begin;
			_iter_begin_4392662464:;
			{
				(*this)._method_append_decl(_206a20e79_decl);
			}
			_iter_next_4392662464:;
			++_range_begin;
			if (_range_begin != _range_end) { _206a20e79_decl = *_range_begin; goto _iter_begin_4392662464; }
			_iter_end_4392662464:;
		}
	}
}



inline void _206a20e79_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=jule::Slice<jule::Ref<_206b07093_Impl>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_ast->_field_impls.len())));
	{
		auto _range_expr = (*this)._field_ast->_field_impls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053703bd_Impl> _206a20e79_decl = *_range_begin;
			_iter_begin_4392668864:;
			{
				(*this)._field_table->_field_impls=jule::append((*this)._field_table->_field_impls,jule::Slice<jule::Ref<_206b07093_Impl>>({_206a20e79_build_impl(_206a20e79_decl)}));
			}
			_iter_next_4392668864:;
			++_range_begin;
			if (_range_begin != _range_end) { _206a20e79_decl = *_range_begin; goto _iter_begin_4392668864; }
			_iter_end_4392668864:;
		}
	}
}



inline void _206a20e79_SymbolBuilder::_method_push_directive_pass(jule::Ref<_2053703bd_Directive> _67442_d) {
	_206a20e79_Pass _67517_pass = _206a20e79_Pass(_67442_d->_field_token,jule::Str());
	{
		auto _range_expr = _67442_d->_field_args;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _206a20e79_arg = *_range_begin;
			_iter_begin_4392677456:;
			{
				if (_206a20e79_arg != jule::Str("", 0)) {
					_67517_pass._field_text+=_206a20e79_arg + jule::Str(" ", 1);
				}
			}
			_iter_next_4392677456:;
			++_range_begin;
			if (_range_begin != _range_end) { _206a20e79_arg = *_range_begin; goto _iter_begin_4392677456; }
			_iter_end_4392677456:;
		}
	}
	_67517_pass._field_text=_67517_pass._field_text.trim(jule::Str(" \n\r\t\v", 5));
	(*this)._field_table->_field_passes=jule::append((*this)._field_table->_field_passes,jule::Slice<_206a20e79_Pass>({_67517_pass}));
}



inline void _206a20e79_SymbolBuilder::_method_append_top_directives(void) {
	{
		auto _range_expr = (*this)._field_ast->_field_top_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053703bd_Directive> _206a20e79_d = *_range_begin;
			_iter_begin_4392682768:;
			{
				{
					auto _match_expr{ _206a20e79_d->_field_tag };
					if (!((jule::Str("pass", 4)) == _match_expr)) { goto _case_end_4392686704; }
					_case_begin_4392686704:;
					{
						(*this)._method_push_directive_pass(_206a20e79_d);
					}
					goto _match_end_4392685920;
					_case_end_4392686704:;
					_match_end_4392685920:;
				}
			}
			_iter_next_4392682768:;
			++_range_begin;
			if (_range_begin != _range_end) { _206a20e79_d = *_range_begin; goto _iter_begin_4392682768; }
			_iter_end_4392682768:;
		}
	}
}



inline void _206a20e79_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_1da2aa301_SymbolTable>(new( std::nothrow ) _1da2aa301_SymbolTable(this->self->_field_ast->_field_file,jule::Slice<_206a20e79_Pass>(),jule::Slice<jule::Ref<_206e66325_ImportInfo>>(),jule::Slice<jule::Ref<_1d9e22661_Var>>(),jule::Slice<jule::Ref<_1da411226_TypeAlias>>(),jule::Slice<jule::Ref<_2053cdc01_Struct>>(),jule::Slice<jule::Ref<_2053ddd54_Fn>>(),jule::Slice<jule::Ref<_2065895c5_Trait>>(),jule::Slice<jule::Ref<_206b06c0d_Enum>>(),jule::Slice<jule::Ref<_206b07093_Impl>>()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _206a20e79_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2065895c5_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _2065895c5_Trait::_method_equals(jule::Ref<_1da411226_TypeKind> _2521_other) {
	jule::Ref<_2065895c5_Trait> _2613_trt = (_2521_other).alloc->_method_trt();
	if ((!(jule::real(_2613_trt)))) {
		return false;
	}
	return (&((*this))) == (_2613_trt).alloc;
}



inline jule::Bool _2065895c5_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



inline jule::Ref<_2053ddd54_Fn> _2065895c5_Trait::_method_find_method(jule::Str _4034_ident) {
	{
		auto _range_expr = (*this)._field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _2065895c5_f = *_range_begin;
			_iter_begin_4392707616:;
			{
				if (_2065895c5_f->_field_ident == _4034_ident) {
					return _2065895c5_f;
				}
			}
			_iter_next_4392707616:;
			++_range_begin;
			if (_range_begin != _range_end) { _2065895c5_f = *_range_begin; goto _iter_begin_4392707616; }
			_iter_end_4392707616:;
		}
	}
	return jule::new_ref<_2053ddd54_Fn>();
}







std::ostream &operator<<(std::ostream &_Stream, const _2065895c5_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _206b06c0d_EnumItem::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_value)));
}







std::ostream &operator<<(std::ostream &_Stream, const _206b06c0d_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _206b06c0d_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _206b06c0d_Enum::_method_equals(jule::Ref<_1da411226_TypeKind> _3521_other) {
	jule::Ref<_206b06c0d_Enum> _3613_enm = (_3521_other).alloc->_method_enm();
	if ((!(jule::real(_3613_enm)))) {
		return false;
	}
	return (&((*this))) == (_3613_enm).alloc;
}



inline jule::Ref<_206b06c0d_EnumItem> _206b06c0d_Enum::_method_find_item(jule::Str _4732_ident) {
	{
		auto _range_expr = (*this)._field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b06c0d_EnumItem> _206b06c0d_item = *_range_begin;
			_iter_begin_4392721920:;
			{
				if (_206b06c0d_item->_field_ident == _4732_ident) {
					return _206b06c0d_item;
				}
			}
			_iter_next_4392721920:;
			++_range_begin;
			if (_range_begin != _range_end) { _206b06c0d_item = *_range_begin; goto _iter_begin_4392721920; }
			_iter_end_4392721920:;
		}
	}
	return jule::new_ref<_206b06c0d_EnumItem>();
}







std::ostream &operator<<(std::ostream &_Stream, const _206b06c0d_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _206b07093_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _206b07093_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b07093_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _206b0557a_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _206b0557a_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_Recover &_Src) {
	_Stream << "Recover{";
	_Stream << "handler:" << _Src._field_handler << ", ";
	_Stream << "handler_expr:" << _Src._field_handler_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "scope_owner:" << _Src._field_scope_owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_206e66325_ImportInfo> _206b0557a_ScopeChecker::_method_find_package(jule::Str _37735_ident) {
	return (*this)._field_s->_method_find_package(_37735_ident);
}



inline jule::Ref<_206e66325_ImportInfo> _206b0557a_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)> _38737_selector) {
	return (*this)._field_s->_method_select_package(_38737_selector);
}



inline jule::Ref<_1d9e22661_Var> _206b0557a_ScopeChecker::_method_find_var(jule::Str _39831_ident,jule::Bool _39843_cpp_linked) {
	
	jule::Ref<_1d9e22661_Var> _40117_v = (*this)._field_table->_method___find_var(_39831_ident,_39843_cpp_linked,true);
	if (jule::real(_40117_v)) {
		return _40117_v;
	}
	jule::Ref<_206b0557a_ScopeChecker> _40617_parent = (*this)._field_parent;
	_iter_begin_4392755600:;
	if (!(jule::real(_40617_parent))) { goto _iter_end_4392755600; }
	{
		_40117_v=_40617_parent->_field_table->_method___find_var(_39831_ident,_39843_cpp_linked,true);
		if (jule::real(_40117_v)) {
			return _40117_v;
		}
		_40617_parent=_40617_parent->_field_parent;
	}
	_iter_next_4392755600:;
	goto _iter_begin_4392755600;
	_iter_end_4392755600:;
	return (*this)._field_s->_method_find_var(_39831_ident,_39843_cpp_linked);
}



inline jule::Ref<_1da411226_TypeAlias> _206b0557a_ScopeChecker::_method_find_type_alias(jule::Str _42538_ident,jule::Bool _42550_cpp_linked) {
	
	jule::Ref<_1da411226_TypeAlias> _42817_ta = (*this)._field_table->_method___find_type_alias(_42538_ident,_42550_cpp_linked,true);
	if (jule::real(_42817_ta)) {
		return _42817_ta;
	}
	jule::Ref<_206b0557a_ScopeChecker> _43317_parent = (*this)._field_parent;
	_iter_begin_4392770080:;
	if (!(jule::real(_43317_parent))) { goto _iter_end_4392770080; }
	{
		_42817_ta=_43317_parent->_field_table->_method___find_type_alias(_42538_ident,_42550_cpp_linked,true);
		if (jule::real(_42817_ta)) {
			return _42817_ta;
		}
		_43317_parent=_43317_parent->_field_parent;
	}
	_iter_next_4392770080:;
	goto _iter_begin_4392770080;
	_iter_end_4392770080:;
	return (*this)._field_s->_method_find_type_alias(_42538_ident,_42550_cpp_linked);
}



inline jule::Ref<_2053cdc01_Struct> _206b0557a_ScopeChecker::_method_find_struct(jule::Str _45034_ident,jule::Bool _45046_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_45034_ident,_45046_cpp_linked);
}



inline jule::Ref<_2053ddd54_Fn> _206b0557a_ScopeChecker::_method_find_fn(jule::Str _45930_ident,jule::Bool _45942_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_45930_ident,_45942_cpp_linked);
}



inline jule::Ref<_2065895c5_Trait> _206b0557a_ScopeChecker::_method_find_trait(jule::Str _46833_ident) {
	return (*this)._field_s->_method_find_trait(_46833_ident);
}



inline jule::Ref<_206b06c0d_Enum> _206b0557a_ScopeChecker::_method_find_enum(jule::Str _47732_ident) {
	return (*this)._field_s->_method_find_enum(_47732_ident);
}



inline jule::Bool _206b0557a_ScopeChecker::_method_is_unsafe(void) {
	jule::Ref<_206b0557a_ScopeChecker> _48517_scope = this->self;
	_julec_label_iter:;
	if (_48517_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (jule::real(_48517_scope->_field_parent)) {
		_48517_scope=_48517_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _206b0557a_ScopeChecker::_method_is_root(void) {
	return (!(jule::real((*this)._field_parent))) || jule::real((*this)._field_owner);
}



inline jule::Ref<_206b0557a_ScopeChecker> _206b0557a_ScopeChecker::_method_get_root(void) {
	jule::Ref<_206b0557a_ScopeChecker> _50717_root = this->self;
	_iter_begin_4392809504:;
	if (!(jule::real(_50717_root->_field_parent) && (!(jule::real(_50717_root->_field_owner))))) { goto _iter_end_4392809504; }
	{
		_50717_root=_50717_root->_field_parent;
	}
	_iter_next_4392809504:;
	goto _iter_begin_4392809504;
	_iter_end_4392809504:;
	return _50717_root;
}



inline jule::Ref<_206b0557a_Label> _206b0557a_ScopeChecker::_method_find_label(jule::Str _51729_ident) {
	{
		auto _range_expr = (*this)._field_scope->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _206b0557a_st = *_range_begin;
			_iter_begin_4392814800:;
			{
				{
					auto _match_expr{ _206b0557a_st };
					if (!(_match_expr.type_is<jule::Ref<_206b0557a_Label>>())) { goto _case_end_4392816688; }
					_case_begin_4392816688:;
					{
						jule::Ref<_206b0557a_Label> _52125_label = _206b0557a_st.operator jule::Ref<_206b0557a_Label>();
						if (_52125_label->_field_ident == _51729_ident) {
							return _52125_label;
						}
					}
					goto _match_end_4392816128;
					_case_end_4392816688:;
					_match_end_4392816128:;
				}
			}
			_iter_next_4392814800:;
			++_range_begin;
			if (_range_begin != _range_end) { _206b0557a_st = *_range_begin; goto _iter_begin_4392814800; }
			_iter_end_4392814800:;
		}
	}
	return jule::new_ref<_206b0557a_Label>();
}



inline jule::Ref<_206b0557a_ScopeLabel> _206b0557a_ScopeChecker::_method_find_label_scope(jule::Str _53336_ident) {
	jule::Ref<_206b0557a_ScopeLabel> _53417_label = this->self->_method_find_label_all(_53336_ident);
	if (jule::real(_53417_label) && ((_53417_label->_field_scope).alloc == (this->self).alloc)) {
		return _53417_label;
	}
	return jule::new_ref<_206b0557a_ScopeLabel>();
}



inline jule::Ref<_206b0557a_ScopeLabel> _206b0557a_ScopeChecker::_method_find_label_all(jule::Str _54533_ident) {
	{
		auto _range_expr = (*this)._field_labels.get();
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b0557a_ScopeLabel> _206b0557a_lbl = *_range_begin;
			_iter_begin_4392826736:;
			{
				if (_206b0557a_lbl->_field_label->_field_ident == _54533_ident) {
					return _206b0557a_lbl;
				}
			}
			_iter_next_4392826736:;
			++_range_begin;
			if (_range_begin != _range_end) { _206b0557a_lbl = *_range_begin; goto _iter_begin_4392826736; }
			_iter_end_4392826736:;
		}
	}
	return jule::new_ref<_206b0557a_ScopeLabel>();
}



inline jule::Bool _206b0557a_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _55738_itself,jule::Str _55755_ident) {
	jule::Ref<_1d9e22661_Var> _55813_v = (*this)._method_find_var(_55755_ident,false);
	if (jule::real(_55813_v) && (((jule::Uintptr)((_55813_v).alloc)) != _55738_itself)) {
		if ((!(jule::real(_55813_v->_field_scope)))) {
			return false;
		}
		return ((_55813_v->_field_scope).alloc == ((*this)._field_scope).alloc) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	jule::Ref<_1da411226_TypeAlias> _56613_ta = (*this)._method_find_type_alias(_55755_ident,false);
	if (jule::real(_56613_ta) && (((jule::Uintptr)((_56613_ta).alloc)) != _55738_itself)) {
		if ((!(jule::real(_56613_ta->_field_scope)))) {
			return false;
		}
		return ((_56613_ta->_field_scope).alloc == ((*this)._field_tree).alloc) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	return false;
}



inline void _206b0557a_ScopeChecker::_method_check_var_decl(jule::Ref<_2053703bd_VarDecl> _57738_decl) {
	jule::Ref<_1d9e22661_Var> _57817_v = _206a20e79_build_var(_57738_decl);
	_57817_v->_field_scope=this->self->_field_scope;
	__JULE_DEFER({
		this->self->_field_table->_field_vars=jule::append(this->self->_field_table->_field_vars,jule::Slice<jule::Ref<_1d9e22661_Var>>({_57817_v}));
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_57817_v)}));
	});
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_57817_v).alloc)),_57817_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_57817_v->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_57817_v->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_var_decl(_57817_v,this->self);
	if ((!(_57817_v->_method_is_type_inferred())) && ((!(jule::real(_57817_v->_field_kind))) || (!(jule::real(_57817_v->_field_kind->_field_kind))))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_57817_v,this->self);
}



inline void _206b0557a_ScopeChecker::_method_check_type_alias_decl(jule::Ref<_2053703bd_TypeAliasDecl> _59945_decl) {
	jule::Ref<_1da411226_TypeAlias> _60017_ta = _206a20e79_build_type_alias(_59945_decl);
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_60017_ta).alloc)),_60017_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_60017_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_60017_ta->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_type_alias_decl(_60017_ta,this->self);
	this->self->_field_table->_field_type_aliases=jule::append(this->self->_field_table->_field_type_aliases,jule::Slice<jule::Ref<_1da411226_TypeAlias>>({_60017_ta}));
}



inline jule::Ref<_206b0557a_Scope> _206b0557a_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_206b0557a_Scope>(new( std::nothrow ) _206b0557a_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _206b0557a_ScopeChecker::_method_check_child_ssc(jule::Ref<_2053703bd_ScopeTree> _61639_tree,jule::Ref<_206b0557a_Scope> _61661_s,jule::Ref<_206b0557a_ScopeChecker> _61676_ssc) {
	_61676_ssc->_field_parent=this->self;
	_61676_ssc->_method_check(_61639_tree,_61661_s);
}



inline jule::Ref<_206b0557a_Scope> _206b0557a_ScopeChecker::_method_check_child_sc(jule::Ref<_2053703bd_ScopeTree> _62138_tree,jule::Ref<_206b0557a_ScopeChecker> _62160_ssc) {
	jule::Ref<_206b0557a_Scope> _62217_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_62138_tree,_62217_s,_62160_ssc);
	return _62217_s;
}



inline jule::Ref<_206b0557a_Scope> _206b0557a_ScopeChecker::_method_check_child(jule::Ref<_2053703bd_ScopeTree> _62735_tree) {
	jule::Ref<_206b0557a_ScopeChecker> _62817_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_62735_tree,_62817_ssc);
}



inline void _206b0557a_ScopeChecker::_method_check_anon_scope(jule::Ref<_2053703bd_ScopeTree> _63240_tree) {
	jule::Ref<_206b0557a_Scope> _63317_s = this->self->_method_check_child(_63240_tree);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_63317_s)}));
}



inline jule::Bool _206b0557a_ScopeChecker::_method_try_call_recover(jule::Ref<_1da2d3bdc_Data> _63740_d) {
	{
		auto _match_expr{ _63740_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_Recover>>())) { goto _case_end_4392908896; }
		goto _match_end_4392907920;
		_case_end_4392908896:;
		_case_begin_4392908560:;
		{
			return false;
		}
		goto _match_end_4392907920;
		_case_end_4392908560:;
		_match_end_4392907920:;
	}
	jule::Ref<_206b0557a_Recover> _64317_rec = _63740_d->_field_model.operator jule::Ref<_206b0557a_Recover>();
	_64317_rec->_field_handler=_63740_d->_field_kind->_method_fnc();
	_64317_rec->_field_scope=jule::new_struct<_206b0557a_Scope>(new( std::nothrow ) _206b0557a_Scope());
	_64317_rec->_field_scope_owner=this->self->_method_get_root()->_field_owner;
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_64317_rec)}));
	this->self->_field_tree->_field_stmts=this->self->_field_tree->_field_stmts.slice(static_cast<jule::Int>(this->self->_field_i + 1LL));
	this->self->_field_scope=_64317_rec->_field_scope;
	this->self->_method_check_tree();
	return true;
}



inline void _206b0557a_ScopeChecker::_method_check_expr(jule::Ref<_2053703bd_Expr> _65634_expr) {
	jule::Ref<_1da2d3bdc_Data> _65717_d = this->self->_field_s->_method_eval(_65634_expr,this->self);
	if ((!(jule::real(_65717_d)))) {
		return;
	}
	if (_65634_expr->_method_is_fn_call()) {
		jule::Bool _66317_ok = this->self->_method_try_call_recover(_65717_d);
		if (_66317_ok) {
			return;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_65717_d)}));
}



inline jule::Ref<_206b0557a_If> _206b0557a_ScopeChecker::_method_check_if(jule::Ref<_2053703bd_If> _67232_i) {
	jule::Ref<_206b0557a_Scope> _67317_s = this->self->_method_check_child(_67232_i->_field_scope);
	jule::Ref<_1da2d3bdc_Data> _67517_d = this->self->_field_s->_method_eval(_67232_i->_field_expr,this->self);
	if ((!(jule::real(_67517_d)))) {
		return jule::new_ref<_206b0557a_If>();
	}
	jule::Ref<_1da411226_Prim> _68013_prim = _67517_d->_field_kind->_method_prim();
	if ((!(jule::real(_68013_prim)))) {
		this->self->_field_s->_method_push_err(_67232_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_206b0557a_If>();
	}
	if ((!(_68013_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_67232_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_206b0557a_If>();
	}
	return jule::new_struct<_206b0557a_If>(new( std::nothrow ) _206b0557a_If(_67517_d->_field_model,_67317_s));
}



inline jule::Ref<_206b0557a_Else> _206b0557a_ScopeChecker::_method_check_else(jule::Ref<_2053703bd_Else> _69734_e) {
	jule::Ref<_206b0557a_Scope> _69817_s = this->self->_method_check_child(_69734_e->_field_scope);
	return jule::new_struct<_206b0557a_Else>(new( std::nothrow ) _206b0557a_Else(_69817_s));
}



inline void _206b0557a_ScopeChecker::_method_check_conditional(jule::Ref<_2053703bd_Conditional> _70441_conditional) {
	jule::Ref<_206b0557a_Conditional> _70517_c = jule::new_struct<_206b0557a_Conditional>(new( std::nothrow ) _206b0557a_Conditional());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_70517_c)}));
	_70517_c->_field_elifs=jule::Slice<jule::Ref<_206b0557a_If>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_70441_conditional->_field_tail.len() + 1LL)));
	_70517_c->_field_elifs[0LL]=this->self->_method_check_if(_70441_conditional->_field_head);
	{
		auto _range_expr = _70441_conditional->_field_tail;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206b0557a_i = 0;
			jule::Ref<_2053703bd_If> _206b0557a_elif = *_range_begin;
			_iter_begin_4392961456:;
			{
				_70517_c->_field_elifs[static_cast<jule::Int>(_206b0557a_i + 1LL)]=this->self->_method_check_if(_206b0557a_elif);
			}
			_iter_next_4392961456:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206b0557a_i; _206b0557a_elif = *_range_begin; goto _iter_begin_4392961456; }
			_iter_end_4392961456:;
		}
	}
	if (jule::real(_70441_conditional->_field_default)) {
		_70517_c->_field_default=this->self->_method_check_else(_70441_conditional->_field_default);
	}
}



inline jule::Ref<_206b0557a_Scope> _206b0557a_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _72039_it,jule::Ref<_2053703bd_ScopeTree> _72056_tree,jule::Ref<_206b0557a_ScopeChecker> _72078_ssc) {
	_72078_ssc->_field_it=_72039_it;
	return this->self->_method_check_child_sc(_72056_tree,_72078_ssc);
}



inline jule::Ref<_206b0557a_Scope> _206b0557a_ScopeChecker::_method_check_iter_scope(jule::Uintptr _72536_it,jule::Ref<_2053703bd_ScopeTree> _72553_tree) {
	jule::Ref<_206b0557a_ScopeChecker> _72617_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_72536_it,_72553_tree,_72617_ssc);
}



inline void _206b0557a_ScopeChecker::_method_check_inf_iter(jule::Ref<_2053703bd_Iter> _73038_it) {
	jule::Ref<_206b0557a_InfIter> _73117_kind = jule::new_struct<_206b0557a_InfIter>(new( std::nothrow ) _206b0557a_InfIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_73117_kind)}));
	_73117_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_73117_kind).alloc)),_73038_it->_field_scope);
}



inline void _206b0557a_ScopeChecker::_method_check_while_iter(jule::Ref<_2053703bd_Iter> _73840_it) {
	jule::Ref<_2053703bd_WhileKind> _73917_wh = _73840_it->_field_kind.operator jule::Ref<_2053703bd_WhileKind>();
	if ((!(jule::real(_73917_wh->_field_expr))) && (_73917_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_73840_it);
		return;
	}
	jule::Ref<_206b0557a_WhileIter> _74517_kind = jule::new_struct<_206b0557a_WhileIter>(new( std::nothrow ) _206b0557a_WhileIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_74517_kind)}));
	_74517_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_74517_kind).alloc)),_73840_it->_field_scope);
	if (jule::real(_73917_wh->_field_expr)) {
		jule::Ref<_1da2d3bdc_Data> _75221_d = this->self->_field_s->_method_eval(_73917_wh->_field_expr,this->self);
		if ((!(jule::real(_75221_d)))) {
			return;
		}
		jule::Ref<_1da411226_Prim> _75717_prim = _75221_d->_field_kind->_method_prim();
		if ((!(jule::real(_75717_prim)))) {
			this->self->_field_s->_method_push_err(_73840_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		if ((!(_75717_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_73840_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		_74517_kind->_field_expr=_75221_d->_field_model;
	}
	if (_73917_wh->_method_is_while_next()) {
		if ((!(_206b0557a_is_valid_ast_st_for_next_st(_73917_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_73917_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			return;
		}
		jule::I64 _77717_n = this->self->_field_scope->_field_stmts.len();
		this->self->_method_check_node(_73917_wh->_field_next);
		if (_77717_n < this->self->_field_scope->_field_stmts.len()) {
			jule::Any _78025_st = this->self->_field_scope->_field_stmts[static_cast<jule::Int>(_77717_n)];
			this->self->_field_scope->_field_stmts=this->self->_field_scope->_field_stmts.slice(0LL,static_cast<jule::Int>(_77717_n));
			if ((!(_206b0557a_is_valid_st_for_next_st(_78025_st)))) {
				this->self->_field_s->_method_push_err(_73917_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			}
			_74517_kind->_field_next=_78025_st;
		}
	}
}



inline void _206b0557a_ScopeChecker::_method_check_range_iter(jule::Ref<_2053703bd_Iter> _79140_it) {
	jule::Ref<_2053703bd_RangeKind> _79217_rang = _79140_it->_field_kind.operator jule::Ref<_2053703bd_RangeKind>();
	jule::Ref<_1da2d3bdc_Data> _79417_d = this->self->_field_s->_method_eval(_79217_rang->_field_expr,this->self);
	if ((!(jule::real(_79417_d)))) {
		return;
	}
	jule::Ref<_206b0557a_RangeIter> _79917_kind = jule::new_struct<_206b0557a_RangeIter>(new( std::nothrow ) _206b0557a_RangeIter(_79417_d,jule::Ref<_206b0557a_Scope>(),jule::Ref<_1d9e22661_Var>(),jule::Ref<_1d9e22661_Var>()));
	_1da120d15_RangeChecker _80317_rc = _1da120d15_RangeChecker(this->self,_79217_rang,_79917_kind,_79417_d);
	jule::Bool _80913_ok = _80317_rc._method_check();
	if ((!(_80913_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_79917_kind)}));
	jule::Ref<_206b0557a_ScopeChecker> _81617_ssc = this->self->_method_new_child_checker();
	if (jule::real(_79917_kind->_field_key_a)) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_79917_kind->_field_key_a->_field_ident)) {
			this->self->_field_s->_method_push_err(_79917_kind->_field_key_a->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_79917_kind->_field_key_a->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
		}
		_81617_ssc->_field_table->_field_vars=jule::append(_81617_ssc->_field_table->_field_vars,jule::Slice<jule::Ref<_1d9e22661_Var>>({_79917_kind->_field_key_a}));
	}
	if (jule::real(_79917_kind->_field_key_b)) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_79917_kind->_field_key_b->_field_ident)) {
			this->self->_field_s->_method_push_err(_79917_kind->_field_key_b->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_79917_kind->_field_key_b->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
		}
		_81617_ssc->_field_table->_field_vars=jule::append(_81617_ssc->_field_table->_field_vars,jule::Slice<jule::Ref<_1d9e22661_Var>>({_79917_kind->_field_key_b}));
	}
	_79917_kind->_field_scope=this->self->_method_check_iter_scope_sc(((jule::Uintptr)((_79917_kind).alloc)),_79140_it->_field_scope,_81617_ssc);
}



inline void _206b0557a_ScopeChecker::_method_check_iter(jule::Ref<_2053703bd_Iter> _83734_it) {
	if (_83734_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_83734_it);
		return;
	}
	{
		auto _match_expr{ _83734_it->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_WhileKind>>())) { goto _case_end_4393068512; }
		_case_begin_4393068512:;
		{
			this->self->_method_check_while_iter(_83734_it);
		}
		goto _match_end_4393066672;
		_case_end_4393068512:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_RangeKind>>())) { goto _case_end_4393067984; }
		_case_begin_4393067984:;
		{
			this->self->_method_check_range_iter(_83734_it);
		}
		goto _match_end_4393066672;
		_case_end_4393067984:;
		_case_begin_4393065232:;
		{
			jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
		}
		goto _match_end_4393066672;
		_case_end_4393065232:;
		_match_end_4393066672:;
	}
}



inline jule::Bool _206b0557a_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _85042_it) {
	jule::Ref<_206b0557a_ScopeChecker> _85117_scope = this->self;
	_julec_label_iter:;
	if (_85117_scope->_field_it == _85042_it) {
		return true;
	}
	if (jule::real(_85117_scope->_field_parent)) {
		_85117_scope=_85117_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _206b0557a_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _86643_ptr) {
	jule::Ref<_206b0557a_ScopeChecker> _86717_scope = this->self;
	_julec_label_iter:;
	if (_86717_scope->_field_it == _86643_ptr) {
		return true;
	}
	if (_86717_scope->_field_cse != 0LL) {
		jule::Uintptr _87517_mtch = ((jule::Uintptr)((((_206b0557a_Case*)(_86717_scope->_field_cse))->_field_owner).alloc));
		if (_87517_mtch == _86643_ptr) {
			return true;
		}
	}
	if (jule::real(_86717_scope->_field_parent)) {
		_86717_scope=_86717_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ref<_206b0557a_ContSt> _206b0557a_ScopeChecker::_method_check_cont_valid_scope(jule::Ref<_2053703bd_ContSt> _88941_c) {
	if (_88941_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_206b0557a_ContSt>(new( std::nothrow ) _206b0557a_ContSt());
	}
	_206b0557a_ScopeChecker _89417_scope = (*this);
	_julec_label_iter:;
	{
		if (!((((_89417_scope._field_it == 0LL) && jule::real(_89417_scope._field_parent)) && (!(jule::real(_89417_scope._field_owner)))))) { goto _case_end_4393096208; }
		_case_begin_4393096208:;
		{
			_89417_scope=_89417_scope._field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4393096032;
		_case_end_4393096208:;
		if (!((_89417_scope._field_it != 0LL))) { goto _case_end_4393096336; }
		_case_begin_4393096336:;
		{
			return jule::new_struct<_206b0557a_ContSt>(new( std::nothrow ) _206b0557a_ContSt(_89417_scope._field_it));
		}
		goto _match_end_4393096032;
		_case_end_4393096336:;
		_match_end_4393096032:;
	}
	(*this)._field_s->_method_push_err(_88941_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>({}));
	return jule::new_ref<_206b0557a_ContSt>();
}



inline void _206b0557a_ScopeChecker::_method_check_cont(jule::Ref<_2053703bd_ContSt> _90930_c) {
	jule::Ref<_206b0557a_ContSt> _91017_cont = this->self->_method_check_cont_valid_scope(_90930_c);
	if ((!(jule::real(_91017_cont)))) {
		return;
	}
	if (_90930_c->_field_label._field_id != 0LLU) {
		jule::Ref<_206b0557a_ScopeLabel> _91621_label = _206b0557a_find_label_parent(_90930_c->_field_label._field_kind,this->self->_field_parent);
		if ((!(jule::real(_91621_label)))) {
			this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_90930_c->_field_label._field_kind)}));
			return;
		}
		_91621_label->_field_used=true;
		if ((_91621_label->_field_pos + 1LL) >= _91621_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _92917_i = _91621_label->_field_pos + 1LL;
		if (_92917_i >= _91621_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		} else {
			jule::Any _93325_st = _91621_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_92917_i)];
			{
				auto _match_expr{ _93325_st };
				if (!(_match_expr.type_is<jule::Ref<_206b0557a_InfIter>>())) { goto _case_end_4393128304; }
				_case_begin_4393128304:;
				{
					_91017_cont->_field_it=((jule::Uintptr)((_93325_st.operator jule::Ref<_206b0557a_InfIter>()).alloc));
				}
				goto _match_end_4393125088;
				_case_end_4393128304:;
				if (!(_match_expr.type_is<jule::Ref<_206b0557a_RangeIter>>())) { goto _case_end_4393125968; }
				_case_begin_4393125968:;
				{
					_91017_cont->_field_it=((jule::Uintptr)((_93325_st.operator jule::Ref<_206b0557a_RangeIter>()).alloc));
				}
				goto _match_end_4393125088;
				_case_end_4393125968:;
				if (!(_match_expr.type_is<jule::Ref<_206b0557a_WhileIter>>())) { goto _case_end_4393126080; }
				_case_begin_4393126080:;
				{
					_91017_cont->_field_it=((jule::Uintptr)((_93325_st.operator jule::Ref<_206b0557a_WhileIter>()).alloc));
				}
				goto _match_end_4393125088;
				_case_end_4393126080:;
				_case_begin_4393125600:;
				{
					this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4393125088;
				_case_end_4393125600:;
				_match_end_4393125088:;
			}
		}
	}
	if (_91017_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_91017_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_91017_cont)}));
}



inline void _206b0557a_ScopeChecker::_method_check_label(jule::Ref<_2053703bd_LabelSt> _95235_l) {
	if (jule::real(this->self->_method_find_label(_95235_l->_field_ident))) {
		this->self->_field_s->_method_push_err(_95235_l->_field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_95235_l->_field_ident)}));
		return;
	}
	jule::Ref<_206b0557a_Label> _95817_label = jule::new_struct<_206b0557a_Label>(new( std::nothrow ) _206b0557a_Label(_95235_l->_field_ident));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_95817_label)}));
	this->self->_field_labels=jule::append(this->self->_field_labels.get(),jule::Slice<jule::Ref<_206b0557a_ScopeLabel>>({jule::new_struct<_206b0557a_ScopeLabel>(new( std::nothrow ) _206b0557a_ScopeLabel(_95235_l->_field_token,_95817_label,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL),this->self,jule::Bool()))}));
}



inline void _206b0557a_ScopeChecker::_method_push_goto(jule::Ref<_2053703bd_GotoSt> _97133_gt) {
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_206b0557a_GotoSt>(new( std::nothrow ) _206b0557a_GotoSt(_97133_gt->_field_label._field_kind)))}));
	this->self->_field_gotos=jule::append(this->self->_field_gotos.get(),jule::Slice<jule::Ref<_206b0557a_ScopeGoto>>({jule::new_struct<_206b0557a_ScopeGoto>(new( std::nothrow ) _206b0557a_ScopeGoto(_97133_gt,this->self,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL)))}));
}



inline void _206b0557a_ScopeChecker::_method_check_postfix(jule::Ref<_2053703bd_AssignSt> _98337_a) {
	if (_98337_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_98337_a->_field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1da2d3bdc_Data> _98917_d = this->self->_field_s->_method_eval(_98337_a->_field_left[0LL]->_field_expr,this->self);
	if ((!(jule::real(_98917_d)))) {
		return;
	}
	_206b0557a_check_assign(this->self->_field_s,_98917_d,jule::new_ref<_1da2d3bdc_Data>(),_98337_a->_field_setter);
	if (jule::real(_98917_d->_field_kind->_method_ptr())) {
		jule::Ref<_1da411226_Ptr> _99721_ptr = _98917_d->_field_kind->_method_ptr();
		if ((!(_99721_ptr->_method_is_unsafe())) && (!(this->self->_method_is_unsafe()))) {
			this->self->_field_s->_method_push_err(_98337_a->_field_left[0LL]->_field_expr->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			return;
		}
	}
	jule::Ref<_1da411226_TypeKind> _100417_check_t = _98917_d->_field_kind;
	if (jule::real(_98917_d->_field_kind->_method_ref())) {
		_100417_check_t=_98917_d->_field_kind->_method_ref()->_field_elem;
	}
	if ((!(jule::real(_100417_check_t->_method_prim()))) || (!(_1a8a8de8a_is_num(_100417_check_t->_method_prim()->_field_kind)))) {
		this->self->_field_s->_method_push_err(_98337_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_98337_a->_field_setter._field_kind),jule::Any(_98917_d->_field_kind->_method_to_str())}));
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_206b0557a_Postfix>(new( std::nothrow ) _206b0557a_Postfix(_98917_d->_field_model,_98337_a->_field_setter._field_kind)))}));
}



inline jule::Bool _206b0557a_ScopeChecker::_method_is_new_assign_ident(jule::Str _102038_ident) {
	if (_20542560a_is_ignore_ident(_102038_ident) || (_102038_ident == jule::Str("", 0))) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_102038_ident,false) == nullptr;
}



inline void _206b0557a_ScopeChecker::_method_check_single_assign(jule::Ref<_2053703bd_AssignSt> _102843_a) {
	jule::Ref<_1da2d3bdc_Data> _102917_l = jule::new_ref<_1da2d3bdc_Data>();
	jule::Ref<_1da2d3bdc_Data> _103017_r = jule::new_ref<_1da2d3bdc_Data>();
	if ((!(_20542560a_is_ignore_ident(_102843_a->_field_left[0LL]->_field_ident)))) {
		_102917_l=this->self->_field_s->_method_eval(_102843_a->_field_left[0LL]->_field_expr,this->self);
		if ((!(jule::real(_102917_l)))) {
			return;
		}
	}
	if (jule::real(_102917_l)) {
		_103017_r=this->self->_field_s->_method_evalp(_102843_a->_field_right,this->self,_102917_l->_field_kind);
	} else {
		_103017_r=this->self->_field_s->_method_eval(_102843_a->_field_right,this->self);
	}
	if ((!(jule::real(_103017_r)))) {
		return;
	}
	if ((!(jule::real(_102917_l)))) {
		if (_103017_r->_field_kind->_method_void()) {
			this->self->_field_s->_method_push_err(_102843_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_103017_r)}));
		return;
	}
	if ((!(_206b0557a_check_assign(this->self->_field_s,_102917_l,_103017_r,_102843_a->_field_setter)))) {
		return;
	}
	if (jule::real(_103017_r->_field_kind->_method_tup())) {
		this->self->_field_s->_method_push_err(_102843_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_206b0557a_Assign>(new( std::nothrow ) _206b0557a_Assign(_102917_l->_field_model,_103017_r->_field_model,_102843_a->_field_setter._field_kind)))}));
	if ((_102843_a->_field_setter._field_kind != jule::Str("=", 1)) && (!(_103017_r->_method_is_const()))) {
		_102843_a->_field_setter._field_kind=_102843_a->_field_setter._field_kind.slice(0LL,static_cast<jule::Int>(_102843_a->_field_setter._field_kind.len() - 1LL));
		_1da2d3bdc_BinopSolver _107521_solver = _1da2d3bdc_BinopSolver(jule::new_struct<_1da2d3bdc_Eval>(new( std::nothrow ) _1da2d3bdc_Eval(this->self->_field_s,this->self,jule::Ref<_1da411226_TypeKind>(),this->self->_method_is_unsafe(),jule::Ref<_1d9e22661_Var>())),jule::Ref<_1da2d3bdc_Data>(),jule::Ref<_1da2d3bdc_Data>(),_102843_a->_field_setter);
		_103017_r=_107521_solver._method_solve_explicit(_102917_l,_103017_r);
		if ((!(jule::real(_103017_r)))) {
			return;
		}
		_102843_a->_field_setter._field_kind+=jule::Str("=", 1);
	}
	_1da120d15_AssignTypeChecker _109117_checker = _1da120d15_AssignTypeChecker(this->self->_field_s,_102917_l->_field_kind,_103017_r,_102843_a->_field_setter,true);
	_109117_checker._method_check();
}



inline void _206b0557a_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ref<_206b0557a_MultiAssign> _110157_st,jule::Ref<_2053703bd_AssignSt> _110213_a,jule::Ref<_2053703bd_AssignLeft> _110231_lexpr,jule::Ref<_1da2d3bdc_Data> _110255_l,jule::Ref<_1da2d3bdc_Data> _110269_r) {
	if (_20542560a_is_ignore_ident(_110231_lexpr->_field_ident)) {
		if (_110269_r->_field_kind->_method_void()) {
			(*this)._field_s->_method_push_err(_110213_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		_110157_st->_field_l=jule::append(_110157_st->_field_l,jule::Slice<jule::Any>({jule::Any(nullptr)}));
		return;
	}
	if (_110213_a->_field_declarative && (*this)._method_is_new_assign_ident(_110231_lexpr->_field_ident)) {
		jule::Ref<_1d9e22661_Var> _111421_v = jule::new_struct<_1d9e22661_Var>(new( std::nothrow ) _1d9e22661_Var((*this)._field_scope,_110231_lexpr->_field_token,_110231_lexpr->_field_ident,jule::Bool(),jule::Bool(),_110231_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_110231_lexpr->_field_reference,jule::Str(),jule::Ref<_1da411226_TypeSymbol>(),jule::new_struct<_1da2d3bdc_Value>(new( std::nothrow ) _1da2d3bdc_Value(_110213_a->_field_right,_110269_r)),jule::Ref<_206a20e79_ReferenceStack>(),jule::Slice<jule::Ref<_2053703bd_Directive>>(),jule::Slice<jule::Ref<_1d9e22661_Var>>()));
		(*this)._field_s->_method_check_var(_111421_v);
		_110157_st->_field_l=jule::append(_110157_st->_field_l,jule::Slice<jule::Any>({jule::Any(_111421_v)}));
		(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ref<_1d9e22661_Var>>({_111421_v}));
		(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_111421_v)}));
		return;
	}
	if (_110231_lexpr->_field_mutable || _110231_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_110231_lexpr->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_110231_lexpr->_field_ident)}));
		(*this)._field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if ((!(_206b0557a_check_assign((*this)._field_s,_110255_l,_110269_r,_110213_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_110255_l->_field_mutable,false,_110255_l->_field_kind,_110269_r,_110213_a->_field_setter);
	_1da120d15_AssignTypeChecker _114917_checker = _1da120d15_AssignTypeChecker((*this)._field_s,_110255_l->_field_kind,_110269_r,_110213_a->_field_setter,true);
	_114917_checker._method_check();
	_110157_st->_field_l=jule::append(_110157_st->_field_l,jule::Slice<jule::Any>({_110255_l->_field_model}));
}



inline void _206b0557a_ScopeChecker::_method_check_ret_multi_assign(jule::Ref<_2053703bd_AssignSt> _116146_a) {
	jule::Ref<_1da2d3bdc_Data> _116217_rd = this->self->_field_s->_method_eval(_116146_a->_field_right,this->self);
	if ((!(jule::real(_116217_rd)))) {
		return;
	}
	jule::Slice<jule::Ref<_1da2d3bdc_Data>> _116717_r = _206b0557a_get_datas_from_tuple_data(_116217_rd);
	{
		if (!((_116146_a->_field_left.len() > _116717_r.len()))) { goto _case_end_4393299536; }
		_case_begin_4393299536:;
		{
			this->self->_field_s->_method_push_err(_116146_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4393299392;
		_case_end_4393299536:;
		if (!((_116146_a->_field_left.len() < _116717_r.len()))) { goto _case_end_4393299664; }
		_case_begin_4393299664:;
		{
			this->self->_field_s->_method_push_err(_116146_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4393299392;
		_case_end_4393299664:;
		_match_end_4393299392:;
	}
	jule::Ref<_206b0557a_MultiAssign> _117917_st = jule::new_struct<_206b0557a_MultiAssign>(new( std::nothrow ) _206b0557a_MultiAssign(jule::Slice<jule::Any>(),_116217_rd->_field_model));
	if ((!(jule::real(_116217_rd->_field_kind->_method_tup())))) {
		_117917_st->_field_r=jule::Any(jule::new_struct<_206e63542_TupleExprModel>(new( std::nothrow ) _206e63542_TupleExprModel(_116717_r)));
	}
	{
		auto _range_expr = _116146_a->_field_left;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206b0557a_i = 0;
			_iter_begin_4393309952:;
			{
				jule::Ref<_2053703bd_AssignLeft> _118821_lexpr = _116146_a->_field_left[static_cast<jule::Int>(_206b0557a_i)];
				jule::Ref<_1da2d3bdc_Data> _118921_l = jule::new_ref<_1da2d3bdc_Data>();
				if ((!(_20542560a_is_ignore_ident(_118821_lexpr->_field_ident))) && ((!(_116146_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_118821_lexpr->_field_ident))))) {
					_118921_l=this->self->_field_s->_method_eval(_118821_lexpr->_field_expr,this->self);
					if ((!(jule::real(_118921_l)))) {
						goto _iter_next_4393309952;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_117917_st,_116146_a,_118821_lexpr,_118921_l,_116717_r[static_cast<jule::Int>(_206b0557a_i)]);
			}
			_iter_next_4393309952:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206b0557a_i; goto _iter_begin_4393309952; }
			_iter_end_4393309952:;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_117917_st)}));
}



inline void _206b0557a_ScopeChecker::_method_check_multi_assign(jule::Ref<_2053703bd_AssignSt> _120442_a) {
	{
		auto _match_expr{ _120442_a->_field_right->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_FnCallExpr>>())) { goto _case_end_4393326944; }
		_case_begin_4393326944:;
		{
			this->self->_method_check_ret_multi_assign(_120442_a);
			return;
		}
		goto _match_end_4393326048;
		_case_end_4393326944:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_UnsafeExpr>>())) { goto _case_end_4393327072; }
		_case_begin_4393327072:;
		{
			{
				auto _match_expr{ _120442_a->_field_right->_field_kind.operator jule::Ref<_2053703bd_UnsafeExpr>()->_field_expr };
				if (!(_match_expr.type_is<jule::Ref<_2053703bd_FnCallExpr>>())) { goto _case_end_4393331344; }
				_case_begin_4393331344:;
				{
					this->self->_method_check_ret_multi_assign(_120442_a);
					return;
				}
				goto _match_end_4393328896;
				_case_end_4393331344:;
				_match_end_4393328896:;
			}
		}
		goto _match_end_4393326048;
		_case_end_4393327072:;
		_match_end_4393326048:;
	}
	jule::Slice<jule::Any> _121817_right = _206b0557a_get_expr_models(_120442_a->_field_right->_field_kind);
	{
		if (!((_120442_a->_field_left.len() > _121817_right.len()))) { goto _case_end_4393334320; }
		_case_begin_4393334320:;
		{
			this->self->_field_s->_method_push_err(_120442_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4393332528;
		_case_end_4393334320:;
		if (!((_120442_a->_field_left.len() < _121817_right.len()))) { goto _case_end_4393334432; }
		_case_begin_4393334432:;
		{
			this->self->_field_s->_method_push_err(_120442_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4393332528;
		_case_end_4393334432:;
		_match_end_4393332528:;
	}
	jule::Ref<_206e63542_TupleExprModel> _123017_right_tuple = jule::new_struct<_206e63542_TupleExprModel>(new( std::nothrow ) _206e63542_TupleExprModel());
	jule::Ref<_206b0557a_MultiAssign> _123217_st = jule::new_struct<_206b0557a_MultiAssign>(new( std::nothrow ) _206b0557a_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_123017_right_tuple)));
	{
		auto _range_expr = _120442_a->_field_left;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206b0557a_i = 0;
			_iter_begin_4393343792:;
			{
				jule::Ref<_2053703bd_AssignLeft> _123721_lexpr = _120442_a->_field_left[static_cast<jule::Int>(_206b0557a_i)];
				jule::Ref<_1da2d3bdc_Data> _123821_l = jule::new_ref<_1da2d3bdc_Data>();
				jule::Ref<_1da2d3bdc_Data> _123921_r = jule::new_ref<_1da2d3bdc_Data>();
				if ((!(_20542560a_is_ignore_ident(_123721_lexpr->_field_ident))) && ((!(_120442_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_123721_lexpr->_field_ident))))) {
					_123821_l=this->self->_field_s->_method_eval(_123721_lexpr->_field_expr,this->self);
					if ((!(jule::real(_123821_l)))) {
						goto _iter_next_4393343792;
					}
				}
				if (jule::real(_123821_l)) {
					jule::Ref<_2053703bd_Expr> _124925_expr = jule::new_struct<_2053703bd_Expr>(new( std::nothrow ) _2053703bd_Expr(_120442_a->_field_right->_field_token,_121817_right[static_cast<jule::Int>(_206b0557a_i)]));
					_123921_r=this->self->_field_s->_method_evalp(_124925_expr,this->self,_123821_l->_field_kind);
				} else {
					jule::Ref<_2053703bd_Expr> _125225_expr = jule::new_struct<_2053703bd_Expr>(new( std::nothrow ) _2053703bd_Expr(_120442_a->_field_right->_field_token,_121817_right[static_cast<jule::Int>(_206b0557a_i)]));
					_123921_r=this->self->_field_s->_method_eval(_125225_expr,this->self);
				}
				if ((!(jule::real(_123921_r)))) {
					goto _iter_next_4393343792;
				}
				_123017_right_tuple->_field_datas=jule::append(_123017_right_tuple->_field_datas,jule::Slice<jule::Ref<_1da2d3bdc_Data>>({_123921_r}));
				this->self->_method___process_end_part_of_multi_assign(_123217_st,_120442_a,_123721_lexpr,_123821_l,_123921_r);
			}
			_iter_next_4393343792:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206b0557a_i; goto _iter_begin_4393343792; }
			_iter_end_4393343792:;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_123217_st)}));
}



inline void _206b0557a_ScopeChecker::_method_check_assign_st(jule::Ref<_2053703bd_AssignSt> _126739_a) {
	if (_20542560a_is_postfix_op(_126739_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_126739_a);
		return;
	}
	if ((_126739_a->_field_left.len() == 1LL) && (!(_126739_a->_field_declarative))) {
		this->self->_method_check_single_assign(_126739_a);
		return;
	}
	this->self->_method_check_multi_assign(_126739_a);
}



inline jule::Ref<_206b0557a_Scope> _206b0557a_ScopeChecker::_method_check_case_scope(jule::Ref<_206b0557a_Case> _128136_c,jule::Ref<_2053703bd_ScopeTree> _128150_tree) {
	jule::Ref<_206b0557a_ScopeChecker> _128217_ssc = this->self->_method_new_child_checker();
	_128217_ssc->_field_cse=((jule::Uintptr)((_128136_c).alloc));
	return this->self->_method_check_child_sc(_128150_tree,_128217_ssc);
}



inline jule::Ref<_206b0557a_Case> _206b0557a_ScopeChecker::_method_check_case(jule::Ref<_206b0557a_Match> _128734_m,jule::Int _128745_i,jule::Ref<_2053703bd_Case> _128757_c,jule::Ref<_1da2d3bdc_Data> _128787_expr) {
	jule::Ref<_206b0557a_Case> _128817__case = _128734_m->_field_cases[static_cast<jule::Int>(_128745_i)];
	_128817__case->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_128757_c->_field_exprs.len())));
	{
		auto _range_expr = _128757_c->_field_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206b0557a_j = 0;
			jule::Ref<_2053703bd_Expr> _206b0557a_e = *_range_begin;
			_iter_begin_4393393552:;
			{
				if (_128734_m->_field_type_match) {
					jule::Ref<_1da2d3bdc_Eval> _129325_eval = jule::new_struct<_1da2d3bdc_Eval>(new( std::nothrow ) _1da2d3bdc_Eval(this->self->_field_s,this->self,jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Ref<_1d9e22661_Var>()));
					jule::Ref<_1da2d3bdc_Data> _129825_d = _129325_eval->_method_eval(_206b0557a_e);
					if (jule::real(_129825_d)) {
						_128817__case->_field_exprs[static_cast<jule::Int>(_206b0557a_j)]=jule::Any(_129825_d->_field_kind);
						if (_206b0557a_count_match_type(_128734_m,_129825_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_206b0557a_e->_field_token,jule::Str("type is already checked: @", 26),jule::Slice<jule::Any>({jule::Any(_129825_d->_field_kind->_method_to_str())}));
						}
					}
					jule::Ref<_2065895c5_Trait> _130621_trt = _128787_expr->_field_kind->_method_trt();
					if (jule::real(_130621_trt)) {
						this->self->_field_s->_method_check_type_compatibility(_128787_expr->_field_kind,_129825_d->_field_kind,_206b0557a_e->_field_token,false);
					}
					goto _iter_next_4393393552;
				}
				jule::Ref<_1da2d3bdc_Data> _131421_d = this->self->_field_s->_method_eval(_206b0557a_e,this->self);
				if ((!(jule::real(_131421_d)))) {
					goto _iter_next_4393393552;
				}
				_128817__case->_field_exprs[static_cast<jule::Int>(_206b0557a_j)]=_131421_d->_field_model;
				_1da120d15_AssignTypeChecker _132121_checker = _1da120d15_AssignTypeChecker(this->self->_field_s,_128787_expr->_field_kind,_131421_d,_206b0557a_e->_field_token,true);
				_132121_checker._method_check();
			}
			_iter_next_4393393552:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206b0557a_j; _206b0557a_e = *_range_begin; goto _iter_begin_4393393552; }
			_iter_end_4393393552:;
		}
	}
	_128817__case->_field_scope=this->self->_method_check_case_scope(_128817__case,_128757_c->_field_scope);
	return _128817__case;
}



inline void _206b0557a_ScopeChecker::_method_check_cases(jule::Ref<_2053703bd_MatchCase> _133535_m,jule::Ref<_206b0557a_Match> _133570_rm,jule::Ref<_1da2d3bdc_Data> _133586_expr) {
	_133570_rm->_field_cases=jule::Slice<jule::Ref<_206b0557a_Case>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_133535_m->_field_cases.len())));
	{
		auto _range_expr = _133535_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206b0557a_i = 0;
			_iter_begin_4393428336:;
			{
				jule::Ref<_206b0557a_Case> _133821__case = jule::new_struct<_206b0557a_Case>(new( std::nothrow ) _206b0557a_Case(_133570_rm,jule::Ref<_206b0557a_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_206b0557a_Case>()));
				if (_206b0557a_i > 0LL) {
					_133570_rm->_field_cases[static_cast<jule::Int>(_206b0557a_i - 1LL)]->_field_next=_133821__case;
				}
				_133570_rm->_field_cases[static_cast<jule::Int>(_206b0557a_i)]=_133821__case;
			}
			_iter_next_4393428336:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206b0557a_i; goto _iter_begin_4393428336; }
			_iter_end_4393428336:;
		}
	}
	if (jule::real(_133570_rm->_field_default) && (_133535_m->_field_cases.len() > 0LL)) {
		_133570_rm->_field_cases[static_cast<jule::Int>(_133570_rm->_field_cases.len() - 1LL)]->_field_next=_133570_rm->_field_default;
	}
	{
		auto _range_expr = _133535_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206b0557a_i = 0;
			jule::Ref<_2053703bd_Case> _206b0557a_c = *_range_begin;
			_iter_begin_4393435664:;
			{
				this->self->_method_check_case(_133570_rm,_206b0557a_i,_206b0557a_c,_133586_expr);
			}
			_iter_next_4393435664:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206b0557a_i; _206b0557a_c = *_range_begin; goto _iter_begin_4393435664; }
			_iter_end_4393435664:;
		}
	}
}



inline jule::Ref<_206b0557a_Case> _206b0557a_ScopeChecker::_method_check_default(jule::Ref<_206b0557a_Match> _135837_m,jule::Ref<_2053703bd_Else> _135852_d) {
	jule::Ref<_206b0557a_Case> _135917_def = jule::new_struct<_206b0557a_Case>(new( std::nothrow ) _206b0557a_Case(_135837_m,jule::Ref<_206b0557a_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_206b0557a_Case>()));
	_135917_def->_field_scope=this->self->_method_check_case_scope(_135917_def,_135852_d->_field_scope);
	return _135917_def;
}



inline void _206b0557a_ScopeChecker::_method_check_type_match(jule::Ref<_2053703bd_MatchCase> _136640_m) {
	jule::Ref<_1da2d3bdc_Data> _136717_d = this->self->_field_s->_method_eval(_136640_m->_field_expr,this->self);
	if ((!(jule::real(_136717_d)))) {
		return;
	}
	if ((!((jule::real(_136717_d->_field_kind->_method_prim()) && _136717_d->_field_kind->_method_prim()->_method_is_any()) || jule::real(_136717_d->_field_kind->_method_trt())))) {
		this->self->_field_s->_method_push_err(_136640_m->_field_expr->_field_token,jule::Str("type-case must be have <any> or trait typed expression", 54),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_206b0557a_Match> _137717_tm = jule::new_struct<_206b0557a_Match>(new( std::nothrow ) _206b0557a_Match(_136717_d,true,jule::Slice<jule::Ref<_206b0557a_Case>>(),jule::Ref<_206b0557a_Case>()));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_137717_tm)}));
	if (jule::real(_136640_m->_field_default)) {
		_137717_tm->_field_default=this->self->_method_check_default(_137717_tm,_136640_m->_field_default);
	}
	this->self->_method_check_cases(_136640_m,_137717_tm,_136717_d);
}



inline void _206b0557a_ScopeChecker::_method_check_common_match(jule::Ref<_2053703bd_MatchCase> _139042_m) {
	jule::Ref<_1da2d3bdc_Data> _139117_d = jule::new_ref<_1da2d3bdc_Data>();
	if ((!(jule::real(_139042_m->_field_expr)))) {
		_139117_d=jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a89ca987_Const::_static_method_new_bool(true)));
		_139117_d->_field_model=jule::Any(_139117_d->_field_constant);
	} else {
		_139117_d=this->self->_field_s->_method_eval(_139042_m->_field_expr,this->self);
		if ((!(jule::real(_139117_d)))) {
			return;
		}
	}
	jule::Ref<_206b0557a_Match> _140517_mc = jule::new_struct<_206b0557a_Match>(new( std::nothrow ) _206b0557a_Match(_139117_d,jule::Bool(),jule::Slice<jule::Ref<_206b0557a_Case>>(),jule::Ref<_206b0557a_Case>()));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_140517_mc)}));
	if (jule::real(_139042_m->_field_default)) {
		_140517_mc->_field_default=this->self->_method_check_default(_140517_mc,_139042_m->_field_default);
	}
	this->self->_method_check_cases(_139042_m,_140517_mc,_139117_d);
}



inline void _206b0557a_ScopeChecker::_method_check_match(jule::Ref<_2053703bd_MatchCase> _141735_m) {
	if (_141735_m->_field_type_match) {
		this->self->_method_check_type_match(_141735_m);
		return;
	}
	this->self->_method_check_common_match(_141735_m);
}



inline void _206b0557a_ScopeChecker::_method_check_fall(jule::Ref<_2053703bd_FallSt> _142529_f) {
	if (((*this)._field_cse == 0LL) || (((*this)._field_scope->_field_stmts.len() + 1LL) < (*this)._field_scope->_field_stmts.len())) {
		(*this)._field_s->_method_push_err(_142529_f->_field_token,jule::Str("fallthrough keyword can only useable at end of the case scopes", 62),jule::Slice<jule::Any>({}));
		return;
	}
	_206b0557a_Case* _143117__case = ((_206b0557a_Case*)((*this)._field_cse));
	if ((!(jule::real(_143117__case->_field_next)))) {
		(*this)._field_s->_method_push_err(_142529_f->_field_token,jule::Str("fallthrough cannot useable at final case", 40),jule::Slice<jule::Any>({}));
		(*this)._field_s->_method_push_suggestion(jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>({}));
		return;
	}
	(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_206b0557a_FallSt>(new( std::nothrow ) _206b0557a_FallSt(static_cast<jule::Uintptr>(((jule::Uintptr)((_143117__case->_field_next).alloc))))))}));
}



inline jule::Ref<_206b0557a_BreakSt> _206b0557a_ScopeChecker::_method_check_break_with_label(jule::Ref<_2053703bd_BreakSt> _144342_b) {
	jule::Ref<_206b0557a_BreakSt> _144417_brk = this->self->_method_check_plain_break(_144342_b);
	if ((!(jule::real(_144417_brk)))) {
		return jule::new_ref<_206b0557a_BreakSt>();
	}
	_144417_brk->_field_it=0LL;
	_144417_brk->_field_mtch=0LL;
	jule::Ref<_206b0557a_ScopeLabel> _145417_label = _206b0557a_find_label_parent(_144342_b->_field_label._field_kind,this->self->_field_parent);
	if ((!(jule::real(_145417_label)))) {
		this->self->_field_s->_method_push_err(_144342_b->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_144342_b->_field_label._field_kind)}));
		return jule::new_ref<_206b0557a_BreakSt>();
	}
	_145417_label->_field_used=true;
	if ((_145417_label->_field_pos + 1LL) >= _145417_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_144342_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		return jule::new_ref<_206b0557a_BreakSt>();
	}
	jule::Int _146713_i = _145417_label->_field_pos + 1LL;
	if (_146713_i >= _145417_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_144342_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
	} else {
		jule::Any _147121_st = _145417_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_146713_i)];
		{
			auto _match_expr{ _147121_st };
			if (!(_match_expr.type_is<jule::Ref<_206b0557a_InfIter>>())) { goto _case_end_4393526912; }
			_case_begin_4393526912:;
			{
				_144417_brk->_field_it=((jule::Uintptr)((_147121_st.operator jule::Ref<_206b0557a_InfIter>()).alloc));
			}
			goto _match_end_4393523696;
			_case_end_4393526912:;
			if (!(_match_expr.type_is<jule::Ref<_206b0557a_RangeIter>>())) { goto _case_end_4393524576; }
			_case_begin_4393524576:;
			{
				_144417_brk->_field_it=((jule::Uintptr)((_147121_st.operator jule::Ref<_206b0557a_RangeIter>()).alloc));
			}
			goto _match_end_4393523696;
			_case_end_4393524576:;
			if (!(_match_expr.type_is<jule::Ref<_206b0557a_WhileIter>>())) { goto _case_end_4393524688; }
			_case_begin_4393524688:;
			{
				_144417_brk->_field_it=((jule::Uintptr)((_147121_st.operator jule::Ref<_206b0557a_WhileIter>()).alloc));
			}
			goto _match_end_4393523696;
			_case_end_4393524688:;
			if (!(_match_expr.type_is<jule::Ref<_206b0557a_Match>>())) { goto _case_end_4393524800; }
			_case_begin_4393524800:;
			{
				_144417_brk->_field_mtch=((jule::Uintptr)((_147121_st.operator jule::Ref<_206b0557a_Match>()).alloc));
			}
			goto _match_end_4393523696;
			_case_end_4393524800:;
			_case_begin_4393524208:;
			{
				this->self->_field_s->_method_push_err(_144342_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4393523696;
			_case_end_4393524208:;
			_match_end_4393523696:;
		}
	}
	if (_144417_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_144417_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_144342_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	if (_144417_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_144417_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_144342_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	return _144417_brk;
}



inline jule::Ref<_206b0557a_BreakSt> _206b0557a_ScopeChecker::_method_check_plain_break(jule::Ref<_2053703bd_BreakSt> _149637_b) {
	jule::Ref<_206b0557a_ScopeChecker> _149717_scope = this->self;
	_julec_label_iter:;
	{
		if (!(((((_149717_scope->_field_it == 0LL) && (_149717_scope->_field_cse == 0LL)) && jule::real(_149717_scope->_field_parent)) && (!(jule::real(_149717_scope->_field_owner)))))) { goto _case_end_4393560880; }
		_case_begin_4393560880:;
		{
			_149717_scope=_149717_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4393560624;
		_case_end_4393560880:;
		if (!((_149717_scope->_field_it != 0LL))) { goto _case_end_4393561008; }
		_case_begin_4393561008:;
		{
			return jule::new_struct<_206b0557a_BreakSt>(new( std::nothrow ) _206b0557a_BreakSt(_149717_scope->_field_it,jule::Uintptr()));
		}
		goto _match_end_4393560624;
		_case_end_4393561008:;
		if (!((_149717_scope->_field_cse != 0LL))) { goto _case_end_4393561136; }
		_case_begin_4393561136:;
		{
			return jule::new_struct<_206b0557a_BreakSt>(new( std::nothrow ) _206b0557a_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(((jule::Uintptr)((((_206b0557a_Case*)(_149717_scope->_field_cse))->_field_owner).alloc)))));
		}
		goto _match_end_4393560624;
		_case_end_4393561136:;
		_match_end_4393560624:;
	}
	this->self->_field_s->_method_push_err(_149637_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>({}));
	return jule::new_ref<_206b0557a_BreakSt>();
}



inline void _206b0557a_ScopeChecker::_method_check_break(jule::Ref<_2053703bd_BreakSt> _151531_b) {
	if (_151531_b->_field_label._field_id != 0LLU) {
		jule::Ref<_206b0557a_BreakSt> _151721_brk = this->self->_method_check_break_with_label(_151531_b);
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_151721_brk)}));
		return;
	}
	jule::Ref<_206b0557a_BreakSt> _152217_brk = this->self->_method_check_plain_break(_151531_b);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_152217_brk)}));
}



inline void _206b0557a_ScopeChecker::_method_check_ret(jule::Ref<_2053703bd_RetSt> _152633_r) {
	jule::Ref<_206b0557a_RetSt> _152717_rt = jule::new_struct<_206b0557a_RetSt>(new( std::nothrow ) _206b0557a_RetSt());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_152717_rt)}));
	jule::Ref<_1da120d15_RetTypeChecker> _153017_rtc = jule::new_struct<_1da120d15_RetTypeChecker>(new( std::nothrow ) _1da120d15_RetTypeChecker(this->self,this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053703bd_Expr>>(),jule::Slice<jule::Ref<_1d9e22661_Var>>(),_152633_r->_field_token,jule::Any()));
	jule::Bool _153513_ok = _153017_rtc->_method_check(_152633_r->_field_expr);
	if ((!(_153513_ok))) {
		return;
	}
	if ((!(jule::real(_152633_r->_field_expr))) && (_153017_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_152717_rt->_field_vars=_153017_rtc->_field_vars;
	if (jule::real(_152633_r->_field_expr)) {
		_152717_rt->_field_expr=_153017_rtc->_field_model;
	}
}



inline void _206b0557a_ScopeChecker::_method_check_node(jule::Any _155134_node) {
	{
		auto _match_expr{ _155134_node };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_Comment>>())) { goto _case_end_4393604400; }
		_case_begin_4393604400:;
		{
			goto _match_end_4393602976;
		}
		goto _match_end_4393602976;
		_case_end_4393604400:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_ScopeTree>>())) { goto _case_end_4393604912; }
		_case_begin_4393604912:;
		{
			this->self->_method_check_anon_scope(_155134_node.operator jule::Ref<_2053703bd_ScopeTree>());
		}
		goto _match_end_4393602976;
		_case_end_4393604912:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_VarDecl>>())) { goto _case_end_4393604080; }
		_case_begin_4393604080:;
		{
			this->self->_method_check_var_decl(_155134_node.operator jule::Ref<_2053703bd_VarDecl>());
		}
		goto _match_end_4393602976;
		_case_end_4393604080:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_TypeAliasDecl>>())) { goto _case_end_4393604192; }
		_case_begin_4393604192:;
		{
			this->self->_method_check_type_alias_decl(_155134_node.operator jule::Ref<_2053703bd_TypeAliasDecl>());
		}
		goto _match_end_4393602976;
		_case_end_4393604192:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_Expr>>())) { goto _case_end_4393605456; }
		_case_begin_4393605456:;
		{
			this->self->_method_check_expr(_155134_node.operator jule::Ref<_2053703bd_Expr>());
		}
		goto _match_end_4393602976;
		_case_end_4393605456:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_Conditional>>())) { goto _case_end_4393605568; }
		_case_begin_4393605568:;
		{
			this->self->_method_check_conditional(_155134_node.operator jule::Ref<_2053703bd_Conditional>());
		}
		goto _match_end_4393602976;
		_case_end_4393605568:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_Iter>>())) { goto _case_end_4393605680; }
		_case_begin_4393605680:;
		{
			this->self->_method_check_iter(_155134_node.operator jule::Ref<_2053703bd_Iter>());
		}
		goto _match_end_4393602976;
		_case_end_4393605680:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_ContSt>>())) { goto _case_end_4393605792; }
		_case_begin_4393605792:;
		{
			this->self->_method_check_cont(_155134_node.operator jule::Ref<_2053703bd_ContSt>());
		}
		goto _match_end_4393602976;
		_case_end_4393605792:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_LabelSt>>())) { goto _case_end_4393605904; }
		_case_begin_4393605904:;
		{
			this->self->_method_check_label(_155134_node.operator jule::Ref<_2053703bd_LabelSt>());
		}
		goto _match_end_4393602976;
		_case_end_4393605904:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_GotoSt>>())) { goto _case_end_4393606016; }
		_case_begin_4393606016:;
		{
			this->self->_method_push_goto(_155134_node.operator jule::Ref<_2053703bd_GotoSt>());
		}
		goto _match_end_4393602976;
		_case_end_4393606016:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_AssignSt>>())) { goto _case_end_4393606128; }
		_case_begin_4393606128:;
		{
			this->self->_method_check_assign_st(_155134_node.operator jule::Ref<_2053703bd_AssignSt>());
		}
		goto _match_end_4393602976;
		_case_end_4393606128:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_MatchCase>>())) { goto _case_end_4393606240; }
		_case_begin_4393606240:;
		{
			this->self->_method_check_match(_155134_node.operator jule::Ref<_2053703bd_MatchCase>());
		}
		goto _match_end_4393602976;
		_case_end_4393606240:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_FallSt>>())) { goto _case_end_4393606352; }
		_case_begin_4393606352:;
		{
			this->self->_method_check_fall(_155134_node.operator jule::Ref<_2053703bd_FallSt>());
		}
		goto _match_end_4393602976;
		_case_end_4393606352:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_BreakSt>>())) { goto _case_end_4393606464; }
		_case_begin_4393606464:;
		{
			this->self->_method_check_break(_155134_node.operator jule::Ref<_2053703bd_BreakSt>());
		}
		goto _match_end_4393602976;
		_case_end_4393606464:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_RetSt>>())) { goto _case_end_4393606576; }
		_case_begin_4393606576:;
		{
			this->self->_method_check_ret(_155134_node.operator jule::Ref<_2053703bd_RetSt>());
		}
		goto _match_end_4393602976;
		_case_end_4393606576:;
		_case_begin_4393603440:;
		{
			jule::outln(jule::Str("error <unimplemented scope node>", 32));
		}
		goto _match_end_4393602976;
		_case_end_4393603440:;
		_match_end_4393602976:;
	}
}



inline void _206b0557a_ScopeChecker::_method_check_tree(void) {
	{
		auto _range_expr = this->self->_field_tree->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _206b0557a_stmt = *_range_begin;
			_iter_begin_4393635008:;
			{
				this->self->_method_check_node(_206b0557a_stmt);
			}
			_iter_next_4393635008:;
			++_range_begin;
			if (_range_begin != _range_end) { _206b0557a_stmt = *_range_begin; goto _iter_begin_4393635008; }
			_iter_end_4393635008:;
		}
	}
}



inline void _206b0557a_ScopeChecker::_method_check_same_scope_goto(jule::Ref<_206b0557a_ScopeGoto> _157840_gt,jule::Ref<_206b0557a_ScopeLabel> _157860_label) {
	if (_157860_label->_field_pos < _157840_gt->_field_pos) {
		return;
	}
	jule::Int _158317_i = _157860_label->_field_pos;
	_iter_begin_4393640656:;
	if (!(_158317_i > _157840_gt->_field_pos)) { goto _iter_end_4393640656; }
	{
		jule::Any _158517_stmt = _157860_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_158317_i)];
		if (_206b0557a_st_is_def(_158517_stmt)) {
			(*this)._field_s->_method_push_err(_157840_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_157840_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_4393640656;
		}
	}
	_iter_next_4393640656:;
	(_158317_i)--;
	goto _iter_begin_4393640656;
	_iter_end_4393640656:;
}



inline jule::Bool _206b0557a_ScopeChecker::_method_check_label_parents(jule::Ref<_206b0557a_ScopeGoto> _159338_gt,jule::Ref<_206b0557a_ScopeLabel> _159358_label) {
	jule::Ref<_206b0557a_ScopeChecker> _159417_scope = _159358_label->_field_scope;
	_julec_label_parent_scopes:;
	if (jule::real(_159417_scope->_field_parent) && ((_159417_scope->_field_parent).alloc != (_159338_gt->_field_scope).alloc)) {
		_159417_scope=_159417_scope->_field_parent;
		{
			auto _range_expr = _159417_scope->_field_scope->_field_stmts;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _206b0557a_i = 0;
				jule::Any _206b0557a_stmt = *_range_begin;
				_iter_begin_4393656448:;
				{
					{
						if (!((_206b0557a_i >= _159358_label->_field_pos))) { goto _case_end_4393658944; }
						_case_begin_4393658944:;
						{
							return true;
						}
						goto _match_end_4393658704;
						_case_end_4393658944:;
						if (!((_206b0557a_st_is_def(_206b0557a_stmt)))) { goto _case_end_4393659072; }
						_case_begin_4393659072:;
						{
							(*this)._field_s->_method_push_err(_159338_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_159338_gt->_field_gt->_field_label._field_kind)}));
							return false;
						}
						goto _match_end_4393658704;
						_case_end_4393659072:;
						_match_end_4393658704:;
					}
				}
				_iter_next_4393656448:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_206b0557a_i; _206b0557a_stmt = *_range_begin; goto _iter_begin_4393656448; }
				_iter_end_4393656448:;
			}
		}
		goto _julec_label_parent_scopes;
	}
	return true;
}



inline void _206b0557a_ScopeChecker::_method_check_goto_scope(jule::Ref<_206b0557a_ScopeGoto> _161639_gt,jule::Ref<_206b0557a_ScopeLabel> _161655_label) {
	jule::Int _161717_i = _161639_gt->_field_pos;
	_iter_begin_4393669216:;
	if (!(_161717_i < _161639_gt->_field_scope->_field_scope->_field_stmts.len())) { goto _iter_end_4393669216; }
	{
		{
			if (!((_161717_i >= _161655_label->_field_pos))) { goto _case_end_4393671312; }
			_case_begin_4393671312:;
			{
				return;
			}
			goto _match_end_4393671072;
			_case_end_4393671312:;
			if (!((_206b0557a_st_is_def(_161639_gt->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_161717_i)])))) { goto _case_end_4393671440; }
			_case_begin_4393671440:;
			{
				(*this)._field_s->_method_push_err(_161639_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_161639_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
			goto _match_end_4393671072;
			_case_end_4393671440:;
			_match_end_4393671072:;
		}
	}
	_iter_next_4393669216:;
	(_161717_i)++;
	goto _iter_begin_4393669216;
	_iter_end_4393669216:;
}



inline void _206b0557a_ScopeChecker::_method_check_diff_scope_goto(jule::Ref<_206b0557a_ScopeGoto> _163044_gt,jule::Ref<_206b0557a_ScopeLabel> _163064_label) {
	{
		if (!(((_163064_label->_field_scope->_field_child_index > 0LL) && (_163044_gt->_field_scope->_field_child_index == 0LL)))) { goto _case_end_4393682080; }
		_case_begin_4393682080:;
		{
			if ((!((*this)._method_check_label_parents(_163044_gt,_163064_label)))) {
				return;
			}
		}
		goto _match_end_4393681840;
		_case_end_4393682080:;
		if (!((_163064_label->_field_scope->_field_child_index < _163044_gt->_field_scope->_field_child_index))) { goto _case_end_4393682208; }
		_case_begin_4393682208:;
		{
			return;
		}
		goto _match_end_4393681840;
		_case_end_4393682208:;
		_match_end_4393681840:;
	}
	jule::Ref<_206b0557a_ScopeChecker> _164117_scope = _163064_label->_field_scope;
	jule::Int _164217_i = _163064_label->_field_pos - 1LL;
	_iter_begin_4393681936:;
	if (!(_164217_i >= 0LL)) { goto _iter_end_4393681936; }
	{
		jule::Any _164417_s = _164117_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_164217_i)];
		{
			auto _match_expr{ _164417_s };
			if (!(_match_expr.type_is<jule::Ref<_206b0557a_Scope>>())) { goto _case_end_4393692528; }
			_case_begin_4393692528:;
			{
				if (_164217_i <= _163044_gt->_field_pos) {
					return;
				}
			}
			goto _match_end_4393692016;
			_case_end_4393692528:;
			_match_end_4393692016:;
		}
		if (_206b0557a_st_is_def(_164417_s)) {
			(*this)._field_s->_method_push_err(_163044_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_163044_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_4393681936;
		}
	}
	_iter_next_4393681936:;
	(_164217_i)--;
	goto _iter_begin_4393681936;
	_iter_end_4393681936:;
	if (jule::real(_164117_scope->_field_parent) && ((_164117_scope->_field_parent).alloc != (_163044_gt->_field_scope).alloc)) {
		(*this)._method_check_label_parents(_163044_gt,_163064_label);
	} else {
		(*this)._method_check_goto_scope(_163044_gt,_163064_label);
	}
}



inline void _206b0557a_ScopeChecker::_method_check_goto(jule::Ref<_206b0557a_ScopeGoto> _166633_gt,jule::Ref<_206b0557a_ScopeLabel> _166653_label) {
	{
		if (!(((_166633_gt->_field_scope).alloc == (_166653_label->_field_scope).alloc))) { goto _case_end_4393704384; }
		_case_begin_4393704384:;
		{
			(*this)._method_check_same_scope_goto(_166633_gt,_166653_label);
		}
		goto _match_end_4393704144;
		_case_end_4393704384:;
		if (!((_166653_label->_field_scope->_field_child_index > 0LL))) { goto _case_end_4393704512; }
		_case_begin_4393704512:;
		{
			(*this)._method_check_diff_scope_goto(_166633_gt,_166653_label);
		}
		goto _match_end_4393704144;
		_case_end_4393704512:;
		_match_end_4393704144:;
	}
}



inline void _206b0557a_ScopeChecker::_method_check_gotos(void) {
	{
		auto _range_expr = (*this)._field_gotos.get();
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b0557a_ScopeGoto> _206b0557a_gt = *_range_begin;
			_iter_begin_4393710096:;
			{
				jule::Ref<_206b0557a_ScopeLabel> _167821_label = (*this)._method_find_label_all(_206b0557a_gt->_field_gt->_field_label._field_kind);
				if ((!(jule::real(_167821_label)))) {
					(*this)._field_s->_method_push_err(_206b0557a_gt->_field_gt->_field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_206b0557a_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_4393710096;
				}
				_167821_label->_field_used=true;
				(*this)._method_check_goto(_206b0557a_gt,_167821_label);
			}
			_iter_next_4393710096:;
			++_range_begin;
			if (_range_begin != _range_end) { _206b0557a_gt = *_range_begin; goto _iter_begin_4393710096; }
			_iter_end_4393710096:;
		}
	}
}



inline void _206b0557a_ScopeChecker::_method_check_labels(void) {
	{
		auto _range_expr = (*this)._field_labels.get();
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b0557a_ScopeLabel> _206b0557a_l = *_range_begin;
			_iter_begin_4393720864:;
			{
				if ((!(_206b0557a_l->_field_used))) {
					(*this)._field_s->_method_push_err(_206b0557a_l->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_206b0557a_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_4393720864:;
			++_range_begin;
			if (_range_begin != _range_end) { _206b0557a_l = *_range_begin; goto _iter_begin_4393720864; }
			_iter_end_4393720864:;
		}
	}
}



inline void _206b0557a_ScopeChecker::_method_check_vars(void) {
	{
		auto _range_expr = (*this)._field_table->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d9e22661_Var> _206b0557a_v = *_range_begin;
			_iter_begin_4393726832:;
			{
				if ((((!(_206b0557a_v->_field_used)) && (!(_20542560a_is_ignore_ident(_206b0557a_v->_field_ident)))) && (!(_20542560a_is_anon_ident(_206b0557a_v->_field_ident)))) && (_206b0557a_v->_field_ident != jule::Str("self", 4))) {
					(*this)._field_s->_method_push_err(_206b0557a_v->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_206b0557a_v->_field_ident)}));
				}
			}
			_iter_next_4393726832:;
			++_range_begin;
			if (_range_begin != _range_end) { _206b0557a_v = *_range_begin; goto _iter_begin_4393726832; }
			_iter_end_4393726832:;
		}
	}
}



inline void _206b0557a_ScopeChecker::_method_check_aliases(void) {
	{
		auto _range_expr = (*this)._field_table->_field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da411226_TypeAlias> _206b0557a_a = *_range_begin;
			_iter_begin_4393734352:;
			{
				if (((!(_206b0557a_a->_field_used)) && (!(_20542560a_is_ignore_ident(_206b0557a_a->_field_ident)))) && (!(_20542560a_is_anon_ident(_206b0557a_a->_field_ident)))) {
					(*this)._field_s->_method_push_err(_206b0557a_a->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_206b0557a_a->_field_ident)}));
				}
			}
			_iter_next_4393734352:;
			++_range_begin;
			if (_range_begin != _range_end) { _206b0557a_a = *_range_begin; goto _iter_begin_4393734352; }
			_iter_end_4393734352:;
		}
	}
}



inline void _206b0557a_ScopeChecker::_method_check(jule::Ref<_2053703bd_ScopeTree> _171429_tree,jule::Ref<_206b0557a_Scope> _171451_s) {
	_171451_s->_field_deferred=_171429_tree->_field_deferred;
	_171451_s->_field_unsafety=_171429_tree->_field_unsafety;
	jule::I64 _171813_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_171429_tree;
	this->self->_field_scope=_171451_s;
	this->self->_method_check_tree();
	if (_171813_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
	}
	if (this->self->_method_is_root()) {
		this->self->_method_check_gotos();
		this->self->_method_check_labels();
	}
}



inline jule::Ref<_206b0557a_ScopeChecker> _206b0557a_ScopeChecker::_method_new_child_checker(void) {
	jule::Ref<_206b0557a_ScopeChecker> _173817_base = _206b0557a_new_scope_checker_base(this->self->_field_s,jule::new_ref<_2053ddd54_FnIns>());
	_173817_base->_field_parent=this->self;
	_173817_base->_field_labels=this->self->_field_labels;
	_173817_base->_field_gotos=this->self->_field_gotos;
	_173817_base->_field_child_index=static_cast<jule::Int>(this->self->_field_child_index + 1LL);
	return _173817_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _206b0557a_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_GetRefPtrExprModel &_Src) {
	_Stream << "GetRefPtrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_BuiltinRealCallExprModel &_Src) {
	_Stream << "BuiltinRealCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_BuiltinDropCallExprModel &_Src) {
	_Stream << "BuiltinDropCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_BuiltinAppendCallExprModel &_Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_BuiltinErrorTraitSubIdentExprModel &_Src) {
	_Stream << "BuiltinErrorTraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_ExplicitDerefExprModel &_Src) {
	_Stream << "ExplicitDerefExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e63542_IntegratedToStrExprModel &_Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_206e66325_ImportInfo> _206e66325_ImportInfo::_method_find_package(jule::Str ) {
	return jule::new_ref<_206e66325_ImportInfo>();
}



inline jule::Ref<_206e66325_ImportInfo> _206e66325_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)> ) {
	return jule::new_ref<_206e66325_ImportInfo>();
}



inline jule::Ref<_1d9e22661_Var> _206e66325_ImportInfo::_method_find_var(jule::Str _14731_ident,jule::Bool _14743_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14731_ident)))) {
		return jule::new_ref<_1d9e22661_Var>();
	}
	return _206e66325_find_var_in_package((*this)._field_package->_field_files,_14731_ident,false);
}



inline jule::Ref<_1da411226_TypeAlias> _206e66325_ImportInfo::_method_find_type_alias(jule::Str _16038_ident,jule::Bool _16050_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_16038_ident)))) {
		return jule::new_ref<_1da411226_TypeAlias>();
	}
	return _206e66325_find_type_alias_in_package((*this)._field_package->_field_files,_16038_ident,false);
}



inline jule::Ref<_2053cdc01_Struct> _206e66325_ImportInfo::_method_find_struct(jule::Str _17334_ident,jule::Bool _17346_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17334_ident)))) {
		return jule::new_ref<_2053cdc01_Struct>();
	}
	return _206e66325_find_struct_in_package((*this)._field_package->_field_files,_17334_ident,false);
}



inline jule::Ref<_2053ddd54_Fn> _206e66325_ImportInfo::_method_find_fn(jule::Str _18630_ident,jule::Bool _18642_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18630_ident)))) {
		return jule::new_ref<_2053ddd54_Fn>();
	}
	return _206e66325_find_fn_in_package((*this)._field_package->_field_files,_18630_ident,false);
}



inline jule::Ref<_2065895c5_Trait> _206e66325_ImportInfo::_method_find_trait(jule::Str _19833_ident) {
	if ((!((*this)._method_is_lookupable(_19833_ident)))) {
		return jule::new_ref<_2065895c5_Trait>();
	}
	return _206e66325_find_trait_in_package((*this)._field_package->_field_files,_19833_ident);
}



inline jule::Ref<_206b06c0d_Enum> _206e66325_ImportInfo::_method_find_enum(jule::Str _21032_ident) {
	if ((!((*this)._method_is_lookupable(_21032_ident)))) {
		return jule::new_ref<_206b06c0d_Enum>();
	}
	return _206e66325_find_enum_in_package((*this)._field_package->_field_files,_21032_ident);
}



inline jule::Bool _206e66325_ImportInfo::_method_is_lookupable(jule::Str _22028_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_22028_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _206e66325_ImportInfo::_method_exist_ident(jule::Str _24026_ident) {
	{
		auto _range_expr = (*this)._field_selected;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_20542560a_Token _206e66325_sident = *_range_begin;
			_iter_begin_4393810960:;
			{
				if (_206e66325_sident._field_kind == _24026_ident) {
					return true;
				}
			}
			_iter_next_4393810960:;
			++_range_begin;
			if (_range_begin != _range_end) { _206e66325_sident = *_range_begin; goto _iter_begin_4393810960; }
			_iter_end_4393810960:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _206e66325_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_206e66325_ImportInfo> _206e66325_Package::_method_find_package(jule::Str ) {
	return jule::new_ref<_206e66325_ImportInfo>();
}



inline jule::Ref<_206e66325_ImportInfo> _206e66325_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)> ) {
	return jule::new_ref<_206e66325_ImportInfo>();
}



inline jule::Ref<_1d9e22661_Var> _206e66325_Package::_method_find_var(jule::Str _26631_ident,jule::Bool _26643_cpp_linked) {
	return _206e66325_find_var_in_package((*this)._field_files,_26631_ident,_26643_cpp_linked);
}



inline jule::Ref<_1da411226_TypeAlias> _206e66325_Package::_method_find_type_alias(jule::Str _27238_ident,jule::Bool _27250_cpp_linked) {
	return _206e66325_find_type_alias_in_package((*this)._field_files,_27238_ident,_27250_cpp_linked);
}



inline jule::Ref<_2053cdc01_Struct> _206e66325_Package::_method_find_struct(jule::Str _27834_ident,jule::Bool _27846_cpp_linked) {
	return _206e66325_find_struct_in_package((*this)._field_files,_27834_ident,_27846_cpp_linked);
}



inline jule::Ref<_2053ddd54_Fn> _206e66325_Package::_method_find_fn(jule::Str _28430_ident,jule::Bool _28442_cpp_linked) {
	return _206e66325_find_fn_in_package((*this)._field_files,_28430_ident,_28442_cpp_linked);
}



inline jule::Ref<_2065895c5_Trait> _206e66325_Package::_method_find_trait(jule::Str _29033_ident) {
	return _206e66325_find_trait_in_package((*this)._field_files,_29033_ident);
}



inline jule::Ref<_206b06c0d_Enum> _206e66325_Package::_method_find_enum(jule::Str _29632_ident) {
	return _206e66325_find_enum_in_package((*this)._field_files,_29632_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _206e66325_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_206e66325_ImportInfo> _1d9dc7517_Sema::_method_find_package(jule::Str _31535_ident) {
	return (*this)._field_file->_method_find_package(_31535_ident);
}



inline jule::Ref<_206e66325_ImportInfo> _1d9dc7517_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)> _32537_selector) {
	return (*this)._field_file->_method_select_package(_32537_selector);
}



inline jule::Ref<_1d9e22661_Var> _1d9dc7517_Sema::_method_find_var(jule::Str _33531_ident,jule::Bool _33543_cpp_linked) {
	jule::Ref<_1d9e22661_Var> _33717_v = _206e66325_find_var_in_package((*this)._field_files,_33531_ident,_33543_cpp_linked);
	if (jule::real(_33717_v)) {
		return _33717_v;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1d9dc7517_imp = *_range_begin;
			_iter_begin_4393851616:;
			{
				if ((!(_1d9dc7517_imp_is_lookupable(_1d9dc7517_imp,_33531_ident)))) {
					goto _iter_next_4393851616;
				}
				_33717_v=_1d9dc7517_imp->_method_find_var(_33531_ident,_33543_cpp_linked);
				if (jule::real(_33717_v) && (*this)._method_is_accessible_define(_33717_v->_field_public,_33717_v->_field_token)) {
					return _33717_v;
				}
			}
			_iter_next_4393851616:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_imp = *_range_begin; goto _iter_begin_4393851616; }
			_iter_end_4393851616:;
		}
	}
	return jule::new_ref<_1d9e22661_Var>();
}



inline jule::Ref<_1da411226_TypeAlias> _1d9dc7517_Sema::_method_find_type_alias(jule::Str _36238_ident,jule::Bool _36250_cpp_linked) {
	jule::Ref<_1da411226_TypeAlias> _36417_ta = _206e66325_find_type_alias_in_package((*this)._field_files,_36238_ident,_36250_cpp_linked);
	if (jule::real(_36417_ta)) {
		return _36417_ta;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1d9dc7517_imp = *_range_begin;
			_iter_begin_4393863744:;
			{
				if ((!(_1d9dc7517_imp_is_lookupable(_1d9dc7517_imp,_36238_ident)))) {
					goto _iter_next_4393863744;
				}
				_36417_ta=_1d9dc7517_imp->_method_find_type_alias(_36238_ident,_36250_cpp_linked);
				if (jule::real(_36417_ta) && (*this)._method_is_accessible_define(_36417_ta->_field_public,_36417_ta->_field_token)) {
					return _36417_ta;
				}
			}
			_iter_next_4393863744:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_imp = *_range_begin; goto _iter_begin_4393863744; }
			_iter_end_4393863744:;
		}
	}
	return jule::new_ref<_1da411226_TypeAlias>();
}



inline jule::Ref<_2053cdc01_Struct> _1d9dc7517_Sema::_method_find_struct(jule::Str _38934_ident,jule::Bool _38946_cpp_linked) {
	jule::Ref<_2053cdc01_Struct> _39117_s = _206e66325_find_struct_in_package((*this)._field_files,_38934_ident,_38946_cpp_linked);
	if (jule::real(_39117_s)) {
		return _39117_s;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1d9dc7517_imp = *_range_begin;
			_iter_begin_4393874592:;
			{
				if ((!(_1d9dc7517_imp_is_lookupable(_1d9dc7517_imp,_38934_ident)))) {
					goto _iter_next_4393874592;
				}
				_39117_s=_1d9dc7517_imp->_method_find_struct(_38934_ident,_38946_cpp_linked);
				if (jule::real(_39117_s) && (*this)._method_is_accessible_define(_39117_s->_field_public,_39117_s->_field_token)) {
					return _39117_s;
				}
			}
			_iter_next_4393874592:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_imp = *_range_begin; goto _iter_begin_4393874592; }
			_iter_end_4393874592:;
		}
	}
	return jule::new_ref<_2053cdc01_Struct>();
}



inline jule::Ref<_2053ddd54_Fn> _1d9dc7517_Sema::_method_find_fn(jule::Str _41630_ident,jule::Bool _41642_cpp_linked) {
	jule::Ref<_2053ddd54_Fn> _41817_f = _206e66325_find_fn_in_package((*this)._field_files,_41630_ident,_41642_cpp_linked);
	if (jule::real(_41817_f)) {
		return _41817_f;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1d9dc7517_imp = *_range_begin;
			_iter_begin_4393885472:;
			{
				if ((!(_1d9dc7517_imp_is_lookupable(_1d9dc7517_imp,_41630_ident)))) {
					goto _iter_next_4393885472;
				}
				_41817_f=_1d9dc7517_imp->_method_find_fn(_41630_ident,_41642_cpp_linked);
				if (jule::real(_41817_f) && (*this)._method_is_accessible_define(_41817_f->_field_public,_41817_f->_field_token)) {
					return _41817_f;
				}
			}
			_iter_next_4393885472:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_imp = *_range_begin; goto _iter_begin_4393885472; }
			_iter_end_4393885472:;
		}
	}
	return jule::new_ref<_2053ddd54_Fn>();
}



inline jule::Ref<_2065895c5_Trait> _1d9dc7517_Sema::_method_find_trait(jule::Str _44333_ident) {
	jule::Ref<_2065895c5_Trait> _44517_t = _206e66325_find_trait_in_package((*this)._field_files,_44333_ident);
	if (jule::real(_44517_t)) {
		return _44517_t;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1d9dc7517_imp = *_range_begin;
			_iter_begin_4393895024:;
			{
				if ((!(_1d9dc7517_imp_is_lookupable(_1d9dc7517_imp,_44333_ident)))) {
					goto _iter_next_4393895024;
				}
				_44517_t=_1d9dc7517_imp->_method_find_trait(_44333_ident);
				if (jule::real(_44517_t) && (*this)._method_is_accessible_define(_44517_t->_field_public,_44517_t->_field_token)) {
					return _44517_t;
				}
			}
			_iter_next_4393895024:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_imp = *_range_begin; goto _iter_begin_4393895024; }
			_iter_end_4393895024:;
		}
	}
	return jule::new_ref<_2065895c5_Trait>();
}



inline jule::Ref<_206b06c0d_Enum> _1d9dc7517_Sema::_method_find_enum(jule::Str _47032_ident) {
	jule::Ref<_206b06c0d_Enum> _47217_e = _206e66325_find_enum_in_package((*this)._field_files,_47032_ident);
	if (jule::real(_47217_e)) {
		return _47217_e;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1d9dc7517_imp = *_range_begin;
			_iter_begin_4393904960:;
			{
				if ((!(_1d9dc7517_imp_is_lookupable(_1d9dc7517_imp,_47032_ident)))) {
					goto _iter_next_4393904960;
				}
				_47217_e=_1d9dc7517_imp->_method_find_enum(_47032_ident);
				if (jule::real(_47217_e) && (*this)._method_is_accessible_define(_47217_e->_field_public,_47217_e->_field_token)) {
					return _47217_e;
				}
			}
			_iter_next_4393904960:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_imp = *_range_begin; goto _iter_begin_4393904960; }
			_iter_end_4393904960:;
		}
	}
	return jule::new_ref<_206b06c0d_Enum>();
}



inline jule::Bool _1d9dc7517_Sema::_method_is_flag(jule::Int _49422_flags) {
	return ((*this)._field_flags & _49422_flags) == _49422_flags;
}



inline void _1d9dc7517_Sema::_method_set_current_file(jule::Ref<_1da2aa301_SymbolTable> _49639_f) {
	(*this)._field_file=_49639_f;
}



inline void _1d9dc7517_Sema::_method_push_err(_20542560a_Token _49827_token,jule::Str _49841_fmt,jule::Slice<jule::Any> _49854_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_20377124e_Log>({_1d9dc7517_compiler_err(_49827_token,true,_49841_fmt,_49854_args)}));
}



inline void _1d9dc7517_Sema::_method_push_suggestion(jule::Str _50334_fmt,jule::Slice<jule::Any> _50347_args) {
	{
		_1d9dc7517_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_50334_fmt,_50347_args);
	}
}



inline jule::Bool _1d9dc7517_Sema::_method_is_accessible_define(jule::Bool _50835_public,_20542560a_Token _50849_token) {
	return (_50835_public || (!(jule::real(_50849_token._field_file)))) || ((*this)._field_file->_field_file->_method_dir() == _50849_token._field_file->_method_dir());
}



inline jule::Bool _1d9dc7517_Sema::_method_is_duplicated_ident(jule::Uintptr _51534_itself,jule::Str _51551_ident,jule::Bool _51563_cpp_linked) {
	{
		auto _range_expr = (*this)._field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_f = *_range_begin;
			_iter_begin_4393935808:;
			{
				if (_1d9dc7517_f->_method_is_duplicated_ident(_51534_itself,_51551_ident,_51563_cpp_linked)) {
					return true;
				}
				{
					auto _range_expr = _1d9dc7517_f->_field_imports;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_206e66325_ImportInfo> _1d9dc7517_imp = *_range_begin;
						_iter_begin_4393940784:;
						{
							{
								auto _range_expr = _1d9dc7517_imp->_field_selected;
								if (_range_expr.begin() != _range_expr.end()) {
									auto _range_begin = _range_expr.begin();
									const auto _range_end = _range_expr.end();
									_20542560a_Token _1d9dc7517_selected = *_range_begin;
									_iter_begin_4393942560:;
									{
										if (_1d9dc7517_selected._field_kind == _51551_ident) {
											return true;
										}
									}
									_iter_next_4393942560:;
									++_range_begin;
									if (_range_begin != _range_end) { _1d9dc7517_selected = *_range_begin; goto _iter_begin_4393942560; }
									_iter_end_4393942560:;
								}
							}
						}
						_iter_next_4393940784:;
						++_range_begin;
						if (_range_begin != _range_end) { _1d9dc7517_imp = *_range_begin; goto _iter_begin_4393940784; }
						_iter_end_4393940784:;
					}
				}
			}
			_iter_next_4393935808:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4393935808; }
			_iter_end_4393935808:;
		}
	}
	return false;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_generic_quantity(jule::Int _53241_required,jule::Int _53256_given,_20542560a_Token _53268_error_token) {
	jule::Bool _53290_ok = jule::Bool();
	{
		if (!(((_53241_required == 0LL) && (_53256_given > 0LL)))) { goto _case_end_4393949712; }
		_case_begin_4393949712:;
		{
			(*this)._method_push_err(_53268_error_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
			_53290_ok = false;
			return _53290_ok;
		}
		goto _match_end_4393948512;
		_case_end_4393949712:;
		if (!(((_53241_required > 0LL) && (_53256_given == 0LL)))) { goto _case_end_4393949824; }
		_case_begin_4393949824:;
		{
			(*this)._method_push_err(_53268_error_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			_53290_ok = false;
			return _53290_ok;
		}
		goto _match_end_4393948512;
		_case_end_4393949824:;
		if (!((_53241_required < _53256_given))) { goto _case_end_4393949936; }
		_case_begin_4393949936:;
		{
			(*this)._method_push_err(_53268_error_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>({}));
			_53290_ok = false;
			return _53290_ok;
		}
		goto _match_end_4393948512;
		_case_end_4393949936:;
		if (!((_53241_required > _53256_given))) { goto _case_end_4393948960; }
		_case_begin_4393948960:;
		{
			(*this)._method_push_err(_53268_error_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>({}));
			_53290_ok = false;
			return _53290_ok;
		}
		goto _match_end_4393948512;
		_case_end_4393948960:;
		_case_begin_4393948656:;
		{
			_53290_ok = true;
			return _53290_ok;
		}
		goto _match_end_4393948512;
		_case_end_4393948656:;
		_match_end_4393948512:;
	}
}



inline jule::Bool _1d9dc7517_Sema::_method_is_duplicated_import_selection(jule::Uintptr _55545_itself,jule::Str _55562_ident) {
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1d9dc7517_imp = *_range_begin;
			_iter_begin_4393961264:;
			{
				if (((jule::Uintptr)((_1d9dc7517_imp).alloc)) == _55545_itself) {
					goto _iter_end_4393961264;
				}
				if (_1d9dc7517_imp->_method_exist_ident(_55562_ident)) {
					return true;
				}
			}
			_iter_next_4393961264:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_imp = *_range_begin; goto _iter_begin_4393961264; }
			_iter_end_4393961264:;
		}
	}
	return false;
}



inline jule::Any _1d9dc7517_Sema::_method_get_import_def(jule::Str _57029_ident,jule::Ref<_206e66325_ImportInfo>& _57046_imp) {
	if (_206c94dac_find_package_builtin_def(_57046_imp->_field_link_path,_57029_ident) != nullptr) {
		return jule::Any(true);
	}
	{
		auto _range_expr = _57046_imp->_field_package->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_f = *_range_begin;
			_iter_begin_4393970656:;
			{
				
				jule::Any _57721_def = _1d9dc7517_f->_method_def_by_ident(_57029_ident,false);
				if (_57721_def != nullptr) {
					return _57721_def;
				}
			}
			_iter_next_4393970656:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4393970656; }
			_iter_end_4393970656:;
		}
	}
	return jule::Any(nullptr);
}



inline void _1d9dc7517_Sema::_method_check_import_selections(jule::Ref<_206e66325_ImportInfo> _58646_imp) {
	{
		auto _range_expr = _58646_imp->_field_selected;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_20542560a_Token _1d9dc7517_ident = *_range_begin;
			_iter_begin_4393976944:;
			{
				if (_1d9dc7517_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_4393976944;
				}
				if ((*this)._method_is_duplicated_import_selection(((jule::Uintptr)((_58646_imp).alloc)),_1d9dc7517_ident._field_kind)) {
					(*this)._method_push_err(_1d9dc7517_ident,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1d9dc7517_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
					goto _iter_next_4393976944;
				}
				jule::Any _59821_def = (*this)._method_get_import_def(_1d9dc7517_ident._field_kind,_58646_imp);
				{
					auto _match_expr{ _59821_def };
					if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4393986704; }
					_case_begin_4393986704:;
					{
						goto _iter_next_4393976944;
					}
					goto _match_end_4393980768;
					_case_end_4393986704:;
					if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4393986816; }
					_case_begin_4393986816:;
					{
						jule::Ref<_1d9e22661_Var> _60525_v = _59821_def.operator jule::Ref<_1d9e22661_Var>();
						if ((*this)._method_is_accessible_define(_60525_v->_field_public,_60525_v->_field_token)) {
							goto _iter_next_4393976944;
						}
					}
					goto _match_end_4393980768;
					_case_end_4393986816:;
					if (!(_match_expr.type_is<jule::Ref<_1da411226_TypeAlias>>())) { goto _case_end_4393986928; }
					_case_begin_4393986928:;
					{
						jule::Ref<_1da411226_TypeAlias> _61125_ta = _59821_def.operator jule::Ref<_1da411226_TypeAlias>();
						if ((*this)._method_is_accessible_define(_61125_ta->_field_public,_61125_ta->_field_token)) {
							goto _iter_next_4393976944;
						}
					}
					goto _match_end_4393980768;
					_case_end_4393986928:;
					if (!(_match_expr.type_is<jule::Ref<_2053cdc01_Struct>>())) { goto _case_end_4393988880; }
					_case_begin_4393988880:;
					{
						jule::Ref<_2053cdc01_Struct> _61725_strct = _59821_def.operator jule::Ref<_2053cdc01_Struct>();
						if ((*this)._method_is_accessible_define(_61725_strct->_field_public,_61725_strct->_field_token)) {
							goto _iter_next_4393976944;
						}
					}
					goto _match_end_4393980768;
					_case_end_4393988880:;
					if (!(_match_expr.type_is<jule::Ref<_2065895c5_Trait>>())) { goto _case_end_4393988992; }
					_case_begin_4393988992:;
					{
						jule::Ref<_2065895c5_Trait> _62325_t = _59821_def.operator jule::Ref<_2065895c5_Trait>();
						if ((*this)._method_is_accessible_define(_62325_t->_field_public,_62325_t->_field_token)) {
							goto _iter_next_4393976944;
						}
					}
					goto _match_end_4393980768;
					_case_end_4393988992:;
					if (!(_match_expr.type_is<jule::Ref<_206b06c0d_Enum>>())) { goto _case_end_4393989104; }
					_case_begin_4393989104:;
					{
						jule::Ref<_206b06c0d_Enum> _62925_e = _59821_def.operator jule::Ref<_206b06c0d_Enum>();
						if ((*this)._method_is_accessible_define(_62925_e->_field_public,_62925_e->_field_token)) {
							goto _iter_next_4393976944;
						}
					}
					goto _match_end_4393980768;
					_case_end_4393989104:;
					if (!(_match_expr.type_is<jule::Ref<_2053ddd54_Fn>>())) { goto _case_end_4393989216; }
					_case_begin_4393989216:;
					{
						jule::Ref<_2053ddd54_Fn> _63525_f = _59821_def.operator jule::Ref<_2053ddd54_Fn>();
						if ((*this)._method_is_accessible_define(_63525_f->_field_public,_63525_f->_field_token)) {
							goto _iter_next_4393976944;
						}
					}
					goto _match_end_4393980768;
					_case_end_4393989216:;
					_case_begin_4393986112:;
					{
						(*this)._method_push_err(_1d9dc7517_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_1d9dc7517_ident._field_kind)}));
						goto _iter_next_4393976944;
					}
					goto _match_end_4393980768;
					_case_end_4393986112:;
					_match_end_4393980768:;
				}
				(*this)._method_push_err(_1d9dc7517_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_1d9dc7517_ident._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
			}
			_iter_next_4393976944:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_ident = *_range_begin; goto _iter_begin_4393976944; }
			_iter_end_4393976944:;
		}
	}
}



inline jule::Bool _1d9dc7517_Sema::_method_is_use_alias_duplication(jule::Ref<_206e66325_ImportInfo>& _65044_imp) {
	if (_65044_imp->_field_alias.len() == 0LL) {
		return false;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1d9dc7517_imp2 = *_range_begin;
			_iter_begin_4394015936:;
			{
				if ((_1d9dc7517_imp2).alloc == (_65044_imp).alloc) {
					goto _iter_end_4394015936;
				}
				if (_1d9dc7517_imp2->_field_alias == _65044_imp->_field_alias) {
					return true;
				}
			}
			_iter_next_4394015936:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_imp2 = *_range_begin; goto _iter_begin_4394015936; }
			_iter_end_4394015936:;
		}
	}
	return false;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_import(jule::Ref<_206e66325_ImportInfo> _66635_imp) {
	if (_66635_imp->_field_cpp_linked || (_66635_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	if ((*this)._method_is_use_alias_duplication(_66635_imp)) {
		(*this)._method_push_err(_66635_imp->_field_token,jule::Str("identifier \"@\" is already used for another use declaration", 58),jule::Slice<jule::Any>({jule::Any(_66635_imp->_field_alias)}));
		(*this)._method_push_suggestion(jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>({}));
	}
	if (_66635_imp->_field_duplicate) {
		return true;
	}
	jule::Ref<_1d9dc7517_Sema> _68017_sema = jule::new_struct<_1d9dc7517_Sema>(new( std::nothrow ) _1d9dc7517_Sema(jule::Slice<_20377124e_Log>(),jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>(),jule::Ref<_1da2aa301_SymbolTable>(),(*this)._field_flags));
	_68017_sema->_method_check(_66635_imp->_field_package->_field_files);
	if (_68017_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_68017_sema->_field_errors);
		return false;
	}
	(*this)._method_check_import_selections(_66635_imp);
	return true;
}



inline void _1d9dc7517_Sema::_method_check_imports(void) {
	{
		auto _range_expr = (*this)._field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_file = *_range_begin;
			_iter_begin_4394035264:;
			{
				(*this)._method_set_current_file(_1d9dc7517_file);
				{
					auto _range_expr = _1d9dc7517_file->_field_imports;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_206e66325_ImportInfo> _1d9dc7517_imp = *_range_begin;
						_iter_begin_4394040048:;
						{
							jule::Bool _69821_ok = (*this)._method_check_import(_1d9dc7517_imp);
							if ((!(_69821_ok))) {
								(*this)._method_push_err(_1d9dc7517_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_1d9dc7517_imp->_field_link_path)}));
								return;
							}
						}
						_iter_next_4394040048:;
						++_range_begin;
						if (_range_begin != _range_end) { _1d9dc7517_imp = *_range_begin; goto _iter_begin_4394040048; }
						_iter_end_4394040048:;
					}
				}
			}
			_iter_next_4394035264:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_file = *_range_begin; goto _iter_begin_4394035264; }
			_iter_end_4394035264:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_impl_file_impls(void) {
	{
		auto _range_expr = this->self->_field_file->_field_impls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b07093_Impl> _1d9dc7517_imp = *_range_begin;
			_iter_begin_4394041152:;
			{
				this->self->_method_impl_impl(_1d9dc7517_imp);
			}
			_iter_next_4394041152:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_imp = *_range_begin; goto _iter_begin_4394041152; }
			_iter_end_4394041152:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_impl_impls(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_file = *_range_begin;
			_iter_begin_4394050832:;
			{
				this->self->_method_set_current_file(_1d9dc7517_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_4394050832:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_file = *_range_begin; goto _iter_begin_4394050832; }
			_iter_end_4394050832:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_check_enums(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_file = *_range_begin;
			_iter_begin_4394055264:;
			{
				this->self->_method_set_current_file(_1d9dc7517_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_4394055264:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_file = *_range_begin; goto _iter_begin_4394055264; }
			_iter_end_4394055264:;
		}
	}
}



inline jule::Bool _1d9dc7517_Sema::_method_check_type_with_refers(jule::Ref<_1da411226_TypeSymbol> _73146_t,jule::Trait<_206c8d636_Lookup> _73213_l,jule::Ref<_1da411226_Referencer> _73228_referencer) {
	jule::Bool _73255_ok = jule::Bool();
	if (_73146_t->_method_checked()) {
		_73255_ok = true;
		return _73255_ok;
	}
	_1da411226_TypeChecker _73617_tc = _1da411226_TypeChecker(this->self,_73213_l,_73228_referencer,_20542560a_Token(),jule::Slice<jule::Ref<_2053703bd_GenericDecl>>(),jule::Slice<jule::Ref<_1da411226_TypeAlias>>(),jule::Bool());
	_73617_tc._method_check(_73146_t);
	_73255_ok = _73146_t->_method_checked();
	return _73255_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_type(jule::Ref<_1da411226_TypeSymbol> _74734_t,jule::Trait<_206c8d636_Lookup> _74754_l) {
	jule::Bool _74767_ok = jule::Bool();
	_74767_ok = this->self->_method_check_type_with_refers(_74734_t,_74754_l,jule::new_ref<_1da411226_Referencer>());
	return _74767_ok;
}



inline jule::Ref<_1da411226_TypeKind> _1d9dc7517_Sema::_method_build_type_with_generics(jule::Ref<_2053703bd_TypeDecl> _75348_t,jule::Slice<jule::Ref<_1da411226_TypeAlias>> _75413_generics) {
	jule::Ref<_1da411226_TypeChecker> _75517_tc = jule::new_struct<_1da411226_TypeChecker>(new( std::nothrow ) _1da411226_TypeChecker(this->self,this->self,jule::Ref<_1da411226_Referencer>(),_20542560a_Token(),jule::Slice<jule::Ref<_2053703bd_GenericDecl>>(),_75413_generics,jule::Bool()));
	return _75517_tc->_method_check_decl(_75348_t);
}



inline jule::Ref<_1da411226_TypeKind> _1d9dc7517_Sema::_method_build_type(jule::Ref<_2053703bd_TypeDecl> _76434_t) {
	return this->self->_method_build_type_with_generics(_76434_t,nullptr);
}



inline jule::Ref<_1da2d3bdc_Data> _1d9dc7517_Sema::_method_evalpd(jule::Ref<_2053703bd_Expr> _77030_expr,jule::Trait<_206c8d636_Lookup> _77047_l,jule::Ref<_1da411226_TypeKind> _77113_p,jule::Ref<_1d9e22661_Var> _77131_owner) {
	jule::Ref<_1da2d3bdc_Eval> _77217_e = jule::new_struct<_1da2d3bdc_Eval>(new( std::nothrow ) _1da2d3bdc_Eval(this->self,_77047_l,jule::Ref<_1da411226_TypeKind>(),jule::Bool(),_77131_owner));
	{
		auto _match_expr{ _77047_l };
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_ScopeChecker>>())) { goto _case_end_4394108736; }
		_case_begin_4394108736:;
		{
			_77217_e->_field_unsafety=_77047_l.operator jule::Ref<_206b0557a_ScopeChecker>()->_method_is_unsafe();
		}
		goto _match_end_4394108320;
		_case_end_4394108736:;
		_match_end_4394108320:;
	}
	_77217_e->_field_prefix=_77113_p;
	return _77217_e->_method_eval_expr(_77030_expr);
}



inline jule::Ref<_1da2d3bdc_Data> _1d9dc7517_Sema::_method_evalp(jule::Ref<_2053703bd_Expr> _78929_expr,jule::Trait<_206c8d636_Lookup> _78946_l,jule::Ref<_1da411226_TypeKind> _78961_p) {
	return this->self->_method_evalpd(_78929_expr,_78946_l,_78961_p,jule::new_ref<_1d9e22661_Var>());
}



inline jule::Ref<_1da2d3bdc_Data> _1d9dc7517_Sema::_method_eval(jule::Ref<_2053703bd_Expr> _79428_expr,jule::Trait<_206c8d636_Lookup> _79445_l) {
	return this->self->_method_evalp(_79428_expr,_79445_l,jule::new_ref<_1da411226_TypeKind>());
}



inline void _1d9dc7517_Sema::_method_check_assign_type(jule::Ref<_1da411226_TypeKind> _79841_dest,jule::Ref<_1da2d3bdc_Data> _79862_d,_20542560a_Token _79913_error_token,jule::Bool _79933_deref) {
	jule::Ref<_1da120d15_AssignTypeChecker> _80017_atc = jule::new_struct<_1da120d15_AssignTypeChecker>(new( std::nothrow ) _1da120d15_AssignTypeChecker(this->self,_79841_dest,_79862_d,_79913_error_token,_79933_deref));
	jule::Bool _80713_ok = _80017_atc->_method_check();
	if ((!(_80713_ok))) {
		return;
	}
	if ((!(_79862_d->_method_is_const())) || (!(jule::real(_79841_dest->_method_prim())))) {
		return;
	}
	jule::Str _81617_kind = _79841_dest->_method_prim()->_field_kind;
	{
		if (!((_1a8a8de8a_is_sig_int(_81617_kind)))) { goto _case_end_4394129664; }
		_case_begin_4394129664:;
		{
			_79862_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_79862_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4394129504;
		_case_end_4394129664:;
		if (!((_1a8a8de8a_is_unsig_int(_81617_kind)))) { goto _case_end_4394129776; }
		_case_begin_4394129776:;
		{
			_79862_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_79862_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4394129504;
		_case_end_4394129776:;
		if (!((_1a8a8de8a_is_float(_81617_kind)))) { goto _case_end_4394129904; }
		_case_begin_4394129904:;
		{
			_79862_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_79862_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4394129504;
		_case_end_4394129904:;
		_match_end_4394129504:;
	}
}



inline jule::Bool _1d9dc7517_Sema::_method_check_type_compatibility(jule::Ref<_1da411226_TypeKind> _82548_dest,jule::Ref<_1da411226_TypeKind> _82613_src,_20542560a_Token _82633_error_token,jule::Bool _82653_deref) {
	if (jule::real(_82613_src->_method_tup())) {
		this->self->_method_push_err(_82633_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_82548_dest->_method_to_str()),jule::Any(_82613_src->_method_to_str())}));
		return false;
	}
	jule::Ref<_1da120d15_TypeCompatibilityChecker> _83417_tcc = jule::new_struct<_1da120d15_TypeCompatibilityChecker>(new( std::nothrow ) _1da120d15_TypeCompatibilityChecker(this->self,_82548_dest,_82613_src,_82633_error_token,jule::Bool(),_82653_deref,jule::Bool()));
	jule::Bool _84113_ok = _83417_tcc->_method_check();
	if ((!(_84113_ok))) {
		this->self->_method_push_err(_82633_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_82548_dest->_method_to_str()),jule::Any(_82613_src->_method_to_str())}));
	}
	return _84113_ok;
}



inline jule::Ref<_1da411226_TypeKind> _1d9dc7517_Sema::_method_build_non_generic_type_kind(jule::Ref<_2053703bd_TypeDecl> _85551_ast,jule::Slice<jule::Ref<_2053703bd_GenericDecl>> _85613_generics) {
	jule::Ref<_1da411226_TypeChecker> _85717_tc = jule::new_struct<_1da411226_TypeChecker>(new( std::nothrow ) _1da411226_TypeChecker(this->self,this->self,jule::Ref<_1da411226_Referencer>(),_20542560a_Token(),_85613_generics,jule::Slice<jule::Ref<_1da411226_TypeAlias>>(),jule::Bool()));
	return _85717_tc->_method_check_decl(_85551_ast);
}



inline void _1d9dc7517_Sema::_method_build_fn_non_generic_type_kinds(jule::Ref<_2053ddd54_FnIns> _86555_f) {
	jule::Slice<jule::Ref<_2053703bd_GenericDecl>> _86617_generics = nullptr;
	if (_86555_f->_field_decl->_method_is_method()) {
		_86617_generics=jule::append(_86555_f->_field_decl->_field_generics,_86555_f->_field_decl->_field_owner->_field_generics);
	} else {
		_86617_generics=_86555_f->_field_decl->_field_generics;
	}
	{
		auto _range_expr = _86555_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_ParamIns> _1d9dc7517_p = *_range_begin;
			_iter_begin_4394168752:;
			{
				if ((!(_1d9dc7517_p->_field_decl->_method_is_self()))) {
					_1d9dc7517_p->_field_kind=this->self->_method_build_non_generic_type_kind(_1d9dc7517_p->_field_decl->_field_kind->_field_decl,_86617_generics);
				}
			}
			_iter_next_4394168752:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_p = *_range_begin; goto _iter_begin_4394168752; }
			_iter_end_4394168752:;
		}
	}
	if ((!(_86555_f->_field_decl->_method_is_void()))) {
		_86555_f->_field_result=this->self->_method_build_non_generic_type_kind(_86555_f->_field_decl->_field_result->_field_kind->_field_decl,_86617_generics);
	}
}



inline jule::Ref<_2053ddd54_FnIns> _1d9dc7517_Sema::_method_get_trait_check_fn_kind(jule::Ref<_2053ddd54_Fn> _88347_f) {
	jule::Ref<_2053ddd54_FnIns> _88417_ins = _88347_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_88417_ins);
	return _88417_ins;
}



inline jule::Bool _1d9dc7517_Sema::_method_reload_fn_ins_types(jule::Ref<_2053ddd54_FnIns> _88943_f) {
	jule::Bool _88956_ok = jule::Bool();
	if (_88943_f->_method_is_builtin() || _88943_f->_method_is_anon()) {
		_88956_ok = true;
		return _88956_ok;
	}
	jule::Ref<_1d9dc7517_Sema> _89417_sema = _88943_f->_field_decl->_field_sema;
	jule::Ref<_1da2aa301_SymbolTable> _89617_old = _88943_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_88943_f->_field_decl->_field_sema->_method_set_current_file(_89617_old);
	});
	jule::Ref<_1da2aa301_SymbolTable> _89817_file = _1d9dc7517_find_file(_88943_f->_field_decl->_field_sema->_field_files,_88943_f->_field_decl->_field_token._field_file);
	if (jule::real(_89817_file)) {
		_88943_f->_field_decl->_field_sema->_method_set_current_file(_89817_file);
	}
	jule::I64 _90317_size = _88943_f->_field_generics.len();
	if (jule::real(_88943_f->_field_decl) && jule::real(_88943_f->_field_decl->_field_owner)) {
		_90317_size+=static_cast<jule::I64>(_88943_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ref<_1da411226_TypeAlias>> _90817_generics = jule::Slice<jule::Ref<_1da411226_TypeAlias>>::alloc(0LL,static_cast<jule::Int>(_90317_size));
	{
		auto _range_expr = _88943_f->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d9dc7517_i = 0;
			jule::Ref<_1da411226_TypeKind> _1d9dc7517_g = *_range_begin;
			_iter_begin_4394203200:;
			{
				_90817_generics=jule::append(_90817_generics,jule::Slice<jule::Ref<_1da411226_TypeAlias>>({jule::new_struct<_1da411226_TypeAlias>(new( std::nothrow ) _1da411226_TypeAlias(jule::Ref<_2053703bd_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_20542560a_Token(),_88943_f->_field_decl->_field_generics[static_cast<jule::Int>(_1d9dc7517_i)]->_field_ident,jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),_1d9dc7517_g)),jule::Str(),jule::Slice<jule::Any>()))}));
			}
			_iter_next_4394203200:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d9dc7517_i; _1d9dc7517_g = *_range_begin; goto _iter_begin_4394203200; }
			_iter_end_4394203200:;
		}
	}
	if (jule::real(_88943_f->_field_decl) && jule::real(_88943_f->_field_decl->_field_owner)) {
		jule::Ref<_2053cdc01_StructIns> _92021_owner = _88943_f->_field_owner;
		{
			auto _range_expr = _92021_owner->_field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1d9dc7517_i = 0;
				jule::Ref<_1da411226_TypeKind> _1d9dc7517_g = *_range_begin;
				_iter_begin_4394205424:;
				{
					_90817_generics=jule::append(_90817_generics,jule::Slice<jule::Ref<_1da411226_TypeAlias>>({jule::new_struct<_1da411226_TypeAlias>(new( std::nothrow ) _1da411226_TypeAlias(jule::Ref<_2053703bd_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_20542560a_Token(),_92021_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1d9dc7517_i)]->_field_ident,jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),_1d9dc7517_g)),jule::Str(),jule::Slice<jule::Any>()))}));
				}
				_iter_next_4394205424:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1d9dc7517_i; _1d9dc7517_g = *_range_begin; goto _iter_begin_4394205424; }
				_iter_end_4394205424:;
			}
		}
	}
	_88956_ok=true;
	{
		auto _range_expr = _88943_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_ParamIns> _1d9dc7517_p = *_range_begin;
			_iter_begin_4394218640:;
			{
				if ((!(_1d9dc7517_p->_field_decl->_method_is_self()))) {
					_1d9dc7517_p->_field_kind=_89417_sema->_method_build_type_with_generics(_1d9dc7517_p->_field_decl->_field_kind->_field_decl,_90817_generics);
					_88956_ok=jule::real(_1d9dc7517_p->_field_kind) && _88956_ok;
				}
			}
			_iter_next_4394218640:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_p = *_range_begin; goto _iter_begin_4394218640; }
			_iter_end_4394218640:;
		}
	}
	if ((!(_88943_f->_field_decl->_method_is_void()))) {
		_88943_f->_field_result=_89417_sema->_method_build_type_with_generics(_88943_f->_field_decl->_field_result->_field_kind->_field_decl,_90817_generics);
		_88956_ok=jule::real(_88943_f->_field_result) && _88956_ok;
	}
	if ((_89417_sema).alloc != (this->self).alloc) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_89417_sema->_field_errors);
	}
	_88956_ok = _88956_ok;
	return _88956_ok;
}



inline void _1d9dc7517_Sema::_method_check_validity_for_init_expr(jule::Bool _95148_left_mut,jule::Bool _95164_left_ref,jule::Ref<_1da411226_TypeKind> _9529_left_kind,jule::Ref<_1da2d3bdc_Data> _95235_d,_20542560a_Token _95249_error_token) {
	if ((_95148_left_mut && (!(_95235_d->_field_mutable))) && _95235_d->_field_kind->_method_mutable()) {
		this->self->_method_push_err(_95249_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
	}
	if (_95164_left_ref) {
		{
			auto _match_expr{ _95235_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>() || _match_expr.type_is<jule::Ref<_206e63542_TraitSubIdentExprModel>>() || _match_expr.type_is<jule::Ref<_206e63542_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ref<_206e63542_StructSubIdentExprModel>>() || _match_expr.type_is<jule::Ref<_206e63542_CommonSubIdentExprModel>>())) { goto _case_end_4394235536; }
			goto _match_end_4394234064;
			_case_end_4394235536:;
			if (!(_match_expr.type_is<jule::Ref<_206e63542_UnaryExprModel>>())) { goto _case_end_4394235024; }
			_case_begin_4394235024:;
			{
				jule::Ref<_206e63542_UnaryExprModel> _96621_unary = _95235_d->_field_model.operator jule::Ref<_206e63542_UnaryExprModel>();
				if (_96621_unary->_field_op == jule::Str("*", 1)) {
					goto _match_end_4394234064;
				}
				goto _case_begin_4394234720;
			}
			goto _match_end_4394234064;
			_case_end_4394235024:;
			_case_begin_4394234720:;
			{
				this->self->_method_push_err(_95249_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4394234064;
			_case_end_4394234720:;
			_match_end_4394234064:;
		}
		if (_95148_left_mut && (!(_95235_d->_field_mutable))) {
			this->self->_method_push_err(_95249_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>({}));
		}
	}
	jule::Ref<_1da120d15_AssignTypeChecker> _98217_atc = jule::new_struct<_1da120d15_AssignTypeChecker>(new( std::nothrow ) _1da120d15_AssignTypeChecker(this->self,jule::Ref<_1da411226_TypeKind>(),_95235_d,_95249_error_token,jule::Bool()));
	_98217_atc->_method_check_validity();
}



inline jule::Bool _1d9dc7517_Sema::_method_check_type_alias_decl_kind(jule::Ref<_1da411226_TypeAlias> _99050_ta,jule::Trait<_206c8d636_Lookup> _99070_l) {
	jule::Bool _99083_ok = jule::Bool();
	jule::Ref<_1da2aa301_SymbolTable> _99117_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_99117_old);
	});
	jule::Ref<_1da2aa301_SymbolTable> _99317_file = _1d9dc7517_find_file(this->self->_field_files,_99050_ta->_field_token._field_file);
	if (jule::real(_99317_file)) {
		this->self->_method_set_current_file(_99317_file);
	}
	_99083_ok=this->self->_method_check_type_with_refers(_99050_ta->_field_kind,_99070_l,jule::new_struct<_1da411226_Referencer>(new( std::nothrow ) _1da411226_Referencer(_99050_ta->_field_ident,jule::Any(_99050_ta),(&(_99050_ta->_field_refers)))));
	if ((_99083_ok && jule::real(_99050_ta->_field_kind->_field_kind->_method_arr())) && _99050_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_99050_ta->_field_kind->_field_decl->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
		_99083_ok=false;
	}
	return _99083_ok;
}



inline void _1d9dc7517_Sema::_method_check_type_alias_decl(jule::Ref<_1da411226_TypeAlias> _101045_ta,jule::Trait<_206c8d636_Lookup> _101065_l) {
	if (_20542560a_is_ignore_ident(_101045_ta->_field_ident)) {
		this->self->_method_push_err(_101045_ta->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_101045_ta,_101065_l);
}



inline void _1d9dc7517_Sema::_method_check_type_alias_decl_dup(jule::Ref<_1da411226_TypeAlias> _101849_ta) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_101849_ta).alloc)),_101849_ta->_field_ident,_101849_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_101849_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_101849_ta->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_101849_ta,this->self);
}



inline jule::Bool _1d9dc7517_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _102744_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da411226_TypeAlias> _1d9dc7517_ta = *_range_begin;
			_iter_begin_4394277616:;
			{
				this->self->_method_check_type_alias_decl_dup(_1d9dc7517_ta);
				if (this->self->_field_errors.len() > 0LL) {
					_102744_ok = false;
					return _102744_ok;
				}
			}
			_iter_next_4394277616:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_ta = *_range_begin; goto _iter_begin_4394277616; }
			_iter_end_4394277616:;
		}
	}
	_102744_ok = true;
	return _102744_ok;
}



inline void _1d9dc7517_Sema::_method_check_enum_items_dup(jule::Ref<_206b06c0d_Enum> _103939_e) {
	{
		auto _range_expr = _103939_e->_field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b06c0d_EnumItem> _1d9dc7517_item = *_range_begin;
			_iter_begin_4394283792:;
			{
				if (_20542560a_is_ignore_ident(_1d9dc7517_item->_field_ident)) {
					(*this)._method_push_err(_1d9dc7517_item->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
				} else {
					{
						auto _range_expr = _103939_e->_field_items;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_206b06c0d_EnumItem> _1d9dc7517_citem = *_range_begin;
							_iter_begin_4394285856:;
							{
								if (_1d9dc7517_item == _1d9dc7517_citem) {
									goto _iter_end_4394285856;
								} else if (_1d9dc7517_item->_field_ident == _1d9dc7517_citem->_field_ident) {
									(*this)._method_push_err(_1d9dc7517_item->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1d9dc7517_item->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_4394285856;
								}
							}
							_iter_next_4394285856:;
							++_range_begin;
							if (_range_begin != _range_end) { _1d9dc7517_citem = *_range_begin; goto _iter_begin_4394285856; }
							_iter_end_4394285856:;
						}
					}
				}
			}
			_iter_next_4394283792:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_item = *_range_begin; goto _iter_begin_4394283792; }
			_iter_end_4394283792:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_check_enum_items_str(jule::Ref<_206b06c0d_Enum> _105744_e) {
	{
		auto _range_expr = _105744_e->_field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b06c0d_EnumItem> _1d9dc7517_item = *_range_begin;
			_iter_begin_4394295792:;
			{
				if (_1d9dc7517_item->_method_auto_expr()) {
					_1d9dc7517_item->_field_value=jule::new_struct<_1da2d3bdc_Value>(new( std::nothrow ) _1da2d3bdc_Value(jule::Ref<_2053703bd_Expr>(),jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::Ref<_1da411226_TypeKind>(),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a89ca987_Const::_static_method_new_str(_1d9dc7517_item->_field_ident)))));
					_1d9dc7517_item->_field_value->_field_data->_field_model=jule::Any(_1d9dc7517_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_1da2d3bdc_Data> _106725_d = this->self->_method_eval(_1d9dc7517_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_106725_d)))) {
						goto _iter_next_4394295792;
					}
					if ((!(_106725_d->_method_is_const()))) {
						this->self->_method_push_err(_1d9dc7517_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(_105744_e->_field_kind->_field_kind,_106725_d,_1d9dc7517_item->_field_token,false);
					_1d9dc7517_item->_field_value->_field_data=_106725_d;
				}
			}
			_iter_next_4394295792:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_item = *_range_begin; goto _iter_begin_4394295792; }
			_iter_end_4394295792:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_check_enum_items_int(jule::Ref<_206b06c0d_Enum> _108244_e) {
	jule::U64 _108317_max = static_cast<jule::U64>(_1da826509_max(_108244_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		auto _range_expr = _108244_e->_field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d9dc7517_i = 0;
			jule::Ref<_206b06c0d_EnumItem> _1d9dc7517_item = *_range_begin;
			_iter_begin_4394315472:;
			{
				if (_108317_max == 0LL) {
					this->self->_method_push_err(_1d9dc7517_item->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				} else {
					(_108317_max)--;
				}
				if (_1d9dc7517_item->_method_auto_expr()) {
					_1d9dc7517_item->_field_value=jule::new_struct<_1da2d3bdc_Value>(new( std::nothrow ) _1da2d3bdc_Value(jule::Ref<_2053703bd_Expr>(),jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::Ref<_1da411226_TypeKind>(),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a89ca987_Const::_static_method_new_u64(static_cast<jule::U64>(_108317_max - (_108317_max - static_cast<jule::U64>(_1d9dc7517_i))))))));
					_1d9dc7517_item->_field_value->_field_data->_field_model=jule::Any(_1d9dc7517_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_1da2d3bdc_Data> _109925_d = this->self->_method_eval(_1d9dc7517_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_109925_d)))) {
						goto _iter_next_4394315472;
					}
					if ((!(_109925_d->_method_is_const()))) {
						this->self->_method_push_err(_1d9dc7517_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(_108244_e->_field_kind->_field_kind,_109925_d,_1d9dc7517_item->_field_token,false);
					_1d9dc7517_item->_field_value->_field_data=_109925_d;
				}
			}
			_iter_next_4394315472:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d9dc7517_i; _1d9dc7517_item = *_range_begin; goto _iter_begin_4394315472; }
			_iter_end_4394315472:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_check_enum_decl(jule::Ref<_206b06c0d_Enum> _111439_e) {
	if (_20542560a_is_ignore_ident(_111439_e->_field_ident)) {
		this->self->_method_push_err(_111439_e->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_111439_e).alloc)),_111439_e->_field_ident,false)) {
		this->self->_method_push_err(_111439_e->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_111439_e->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_111439_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_111439_e->_field_token,jule::Str("there is no member for enum: @", 30),jule::Slice<jule::Any>({jule::Any(_111439_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_111439_e);
	if (jule::real(_111439_e->_field_kind)) {
		if ((!(this->self->_method_check_type(_111439_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_111439_e->_field_kind=jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ref<_1da411226_Prim> _114117_t = _111439_e->_field_kind->_field_kind->_method_prim();
	if ((!(jule::real(_114117_t)))) {
		this->self->_method_push_err(_111439_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!((_114117_t->_method_is_str()))) { goto _case_end_4394356560; }
		_case_begin_4394356560:;
		{
			this->self->_method_check_enum_items_str(_111439_e);
		}
		goto _match_end_4394354160;
		_case_end_4394356560:;
		if (!((_1a8a8de8a_is_int(_114117_t->_method_to_str())))) { goto _case_end_4394354496; }
		_case_begin_4394354496:;
		{
			this->self->_method_check_enum_items_int(_111439_e);
		}
		goto _match_end_4394354160;
		_case_end_4394354496:;
		_case_begin_4394346528:;
		{
			this->self->_method_push_err(_111439_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4394354160;
		_case_end_4394346528:;
		_match_end_4394354160:;
	}
}



inline jule::Bool _1d9dc7517_Sema::_method_check_enum_decls(void) {
	jule::Bool _116138_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b06c0d_Enum> _1d9dc7517_e = *_range_begin;
			_iter_begin_4394362256:;
			{
				this->self->_method_check_enum_decl(_1d9dc7517_e);
				if (this->self->_field_errors.len() > 0LL) {
					_116138_ok = false;
					return _116138_ok;
				}
			}
			_iter_next_4394362256:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_e = *_range_begin; goto _iter_begin_4394362256; }
			_iter_end_4394362256:;
		}
	}
	_116138_ok = true;
	return _116138_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_decl_generics(jule::Slice<jule::Ref<_2053703bd_GenericDecl>> _117338_generics) {
	jule::Bool _117366_ok = jule::Bool();
	_117366_ok=true;
	{
		auto _range_expr = _117338_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d9dc7517_i = 0;
			jule::Ref<_2053703bd_GenericDecl> _1d9dc7517_g = *_range_begin;
			_iter_begin_4394369088:;
			{
				if (_20542560a_is_ignore_ident(_1d9dc7517_g->_field_ident)) {
					(*this)._method_push_err(_1d9dc7517_g->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
					_117366_ok=false;
					goto _iter_next_4394369088;
				}
				_julec_label_duplication_lookup:;
				{
					auto _range_expr = _117338_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1d9dc7517_j = 0;
						jule::Ref<_2053703bd_GenericDecl> _1d9dc7517_ct = *_range_begin;
						_iter_begin_4394371920:;
						{
							{
								if (!((_1d9dc7517_j >= _1d9dc7517_i))) { goto _case_end_4394377440; }
								_case_begin_4394377440:;
								{
									goto _iter_end_4394371920;
								}
								goto _match_end_4394377200;
								_case_end_4394377440:;
								if (!((_1d9dc7517_g->_field_ident == _1d9dc7517_ct->_field_ident))) { goto _case_end_4394377568; }
								_case_begin_4394377568:;
								{
									(*this)._method_push_err(_1d9dc7517_g->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1d9dc7517_g->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									_117366_ok=false;
									goto _iter_end_4394371920;
								}
								goto _match_end_4394377200;
								_case_end_4394377568:;
								_match_end_4394377200:;
							}
						}
						_iter_next_4394371920:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1d9dc7517_j; _1d9dc7517_ct = *_range_begin; goto _iter_begin_4394371920; }
						_iter_end_4394371920:;
					}
				}
			}
			_iter_next_4394369088:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d9dc7517_i; _1d9dc7517_g = *_range_begin; goto _iter_begin_4394369088; }
			_iter_end_4394369088:;
		}
	}
	return _117366_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_fn_decl_params_dup(jule::Ref<_2053ddd54_Fn> _120143_f) {
	jule::Bool _120153_ok = jule::Bool();
	_120153_ok=true;
	_julec_label_check:;
	{
		auto _range_expr = _120143_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d9dc7517_i = 0;
			jule::Ref<_2053ddd54_Param> _1d9dc7517_p = *_range_begin;
			_iter_begin_4394386464:;
			{
				{
					auto _range_expr = _120143_f->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_2053703bd_GenericDecl> _1d9dc7517_g = *_range_begin;
						_iter_begin_4394389712:;
						{
							if (_1d9dc7517_p->_field_ident == _1d9dc7517_g->_field_ident) {
								_120153_ok=false;
								(*this)._method_push_err(_1d9dc7517_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1d9dc7517_p->_field_ident)}));
								(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								goto _iter_next_4394386464;
							}
						}
						_iter_next_4394389712:;
						++_range_begin;
						if (_range_begin != _range_end) { _1d9dc7517_g = *_range_begin; goto _iter_begin_4394389712; }
						_iter_end_4394389712:;
					}
				}
				_julec_label_params_lookup:;
				{
					auto _range_expr = _120143_f->_field_params;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1d9dc7517_j = 0;
						jule::Ref<_2053ddd54_Param> _1d9dc7517_jp = *_range_begin;
						_iter_begin_4394390336:;
						{
							{
								if (!((_1d9dc7517_j >= _1d9dc7517_i))) { goto _case_end_4394398176; }
								_case_begin_4394398176:;
								{
									goto _iter_end_4394390336;
								}
								goto _match_end_4394397920;
								_case_end_4394398176:;
								if (!((_20542560a_is_anon_ident(_1d9dc7517_p->_field_ident) || _20542560a_is_anon_ident(_1d9dc7517_jp->_field_ident)))) { goto _case_end_4394398304; }
								_case_begin_4394398304:;
								{
									goto _iter_end_4394390336;
								}
								goto _match_end_4394397920;
								_case_end_4394398304:;
								if (!((_1d9dc7517_p->_field_ident == _1d9dc7517_jp->_field_ident))) { goto _case_end_4394398432; }
								_case_begin_4394398432:;
								{
									_120153_ok=false;
									(*this)._method_push_err(_1d9dc7517_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1d9dc7517_p->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_next_4394386464;
								}
								goto _match_end_4394397920;
								_case_end_4394398432:;
								_match_end_4394397920:;
							}
						}
						_iter_next_4394390336:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1d9dc7517_j; _1d9dc7517_jp = *_range_begin; goto _iter_begin_4394390336; }
						_iter_end_4394390336:;
					}
				}
			}
			_iter_next_4394386464:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d9dc7517_i; _1d9dc7517_p = *_range_begin; goto _iter_begin_4394386464; }
			_iter_end_4394386464:;
		}
	}
	return _120153_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_fn_decl_result_dup(jule::Ref<_2053ddd54_Fn> _123743_f) {
	jule::Bool _123753_ok = jule::Bool();
	_123753_ok=true;
	if (_123743_f->_method_is_void()) {
		return _123753_ok;
	}
	{
		auto _range_expr = _123743_f->_field_result->_field_idents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d9dc7517_i = 0;
			_20542560a_Token _1d9dc7517_v = *_range_begin;
			_iter_begin_4394410016:;
			{
				if (_20542560a_is_ignore_ident(_1d9dc7517_v._field_kind)) {
					goto _iter_next_4394410016;
				}
				{
					auto _range_expr = _123743_f->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_2053703bd_GenericDecl> _1d9dc7517_g = *_range_begin;
						_iter_begin_4394413760:;
						{
							if (_1d9dc7517_v._field_kind == _1d9dc7517_g->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4394413760:;
						++_range_begin;
						if (_range_begin != _range_end) { _1d9dc7517_g = *_range_begin; goto _iter_begin_4394413760; }
						_iter_end_4394413760:;
					}
				}
				{
					auto _range_expr = _123743_f->_field_params;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_2053ddd54_Param> _1d9dc7517_p = *_range_begin;
						_iter_begin_4394417376:;
						{
							if (_1d9dc7517_v._field_kind == _1d9dc7517_p->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4394417376:;
						++_range_begin;
						if (_range_begin != _range_end) { _1d9dc7517_p = *_range_begin; goto _iter_begin_4394417376; }
						_iter_end_4394417376:;
					}
				}
				_julec_label_itself_lookup:;
				{
					auto _range_expr = _123743_f->_field_result->_field_idents;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1d9dc7517_j = 0;
						_20542560a_Token _1d9dc7517_jv = *_range_begin;
						_iter_begin_4394421840:;
						{
							{
								if (!((_1d9dc7517_j >= _1d9dc7517_i))) { goto _case_end_4394424352; }
								_case_begin_4394424352:;
								{
									goto _iter_end_4394421840;
								}
								goto _match_end_4394424112;
								_case_end_4394424352:;
								if (!((_1d9dc7517_jv._field_kind == _1d9dc7517_v._field_kind))) { goto _case_end_4394424480; }
								_case_begin_4394424480:;
								{
									goto _julec_label_exist;
								}
								goto _match_end_4394424112;
								_case_end_4394424480:;
								_match_end_4394424112:;
							}
						}
						_iter_next_4394421840:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1d9dc7517_j; _1d9dc7517_jv = *_range_begin; goto _iter_begin_4394421840; }
						_iter_end_4394421840:;
					}
				}
				goto _iter_next_4394410016;
				_julec_label_exist:;
				(*this)._method_push_err(_1d9dc7517_v,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1d9dc7517_v._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
				_123753_ok=false;
			}
			_iter_next_4394410016:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d9dc7517_i; _1d9dc7517_v = *_range_begin; goto _iter_begin_4394410016; }
			_iter_end_4394410016:;
		}
	}
	return _123753_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_fn_decl_types(jule::Ref<_2053ddd54_Fn> _128643_f) {
	jule::Bool _128653_ok = jule::Bool();
	_128653_ok=true;
	jule::Slice<jule::Ref<_2053703bd_GenericDecl>> _128917_generics = _128643_f->_field_generics;
	if (jule::real(_128643_f->_field_owner)) {
		_128917_generics=jule::append(_128917_generics,_128643_f->_field_owner->_field_generics);
	}
	{
		auto _range_expr = _128643_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Param> _1d9dc7517_p = *_range_begin;
			_iter_begin_4394440080:;
			{
				if ((!(_1d9dc7517_p->_method_is_self()))) {
					jule::Ref<_1da411226_TypeKind> _129625_kind = this->self->_method_build_non_generic_type_kind(_1d9dc7517_p->_field_kind->_field_decl,_128917_generics);
					_128653_ok=jule::real(_129625_kind) && _128653_ok;
					_1d9dc7517_p->_field_kind->_field_kind=_129625_kind;
				}
			}
			_iter_next_4394440080:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_p = *_range_begin; goto _iter_begin_4394440080; }
			_iter_end_4394440080:;
		}
	}
	if ((!(_128643_f->_method_is_void()))) {
		jule::Ref<_1da411226_TypeKind> _130321_kind = this->self->_method_build_non_generic_type_kind(_128643_f->_field_result->_field_kind->_field_decl,_128917_generics);
		_128653_ok=jule::real(_130321_kind) && _128653_ok;
		_128643_f->_field_result->_field_kind->_field_kind=_130321_kind;
	}
	_128653_ok = _128653_ok;
	return _128653_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_fn_decl_prototype(jule::Ref<_2053ddd54_Fn> _131347_f) {
	jule::Bool _131357_ok = jule::Bool();
	{
		if (!(((!(this->self->_method_check_decl_generics(_131347_f->_field_generics)))))) { goto _case_end_4394451296; }
		_case_begin_4394451296:;
		{
			_131357_ok = false;
			return _131357_ok;
		}
		goto _match_end_4394450064;
		_case_end_4394451296:;
		if (!(((!(this->self->_method_check_fn_decl_params_dup(_131347_f)))))) { goto _case_end_4394451408; }
		_case_begin_4394451408:;
		{
			_131357_ok = false;
			return _131357_ok;
		}
		goto _match_end_4394450064;
		_case_end_4394451408:;
		if (!(((!(this->self->_method_check_fn_decl_result_dup(_131347_f)))))) { goto _case_end_4394451520; }
		_case_begin_4394451520:;
		{
			_131357_ok = false;
			return _131357_ok;
		}
		goto _match_end_4394450064;
		_case_end_4394451520:;
		if (!(((!(this->self->_method_check_fn_decl_types(_131347_f)))))) { goto _case_end_4394450544; }
		_case_begin_4394450544:;
		{
			_131357_ok = false;
			return _131357_ok;
		}
		goto _match_end_4394450064;
		_case_end_4394450544:;
		_case_begin_4394450240:;
		{
			_131357_ok = true;
			return _131357_ok;
		}
		goto _match_end_4394450064;
		_case_end_4394450240:;
		_match_end_4394450064:;
	}
}



inline void _1d9dc7517_Sema::_method_check_trait_decl_method(jule::Ref<_2053ddd54_Fn> _132347_f) {
	if (_20542560a_is_ignore_ident(_132347_f->_field_ident)) {
		this->self->_method_push_err(_132347_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_fn_decl_prototype(_132347_f);
	_132347_f->_field_sema=this->self;
}



inline void _1d9dc7517_Sema::_method_check_trait_decl_methods(jule::Ref<_2065895c5_Trait> _133248_t) {
	{
		auto _range_expr = _133248_t->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d9dc7517_i = 0;
			jule::Ref<_2053ddd54_Fn> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394465280:;
			{
				this->self->_method_check_trait_decl_method(_1d9dc7517_f);
				_133248_t->_field_mutable=_133248_t->_field_mutable || _1d9dc7517_f->_field_params[0LL]->_field_mutable;
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto _range_expr = _133248_t->_field_methods;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1d9dc7517_j = 0;
						jule::Ref<_2053ddd54_Fn> _1d9dc7517_jf = *_range_begin;
						_iter_begin_4394472304:;
						{
							{
								if (!((_1d9dc7517_j >= _1d9dc7517_i))) { goto _case_end_4394475088; }
								_case_begin_4394475088:;
								{
									goto _iter_end_4394472304;
								}
								goto _match_end_4394474848;
								_case_end_4394475088:;
								if (!((_1d9dc7517_f->_field_ident == _1d9dc7517_jf->_field_ident))) { goto _case_end_4394475216; }
								_case_begin_4394475216:;
								{
									this->self->_method_push_err(_1d9dc7517_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1d9dc7517_f->_field_ident)}));
									this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_4394472304;
								}
								goto _match_end_4394474848;
								_case_end_4394475216:;
								_match_end_4394474848:;
							}
						}
						_iter_next_4394472304:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1d9dc7517_j; _1d9dc7517_jf = *_range_begin; goto _iter_begin_4394472304; }
						_iter_end_4394472304:;
					}
				}
			}
			_iter_next_4394465280:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d9dc7517_i; _1d9dc7517_f = *_range_begin; goto _iter_begin_4394465280; }
			_iter_end_4394465280:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_check_trait_decl(jule::Ref<_2065895c5_Trait> _136440_t) {
	if (_20542560a_is_ignore_ident(_136440_t->_field_ident)) {
		this->self->_method_push_err(_136440_t->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_136440_t).alloc)),_136440_t->_field_ident,false)) {
		this->self->_method_push_err(_136440_t->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_136440_t->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_trait_decl_methods(_136440_t);
}



inline jule::Bool _1d9dc7517_Sema::_method_check_trait_decls(void) {
	jule::Bool _137639_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2065895c5_Trait> _1d9dc7517_t = *_range_begin;
			_iter_begin_4394493600:;
			{
				this->self->_method_check_trait_decl(_1d9dc7517_t);
				if (this->self->_field_errors.len() > 0LL) {
					_137639_ok = false;
					return _137639_ok;
				}
			}
			_iter_next_4394493600:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_t = *_range_begin; goto _iter_begin_4394493600; }
			_iter_end_4394493600:;
		}
	}
	_137639_ok = true;
	return _137639_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_trait_impl_methods(jule::Ref<_2065895c5_Trait> _138847_base,jule::Ref<_206b07093_Impl> _138861_ipl) {
	jule::Bool _138875_ok = jule::Bool();
	_138875_ok=true;
	{
		auto _range_expr = _138861_ipl->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394501664:;
			{
				if ((!(jule::real(_138847_base->_method_find_method(_1d9dc7517_f->_field_ident))))) {
					(*this)._method_push_err(_1d9dc7517_f->_field_token,jule::Str("trait @ have not any define in this identifier: @", 49),jule::Slice<jule::Any>({jule::Any(_138847_base->_field_ident),jule::Any(_1d9dc7517_f->_field_ident)}));
					_138875_ok=false;
				}
			}
			_iter_next_4394501664:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394501664; }
			_iter_end_4394501664:;
		}
	}
	return _138875_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_impl_to_struct(jule::Ref<_2053cdc01_Struct> _139938_dest,jule::Ref<_206b07093_Impl> _139957_ipl) {
	jule::Bool _139971_ok = jule::Bool();
	_139971_ok=true;
	{
		auto _range_expr = _139957_ipl->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394511552:;
			{
				if (jule::real(_139938_dest->_method_find_method(_1d9dc7517_f->_field_ident,_1d9dc7517_f->_field_statically)) || jule::real(_139938_dest->_method_find_field(_1d9dc7517_f->_field_ident))) {
					this->self->_method_push_err(_1d9dc7517_f->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_139938_dest->_field_ident),jule::Any(_1d9dc7517_f->_field_ident)}));
					_139971_ok=false;
					goto _iter_next_4394511552;
				}
				if ((_139938_dest->_field_generics.len() > 0LL) && (_1d9dc7517_f->_field_generics.len() > 0LL)) {
					{
						auto _range_expr = _1d9dc7517_f->_field_generics;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_2053703bd_GenericDecl> _1d9dc7517_fg = *_range_begin;
							_iter_begin_4394519888:;
							{
								{
									auto _range_expr = _139938_dest->_field_generics;
									if (_range_expr.begin() != _range_expr.end()) {
										auto _range_begin = _range_expr.begin();
										const auto _range_end = _range_expr.end();
										jule::Ref<_2053703bd_GenericDecl> _1d9dc7517_dg = *_range_begin;
										_iter_begin_4394521872:;
										{
											if (_1d9dc7517_fg->_field_ident == _1d9dc7517_dg->_field_ident) {
												this->self->_method_push_err(_1d9dc7517_fg->_field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>({}));
												_139971_ok=false;
											}
										}
										_iter_next_4394521872:;
										++_range_begin;
										if (_range_begin != _range_end) { _1d9dc7517_dg = *_range_begin; goto _iter_begin_4394521872; }
										_iter_end_4394521872:;
									}
								}
							}
							_iter_next_4394519888:;
							++_range_begin;
							if (_range_begin != _range_end) { _1d9dc7517_fg = *_range_begin; goto _iter_begin_4394519888; }
							_iter_end_4394519888:;
						}
					}
				}
				_1d9dc7517_f->_field_sema=this->self;
				_1d9dc7517_f->_field_owner=_139938_dest;
				_139938_dest->_field_methods=jule::append(_139938_dest->_field_methods,jule::Slice<jule::Ref<_2053ddd54_Fn>>({_1d9dc7517_f}));
			}
			_iter_next_4394511552:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394511552; }
			_iter_end_4394511552:;
		}
	}
	return _139971_ok;
}



inline void _1d9dc7517_Sema::_method_impl_trait(jule::Ref<_206b07093_Impl> _142734_decl) {
	jule::Ref<_2065895c5_Trait> _142817_base = this->self->_method_find_trait(_142734_decl->_field_base._field_kind);
	if ((!(jule::real(_142817_base)))) {
		_142817_base=_206c94dac_find_builtin_trait(_142734_decl->_field_base._field_kind);
	}
	if ((!(jule::real(_142817_base)))) {
		this->self->_method_push_err(_142734_decl->_field_base,jule::Str("any valid base definition is not exist in this identifier: @", 60),jule::Slice<jule::Any>({jule::Any(_142734_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ref<_2053cdc01_Struct> _144117_dest = this->self->_method_find_struct(_142734_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_144117_dest)))) {
		this->self->_method_push_err(_142734_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_142734_decl->_field_dest._field_kind)}));
		return;
	}
	if (_144117_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_142734_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	_142817_base->_field_implemented=jule::append(_142817_base->_field_implemented,jule::Slice<jule::Ref<_2053cdc01_Struct>>({_144117_dest}));
	_144117_dest->_field_implements=jule::append(_144117_dest->_field_implements,jule::Slice<jule::Ref<_2065895c5_Trait>>({_142817_base}));
	{
		if (!(((!(this->self->_method_check_trait_impl_methods(_142817_base,_142734_decl)))))) { goto _case_end_4394548800; }
		_case_begin_4394548800:;
		{
			return;
		}
		goto _match_end_4394546496;
		_case_end_4394548800:;
		if (!(((!(this->self->_method_impl_to_struct(_144117_dest,_142734_decl)))))) { goto _case_end_4394549184; }
		_case_begin_4394549184:;
		{
			return;
		}
		goto _match_end_4394546496;
		_case_end_4394549184:;
		_match_end_4394546496:;
	}
}



inline void _1d9dc7517_Sema::_method_impl_struct(jule::Ref<_206b07093_Impl> _146135_decl) {
	
	jule::Ref<_2053cdc01_Struct> _146617_dest = this->self->_method_find_struct(_146135_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_146617_dest)))) {
		this->self->_method_push_err(_146135_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_146135_decl->_field_dest._field_kind)}));
		return;
	}
	if (_146617_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_146135_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!(((!(this->self->_method_impl_to_struct(_146617_dest,_146135_decl)))))) { goto _case_end_4394562992; }
		_case_begin_4394562992:;
		{
			return;
		}
		goto _match_end_4394561712;
		_case_end_4394562992:;
		_match_end_4394561712:;
	}
}



inline void _1d9dc7517_Sema::_method_impl_impl(jule::Ref<_206b07093_Impl> _148433_decl) {
	{
		if (!((_148433_decl->_method_is_trait_impl()))) { goto _case_end_4394566096; }
		_case_begin_4394566096:;
		{
			this->self->_method_impl_trait(_148433_decl);
		}
		goto _match_end_4394565872;
		_case_end_4394566096:;
		if (!((_148433_decl->_method_is_struct_impl()))) { goto _case_end_4394566224; }
		_case_begin_4394566224:;
		{
			this->self->_method_impl_struct(_148433_decl);
		}
		goto _match_end_4394565872;
		_case_end_4394566224:;
		_match_end_4394565872:;
	}
}



inline void _1d9dc7517_Sema::_method_check_var_decl(jule::Ref<_1d9e22661_Var> _149338_decl,jule::Trait<_206c8d636_Lookup> _149354_l) {
	if (_20542560a_is_ignore_ident(_149338_decl->_field_ident)) {
		this->self->_method_push_err(_149338_decl->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	if (_149338_decl->_method_is_type_inferred()) {
		if (_149338_decl->_field_statically) {
			this->self->_method_push_err(_149338_decl->_field_token,jule::Str("static variables must be have type annotation", 45),jule::Slice<jule::Any>({}));
		}
		if ((!(_149338_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_149338_decl->_field_token,jule::Str("type inference declarations should have a initializer", 53),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_check_type(_149338_decl->_field_kind,_149354_l);
	}
	if (_149338_decl->_field_constant && _149338_decl->_field_reference) {
		this->self->_method_push_err(_149338_decl->_field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>({}));
	}
	if ((!(_149338_decl->_method_is_initialized()))) {
		if (_149338_decl->_field_constant) {
			this->self->_method_push_err(_149338_decl->_field_token,jule::Str("constant variable must have initialize expression", 49),jule::Slice<jule::Any>({}));
		}
		if (_149338_decl->_field_statically) {
			this->self->_method_push_err(_149338_decl->_field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>({}));
		}
		if (_149338_decl->_field_reference) {
			this->self->_method_push_err(_149338_decl->_field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>({}));
		}
	}
}



inline void _1d9dc7517_Sema::_method_check_global_var_decl(jule::Ref<_1d9e22661_Var> _153045_decl) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_153045_decl).alloc)),_153045_decl->_field_ident,_153045_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_153045_decl->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_153045_decl->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_153045_decl->_field_cpp_linked && _153045_decl->_field_constant) {
		this->self->_method_push_err(_153045_decl->_field_token,jule::Str("cpp linked variables cannot constant", 36),jule::Slice<jule::Any>({}));
	}
	if (((!(_153045_decl->_field_cpp_linked)) && (!(_153045_decl->_field_constant))) && (!(_153045_decl->_field_statically))) {
		this->self->_method_push_err(_153045_decl->_field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_var_decl(_153045_decl,this->self);
}



inline jule::Bool _1d9dc7517_Sema::_method_check_global_decls(void) {
	jule::Bool _154740_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d9e22661_Var> _1d9dc7517_decl = *_range_begin;
			_iter_begin_4394624176:;
			{
				this->self->_method_check_global_var_decl(_1d9dc7517_decl);
				if (this->self->_field_errors.len() > 0LL) {
					_154740_ok = false;
					return _154740_ok;
				}
			}
			_iter_next_4394624176:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_decl = *_range_begin; goto _iter_begin_4394624176; }
			_iter_end_4394624176:;
		}
	}
	_154740_ok = true;
	return _154740_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_struct_trait_impl(jule::Ref<_2053cdc01_Struct> _155947_strct,jule::Ref<_2065895c5_Trait> _155967_trt) {
	jule::Bool _155982_ok = jule::Bool();
	{
		auto _range_expr = _155967_trt->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1d9dc7517_tf = *_range_begin;
			_iter_begin_4394632528:;
			{
				jule::Bool _156121_exist = false;
				jule::Ref<_2053ddd54_Fn> _156221_sf = _155947_strct->_method_find_method(_1d9dc7517_tf->_field_ident,_1d9dc7517_tf->_field_statically);
				jule::Ref<_2053ddd54_FnIns> _156317_tf_k = this->self->_method_get_trait_check_fn_kind(_1d9dc7517_tf);
				if (jule::real(_156221_sf)) {
					jule::Ref<_2053ddd54_FnIns> _156525_sf_k = this->self->_method_get_trait_check_fn_kind(_156221_sf);
					_156121_exist=((_156317_tf_k->_field_decl->_field_public == _156525_sf_k->_field_decl->_field_public) && (_156317_tf_k->_field_decl->_field_ident == _156525_sf_k->_field_decl->_field_ident)) && _156317_tf_k->_method_equals(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_156525_sf_k)));
				}
				if ((!(_156121_exist))) {
					
					jule::Str _157425_s = _156317_tf_k->_method_get_kind_str(true);
					if (_1d9dc7517_tf->_field_public) {
						_157425_s=jule::Str("pub ", 4) + _157425_s;
					}
					this->self->_method_push_err(_155947_strct->_field_token,jule::Str("trait @ derived but not implemented trait's \"@\" define", 54),jule::Slice<jule::Any>({jule::Any(_155967_trt->_field_ident),jule::Any(_157425_s)}));
					_155982_ok=false;
				}
			}
			_iter_next_4394632528:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_tf = *_range_begin; goto _iter_begin_4394632528; }
			_iter_end_4394632528:;
		}
	}
	return _155982_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_struct_impls(jule::Ref<_2053cdc01_Struct> _158542_s) {
	jule::Bool _158556_ok = jule::Bool();
	_158556_ok=true;
	{
		auto _range_expr = _158542_s->_field_implements;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2065895c5_Trait> _1d9dc7517_trt = *_range_begin;
			_iter_begin_4394652416:;
			{
				_158556_ok=this->self->_method_check_struct_trait_impl(_158542_s,_1d9dc7517_trt) && _158556_ok;
			}
			_iter_next_4394652416:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_trt = *_range_begin; goto _iter_begin_4394652416; }
			_iter_end_4394652416:;
		}
	}
	_158556_ok = _158556_ok;
	return _158556_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_struct_fields(jule::Ref<_2053cdc01_Struct> _159343_st) {
	jule::Bool _159358_ok = jule::Bool();
	_159358_ok=true;
	jule::Ref<_1da411226_TypeChecker> _159617_tc = jule::new_struct<_1da411226_TypeChecker>(new( std::nothrow ) _1da411226_TypeChecker(this->self,this->self,jule::new_struct<_1da411226_Referencer>(new( std::nothrow ) _1da411226_Referencer(_159343_st->_field_ident,jule::Any(_159343_st),nullptr)),_20542560a_Token(),_159343_st->_field_generics,jule::Slice<jule::Ref<_1da411226_TypeAlias>>(),jule::Bool()));
	jule::I64 _160613_n = _159343_st->_field_instances.len();
	{
		auto _range_expr = _159343_st->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Field> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394662864:;
			{
				_1d9dc7517_f->_field_owner=_159343_st;
				_1d9dc7517_f->_field_kind->_field_kind=_159617_tc->_method_check_decl(_1d9dc7517_f->_field_kind->_field_decl);
				_159358_ok=jule::real(_1d9dc7517_f->_field_kind->_field_kind) && _159358_ok;
				{
					auto _range_expr = _159343_st->_field_fields;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_2053cdc01_Field> _1d9dc7517_cf = *_range_begin;
						_iter_begin_4394667632:;
						{
							if (_1d9dc7517_f == _1d9dc7517_cf) {
								goto _iter_end_4394667632;
							} else if (_1d9dc7517_f->_field_ident == _1d9dc7517_cf->_field_ident) {
								this->self->_method_push_err(_1d9dc7517_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1d9dc7517_f->_field_ident)}));
								this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								_159358_ok=false;
							}
						}
						_iter_next_4394667632:;
						++_range_begin;
						if (_range_begin != _range_end) { _1d9dc7517_cf = *_range_begin; goto _iter_begin_4394667632; }
						_iter_end_4394667632:;
					}
				}
			}
			_iter_next_4394662864:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394662864; }
			_iter_end_4394662864:;
		}
	}
	if (_159358_ok && (_160613_n != _159343_st->_field_instances.len())) {
		jule::drop(_159617_tc->_field_referencer);
		_159343_st->_field_instances=_159343_st->_field_instances.slice(0LL,static_cast<jule::Int>(_160613_n));
		{
			auto _range_expr = _159343_st->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_2053cdc01_Field> _1d9dc7517_f = *_range_begin;
				_iter_begin_4394674864:;
				{
					_1d9dc7517_f->_field_kind->_field_kind=_159617_tc->_method_check_decl(_1d9dc7517_f->_field_kind->_field_decl);
				}
				_iter_next_4394674864:;
				++_range_begin;
				if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394674864; }
				_iter_end_4394674864:;
			}
		}
	}
	_159358_ok = _159358_ok;
	return _159358_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_struct_decl_methods(jule::Ref<_2053cdc01_Struct> _163549_s) {
	jule::Bool _163563_ok = jule::Bool();
	{
		auto _range_expr = _163549_s->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1d9dc7517_m = *_range_begin;
			_iter_begin_4394682064:;
			{
				if ((!(this->self->_method_check_fn_decl_types(_1d9dc7517_m)))) {
					_163563_ok = false;
					return _163563_ok;
				}
			}
			_iter_next_4394682064:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_m = *_range_begin; goto _iter_begin_4394682064; }
			_iter_end_4394682064:;
		}
	}
	_163563_ok = true;
	return _163563_ok;
}



inline void _1d9dc7517_Sema::_method_check_struct_decl(jule::Ref<_2053cdc01_Struct> _164441_s) {
	if (_20542560a_is_ignore_ident(_164441_s->_field_ident)) {
		this->self->_method_push_err(_164441_s->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_164441_s).alloc)),_164441_s->_field_ident,_164441_s->_field_cpp_linked)) {
		this->self->_method_push_err(_164441_s->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_164441_s->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_164441_s->_field_sema=this->self;
	{
		if (!(((!(this->self->_method_check_decl_generics(_164441_s->_field_generics)))))) { goto _case_end_4394694848; }
		_case_begin_4394694848:;
		{
			return;
		}
		goto _match_end_4394694688;
		_case_end_4394694848:;
		if (!(((!(this->self->_method_check_struct_fields(_164441_s)))))) { goto _case_end_4394694960; }
		_case_begin_4394694960:;
		{
			return;
		}
		goto _match_end_4394694688;
		_case_end_4394694960:;
		if (!(((!(this->self->_method_check_struct_decl_methods(_164441_s)))))) { goto _case_end_4394695072; }
		_case_begin_4394695072:;
		{
			return;
		}
		goto _match_end_4394694688;
		_case_end_4394695072:;
		if (!(((!(this->self->_method_check_struct_impls(_164441_s)))))) { goto _case_end_4394695184; }
		_case_begin_4394695184:;
		{
			return;
		}
		goto _match_end_4394694688;
		_case_end_4394695184:;
		_match_end_4394694688:;
	}
}



inline jule::Bool _1d9dc7517_Sema::_method_check_struct_decls(void) {
	jule::Bool _166240_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _1d9dc7517_s = *_range_begin;
			_iter_begin_4394702384:;
			{
				this->self->_method_check_struct_decl(_1d9dc7517_s);
				if (this->self->_field_errors.len() > 0LL) {
					_166240_ok = false;
					return _166240_ok;
				}
			}
			_iter_next_4394702384:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_s = *_range_begin; goto _iter_begin_4394702384; }
			_iter_end_4394702384:;
		}
	}
	_166240_ok = true;
	return _166240_ok;
}



inline void _1d9dc7517_Sema::_method_check_fn_decl(jule::Ref<_2053ddd54_Fn> _167537_f) {
	if (_20542560a_is_ignore_ident(_167537_f->_field_ident)) {
		this->self->_method_push_err(_167537_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_167537_f).alloc)),_167537_f->_field_ident,_167537_f->_field_cpp_linked)) {
		this->self->_method_push_err(_167537_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_167537_f->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_167537_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_167537_f);
}



inline jule::Bool _1d9dc7517_Sema::_method_check_fn_decls(void) {
	jule::Bool _168836_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394719232:;
			{
				this->self->_method_check_fn_decl(_1d9dc7517_f);
				if (this->self->_field_errors.len() > 0LL) {
					_168836_ok = false;
					return _168836_ok;
				}
			}
			_iter_next_4394719232:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394719232; }
			_iter_end_4394719232:;
		}
	}
	_168836_ok = true;
	return _168836_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_directive_pass(_206a20e79_Pass _170039_pass) {
	jule::Bool _170053_ok = jule::Bool();
	if (_170039_pass._field_text == jule::Str("", 0)) {
		_170053_ok = true;
		return _170053_ok;
	}
	if (_170039_pass._field_text[0LL] != '-') {
		(*this)._method_push_err(_170039_pass._field_token,jule::Str("the pass directive must be start with dash", 42),jule::Slice<jule::Any>({}));
		_170053_ok = false;
		return _170053_ok;
	}
	_170053_ok = true;
	return _170053_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_passes(void) {
	jule::Bool _171333_ok = jule::Bool();
	_171333_ok=true;
	{
		auto _range_expr = (*this)._field_file->_field_passes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_206a20e79_Pass _1d9dc7517_pass = *_range_begin;
			_iter_begin_4394732816:;
			{
				_171333_ok=(*this)._method_check_directive_pass(_1d9dc7517_pass) && _171333_ok;
			}
			_iter_next_4394732816:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_pass = *_range_begin; goto _iter_begin_4394732816; }
			_iter_end_4394732816:;
		}
	}
	return _171333_ok;
}



inline void _1d9dc7517_Sema::_method_push_cycle_error(jule::Ref<_2053cdc01_Struct> _172131_st1,jule::Ref<_2053cdc01_Struct> _172145_st2,jule::Str& _172164_message) {
	
	jule::Str _172413_refers_to = _20377124e_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_172131_st1->_field_ident),jule::Any(_172145_st2->_field_ident)}));
	_172164_message=((_206a20e79_str_repeat(jule::Str(" ", 1),4LL) + _172413_refers_to) + jule::Str("\n", 1)) + _172164_message;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_cross_cycle(jule::Ref<_2053cdc01_Struct> _172832_st1,jule::Ref<_2053cdc01_Struct> _172846_st2,jule::Str& _172865_message) {
	{
		auto _range_expr = _172846_st2->_field_uses;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _1d9dc7517_u = *_range_begin;
			_iter_begin_4394748272:;
			{
				if ((_1d9dc7517_u).alloc == (_172832_st1).alloc) {
					(*this)._method_push_cycle_error(_172846_st2,_1d9dc7517_u,_172865_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_172832_st1,_1d9dc7517_u,_172865_message)))) {
					(*this)._method_push_cycle_error(_172846_st2,_1d9dc7517_u,_172865_message);
					return false;
				}
			}
			_iter_next_4394748272:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_u = *_range_begin; goto _iter_begin_4394748272; }
			_iter_end_4394748272:;
		}
	}
	return true;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _174453_derive,jule::Ref<_2053cdc01_Struct> _174466_st1,jule::Ref<_1da411226_TypeKind> _174484_k) {
	jule::Bool _1744100_ok = jule::Bool();
	jule::Ref<_2053cdc01_Struct> _174517_st2 = _1da411226_get_struct_from_kind(_174484_k);
	if ((!(jule::real(_174517_st2)))) {
		_1744100_ok = true;
		return _1744100_ok;
	}
	if ((_174466_st1).alloc == (_174517_st2).alloc) {
		(*this)._method_push_err(_174466_st1->_field_token,jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57),jule::Slice<jule::Any>({jule::Any(_174453_derive),jule::Any(_174466_st1->_field_ident)}));
		_1744100_ok = false;
		return _1744100_ok;
	}
	jule::Str _175717_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_174466_st1,_174517_st2,_175717_message)))) {
		jule::Str _176021_err_msg = _175717_message;
		_175717_message=jule::Str("", 0);
		(*this)._method_push_cycle_error(_174466_st1,_174517_st2,_175717_message);
		_176021_err_msg=_176021_err_msg + _175717_message;
		(*this)._method_push_err(_174466_st1->_field_token,jule::Str("illegal cross cycle for \"@\" derive;\n@", 37),jule::Slice<jule::Any>({jule::Any(_174453_derive),jule::Any(_176021_err_msg)}));
		_1744100_ok = false;
		return _1744100_ok;
	}
	_1744100_ok = true;
	return _1744100_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_struct_ins_derive_clone(jule::Ref<_2053cdc01_StructIns> _177152_st) {
	jule::Bool _177170_ok = jule::Bool();
	if ((!(_177152_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_177170_ok = true;
		return _177170_ok;
	}
	{
		auto _range_expr = _177152_st->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_FieldIns> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394773600:;
			{
				if ((!(jule::real(_1d9dc7517_f->_field_kind))) || (!(_1d9dc7517_f->_field_kind->_method_mutable()))) {
					goto _iter_next_4394773600;
				}
				if ((!(_1d9dc7517_f->_field_kind->_method_supports_cloning()))) {
					(*this)._method_push_err(_177152_st->_field_decl->_field_token,jule::Str("type \"@\" is not compatible to derive \"@\"", 40),jule::Slice<jule::Any>({jule::Any(_1d9dc7517_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_177170_ok = false;
					return _177170_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_177152_st->_field_decl,_1d9dc7517_f->_field_kind)))) {
					_177170_ok = false;
					return _177170_ok;
				}
			}
			_iter_next_4394773600:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394773600; }
			_iter_end_4394773600:;
		}
	}
	_177170_ok = true;
	return _177170_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_struct_derive_clone(jule::Ref<_2053cdc01_Struct> _179448_st) {
	jule::Bool _179463_ok = jule::Bool();
	_179463_ok = (*this)._method_check_struct_ins_derive_clone(_179448_st->_method_instance());
	return _179463_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_file_derives(void) {
	jule::Bool _179839_ok = jule::Bool();
	{
		auto _range_expr = (*this)._field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _1d9dc7517_st = *_range_begin;
			_iter_begin_4394792752:;
			{
				_179839_ok=(*this)._method_check_struct_derive_clone(_1d9dc7517_st);
				if ((!(_179839_ok))) {
					goto _iter_end_4394792752;
				}
			}
			_iter_next_4394792752:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_st = *_range_begin; goto _iter_begin_4394792752; }
			_iter_end_4394792752:;
		}
	}
	_179839_ok = _179839_ok;
	return _179839_ok;
}



inline void _1d9dc7517_Sema::_method_check_package_derives(void) {
	{
		auto _range_expr = (*this)._field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394796896:;
			{
				(*this)._method_set_current_file(_1d9dc7517_f);
				jule::Bool _181317_ok = (*this)._method_check_file_derives();
				if ((!(_181317_ok))) {
					return;
				}
			}
			_iter_next_4394796896:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394796896; }
			_iter_end_4394796896:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_check_package_decls(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394802384:;
			{
				this->self->_method_set_current_file(_1d9dc7517_f);
				if ((!(this->self->_method_check_passes()))) {
					return;
				}
			}
			_iter_next_4394802384:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394802384; }
			_iter_end_4394802384:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394803408:;
			{
				this->self->_method_set_current_file(_1d9dc7517_f);
				if ((!(this->self->_method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_4394803408:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394803408; }
			_iter_end_4394803408:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394806784:;
			{
				this->self->_method_set_current_file(_1d9dc7517_f);
				if ((!(this->self->_method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_4394806784:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394806784; }
			_iter_end_4394806784:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394810032:;
			{
				this->self->_method_set_current_file(_1d9dc7517_f);
				if ((!(this->self->_method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_4394810032:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394810032; }
			_iter_end_4394810032:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394813120:;
			{
				this->self->_method_set_current_file(_1d9dc7517_f);
				if ((!(this->self->_method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_4394813120:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394813120; }
			_iter_end_4394813120:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394816256:;
			{
				this->self->_method_set_current_file(_1d9dc7517_f);
				if ((!(this->self->_method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_4394816256:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394816256; }
			_iter_end_4394816256:;
		}
	}
	this->self->_method_check_package_derives();
}



inline void _1d9dc7517_Sema::_method_check_data_for_type_inference(jule::Ref<_1da2d3bdc_Data> _186848_d,_20542560a_Token _186858_err_token) {
	{
		if (!((_186848_d->_method_is_nil()))) { goto _case_end_4394825744; }
		_case_begin_4394825744:;
		{
			(*this)._method_push_err(_186858_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4394825488;
		_case_end_4394825744:;
		if (!((_186848_d->_method_is_void()))) { goto _case_end_4394825872; }
		_case_begin_4394825872:;
		{
			(*this)._method_push_err(_186858_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4394825488;
		_case_end_4394825872:;
		if (!((_186848_d->_field_kind->_field_variadic))) { goto _case_end_4394826000; }
		_case_begin_4394826000:;
		{
			(*this)._method_push_err(_186858_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4394825488;
		_case_end_4394826000:;
		_match_end_4394825488:;
	}
}



inline void _1d9dc7517_Sema::_method_check_var(jule::Ref<_1d9e22661_Var> _188133_v) {
	if (_188133_v->_field_cpp_linked) {
		return;
	}
	if (_188133_v->_method_is_type_inferred()) {
		_188133_v->_field_kind=jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),_188133_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_type_inference(_188133_v->_field_value->_field_data,_188133_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ref<_1da411226_Arr> _189321_arr = _188133_v->_field_kind->_field_kind->_method_arr();
		if (jule::real(_189321_arr)) {
			if (_189321_arr->_field_auto) {
				jule::Ref<_1da411226_Arr> _189625_data_arr = _188133_v->_field_value->_field_data->_field_kind->_method_arr();
				if (jule::real(_189625_data_arr)) {
					_189321_arr->_field_n=_189625_data_arr->_field_n;
				}
			}
		}
	}
	this->self->_method_check_validity_for_init_expr(_188133_v->_field_mutable,_188133_v->_field_reference,_188133_v->_field_kind->_field_kind,_188133_v->_field_value->_field_data,_188133_v->_field_value->_field_expr->_field_token);
	if ((!(_188133_v->_field_constant))) {
		jule::drop(_188133_v->_field_value->_field_data->_field_constant);
	}
	if (jule::real(_188133_v->_field_kind->_field_kind->_method_tup())) {
		jule::drop(_188133_v->_field_kind->_field_kind);
	}
}



inline void _1d9dc7517_Sema::_method_check_type_var(jule::Ref<_1d9e22661_Var> _192138_decl,jule::Trait<_206c8d636_Lookup> _192154_l) {
	if (_192138_decl->_field_cpp_linked || (!(_192138_decl->_method_is_initialized()))) {
		return;
	}
	if (jule::real(_192138_decl->_field_kind)) {
		_192138_decl->_field_value->_field_data=this->self->_method_evalpd(_192138_decl->_field_value->_field_expr,_192154_l,_192138_decl->_field_kind->_field_kind,_192138_decl);
	} else {
		_192138_decl->_field_value->_field_data=this->self->_method_evalpd(_192138_decl->_field_value->_field_expr,_192154_l,jule::new_ref<_1da411226_TypeKind>(),_192138_decl);
	}
	if ((!(jule::real(_192138_decl->_field_value->_field_data)))) {
		return;
	}
	this->self->_method_check_var(_192138_decl);
}



inline void _1d9dc7517_Sema::_method_check_global_types(void) {
	{
		auto _range_expr = this->self->_field_file->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d9e22661_Var> _1d9dc7517_decl = *_range_begin;
			_iter_begin_4394864064:;
			{
				this->self->_method_check_type_var(_1d9dc7517_decl,this->self);
			}
			_iter_next_4394864064:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_decl = *_range_begin; goto _iter_begin_4394864064; }
			_iter_end_4394864064:;
		}
	}
	{
		auto _range_expr = this->self->_field_file->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d9e22661_Var> _1d9dc7517_decl = *_range_begin;
			_iter_begin_4394865200:;
			{
				if (_1d9dc7517_decl->_method_is_initialized() && (_1d9dc7517_decl->_field_depends.len() > 0LL)) {
					this->self->_method_check_type_var(_1d9dc7517_decl,this->self);
				}
			}
			_iter_next_4394865200:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_decl = *_range_begin; goto _iter_begin_4394865200; }
			_iter_end_4394865200:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_check_type_method(jule::Ref<_2053cdc01_StructIns> _195441_strct,jule::Ref<_2053ddd54_Fn> _195464_f) {
	if (_195464_f->_field_cpp_linked) {
		return;
	}
	if (_195464_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_195464_f->_field_instances.len() == 0LL) {
		jule::Ref<_2053ddd54_FnIns> _196521_ins = _195464_f->_method_instance();
		_196521_ins->_field_owner=_195441_strct;
		_195464_f->_method_append_instance(_196521_ins);
		this->self->_method_reload_fn_ins_types(_196521_ins);
		_196521_ins->_field_reloaded=true;
	}
	{
		auto _range_expr = _195464_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_FnIns> _1d9dc7517_ins = *_range_begin;
			_iter_begin_4394875648:;
			{
				if (_1d9dc7517_ins->_field_scope->_field_stmts.len() > 0LL) {
					goto _iter_next_4394875648;
				}
				this->self->_method_check_fn_ins(_1d9dc7517_ins);
			}
			_iter_next_4394875648:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_ins = *_range_begin; goto _iter_begin_4394875648; }
			_iter_end_4394875648:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_check_type_struct(jule::Ref<_2053cdc01_Struct> _198141_strct) {
	if (_198141_strct->_field_cpp_linked) {
		return;
	}
	if ((_198141_strct->_field_generics.len() == 0LL) && (_198141_strct->_field_instances.len() == 0LL)) {
		jule::Ref<_2053cdc01_StructIns> _198721_ins = _198141_strct->_method_instance();
		_198721_ins->_field_checked=true;
		_198141_strct->_method_append_instance(_198721_ins);
	}
	{
		auto _range_expr = _198141_strct->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_StructIns> _1d9dc7517_ins = *_range_begin;
			_iter_begin_4394893056:;
			{
				{
					auto _range_expr = _1d9dc7517_ins->_field_methods;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_2053ddd54_Fn> _1d9dc7517_f = *_range_begin;
						_iter_begin_4394895584:;
						{
							this->self->_method_check_type_method(_1d9dc7517_ins,_1d9dc7517_f);
						}
						_iter_next_4394895584:;
						++_range_begin;
						if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394895584; }
						_iter_end_4394895584:;
					}
				}
			}
			_iter_next_4394893056:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_ins = *_range_begin; goto _iter_begin_4394893056; }
			_iter_end_4394893056:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_check_struct_types(void) {
	{
		auto _range_expr = this->self->_field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _1d9dc7517_s = *_range_begin;
			_iter_begin_4394898944:;
			{
				this->self->_method_check_type_struct(_1d9dc7517_s);
			}
			_iter_next_4394898944:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_s = *_range_begin; goto _iter_begin_4394898944; }
			_iter_end_4394898944:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_check_rets(jule::Ref<_2053ddd54_FnIns> _200533_f) {
	if (_200533_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _201013_ok = _1d9dc7517_has_ret(_200533_f->_field_scope);
	if ((!(_201013_ok))) {
		(*this)._method_push_err(_200533_f->_field_decl->_field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>({}));
	}
}



inline void _1d9dc7517_Sema::_method_check_fn_ins_sc(jule::Ref<_2053ddd54_FnIns> _201638_f,jule::Ref<_206b0557a_ScopeChecker> _201653_sc) {
	if (_201638_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ref<_1d9e22661_Var>> _202117_vars = _1d9dc7517_build_ret_vars(_201638_f);
	_201653_sc->_field_table->_field_vars=jule::append(_201653_sc->_field_table->_field_vars,_202117_vars);
	_201653_sc->_field_table->_field_vars=jule::append(_201653_sc->_field_table->_field_vars,_1d9dc7517_build_param_vars(_201638_f));
	_201653_sc->_field_table->_field_type_aliases=jule::append(_201653_sc->_field_table->_field_type_aliases,_1d9dc7517_build_generic_type_aliases(_201638_f));
	_201653_sc->_method_check(_201638_f->_field_decl->_field_scope,_201638_f->_field_scope);
	if (_202117_vars.len() > 0LL) {
		jule::Slice<jule::Any> _203121_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_201638_f->_field_scope->_field_stmts.len() + _202117_vars.len())));
		{
			auto _range_expr = _202117_vars;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d9e22661_Var> _1d9dc7517_v = *_range_begin;
				_iter_begin_4394923104:;
				{
					_203121_stmts=jule::append(_203121_stmts,jule::Slice<jule::Any>({jule::Any(_1d9dc7517_v)}));
				}
				_iter_next_4394923104:;
				++_range_begin;
				if (_range_begin != _range_end) { _1d9dc7517_v = *_range_begin; goto _iter_begin_4394923104; }
				_iter_end_4394923104:;
			}
		}
		_203121_stmts=jule::append(_203121_stmts,_201638_f->_field_scope->_field_stmts);
		_201638_f->_field_scope->_field_stmts=_203121_stmts;
	}
	(*this)._method_check_rets(_201638_f);
}



inline void _1d9dc7517_Sema::_method_check_fn_ins(jule::Ref<_2053ddd54_FnIns> _204335_f) {
	if (_204335_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ref<_1da2aa301_SymbolTable> _204817_old = _204335_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_204335_f->_field_decl->_field_sema->_method_set_current_file(_204817_old);
	});
	jule::Ref<_1da2aa301_SymbolTable> _205017_file = _1d9dc7517_find_file(_204335_f->_field_decl->_field_sema->_field_files,_204335_f->_field_decl->_field_token._field_file);
	if (jule::real(_205017_file)) {
		_204335_f->_field_decl->_field_sema->_method_set_current_file(_205017_file);
	}
	jule::Ref<_206b0557a_ScopeChecker> _205517_sc = _206b0557a_new_scope_checker(_204335_f->_field_decl->_field_sema,_204335_f);
	(*this)._method_check_fn_ins_sc(_204335_f,_205517_sc);
	if ((_204335_f->_field_decl->_field_sema).alloc != (&((*this)))) {
		(*this)._field_errors=jule::append((*this)._field_errors,_204335_f->_field_decl->_field_sema->_field_errors);
	}
}



inline void _1d9dc7517_Sema::_method_check_type_fn(jule::Ref<_2053ddd54_Fn> _206337_f) {
	if (_206337_f->_field_cpp_linked) {
		return;
	}
	if (_206337_f->_field_generics.len() > 0LL) {
		return;
	}
	{
		auto _range_expr = _206337_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_FnIns> _1d9dc7517_ins = *_range_begin;
			_iter_begin_4394945296:;
			{
				this->self->_method_check_fn_ins(_1d9dc7517_ins);
			}
			_iter_next_4394945296:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_ins = *_range_begin; goto _iter_begin_4394945296; }
			_iter_end_4394945296:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_precheck_type_fn(jule::Ref<_2053ddd54_Fn> _207840_f) {
	if (_207840_f->_field_cpp_linked) {
		return;
	}
	if (_207840_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_207840_f->_field_instances.len() == 0LL) {
		jule::Ref<_2053ddd54_FnIns> _208921_ins = _207840_f->_method_instance();
		_207840_f->_field_instances=jule::append(_207840_f->_field_instances,jule::Slice<jule::Ref<_2053ddd54_FnIns>>({_208921_ins}));
		this->self->_method_reload_fn_ins_types(_208921_ins);
		_208921_ins->_field_reloaded=true;
	}
}



inline jule::Bool _1d9dc7517_Sema::_method_precheck_fn_types(void) {
	jule::Bool _209739_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1d9dc7517_decl = *_range_begin;
			_iter_begin_4394959600:;
			{
				this->self->_method_precheck_type_fn(_1d9dc7517_decl);
			}
			_iter_next_4394959600:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_decl = *_range_begin; goto _iter_begin_4394959600; }
			_iter_end_4394959600:;
		}
	}
	_209739_ok = true;
	return _209739_ok;
}



inline jule::Bool _1d9dc7517_Sema::_method_check_fn_types(void) {
	jule::Bool _210536_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1d9dc7517_decl = *_range_begin;
			_iter_begin_4394964592:;
			{
				this->self->_method_check_type_fn(_1d9dc7517_decl);
			}
			_iter_next_4394964592:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_decl = *_range_begin; goto _iter_begin_4394964592; }
			_iter_end_4394964592:;
		}
	}
	_210536_ok = true;
	return _210536_ok;
}



inline void _1d9dc7517_Sema::_method_check_package_types(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394968560:;
			{
				this->self->_method_set_current_file(_1d9dc7517_f);
				this->self->_method_check_global_types();
			}
			_iter_next_4394968560:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394968560; }
			_iter_end_4394968560:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394969488:;
			{
				this->self->_method_set_current_file(_1d9dc7517_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_4394969488:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394969488; }
			_iter_end_4394969488:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394972512:;
			{
				this->self->_method_set_current_file(_1d9dc7517_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_4394972512:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394972512; }
			_iter_end_4394972512:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394975360:;
			{
				this->self->_method_set_current_file(_1d9dc7517_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_4394975360:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394975360; }
			_iter_end_4394975360:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_set_file_sema_fields(void) {
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1d9dc7517_f = *_range_begin;
			_iter_begin_4394981456:;
			{
				_1d9dc7517_f->_field_sema=this->self;
			}
			_iter_next_4394981456:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_f = *_range_begin; goto _iter_begin_4394981456; }
			_iter_end_4394981456:;
		}
	}
	{
		auto _range_expr = this->self->_field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _1d9dc7517_st = *_range_begin;
			_iter_begin_4394982272:;
			{
				_1d9dc7517_st->_field_sema=this->self;
			}
			_iter_next_4394982272:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_st = *_range_begin; goto _iter_begin_4394982272; }
			_iter_end_4394982272:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_set_sema_fields(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_file = *_range_begin;
			_iter_begin_4394986592:;
			{
				this->self->_method_set_current_file(_1d9dc7517_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_4394986592:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_file = *_range_begin; goto _iter_begin_4394986592; }
			_iter_end_4394986592:;
		}
	}
}



inline void _1d9dc7517_Sema::_method_check(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>> _215329_files) {
	this->self->_field_files=_215329_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _1d9dc7517_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d9e22661_Var::_method_is_initialized(void) {
	return jule::real((*this)._field_value);
}



inline jule::Bool _1d9e22661_Var::_method_is_type_inferred(void) {
	return (!(jule::real((*this)._field_kind))) || (!(jule::real((*this)._field_kind->_field_decl)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1d9e22661_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline void _1da120d15_TypeCompatibilityChecker::_method_push_err(jule::Str _13927_fmt,jule::Slice<jule::Any> _13940_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_13927_fmt,_13940_args);
}



inline jule::Bool _1da120d15_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _14332_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_14332_ok = true;
		return _14332_ok;
	}
	jule::Ref<_2065895c5_Trait> _14813_trt = (*this)._field_dest->_method_trt();
	jule::Bool _14917_ref = false;
	{
		if (!((jule::real((*this)._field_src->_method_ref())))) { goto _case_end_4395016160; }
		_case_begin_4395016160:;
		{
			_14917_ref=true;
			(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
			if (jule::real((*this)._field_src->_method_strct())) {
				_14332_ok = false;
				return _14332_ok;
			}
			goto _case_begin_4395015664;
		}
		goto _match_end_4395014496;
		_case_end_4395016160:;
		if (!((jule::real((*this)._field_src->_method_strct())))) { goto _case_end_4395015664; }
		_case_begin_4395015664:;
		{
			jule::Ref<_2053cdc01_StructIns> _16017_s = (*this)._field_src->_method_strct();
			if ((!(_16017_s->_field_decl->_method_is_implements(_14813_trt)))) {
				_14332_ok = false;
				return _14332_ok;
			}
			if (_1da120d15_trait_has_reference_receiver(_14813_trt) && (!(_14917_ref))) {
				(*this)._method_push_err(jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>({}));
				_14332_ok = false;
				return _14332_ok;
			}
			_14332_ok = true;
			return _14332_ok;
		}
		goto _match_end_4395014496;
		_case_end_4395015664:;
		if (!((jule::real((*this)._field_src->_method_trt())))) { goto _case_end_4395015776; }
		_case_begin_4395015776:;
		{
			_14332_ok = _14813_trt == (*this)._field_src->_method_trt();
			return _14332_ok;
		}
		goto _match_end_4395014496;
		_case_end_4395015776:;
		_case_begin_4395014608:;
		{
			_14332_ok = false;
			return _14332_ok;
		}
		goto _match_end_4395014496;
		_case_end_4395014608:;
		_match_end_4395014496:;
	}
}



inline jule::Bool _1da120d15_TypeCompatibilityChecker::_method_check_ref(void) {
	jule::Bool _18030_ok = jule::Bool();
	if ((*this)._field_dest->_method_to_str() == (*this)._field_src->_method_to_str()) {
		_18030_ok = true;
		return _18030_ok;
	} else if ((!((*this)._field_deref))) {
		_18030_ok = false;
		return _18030_ok;
	} else if ((!(jule::real((*this)._field_src->_method_ref())))) {
		(*this)._field_dest=(*this)._field_dest->_method_ref()->_field_elem;
		_18030_ok = (*this)._method_check();
		return _18030_ok;
	}
	(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	_18030_ok = (*this)._method_check();
	return _18030_ok;
}



inline jule::Bool _1da120d15_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _19430_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_19430_ok = true;
		return _19430_ok;
	}
	jule::Ref<_1da411226_Ptr> _19917_src = (*this)._field_src->_method_ptr();
	if ((!(jule::real(_19917_src)))) {
		_19430_ok = false;
		return _19430_ok;
	}
	jule::Ref<_1da411226_Ptr> _20417_dest = (*this)._field_dest->_method_ptr();
	if (_20417_dest->_method_is_unsafe()) {
		_19430_ok = true;
		return _19430_ok;
	}
	_1da120d15_TypeCompatibilityChecker _21017_sub = _1da120d15_TypeCompatibilityChecker((*this)._field_s,_20417_dest->_field_elem,_19917_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_19430_ok = _21017_sub._method_check();
	return _19430_ok;
}



inline jule::Bool _1da120d15_TypeCompatibilityChecker::_method_check_slc(void) {
	jule::Bool _22130_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_22130_ok = true;
		return _22130_ok;
	}
	jule::Ref<_1da411226_Slc> _22617_src = (*this)._field_src->_method_slc();
	if ((!(jule::real(_22617_src)))) {
		_22130_ok = false;
		return _22130_ok;
	}
	jule::Ref<_1da411226_Slc> _23017_dest = (*this)._field_dest->_method_slc();
	_1da120d15_TypeCompatibilityChecker _23217_sub = _1da120d15_TypeCompatibilityChecker((*this)._field_s,_23017_dest->_field_elem,_22617_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_22130_ok = _23217_sub._method_check();
	return _22130_ok;
}



inline jule::Bool _1da120d15_TypeCompatibilityChecker::_method_check_arr(void) {
	jule::Bool _24330_ok = jule::Bool();
	jule::Ref<_1da411226_Arr> _24417_src = (*this)._field_src->_method_arr();
	if ((!(jule::real(_24417_src)))) {
		_24330_ok = false;
		return _24330_ok;
	}
	jule::Ref<_1da411226_Arr> _24817_dest = (*this)._field_dest->_method_arr();
	if (_24817_dest->_field_n != _24417_src->_field_n) {
		_24330_ok = false;
		return _24330_ok;
	}
	_1da120d15_TypeCompatibilityChecker _25317_sub = _1da120d15_TypeCompatibilityChecker((*this)._field_s,_24817_dest->_field_elem,_24417_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_24330_ok = _25317_sub._method_check();
	return _24330_ok;
}



inline jule::Bool _1da120d15_TypeCompatibilityChecker::_method_check_map(void) {
	jule::Bool _26430_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_26430_ok = true;
		return _26430_ok;
	}
	jule::Ref<_1da411226_Map> _26917_src = (*this)._field_src->_method_map();
	if ((!(jule::real(_26917_src)))) {
		_26430_ok = false;
		return _26430_ok;
	}
	jule::Ref<_1da411226_Map> _27417_dest = (*this)._field_dest->_method_map();
	_1da120d15_TypeCompatibilityChecker _27617_sub = _1da120d15_TypeCompatibilityChecker((*this)._field_s,_27417_dest->_field_key,_26917_src->_field_key,(*this)._field_error_token,jule::Bool(),jule::Bool(),true);
	if ((!(_27617_sub._method_check()))) {
		_26430_ok = false;
		return _26430_ok;
	}
	_27617_sub._field_src=_26917_src->_field_val;
	_27617_sub._field_dest=_27417_dest->_field_val;
	_26430_ok = _27617_sub._method_check();
	return _26430_ok;
}



inline jule::Bool _1da120d15_TypeCompatibilityChecker::_method_check_struct(void) {
	jule::Bool _29233_ok = jule::Bool();
	jule::Ref<_2053cdc01_StructIns> _29317_src = (*this)._field_src->_method_strct();
	if ((!(jule::real(_29317_src)))) {
		_29233_ok = false;
		return _29233_ok;
	}
	jule::Ref<_2053cdc01_StructIns> _29717_dest = (*this)._field_dest->_method_strct();
	{
		if (!(((_29717_dest->_field_decl).alloc != (_29317_src->_field_decl).alloc))) { goto _case_end_4395086784; }
		_case_begin_4395086784:;
		{
			_29233_ok = false;
			return _29233_ok;
		}
		goto _match_end_4395086640;
		_case_end_4395086784:;
		if (!((_29717_dest->_field_generics.len() == 0LL))) { goto _case_end_4395086896; }
		_case_begin_4395086896:;
		{
			_29233_ok = true;
			return _29233_ok;
		}
		goto _match_end_4395086640;
		_case_end_4395086896:;
		_match_end_4395086640:;
	}
	{
		auto _range_expr = _29717_dest->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da120d15_i = 0;
			jule::Ref<_1da411226_TypeKind> _1da120d15_dg = *_range_begin;
			_iter_begin_4395090160:;
			{
				jule::Ref<_1da411226_TypeKind> _30721_sg = _29317_src->_field_generics[static_cast<jule::Int>(_1da120d15_i)];
				_1da120d15_TypeCompatibilityChecker _30821_sub = _1da120d15_TypeCompatibilityChecker((*this)._field_s,_1da120d15_dg,_30721_sg,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
				if ((!(_30821_sub._method_check()))) {
					_29233_ok = false;
					return _29233_ok;
				}
			}
			_iter_next_4395090160:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da120d15_i; _1da120d15_dg = *_range_begin; goto _iter_begin_4395090160; }
			_iter_end_4395090160:;
		}
	}
	_29233_ok = true;
	return _29233_ok;
}



inline jule::Bool _1da120d15_TypeCompatibilityChecker::_method_check_fn(void) {
	jule::Bool _32129_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_32129_ok = true;
		return _32129_ok;
	}
	jule::Ref<_2053ddd54_FnIns> _32617_src = (*this)._field_src->_method_fnc();
	if ((!(jule::real(_32617_src)))) {
		_32129_ok = false;
		return _32129_ok;
	}
	jule::Ref<_2053ddd54_FnIns> _33117_dest = (*this)._field_dest->_method_fnc();
	if (jule::real(_32617_src->_field_result) != jule::real(_33117_dest->_field_result)) {
		_32129_ok = false;
		return _32129_ok;
	}
	if (_32617_src->_field_params.len() != _33117_dest->_field_params.len()) {
		_32129_ok = false;
		return _32129_ok;
	}
	{
		auto _range_expr = _32617_src->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da120d15_i = 0;
			_iter_begin_4395107536:;
			{
				jule::Ref<_2053ddd54_ParamIns> _34021_srcp = _32617_src->_field_params[static_cast<jule::Int>(_1da120d15_i)];
				jule::Ref<_2053ddd54_ParamIns> _34121_destp = _33117_dest->_field_params[static_cast<jule::Int>(_1da120d15_i)];
				if (jule::real(_34021_srcp) != jule::real(_34121_destp)) {
					_32129_ok = false;
					return _32129_ok;
				}
				_1da120d15_TypeCompatibilityChecker _34621_sub = _1da120d15_TypeCompatibilityChecker((*this)._field_s,_34121_destp->_field_kind,_34021_srcp->_field_kind,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
				if ((!(_34621_sub._method_check()))) {
					_32129_ok = false;
					return _32129_ok;
				}
			}
			_iter_next_4395107536:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da120d15_i; goto _iter_begin_4395107536; }
			_iter_end_4395107536:;
		}
	}
	if (jule::real(_32617_src->_field_result)) {
		_1da120d15_TypeCompatibilityChecker _35821_sub = _1da120d15_TypeCompatibilityChecker((*this)._field_s,_33117_dest->_field_result,_32617_src->_field_result,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
		if ((!(_35821_sub._method_check()))) {
			_32129_ok = false;
			return _32129_ok;
		}
	}
	_32129_ok = true;
	return _32129_ok;
}



inline jule::Bool _1da120d15_TypeCompatibilityChecker::_method_check_enum(void) {
	jule::Bool _37231_ok = jule::Bool();
	jule::Ref<_206b06c0d_Enum> _37313_r = (*this)._field_src->_method_enm();
	if ((!(jule::real(_37313_r)))) {
		_37231_ok = false;
		return _37231_ok;
	}
	_37231_ok = ((*this)._field_dest->_method_enm()).alloc == (_37313_r).alloc;
	return _37231_ok;
}



inline jule::Bool _1da120d15_TypeCompatibilityChecker::_method_check_prim(void) {
	jule::Bool _38031_ok = jule::Bool();
	jule::Ref<_1da411226_Prim> _38113_dest = (*this)._field_dest->_method_prim();
	jule::Ref<_1da411226_Prim> _38217_src = (*this)._field_src->_method_prim();
	if ((!(jule::real(_38217_src)))) {
		_38031_ok = _38113_dest->_method_is_any();
		return _38031_ok;
	}
	if (_38113_dest->_method_is_any()) {
		_38031_ok = (!((*this)._field_ignore_any)) || _38217_src->_method_is_any();
		return _38031_ok;
	}
	_38031_ok = _1da90ea98_types_are_compatible(_38113_dest->_method_to_str(),_38217_src->_method_to_str());
	return _38031_ok;
}



inline jule::Bool _1da120d15_TypeCompatibilityChecker::_method_check_cpp_linked(void) {
	jule::Bool _39237_ok = jule::Bool();
	_39237_ok = (*this)._field_src->_method_cpp_linked() && ((*this)._field_dest->_field_cpp_ident == (*this)._field_src->_field_cpp_ident);
	return _39237_ok;
}



inline jule::Bool _1da120d15_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _39726_ok = jule::Bool();
	if ((!(jule::real((*this)._field_src)))) {
		_39726_ok = false;
		return _39726_ok;
	}
	if ((*this)._field_dest->_field_variadic != (*this)._field_src->_field_variadic) {
		_39726_ok = false;
		return _39726_ok;
	} else if ((*this)._field_dest->_field_variadic) {
		(*this)._field_ignore_any=true;
	}
	if (jule::real((*this)._field_dest->_method_ref())) {
		_39726_ok = (*this)._method_check_ref();
		return _39726_ok;
	}
	if ((!((*this)._field_sub_check)) && jule::real((*this)._field_src->_method_ref())) {
		(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	}
	{
		if (!(((*this)._field_dest->_method_cpp_linked()))) { goto _case_end_4395151808; }
		_case_begin_4395151808:;
		{
			_39726_ok = (*this)._method_check_cpp_linked();
			return _39726_ok;
		}
		goto _match_end_4395150400;
		_case_end_4395151808:;
		if (!((jule::real((*this)._field_dest->_method_prim())))) { goto _case_end_4395151376; }
		_case_begin_4395151376:;
		{
			_39726_ok = (*this)._method_check_prim();
			return _39726_ok;
		}
		goto _match_end_4395150400;
		_case_end_4395151376:;
		if (!((jule::real((*this)._field_dest->_method_trt())))) { goto _case_end_4395151488; }
		_case_begin_4395151488:;
		{
			_39726_ok = (*this)._method_check_trait();
			return _39726_ok;
		}
		goto _match_end_4395150400;
		_case_end_4395151488:;
		if (!((jule::real((*this)._field_dest->_method_ptr())))) { goto _case_end_4395151600; }
		_case_begin_4395151600:;
		{
			_39726_ok = (*this)._method_check_ptr();
			return _39726_ok;
		}
		goto _match_end_4395150400;
		_case_end_4395151600:;
		if (!((jule::real((*this)._field_dest->_method_slc())))) { goto _case_end_4395150704; }
		_case_begin_4395150704:;
		{
			_39726_ok = (*this)._method_check_slc();
			return _39726_ok;
		}
		goto _match_end_4395150400;
		_case_end_4395150704:;
		if (!((jule::real((*this)._field_dest->_method_arr())))) { goto _case_end_4395150816; }
		_case_begin_4395150816:;
		{
			_39726_ok = (*this)._method_check_arr();
			return _39726_ok;
		}
		goto _match_end_4395150400;
		_case_end_4395150816:;
		if (!((jule::real((*this)._field_dest->_method_map())))) { goto _case_end_4395150928; }
		_case_begin_4395150928:;
		{
			_39726_ok = (*this)._method_check_map();
			return _39726_ok;
		}
		goto _match_end_4395150400;
		_case_end_4395150928:;
		if (!((jule::real((*this)._field_dest->_method_enm())))) { goto _case_end_4395152064; }
		_case_begin_4395152064:;
		{
			_39726_ok = (*this)._method_check_enum();
			return _39726_ok;
		}
		goto _match_end_4395150400;
		_case_end_4395152064:;
		if (!((jule::real((*this)._field_dest->_method_strct())))) { goto _case_end_4395152176; }
		_case_begin_4395152176:;
		{
			_39726_ok = (*this)._method_check_struct();
			return _39726_ok;
		}
		goto _match_end_4395150400;
		_case_end_4395152176:;
		if (!((jule::real((*this)._field_dest->_method_fnc())))) { goto _case_end_4395152288; }
		_case_begin_4395152288:;
		{
			_39726_ok = (*this)._method_check_fn();
			return _39726_ok;
		}
		goto _match_end_4395150400;
		_case_end_4395152288:;
		if (!(((*this)._field_dest->_method_nil_compatible()))) { goto _case_end_4395152400; }
		_case_begin_4395152400:;
		{
			_39726_ok = (*this)._field_src->_method_is_nil();
			return _39726_ok;
		}
		goto _match_end_4395150400;
		_case_end_4395152400:;
		_case_begin_4395146896:;
		{
			_39726_ok = false;
			return _39726_ok;
		}
		goto _match_end_4395150400;
		_case_end_4395146896:;
		_match_end_4395150400:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1da120d15_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_any:" << _Src._field_ignore_any << ", ";
	_Stream << "deref:" << _Src._field_deref << ", ";
	_Stream << "sub_check:" << _Src._field_sub_check;
	_Stream << "}";
	return _Stream;
}



inline void _1da120d15_AssignTypeChecker::_method_push_err(jule::Str _44327_fmt,jule::Slice<jule::Any> _44340_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_44327_fmt,_44340_args);
}



inline jule::Bool _1da120d15_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _44817_valid = true;
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_fnc())))) { goto _case_end_4395177344; }
		_case_begin_4395177344:;
		{
			jule::Ref<_2053ddd54_FnIns> _45217_f = (*this)._field_d->_field_kind->_method_fnc();
			{
				if (!((_45217_f->_method_is_builtin()))) { goto _case_end_4395181520; }
				_case_begin_4395181520:;
				{
					(*this)._method_push_err(jule::Str("built-in define cannot use as anonymous function", 48),jule::Slice<jule::Any>({}));
					_44817_valid=false;
				}
				goto _match_end_4395181312;
				_case_end_4395181520:;
				if (!((_45217_f->_field_decl->_field_cpp_linked))) { goto _case_end_4395181648; }
				_case_begin_4395181648:;
				{
					(*this)._method_push_err(jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>({}));
					_44817_valid=false;
				}
				goto _match_end_4395181312;
				_case_end_4395181648:;
				if (!((_45217_f->_field_decl->_method_is_method()))) { goto _case_end_4395181776; }
				_case_begin_4395181776:;
				{
					(*this)._method_push_err(jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>({}));
					_44817_valid=false;
				}
				goto _match_end_4395181312;
				_case_end_4395181776:;
				if (!((_45217_f->_field_decl->_field_generics.len() > 0LL))) { goto _case_end_4395181904; }
				_case_begin_4395181904:;
				{
					(*this)._method_push_err(jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
					_44817_valid=false;
				}
				goto _match_end_4395181312;
				_case_end_4395181904:;
				_match_end_4395181312:;
			}
		}
		goto _match_end_4395177168;
		_case_end_4395177344:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_tup())))) { goto _case_end_4395177472; }
		_case_begin_4395177472:;
		{
			(*this)._method_push_err(jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>({}));
			_44817_valid=false;
		}
		goto _match_end_4395177168;
		_case_end_4395177472:;
		_match_end_4395177168:;
	}
	return _44817_valid;
}



inline jule::Bool _1da120d15_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || (!(jule::real((*this)._field_dest->_method_prim())))) || (!(jule::real((*this)._field_d->_field_kind->_method_prim())))) || (!(_1a8a8de8a_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _48813_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (!((_1a8a8de8a_is_float(_48813_kind)))) { goto _case_end_4395200864; }
		_case_begin_4395200864:;
		{
			if ((!(_1da120d15_float_assignable(_48813_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4395200256;
		_case_end_4395200864:;
		if (!((_1a8a8de8a_is_int(_48813_kind)))) { goto _case_end_4395200976; }
		_case_begin_4395200976:;
		{
			if ((!(_1da120d15_int_assignable(_48813_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4395200256;
		_case_end_4395200976:;
		_case_begin_4395200512:;
		{
			return false;
		}
		goto _match_end_4395200256;
		_case_end_4395200512:;
		_match_end_4395200256:;
	}
	return true;
}



inline jule::Bool _1da120d15_AssignTypeChecker::_method_check(void) {
	{
		if (!(((!(jule::real((*this)._field_d)))))) { goto _case_end_4395647792; }
		_case_begin_4395647792:;
		{
			return false;
		}
		goto _match_end_4395207920;
		_case_end_4395647792:;
		if (!(((!((*this)._method_check_validity()))))) { goto _case_end_4395647904; }
		_case_begin_4395647904:;
		{
			return false;
		}
		goto _match_end_4395207920;
		_case_end_4395647904:;
		if (!(((*this)._method_check_const()))) { goto _case_end_4395648016; }
		_case_begin_4395648016:;
		{
			return true;
		}
		goto _match_end_4395207920;
		_case_end_4395648016:;
		_case_begin_4395208112:;
		{
			return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token,(*this)._field_deref);
		}
		goto _match_end_4395207920;
		_case_end_4395208112:;
		_match_end_4395207920:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1da120d15_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "deref:" << _Src._field_deref;
	_Stream << "}";
	return _Stream;
}



inline void _1da120d15_DynamicTypeAnnotation::_method_push_generic(jule::Ref<_1da411226_TypeKind> _53835_k,jule::Int _53849_i) {
	(*this)._field_f->_field_generics[static_cast<jule::Int>(_53849_i)]=_53835_k;
}



inline jule::Bool _1da120d15_DynamicTypeAnnotation::_method_annotate_prim(jule::Ref<_1da411226_TypeKind> _54243_k) {
	jule::Bool _54259_ok = jule::Bool();
	jule::Str _54313_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto _range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da120d15_i = 0;
			jule::Ref<_2053703bd_GenericDecl> _1da120d15_g = *_range_begin;
			_iter_begin_4395668080:;
			{
				if (_54313_kind != _1da120d15_g->_field_ident) {
					goto _iter_next_4395668080;
				}
				jule::Ref<_1da411226_TypeKind> _54917_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_1da120d15_i)];
				{
					if (!(((!(jule::real(_54917_t)))))) { goto _case_end_4395673840; }
					_case_begin_4395673840:;
					{
						(*this)._method_push_generic(_54243_k,_1da120d15_i);
					}
					goto _match_end_4395673584;
					_case_end_4395673840:;
					if (!((_54917_t->_method_to_str() != _54243_k->_method_to_str()))) { goto _case_end_4395673952; }
					_case_begin_4395673952:;
					{
						_54259_ok = false;
						return _54259_ok;
					}
					goto _match_end_4395673584;
					_case_end_4395673952:;
					_match_end_4395673584:;
				}
				(*((*this)._field_k))->_field_kind=_54243_k->_field_kind;
				_54259_ok = true;
				return _54259_ok;
			}
			_iter_next_4395668080:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da120d15_i; _1da120d15_g = *_range_begin; goto _iter_begin_4395668080; }
			_iter_end_4395668080:;
		}
	}
	_54259_ok = false;
	return _54259_ok;
}



inline jule::Bool _1da120d15_DynamicTypeAnnotation::_method_annotate_slc(jule::Ref<_1da411226_TypeKind> _56642_k) {
	jule::Bool _56658_ok = jule::Bool();
	jule::Ref<_1da411226_Slc> _56717_pslc = (*((*this)._field_k))->_method_slc();
	if ((!(jule::real(_56717_pslc)))) {
		_56658_ok = false;
		return _56658_ok;
	}
	jule::Ref<_1da411226_Slc> _57217_slc = _56642_k->_method_slc();
	_1da411226_TypeKind* _57317_kk = (_56717_pslc->_field_elem).alloc;
	(*this)._field_k=(&(_57317_kk));
	_56658_ok = (*this)._method_annotate_kind(_57217_slc->_field_elem);
	return _56658_ok;
}



inline jule::Bool _1da120d15_DynamicTypeAnnotation::_method_check_map_key(_1da411226_TypeKind** _57843_k,jule::Ref<_1da411226_TypeKind> _57862_ck) {
	jule::Bool _57879_ok = jule::Bool();
	_1da411226_TypeKind** _57917_old = (*this)._field_k;
	(*this)._field_k=_57843_k;
	_57879_ok=(*this)._method_annotate_kind(_57862_ck);
	(*this)._field_k=_57917_old;
	_57879_ok = _57879_ok;
	return _57879_ok;
}



inline jule::Bool _1da120d15_DynamicTypeAnnotation::_method_annotate_map(jule::Ref<_1da411226_TypeKind> _58642_k) {
	jule::Bool _58658_ok = jule::Bool();
	jule::Ref<_1da411226_Map> _58717_pmap = (*((*this)._field_k))->_method_map();
	if ((!(jule::real(_58717_pmap)))) {
		_58658_ok = false;
		return _58658_ok;
	}
	jule::Ref<_1da411226_Map> _59217_m = _58642_k->_method_map();
	_1da411226_TypeKind* _59417_key = (_58717_pmap->_field_key).alloc;
	_1da411226_TypeKind* _59517_val = (_58717_pmap->_field_val).alloc;
	_58658_ok = (*this)._method_check_map_key((&(_59417_key)),_59217_m->_field_key) && (*this)._method_check_map_key((&(_59517_val)),_59217_m->_field_val);
	return _58658_ok;
}



inline jule::Bool _1da120d15_DynamicTypeAnnotation::_method_annotate_fn(jule::Ref<_1da411226_TypeKind> _59941_k) {
	jule::Bool _59957_ok = jule::Bool();
	jule::Ref<_2053ddd54_FnIns> _60017_pf = (*((*this)._field_k))->_method_fnc();
	if ((!(jule::real(_60017_pf)))) {
		_59957_ok = false;
		return _59957_ok;
	}
	jule::Ref<_2053ddd54_FnIns> _60417_f = _59941_k->_method_fnc();
	{
		if (!((_60017_pf->_field_params.len() != _60417_f->_field_params.len()))) { goto _case_end_4395714848; }
		_case_begin_4395714848:;
		{
			_59957_ok = false;
			return _59957_ok;
		}
		goto _match_end_4395714672;
		_case_end_4395714848:;
		if (!((_60017_pf->_field_decl->_method_is_void() != _60417_f->_field_decl->_method_is_void()))) { goto _case_end_4395714976; }
		_case_begin_4395714976:;
		{
			_59957_ok = false;
			return _59957_ok;
		}
		goto _match_end_4395714672;
		_case_end_4395714976:;
		_match_end_4395714672:;
	}
	_59957_ok=true;
	_1da411226_TypeKind** _61417_old = (*this)._field_k;
	{
		auto _range_expr = _60417_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da120d15_i = 0;
			jule::Ref<_2053ddd54_ParamIns> _1da120d15_fp = *_range_begin;
			_iter_begin_4395719504:;
			{
				_1da411226_TypeKind* _61621_pfp = (_60017_pf->_field_params[static_cast<jule::Int>(_1da120d15_i)]->_field_kind).alloc;
				(*this)._field_k=(&(_61621_pfp));
				_59957_ok=(*this)._method_annotate_kind(_1da120d15_fp->_field_kind) && _59957_ok;
			}
			_iter_next_4395719504:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da120d15_i; _1da120d15_fp = *_range_begin; goto _iter_begin_4395719504; }
			_iter_end_4395719504:;
		}
	}
	if ((!(_60017_pf->_field_decl->_method_is_void()))) {
		_1da411226_TypeKind* _62221_result = (_60017_pf->_field_result).alloc;
		(*this)._field_k=(&(_62221_result));
		_59957_ok=(*this)._method_annotate_kind(_60417_f->_field_result) && _59957_ok;
	}
	(*this)._field_k=_61417_old;
	_59957_ok = _59957_ok;
	return _59957_ok;
}



inline jule::Bool _1da120d15_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ref<_1da411226_TypeKind> _63142_k) {
	jule::Bool _63158_ok = jule::Bool();
	jule::Ref<_1da411226_Ptr> _63217_pptr = (*((*this)._field_k))->_method_ptr();
	if ((!(jule::real(_63217_pptr)))) {
		_63158_ok = false;
		return _63158_ok;
	}
	jule::Ref<_1da411226_Ptr> _63717_ptr = _63142_k->_method_ptr();
	_1da411226_TypeKind* _63817_cpptr = (_63217_pptr->_field_elem).alloc;
	(*this)._field_k=(&(_63817_cpptr));
	_63158_ok = (*this)._method_annotate_kind(_63717_ptr->_field_elem);
	return _63158_ok;
}



inline jule::Bool _1da120d15_DynamicTypeAnnotation::_method_annotate_ref(jule::Ref<_1da411226_TypeKind> _64342_k) {
	jule::Bool _64358_ok = jule::Bool();
	jule::Ref<_1da411226_Ref> _64417_rref = (*((*this)._field_k))->_method_ref();
	if ((!(jule::real(_64417_rref)))) {
		_64358_ok = false;
		return _64358_ok;
	}
	jule::Ref<_1da411226_Ref> _64917_ref = _64342_k->_method_ref();
	_1da411226_TypeKind* _65017_crref = (_64417_rref->_field_elem).alloc;
	(*this)._field_k=(&(_65017_crref));
	_64358_ok = (*this)._method_annotate_kind(_64917_ref->_field_elem);
	return _64358_ok;
}



inline jule::Bool _1da120d15_DynamicTypeAnnotation::_method_annotate_any(jule::Ref<_1da411226_TypeKind> _65542_k) {
	jule::Bool _65558_ok = jule::Bool();
	jule::Str _65613_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto _range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da120d15_i = 0;
			jule::Ref<_2053703bd_GenericDecl> _1da120d15_g = *_range_begin;
			_iter_begin_4395754336:;
			{
				if (_65613_kind != _1da120d15_g->_field_ident) {
					goto _iter_next_4395754336;
				}
				jule::Ref<_1da411226_TypeKind> _66217_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_1da120d15_i)];
				{
					if (!(((!(jule::real(_66217_t)))))) { goto _case_end_4395760144; }
					_case_begin_4395760144:;
					{
						(*this)._method_push_generic(_65542_k,_1da120d15_i);
					}
					goto _match_end_4395759888;
					_case_end_4395760144:;
					if (!((_66217_t->_method_to_str() != _65542_k->_method_to_str()))) { goto _case_end_4395760256; }
					_case_begin_4395760256:;
					{
						_65558_ok = false;
						return _65558_ok;
					}
					goto _match_end_4395759888;
					_case_end_4395760256:;
					_match_end_4395759888:;
				}
				(*((*this)._field_k))->_field_kind=_65542_k->_field_kind;
				_65558_ok = true;
				return _65558_ok;
			}
			_iter_next_4395754336:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da120d15_i; _1da120d15_g = *_range_begin; goto _iter_begin_4395754336; }
			_iter_end_4395754336:;
		}
	}
	_65558_ok = false;
	return _65558_ok;
}



inline jule::Bool _1da120d15_DynamicTypeAnnotation::_method_annotate_kind(jule::Ref<_1da411226_TypeKind> _67943_k) {
	jule::Bool _67959_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _67959_ok;
	}
	{
		if (!(((*this)._method_annotate_any(_67943_k)))) { goto _case_end_4395770304; }
		_case_begin_4395770304:;
		{
			_67959_ok = true;
			return _67959_ok;
		}
		goto _match_end_4395768704;
		_case_end_4395770304:;
		if (!((jule::real(_67943_k->_method_prim())))) { goto _case_end_4395770416; }
		_case_begin_4395770416:;
		{
			_67959_ok = (*this)._method_annotate_prim(_67943_k);
			return _67959_ok;
		}
		goto _match_end_4395768704;
		_case_end_4395770416:;
		if (!((jule::real(_67943_k->_method_slc())))) { goto _case_end_4395770528; }
		_case_begin_4395770528:;
		{
			_67959_ok = (*this)._method_annotate_slc(_67943_k);
			return _67959_ok;
		}
		goto _match_end_4395768704;
		_case_end_4395770528:;
		if (!((jule::real(_67943_k->_method_map())))) { goto _case_end_4395769712; }
		_case_begin_4395769712:;
		{
			_67959_ok = (*this)._method_annotate_map(_67943_k);
			return _67959_ok;
		}
		goto _match_end_4395768704;
		_case_end_4395769712:;
		if (!((jule::real(_67943_k->_method_fnc())))) { goto _case_end_4395769824; }
		_case_begin_4395769824:;
		{
			_67959_ok = (*this)._method_annotate_fn(_67943_k);
			return _67959_ok;
		}
		goto _match_end_4395768704;
		_case_end_4395769824:;
		if (!((jule::real(_67943_k->_method_ptr())))) { goto _case_end_4395769936; }
		_case_begin_4395769936:;
		{
			_67959_ok = (*this)._method_annotate_ptr(_67943_k);
			return _67959_ok;
		}
		goto _match_end_4395768704;
		_case_end_4395769936:;
		if (!((jule::real(_67943_k->_method_ref())))) { goto _case_end_4395770992; }
		_case_begin_4395770992:;
		{
			_67959_ok = (*this)._method_annotate_ref(_67943_k);
			return _67959_ok;
		}
		goto _match_end_4395768704;
		_case_end_4395770992:;
		_case_begin_4395769120:;
		{
			_67959_ok = false;
			return _67959_ok;
		}
		goto _match_end_4395768704;
		_case_end_4395769120:;
		_match_end_4395768704:;
	}
}



inline jule::Bool _1da120d15_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _69636_ok = jule::Bool();
	_1da411226_TypeKind* _69717_pk = ((*this)._field_p->_field_kind).alloc;
	(*this)._field_k=(&(_69717_pk));
	_69636_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _69636_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da120d15_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1da120d15_FnCallArgChecker::_method_push_err_token(_20542560a_Token _71433_token,jule::Str _71447_fmt,jule::Slice<jule::Any> _71460_args) {
	(*this)._field_e->_field_s->_method_push_err(_71433_token,_71447_fmt,_71460_args);
}



inline void _1da120d15_FnCallArgChecker::_method_push_err(jule::Str _71827_fmt,jule::Slice<jule::Any> _71840_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_71827_fmt,_71840_args);
}



inline jule::Slice<jule::Ref<_2053ddd54_ParamIns>> _1da120d15_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && jule::real((*this)._field_f->_field_params[0LL]->_field_decl)) && (*this)._field_f->_field_params[0LL]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(1LL);
	}
	return (*this)._field_f->_field_params;
}



inline jule::Bool _1da120d15_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ref<_2053ddd54_ParamIns>> _72931_params) {
	jule::Bool _72954_ok = jule::Bool();
	jule::I64 _73017_n = _72931_params.len();
	if ((_73017_n > 0LL) && _72931_params[0LL]->_field_decl->_method_is_self()) {
		(_73017_n)--;
	}
	jule::I64 _73517_diff = _73017_n - (*this)._field_args.len();
	{
		if (!((_73517_diff == 0LL))) { goto _case_end_4395813840; }
		_case_begin_4395813840:;
		{
			_72954_ok = true;
			return _72954_ok;
		}
		goto _match_end_4395813456;
		_case_end_4395813840:;
		if (!(((_73017_n > 0LL) && _72931_params[static_cast<jule::Int>(_73017_n - 1LL)]->_field_decl->_field_variadic))) { goto _case_end_4395813968; }
		_case_begin_4395813968:;
		{
			_72954_ok = true;
			return _72954_ok;
		}
		goto _match_end_4395813456;
		_case_end_4395813968:;
		if (!(((_73517_diff < 0LL) || (_73517_diff > _72931_params.len())))) { goto _case_end_4395814096; }
		_case_begin_4395814096:;
		{
			(*this)._method_push_err(jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
			_72954_ok = false;
			return _72954_ok;
		}
		goto _match_end_4395813456;
		_case_end_4395814096:;
		_match_end_4395813456:;
	}
	jule::Str _74817_idents = jule::Str("", 0);
	_iter_begin_4395818352:;
	if (!(_73517_diff > 0LL)) { goto _iter_end_4395818352; }
	{
		_74817_idents+=jule::Str(", ", 2) + _72931_params[static_cast<jule::Int>(_73017_n - _73517_diff)]->_field_decl->_field_ident;
	}
	_iter_next_4395818352:;
	(_73517_diff)--;
	goto _iter_begin_4395818352;
	_iter_end_4395818352:;
	_74817_idents=_74817_idents.slice(2LL);
	(*this)._method_push_err(jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_74817_idents)}));
	_72954_ok = false;
	return _72954_ok;
}



inline jule::Bool _1da120d15_FnCallArgChecker::_method_check_arg(jule::Ref<_2053ddd54_ParamIns> _75832_p,jule::Ref<_1da2d3bdc_Data> _75850_arg,_20542560a_Token _75866_error_token) {
	jule::Bool _75888_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation) {
		_1da120d15_DynamicTypeAnnotation _76021_dta = _1da120d15_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_75832_p,_75850_arg,_75866_error_token,nullptr);
		_75888_ok=_76021_dta._method_annotate();
		if ((!(_75888_ok))) {
			(*this)._method_push_err_token(_75866_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
			_75888_ok = false;
			return _75888_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_75832_p->_field_decl->_field_mutable,_75832_p->_field_decl->_field_reference,_75832_p->_field_kind,_75850_arg,_75866_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_75832_p->_field_kind,_75850_arg,_75866_error_token,false);
	_75888_ok = true;
	return _75888_ok;
}



inline jule::Bool _1da120d15_FnCallArgChecker::_method_push(jule::Ref<_2053ddd54_ParamIns> _78027_p,jule::Ref<_2053703bd_Expr> _78045_arg) {
	jule::Bool _78059_ok = jule::Bool();
	jule::Ref<_1da2d3bdc_Data> _78117_d = jule::new_ref<_1da2d3bdc_Data>();
	if ((!((*this)._field_dynamic_annotation)) && (!(_78027_p->_field_decl->_field_variadic))) {
		jule::Ref<_1da411226_TypeKind> _78321_old = (*this)._field_e->_field_prefix;
		(*this)._field_e->_field_prefix=_78027_p->_field_kind;
		_78117_d=(*this)._field_e->_method_eval_expr_kind(_78045_arg->_field_kind);
		(*this)._field_e->_field_prefix=_78321_old;
	} else {
		jule::Ref<_1da411226_TypeKind> _78821_old = (*this)._field_e->_field_prefix;
		jule::drop((*this)._field_e->_field_prefix);
		_78117_d=(*this)._field_e->_method_eval_expr_kind(_78045_arg->_field_kind);
		(*this)._field_e->_field_prefix=_78821_old;
	}
	if ((!(jule::real(_78117_d)))) {
		_78059_ok = false;
		return _78059_ok;
	}
	(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_78117_d->_field_model}));
	_78059_ok = (*this)._method_check_arg(_78027_p,_78117_d,_78045_arg->_field_token);
	return _78059_ok;
}



inline jule::Bool _1da120d15_FnCallArgChecker::_method_push_variadic(jule::Ref<_2053ddd54_ParamIns> _80036_p,jule::Int _80054_i) {
	jule::Bool _80064_ok = jule::Bool();
	_80064_ok=true;
	jule::Bool _80217_variadiced = false;
	jule::Bool _80313_more = (_80054_i + 1LL) < (*this)._field_args.len();
	jule::Ref<_206e63542_SliceExprModel> _80417_model = jule::new_struct<_206e63542_SliceExprModel>(new( std::nothrow ) _206e63542_SliceExprModel(_80036_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ref<_1da411226_TypeKind> _80817_old = (*this)._field_e->_field_prefix;
	_iter_begin_4395867360:;
	if (!(_80054_i < (*this)._field_args.len())) { goto _iter_end_4395867360; }
	{
		jule::Ref<_2053703bd_Expr> _81021_arg = (*this)._field_args[static_cast<jule::Int>(_80054_i)];
		{
			auto _match_expr{ _81021_arg->_field_kind };
			if (!(_match_expr.type_is<jule::Ref<_2053703bd_VariadicExpr>>())) { goto _case_end_4395873808; }
			_case_begin_4395873808:;
			{
				(*this)._field_e->_field_prefix=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1da411226_Slc>(new( std::nothrow ) _1da411226_Slc(_80036_p->_field_kind))));
			}
			goto _match_end_4395871232;
			_case_end_4395873808:;
			_case_begin_4395872064:;
			{
				(*this)._field_e->_field_prefix=_80036_p->_field_kind;
			}
			goto _match_end_4395871232;
			_case_end_4395872064:;
			_match_end_4395871232:;
		}
		jule::Ref<_1da2d3bdc_Data> _82021_d = (*this)._field_e->_method_eval_expr_kind(_81021_arg->_field_kind);
		if ((!(jule::real(_82021_d)))) {
			_80064_ok=false;
			goto _iter_next_4395867360;
		}
		if (_82021_d->_field_variadiced) {
			_80217_variadiced=true;
			_82021_d->_field_variadiced=false;
			_80036_p->_field_kind->_field_variadic=true;
			_82021_d->_field_kind->_field_variadic=true;
			__JULE_DEFER({
				_82021_d->_field_kind->_field_variadic=false;
				_80036_p->_field_kind->_field_variadic=false;
			});
			{
				auto _match_expr{ _82021_d->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_206e63542_SliceExprModel>>())) { goto _case_end_4395881952; }
				_case_begin_4395881952:;
				{
					_80417_model=_82021_d->_field_model.operator jule::Ref<_206e63542_SliceExprModel>();
					_80417_model->_field_elem_kind=_80036_p->_field_kind;
				}
				goto _match_end_4395883040;
				_case_end_4395881952:;
				_case_begin_4395883232:;
				{
					jule::drop(_80417_model);
					(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_82021_d->_field_model}));
				}
				goto _match_end_4395883040;
				_case_end_4395883232:;
				_match_end_4395883040:;
			}
			_80064_ok=(*this)._method_check_arg(_80036_p,_82021_d,_81021_arg->_field_token) && _80064_ok;
			goto _iter_next_4395867360;
		}
		_80417_model->_field_elems=jule::append(_80417_model->_field_elems,jule::Slice<jule::Any>({_82021_d->_field_model}));
		_80064_ok=(*this)._method_check_arg(_80036_p,_82021_d,_81021_arg->_field_token) && _80064_ok;
	}
	_iter_next_4395867360:;
	(_80054_i)++;
	goto _iter_begin_4395867360;
	_iter_end_4395867360:;
	(*this)._field_e->_field_prefix=_80817_old;
	if (_80217_variadiced && _80313_more) {
		(*this)._method_push_err(jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>({}));
	}
	if (jule::real(_80417_model)) {
		(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({jule::Any(_80417_model)}));
	}
	_80064_ok = _80064_ok;
	return _80064_ok;
}



inline jule::Bool _1da120d15_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ref<_2053ddd54_ParamIns>> _86633_params) {
	jule::Bool _86656_ok = jule::Bool();
	_86656_ok=true;
	jule::Int _86817_i = 0LL;
	_julec_label_iter:;
	_iter_begin_4395901056:;
	if (!(_86817_i < _86633_params.len())) { goto _iter_end_4395901056; }
	{
		jule::Ref<_2053ddd54_ParamIns> _87121_p = _86633_params[static_cast<jule::Int>(_86817_i)];
		{
			if (!((_87121_p->_field_decl->_method_is_self()))) { goto _case_end_4395905024; }
			goto _match_end_4395904064;
			_case_end_4395905024:;
			if (!((_87121_p->_field_decl->_field_variadic))) { goto _case_end_4395905344; }
			_case_begin_4395905344:;
			{
				_86656_ok=(*this)._method_push_variadic(_87121_p,_86817_i) && _86656_ok;
				goto _iter_end_4395901056;
			}
			goto _match_end_4395904064;
			_case_end_4395905344:;
			if (!(((*this)._field_args.len() <= _86817_i))) { goto _case_end_4395905456; }
			_case_begin_4395905456:;
			{
				_86656_ok=false;
				goto _iter_end_4395901056;
			}
			goto _match_end_4395904064;
			_case_end_4395905456:;
			_case_begin_4395904192:;
			{
				_86656_ok=(*this)._method_push(_87121_p,(*this)._field_args[static_cast<jule::Int>(_86817_i)]) && _86656_ok;
			}
			goto _match_end_4395904064;
			_case_end_4395904192:;
			_match_end_4395904064:;
		}
		(_86817_i)++;
	}
	_iter_next_4395901056:;
	goto _iter_begin_4395901056;
	_iter_end_4395901056:;
	_86656_ok = _86656_ok;
	return _86656_ok;
}



inline jule::Bool _1da120d15_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _89350_ok = jule::Bool();
	{
		auto _range_expr = (*this)._field_f->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da411226_TypeKind> _1da120d15_g = *_range_begin;
			_iter_begin_4395914256:;
			{
				if ((!(jule::real(_1da120d15_g)))) {
					(*this)._method_push_err(jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
					_89350_ok = false;
					return _89350_ok;
				}
			}
			_iter_next_4395914256:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da120d15_g = *_range_begin; goto _iter_begin_4395914256; }
			_iter_end_4395914256:;
		}
	}
	_89350_ok = true;
	return _89350_ok;
}



inline jule::Bool _1da120d15_FnCallArgChecker::_method_check(void) {
	jule::Bool _90326_ok = jule::Bool();
	jule::Slice<jule::Ref<_2053ddd54_ParamIns>> _90417_params = (*this)._method_get_params();
	_90326_ok=(*this)._method_check_counts(_90417_params);
	if ((!(_90326_ok))) {
		_90326_ok = false;
		return _90326_ok;
	}
	_90326_ok=(*this)._method_check_args(_90417_params);
	if (_90326_ok && (*this)._field_dynamic_annotation) {
		_90326_ok=(*this)._method_check_dynamic_type_annotation();
	}
	_90326_ok = _90326_ok;
	return _90326_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da120d15_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1da120d15_StructLitChecker::_method_push_err(_20542560a_Token _92727_token,jule::Str _92741_fmt,jule::Slice<jule::Any> _92754_args) {
	(*this)._field_e->_method_push_err(_92727_token,_92741_fmt,_92754_args);
}



inline void _1da120d15_StructLitChecker::_method_push_suggestion(jule::Str _93234_fmt,jule::Slice<jule::Any> _93247_args) {
	(*this)._field_e->_method_push_suggestion(_93234_fmt,_93247_args);
}



inline void _1da120d15_StructLitChecker::_method_push_match(jule::Ref<_2053cdc01_FieldIns> _93633_f,jule::Ref<_1da2d3bdc_Data> _93651_d,_20542560a_Token _93665_error_token) {
	(*this)._field_args=jule::append((*this)._field_args,jule::Slice<jule::Ref<_206e63542_StructArgExprModel>>({jule::new_struct<_206e63542_StructArgExprModel>(new( std::nothrow ) _206e63542_StructArgExprModel(_93633_f,_93651_d->_field_model))}));
	
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(true,false,_93633_f->_field_kind,_93651_d,_93665_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_93633_f->_field_kind,_93651_d,_93665_error_token,false);
}



inline void _1da120d15_StructLitChecker::_method_check_pair(jule::Ref<_2053703bd_FieldExprPair> _94833_pair,jule::Slice<jule::Any> _94859_exprs) {
	jule::Ref<_2053cdc01_FieldIns> _95017_f = (*this)._field_s->_method_find_field(_94833_pair->_field_field._field_kind);
	if ((!(jule::real(_95017_f)))) {
		(*this)._method_push_err(_94833_pair->_field_field,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_94833_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_95017_f->_field_decl->_field_public,_95017_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_94833_pair->_field_field,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_94833_pair->_field_field._field_kind)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
	}
	_julec_label_dup_lookup:;
	{
		auto _range_expr = _94859_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1da120d15_expr = *_range_begin;
			_iter_begin_4395963072:;
			{
				{
					auto _match_expr{ _1da120d15_expr };
					if (!(_match_expr.type_is<jule::Ref<_2053703bd_FieldExprPair>>())) { goto _case_end_4395964800; }
					_case_begin_4395964800:;
					{
						jule::Ref<_2053703bd_FieldExprPair> _96625_dpair = _1da120d15_expr.operator jule::Ref<_2053703bd_FieldExprPair>();
						{
							if (!((_94833_pair == _96625_dpair))) { goto _case_end_4395967920; }
							_case_begin_4395967920:;
							{
								goto _iter_end_4395963072;
							}
							goto _match_end_4395967744;
							_case_end_4395967920:;
							if (!((_94833_pair->_field_field._field_kind == _96625_dpair->_field_field._field_kind))) { goto _case_end_4395968048; }
							_case_begin_4395968048:;
							{
								(*this)._method_push_err(_94833_pair->_field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_94833_pair->_field_field._field_kind)}));
								goto _iter_end_4395963072;
							}
							goto _match_end_4395967744;
							_case_end_4395968048:;
							_match_end_4395967744:;
						}
					}
					goto _match_end_4395963648;
					_case_end_4395964800:;
					_match_end_4395963648:;
				}
			}
			_iter_next_4395963072:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da120d15_expr = *_range_begin; goto _iter_begin_4395963072; }
			_iter_end_4395963072:;
		}
	}
	jule::Ref<_1da411226_TypeKind> _97817_prefix = (*this)._field_e->_field_prefix;
	__JULE_DEFER({
		(*this)._field_e->_field_prefix=_97817_prefix;
	});
	(*this)._field_e->_field_prefix=_95017_f->_field_kind;
	jule::Ref<_1da2d3bdc_Data> _98217_d = (*this)._field_e->_method_eval_expr_kind(_94833_pair->_field_expr);
	if ((!(jule::real(_98217_d)))) {
		return;
	}
	(*this)._method_push_match(_95017_f,_98217_d,_94833_pair->_field_field);
}



inline jule::Bool _1da120d15_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any> _98934_exprs) {
	jule::Bool _99017_ok = true;
	{
		auto _range_expr = _98934_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da120d15_i = 0;
			jule::Any _1da120d15_expr = *_range_begin;
			_iter_begin_4395982064:;
			{
				{
					auto _match_expr{ _1da120d15_expr };
					if (!(_match_expr.type_is<jule::Ref<_2053703bd_KeyValPair>>())) { goto _case_end_4395984464; }
					_case_begin_4395984464:;
					{
						jule::Ref<_2053703bd_KeyValPair> _99425_pair = _1da120d15_expr.operator jule::Ref<_2053703bd_KeyValPair>();
						{
							auto _match_expr{ _99425_pair->_field_key };
							if (!(_match_expr.type_is<jule::Ref<_2053703bd_IdentExpr>>())) { goto _case_end_4395988064; }
							goto _match_end_4395987056;
							_case_end_4395988064:;
							_case_begin_4395987760:;
							{
								(*this)._method_push_err(_99425_pair->_field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
								_99017_ok=false;
								goto _iter_next_4395982064;
							}
							goto _match_end_4395987056;
							_case_end_4395987760:;
							_match_end_4395987056:;
						}
						_98934_exprs[static_cast<jule::Int>(_1da120d15_i)]=jule::Any(jule::new_struct<_2053703bd_FieldExprPair>(new( std::nothrow ) _2053703bd_FieldExprPair(_99425_pair->_field_key.operator jule::Ref<_2053703bd_IdentExpr>()->_field_token,_99425_pair->_field_val)));
					}
					goto _match_end_4395983904;
					_case_end_4395984464:;
					_match_end_4395983904:;
				}
			}
			_iter_next_4395982064:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da120d15_i; _1da120d15_expr = *_range_begin; goto _iter_begin_4395982064; }
			_iter_end_4395982064:;
		}
	}
	return _99017_ok;
}



inline void _1da120d15_StructLitChecker::_method_check(jule::Slice<jule::Any> _101528_exprs) {
	if (_101528_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_101528_exprs)))) {
		return;
	}
	jule::Bool _102417_paired = false;
	{
		auto _range_expr = _101528_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da120d15_i = 0;
			jule::Any _1da120d15_expr = *_range_begin;
			_iter_begin_4395998336:;
			{
				{
					auto _match_expr{ _1da120d15_expr };
					if (!(_match_expr.type_is<jule::Ref<_2053703bd_FieldExprPair>>())) { goto _case_end_4396002336; }
					_case_begin_4396002336:;
					{
						jule::Ref<_2053703bd_FieldExprPair> _102825_pair = _1da120d15_expr.operator jule::Ref<_2053703bd_FieldExprPair>();
						if ((_1da120d15_i > 0LL) && (!(_102417_paired))) {
							(*this)._method_push_err(_102825_pair->_field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						}
						_102417_paired=true;
						(*this)._method_check_pair(_102825_pair,_101528_exprs);
					}
					goto _match_end_4396001664;
					_case_end_4396002336:;
					if (!(_match_expr.type_is<jule::Ref<_2053703bd_Expr>>())) { goto _case_end_4396002448; }
					_case_begin_4396002448:;
					{
						jule::Ref<_2053703bd_Expr> _103625_e = _1da120d15_expr.operator jule::Ref<_2053703bd_Expr>();
						if (_102417_paired) {
							(*this)._method_push_err(_103625_e->_field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>({}));
						}
						if (_1da120d15_i >= (*this)._field_s->_field_fields.len()) {
							(*this)._method_push_err(_103625_e->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_4395998336;
						}
						jule::Ref<_2053cdc01_FieldIns> _104525_field = (*this)._field_s->_field_fields[static_cast<jule::Int>(_1da120d15_i)];
						jule::Ref<_1da411226_TypeKind> _104725_prefix = (*this)._field_e->_field_prefix;
						__JULE_DEFER({
							(*this)._field_e->_field_prefix=_104725_prefix;
						});
						(*this)._field_e->_field_prefix=_104525_field->_field_kind;
						jule::Ref<_1da2d3bdc_Data> _105125_d = (*this)._field_e->_method_eval_expr_kind(_103625_e->_field_kind);
						if ((!(jule::real(_105125_d)))) {
							goto _iter_next_4395998336;
						}
						(*this)._method_push_match(_104525_field,_105125_d,_103625_e->_field_token);
					}
					goto _match_end_4396001664;
					_case_end_4396002448:;
					_match_end_4396001664:;
				}
			}
			_iter_next_4395998336:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da120d15_i; _1da120d15_expr = *_range_begin; goto _iter_begin_4395998336; }
			_iter_end_4395998336:;
		}
	}
	if ((!(_102417_paired))) {
		jule::I64 _106217_n = (*this)._field_s->_field_fields.len();
		jule::I64 _106321_diff = _106217_n - _101528_exprs.len();
		{
			if (!((_106321_diff <= 0LL))) { goto _case_end_4396026880; }
			_case_begin_4396026880:;
			{
				return;
			}
			goto _match_end_4396026640;
			_case_end_4396026880:;
			_match_end_4396026640:;
		}
		jule::Str _106921_idents = jule::Str("", 0);
		_iter_begin_4396024208:;
		if (!(_106321_diff > 0LL)) { goto _iter_end_4396024208; }
		{
			_106921_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[static_cast<jule::Int>(_106217_n - _106321_diff)]->_field_decl->_field_ident;
		}
		_iter_next_4396024208:;
		(_106321_diff)--;
		goto _iter_begin_4396024208;
		_iter_end_4396024208:;
		_106921_idents=_106921_idents.slice(2LL);
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_106921_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1da120d15_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1d9e22661_Var> _1da120d15_RangeChecker::_method_build_var(jule::Ref<_2053703bd_VarDecl> _108828_decl) {
	jule::Ref<_1d9e22661_Var> _108917_v = _206a20e79_build_var(_108828_decl);
	return _108917_v;
}



inline void _1da120d15_RangeChecker::_method_set_size_key(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _20542560a_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("int", 3))))));
}



inline void _1da120d15_RangeChecker::_method_check_range_expr_validity(jule::Ref<_1da2d3bdc_Data>& _111249_d,jule::Ref<_1d9e22661_Var>& _111260_key,jule::Ref<_1da411226_TypeKind>& _111276_k) {
	jule::Bool _111317__mut = _111260_key->_field_mutable;
	if (_111317__mut && (!(_111276_k->_method_mutable()))) {
		_111317__mut=false;
	}
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr(_111317__mut,_111260_key->_field_reference,_111260_key->_field_kind->_field_kind,_111249_d,(*this)._field_rang->_field_in_token);
}



inline void _1da120d15_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _20542560a_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1da411226_Slc> _113117_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),_113117_slc->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_113117_slc->_field_elem);
}



inline void _1da120d15_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _20542560a_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1da411226_Arr> _114417_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),_114417_arr->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_114417_arr->_field_elem);
}



inline void _1da120d15_RangeChecker::_method_check_map_key_a(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _20542560a_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ref<_1da411226_Map> _115617_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),_115617_m->_field_key));
	jule::Ref<_1da2d3bdc_Data> _116017_d = jule::new_ref<_1da2d3bdc_Data>((*this)._field_d.get());
	_116017_d->_field_kind=_115617_m->_field_key;
	(*this)._method_check_range_expr_validity(_116017_d,(*this)._field_kind->_field_key_a,_115617_m->_field_key);
}



inline void _1da120d15_RangeChecker::_method_check_map_key_b(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _20542560a_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1da411226_Map> _117117_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),_117117_m->_field_val));
	jule::Ref<_1da2d3bdc_Data> _117517_d = jule::new_ref<_1da2d3bdc_Data>((*this)._field_d.get());
	_117517_d->_field_kind=_117117_m->_field_val;
	(*this)._method_check_range_expr_validity(_117517_d,(*this)._field_kind->_field_key_b,_117117_m->_field_val);
}



inline void _1da120d15_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _1da120d15_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _20542560a_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _1da120d15_RangeChecker::_method_check(void) {
	if (jule::real((*this)._field_d->_field_kind->_method_ref())) {
		(*this)._field_d->_field_model=jule::Any(jule::new_struct<_206e63542_ExplicitDerefExprModel>(new( std::nothrow ) _206e63542_ExplicitDerefExprModel((*this)._field_d->_field_model)));
		(*this)._field_d->_field_kind=(*this)._field_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_slc())))) { goto _case_end_4396116976; }
		_case_begin_4396116976:;
		{
			(*this)._method_check_slice();
			return true;
		}
		goto _match_end_4396116480;
		_case_end_4396116976:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_arr())))) { goto _case_end_4396117104; }
		_case_begin_4396117104:;
		{
			(*this)._method_check_array();
			return true;
		}
		goto _match_end_4396116480;
		_case_end_4396117104:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_map())))) { goto _case_end_4396117232; }
		_case_begin_4396117232:;
		{
			(*this)._method_check_map();
			return true;
		}
		goto _match_end_4396116480;
		_case_end_4396117232:;
		_match_end_4396116480:;
	}
	jule::Ref<_1da411226_Prim> _122213_prim = (*this)._field_d->_field_kind->_method_prim();
	if (jule::real(_122213_prim) && _122213_prim->_method_is_str()) {
		(*this)._method_check_str();
		return true;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>({}));
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da120d15_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1da120d15_RetTypeChecker::_method_prepare_types(void) {
	(*this)._field_types=_1da120d15_get_fn_result_types((*this)._field_f);
}



inline void _1da120d15_RetTypeChecker::_method_prepare_exprs(jule::Ref<_2053703bd_Expr> _124936_e) {
	if ((!(jule::real(_124936_e)))) {
		return;
	}
	{
		auto _match_expr{ _124936_e->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_TupleExpr>>())) { goto _case_end_4396136608; }
		_case_begin_4396136608:;
		{
			(*this)._field_exprs=_124936_e->_field_kind.operator jule::Ref<_2053703bd_TupleExpr>()->_field_expr;
		}
		goto _match_end_4396135424;
		_case_end_4396136608:;
		_case_begin_4396134816:;
		{
			(*this)._field_exprs=jule::append((*this)._field_exprs,jule::Slice<jule::Ref<_2053703bd_Expr>>({_124936_e}));
		}
		goto _match_end_4396135424;
		_case_end_4396134816:;
		_match_end_4396135424:;
	}
}



inline void _1da120d15_RetTypeChecker::_method_ret_vars(void) {
	if ((*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ref<_1d9e22661_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len())));
	jule::Ref<_206b0557a_ScopeChecker> _126917_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _127117_j = 0LL;
	{
		auto _range_expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da120d15_i = 0;
			_20542560a_Token _1da120d15_ident = *_range_begin;
			_iter_begin_4396147808:;
			{
				if ((!(_20542560a_is_ignore_ident(_1da120d15_ident._field_kind)))) {
					(*this)._field_vars[static_cast<jule::Int>(_1da120d15_i)]=_126917_root_scope->_field_table->_field_vars[static_cast<jule::Int>(_127117_j)];
					(_127117_j)++;
				} else {
					(*this)._field_vars[static_cast<jule::Int>(_1da120d15_i)]=jule::new_struct<_1d9e22661_Var>(new( std::nothrow ) _1d9e22661_Var(jule::Ref<_206b0557a_Scope>(),_20542560a_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),(*this)._field_types[static_cast<jule::Int>(_1da120d15_i)])),jule::Ref<_1da2d3bdc_Value>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Slice<jule::Ref<_2053703bd_Directive>>(),jule::Slice<jule::Ref<_1d9e22661_Var>>()));
				}
			}
			_iter_next_4396147808:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da120d15_i; _1da120d15_ident = *_range_begin; goto _iter_begin_4396147808; }
			_iter_end_4396147808:;
		}
	}
	if (_127117_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



inline void _1da120d15_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_1da2d3bdc_Data>> _129517_datas = jule::Slice<jule::Ref<_1da2d3bdc_Data>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_exprs.len())));
	{
		auto _range_expr = (*this)._field_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da120d15_i = 0;
			jule::Ref<_2053703bd_Expr> _1da120d15_expr = *_range_begin;
			_iter_begin_4396163632:;
			{
				if (_1da120d15_i >= (*this)._field_types.len()) {
					goto _iter_end_4396163632;
				}
				jule::Ref<_1da411226_TypeKind> _130221_t = (*this)._field_types[static_cast<jule::Int>(_1da120d15_i)];
				jule::Ref<_1da2d3bdc_Data> _130421_d = (*this)._field_sc->_field_s->_method_evalp(_1da120d15_expr,(*this)._field_sc,_130221_t);
				if ((!(jule::real(_130421_d)))) {
					goto _iter_next_4396163632;
				}
				_129517_datas=jule::append(_129517_datas,jule::Slice<jule::Ref<_1da2d3bdc_Data>>({_130421_d}));
				if ((!(_130421_d->_field_mutable)) && _130421_d->_field_kind->_method_mutable()) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>({}));
					return;
				}
				_1da120d15_AssignTypeChecker _131621_ac = _1da120d15_AssignTypeChecker((*this)._field_sc->_field_s,_130221_t,_130421_d,(*this)._field_error_token,jule::Bool());
				_131621_ac._method_check();
			}
			_iter_next_4396163632:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da120d15_i; _1da120d15_expr = *_range_begin; goto _iter_begin_4396163632; }
			_iter_end_4396163632:;
		}
	}
	if (_129517_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_206e63542_TupleExprModel>(new( std::nothrow ) _206e63542_TupleExprModel(_129517_datas)));
	} else if (_129517_datas.len() == 1LL) {
		(*this)._field_model=_129517_datas[0LL]->_field_model;
	}
}



inline jule::Bool _1da120d15_RetTypeChecker::_method_check(jule::Ref<_2053703bd_Expr> _133528_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_133528_e);
	(*this)._method_ret_vars();
	jule::I64 _134013_n = (*this)._field_exprs.len();
	if ((_134013_n == 0LL) && (!((*this)._field_f->_field_decl->_method_is_void()))) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>({}));
			return false;
		}
		return true;
	}
	if ((_134013_n > 0LL) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>({}));
		return false;
	}
	if (_134013_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>({}));
	} else if (_134013_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing return expressions for multi return", 43),jule::Slice<jule::Any>({}));
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da120d15_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_206e66325_ImportInfo> _1da2aa301_SymbolTable::_method_find_package(jule::Str _2535_ident) {
	{
		auto _range_expr = (*this)._field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1da2aa301_pkg = *_range_begin;
			_iter_begin_4396205984:;
			{
				if (_1da2aa301_pkg->_field_ident == _2535_ident) {
					return _1da2aa301_pkg;
				}
			}
			_iter_next_4396205984:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_pkg = *_range_begin; goto _iter_begin_4396205984; }
			_iter_end_4396205984:;
		}
	}
	return jule::new_ref<_206e66325_ImportInfo>();
}



inline jule::Ref<_206e66325_ImportInfo> _1da2aa301_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)> _3737_selector) {
	if (_3737_selector == nullptr) {
		return jule::new_ref<_206e66325_ImportInfo>();
	}
	{
		auto _range_expr = (*this)._field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1da2aa301_pkg = *_range_begin;
			_iter_begin_4396211040:;
			{
				if (_3737_selector(_1da2aa301_pkg)) {
					return _1da2aa301_pkg;
				}
			}
			_iter_next_4396211040:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_pkg = *_range_begin; goto _iter_begin_4396211040; }
			_iter_end_4396211040:;
		}
	}
	return jule::new_ref<_206e66325_ImportInfo>();
}



inline jule::Ref<_1d9e22661_Var> _1da2aa301_SymbolTable::_method_find_var(jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return (*this)._method___find_var(_5231_ident,_5243_cpp_linked,false);
}



inline jule::Ref<_1da411226_TypeAlias> _1da2aa301_SymbolTable::_method_find_type_alias(jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return (*this)._method___find_type_alias(_5838_ident,_5850_cpp_linked,false);
}



inline jule::Ref<_2053cdc01_Struct> _1da2aa301_SymbolTable::_method_find_struct(jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto _range_expr = (*this)._field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _1da2aa301_s = *_range_begin;
			_iter_begin_4396221184:;
			{
				if ((_1da2aa301_s->_field_ident == _6434_ident) && (_1da2aa301_s->_field_cpp_linked == _6446_cpp_linked)) {
					return _1da2aa301_s;
				}
			}
			_iter_next_4396221184:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_s = *_range_begin; goto _iter_begin_4396221184; }
			_iter_end_4396221184:;
		}
	}
	return jule::new_ref<_2053cdc01_Struct>();
}



inline jule::Ref<_2053ddd54_Fn> _1da2aa301_SymbolTable::_method_find_fn(jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto _range_expr = (*this)._field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1da2aa301_f = *_range_begin;
			_iter_begin_4396226384:;
			{
				if ((_1da2aa301_f->_field_ident == _7530_ident) && (_1da2aa301_f->_field_cpp_linked == _7542_cpp_linked)) {
					return _1da2aa301_f;
				}
			}
			_iter_next_4396226384:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_f = *_range_begin; goto _iter_begin_4396226384; }
			_iter_end_4396226384:;
		}
	}
	return jule::new_ref<_2053ddd54_Fn>();
}



inline jule::Ref<_2065895c5_Trait> _1da2aa301_SymbolTable::_method_find_trait(jule::Str _8633_ident) {
	{
		auto _range_expr = (*this)._field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2065895c5_Trait> _1da2aa301_t = *_range_begin;
			_iter_begin_4396230752:;
			{
				if (_1da2aa301_t->_field_ident == _8633_ident) {
					return _1da2aa301_t;
				}
			}
			_iter_next_4396230752:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_t = *_range_begin; goto _iter_begin_4396230752; }
			_iter_end_4396230752:;
		}
	}
	return jule::new_ref<_2065895c5_Trait>();
}



inline jule::Ref<_206b06c0d_Enum> _1da2aa301_SymbolTable::_method_find_enum(jule::Str _9732_ident) {
	{
		auto _range_expr = (*this)._field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b06c0d_Enum> _1da2aa301_e = *_range_begin;
			_iter_begin_4396234736:;
			{
				if (_1da2aa301_e->_field_ident == _9732_ident) {
					return _1da2aa301_e;
				}
			}
			_iter_next_4396234736:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_e = *_range_begin; goto _iter_begin_4396234736; }
			_iter_end_4396234736:;
		}
	}
	return jule::new_ref<_206b06c0d_Enum>();
}



inline jule::Ref<_1d9e22661_Var> _1da2aa301_SymbolTable::_method___find_var(jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = (*this)._field_vars.len() - 1LL;
		_iter_begin_4396240784:;
		if (!(_11021_i >= 0LL)) { goto _iter_end_4396240784; }
		{
			jule::Ref<_1d9e22661_Var> _11225_v = (*this)._field_vars[static_cast<jule::Int>(_11021_i)];
			if ((_11225_v->_field_ident == _10829_ident) && (_11225_v->_field_cpp_linked == _10841_cpp_linked)) {
				return _11225_v;
			}
		}
		_iter_next_4396240784:;
		(_11021_i)--;
		goto _iter_begin_4396240784;
		_iter_end_4396240784:;
	} else {
		{
			auto _range_expr = (*this)._field_vars;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d9e22661_Var> _1da2aa301_v = *_range_begin;
				_iter_begin_4396239648:;
				{
					if ((_1da2aa301_v->_field_ident == _10829_ident) && (_1da2aa301_v->_field_cpp_linked == _10841_cpp_linked)) {
						return _1da2aa301_v;
					}
				}
				_iter_next_4396239648:;
				++_range_begin;
				if (_range_begin != _range_end) { _1da2aa301_v = *_range_begin; goto _iter_begin_4396239648; }
				_iter_end_4396239648:;
			}
		}
	}
	return jule::new_ref<_1d9e22661_Var>();
}



inline jule::Ref<_1da411226_TypeAlias> _1da2aa301_SymbolTable::_method___find_type_alias(jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = (*this)._field_type_aliases.len() - 1LL;
		_iter_begin_4396252720:;
		if (!(_12921_i >= 0LL)) { goto _iter_end_4396252720; }
		{
			jule::Ref<_1da411226_TypeAlias> _13125_ta = (*this)._field_type_aliases[static_cast<jule::Int>(_12921_i)];
			if ((_13125_ta->_field_ident == _12736_ident) && (_13125_ta->_field_cpp_linked == _12748_cpp_linked)) {
				return _13125_ta;
			}
		}
		_iter_next_4396252720:;
		(_12921_i)--;
		goto _iter_begin_4396252720;
		_iter_end_4396252720:;
	} else {
		{
			auto _range_expr = (*this)._field_type_aliases;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1da411226_TypeAlias> _1da2aa301_ta = *_range_begin;
				_iter_begin_4396251584:;
				{
					if ((_1da2aa301_ta->_field_ident == _12736_ident) && (_1da2aa301_ta->_field_cpp_linked == _12748_cpp_linked)) {
						return _1da2aa301_ta;
					}
				}
				_iter_next_4396251584:;
				++_range_begin;
				if (_range_begin != _range_end) { _1da2aa301_ta = *_range_begin; goto _iter_begin_4396251584; }
				_iter_end_4396251584:;
			}
		}
	}
	return jule::new_ref<_1da411226_TypeAlias>();
}



inline jule::Any _1da2aa301_SymbolTable::_method_def_by_ident(jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto _range_expr = (*this)._field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d9e22661_Var> _1da2aa301_v = *_range_begin;
			_iter_begin_4396263200:;
			{
				if ((_1da2aa301_v->_field_ident == _14831_ident) && (_1da2aa301_v->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1da2aa301_v);
				}
			}
			_iter_next_4396263200:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_v = *_range_begin; goto _iter_begin_4396263200; }
			_iter_end_4396263200:;
		}
	}
	{
		auto _range_expr = (*this)._field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da411226_TypeAlias> _1da2aa301_ta = *_range_begin;
			_iter_begin_4396264736:;
			{
				if ((_1da2aa301_ta->_field_ident == _14831_ident) && (_1da2aa301_ta->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1da2aa301_ta);
				}
			}
			_iter_next_4396264736:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_ta = *_range_begin; goto _iter_begin_4396264736; }
			_iter_end_4396264736:;
		}
	}
	{
		auto _range_expr = (*this)._field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _1da2aa301_s = *_range_begin;
			_iter_begin_4396264208:;
			{
				if ((_1da2aa301_s->_field_ident == _14831_ident) && (_1da2aa301_s->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1da2aa301_s);
				}
			}
			_iter_next_4396264208:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_s = *_range_begin; goto _iter_begin_4396264208; }
			_iter_end_4396264208:;
		}
	}
	{
		auto _range_expr = (*this)._field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1da2aa301_f = *_range_begin;
			_iter_begin_4396272736:;
			{
				if ((_1da2aa301_f->_field_ident == _14831_ident) && (_1da2aa301_f->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1da2aa301_f);
				}
			}
			_iter_next_4396272736:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_f = *_range_begin; goto _iter_begin_4396272736; }
			_iter_end_4396272736:;
		}
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto _range_expr = (*this)._field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2065895c5_Trait> _1da2aa301_t = *_range_begin;
			_iter_begin_4396275808:;
			{
				if (_1da2aa301_t->_field_ident == _14831_ident) {
					return jule::Any(_1da2aa301_t);
				}
			}
			_iter_next_4396275808:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_t = *_range_begin; goto _iter_begin_4396275808; }
			_iter_end_4396275808:;
		}
	}
	{
		auto _range_expr = (*this)._field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b06c0d_Enum> _1da2aa301_e = *_range_begin;
			_iter_begin_4396277040:;
			{
				if (_1da2aa301_e->_field_ident == _14831_ident) {
					return jule::Any(_1da2aa301_e);
				}
			}
			_iter_next_4396277040:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_e = *_range_begin; goto _iter_begin_4396277040; }
			_iter_end_4396277040:;
		}
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1da2aa301_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto _range_expr = (*this)._field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d9e22661_Var> _1da2aa301_v = *_range_begin;
			_iter_begin_4396283616:;
			{
				if (((((jule::Uintptr)((_1da2aa301_v).alloc)) != _19534_itself) && (_1da2aa301_v->_field_ident == _19551_ident)) && (_1da2aa301_v->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4396283616:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_v = *_range_begin; goto _iter_begin_4396283616; }
			_iter_end_4396283616:;
		}
	}
	{
		auto _range_expr = (*this)._field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da411226_TypeAlias> _1da2aa301_ta = *_range_begin;
			_iter_begin_4396286336:;
			{
				if (((((jule::Uintptr)((_1da2aa301_ta).alloc)) != _19534_itself) && (_1da2aa301_ta->_field_ident == _19551_ident)) && (_1da2aa301_ta->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4396286336:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_ta = *_range_begin; goto _iter_begin_4396286336; }
			_iter_end_4396286336:;
		}
	}
	{
		auto _range_expr = (*this)._field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _1da2aa301_s = *_range_begin;
			_iter_begin_4396284640:;
			{
				if (((((jule::Uintptr)((_1da2aa301_s).alloc)) != _19534_itself) && (_1da2aa301_s->_field_ident == _19551_ident)) && (_1da2aa301_s->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4396284640:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_s = *_range_begin; goto _iter_begin_4396284640; }
			_iter_end_4396284640:;
		}
	}
	{
		auto _range_expr = (*this)._field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1da2aa301_f = *_range_begin;
			_iter_begin_4396293632:;
			{
				if (((((jule::Uintptr)((_1da2aa301_f).alloc)) != _19534_itself) && (_1da2aa301_f->_field_ident == _19551_ident)) && (_1da2aa301_f->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4396293632:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_f = *_range_begin; goto _iter_begin_4396293632; }
			_iter_end_4396293632:;
		}
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto _range_expr = (*this)._field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2065895c5_Trait> _1da2aa301_t = *_range_begin;
			_iter_begin_4396295664:;
			{
				if ((((jule::Uintptr)((_1da2aa301_t).alloc)) != _19534_itself) && (_1da2aa301_t->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4396295664:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_t = *_range_begin; goto _iter_begin_4396295664; }
			_iter_end_4396295664:;
		}
	}
	{
		auto _range_expr = (*this)._field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b06c0d_Enum> _1da2aa301_e = *_range_begin;
			_iter_begin_4396299504:;
			{
				if ((((jule::Uintptr)((_1da2aa301_e).alloc)) != _19534_itself) && (_1da2aa301_e->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4396299504:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2aa301_e = *_range_begin; goto _iter_begin_4396299504; }
			_iter_end_4396299504:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da2aa301_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da2d3bdc_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



inline jule::Bool _1da2d3bdc_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_void();
}



inline jule::Bool _1da2d3bdc_Data::_method_is_const(void) {
	return jule::real((*this)._field_constant);
}







std::ostream &operator<<(std::ostream &_Stream, const _1da2d3bdc_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "variadiced:" << _Src._field_variadiced << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da2d3bdc_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1da2d3bdc_Eval::_method_push_err(_20542560a_Token _24727_token,jule::Str _24741_fmt,jule::Slice<jule::Any> _24754_args) {
	(*this)._field_s->_method_push_err(_24727_token,_24741_fmt,_24754_args);
}



inline void _1da2d3bdc_Eval::_method_push_suggestion(jule::Str _25234_fmt,jule::Slice<jule::Any> _25247_args) {
	(*this)._field_s->_method_push_suggestion(_25234_fmt,_25247_args);
}



inline jule::Bool _1da2d3bdc_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _1da2d3bdc_Eval::_method_is_global(void) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1d9dc7517_Sema>>())) { goto _case_end_4396321136; }
		_case_begin_4396321136:;
		{
			return true;
		}
		goto _match_end_4396320192;
		_case_end_4396321136:;
		_case_begin_4396320832:;
		{
			return false;
		}
		goto _match_end_4396320192;
		_case_end_4396320832:;
		_match_end_4396320192:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_lit_nil(void) {
	jule::Ref<_1a89ca987_Const> _27117_constant = _1a89ca987_Const::_static_method_new_nil();
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),nullptr)),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_27117_constant),false,_27117_constant));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_lit_str(jule::Ref<_2053703bd_LitExpr> _28222_lt) {
	jule::Str _28317_s = _28222_lt->_field_value.slice(1LL,static_cast<jule::Int>(_28222_lt->_field_value.len() - 1LL));
	if (_20542560a_is_raw_str(_28222_lt->_field_value)) {
		_28317_s=_1a8bded22_to_raw_str(static_cast<jule::Slice<jule::U8>>(_28317_s));
	} else {
		_28317_s=_1a8bded22_to_str(static_cast<jule::Slice<jule::U8>>(_28317_s));
	}
	jule::Ref<_1a89ca987_Const> _28917_constant = _1a89ca987_Const::_static_method_new_str(_28317_s);
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("str", 3)))),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_28917_constant),false,_28917_constant));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_lit_bool(jule::Ref<_2053703bd_LitExpr> _30323_lit) {
	jule::Ref<_1a89ca987_Const> _30417_constant = _1a89ca987_Const::_static_method_new_bool(_30323_lit->_field_value == jule::Str("true", 4));
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_30417_constant),false,_30417_constant));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_lit_rune(jule::Ref<_2053703bd_LitExpr> _31723_l) {
	
	
	jule::Str _32113_lt = _31723_l->_field_value.slice(1LL,static_cast<jule::Int>(_31723_l->_field_value.len() - 1LL));
	jule::I32 _32213_r = _1a8bded22_to_rune(static_cast<jule::Slice<jule::U8>>(_32113_lt));
	jule::Ref<_1da2d3bdc_Data> _32317_data = jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::Ref<_1da411226_TypeKind>(),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,_1a89ca987_Const::_static_method_new_i64(static_cast<jule::I64>(_32213_r))));
	jule::Bool _33017_is_byte;
	std::tie(std::ignore,_33017_is_byte) = _1a8bded22_is_byte_lit(_31723_l->_field_value);
	if (_33017_is_byte) {
		_32317_data->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("u8", 2))));
	} else {
		_32317_data->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i32", 3))));
	}
	_32317_data->_field_model=jule::Any(jule::new_struct<_206e63542_RuneExprModel>(new( std::nothrow ) _206e63542_RuneExprModel(_32213_r)));
	_32317_data->_field_is_rune=true;
	return _32317_data;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_lit_float(jule::Ref<_2053703bd_LitExpr> _34624_l) {
	
	jule::F64 _34914_f;
	std::tie(_34914_f,std::ignore) = _20384ee76_parse_float(_34624_l->_field_value,64LL);
	jule::Ref<_1a89ca987_Const> _35017_constant = _1a89ca987_Const::_static_method_new_f64(_34914_f);
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_35017_constant),false,_35017_constant));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_lit_int(jule::Ref<_2053703bd_LitExpr> _36426_l) {
	
	jule::Str _36717_lit = _36426_l->_field_value;
	jule::Int _36817_base = 0LL;
	{
		if (!((_36717_lit.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4396374688; }
		_case_begin_4396374688:;
		{
			_36717_lit=_36717_lit.slice(2LL);
			_36817_base=16LL;
		}
		goto _match_end_4396373040;
		_case_end_4396374688:;
		if (!((_36717_lit.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4396374336; }
		_case_begin_4396374336:;
		{
			_36717_lit=_36717_lit.slice(2LL);
			_36817_base=2LL;
		}
		goto _match_end_4396373040;
		_case_end_4396374336:;
		if (!((_36717_lit.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4396374448; }
		_case_begin_4396374448:;
		{
			_36717_lit=_36717_lit.slice(2LL);
			_36817_base=8LL;
		}
		goto _match_end_4396373040;
		_case_end_4396374448:;
		if (!(((_36717_lit[0LL] == '0') && (_36717_lit.len() > 1LL)))) { goto _case_end_4396373456; }
		_case_begin_4396373456:;
		{
			_36717_lit=_36717_lit.slice(1LL);
			_36817_base=8LL;
		}
		goto _match_end_4396373040;
		_case_end_4396373456:;
		_case_begin_4396373152:;
		{
			_36817_base=10LL;
		}
		goto _match_end_4396373040;
		_case_end_4396373152:;
		_match_end_4396373040:;
	}
	jule::Ref<_1da2d3bdc_Data> _39117_d = jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::Ref<_1da411226_TypeKind>(),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1a89ca987_Const>()));
	jule::Any _39717_value = jule::Any(nullptr);
	jule::I64 _39814_sig;
	jule::Int _39819_err;
	std::tie(_39814_sig,_39819_err) = _20383c161_parse_int(_36717_lit,_36817_base,64LL);
	if (_39819_err == 0LLU) {
		_39717_value=jule::Any(_39814_sig);
		_39117_d->_field_constant=_1a89ca987_Const::_static_method_new_i64(_39814_sig);
	} else {
		jule::U64 _40318_unsig;
		jule::Int _40325_err;
		std::tie(_40318_unsig,_40325_err) = _20383c161_parse_uint(_36717_lit,_36817_base,64LL);
		if (_40325_err != 0LLU) {
			(*this)._method_push_err(_36426_l->_field_token,jule::Str("arithmetic value overflow", 25),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>({}));
		}
		_39117_d->_field_constant=_1a89ca987_Const::_static_method_new_u64(_40318_unsig);
		_39717_value=jule::Any(_40318_unsig);
	}
	_39117_d->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(_1da2d3bdc_kind_by_bitsize(_39717_value))));
	_1da2d3bdc_normalize_bitsize(_39117_d);
	_39117_d->_field_model=jule::Any(_39117_d->_field_constant);
	return _39117_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_lit_num(jule::Ref<_2053703bd_LitExpr> _42226_l) {
	{
		if (!((_20542560a_is_float(_42226_l->_field_value)))) { goto _case_end_4396403296; }
		_case_begin_4396403296:;
		{
			return (*this)._method_lit_float(_42226_l);
		}
		goto _match_end_4396401664;
		_case_end_4396403296:;
		_case_begin_4396401840:;
		{
			return (*this)._method_lit_int(_42226_l);
		}
		goto _match_end_4396401664;
		_case_end_4396401840:;
		_match_end_4396401664:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_lit(jule::Ref<_2053703bd_LitExpr> _42927_lit) {
	{
		if (!((_42927_lit->_method_is_nil()))) { goto _case_end_4396410096; }
		_case_begin_4396410096:;
		{
			return (*this)._method_lit_nil();
		}
		goto _match_end_4396407472;
		_case_end_4396410096:;
		if (!((_20542560a_is_str(_42927_lit->_field_value)))) { goto _case_end_4396409104; }
		_case_begin_4396409104:;
		{
			return (*this)._method_lit_str(_42927_lit);
		}
		goto _match_end_4396407472;
		_case_end_4396409104:;
		if (!((_20542560a_is_bool(_42927_lit->_field_value)))) { goto _case_end_4396409312; }
		_case_begin_4396409312:;
		{
			return (*this)._method_lit_bool(_42927_lit);
		}
		goto _match_end_4396407472;
		_case_end_4396409312:;
		if (!((_20542560a_is_rune(_42927_lit->_field_value)))) { goto _case_end_4396409760; }
		_case_begin_4396409760:;
		{
			return (*this)._method_lit_rune(_42927_lit);
		}
		goto _match_end_4396407472;
		_case_end_4396409760:;
		if (!((_20542560a_is_num(_42927_lit->_field_value)))) { goto _case_end_4396409872; }
		_case_begin_4396409872:;
		{
			return (*this)._method_lit_num(_42927_lit);
		}
		goto _match_end_4396407472;
		_case_end_4396409872:;
		_case_begin_4396407648:;
		{
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4396407472;
		_case_end_4396407648:;
		_match_end_4396407472:;
	}
}



inline jule::Any _1da2d3bdc_Eval::_method_find_builtins(jule::Str _44032_ident) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_206e66325_ImportInfo>>())) { goto _case_end_4396418960; }
		_case_begin_4396418960:;
		{
			jule::Any _44321_def = _1da2d3bdc_find_builtins_import(_44032_ident,(*this)._field_lookup.operator jule::Ref<_206e66325_ImportInfo>());
			if (_44321_def != nullptr) {
				return _44321_def;
			}
		}
		goto _match_end_4396418288;
		_case_end_4396418960:;
		if (!(_match_expr.type_is<jule::Ref<_1d9dc7517_Sema>>())) { goto _case_end_4396419088; }
		_case_begin_4396419088:;
		{
			jule::Any _44921_def = _1da2d3bdc_find_builtins_sema(_44032_ident,(*this)._field_lookup.operator jule::Ref<_1d9dc7517_Sema>());
			if (_44921_def != nullptr) {
				return _44921_def;
			}
		}
		goto _match_end_4396418288;
		_case_end_4396419088:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_ScopeChecker>>())) { goto _case_end_4396419216; }
		_case_begin_4396419216:;
		{
			jule::Any _45521_def = _1da2d3bdc_find_builtins_sema(_44032_ident,(*this)._field_lookup.operator jule::Ref<_206b0557a_ScopeChecker>()->_field_s);
			if (_45521_def != nullptr) {
				return _45521_def;
			}
		}
		goto _match_end_4396418288;
		_case_end_4396419216:;
		_match_end_4396418288:;
	}
	return _206c94dac_find_builtin_def(_44032_ident);
}



inline jule::Any _1da2d3bdc_Eval::_method_get_def(jule::Str _46426_ident,jule::Bool _46438_cpp_linked) {
	if ((!(_46438_cpp_linked))) {
		jule::Ref<_206b06c0d_Enum> _46621_enm = (*this)._field_lookup.get()._method_find_enum(_46426_ident);
		if (jule::real(_46621_enm)) {
			return jule::Any(_46621_enm);
		}
	}
	jule::Ref<_1d9e22661_Var> _47217_v = (*this)._field_lookup.get()._method_find_var(_46426_ident,_46438_cpp_linked);
	if (jule::real(_47217_v)) {
		return jule::Any(_47217_v);
	}
	jule::Ref<_2053ddd54_Fn> _47717_f = (*this)._field_lookup.get()._method_find_fn(_46426_ident,_46438_cpp_linked);
	if (jule::real(_47717_f)) {
		return jule::Any(_47717_f);
	}
	jule::Ref<_2053cdc01_Struct> _48217_s = (*this)._field_lookup.get()._method_find_struct(_46426_ident,_46438_cpp_linked);
	if (jule::real(_48217_s)) {
		return jule::Any(_48217_s);
	}
	jule::Ref<_1da411226_TypeAlias> _48717_ta = (*this)._field_lookup.get()._method_find_type_alias(_46426_ident,_46438_cpp_linked);
	if (jule::real(_48717_ta)) {
		return jule::Any(_48717_ta);
	}
	return (*this)._method_find_builtins(_46426_ident);
}



inline void _1da2d3bdc_Eval::_method_push_reference(jule::Ref<_206a20e79_ReferenceStack> _49537_references) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_ScopeChecker>>())) { goto _case_end_4396469072; }
		_case_begin_4396469072:;
		{
			jule::Ref<_206b0557a_ScopeChecker> _49821_sc = (*this)._field_lookup.operator jule::Ref<_206b0557a_ScopeChecker>()->_method_get_root();
			if ((!(_49537_references->_method_exist_1(_49821_sc->_field_owner)))) {
				_49537_references->_method_push(jule::Any(_49821_sc->_field_owner));
			}
		}
		goto _match_end_4396454416;
		_case_end_4396469072:;
		_case_begin_4396455040:;
		{
			if (jule::real((*this)._field_owner) && (!(_49537_references->_method_exist_0((*this)._field_owner)))) {
				_49537_references->_method_push(jule::Any((*this)._field_owner));
			}
		}
		goto _match_end_4396454416;
		_case_end_4396455040:;
		_match_end_4396454416:;
	}
}



inline void _1da2d3bdc_Eval::_method_push_reference_to_fn(jule::Ref<_2053ddd54_FnIns> _51043_f) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_ScopeChecker>>())) { goto _case_end_4396472656; }
		_case_begin_4396472656:;
		{
			jule::Ref<_206b0557a_ScopeChecker> _51321_sc = (*this)._field_lookup.operator jule::Ref<_206b0557a_ScopeChecker>()->_method_get_root();
			if (_51321_sc->_field_owner->_field_decl->_method_is_init() && (!(_51321_sc->_field_owner->_field_references->_method_exist_1(_51043_f)))) {
				_51321_sc->_field_owner->_field_refers->_method_push(jule::Any(_51043_f));
			}
		}
		goto _match_end_4396477792;
		_case_end_4396472656:;
		_match_end_4396477792:;
	}
	(*this)._method_push_reference(_51043_f->_field_references);
}



inline void _1da2d3bdc_Eval::_method_push_reference_to_var(jule::Ref<_1d9e22661_Var> _52144_v) {
	if ((!(jule::real(_52144_v->_field_references)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_ScopeChecker>>())) { goto _case_end_4396492160; }
		_case_begin_4396492160:;
		{
			jule::Ref<_206b0557a_ScopeChecker> _52821_sc = (*this)._field_lookup.operator jule::Ref<_206b0557a_ScopeChecker>()->_method_get_root();
			if (_52821_sc->_field_owner->_field_decl->_method_is_init() && (!(_52821_sc->_field_owner->_field_references->_method_exist_0(_52144_v)))) {
				_52821_sc->_field_owner->_field_refers->_method_push(jule::Any(_52144_v));
			}
		}
		goto _match_end_4396491728;
		_case_end_4396492160:;
		_match_end_4396491728:;
	}
	(*this)._method_push_reference(_52144_v->_field_references);
}



inline void _1da2d3bdc_Eval::_method_push_reference_to_struct(jule::Ref<_2053cdc01_StructIns> _53747_s) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_ScopeChecker>>())) { goto _case_end_4396504064; }
		_case_begin_4396504064:;
		{
			jule::Ref<_206b0557a_ScopeChecker> _54021_sc = (*this)._field_lookup.operator jule::Ref<_206b0557a_ScopeChecker>()->_method_get_root();
			if (_54021_sc->_field_owner->_field_decl->_method_is_init() && (!(_54021_sc->_field_owner->_field_references->_method_exist_2(_53747_s)))) {
				_54021_sc->_field_owner->_field_refers->_method_push(jule::Any(_53747_s));
			}
		}
		goto _match_end_4396503408;
		_case_end_4396504064:;
		_match_end_4396503408:;
	}
	(*this)._method_push_reference(_53747_s->_field_references);
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method___eval_enum(jule::Ref<_206b06c0d_Enum> _54830_enm) {
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_54830_enm)),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),true,jule::new_ref<_1a89ca987_Const>()));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_enum(jule::Ref<_206b06c0d_Enum> _56032_enm,_20542560a_Token _56044_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_56032_enm->_field_public,_56032_enm->_field_token)))) {
		(*this)._method_push_err(_56044_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_56032_enm->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	return (*this)._method___eval_enum(_56032_enm);
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method___eval_struct(jule::Ref<_2053cdc01_StructIns> _57032_s) {
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_57032_s)),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_57032_s),true,jule::new_ref<_1a89ca987_Const>()));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_struct(jule::Ref<_2053cdc01_StructIns> _58334_s,_20542560a_Token _58349_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_58334_s->_field_decl->_field_public,_58334_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_58349_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_58334_s->_field_decl->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	return (*this)._method___eval_struct(_58334_s);
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_fn_ins(jule::Ref<_2053ddd54_FnIns> _59330_f) {
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_59330_f)),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_59330_f),false,jule::new_ref<_1a89ca987_Const>()));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_fn(jule::Ref<_2053ddd54_Fn> _60630_f,_20542560a_Token _60638_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_60630_f->_field_public,_60630_f->_field_token)))) {
		(*this)._method_push_err(_60638_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_60630_f->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Ref<_2053ddd54_FnIns> _61317_ins = _60630_f->_method_instance();
	(*this)._method_push_reference_to_fn(_61317_ins);
	return (*this)._method_eval_fn_ins(_61317_ins);
}



inline void _1da2d3bdc_Eval::_method_push_illegal_cycle_error(jule::Ref<_1d9e22661_Var> _61843_v1,jule::Ref<_1d9e22661_Var> _61853_v2,jule::Str& _61868_message) {
	
	jule::Str _62113_refers_to = _20377124e_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_61843_v1->_field_ident),jule::Any(_61853_v2->_field_ident)}));
	_61868_message=((_206a20e79_str_repeat(jule::Str(" ", 1),4LL) + _62113_refers_to) + jule::Str("\n", 1)) + _61868_message;
}



inline jule::Bool _1da2d3bdc_Eval::_method_check_cross_cycle(jule::Ref<_1d9e22661_Var> _62536_v,jule::Str& _62550_message) {
	{
		auto _range_expr = _62536_v->_field_depends;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d9e22661_Var> _1da2d3bdc_d = *_range_begin;
			_iter_begin_4396571440:;
			{
				if ((_1da2d3bdc_d).alloc == ((*this)._field_owner).alloc) {
					(*this)._method_push_illegal_cycle_error(_62536_v,_1da2d3bdc_d,_62550_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_1da2d3bdc_d,_62550_message)))) {
					(*this)._method_push_illegal_cycle_error(_62536_v,_1da2d3bdc_d,_62550_message);
					return false;
				}
			}
			_iter_next_4396571440:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2d3bdc_d = *_range_begin; goto _iter_begin_4396571440; }
			_iter_end_4396571440:;
		}
	}
	return true;
}



inline jule::Bool _1da2d3bdc_Eval::_method_check_illegal_cycles(jule::Ref<_1d9e22661_Var> _64443_v,_20542560a_Token _64452_decl_token) {
	jule::Bool _64473_ok = jule::Bool();
	if ((!(jule::real((*this)._field_owner)))) {
		_64473_ok = true;
		return _64473_ok;
	}
	if (((*this)._field_owner).alloc == (_64443_v).alloc) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_64473_ok = false;
		return _64473_ok;
	}
	jule::Str _65617_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_64443_v,_65617_message)))) {
		jule::Str _65921_err_msg = _65617_message;
		_65617_message=jule::Str("", 0);
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_64443_v,_65617_message);
		_65921_err_msg=_65921_err_msg + _65617_message;
		(*this)._method_push_err(_64452_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_65921_err_msg)}));
		_64473_ok = false;
		return _64473_ok;
	}
	(*this)._field_owner->_field_depends=jule::append((*this)._field_owner->_field_depends,jule::Slice<jule::Ref<_1d9e22661_Var>>({_64443_v}));
	_64473_ok = true;
	return _64473_ok;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_var(jule::Ref<_1d9e22661_Var> _67131_v,_20542560a_Token _67140_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_67131_v->_field_public,_67131_v->_field_token)))) {
		(*this)._method_push_err(_67140_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_67131_v->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	_67131_v->_field_used=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1d9dc7517_Sema>>())) { goto _case_end_4396602672; }
		_case_begin_4396602672:;
		{
			jule::Bool _68317_ok = (*this)._method_check_illegal_cycles(_67131_v,_67140_error_token);
			if ((!(_68317_ok))) {
				return jule::new_ref<_1da2d3bdc_Data>();
			}
		}
		goto _match_end_4396599760;
		_case_end_4396602672:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_ScopeChecker>>())) { goto _case_end_4396602784; }
		_case_begin_4396602784:;
		{
			if ((!(_67131_v->_field_reference)) || (*this)._method_is_unsafe()) {
				goto _match_end_4396599760;
			}
			jule::Ref<_206b0557a_ScopeChecker> _69321_s = (*this)._field_lookup.operator jule::Ref<_206b0557a_ScopeChecker>();
			_iter_begin_4396605888:;
			if (!((!(jule::real(_69321_s->_field_owner))) && jule::real(_69321_s->_field_parent))) { goto _iter_end_4396605888; }
			{
				_69321_s=_69321_s->_field_parent;
			}
			_iter_next_4396605888:;
			goto _iter_begin_4396605888;
			_iter_end_4396605888:;
			if ((jule::real(_69321_s->_field_owner) && _69321_s->_field_owner->_field_anon) && ((_67131_v->_field_scope).alloc != (_69321_s->_field_owner->_field_scope).alloc)) {
				(*this)._method_push_err(_67140_error_token,jule::Str("anonymous functions cannot access to reference \"@\" definition of parent scope", 77),jule::Slice<jule::Any>({jule::Any(_67131_v->_field_ident)}));
			}
		}
		goto _match_end_4396599760;
		_case_end_4396602784:;
		_match_end_4396599760:;
	}
	(*this)._method_push_reference_to_var(_67131_v);
	if ((!(_67131_v->_field_cpp_linked)) && ((!(jule::real(_67131_v->_field_value))) || (!(jule::real(_67131_v->_field_value->_field_data))))) {
		if (_67131_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_67131_v,(*this)._field_s);
			if ((!(jule::real(_67131_v->_field_value->_field_data)))) {
				return jule::new_ref<_1da2d3bdc_Data>();
			}
		}
	}
	if ((!(jule::real(_67131_v->_field_kind))) || (!(jule::real(_67131_v->_field_kind->_field_kind)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Ref<_1da2d3bdc_Data> _71917_d = jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(_67131_v->_field_kind->_field_kind->_method_clone(),jule::Ref<_1da411226_TypeKind>(),_67131_v->_field_mutable,_67131_v->_field_reference,(!(_67131_v->_field_constant)),jule::Bool(),jule::Bool(),jule::Any(_67131_v),false,jule::Ref<_1a89ca987_Const>()));
	if (((!(_67131_v->_field_cpp_linked)) && _67131_v->_method_is_initialized()) && jule::real(_67131_v->_field_value->_field_data)) {
		_71917_d->_field_is_rune=_67131_v->_field_value->_field_data->_field_is_rune;
	}
	if (_67131_v->_field_constant && jule::real(_67131_v->_field_value->_field_data->_field_constant)) {
		_71917_d->_field_constant=jule::new_ref<_1a89ca987_Const>(_67131_v->_field_value->_field_data->_field_constant.get());
		_71917_d->_field_model=jule::Any(_71917_d->_field_constant);
	}
	if (jule::real(_71917_d->_field_kind->_method_fnc())) {
		jule::Ref<_2053ddd54_FnIns> _73821_f = _71917_d->_field_kind->_method_fnc();
		if (jule::real(_73821_f->_field_decl)) {
			_73821_f->_field_decl->_field_ident=_67131_v->_field_ident;
		}
	}
	return _71917_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_type_alias(jule::Ref<_1da411226_TypeAlias> _74938_ta,_20542560a_Token _74954_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_74938_ta->_field_public,_74938_ta->_field_token)))) {
		(*this)._method_push_err(_74954_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_74938_ta->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	_74938_ta->_field_used=true;
	jule::Trait<_1da411226_Kind> _75817_kind = _74938_ta->_field_kind->_field_kind->_field_kind;
	{
		auto _match_expr{ _75817_kind };
		if (!(_match_expr.type_is<jule::Ref<_2053cdc01_StructIns>>())) { goto _case_end_4396647760; }
		_case_begin_4396647760:;
		{
			return (*this)._method___eval_struct(_75817_kind.operator jule::Ref<_2053cdc01_StructIns>());
		}
		goto _match_end_4396647024;
		_case_end_4396647760:;
		if (!(_match_expr.type_is<jule::Ref<_206b06c0d_Enum>>())) { goto _case_end_4396647872; }
		_case_begin_4396647872:;
		{
			return (*this)._method___eval_enum(_75817_kind.operator jule::Ref<_206b06c0d_Enum>());
		}
		goto _match_end_4396647024;
		_case_end_4396647872:;
		_case_begin_4396647408:;
		{
			jule::Ref<_1da2d3bdc_Data> _76721_d = jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(_74938_ta->_field_kind->_field_kind->_method_clone(),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ref<_1a89ca987_Const>()));
			if (_74938_ta->_field_cpp_linked) {
				_76721_d->_field_kind->_field_cpp_ident=_74938_ta->_field_ident;
			}
			_76721_d->_field_model=jule::Any(_76721_d->_field_kind);
			return _76721_d;
		}
		goto _match_end_4396647024;
		_case_end_4396647408:;
		_match_end_4396647024:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_def(jule::Any _78231_def,_20542560a_Token _78241_ident) {
	{
		auto _match_expr{ _78231_def };
		if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4396664304; }
		_case_begin_4396664304:;
		{
			return (*this)._method_eval_var(_78231_def.operator jule::Ref<_1d9e22661_Var>(),_78241_ident);
		}
		goto _match_end_4396659872;
		_case_end_4396664304:;
		if (!(_match_expr.type_is<jule::Ref<_206b06c0d_Enum>>())) { goto _case_end_4396663520; }
		_case_begin_4396663520:;
		{
			return (*this)._method_eval_enum(_78231_def.operator jule::Ref<_206b06c0d_Enum>(),_78241_ident);
		}
		goto _match_end_4396659872;
		_case_end_4396663520:;
		if (!(_match_expr.type_is<jule::Ref<_2053cdc01_Struct>>())) { goto _case_end_4396663968; }
		_case_begin_4396663968:;
		{
			return (*this)._method_eval_struct(_78231_def.operator jule::Ref<_2053cdc01_Struct>()->_method_instance(),_78241_ident);
		}
		goto _match_end_4396659872;
		_case_end_4396663968:;
		if (!(_match_expr.type_is<jule::Ref<_2053ddd54_Fn>>())) { goto _case_end_4396664080; }
		_case_begin_4396664080:;
		{
			return (*this)._method_eval_fn(_78231_def.operator jule::Ref<_2053ddd54_Fn>(),_78241_ident);
		}
		goto _match_end_4396659872;
		_case_end_4396664080:;
		if (!(_match_expr.type_is<jule::Ref<_2053ddd54_FnIns>>())) { goto _case_end_4396663120; }
		_case_begin_4396663120:;
		{
			return (*this)._method_eval_fn_ins(_78231_def.operator jule::Ref<_2053ddd54_FnIns>());
		}
		goto _match_end_4396659872;
		_case_end_4396663120:;
		if (!(_match_expr.type_is<jule::Ref<_1da411226_TypeAlias>>())) { goto _case_end_4396663232; }
		_case_begin_4396663232:;
		{
			return (*this)._method_eval_type_alias(_78231_def.operator jule::Ref<_1da411226_TypeAlias>(),_78241_ident);
		}
		goto _match_end_4396659872;
		_case_end_4396663232:;
		_case_begin_4396660272:;
		{
			(*this)._method_push_err(_78241_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_78241_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4396659872;
		_case_end_4396660272:;
		_match_end_4396659872:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_ident(jule::Ref<_2053703bd_IdentExpr> _80829_ident) {
	jule::Any _80917_def = (*this)._method_get_def(_80829_ident->_field_ident,_80829_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_80917_def,_80829_ident->_field_token);
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_unary_minus(jule::Ref<_1da2d3bdc_Data> _81335_d) {
	jule::Ref<_1da411226_Prim> _81413_t = _81335_d->_field_kind->_method_prim();
	if ((!(jule::real(_81413_t))) || (!(_1a8a8de8a_is_num(_81413_t->_method_to_str())))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_81335_d->_method_is_const()) {
		{
			if (!((_81335_d->_field_constant->_method_is_f64()))) { goto _case_end_4396704048; }
			_case_begin_4396704048:;
			{
				_81335_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_81335_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4396703792;
			_case_end_4396704048:;
			if (!((_81335_d->_field_constant->_method_is_i64()))) { goto _case_end_4396704176; }
			_case_begin_4396704176:;
			{
				_81335_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_81335_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4396703792;
			_case_end_4396704176:;
			if (!((_81335_d->_field_constant->_method_is_u64()))) { goto _case_end_4396704304; }
			_case_begin_4396704304:;
			{
				_81335_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_81335_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4396703792;
			_case_end_4396704304:;
			_match_end_4396703792:;
		}
		_1da2d3bdc_normalize_type(_81335_d);
	}
	_81335_d->_field_lvalue=false;
	_81335_d->_field_model=jule::Any(jule::new_struct<_206e63542_UnaryExprModel>(new( std::nothrow ) _206e63542_UnaryExprModel(_81335_d->_field_model,jule::Str("-", 1))));
	return _81335_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_unary_plus(jule::Ref<_1da2d3bdc_Data> _83634_d) {
	jule::Ref<_1da411226_Prim> _83713_t = _83634_d->_field_kind->_method_prim();
	if ((!(jule::real(_83713_t))) || (!(_1a8a8de8a_is_num(_83713_t->_method_to_str())))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_83634_d->_method_is_const()) {
		{
			if (!((_83634_d->_field_constant->_method_is_f64()))) { goto _case_end_4396722128; }
			_case_begin_4396722128:;
			{
				_83634_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83634_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4396721872;
			_case_end_4396722128:;
			if (!((_83634_d->_field_constant->_method_is_i64()))) { goto _case_end_4396722256; }
			_case_begin_4396722256:;
			{
				_83634_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83634_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4396721872;
			_case_end_4396722256:;
			if (!((_83634_d->_field_constant->_method_is_u64()))) { goto _case_end_4396722384; }
			_case_begin_4396722384:;
			{
				_83634_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83634_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4396721872;
			_case_end_4396722384:;
			_match_end_4396721872:;
		}
		_1da2d3bdc_normalize_type(_83634_d);
	}
	_83634_d->_field_lvalue=false;
	_83634_d->_field_model=jule::Any(jule::new_struct<_206e63542_UnaryExprModel>(new( std::nothrow ) _206e63542_UnaryExprModel(_83634_d->_field_model,jule::Str("+", 1))));
	return _83634_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_unary_caret(jule::Ref<_1da2d3bdc_Data> _85935_d) {
	jule::Ref<_1da411226_Prim> _86013_t = _85935_d->_field_kind->_method_prim();
	if ((!(jule::real(_86013_t))) || (!(_1a8a8de8a_is_int(_86013_t->_method_to_str())))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_85935_d->_method_is_const()) {
		{
			if (!((_85935_d->_field_constant->_method_is_i64()))) { goto _case_end_4396739472; }
			_case_begin_4396739472:;
			{
				_85935_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_85935_d->_field_constant->_method_read_i64()))));
			}
			goto _match_end_4396739232;
			_case_end_4396739472:;
			if (!((_85935_d->_field_constant->_method_is_u64()))) { goto _case_end_4396739600; }
			_case_begin_4396739600:;
			{
				_85935_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_85935_d->_field_constant->_method_read_u64()))));
			}
			goto _match_end_4396739232;
			_case_end_4396739600:;
			_match_end_4396739232:;
		}
	}
	_85935_d->_field_lvalue=false;
	_85935_d->_field_model=jule::Any(jule::new_struct<_206e63542_UnaryExprModel>(new( std::nothrow ) _206e63542_UnaryExprModel(_85935_d->_field_model,jule::Str("^", 1))));
	return _85935_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_unary_excl(jule::Ref<_1da2d3bdc_Data> _88334_d) {
	jule::Ref<_1da411226_Prim> _88413_t = _88334_d->_field_kind->_method_prim();
	if ((!(jule::real(_88413_t))) || (!(_88413_t->_method_is_bool()))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_88334_d->_method_is_const()) {
		{
			if (!((_88334_d->_field_constant->_method_is_bool()))) { goto _case_end_4387750752; }
			_case_begin_4387750752:;
			{
				_88334_d->_field_constant->_method_set_bool((!(_88334_d->_field_constant->_method_read_bool())));
			}
			goto _match_end_4387749856;
			_case_end_4387750752:;
			_match_end_4387749856:;
		}
	}
	_88334_d->_field_lvalue=false;
	_88334_d->_field_model=jule::Any(jule::new_struct<_206e63542_UnaryExprModel>(new( std::nothrow ) _206e63542_UnaryExprModel(_88334_d->_field_model,jule::Str("!", 1))));
	return _88334_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_unary_star(jule::Ref<_1da2d3bdc_Data> _90438_d,_20542560a_Token _90448_op) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_90448_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da411226_Ptr> _90917_t = _90438_d->_field_kind->_method_ptr();
	if ((!(jule::real(_90917_t))) || _90917_t->_method_is_unsafe()) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::drop(_90438_d->_field_constant);
	_90438_d->_field_lvalue=true;
	_90438_d->_field_kind=_90917_t->_field_elem;
	_90438_d->_field_model=jule::Any(jule::new_struct<_206e63542_UnaryExprModel>(new( std::nothrow ) _206e63542_UnaryExprModel(_90438_d->_field_model,jule::Str("*", 1))));
	return _90438_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_unary_amper(jule::Ref<_1da2d3bdc_Data> _92335_d) {
	{
		auto _match_expr{ _92335_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_206e63542_StructLitExprModel>>())) { goto _case_end_4396770192; }
		_case_begin_4396770192:;
		{
			jule::Ref<_206e63542_StructLitExprModel> _92621_lit = _92335_d->_field_model.operator jule::Ref<_206e63542_StructLitExprModel>();
			_92335_d->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1da411226_Ref>(new( std::nothrow ) _1da411226_Ref(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_92621_lit->_field_strct))))));
			_92335_d->_field_model=jule::Any(jule::new_struct<_206e63542_AllocStructLitExprModel>(new( std::nothrow ) _206e63542_AllocStructLitExprModel(_92621_lit)));
		}
		goto _match_end_4396760144;
		_case_end_4396770192:;
		_case_begin_4396760816:;
		{
			{
				if (!((jule::real(_92335_d->_field_kind->_method_ref())))) { goto _case_end_4396763680; }
				_case_begin_4396763680:;
				{
					_92335_d->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1da411226_Ptr>(new( std::nothrow ) _1da411226_Ptr(_92335_d->_field_kind->_method_ref()->_field_elem->_method_clone()))));
					_92335_d->_field_model=jule::Any(jule::new_struct<_206e63542_GetRefPtrExprModel>(new( std::nothrow ) _206e63542_GetRefPtrExprModel(_92335_d->_field_model)));
				}
				goto _match_end_4396762016;
				_case_end_4396763680:;
				if (!((_1da411226_can_get_ptr(_92335_d)))) { goto _case_end_4396763216; }
				_case_begin_4396763216:;
				{
					_92335_d->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1da411226_Ptr>(new( std::nothrow ) _1da411226_Ptr(_92335_d->_field_kind->_method_clone()))));
					_92335_d->_field_model=jule::Any(jule::new_struct<_206e63542_UnaryExprModel>(new( std::nothrow ) _206e63542_UnaryExprModel(_92335_d->_field_model,jule::Str("&", 1))));
				}
				goto _match_end_4396762016;
				_case_end_4396763216:;
				_case_begin_4396762208:;
				{
					jule::drop(_92335_d);
				}
				goto _match_end_4396762016;
				_case_end_4396762208:;
				_match_end_4396762016:;
			}
		}
		goto _match_end_4396760144;
		_case_end_4396760816:;
		_match_end_4396760144:;
	}
	if (jule::real(_92335_d)) {
		jule::drop(_92335_d->_field_constant);
		_92335_d->_field_lvalue=true;
		_92335_d->_field_mutable=true;
	}
	return _92335_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_unary_type_decl(jule::Ref<_1da2d3bdc_Data> _97043_d,jule::Ref<_2053703bd_UnaryExpr> _97057_u) {
	_1da411226_TypeChecker _97117_tc = _1da411226_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1da411226_Referencer>(),_97057_u->_field_op,jule::Slice<jule::Ref<_2053703bd_GenericDecl>>(),jule::Slice<jule::Ref<_1da411226_TypeAlias>>(),jule::Bool());
	{
		auto _match_expr{ _97057_u->_field_op._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4396789280; }
		_case_begin_4396789280:;
		{
			_97043_d->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_97117_tc._method_build_ptr_from_type(_97043_d->_field_kind)));
		}
		goto _match_end_4396783184;
		_case_end_4396789280:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4396789856; }
		_case_begin_4396789856:;
		{
			_97043_d->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_97117_tc._method_build_ref_from_type(_97043_d->_field_kind)));
		}
		goto _match_end_4396783184;
		_case_end_4396789856:;
		_case_begin_4396785440:;
		{
			(*this)._method_push_err(_97057_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_97057_u->_field_op._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4396783184;
		_case_end_4396785440:;
		_match_end_4396783184:;
	}
	_97043_d->_field_decl=true;
	return _97043_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_unary(jule::Ref<_2053703bd_UnaryExpr> _99334_u) {
	jule::Ref<_1da411226_TypeKind> _99417_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_99417_prefix;
	});
	jule::Ref<_1da2d3bdc_Data> _99817_d = this->self->_method_eval_expr_kind(_99334_u->_field_expr);
	if ((!(jule::real(_99817_d)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_99817_d->_field_decl) {
		return this->self->_method_eval_unary_type_decl(_99817_d,_99334_u);
	}
	jule::Ref<_1da411226_TypeKind> _100717_cast_kind = _99817_d->_field_cast_kind;
	{
		auto _match_expr{ _99334_u->_field_op._field_kind };
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4382833088; }
		_case_begin_4382833088:;
		{
			_99817_d=this->self->_method_eval_unary_minus(_99817_d);
		}
		goto _match_end_4381986368;
		_case_end_4382833088:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4382839120; }
		_case_begin_4382839120:;
		{
			_99817_d=this->self->_method_eval_unary_plus(_99817_d);
		}
		goto _match_end_4381986368;
		_case_end_4382839120:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4382021200; }
		_case_begin_4382021200:;
		{
			_99817_d=this->self->_method_eval_unary_caret(_99817_d);
		}
		goto _match_end_4381986368;
		_case_end_4382021200:;
		if (!((jule::Str("!", 1)) == _match_expr)) { goto _case_end_4382022000; }
		_case_begin_4382022000:;
		{
			_99817_d=this->self->_method_eval_unary_excl(_99817_d);
		}
		goto _match_end_4381986368;
		_case_end_4382022000:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4382023280; }
		_case_begin_4382023280:;
		{
			_99817_d=this->self->_method_eval_unary_star(_99817_d,_99334_u->_field_op);
		}
		goto _match_end_4381986368;
		_case_end_4382023280:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4382024992; }
		_case_begin_4382024992:;
		{
			_99817_d=this->self->_method_eval_unary_amper(_99817_d);
		}
		goto _match_end_4381986368;
		_case_end_4382024992:;
		_case_begin_4381994480:;
		{
			jule::drop(_99817_d);
		}
		goto _match_end_4381986368;
		_case_end_4381994480:;
		_match_end_4381986368:;
	}
	if ((!(jule::real(_99817_d)))) {
		this->self->_method_push_err(_99334_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_99334_u->_field_op._field_kind)}));
	} else if (_99817_d->_method_is_const()) {
		_99817_d->_field_model=jule::Any(_99817_d->_field_constant);
	} else if (jule::real(_100717_cast_kind)) {
		_99817_d->_field_cast_kind=_100717_cast_kind;
		_1da2d3bdc_apply_cast_kind(_99817_d);
	}
	return _99817_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_variadic(jule::Ref<_2053703bd_VariadicExpr> _103037_v) {
	jule::Ref<_1da411226_TypeKind> _103117_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_103117_prefix;
	});
	jule::Ref<_1da2d3bdc_Data> _103517_d = this->self->_method_eval_expr_kind(_103037_v->_field_expr);
	if ((!(jule::real(_103517_d)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (jule::real(_103517_d->_field_kind->_method_ref())) {
		_103517_d->_field_kind=_103517_d->_field_kind->_method_ref()->_field_elem;
		_103517_d->_field_model=jule::Any(jule::new_struct<_206e63542_ExplicitDerefExprModel>(new( std::nothrow ) _206e63542_ExplicitDerefExprModel(_103517_d->_field_model)));
	}
	if ((!(_103517_d->_field_kind->_method_variadicable()))) {
		this->self->_method_push_err(_103037_v->_field_token,jule::Str("@ data-type is not variadicable", 31),jule::Slice<jule::Any>({jule::Any(_103517_d->_field_kind->_method_to_str())}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	_103517_d->_field_variadiced=true;
	_103517_d->_field_kind=_103517_d->_field_kind->_method_slc()->_field_elem;
	_103517_d->_field_kind->_field_variadic=true;
	return _103517_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_unsafe(jule::Ref<_2053703bd_UnsafeExpr> _105835_u) {
	jule::Bool _105913_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ref<_1da2d3bdc_Data> _106217_d = this->self->_method_eval_expr_kind(_105835_u->_field_expr);
	this->self->_field_unsafety=_105913_unsafety;
	return _106217_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_arr(jule::Ref<_2053703bd_SliceExpr> _106932_s) {
	jule::Ref<_1da411226_Arr> _107117_pt = this->self->_field_prefix->_method_arr();
	jule::Ref<_1da411226_Arr> _107317_arr = jule::new_struct<_1da411226_Arr>(new( std::nothrow ) _1da411226_Arr(false,0LL,_107117_pt->_field_elem));
	if (_107117_pt->_field_auto) {
		_107317_arr->_field_n=static_cast<jule::I64>(_106932_s->_field_elems.len());
	} else {
		_107317_arr->_field_n=static_cast<jule::I64>(_106932_s->_field_elems.len());
		if (_107317_arr->_field_n > _107117_pt->_field_n) {
			this->self->_method_push_err(_106932_s->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else if (_107317_arr->_field_n < _107117_pt->_field_n) {
			_107317_arr->_field_n=_107117_pt->_field_n;
		}
	}
	jule::Ref<_206e63542_ArrayExprModel> _109017_model = jule::new_struct<_206e63542_ArrayExprModel>(new( std::nothrow ) _206e63542_ArrayExprModel(_107317_arr,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_106932_s->_field_elems.len())))));
	jule::Ref<_1da411226_TypeKind> _109517_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_107317_arr->_field_elem;
	{
		auto _range_expr = _106932_s->_field_elems;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da2d3bdc_i = 0;
			jule::Any _1da2d3bdc_elem = *_range_begin;
			_iter_begin_4382813344:;
			{
				jule::Ref<_1da2d3bdc_Data> _109821_d = this->self->_method_eval_expr_kind(_1da2d3bdc_elem);
				if ((!(jule::real(_109821_d)))) {
					goto _iter_next_4382813344;
				}
				this->self->_field_s->_method_check_assign_type(_107317_arr->_field_elem,_109821_d,_106932_s->_field_token,true);
				_109017_model->_field_elems[static_cast<jule::Int>(_1da2d3bdc_i)]=_109821_d->_field_model;
			}
			_iter_next_4382813344:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da2d3bdc_i; _1da2d3bdc_elem = *_range_begin; goto _iter_begin_4382813344; }
			_iter_end_4382813344:;
		}
	}
	this->self->_field_prefix=_109517_prefix;
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_107317_arr)),jule::Ref<_1da411226_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_109017_model),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_exp_slc(jule::Ref<_2053703bd_SliceExpr> _111536_s,jule::Ref<_1da411226_TypeKind> _111555_elem_type) {
	jule::Ref<_1da411226_Slc> _111617_slc = jule::new_struct<_1da411226_Slc>(new( std::nothrow ) _1da411226_Slc(_111555_elem_type));
	jule::Ref<_206e63542_SliceExprModel> _112017_model = jule::new_struct<_206e63542_SliceExprModel>(new( std::nothrow ) _206e63542_SliceExprModel(_111555_elem_type,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_111536_s->_field_elems.len())))));
	jule::Ref<_1da411226_TypeKind> _112517_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_111617_slc->_field_elem;
	{
		auto _range_expr = _111536_s->_field_elems;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da2d3bdc_i = 0;
			jule::Any _1da2d3bdc_elem = *_range_begin;
			_iter_begin_4382782224:;
			{
				jule::Ref<_1da2d3bdc_Data> _112821_d = this->self->_method_eval_expr_kind(_1da2d3bdc_elem);
				if ((!(jule::real(_112821_d)))) {
					goto _iter_next_4382782224;
				}
				this->self->_field_s->_method_check_assign_type(_111617_slc->_field_elem,_112821_d,_111536_s->_field_token,true);
				_112017_model->_field_elems[static_cast<jule::Int>(_1da2d3bdc_i)]=_112821_d->_field_model;
			}
			_iter_next_4382782224:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da2d3bdc_i; _1da2d3bdc_elem = *_range_begin; goto _iter_begin_4382782224; }
			_iter_end_4382782224:;
		}
	}
	this->self->_field_prefix=_112517_prefix;
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_111617_slc)),jule::Ref<_1da411226_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_112017_model),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_slice_expr(jule::Ref<_2053703bd_SliceExpr> _114539_s) {
	if (jule::real(this->self->_field_prefix)) {
		{
			if (!((jule::real(this->self->_field_prefix->_method_arr())))) { goto _case_end_4382954880; }
			_case_begin_4382954880:;
			{
				return this->self->_method_eval_arr(_114539_s);
			}
			goto _match_end_4382954640;
			_case_end_4382954880:;
			if (!((jule::real(this->self->_field_prefix->_method_slc())))) { goto _case_end_4382955008; }
			_case_begin_4382955008:;
			{
				jule::Ref<_1da411226_Slc> _115225_pt = this->self->_field_prefix->_method_slc();
				return this->self->_method_eval_exp_slc(_114539_s,_115225_pt->_field_elem);
			}
			goto _match_end_4382954640;
			_case_end_4382955008:;
			_match_end_4382954640:;
		}
	}
	jule::Ref<_1da411226_TypeKind> _115717_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	if (_114539_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_114539_s->_field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Ref<_1da2d3bdc_Data> _116517_first_elem = this->self->_method_eval_expr_kind(_114539_s->_field_elems[0LL]);
	if ((!(jule::real(_116517_first_elem)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Ref<_1da2d3bdc_Data> _117017_d = this->self->_method_eval_exp_slc(_114539_s,_116517_first_elem->_field_kind);
	this->self->_field_prefix=_115717_prefix;
	return _117017_d;
}



inline void _1da2d3bdc_Eval::_method_check_integer_indexing_by_data(jule::Ref<_1da2d3bdc_Data> _117653_d,_20542560a_Token _117663_token) {
	jule::Str _117713_err_key = _1da2d3bdc_check_data_for_integer_indexing(_117653_d);
	if (_117713_err_key != jule::Str("", 0)) {
		(*this)._method_push_err(_117663_token,_117713_err_key,jule::Slice<jule::Any>({}));
	}
}



inline void _1da2d3bdc_Eval::_method_indexing_ptr(jule::Ref<_1da2d3bdc_Data> _118335_d,jule::Ref<_1da2d3bdc_Data> _118349_index,jule::Ref<_2053703bd_IndexingExpr> _118363_i) {
	(*this)._method_check_integer_indexing_by_data(_118349_index,_118363_i->_field_token);
	jule::Ref<_1da411226_Ptr> _118617_ptr = _118335_d->_field_kind->_method_ptr();
	{
		if (!((_118617_ptr->_method_is_unsafe()))) { goto _case_end_4382983216; }
		_case_begin_4382983216:;
		{
			(*this)._method_push_err(_118363_i->_field_token,jule::Str("unsafe pointers not supports indexing", 37),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4382982960;
		_case_end_4382983216:;
		if (!(((!((*this)._method_is_unsafe()))))) { goto _case_end_4382983328; }
		_case_begin_4382983328:;
		{
			(*this)._method_push_err(_118363_i->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4382982960;
		_case_end_4382983328:;
		_match_end_4382982960:;
	}
	_118335_d->_field_kind=_118617_ptr->_field_elem->_method_clone();
}



inline void _1da2d3bdc_Eval::_method_indexing_arr(jule::Ref<_1da2d3bdc_Data> _119935_d,jule::Ref<_1da2d3bdc_Data> _119949_index,jule::Ref<_2053703bd_IndexingExpr> _119963_i) {
	jule::Ref<_1da411226_Arr> _120017_arr = _119935_d->_field_kind->_method_arr();
	_119935_d->_field_kind=_120017_arr->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_119949_index,_119963_i->_field_token);
	if (_119949_index->_method_is_const() && (_119949_index->_field_constant->_method_as_f64() >= static_cast<jule::F64>(_120017_arr->_field_n))) {
		(*this)._method_push_err(_119963_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
	}
}



inline void _1da2d3bdc_Eval::_method_indexing_slc(jule::Ref<_1da2d3bdc_Data> _120835_d,jule::Ref<_1da2d3bdc_Data> _120848_index,jule::Ref<_2053703bd_IndexingExpr> _120862_i) {
	jule::Ref<_1da411226_Slc> _120917_slc = _120835_d->_field_kind->_method_slc();
	_120835_d->_field_kind=_120917_slc->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_120848_index,_120862_i->_field_token);
}



inline void _1da2d3bdc_Eval::_method_indexing_map(jule::Ref<_1da2d3bdc_Data> _121435_d,jule::Ref<_1da2d3bdc_Data> _121449_index,jule::Ref<_2053703bd_IndexingExpr> _121467_i) {
	if ((!(jule::real(_121449_index)))) {
		return;
	}
	jule::Ref<_1da411226_Map> _121917_m = _121435_d->_field_kind->_method_map();
	_1da120d15_AssignTypeChecker _122017_atc = _1da120d15_AssignTypeChecker((*this)._field_s,_121917_m->_field_key,_121449_index,_121467_i->_field_token,true);
	_122017_atc._method_check();
	_121435_d->_field_kind=_121917_m->_field_val->_method_clone();
}



inline void _1da2d3bdc_Eval::_method_indexing_str(jule::Ref<_1da2d3bdc_Data> _123235_d,jule::Ref<_1da2d3bdc_Data> _123249_index,jule::Ref<_2053703bd_IndexingExpr> _123263_i) {
	
	_123235_d->_field_kind->_field_kind=_1da411226_build_prim_type(jule::Str("u8", 2));
	if ((!(jule::real(_123249_index)))) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_123249_index,_123263_i->_field_token);
	if ((!(_123249_index->_method_is_const()))) {
		jule::drop(_123235_d->_field_constant);
		return;
	}
	if (_123235_d->_method_is_const()) {
		_20542560a_Token _124817_error_token = _123263_i->_field_token;
		jule::I64 _124917_j = _123249_index->_field_constant->_method_as_i64();
		jule::Str _125017_s = _123235_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_124917_j) >= _125017_s.len()) {
			(*this)._method_push_err(_124817_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else {
			_123235_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_125017_s[static_cast<jule::Int>(_124917_j)]));
		}
	}
}



inline void _1da2d3bdc_Eval::_method_to_indexing(jule::Ref<_1da2d3bdc_Data> _125934_d,jule::Ref<_1da2d3bdc_Data> _125948_index,jule::Ref<_2053703bd_IndexingExpr> _125966_i) {
	{
		if (!((jule::real(_125934_d->_field_kind->_method_ptr())))) { goto _case_end_4397750896; }
		_case_begin_4397750896:;
		{
			(*this)._method_indexing_ptr(_125934_d,_125948_index,_125966_i);
			return;
		}
		goto _match_end_4397750656;
		_case_end_4397750896:;
		if (!((jule::real(_125934_d->_field_kind->_method_arr())))) { goto _case_end_4397751024; }
		_case_begin_4397751024:;
		{
			(*this)._method_indexing_arr(_125934_d,_125948_index,_125966_i);
			return;
		}
		goto _match_end_4397750656;
		_case_end_4397751024:;
		if (!((jule::real(_125934_d->_field_kind->_method_slc())))) { goto _case_end_4397751152; }
		_case_begin_4397751152:;
		{
			(*this)._method_indexing_slc(_125934_d,_125948_index,_125966_i);
			return;
		}
		goto _match_end_4397750656;
		_case_end_4397751152:;
		if (!((jule::real(_125934_d->_field_kind->_method_map())))) { goto _case_end_4397751280; }
		_case_begin_4397751280:;
		{
			(*this)._method_indexing_map(_125934_d,_125948_index,_125966_i);
			return;
		}
		goto _match_end_4397750656;
		_case_end_4397751280:;
		if (!((jule::real(_125934_d->_field_kind->_method_prim())))) { goto _case_end_4397751408; }
		_case_begin_4397751408:;
		{
			jule::Ref<_1da411226_Prim> _127817_prim = _125934_d->_field_kind->_method_prim();
			{
				if (!((_127817_prim->_method_is_str()))) { goto _case_end_4396810528; }
				_case_begin_4396810528:;
				{
					(*this)._method_indexing_str(_125934_d,_125948_index,_125966_i);
					return;
				}
				goto _match_end_4396810368;
				_case_end_4396810528:;
				_match_end_4396810368:;
			}
		}
		goto _match_end_4397750656;
		_case_end_4397751408:;
		_match_end_4397750656:;
	}
	(*this)._method_push_err(_125966_i->_field_token,jule::Str("@ data type is not support indexing", 35),jule::Slice<jule::Any>({jule::Any(_125934_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_ident_decl_from_indexing(jule::Ref<_2053703bd_IndexingExpr> _128953_i) {
	{
		auto _match_expr{ _128953_i->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_IdentExpr>>())) { goto _case_end_4396820992; }
		goto _match_end_4396817840;
		_case_end_4396820992:;
		_case_begin_4396818512:;
		{
			this->self->_method_push_err(_128953_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4396817840;
		_case_end_4396818512:;
		_match_end_4396817840:;
	}
	jule::Ref<_2053703bd_IdentTypeDecl> _129717_decl = jule::new_struct<_2053703bd_IdentTypeDecl>(new( std::nothrow ) _2053703bd_IdentTypeDecl(_20542560a_Token(),_128953_i->_field_expr.operator jule::Ref<_2053703bd_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_2053703bd_TypeDecl>>()));
	{
		auto _match_expr{ _128953_i->_field_index };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_UnaryExpr>>())) { goto _case_end_4396826272; }
		_case_begin_4396826272:;
		{
			jule::Ref<_1da2d3bdc_Data> _130521_d = this->self->_method_eval_unary(_128953_i->_field_index.operator jule::Ref<_2053703bd_UnaryExpr>());
			if ((!(_130521_d->_field_decl))) {
				this->self->_method_push_err(_128953_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1da2d3bdc_Data>();
			}
			_129717_decl->_field_generics=jule::append(_129717_decl->_field_generics,jule::Slice<jule::Ref<_2053703bd_TypeDecl>>({jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_20542560a_Token(),jule::Any(_130521_d->_field_kind)))}));
		}
		goto _match_end_4396818944;
		_case_end_4396826272:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_TypeDecl>>())) { goto _case_end_4396827120; }
		_case_begin_4396827120:;
		{
			_129717_decl->_field_generics=jule::append(_129717_decl->_field_generics,jule::Slice<jule::Ref<_2053703bd_TypeDecl>>({_128953_i->_field_index.operator jule::Ref<_2053703bd_TypeDecl>()}));
		}
		goto _match_end_4396818944;
		_case_end_4396827120:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_IdentExpr>>())) { goto _case_end_4396827232; }
		_case_begin_4396827232:;
		{
			_129717_decl->_field_generics=jule::append(_129717_decl->_field_generics,jule::Slice<jule::Ref<_2053703bd_TypeDecl>>({jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_20542560a_Token(),jule::Any(jule::new_struct<_2053703bd_IdentTypeDecl>(new( std::nothrow ) _2053703bd_IdentTypeDecl(_20542560a_Token(),_128953_i->_field_index.operator jule::Ref<_2053703bd_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_2053703bd_TypeDecl>>())))))}));
		}
		goto _match_end_4396818944;
		_case_end_4396827232:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_TupleExpr>>())) { goto _case_end_4396824192; }
		_case_begin_4396824192:;
		{
			{
				auto _range_expr = _128953_i->_field_index.operator jule::Ref<_2053703bd_TupleExpr>()->_field_expr;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_2053703bd_Expr> _1da2d3bdc_expr = *_range_begin;
					_iter_begin_4396826512:;
					{
						{
							auto _match_expr{ _1da2d3bdc_expr->_field_kind };
							if (!(_match_expr.type_is<jule::Ref<_2053703bd_TypeDecl>>())) { goto _case_end_4396842880; }
							_case_begin_4396842880:;
							{
								_129717_decl->_field_generics=jule::append(_129717_decl->_field_generics,jule::Slice<jule::Ref<_2053703bd_TypeDecl>>({_1da2d3bdc_expr->_field_kind.operator jule::Ref<_2053703bd_TypeDecl>()}));
							}
							goto _match_end_4396833552;
							_case_end_4396842880:;
							if (!(_match_expr.type_is<jule::Ref<_2053703bd_IdentExpr>>())) { goto _case_end_4396842992; }
							_case_begin_4396842992:;
							{
								_129717_decl->_field_generics=jule::append(_129717_decl->_field_generics,jule::Slice<jule::Ref<_2053703bd_TypeDecl>>({jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_20542560a_Token(),jule::Any(jule::new_struct<_2053703bd_IdentTypeDecl>(new( std::nothrow ) _2053703bd_IdentTypeDecl(_20542560a_Token(),_1da2d3bdc_expr->_field_kind.operator jule::Ref<_2053703bd_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_2053703bd_TypeDecl>>())))))}));
							}
							goto _match_end_4396833552;
							_case_end_4396842992:;
							_match_end_4396833552:;
						}
					}
					_iter_next_4396826512:;
					++_range_begin;
					if (_range_begin != _range_end) { _1da2d3bdc_expr = *_range_begin; goto _iter_begin_4396826512; }
					_iter_end_4396826512:;
				}
			}
		}
		goto _match_end_4396818944;
		_case_end_4396824192:;
		_case_begin_4396823888:;
		{
			this->self->_method_push_err(_128953_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4396818944;
		_case_end_4396823888:;
		_match_end_4396818944:;
	}
	return this->self->_method_eval_type(jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_20542560a_Token(),jule::Any(_129717_decl))));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_indexing(jule::Ref<_2053703bd_IndexingExpr> _134137_i) {
	jule::Ref<_1da411226_TypeKind> _134217_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_134217_prefix;
	});
	jule::Ref<_1da2d3bdc_Data> _134617_d = this->self->_method_eval_expr_kind(_134137_i->_field_expr);
	if ((!(jule::real(_134617_d)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_134617_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_134137_i);
	}
	_1da2d3bdc_Data _135617_old_d = _134617_d;
	jule::Ref<_1da2d3bdc_Data> _135817_index = this->self->_method_eval_expr_kind(_134137_i->_field_index);
	if ((!(jule::real(_135817_index)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	this->self->_method_to_indexing(_134617_d,_135817_index,_134137_i);
	if (_134617_d->_method_is_const()) {
		_134617_d->_field_model=jule::Any(_134617_d->_field_constant);
	} else {
		_134617_d->_field_model=jule::Any(jule::new_struct<_206e63542_IndexigExprModel>(new( std::nothrow ) _206e63542_IndexigExprModel(jule::new_ref<_1da2d3bdc_Data>(_135617_old_d),_135817_index)));
	}
	return _134617_d;
}



inline std::tuple<jule::Ref<_1da2d3bdc_Data>,jule::Ref<_1da2d3bdc_Data>> _1da2d3bdc_Eval::_method_eval_slicing_exprs(jule::Ref<_2053703bd_SlicingExpr> _138042_s) {
	jule::Ref<_1da411226_TypeKind> _138117_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_138117_prefix;
	});
	jule::Ref<_1da2d3bdc_Data> _138517_l = jule::new_ref<_1da2d3bdc_Data>();
	jule::Ref<_1da2d3bdc_Data> _138617_r = jule::new_ref<_1da2d3bdc_Data>();
	if (_138042_s->_field_start != nullptr) {
		_138517_l=this->self->_method_eval_expr_kind(_138042_s->_field_start);
		if (jule::real(_138517_l)) {
			this->self->_method_check_integer_indexing_by_data(_138517_l,_138042_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_1da2d3bdc_Data>(),jule::new_ref<_1da2d3bdc_Data>());
		}
	} else {
		_138517_l=jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a89ca987_Const::_static_method_new_i64(0LL)));
		_138517_l->_field_model=jule::Any(_138517_l->_field_constant);
	}
	if (_138042_s->_field_to != nullptr) {
		_138617_r=this->self->_method_eval_expr_kind(_138042_s->_field_to);
		if (jule::real(_138617_r)) {
			this->self->_method_check_integer_indexing_by_data(_138617_r,_138042_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_1da2d3bdc_Data>(),jule::new_ref<_1da2d3bdc_Data>());
		}
	}
	return std::make_tuple(_138517_l,_138617_r);
}



inline void _1da2d3bdc_Eval::_method_slicing_arr(jule::Ref<_1da2d3bdc_Data> _141530_d) {
	jule::Ref<_1da411226_TypeKind> _141617_elem_type = _141530_d->_field_kind->_method_arr()->_field_elem->_method_clone();
	_141530_d->_field_kind->_field_kind=jule::new_struct<_1da411226_Slc>(new( std::nothrow ) _1da411226_Slc(_141617_elem_type));
	_141530_d->_field_lvalue=false;
	_141530_d->_field_mutable=_141530_d->_field_mutable || (!(_141617_elem_type->_method_mutable()));
}



inline void _1da2d3bdc_Eval::_method_slicing_slc(jule::Ref<_1da2d3bdc_Data> _142630_d) {
	_142630_d->_field_lvalue=false;
}



inline void _1da2d3bdc_Eval::_method_slicing_str(jule::Ref<_1da2d3bdc_Data> _143030_d,jule::Ref<_1da2d3bdc_Data> _143040_l,jule::Ref<_1da2d3bdc_Data> _143050_r) {
	_143030_d->_field_lvalue=false;
	_143030_d->_field_mutable=true;
	if ((!(_143030_d->_method_is_const()))) {
		return;
	}
	if ((!(jule::real(_143040_l))) || (!(jule::real(_143050_r)))) {
		jule::drop(_143030_d->_field_constant);
		return;
	}
	if (_143040_l->_method_is_const() && _143050_r->_method_is_const()) {
		jule::I64 _144317_left = _143040_l->_field_constant->_method_as_i64();
		if (_144317_left < 0LL) {
			return;
		}
		jule::Str _144817_s = _143030_d->_field_constant->_method_read_str();
		jule::I64 _144921_right = 0LL;
		if ((!(jule::real(_143050_r)))) {
			_144921_right=static_cast<jule::I64>(_144817_s.len());
		} else {
			_144921_right=static_cast<jule::I64>(_143050_r->_field_constant->_method_as_i64());
		}
		if (_144317_left > _144921_right) {
			return;
		}
		_143030_d->_field_constant->_method_set_str(_144817_s.slice(static_cast<jule::Int>(_144317_left),static_cast<jule::Int>(_144921_right)));
	} else {
		jule::drop(_143030_d->_field_constant);
	}
}



inline void _1da2d3bdc_Eval::_method_check_slicing(jule::Ref<_1da2d3bdc_Data> _146536_d,jule::Ref<_1da2d3bdc_Data> _146546_l,jule::Ref<_1da2d3bdc_Data> _146556_r,jule::Ref<_2053703bd_SlicingExpr> _146566_s) {
	{
		if (!((jule::real(_146536_d->_field_kind->_method_arr())))) { goto _case_end_4396922304; }
		_case_begin_4396922304:;
		{
			(*this)._method_slicing_arr(_146536_d);
			return;
		}
		goto _match_end_4396922048;
		_case_end_4396922304:;
		if (!((jule::real(_146536_d->_field_kind->_method_slc())))) { goto _case_end_4396922432; }
		_case_begin_4396922432:;
		{
			(*this)._method_slicing_slc(_146536_d);
			return;
		}
		goto _match_end_4396922048;
		_case_end_4396922432:;
		if (!((jule::real(_146536_d->_field_kind->_method_prim())))) { goto _case_end_4396922560; }
		_case_begin_4396922560:;
		{
			jule::Ref<_1da411226_Prim> _147617_prim = _146536_d->_field_kind->_method_prim();
			{
				if (!((_147617_prim->_method_is_str()))) { goto _case_end_4396930528; }
				_case_begin_4396930528:;
				{
					(*this)._method_slicing_str(_146536_d,_146546_l,_146556_r);
					return;
				}
				goto _match_end_4396930368;
				_case_end_4396930528:;
				_match_end_4396930368:;
			}
		}
		goto _match_end_4396922048;
		_case_end_4396922560:;
		_match_end_4396922048:;
	}
	(*this)._method_push_err(_146566_s->_field_token,jule::Str("@ data type is not support slicing", 34),jule::Slice<jule::Any>({jule::Any(_146536_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_slicing(jule::Ref<_2053703bd_SlicingExpr> _148736_s) {
	jule::Ref<_1da2d3bdc_Data> _148817_d = this->self->_method_eval_expr_kind(_148736_s->_field_expr);
	if ((!(jule::real(_148817_d)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Ref<_1da2d3bdc_Data> _149318_l;
	jule::Ref<_1da2d3bdc_Data> _149325_r;
	std::tie(_149318_l,_149325_r) = this->self->_method_eval_slicing_exprs(_148736_s);
	if ((!(jule::real(_149318_l)))) {
		return _148817_d;
	}
	this->self->_method_check_slicing(_148817_d,_149318_l,_149325_r,_148736_s);
	jule::drop(_148817_d->_field_cast_kind);
	jule::Ref<_206e63542_SlicingExprModel> _150117_model = jule::new_struct<_206e63542_SlicingExprModel>(new( std::nothrow ) _206e63542_SlicingExprModel(_148817_d->_field_model,_149318_l->_field_model,jule::Any()));
	if (jule::real(_149325_r)) {
		_150117_model->_field_right=_149325_r->_field_model;
	}
	_148817_d->_field_model=jule::Any(_150117_model);
	return _148817_d;
}



inline void _1da2d3bdc_Eval::_method_cast_ptr(jule::Ref<_1da411226_TypeKind> _151427_t,jule::Ref<_1da2d3bdc_Data> _151445_d,_20542560a_Token _151455_error_token) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_151455_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1da411226_Prim> _152013_prim = _151445_d->_field_kind->_method_prim();
	if ((!(jule::real(_151445_d->_field_kind->_method_ptr()))) && ((!(jule::real(_152013_prim))) || (!(_1a8a8de8a_is_int(_152013_prim->_method_to_str()))))) {
		(*this)._method_push_err(_151455_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_151445_d->_field_kind->_method_to_str()),jule::Any(_151427_t->_method_to_str())}));
	}
	jule::drop(_151445_d->_field_constant);
}



inline void _1da2d3bdc_Eval::_method_cast_struct(jule::Ref<_1da411226_TypeKind> _152834_t,jule::Ref<_1da2d3bdc_Data> _152852_d,_20542560a_Token _152862_error_token) {
	jule::Ref<_2065895c5_Trait> _152917_tr = _152852_d->_field_kind->_method_trt();
	if ((!(jule::real(_152917_tr)))) {
		(*this)._method_push_err(_152862_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_152852_d->_field_kind->_method_to_str()),jule::Any(_152834_t->_method_to_str())}));
		return;
	}
	jule::Ref<_2053cdc01_StructIns> _153517_s = jule::new_ref<_2053cdc01_StructIns>();
	if (jule::real(_152834_t->_method_ref())) {
		_153517_s=_152834_t->_method_ref()->_field_elem->_method_strct();
	} else {
		_153517_s=_152834_t->_method_strct();
	}
	(*this)._method_push_reference_to_struct(_153517_s);
	if ((!(_153517_s->_field_decl->_method_is_implements(_152917_tr)))) {
		(*this)._method_push_err(_152862_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_152852_d->_field_kind->_method_to_str()),jule::Any(_152834_t->_method_to_str())}));
	}
}



inline void _1da2d3bdc_Eval::_method_cast_ref(jule::Ref<_1da411226_TypeKind> _154931_t,jule::Ref<_1da2d3bdc_Data> _154949_d,_20542560a_Token _154959_error_token) {
	jule::Ref<_1da411226_Ref> _155017_ref = _154931_t->_method_ref();
	if (jule::real(_155017_ref->_field_elem->_method_strct())) {
		(*this)._method_cast_struct(_154931_t,_154949_d,_154959_error_token);
		return;
	}
	(*this)._method_push_err(_154959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_154949_d->_field_kind->_method_to_str()),jule::Any(_154931_t->_method_to_str())}));
}



inline void _1da2d3bdc_Eval::_method_cast_slc(jule::Ref<_1da411226_TypeKind> _155931_t,jule::Ref<_1da2d3bdc_Data> _155949_d,_20542560a_Token _155959_error_token) {
	if (jule::real(_155949_d->_field_kind->_method_enm())) {
		if ((!(jule::real(_155949_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()))) || (!(_155949_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_155959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_155949_d->_field_kind->_method_to_str()),jule::Any(_155931_t->_method_to_str())}));
			return;
		}
	} else if ((!(jule::real(_155949_d->_field_kind->_method_prim()))) || (!(_155949_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_155959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_155949_d->_field_kind->_method_to_str()),jule::Any(_155931_t->_method_to_str())}));
		return;
	}
	_155931_t=_155931_t->_method_slc()->_field_elem;
	jule::Ref<_1da411226_Prim> _157113_prim = _155931_t->_method_prim();
	if ((!(jule::real(_157113_prim))) || ((!(_157113_prim->_method_is_u8())) && (!(_157113_prim->_method_is_i32())))) {
		(*this)._method_push_err(_155959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_155949_d->_field_kind->_method_to_str()),jule::Any(_155931_t->_method_to_str())}));
	}
}



inline void _1da2d3bdc_Eval::_method_cast_str(jule::Ref<_1da2d3bdc_Data> _157731_d,_20542560a_Token _157741_error_token) {
	if (jule::real(_157731_d->_field_kind->_method_enm())) {
		jule::Ref<_206b06c0d_Enum> _157921_e = _157731_d->_field_kind->_method_enm();
		if (jule::real(_157921_e->_field_kind->_field_kind->_method_prim()) && _157921_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (jule::real(_157731_d->_field_kind->_method_prim())) {
		jule::Ref<_1da411226_Prim> _158617_prim = _157731_d->_field_kind->_method_prim();
		if ((!(_158617_prim->_method_is_u8())) && (!(_158617_prim->_method_is_i32()))) {
			(*this)._method_push_err(_157741_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_157731_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if ((!(jule::real(_157731_d->_field_kind->_method_slc())))) {
		(*this)._method_push_err(_157741_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_157731_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ref<_1da411226_TypeKind> _159817_t = _157731_d->_field_kind->_method_slc()->_field_elem;
	jule::Ref<_1da411226_Prim> _159913_prim = _159817_t->_method_prim();
	if ((!(jule::real(_159913_prim))) || ((!(_159913_prim->_method_is_u8())) && (!(_159913_prim->_method_is_i32())))) {
		(*this)._method_push_err(_157741_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_157731_d->_field_kind->_method_to_str())}));
	}
}



inline void _1da2d3bdc_Eval::_method_cast_int(jule::Ref<_1da411226_TypeKind> _160531_t,jule::Ref<_1da2d3bdc_Data> _160549_d,_20542560a_Token _160559_error_token) {
	if (_160549_d->_method_is_const()) {
		jule::Ref<_1da411226_Prim> _160717_prim = _160531_t->_method_prim();
		{
			if (!((_1a8a8de8a_is_sig_int(_160717_prim->_field_kind)))) { goto _case_end_4397043728; }
			_case_begin_4397043728:;
			{
				_160549_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_160549_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4397043552;
			_case_end_4397043728:;
			if (!((_1a8a8de8a_is_unsig_int(_160717_prim->_field_kind)))) { goto _case_end_4397043856; }
			_case_begin_4397043856:;
			{
				_160549_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_160549_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4397043552;
			_case_end_4397043856:;
			_match_end_4397043552:;
		}
	}
	if (jule::real(_160549_d->_field_kind->_method_enm())) {
		jule::Ref<_206b06c0d_Enum> _161817_e = _160549_d->_field_kind->_method_enm();
		if (_1a8a8de8a_is_num(_161817_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (jule::real(_160549_d->_field_kind->_method_ptr())) {
		jule::Ref<_1da411226_Prim> _162517_prim = _160531_t->_method_prim();
		if (_162517_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_160559_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		} else if (((((!(_162517_prim->_method_is_i32())) && (!(_162517_prim->_method_is_i64()))) && (!(_162517_prim->_method_is_u16()))) && (!(_162517_prim->_method_is_u32()))) && (!(_162517_prim->_method_is_u64()))) {
			(*this)._method_push_err(_160559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_160549_d->_field_kind->_method_to_str()),jule::Any(_160531_t->_method_to_str())}));
		}
		return;
	}
	jule::Ref<_1da411226_Prim> _163613_prim = _160549_d->_field_kind->_method_prim();
	if (jule::real(_163613_prim) && _1a8a8de8a_is_num(_163613_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_160559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_160549_d->_field_kind->_method_to_str()),jule::Any(_160531_t->_method_to_str())}));
}



inline void _1da2d3bdc_Eval::_method_cast_num(jule::Ref<_1da411226_TypeKind> _164431_t,jule::Ref<_1da2d3bdc_Data> _164449_d,_20542560a_Token _164459_error_token) {
	if (_164449_d->_method_is_const()) {
		jule::Ref<_1da411226_Prim> _164617_prim = _164431_t->_method_prim();
		{
			if (!((_1a8a8de8a_is_float(_164617_prim->_field_kind)))) { goto _case_end_4397079568; }
			_case_begin_4397079568:;
			{
				_164449_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_164449_d->_field_constant->_method_as_f64()));
			}
			goto _match_end_4397079376;
			_case_end_4397079568:;
			if (!((_1a8a8de8a_is_sig_int(_164617_prim->_field_kind)))) { goto _case_end_4397079696; }
			_case_begin_4397079696:;
			{
				_164449_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_164449_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4397079376;
			_case_end_4397079696:;
			if (!((_1a8a8de8a_is_unsig_int(_164617_prim->_field_kind)))) { goto _case_end_4397079824; }
			_case_begin_4397079824:;
			{
				_164449_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_164449_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4397079376;
			_case_end_4397079824:;
			_match_end_4397079376:;
		}
	}
	if (jule::real(_164449_d->_field_kind->_method_enm())) {
		jule::Ref<_206b06c0d_Enum> _166017_e = _164449_d->_field_kind->_method_enm();
		if (_1a8a8de8a_is_num(_166017_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ref<_1da411226_Prim> _166613_prim = _164449_d->_field_kind->_method_prim();
	if (jule::real(_166613_prim) && _1a8a8de8a_is_num(_166613_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_164459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_164449_d->_field_kind->_method_to_str()),jule::Any(_164431_t->_method_to_str())}));
}



inline void _1da2d3bdc_Eval::_method_cast_prim(jule::Ref<_1da411226_TypeKind> _167432_t,jule::Ref<_1da2d3bdc_Data> _167450_d,_20542560a_Token _167460_error_token) {
	jule::Ref<_1da411226_Prim> _167513_prim = _167432_t->_method_prim();
	{
		if (!((_167513_prim->_method_is_any()))) { goto _case_end_4397102672; }
		goto _match_end_4397101712;
		_case_end_4397102672:;
		if (!((_167513_prim->_method_is_str()))) { goto _case_end_4397102144; }
		_case_begin_4397102144:;
		{
			(*this)._method_cast_str(_167450_d,_167460_error_token);
		}
		goto _match_end_4397101712;
		_case_end_4397102144:;
		if (!((_1a8a8de8a_is_int(_167513_prim->_method_to_str())))) { goto _case_end_4397102256; }
		_case_begin_4397102256:;
		{
			(*this)._method_cast_int(_167432_t,_167450_d,_167460_error_token);
		}
		goto _match_end_4397101712;
		_case_end_4397102256:;
		if (!((_1a8a8de8a_is_num(_167513_prim->_method_to_str())))) { goto _case_end_4397102368; }
		_case_begin_4397102368:;
		{
			(*this)._method_cast_num(_167432_t,_167450_d,_167460_error_token);
		}
		goto _match_end_4397101712;
		_case_end_4397102368:;
		_case_begin_4397101840:;
		{
			(*this)._method_push_err(_167460_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_167432_t->_method_to_str())}));
		}
		goto _match_end_4397101712;
		_case_end_4397101840:;
		_match_end_4397101712:;
	}
}



inline void _1da2d3bdc_Eval::_method_cast_constant(jule::Ref<_1da411226_TypeKind>& _169437_t,jule::Ref<_1da2d3bdc_Data>& _169456_d) {
	jule::Ref<_1da411226_Prim> _169513_prim = _169437_t->_method_prim();
	if ((!(jule::real(_169513_prim))) || (!(_169456_d->_method_is_const()))) {
		return;
	}
	{
		if (!((_1a8a8de8a_is_sig_int(_169513_prim->_field_kind)))) { goto _case_end_4397117056; }
		_case_begin_4397117056:;
		{
			_169456_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_169456_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4397116736;
		_case_end_4397117056:;
		if (!((_1a8a8de8a_is_unsig_int(_169513_prim->_field_kind)))) { goto _case_end_4397117168; }
		_case_begin_4397117168:;
		{
			_169456_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_169456_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4397116736;
		_case_end_4397117168:;
		if (!((_1a8a8de8a_is_float(_169513_prim->_field_kind)))) { goto _case_end_4397117280; }
		_case_begin_4397117280:;
		{
			_169456_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_169456_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4397116736;
		_case_end_4397117280:;
		_match_end_4397116736:;
	}
	_169456_d->_field_model=jule::Any(_169456_d->_field_constant);
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_cast_by_type_n_data(jule::Ref<_1da411226_TypeKind> _171447_t,jule::Ref<_1da2d3bdc_Data> _171465_d,_20542560a_Token _171475_error_token) {
	{
		if (!((jule::real(_171465_d->_field_kind->_method_prim()) && _171465_d->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4397135760; }
		_case_begin_4397135760:;
		{
			if (jule::real(_171447_t->_method_enm())) {
				(*this)._method_push_err(_171475_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>({}));
				(*this)._method_push_suggestion(jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4397132480;
		_case_end_4397135760:;
		if (!((jule::real(_171447_t->_method_ptr())))) { goto _case_end_4397132928; }
		_case_begin_4397132928:;
		{
			(*this)._method_cast_ptr(_171447_t,_171465_d,_171475_error_token);
		}
		goto _match_end_4397132480;
		_case_end_4397132928:;
		if (!((jule::real(_171447_t->_method_ref())))) { goto _case_end_4397133040; }
		_case_begin_4397133040:;
		{
			(*this)._method_cast_ref(_171447_t,_171465_d,_171475_error_token);
		}
		goto _match_end_4397132480;
		_case_end_4397133040:;
		if (!((jule::real(_171447_t->_method_slc())))) { goto _case_end_4397133152; }
		_case_begin_4397133152:;
		{
			(*this)._method_cast_slc(_171447_t,_171465_d,_171475_error_token);
		}
		goto _match_end_4397132480;
		_case_end_4397133152:;
		if (!((jule::real(_171447_t->_method_strct())))) { goto _case_end_4397136224; }
		_case_begin_4397136224:;
		{
			(*this)._method_cast_struct(_171447_t,_171465_d,_171475_error_token);
		}
		goto _match_end_4397132480;
		_case_end_4397136224:;
		if (!((jule::real(_171447_t->_method_prim())))) { goto _case_end_4397136336; }
		_case_begin_4397136336:;
		{
			(*this)._method_cast_prim(_171447_t,_171465_d,_171475_error_token);
		}
		goto _match_end_4397132480;
		_case_end_4397136336:;
		_case_begin_4397132624:;
		{
			(*this)._method_push_err(_171475_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_171447_t->_method_to_str())}));
			jule::drop(_171465_d);
		}
		goto _match_end_4397132480;
		_case_end_4397132624:;
		_match_end_4397132480:;
	}
	if ((!(jule::real(_171465_d)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	_171465_d->_field_mutable=_171465_d->_field_mutable || ((!(_171465_d->_field_kind->_method_mutable())) && _171447_t->_method_mutable());
	_171465_d->_field_lvalue=_171447_t->_method_lvalue();
	_171465_d->_field_decl=false;
	(*this)._method_cast_constant(_171447_t,_171465_d);
	if ((!(jule::real(_171465_d->_field_kind->_method_enm()))) || (_171465_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_to_str() != _171447_t->_method_to_str())) {
		_171465_d->_field_cast_kind=_171447_t;
	} else {
		_171465_d->_field_kind=_171447_t;
	}
	return _171465_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_cast(jule::Ref<_2053703bd_CastExpr> _176433_c) {
	jule::Ref<_1da411226_TypeSymbol> _176517_t = _206a20e79_build_type(_176433_c->_field_kind);
	jule::Bool _176613_ok = this->self->_field_s->_method_check_type(_176517_t,this->self->_field_lookup);
	if ((!(_176613_ok))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Ref<_1da411226_TypeKind> _177117_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_177117_prefix;
	});
	jule::Ref<_1da2d3bdc_Data> _177517_d = this->self->_method_eval_expr_kind(_176433_c->_field_expr);
	if ((!(jule::real(_177517_d)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	_177517_d=this->self->_method_eval_cast_by_type_n_data(_176517_t->_field_kind,_177517_d,_176433_c->_field_kind->_field_token);
	return _177517_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_ns_selection(jule::Ref<_2053703bd_NsSelectionExpr> _178536_s) {
	jule::Str _178613_path = _1da411226_build_link_path_by_tokens(_178536_s->_field_ns);
	jule::Ref<_206e66325_ImportInfo> _178717_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)>([=](jule::Ref<_206e66325_ImportInfo> _178753_p) mutable -> jule::Bool {
		if ((_178536_s->_field_ns.len() == 1LL) && (_178753_p->_field_alias == _178613_path)) {
			return true;
		}
		return _178753_p->_field_link_path == _178613_path;
	}));
	if ((!(jule::real(_178717_imp))) || (!(_178717_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_178536_s->_field_ident,jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_178613_path)}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Trait<_206c8d636_Lookup> _179917_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_178717_imp;
	
	jule::Any _180317_def = (*this)._method_get_def(_178536_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_179917_lookup;
	jule::Ref<_1da2d3bdc_Data> _180617_d = (*this)._method_eval_def(_180317_def,_178536_s->_field_ident);
	return _180617_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_struct_lit_explicit(jule::Ref<_2053cdc01_StructIns> _181148_s,jule::Slice<jule::Any> _181213_exprs,_20542560a_Token _181236_error_token) {
	jule::Bool _181313_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_181148_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_181148_s->_field_generics.len()),_181236_error_token);
	if ((!(_181313_ok))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	this->self->_method_push_reference_to_struct(_181148_s);
	_1da120d15_StructLitChecker _182117_slc = _1da120d15_StructLitChecker(this->self,_181236_error_token,_181148_s,jule::Slice<jule::Ref<_206e63542_StructArgExprModel>>());
	_182117_slc._method_check(_181213_exprs);
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_181148_s)),jule::Ref<_1da411226_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_StructLitExprModel>(new( std::nothrow ) _206e63542_StructLitExprModel(_181148_s,_182117_slc._field_args))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_struct_lit(jule::Ref<_2053703bd_StructLit> _183839_lit) {
	jule::Ref<_1da411226_TypeSymbol> _183917_t = _206a20e79_build_type(_183839_lit->_field_kind);
	jule::Bool _184013_ok = this->self->_field_s->_method_check_type(_183917_t,this->self->_field_lookup);
	if ((!(_184013_ok))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Ref<_2053cdc01_StructIns> _184517_s = _183917_t->_field_kind->_method_strct();
	if ((!(jule::real(_184517_s)))) {
		this->self->_method_push_err(_183839_lit->_field_kind->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	return this->self->_method_eval_struct_lit_explicit(_184517_s,_183839_lit->_field_exprs,_183839_lit->_field_kind->_field_token);
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_type(jule::Ref<_2053703bd_TypeDecl> _185432_t) {
	jule::Ref<_1da411226_TypeSymbol> _185517_tk = _206a20e79_build_type(_185432_t);
	jule::Bool _185613_ok = (*this)._field_s->_method_check_type(_185517_tk,(*this)._field_lookup);
	if ((!(_185613_ok))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(_185517_tk->_field_kind,jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_185517_tk->_field_kind),true,jule::Ref<_1a89ca987_Const>()));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_call_type_fn(jule::Ref<_2053703bd_FnCallExpr> _186836_fc,jule::Ref<_1da2d3bdc_Data> _186857_d) {
	if (_186836_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_186836_fc->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_186857_d->_field_kind->_method_to_str())}));
	} else if (_186836_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_186836_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_186836_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_186836_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	if (_186836_fc->_field_args.len() > 0LL) {
		jule::Ref<_1da2d3bdc_Data> _187821_arg = this->self->_method_eval_expr_kind(_186836_fc->_field_args[0LL]->_field_kind);
		if (jule::real(_187821_arg)) {
			_186857_d=this->self->_method_eval_cast_by_type_n_data(_186857_d->_field_kind,_187821_arg,_186836_fc->_field_args[0LL]->_field_token);
		}
	}
	_186857_d->_field_decl=false;
	return _186857_d;
}



inline std::tuple<jule::Bool,jule::Bool> _1da2d3bdc_Eval::_method_check_fn_call_generics(jule::Ref<_2053ddd54_FnIns> _188945_f,jule::Ref<_2053703bd_FnCallExpr> _189013_fc) {
	jule::Bool _189032_ok = jule::Bool();
	jule::Bool _189042_dynamic_annotation = jule::Bool();
	{
		if (!((((_188945_f->_field_decl->_field_generics.len() > 0LL) && (_189013_fc->_field_generics.len() == 0LL)) && (_188945_f->_field_params.len() > 0LL)))) { goto _case_end_4397266016; }
		_case_begin_4397266016:;
		{
			_189042_dynamic_annotation=true;
			_188945_f->_field_generics=jule::Slice<jule::Ref<_1da411226_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_188945_f->_field_decl->_field_generics.len())));
			_189032_ok = true;
			_189042_dynamic_annotation = true;
			return std::make_tuple(_189032_ok,_189042_dynamic_annotation);
		}
		goto _match_end_4397253744;
		_case_end_4397266016:;
		if (!(((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_188945_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_189013_fc->_field_generics.len()),_189013_fc->_field_token)))))) { goto _case_end_4397258928; }
		_case_begin_4397258928:;
		{
			_189032_ok = false;
			_189042_dynamic_annotation = false;
			return std::make_tuple(_189032_ok,_189042_dynamic_annotation);
		}
		goto _match_end_4397253744;
		_case_end_4397258928:;
		_case_begin_4397253936:;
		{
			_188945_f->_field_generics=jule::Slice<jule::Ref<_1da411226_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_188945_f->_field_decl->_field_generics.len())));
			{
				auto _range_expr = _189013_fc->_field_generics;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Int _1da2d3bdc_i = 0;
					jule::Ref<_2053703bd_TypeDecl> _1da2d3bdc_g = *_range_begin;
					_iter_begin_4397257712:;
					{
						jule::Ref<_1da411226_TypeSymbol> _190525_k = _206a20e79_build_type(_1da2d3bdc_g);
						_189032_ok=(*this)._field_s->_method_check_type(_190525_k,(*this)._field_lookup);
						if ((!(_189032_ok))) {
							_189032_ok = false;
							_189042_dynamic_annotation = false;
							return std::make_tuple(_189032_ok,_189042_dynamic_annotation);
						}
						_188945_f->_field_generics[static_cast<jule::Int>(_1da2d3bdc_i)]=_190525_k->_field_kind;
					}
					_iter_next_4397257712:;
					++_range_begin;
					if (_range_begin != _range_end) { ++_1da2d3bdc_i; _1da2d3bdc_g = *_range_begin; goto _iter_begin_4397257712; }
					_iter_end_4397257712:;
				}
			}
			_189032_ok = true;
			_189042_dynamic_annotation = false;
			return std::make_tuple(_189032_ok,_189042_dynamic_annotation);
		}
		goto _match_end_4397253744;
		_case_end_4397253936:;
		_match_end_4397253744:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_call_builtin_fn(jule::Ref<_2053703bd_FnCallExpr> _191739_fc,jule::Ref<_1da2d3bdc_Data> _191760_d) {
	jule::Ref<_2053ddd54_FnIns> _191817_f = _191760_d->_field_kind->_method_fnc();
	_191760_d=_191817_f->_field_caller(this->self,_191739_fc,_191760_d);
	if ((!(jule::real(_191760_d)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	_191760_d->_field_mutable=true;
	return _191760_d;
}



inline void _1da2d3bdc_Eval::_method_check_fn_of_concurrent_call(jule::Ref<_2053ddd54_FnIns>& _192947_f,_20542560a_Token _192958_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto _range_expr = _192947_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_ParamIns> _1da2d3bdc_p = *_range_begin;
			_iter_begin_4397287904:;
			{
				if (_1da2d3bdc_p->_field_decl->_field_reference) {
					(*this)._method_push_err(_192958_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>({}));
					return;
				}
			}
			_iter_next_4397287904:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2d3bdc_p = *_range_begin; goto _iter_begin_4397287904; }
			_iter_end_4397287904:;
		}
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_call_fn(jule::Ref<_2053703bd_FnCallExpr> _194231_fc,jule::Ref<_1da2d3bdc_Data> _194252_d) {
	jule::Ref<_2053ddd54_FnIns> _194317_f = _194252_d->_field_kind->_method_fnc();
	if (_194317_f->_method_is_builtin()) {
		return this->self->_method_call_builtin_fn(_194231_fc,_194252_d);
	}
	if (_194231_fc->_field_concurrent) {
		this->self->_method_check_fn_of_concurrent_call(_194317_f,_194231_fc->_field_token);
	}
	if ((((!(_194252_d->_field_mutable)) && _194317_f->_field_decl->_method_is_method()) && (!(_194317_f->_field_decl->_field_statically))) && _194317_f->_field_decl->_field_params[0LL]->_field_mutable) {
		this->self->_method_push_err(_194231_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	} else if ((!(this->self->_method_is_unsafe())) && _194317_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_194231_fc->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Bool _195818_ok;
	jule::Bool _195822_dynamic_annotation;
	std::tie(_195818_ok,_195822_dynamic_annotation) = this->self->_method_check_fn_call_generics(_194317_f,_194231_fc);
	if ((!(_195818_ok))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Ref<_1d9dc7517_Sema> _196317_old = this->self->_field_s;
	if (jule::real(_194317_f->_field_decl->_field_owner)) {
		this->self->_field_s=_194317_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if ((_196317_old).alloc != (this->self->_field_s).alloc) {
			_196317_old->_field_errors=jule::append(_196317_old->_field_errors,this->self->_field_s->_field_errors);
		}
		this->self->_field_s=_196317_old;
	});
	if ((!(_195822_dynamic_annotation))) {
		if ((!(_194317_f->_field_reloaded))) {
			_195818_ok=this->self->_field_s->_method_reload_fn_ins_types(_194317_f);
			if ((!(_195818_ok))) {
				return jule::new_ref<_1da2d3bdc_Data>();
			}
			_194317_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_194317_f);
	}
	_1da120d15_FnCallArgChecker _198717_fcac = _1da120d15_FnCallArgChecker(this->self,_194231_fc->_field_args,_194231_fc->_field_token,_194317_f,_195822_dynamic_annotation,jule::Slice<jule::Any>());
	if (jule::real(_194317_f->_field_decl->_field_owner)) {
		std::tie(_196317_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_196317_old);
		_195818_ok=_198717_fcac._method_check();
		std::tie(_196317_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_196317_old);
	} else {
		_195818_ok=_198717_fcac._method_check();
	}
	if ((!(_195818_ok)) && _195822_dynamic_annotation) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Bool _200614_is_unique_ins;
	jule::Int _200629_pos;
	std::tie(_200614_is_unique_ins,_200629_pos) = _194317_f->_field_decl->_method_append_instance(_194317_f);
	if ((!(_200614_is_unique_ins))) {
		_194317_f=_194317_f->_field_decl->_field_instances[static_cast<jule::Int>(_200629_pos)];
	}
	jule::Any _201117_call_model = _194252_d->_field_model;
	if (_194317_f->_field_decl->_method_is_void()) {
		_194252_d=_1da2d3bdc_build_void_data();
	} else {
		if (_195822_dynamic_annotation) {
			_195818_ok=this->self->_field_s->_method_reload_fn_ins_types(_194317_f);
			if ((!(_195818_ok))) {
				return jule::new_ref<_1da2d3bdc_Data>();
			}
			_194317_f->_field_reloaded=true;
		}
		_194252_d->_field_kind=_194317_f->_field_result;
		_194252_d->_field_lvalue=_194317_f->_field_result->_method_lvalue();
	}
	_194252_d->_field_mutable=true;
	_194252_d->_field_model=jule::Any(jule::new_struct<_206e63542_FnCallExprModel>(new( std::nothrow ) _206e63542_FnCallExprModel(_194317_f,_194231_fc->_field_concurrent,_201117_call_model,_198717_fcac._field_arg_models)));
	if ((_194317_f->_field_generics.len() > 0LL) && _200614_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_194317_f);
	}
	return _194252_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_fn_call(jule::Ref<_2053703bd_FnCallExpr> _204436_fc) {
	jule::Ref<_1da411226_TypeKind> _204517_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_204517_prefix;
	});
	jule::Ref<_1da2d3bdc_Data> _204917_d = this->self->_method_eval_expr_kind(_204436_fc->_field_expr->_field_kind);
	if ((!(jule::real(_204917_d)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_204917_d->_field_decl) {
		return this->self->_method_call_type_fn(_204436_fc,_204917_d);
	}
	if ((!(jule::real(_204917_d->_field_kind->_method_fnc())))) {
		this->self->_method_push_err(_204436_fc->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	return this->self->_method_call_fn(_204436_fc,_204917_d);
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_enum_static(jule::Ref<_206b06c0d_Enum> _206639_enm,_20542560a_Token _206651_ident) {
	jule::Ref<_1da2d3bdc_Data> _206717_d = jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_206639_enm)),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1a89ca987_Const>()));
	jule::Ref<_206b06c0d_EnumItem> _207417_item = _206639_enm->_method_find_item(_206651_ident._field_kind);
	if ((!(jule::real(_207417_item)))) {
		(*this)._method_push_err(_206651_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_206651_ident._field_kind)}));
	} else {
		_206717_d->_field_constant=jule::new_ref<_1a89ca987_Const>(_207417_item->_field_value->_field_data->_field_constant.get());
		_206717_d->_field_model=jule::Any(_206717_d->_field_constant);
	}
	return _206717_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_struct_static(jule::Ref<_2053cdc01_StructIns> _208541_s,_20542560a_Token _208556_ident) {
	
	jule::Ref<_2053ddd54_Fn> _208717_method = _208541_s->_method_find_method(_208556_ident._field_kind,true);
	if ((!(jule::real(_208717_method)))) {
		(*this)._method_push_err(_208556_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_208556_ident._field_kind)}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Ref<_1da2d3bdc_Data> _209317_d = jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::Ref<_1da411226_TypeKind>(),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1a89ca987_Const>()));
	jule::Ref<_2053ddd54_FnIns> _210017_ins = _208717_method->_method_instance();
	_210017_ins->_field_owner=_208541_s;
	(*this)._method_push_reference_to_fn(_210017_ins);
	_209317_d->_field_model=jule::Any(jule::new_struct<_206e63542_StructStaticIdentExprModel>(new( std::nothrow ) _206e63542_StructStaticIdentExprModel(_208541_s,_209317_d->_field_model,_210017_ins)));
	_209317_d->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_210017_ins));
	return _209317_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_trait_sub_ident(jule::Ref<_1da2d3bdc_Data> _211343_d,jule::Ref<_2065895c5_Trait> _211357_trt,_20542560a_Token _211370_ident) {
	jule::Ref<_2053ddd54_Fn> _211417_f = _211357_trt->_method_find_method(_211370_ident._field_kind);
	if ((!(jule::real(_211417_f)))) {
		(*this)._method_push_err(_211370_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_211370_ident._field_kind)}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Any _212017_model = jule::Any(nullptr);
	if ((_211357_trt).alloc == (_206c94dac_BUILTIN_TRAIT_ERROR).alloc) {
		_212017_model=jule::Any(jule::new_struct<_206e63542_BuiltinErrorTraitSubIdentExprModel>(new( std::nothrow ) _206e63542_BuiltinErrorTraitSubIdentExprModel(_211343_d->_field_model,_211370_ident._field_kind)));
	} else {
		_212017_model=jule::Any(jule::new_struct<_206e63542_TraitSubIdentExprModel>(new( std::nothrow ) _206e63542_TraitSubIdentExprModel(_211343_d->_field_model,_211370_ident._field_kind)));
	}
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_211417_f->_method_instance())),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_212017_model,false,jule::Ref<_1a89ca987_Const>()));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_struct_sub_ident(jule::Ref<_1da2d3bdc_Data> _214244_d,jule::Ref<_2053cdc01_StructIns> _214258_s,jule::Ref<_2053703bd_SubIdentExpr> _214273_si,jule::Bool _214292_ref) {
	jule::Ref<_2053cdc01_FieldIns> _214317_f = _214258_s->_method_find_field(_214273_si->_field_ident._field_kind);
	if (jule::real(_214317_f)) {
		if ((!((*this)._field_s->_method_is_accessible_define(_214317_f->_field_decl->_field_public,_214317_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_214273_si->_field_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_214317_f->_field_decl->_field_ident)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		}
		jule::Ref<_206e63542_StructSubIdentExprModel> _215021_model = jule::new_struct<_206e63542_StructSubIdentExprModel>(new( std::nothrow ) _206e63542_StructSubIdentExprModel(_214244_d->_field_model,_214244_d->_field_kind,jule::Ref<_2053ddd54_FnIns>(),_214317_f));
		_214244_d->_field_model=jule::Any(_215021_model);
		_214244_d->_field_kind=_214317_f->_field_kind->_method_clone();
		if (_214317_f->_field_decl->_field_mutable && (!(_214244_d->_field_mutable))) {
			{
				auto _match_expr{ (*this)._field_lookup };
				if (!(_match_expr.type_is<jule::Ref<_206b0557a_ScopeChecker>>())) { goto _case_end_4397420960; }
				_case_begin_4397420960:;
				{
					jule::Ref<_206b0557a_ScopeChecker> _216225_scope = (*this)._field_lookup.operator jule::Ref<_206b0557a_ScopeChecker>()->_method_get_root();
					_214244_d->_field_mutable=jule::real(_216225_scope->_field_owner) && ((_216225_scope->_field_owner->_field_owner).alloc == (_214258_s).alloc);
					if (_214244_d->_field_mutable) {
						jule::Ref<_1d9e22661_Var> _216533_field = _215021_model->_field_expr.operator jule::Ref<_1d9e22661_Var>();
						jule::Ref<_1d9e22661_Var> _216633_v = jule::new_struct<_1d9e22661_Var>(new( std::nothrow ) _1d9e22661_Var(_216533_field->_field_scope,_216533_field->_field_token,_216533_field->_field_ident,_216533_field->_field_cpp_linked,_216533_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_216533_field->_field_kind,_216533_field->_field_value,jule::Ref<_206a20e79_ReferenceStack>(),jule::Slice<jule::Ref<_2053703bd_Directive>>(),jule::Slice<jule::Ref<_1d9e22661_Var>>()));
						_216633_v->_field_mutable=true;
						_215021_model->_field_expr=jule::Any(_216633_v);
					}
				}
				goto _match_end_4397419072;
				_case_end_4397420960:;
				_match_end_4397419072:;
			}
		}
		return _214244_d;
	}
	
	jule::Ref<_2053ddd54_Fn> _218517_m = _214258_s->_method_find_method(_214273_si->_field_ident._field_kind,false);
	if ((!(jule::real(_218517_m)))) {
		(*this)._method_push_err(_214273_si->_field_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_214273_si->_field_ident._field_kind)}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_218517_m->_field_params[0LL]->_method_is_ref() && (!(_214292_ref))) {
		(*this)._method_push_err(_214273_si->_field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_2053ddd54_FnIns> _219617_ins = _218517_m->_method_instance();
	_219617_ins->_field_owner=_214258_s;
	(*this)._method_push_reference_to_fn(_219617_ins);
	_214244_d->_field_model=jule::Any(jule::new_struct<_206e63542_StructSubIdentExprModel>(new( std::nothrow ) _206e63542_StructSubIdentExprModel(_214244_d->_field_model,_214244_d->_field_kind,_219617_ins,jule::Ref<_2053cdc01_FieldIns>())));
	_214244_d->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_219617_ins));
	return _214244_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_slice_sub_ident(jule::Ref<_1da2d3bdc_Data> _220843_d,_20542560a_Token _220853_ident) {
	{
		auto _match_expr{ _220853_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4397453888; }
		_case_begin_4397453888:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_220843_d->_field_kind,_220843_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4397449792;
		_case_end_4397453888:;
		if (!((jule::Str("cap", 3)) == _match_expr)) { goto _case_end_4397454464; }
		_case_begin_4397454464:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_220843_d->_field_kind,_220843_d->_field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4397449792;
		_case_end_4397454464:;
		_case_begin_4397450400:;
		{
			(*this)._method_push_err(_220853_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_220853_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4397449792;
		_case_end_4397450400:;
		_match_end_4397449792:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_array_sub_ident(jule::Ref<_1da2d3bdc_Data> _223843_d,_20542560a_Token _223853_ident) {
	{
		auto _match_expr{ _223853_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4394126704; }
		_case_begin_4394126704:;
		{
			jule::Ref<_1a89ca987_Const> _224121_c = _1a89ca987_Const::_static_method_new_i64(static_cast<jule::I64>(_223843_d->_field_kind->_method_arr()->_field_n));
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_224121_c),jule::Bool(),_224121_c));
		}
		goto _match_end_4389693664;
		_case_end_4394126704:;
		_case_begin_4394126592:;
		{
			(*this)._method_push_err(_223853_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_223853_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4389693664;
		_case_end_4394126592:;
		_match_end_4389693664:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_map_sub_ident(jule::Ref<_1da2d3bdc_Data> _225541_d,_20542560a_Token _225551_ident) {
	{
		auto _match_expr{ _225551_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4383046192; }
		_case_begin_4383046192:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_225541_d->_field_kind,_225541_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4383041904;
		_case_end_4383046192:;
		if (!((jule::Str("clear", 5)) == _match_expr)) { goto _case_end_4383045408; }
		_case_begin_4383045408:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>(),jule::Ref<_1da411226_TypeKind>(),jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),_225541_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_225541_d->_field_kind,_225541_d->_field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4383041904;
		_case_end_4383045408:;
		if (!((jule::Str("keys", 4)) == _match_expr)) { goto _case_end_4383045856; }
		_case_begin_4383045856:;
		{
			jule::Ref<_1da411226_Map> _228421_m = _225541_d->_field_kind->_method_map();
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>(),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1da411226_Slc>(new( std::nothrow ) _1da411226_Slc(_228421_m->_field_key)))),jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),_225541_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_225541_d->_field_kind,_225541_d->_field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4383041904;
		_case_end_4383045856:;
		if (!((jule::Str("values", 6)) == _match_expr)) { goto _case_end_4383045968; }
		_case_begin_4383045968:;
		{
			jule::Ref<_1da411226_Map> _230521_m = _225541_d->_field_kind->_method_map();
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>(),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1da411226_Slc>(new( std::nothrow ) _1da411226_Slc(_230521_m->_field_val)))),jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),_225541_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_225541_d->_field_kind,_225541_d->_field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4383041904;
		_case_end_4383045968:;
		if (!((jule::Str("has", 3)) == _match_expr)) { goto _case_end_4383045008; }
		_case_begin_4383045008:;
		{
			jule::Ref<_1da411226_Map> _232621_m = _225541_d->_field_kind->_method_map();
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>({jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("key", 3))),_232621_m->_field_key))}),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),_225541_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_225541_d->_field_kind,_225541_d->_field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4383041904;
		_case_end_4383045008:;
		if (!((jule::Str("del", 3)) == _match_expr)) { goto _case_end_4383045120; }
		_case_begin_4383045120:;
		{
			jule::Ref<_1da411226_Map> _235121_m = _225541_d->_field_kind->_method_map();
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>({jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("key", 3))),_235121_m->_field_key))}),jule::Ref<_1da411226_TypeKind>(),jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),_225541_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_225541_d->_field_kind,_225541_d->_field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4383041904;
		_case_end_4383045120:;
		_case_begin_4383042448:;
		{
			(*this)._method_push_err(_225551_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_225551_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4383041904;
		_case_end_4383042448:;
		_match_end_4383041904:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_str_sub_ident(jule::Ref<_1da2d3bdc_Data> _238041_d,_20542560a_Token _238051_ident) {
	{
		auto _match_expr{ _238051_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4897464912; }
		_case_begin_4897464912:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_238041_d->_field_kind,_238041_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4896983808;
		_case_end_4897464912:;
		if (!((jule::Str("has_prefix", 10)) == _match_expr)) { goto _case_end_4897458192; }
		_case_begin_4897458192:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>({jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("sub", 3))),_238041_d->_field_kind))}),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_238041_d->_field_kind,_238041_d->_field_model,jule::Str("has_prefix", 10)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4896983808;
		_case_end_4897458192:;
		if (!((jule::Str("has_suffix", 10)) == _match_expr)) { goto _case_end_4897391744; }
		_case_begin_4897391744:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>({jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("sub", 3))),_238041_d->_field_kind))}),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_238041_d->_field_kind,_238041_d->_field_model,jule::Str("has_suffix", 10)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4896983808;
		_case_end_4897391744:;
		if (!((jule::Str("find", 4)) == _match_expr)) { goto _case_end_4897517520; }
		_case_begin_4897517520:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>({jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("sub", 3))),_238041_d->_field_kind))}),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("int", 3)))),jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_238041_d->_field_kind,_238041_d->_field_model,jule::Str("find", 4)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4896983808;
		_case_end_4897517520:;
		if (!((jule::Str("rfind", 5)) == _match_expr)) { goto _case_end_4897602384; }
		_case_begin_4897602384:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>({jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("sub", 3))),_238041_d->_field_kind))}),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("int", 3)))),jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_238041_d->_field_kind,_238041_d->_field_model,jule::Str("rfind", 5)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4896983808;
		_case_end_4897602384:;
		if (!((jule::Str("trim", 4)) == _match_expr)) { goto _case_end_4897647488; }
		_case_begin_4897647488:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>({jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("bytes", 5))),_238041_d->_field_kind))}),_238041_d->_field_kind,jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_238041_d->_field_kind,_238041_d->_field_model,jule::Str("trim", 4)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4896983808;
		_case_end_4897647488:;
		if (!((jule::Str("ltrim", 5)) == _match_expr)) { goto _case_end_4897653408; }
		_case_begin_4897653408:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>({jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("bytes", 5))),_238041_d->_field_kind))}),_238041_d->_field_kind,jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_238041_d->_field_kind,_238041_d->_field_model,jule::Str("ltrim", 5)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4896983808;
		_case_end_4897653408:;
		if (!((jule::Str("rtrim", 5)) == _match_expr)) { goto _case_end_4897678912; }
		_case_begin_4897678912:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>({jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("bytes", 5))),_238041_d->_field_kind))}),_238041_d->_field_kind,jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_238041_d->_field_kind,_238041_d->_field_model,jule::Str("rtrim", 5)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4896983808;
		_case_end_4897678912:;
		if (!((jule::Str("split", 5)) == _match_expr)) { goto _case_end_4897711808; }
		_case_begin_4897711808:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>({jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("sub", 3))),_238041_d->_field_kind)),jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1da411226_Slc>(new( std::nothrow ) _1da411226_Slc(_238041_d->_field_kind)))),jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_238041_d->_field_kind,_238041_d->_field_model,jule::Str("split", 5)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4896983808;
		_case_end_4897711808:;
		if (!((jule::Str("replace", 7)) == _match_expr)) { goto _case_end_4897728160; }
		_case_begin_4897728160:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>({jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("sub", 3))),_238041_d->_field_kind)),jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("new", 3))),_238041_d->_field_kind)),jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("int", 3))))))}),_238041_d->_field_kind,jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_CommonSubIdentExprModel>(new( std::nothrow ) _206e63542_CommonSubIdentExprModel(_238041_d->_field_kind,_238041_d->_field_model,jule::Str("replace", 7)))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4896983808;
		_case_end_4897728160:;
		_case_begin_4897057440:;
		{
			(*this)._method_push_err(_238051_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_238051_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4896983808;
		_case_end_4897057440:;
		_match_end_4896983808:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_int_type_static(_20542560a_Token _262839_ident) {
	
	{
		auto _match_expr{ _262839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4398869984; }
		_case_begin_4398869984:;
		{
			jule::Ref<_1a89ca987_Const> _263321_c = _1a89ca987_Const::_static_method_new_i64(static_cast<jule::I64>(_1da826509_max(jule::Str("int", 3))));
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_263321_c),jule::Bool(),_263321_c));
		}
		goto _match_end_4398865312;
		_case_end_4398869984:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4398870544; }
		_case_begin_4398870544:;
		{
			jule::Ref<_1a89ca987_Const> _264121_c = _1a89ca987_Const::_static_method_new_i64(static_cast<jule::I64>(_1da826509_min(jule::Str("int", 3))));
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_264121_c),jule::Bool(),_264121_c));
		}
		goto _match_end_4398865312;
		_case_end_4398870544:;
		_case_begin_4398866208:;
		{
			(*this)._method_push_err(_262839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_262839_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4398865312;
		_case_end_4398866208:;
		_match_end_4398865312:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_uint_type_static(_20542560a_Token _265440_ident) {
	
	{
		auto _match_expr{ _265440_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4398883312; }
		_case_begin_4398883312:;
		{
			jule::Ref<_1a89ca987_Const> _265921_c = _1a89ca987_Const::_static_method_new_u64(static_cast<jule::U64>(_1da826509_max(jule::Str("uint", 4))));
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_265921_c),jule::Bool(),_265921_c));
		}
		goto _match_end_4398879280;
		_case_end_4398883312:;
		_case_begin_4398880176:;
		{
			(*this)._method_push_err(_265440_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_265440_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4398879280;
		_case_end_4398880176:;
		_match_end_4398879280:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_i8_type_static(_20542560a_Token _267238_ident) {
	
	
	
	{
		auto _match_expr{ _267238_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4398896208; }
		_case_begin_4398896208:;
		{
			jule::Ref<_1a89ca987_Const> _267921_c = _1a89ca987_Const::_static_method_new_i64(127LL);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_267921_c),jule::Bool(),_267921_c));
		}
		goto _match_end_4398890624;
		_case_end_4398896208:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4398896784; }
		_case_begin_4398896784:;
		{
			jule::Ref<_1a89ca987_Const> _268721_c = _1a89ca987_Const::_static_method_new_i64(-128LL);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_268721_c),jule::Bool(),_268721_c));
		}
		goto _match_end_4398890624;
		_case_end_4398896784:;
		_case_begin_4398892464:;
		{
			(*this)._method_push_err(_267238_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_267238_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4398890624;
		_case_end_4398892464:;
		_match_end_4398890624:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_i16_type_static(_20542560a_Token _270039_ident) {
	
	
	
	{
		auto _match_expr{ _270039_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4398911456; }
		_case_begin_4398911456:;
		{
			jule::Ref<_1a89ca987_Const> _270721_c = _1a89ca987_Const::_static_method_new_i64(32767LL);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_270721_c),jule::Bool(),_270721_c));
		}
		goto _match_end_4398905872;
		_case_end_4398911456:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4398912032; }
		_case_begin_4398912032:;
		{
			jule::Ref<_1a89ca987_Const> _271521_c = _1a89ca987_Const::_static_method_new_i64(-32768LL);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_271521_c),jule::Bool(),_271521_c));
		}
		goto _match_end_4398905872;
		_case_end_4398912032:;
		_case_begin_4398907712:;
		{
			(*this)._method_push_err(_270039_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_270039_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4398905872;
		_case_end_4398907712:;
		_match_end_4398905872:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_i32_type_static(_20542560a_Token _272839_ident) {
	
	
	
	{
		auto _match_expr{ _272839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4398928448; }
		_case_begin_4398928448:;
		{
			jule::Ref<_1a89ca987_Const> _273521_c = _1a89ca987_Const::_static_method_new_i64(2147483647LL);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_273521_c),jule::Bool(),_273521_c));
		}
		goto _match_end_4398922864;
		_case_end_4398928448:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4398929024; }
		_case_begin_4398929024:;
		{
			jule::Ref<_1a89ca987_Const> _274321_c = _1a89ca987_Const::_static_method_new_i64(-2147483648LL);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_274321_c),jule::Bool(),_274321_c));
		}
		goto _match_end_4398922864;
		_case_end_4398929024:;
		_case_begin_4398924704:;
		{
			(*this)._method_push_err(_272839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_272839_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4398922864;
		_case_end_4398924704:;
		_match_end_4398922864:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_i64_type_static(_20542560a_Token _275639_ident) {
	
	
	
	{
		auto _match_expr{ _275639_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4398943376; }
		_case_begin_4398943376:;
		{
			jule::Ref<_1a89ca987_Const> _276321_c = _1a89ca987_Const::_static_method_new_i64(jule::MIN_I64);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_276321_c),jule::Bool(),_276321_c));
		}
		goto _match_end_4398937952;
		_case_end_4398943376:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4398943952; }
		_case_begin_4398943952:;
		{
			jule::Ref<_1a89ca987_Const> _277121_c = _1a89ca987_Const::_static_method_new_i64(jule::MAX_I64);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_277121_c),jule::Bool(),_277121_c));
		}
		goto _match_end_4398937952;
		_case_end_4398943952:;
		_case_begin_4398939632:;
		{
			(*this)._method_push_err(_275639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_275639_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4398937952;
		_case_end_4398939632:;
		_match_end_4398937952:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_u8_type_static(_20542560a_Token _278438_ident) {
	
	
	{
		auto _match_expr{ _278438_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4398957408; }
		_case_begin_4398957408:;
		{
			jule::Ref<_1a89ca987_Const> _279021_c = _1a89ca987_Const::_static_method_new_u64(255LLU);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("u8", 2)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_279021_c),jule::Bool(),_279021_c));
		}
		goto _match_end_4398951856;
		_case_end_4398957408:;
		_case_begin_4398953696:;
		{
			(*this)._method_push_err(_278438_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_278438_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4398951856;
		_case_end_4398953696:;
		_match_end_4398951856:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_u16_type_static(_20542560a_Token _280339_ident) {
	
	
	{
		auto _match_expr{ _280339_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4398968464; }
		_case_begin_4398968464:;
		{
			jule::Ref<_1a89ca987_Const> _280921_c = _1a89ca987_Const::_static_method_new_u64(65535LLU);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("u16", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_280921_c),jule::Bool(),_280921_c));
		}
		goto _match_end_4398962912;
		_case_end_4398968464:;
		_case_begin_4398964752:;
		{
			(*this)._method_push_err(_280339_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_280339_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4398962912;
		_case_end_4398964752:;
		_match_end_4398962912:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_u32_type_static(_20542560a_Token _282239_ident) {
	
	
	{
		auto _match_expr{ _282239_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4398979520; }
		_case_begin_4398979520:;
		{
			jule::Ref<_1a89ca987_Const> _282821_c = _1a89ca987_Const::_static_method_new_u64(4294967295LLU);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("u32", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_282821_c),jule::Bool(),_282821_c));
		}
		goto _match_end_4398973968;
		_case_end_4398979520:;
		_case_begin_4398975808:;
		{
			(*this)._method_push_err(_282239_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_282239_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4398973968;
		_case_end_4398975808:;
		_match_end_4398973968:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_u64_type_static(_20542560a_Token _284139_ident) {
	
	
	{
		auto _match_expr{ _284139_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4398990416; }
		_case_begin_4398990416:;
		{
			jule::Ref<_1a89ca987_Const> _284721_c = _1a89ca987_Const::_static_method_new_u64(jule::MAX_U64);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("u64", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_284721_c),jule::Bool(),_284721_c));
		}
		goto _match_end_4398985024;
		_case_end_4398990416:;
		_case_begin_4398986704:;
		{
			(*this)._method_push_err(_284139_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_284139_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4398985024;
		_case_end_4398986704:;
		_match_end_4398985024:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_f32_type_tatic(_20542560a_Token _286038_ident) {
	
	
	
	{
		auto _match_expr{ _286038_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4399002656; }
		_case_begin_4399002656:;
		{
			jule::Ref<_1a89ca987_Const> _286721_c = _1a89ca987_Const::_static_method_new_f64(340282346638528860000000000000000000000.0);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_286721_c),jule::Bool(),_286721_c));
		}
		goto _match_end_4398997120;
		_case_end_4399002656:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4399003232; }
		_case_begin_4399003232:;
		{
			jule::Ref<_1a89ca987_Const> _287521_c = _1a89ca987_Const::_static_method_new_f64(-340282346638528860000000000000000000000.0);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287521_c),jule::Bool(),_287521_c));
		}
		goto _match_end_4398997120;
		_case_end_4399003232:;
		_case_begin_4398998928:;
		{
			(*this)._method_push_err(_286038_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_286038_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4398997120;
		_case_end_4398998928:;
		_match_end_4398997120:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_f64_type_static(_20542560a_Token _288839_ident) {
	
	
	
	{
		auto _match_expr{ _288839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4399017456; }
		_case_begin_4399017456:;
		{
			jule::Ref<_1a89ca987_Const> _289521_c = _1a89ca987_Const::_static_method_new_f64(jule::MAX_F64);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_289521_c),jule::Bool(),_289521_c));
		}
		goto _match_end_4399012080;
		_case_end_4399017456:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4399018032; }
		_case_begin_4399018032:;
		{
			jule::Ref<_1a89ca987_Const> _290321_c = _1a89ca987_Const::_static_method_new_f64(jule::MIN_F64);
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_290321_c),jule::Bool(),_290321_c));
		}
		goto _match_end_4399012080;
		_case_end_4399018032:;
		_case_begin_4399013728:;
		{
			(*this)._method_push_err(_288839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_288839_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399012080;
		_case_end_4399013728:;
		_match_end_4399012080:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_prim_static(jule::Str _291635_kind,_20542560a_Token _291646_ident) {
	{
		auto _match_expr{ _291635_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4399030096; }
		_case_begin_4399030096:;
		{
			return (*this)._method_eval_int_type_static(_291646_ident);
		}
		goto _match_end_4399026000;
		_case_end_4399030096:;
		if (!((jule::Str("uint", 4)) == _match_expr)) { goto _case_end_4399030672; }
		_case_begin_4399030672:;
		{
			return (*this)._method_eval_uint_type_static(_291646_ident);
		}
		goto _match_end_4399026000;
		_case_end_4399030672:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4399029888; }
		_case_begin_4399029888:;
		{
			return (*this)._method_eval_i8_type_static(_291646_ident);
		}
		goto _match_end_4399026000;
		_case_end_4399029888:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4399029488; }
		_case_begin_4399029488:;
		{
			return (*this)._method_eval_i16_type_static(_291646_ident);
		}
		goto _match_end_4399026000;
		_case_end_4399029488:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4399029600; }
		_case_begin_4399029600:;
		{
			return (*this)._method_eval_i32_type_static(_291646_ident);
		}
		goto _match_end_4399026000;
		_case_end_4399029600:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4399029712; }
		_case_begin_4399029712:;
		{
			return (*this)._method_eval_i64_type_static(_291646_ident);
		}
		goto _match_end_4399026000;
		_case_end_4399029712:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4399026784; }
		_case_begin_4399026784:;
		{
			return (*this)._method_eval_u8_type_static(_291646_ident);
		}
		goto _match_end_4399026000;
		_case_end_4399026784:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4399026896; }
		_case_begin_4399026896:;
		{
			return (*this)._method_eval_u16_type_static(_291646_ident);
		}
		goto _match_end_4399026000;
		_case_end_4399026896:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4399027008; }
		_case_begin_4399027008:;
		{
			return (*this)._method_eval_u32_type_static(_291646_ident);
		}
		goto _match_end_4399026000;
		_case_end_4399027008:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4399030832; }
		_case_begin_4399030832:;
		{
			return (*this)._method_eval_u64_type_static(_291646_ident);
		}
		goto _match_end_4399026000;
		_case_end_4399030832:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4399030944; }
		_case_begin_4399030944:;
		{
			return (*this)._method_eval_f32_type_tatic(_291646_ident);
		}
		goto _match_end_4399026000;
		_case_end_4399030944:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4399031056; }
		_case_begin_4399031056:;
		{
			return (*this)._method_eval_f64_type_static(_291646_ident);
		}
		goto _match_end_4399026000;
		_case_end_4399031056:;
		_case_begin_4399026400:;
		{
			(*this)._method_push_err(_291646_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_291635_kind),jule::Any(_291646_ident._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399026000;
		_case_end_4399026400:;
		_match_end_4399026000:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_type_static(jule::Ref<_1da2d3bdc_Data> _293639_d,jule::Ref<_2053703bd_SubIdentExpr> _293653_si) {
	{
		if (!((jule::real(_293639_d->_field_kind->_method_prim())))) { goto _case_end_4399050608; }
		_case_begin_4399050608:;
		{
			return (*this)._method_eval_prim_static(_293639_d->_field_kind->_method_prim()->_method_to_str(),_293653_si->_field_ident);
		}
		goto _match_end_4399046416;
		_case_end_4399050608:;
		if (!((jule::real(_293639_d->_field_kind->_method_enm())))) { goto _case_end_4399051184; }
		_case_begin_4399051184:;
		{
			return (*this)._method_eval_enum_static(_293639_d->_field_kind->_method_enm(),_293653_si->_field_ident);
		}
		goto _match_end_4399046416;
		_case_end_4399051184:;
		if (!((jule::real(_293639_d->_field_kind->_method_strct())))) { goto _case_end_4399050400; }
		_case_begin_4399050400:;
		{
			return (*this)._method_eval_struct_static(_293639_d->_field_kind->_method_strct(),_293653_si->_field_ident);
		}
		goto _match_end_4399046416;
		_case_end_4399050400:;
		_case_begin_4399046608:;
		{
			(*this)._method_push_err(_293653_si->_field_ident,jule::Str("type @ is not supports sub fields", 33),jule::Slice<jule::Any>({jule::Any(_293639_d->_field_kind->_method_to_str())}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399046416;
		_case_end_4399046608:;
		_match_end_4399046416:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_obj_sub_ident(jule::Ref<_1da2d3bdc_Data> _295341_d,jule::Ref<_2053703bd_SubIdentExpr> _295355_si) {
	jule::Ref<_1da411226_TypeKind> _295417_kind = _295341_d->_field_kind;
	if (jule::real(_295341_d->_field_kind->_method_ptr())) {
		jule::Ref<_1da411226_Ptr> _295617_ptr = _295341_d->_field_kind->_method_ptr();
		if ((!(_295617_ptr->_method_is_unsafe()))) {
			if ((!(_295355_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_295355_si->_field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			}
			_295417_kind=_295341_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (jule::real(_295341_d->_field_kind->_method_ref())) {
		_295417_kind=_295341_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real(_295341_d->_field_kind->_method_trt())))) { goto _case_end_4399071568; }
		_case_begin_4399071568:;
		{
			return (*this)._method_eval_trait_sub_ident(_295341_d,_295341_d->_field_kind->_method_trt(),_295355_si->_field_ident);
		}
		goto _match_end_4399069920;
		_case_end_4399071568:;
		if (!((jule::real(_295417_kind->_method_strct())))) { goto _case_end_4399071680; }
		_case_begin_4399071680:;
		{
			jule::Ref<_2053cdc01_StructIns> _297217_s = _295417_kind->_method_strct();
			if (_1da2d3bdc_is_instanced_struct(_297217_s)) {
				jule::Bool _297425_used_reference_elem = jule::real(_295341_d->_field_kind->_method_ref());
				return (*this)._method_eval_struct_sub_ident(_295341_d,_295417_kind->_method_strct(),_295355_si,_297425_used_reference_elem);
			}
		}
		goto _match_end_4399069920;
		_case_end_4399071680:;
		if (!((jule::real(_295417_kind->_method_slc())))) { goto _case_end_4399071792; }
		_case_begin_4399071792:;
		{
			return (*this)._method_eval_slice_sub_ident(_295341_d,_295355_si->_field_ident);
		}
		goto _match_end_4399069920;
		_case_end_4399071792:;
		if (!((jule::real(_295417_kind->_method_arr())))) { goto _case_end_4399071904; }
		_case_begin_4399071904:;
		{
			return (*this)._method_eval_array_sub_ident(_295341_d,_295355_si->_field_ident);
		}
		goto _match_end_4399069920;
		_case_end_4399071904:;
		if (!((jule::real(_295417_kind->_method_map())))) { goto _case_end_4399072016; }
		_case_begin_4399072016:;
		{
			return (*this)._method_eval_map_sub_ident(_295341_d,_295355_si->_field_ident);
		}
		goto _match_end_4399069920;
		_case_end_4399072016:;
		if (!((jule::real(_295417_kind->_method_prim())))) { goto _case_end_4399072128; }
		_case_begin_4399072128:;
		{
			jule::Ref<_1da411226_Prim> _298817_p = _295417_kind->_method_prim();
			{
				auto _match_expr{ _298817_p->_field_kind };
				if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4399088720; }
				_case_begin_4399088720:;
				{
					return (*this)._method_eval_str_sub_ident(_295341_d,_295355_si->_field_ident);
				}
				goto _match_end_4399088064;
				_case_end_4399088720:;
				_match_end_4399088064:;
			}
		}
		goto _match_end_4399069920;
		_case_end_4399072128:;
		_match_end_4399069920:;
	}
	(*this)._method_push_err(_295355_si->_field_ident,jule::Str("object @ is not supports sub fields", 35),jule::Slice<jule::Any>({jule::Any(_295341_d->_field_kind->_method_to_str())}));
	return jule::new_ref<_1da2d3bdc_Data>();
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_sub_ident(jule::Ref<_2053703bd_SubIdentExpr> _299938_si) {
	jule::Ref<_1da411226_TypeKind> _300017_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_300017_prefix;
	});
	jule::Ref<_1da2d3bdc_Data> _300417_d = this->self->_method_eval_expr_kind(_299938_si->_field_expr);
	if ((!(jule::real(_300417_d)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_300417_d->_field_decl) {
		return this->self->_method_eval_type_static(_300417_d,_299938_si);
	}
	return this->self->_method_eval_obj_sub_ident(_300417_d,_299938_si);
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_tuple(jule::Ref<_2053703bd_TupleExpr> _301634_tup) {
	jule::Ref<_1da411226_Tuple> _301717_tup_t = jule::new_struct<_1da411226_Tuple>(new( std::nothrow ) _1da411226_Tuple());
	_301717_tup_t->_field_types=jule::Slice<jule::Ref<_1da411226_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_301634_tup->_field_expr.len())));
	jule::Ref<_206e63542_TupleExprModel> _302017_model = jule::new_struct<_206e63542_TupleExprModel>(new( std::nothrow ) _206e63542_TupleExprModel(jule::Slice<jule::Ref<_1da2d3bdc_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_301634_tup->_field_expr.len())))));
	jule::Bool _302417_ok = true;
	{
		auto _range_expr = _301634_tup->_field_expr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da2d3bdc_i = 0;
			jule::Ref<_2053703bd_Expr> _1da2d3bdc_expr = *_range_begin;
			_iter_begin_4399112304:;
			{
				jule::Ref<_1da2d3bdc_Data> _302621_d = this->self->_method_eval_expr_kind(_1da2d3bdc_expr->_field_kind);
				if ((!(jule::real(_302621_d)))) {
					_302417_ok=false;
					goto _iter_next_4399112304;
				}
				_301717_tup_t->_field_types[static_cast<jule::Int>(_1da2d3bdc_i)]=_302621_d->_field_kind;
				_302017_model->_field_datas[static_cast<jule::Int>(_1da2d3bdc_i)]=_302621_d;
			}
			_iter_next_4399112304:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da2d3bdc_i; _1da2d3bdc_expr = *_range_begin; goto _iter_begin_4399112304; }
			_iter_end_4399112304:;
		}
	}
	if ((!(_302417_ok))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_301717_tup_t)),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_302017_model),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_map(jule::Ref<_1da411226_Map> _304532_m,jule::Ref<_2053703bd_BraceLit> _304545_lit) {
	jule::Ref<_206e63542_MapExprModel> _304617_model = jule::new_struct<_206e63542_MapExprModel>(new( std::nothrow ) _206e63542_MapExprModel(_304532_m->_field_key,_304532_m->_field_val,jule::Slice<jule::Ref<_206e63542_KeyValPairExprModel>>()));
	{
		auto _range_expr = _304545_lit->_field_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1da2d3bdc_expr = *_range_begin;
			_iter_begin_4399129408:;
			{
				{
					auto _match_expr{ _1da2d3bdc_expr };
					if (!(_match_expr.type_is<jule::Ref<_2053703bd_KeyValPair>>())) { goto _case_end_4399133664; }
					goto _match_end_4399130624;
					_case_end_4399133664:;
					_case_begin_4399131152:;
					{
						this->self->_method_push_err(_304545_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						return jule::new_ref<_1da2d3bdc_Data>();
					}
					goto _match_end_4399130624;
					_case_end_4399131152:;
					_match_end_4399130624:;
				}
				jule::Ref<_2053703bd_KeyValPair> _306121_pair = _1da2d3bdc_expr.operator jule::Ref<_2053703bd_KeyValPair>();
				jule::Ref<_1da2d3bdc_Data> _306321_key = this->self->_method_eval_expr_kind(_306121_pair->_field_key);
				if ((!(jule::real(_306321_key)))) {
					return jule::new_ref<_1da2d3bdc_Data>();
				}
				jule::Ref<_1da2d3bdc_Data> _306821_val = this->self->_method_eval_expr_kind(_306121_pair->_field_val);
				if ((!(jule::real(_306821_val)))) {
					return jule::new_ref<_1da2d3bdc_Data>();
				}
				this->self->_field_s->_method_check_assign_type(_304532_m->_field_key,_306321_key,_306121_pair->_field_colon,true);
				this->self->_field_s->_method_check_assign_type(_304532_m->_field_val,_306821_val,_306121_pair->_field_colon,true);
				_304617_model->_field_entries=jule::append(_304617_model->_field_entries,jule::Slice<jule::Ref<_206e63542_KeyValPairExprModel>>({jule::new_struct<_206e63542_KeyValPairExprModel>(new( std::nothrow ) _206e63542_KeyValPairExprModel(_306321_key->_field_model,_306821_val->_field_model))}));
			}
			_iter_next_4399129408:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2d3bdc_expr = *_range_begin; goto _iter_begin_4399129408; }
			_iter_end_4399129408:;
		}
	}
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_304532_m)),jule::Ref<_1da411226_TypeKind>(),true,jule::Bool(),false,false,jule::Bool(),jule::Any(_304617_model),false,jule::Ref<_1a89ca987_Const>()));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_brace_lit(jule::Ref<_2053703bd_BraceLit> _309238_lit) {
	{
		if (!(((!(jule::real(this->self->_field_prefix)))))) { goto _case_end_4399151856; }
		_case_begin_4399151856:;
		{
			this->self->_method_push_err(_309238_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399149136;
		_case_end_4399151856:;
		if (!((jule::real(this->self->_field_prefix->_method_map())))) { goto _case_end_4399153040; }
		_case_begin_4399153040:;
		{
			return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_309238_lit);
		}
		goto _match_end_4399149136;
		_case_end_4399153040:;
		if (!((jule::real(this->self->_field_prefix->_method_strct())))) { goto _case_end_4399152704; }
		_case_begin_4399152704:;
		{
			return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_309238_lit->_field_exprs,_309238_lit->_field_token);
		}
		goto _match_end_4399149136;
		_case_end_4399152704:;
		_case_begin_4399149312:;
		{
			this->self->_method_push_err(_309238_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399149136;
		_case_end_4399149312:;
		_match_end_4399149136:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_anon_fn(jule::Ref<_2053703bd_FnDecl> _311035_decl) {
	_1da411226_TypeChecker _311117_tc = _1da411226_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1da411226_Referencer>(),_20542560a_Token(),jule::Slice<jule::Ref<_2053703bd_GenericDecl>>(),jule::Slice<jule::Ref<_1da411226_TypeAlias>>(),jule::Bool());
	jule::Ref<_2053ddd54_FnIns> _311517_ins = _311117_tc._method_build_fn(_311035_decl);
	_311517_ins->_field_anon=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_ScopeChecker>>())) { goto _case_end_4399167584; }
		_case_begin_4399167584:;
		{
			jule::Ref<_206b0557a_ScopeChecker> _312021_sc = (*this)._field_lookup.operator jule::Ref<_206b0557a_ScopeChecker>();
			jule::Ref<_206b0557a_ScopeChecker> _312121_scc = _312021_sc->_method_new_child_checker();
			_312121_scc->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_206b0557a_ScopeLabel>>>(nullptr);
			_312121_scc->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_206b0557a_ScopeGoto>>>(nullptr);
			jule::drop(_312121_scc->_field_owner);
			_312121_scc->_field_child_index=0LL;
			_312121_scc->_field_it=0LL;
			_312121_scc->_field_cse=0LL;
			_312121_scc->_field_owner=_311517_ins;
			(*this)._field_s->_method_check_fn_ins_sc(_311517_ins,_312121_scc);
		}
		goto _match_end_4399165792;
		_case_end_4399167584:;
		_case_begin_4399165984:;
		{
			(*this)._field_s->_method_check_fn_ins(_311517_ins);
		}
		goto _match_end_4399165792;
		_case_end_4399165984:;
		_match_end_4399165792:;
	}
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_311517_ins)),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_AnonFnExprModel>(new( std::nothrow ) _206e63542_AnonFnExprModel(_311517_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_binop(jule::Ref<_2053703bd_BinopExpr> _314434_op) {
	jule::Ref<_1da411226_TypeKind> _314517_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_314517_prefix;
	});
	_1da2d3bdc_BinopSolver _314917_bs = _1da2d3bdc_BinopSolver(this->self,jule::Ref<_1da2d3bdc_Data>(),jule::Ref<_1da2d3bdc_Data>(),_20542560a_Token());
	return _314917_bs._method_solve(_314434_op);
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_expr_kind(jule::Any _315538_kind) {
	jule::Ref<_1da2d3bdc_Data> _315617_d = jule::new_ref<_1da2d3bdc_Data>();
	{
		auto _match_expr{ _315538_kind };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_LitExpr>>())) { goto _case_end_4399192096; }
		_case_begin_4399192096:;
		{
			_315617_d=this->self->_method_eval_lit(_315538_kind.operator jule::Ref<_2053703bd_LitExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399192096:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_IdentExpr>>())) { goto _case_end_4399191424; }
		_case_begin_4399191424:;
		{
			_315617_d=this->self->_method_eval_ident(_315538_kind.operator jule::Ref<_2053703bd_IdentExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399191424:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_UnaryExpr>>())) { goto _case_end_4399191536; }
		_case_begin_4399191536:;
		{
			_315617_d=this->self->_method_eval_unary(_315538_kind.operator jule::Ref<_2053703bd_UnaryExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399191536:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_VariadicExpr>>())) { goto _case_end_4399191648; }
		_case_begin_4399191648:;
		{
			_315617_d=this->self->_method_eval_variadic(_315538_kind.operator jule::Ref<_2053703bd_VariadicExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399191648:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_UnsafeExpr>>())) { goto _case_end_4399192576; }
		_case_begin_4399192576:;
		{
			_315617_d=this->self->_method_eval_unsafe(_315538_kind.operator jule::Ref<_2053703bd_UnsafeExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399192576:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_SliceExpr>>())) { goto _case_end_4399192688; }
		_case_begin_4399192688:;
		{
			_315617_d=this->self->_method_eval_slice_expr(_315538_kind.operator jule::Ref<_2053703bd_SliceExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399192688:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_IndexingExpr>>())) { goto _case_end_4399192800; }
		_case_begin_4399192800:;
		{
			_315617_d=this->self->_method_eval_indexing(_315538_kind.operator jule::Ref<_2053703bd_IndexingExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399192800:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_SlicingExpr>>())) { goto _case_end_4399192912; }
		_case_begin_4399192912:;
		{
			_315617_d=this->self->_method_eval_slicing(_315538_kind.operator jule::Ref<_2053703bd_SlicingExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399192912:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_CastExpr>>())) { goto _case_end_4399193024; }
		_case_begin_4399193024:;
		{
			_315617_d=this->self->_method_eval_cast(_315538_kind.operator jule::Ref<_2053703bd_CastExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399193024:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_NsSelectionExpr>>())) { goto _case_end_4399193136; }
		_case_begin_4399193136:;
		{
			_315617_d=this->self->_method_eval_ns_selection(_315538_kind.operator jule::Ref<_2053703bd_NsSelectionExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399193136:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_StructLit>>())) { goto _case_end_4399193248; }
		_case_begin_4399193248:;
		{
			_315617_d=this->self->_method_eval_struct_lit(_315538_kind.operator jule::Ref<_2053703bd_StructLit>());
		}
		goto _match_end_4399189760;
		_case_end_4399193248:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_TypeDecl>>())) { goto _case_end_4399193360; }
		_case_begin_4399193360:;
		{
			_315617_d=this->self->_method_eval_type(_315538_kind.operator jule::Ref<_2053703bd_TypeDecl>());
		}
		goto _match_end_4399189760;
		_case_end_4399193360:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_FnCallExpr>>())) { goto _case_end_4399193472; }
		_case_begin_4399193472:;
		{
			_315617_d=this->self->_method_eval_fn_call(_315538_kind.operator jule::Ref<_2053703bd_FnCallExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399193472:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_SubIdentExpr>>())) { goto _case_end_4399193584; }
		_case_begin_4399193584:;
		{
			_315617_d=this->self->_method_eval_sub_ident(_315538_kind.operator jule::Ref<_2053703bd_SubIdentExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399193584:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_TupleExpr>>())) { goto _case_end_4399193696; }
		_case_begin_4399193696:;
		{
			_315617_d=this->self->_method_eval_tuple(_315538_kind.operator jule::Ref<_2053703bd_TupleExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399193696:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_BraceLit>>())) { goto _case_end_4399193808; }
		_case_begin_4399193808:;
		{
			_315617_d=this->self->_method_eval_brace_lit(_315538_kind.operator jule::Ref<_2053703bd_BraceLit>());
		}
		goto _match_end_4399189760;
		_case_end_4399193808:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_FnDecl>>())) { goto _case_end_4399193920; }
		_case_begin_4399193920:;
		{
			_315617_d=this->self->_method_eval_anon_fn(_315538_kind.operator jule::Ref<_2053703bd_FnDecl>());
		}
		goto _match_end_4399189760;
		_case_end_4399193920:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_BinopExpr>>())) { goto _case_end_4399194048; }
		_case_begin_4399194048:;
		{
			_315617_d=this->self->_method_eval_binop(_315538_kind.operator jule::Ref<_2053703bd_BinopExpr>());
		}
		goto _match_end_4399189760;
		_case_end_4399194048:;
		_case_begin_4399190704:;
		{
			jule::drop(_315617_d);
		}
		goto _match_end_4399189760;
		_case_end_4399190704:;
		_match_end_4399189760:;
	}
	if ((!(jule::real(_315617_d)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if ((!(jule::real(_315617_d->_field_kind)))) {
		return _315617_d;
	}
	if ((((!(jule::real(_315617_d->_field_cast_kind))) && _315617_d->_method_is_const()) && (!(_315617_d->_field_is_rune))) && jule::real(_315617_d->_field_kind->_method_prim())) {
		{
			if (!((_315617_d->_field_constant->_method_is_i64()))) { goto _case_end_4399228096; }
			_case_begin_4399228096:;
			{
				if (_1da120d15_int_assignable(jule::Str("int", 3),_315617_d)) {
					_315617_d->_field_kind->_field_kind=_1da411226_build_prim_type(jule::Str("int", 3));
					_315617_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_315617_d->_field_constant->_method_as_i64()));
				}
			}
			goto _match_end_4399227872;
			_case_end_4399228096:;
			if (!((_315617_d->_field_constant->_method_is_u64()))) { goto _case_end_4399228224; }
			_case_begin_4399228224:;
			{
				if (_1da120d15_int_assignable(jule::Str("uint", 4),_315617_d)) {
					_315617_d->_field_kind->_field_kind=_1da411226_build_prim_type(jule::Str("uint", 4));
					_315617_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_315617_d->_field_constant->_method_as_u64()));
				}
			}
			goto _match_end_4399227872;
			_case_end_4399228224:;
			_match_end_4399227872:;
		}
	}
	if ((!(_315617_d->_field_decl))) {
		if ((((((jule::real(this->self->_field_prefix) && (!(jule::real(_315617_d->_field_cast_kind)))) && (!(_315617_d->_field_variadiced))) && (!(_315617_d->_field_lvalue))) && (!(_315617_d->_method_is_const()))) && jule::real(_315617_d->_field_kind->_method_prim())) && _1a8a8de8a_is_num(_315617_d->_field_kind->_method_prim()->_field_kind)) {
			_315617_d->_field_cast_kind=_315617_d->_field_kind;
		}
		_1da2d3bdc_apply_cast_kind(_315617_d);
		if ((!(jule::real(_315617_d->_field_kind->_method_prim()))) || (!(_315617_d->_field_kind->_method_prim()->_method_is_any()))) {
			if ((jule::real(this->self->_field_prefix) && jule::real(this->self->_field_prefix->_method_prim())) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_315617_d->_field_cast_kind=this->self->_field_prefix;
				_1da2d3bdc_apply_cast_kind_model(_315617_d);
				jule::drop(_315617_d->_field_cast_kind);
			}
		}
	}
	return _315617_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval(jule::Ref<_2053703bd_Expr> _323128_expr) {
	jule::Ref<_1da2d3bdc_Data> _323217_d = this->self->_method_eval_expr_kind(_323128_expr->_field_kind);
	if ((!(jule::real(_323217_d))) || (!(jule::real(_323217_d->_field_kind)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		if (!((jule::real(_323217_d->_field_kind->_method_fnc())))) { goto _case_end_4399258240; }
		_case_begin_4399258240:;
		{
			jule::Ref<_2053ddd54_FnIns> _323921_f = _323217_d->_field_kind->_method_fnc();
			if (_323921_f->_method_is_builtin()) {
				goto _match_end_4399258000;
			}
			if (_323921_f->_field_generics.len() != _323921_f->_field_decl->_field_generics.len()) {
				this->self->_field_s->_method_push_err(_323128_expr->_field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			}
			if (_323921_f->_field_decl->_method_is_method()) {
				this->self->_field_s->_method_push_err(_323128_expr->_field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4399258000;
		_case_end_4399258240:;
		_match_end_4399258000:;
	}
	return _323217_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_Eval::_method_eval_expr(jule::Ref<_2053703bd_Expr> _325933_expr) {
	jule::Ref<_1da2d3bdc_Data> _326017_d = this->self->_method_eval(_325933_expr);
	{
		if (!(((!(jule::real(_326017_d)))))) { goto _case_end_4399272928; }
		_case_begin_4399272928:;
		{
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399271344;
		_case_end_4399272928:;
		if (!((_326017_d->_field_decl))) { goto _case_end_4399273280; }
		_case_begin_4399273280:;
		{
			this->self->_method_push_err(_325933_expr->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399271344;
		_case_end_4399273280:;
		_case_begin_4399271568:;
		{
			return _326017_d;
		}
		goto _match_end_4399271344;
		_case_end_4399271568:;
		_match_end_4399271344:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1da2d3bdc_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da2d3bdc_BinopSolver::_method_check_type_compatibility(void) {
	_1da120d15_TypeCompatibilityChecker _328417_tcc = _1da120d15_TypeCompatibilityChecker((*this)._field_e->_field_s,(*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op,jule::Bool(),true,jule::Bool());
	return _328417_tcc._method_check();
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_nil(void) {
	if ((!((*this)._field_r->_field_kind->_method_nil_compatible()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4399291856; }
		_case_begin_4399291856:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4399287328;
		_case_end_4399291856:;
		_case_begin_4399282544:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399287328;
		_case_end_4399282544:;
		_match_end_4399287328:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_enum(void) {
	jule::Ref<_206b06c0d_Enum> _331617_enm = (*this)._field_l->_field_kind->_method_enm();
	if ((!(jule::real((*this)._field_r->_field_kind->_method_enm()))) || ((_331617_enm).alloc != ((*this)._field_r->_field_kind->_method_enm()).alloc)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_331617_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4399307456; }
		_case_begin_4399307456:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4399296272;
		_case_end_4399307456:;
		if (!((jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr)) { goto _case_end_4399308032; }
		_case_begin_4399308032:;
		{
			if ((!(jule::real(_331617_enm->_field_kind->_field_kind->_method_prim()))) || (!(_1a8a8de8a_is_int(_331617_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_331617_enm->_field_ident)}));
			}
			return (*this)._field_l;
		}
		goto _match_end_4399296272;
		_case_end_4399308032:;
		_case_begin_4399302880:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_331617_enm->_field_ident)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399296272;
		_case_end_4399302880:;
		_match_end_4399296272:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_ptr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4399326624; }
		_case_begin_4399326624:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4399321952;
		_case_end_4399326624:;
		_case_begin_4399316368:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399321952;
		_case_end_4399316368:;
		_match_end_4399321952:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4399339584; }
		_case_begin_4399339584:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4399335008;
		_case_end_4399339584:;
		_case_begin_4399333840:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399335008;
		_case_end_4399333840:;
		_match_end_4399335008:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4399352832; }
		_case_begin_4399352832:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4399343488;
		_case_end_4399352832:;
		_case_begin_4399347120:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399343488;
		_case_end_4399347120:;
		_match_end_4399343488:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4399365344; }
		_case_begin_4399365344:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4399360768;
		_case_end_4399365344:;
		_case_begin_4399359600:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399360768;
		_case_end_4399359600:;
		_match_end_4399360768:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4399377856; }
		_case_begin_4399377856:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4399373280;
		_case_end_4399377856:;
		_case_begin_4399372112:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399373280;
		_case_end_4399372112:;
		_match_end_4399373280:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4399390368; }
		_case_begin_4399390368:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4399385792;
		_case_end_4399390368:;
		_case_begin_4399384624:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399385792;
		_case_end_4399384624:;
		_match_end_4399385792:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_any(void) {
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4399396512; }
		_case_begin_4399396512:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4399392832;
		_case_end_4399396512:;
		_case_begin_4399393184:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399392832;
		_case_end_4399393184:;
		_match_end_4399392832:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("&&", 2)) == _match_expr || (jule::Str("||", 2)) == _match_expr)) { goto _case_end_4399410384; }
		_case_begin_4399410384:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4399405680;
		_case_end_4399410384:;
		_case_begin_4399404608:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399405680;
		_case_end_4399404608:;
		_match_end_4399405680:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_str(void) {
	jule::Str _351017_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_351017_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_351017_rk)}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4399421712; }
		_case_begin_4399421712:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4399418544;
		_case_end_4399421712:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4399422576; }
		_case_begin_4399422576:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4399418544;
		_case_end_4399422576:;
		_case_begin_4399417792:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399418544;
		_case_end_4399417792:;
		_match_end_4399418544:;
	}
}



inline void _1da2d3bdc_BinopSolver::_method_set_type_to_greater(void) {
	if (((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!((*this)._field_l->_method_is_const())) && (!((*this)._field_r->_method_is_const())))) {
		jule::Str _353617_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _353717_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_1da90ea98_is_greater(_353717_rk,_353617_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



inline void _1da2d3bdc_BinopSolver::_method_check_mod_data(jule::Ref<_1da2d3bdc_Data> _355237_d) {
	if ((!(_355237_d->_method_is_const()))) {
		if ((!(jule::real(_355237_d->_field_kind->_method_prim()))) || (!(_1a8a8de8a_is_int(_355237_d->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		return;
	}
	{
		if (!((_1da120d15_sig_assignable(jule::Str("i64", 3),_355237_d)))) { goto _case_end_4399447328; }
		_case_begin_4399447328:;
		{
			_355237_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_355237_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4399439568;
		_case_end_4399447328:;
		if (!((_1da120d15_unsig_assignable(jule::Str("u64", 3),_355237_d)))) { goto _case_end_4399447440; }
		_case_begin_4399447440:;
		{
			_355237_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_355237_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4399439568;
		_case_end_4399447440:;
		_case_begin_4399439696:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4399439568;
		_case_end_4399439696:;
		_match_end_4399439568:;
	}
}



inline void _1da2d3bdc_BinopSolver::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



inline jule::Bool _1da2d3bdc_BinopSolver::_method_numbers_are_compatibile(jule::Str& _357739_lk,jule::Str& _357749_rk) {
	if ((*this)._field_l->_method_is_const()) {
		return true;
	}
	if (_357739_lk == jule::Str("f32", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _357749_rk == jule::Str("f32", 3);
	}
	if (_357739_lk == jule::Str("f64", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _357749_rk == jule::Str("f64", 3);
	}
	if ((*this)._field_r->_method_is_const()) {
		if ((!((*this)._field_r->_field_constant->_method_is_f64()))) {
			return true;
		}
		{
			auto _match_expr{ (*this)._field_r->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1a89ca987_Const>>())) { goto _case_end_4399468928; }
			_case_begin_4399468928:;
			{
				return _1da120d15_int_assignable(jule::Str("int", 3),(*this)._field_r) || _1da120d15_int_assignable(jule::Str("uint", 4),(*this)._field_r);
			}
			goto _match_end_4399465552;
			_case_end_4399468928:;
			_case_begin_4399468592:;
			{
				return false;
			}
			goto _match_end_4399465552;
			_case_end_4399468592:;
			_match_end_4399465552:;
		}
	}
	return (!(_1a8a8de8a_is_float(_357749_rk)));
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_float(void) {
	jule::Str _361613_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _361713_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_361613_lk,_361713_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_361613_lk),jule::Any(_361713_rk)}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4399477248; }
		_case_begin_4399477248:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4399481248;
		_case_end_4399477248:;
		_match_end_4399481248:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr)) { goto _case_end_4399488000; }
		_case_begin_4399488000:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4399483872;
		_case_end_4399488000:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4399488576; }
		_case_begin_4399488576:;
		{
			if ((!(_1a8a8de8a_is_int(_361713_rk)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_361613_lk),jule::Any(_361713_rk)}));
				return jule::new_ref<_1da2d3bdc_Data>();
			}
			(*this)._method_mod();
			return (*this)._field_r;
		}
		goto _match_end_4399483872;
		_case_end_4399488576:;
		_case_begin_4399484688:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399483872;
		_case_end_4399484688:;
		_match_end_4399483872:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _366213_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _366313_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_366213_lk,_366313_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_366213_lk),jule::Any(_366313_rk)}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4399498640; }
		_case_begin_4399498640:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4399502848;
		_case_end_4399498640:;
		_match_end_4399502848:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4399509504; }
		_case_begin_4399509504:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4399503168;
		_case_end_4399509504:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4399510080; }
		_case_begin_4399510080:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4399503168;
		_case_end_4399510080:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4399509296; }
		_case_begin_4399509296:;
		{
			if ((!(_1da2d3bdc_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1da2d3bdc_Data>();
			}
			if ((*this)._field_l->_method_is_const()) {
				(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
			}
			return (*this)._field_l;
		}
		goto _match_end_4399503168;
		_case_end_4399509296:;
		_case_begin_4399506288:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for unsigned integer type(s)", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399503168;
		_case_end_4399506288:;
		_match_end_4399503168:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _372113_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _372213_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_372113_lk,_372213_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_372113_lk),jule::Any(_372213_rk)}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4399523856; }
		_case_begin_4399523856:;
		{
			return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
		}
		goto _match_end_4399528000;
		_case_end_4399523856:;
		_match_end_4399528000:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4399534704; }
		_case_begin_4399534704:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4399530592;
		_case_end_4399534704:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4399535280; }
		_case_begin_4399535280:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4399530592;
		_case_end_4399535280:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4399534496; }
		_case_begin_4399534496:;
		{
			if ((!(_1da2d3bdc_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1da2d3bdc_Data>();
			}
			return (*this)._field_l;
		}
		goto _match_end_4399530592;
		_case_end_4399534496:;
		_case_begin_4399531744:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399530592;
		_case_end_4399531744:;
		_match_end_4399530592:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval_prim(void) {
	jule::Ref<_1da411226_Prim> _377613_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (!((_377613_prim->_method_is_any()))) { goto _case_end_4399545392; }
		_case_begin_4399545392:;
		{
			return (*this)._method_eval_any();
		}
		goto _match_end_4399545200;
		_case_end_4399545392:;
		if (!((_377613_prim->_method_is_bool()))) { goto _case_end_4399545520; }
		_case_begin_4399545520:;
		{
			return (*this)._method_eval_bool();
		}
		goto _match_end_4399545200;
		_case_end_4399545520:;
		if (!((_377613_prim->_method_is_str()))) { goto _case_end_4399545648; }
		_case_begin_4399545648:;
		{
			return (*this)._method_eval_str();
		}
		goto _match_end_4399545200;
		_case_end_4399545648:;
		_match_end_4399545200:;
	}
	jule::Ref<_1da411226_Prim> _378313_rprim = (*this)._field_r->_field_kind->_method_prim();
	if ((!(jule::real(_378313_rprim)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_377613_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Str _378913_lk = _377613_prim->_method_to_str();
	{
		if (!((_1a8a8de8a_is_float(_378913_lk)))) { goto _case_end_4399559776; }
		_case_begin_4399559776:;
		{
			return (*this)._method_eval_float();
		}
		goto _match_end_4399551696;
		_case_end_4399559776:;
		if (!((_1a8a8de8a_is_unsig_int(_378913_lk)))) { goto _case_end_4399558784; }
		_case_begin_4399558784:;
		{
			return (*this)._method_eval_unsig_int();
		}
		goto _match_end_4399551696;
		_case_end_4399558784:;
		if (!((_1a8a8de8a_is_sig_int(_378913_lk)))) { goto _case_end_4399558992; }
		_case_begin_4399558992:;
		{
			return (*this)._method_eval_sig_int();
		}
		goto _match_end_4399551696;
		_case_end_4399558992:;
		_case_begin_4399551824:;
		{
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399551696;
		_case_end_4399551824:;
		_match_end_4399551696:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_eval(void) {
	{
		if (!(((*this)._field_l->_field_kind->_method_void()))) { goto _case_end_4399565984; }
		_case_begin_4399565984:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399563920;
		_case_end_4399565984:;
		if (!(((*this)._field_l->_field_kind->_method_is_nil()))) { goto _case_end_4399566560; }
		_case_begin_4399566560:;
		{
			return (*this)._method_eval_nil();
		}
		goto _match_end_4399563920;
		_case_end_4399566560:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_enm())))) { goto _case_end_4399565776; }
		_case_begin_4399565776:;
		{
			return (*this)._method_eval_enum();
		}
		goto _match_end_4399563920;
		_case_end_4399565776:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_ptr())))) { goto _case_end_4399566224; }
		_case_begin_4399566224:;
		{
			return (*this)._method_eval_ptr();
		}
		goto _match_end_4399563920;
		_case_end_4399566224:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_arr())))) { goto _case_end_4399566336; }
		_case_begin_4399566336:;
		{
			return (*this)._method_eval_arr();
		}
		goto _match_end_4399563920;
		_case_end_4399566336:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_slc())))) { goto _case_end_4399565168; }
		_case_begin_4399565168:;
		{
			return (*this)._method_eval_slc();
		}
		goto _match_end_4399563920;
		_case_end_4399565168:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_fnc())))) { goto _case_end_4399565280; }
		_case_begin_4399565280:;
		{
			return (*this)._method_eval_fn();
		}
		goto _match_end_4399563920;
		_case_end_4399565280:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_trt()) || jule::real((*this)._field_r->_field_kind->_method_trt())))) { goto _case_end_4399565392; }
		_case_begin_4399565392:;
		{
			if (jule::real((*this)._field_r->_field_kind->_method_trt())) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			return (*this)._method_eval_trait();
		}
		goto _match_end_4399563920;
		_case_end_4399565392:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_strct())))) { goto _case_end_4399564416; }
		_case_begin_4399564416:;
		{
			return (*this)._method_eval_struct();
		}
		goto _match_end_4399563920;
		_case_end_4399564416:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_prim())))) { goto _case_end_4399564528; }
		_case_begin_4399564528:;
		{
			return (*this)._method_eval_prim();
		}
		goto _match_end_4399563920;
		_case_end_4399564528:;
		_case_begin_4399564112:;
		{
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		goto _match_end_4399563920;
		_case_end_4399564112:;
		_match_end_4399563920:;
	}
}



inline void _1da2d3bdc_BinopSolver::_method_assign_shift(jule::Ref<_1da2d3bdc_Data> _383931_d,jule::F64 _383941_r) {
	{
		if (!((_383941_r <= 6LL))) { goto _case_end_4399594592; }
		_case_begin_4399594592:;
		{
			_383931_d->_field_kind->_method_prim()->_field_kind=jule::Str("i8", 2);
			_383931_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_383931_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4399593936;
		_case_end_4399594592:;
		if (!((_383941_r <= 7LL))) { goto _case_end_4399594704; }
		_case_begin_4399594704:;
		{
			_383931_d->_field_kind->_method_prim()->_field_kind=jule::Str("u8", 2);
			_383931_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_383931_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4399593936;
		_case_end_4399594704:;
		if (!((_383941_r <= 14LL))) { goto _case_end_4399598144; }
		_case_begin_4399598144:;
		{
			_383931_d->_field_kind->_method_prim()->_field_kind=jule::Str("i16", 3);
			_383931_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_383931_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4399593936;
		_case_end_4399598144:;
		if (!((_383941_r <= 15LL))) { goto _case_end_4399598256; }
		_case_begin_4399598256:;
		{
			_383931_d->_field_kind->_method_prim()->_field_kind=jule::Str("u16", 3);
			_383931_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_383931_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4399593936;
		_case_end_4399598256:;
		if (!((_383941_r <= 30LL))) { goto _case_end_4399598368; }
		_case_begin_4399598368:;
		{
			_383931_d->_field_kind->_method_prim()->_field_kind=jule::Str("i32", 3);
			_383931_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_383931_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4399593936;
		_case_end_4399598368:;
		if (!((_383941_r <= 31LL))) { goto _case_end_4399598480; }
		_case_begin_4399598480:;
		{
			_383931_d->_field_kind->_method_prim()->_field_kind=jule::Str("u32", 3);
			_383931_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_383931_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4399593936;
		_case_end_4399598480:;
		if (!((_383941_r <= 62LL))) { goto _case_end_4399598592; }
		_case_begin_4399598592:;
		{
			_383931_d->_field_kind->_method_prim()->_field_kind=jule::Str("i64", 3);
			_383931_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_383931_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4399593936;
		_case_end_4399598592:;
		if (!((_383941_r <= 63LL))) { goto _case_end_4399598704; }
		_case_begin_4399598704:;
		{
			_383931_d->_field_kind->_method_prim()->_field_kind=jule::Str("u64", 3);
			_383931_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_383931_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4399593936;
		_case_end_4399598704:;
		if (!((_383941_r <= 127LL))) { goto _case_end_4399598816; }
		_case_begin_4399598816:;
		{
			_383931_d->_field_kind->_method_prim()->_field_kind=jule::Str("f32", 3);
			_383931_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_383931_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4399593936;
		_case_end_4399598816:;
		_case_begin_4399594128:;
		{
			_383931_d->_field_kind->_method_prim()->_field_kind=jule::Str("f64", 3);
			_383931_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_383931_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4399593936;
		_case_end_4399594128:;
		_match_end_4399593936:;
	}
}



inline void _1da2d3bdc_BinopSolver::_method_solve_const(jule::Ref<_1da2d3bdc_Data> _388334_d) {
	{
		if (!(((!(jule::real(_388334_d)))))) { goto _case_end_4399627696; }
		_case_begin_4399627696:;
		{
			return;
		}
		goto _match_end_4399627472;
		_case_end_4399627696:;
		if (!(((!((*this)._field_l->_method_is_const()))) || ((!((*this)._field_r->_method_is_const()))))) { goto _case_end_4399627824; }
		_case_begin_4399627824:;
		{
			jule::drop(_388334_d->_field_constant);
			return;
		}
		goto _match_end_4399627472;
		_case_end_4399627824:;
		_match_end_4399627472:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr)) { goto _case_end_4899160688; }
		_case_begin_4899160688:;
		{
			_388334_d->_field_constant=_1a89ca987_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_5205078704;
		_case_end_4899160688:;
		if (!((jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4899248400; }
		_case_begin_4899248400:;
		{
			_388334_d->_field_constant=_1a89ca987_Const::_static_method_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant))));
		}
		goto _match_end_5205078704;
		_case_end_4899248400:;
		if (!((jule::Str("::", 2)) == _match_expr)) { goto _case_end_4899217392; }
		_case_begin_4899217392:;
		{
			_388334_d->_field_constant=_1a89ca987_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_or((*this)._field_r->_field_constant));
		}
		goto _match_end_5205078704;
		_case_end_4899217392:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4899323728; }
		_case_begin_4899323728:;
		{
			_388334_d->_field_constant=_1a89ca987_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_and((*this)._field_r->_field_constant));
		}
		goto _match_end_5205078704;
		_case_end_4899323728:;
		if (!((jule::Str(">", 1)) == _match_expr)) { goto _case_end_4899458208; }
		_case_begin_4899458208:;
		{
			_388334_d->_field_constant=_1a89ca987_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant));
		}
		goto _match_end_5205078704;
		_case_end_4899458208:;
		if (!((jule::Str("<", 1)) == _match_expr)) { goto _case_end_4899473632; }
		_case_begin_4899473632:;
		{
			_388334_d->_field_constant=_1a89ca987_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant));
		}
		goto _match_end_5205078704;
		_case_end_4899473632:;
		if (!((jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4899516880; }
		_case_begin_4899516880:;
		{
			_388334_d->_field_constant=_1a89ca987_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_5205078704;
		_case_end_4899516880:;
		if (!((jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4899542928; }
		_case_begin_4899542928:;
		{
			_388334_d->_field_constant=_1a89ca987_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_5205078704;
		_case_end_4899542928:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4899655072; }
		_case_begin_4899655072:;
		{
			(*this)._field_l->_field_constant->_method_add((*this)._field_r->_field_constant);
			_388334_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5205078704;
		_case_end_4899655072:;
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4899650016; }
		_case_begin_4899650016:;
		{
			(*this)._field_l->_field_constant->_method_sub((*this)._field_r->_field_constant);
			_388334_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5205078704;
		_case_end_4899650016:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4899857232; }
		_case_begin_4899857232:;
		{
			(*this)._field_l->_field_constant->_method_mul((*this)._field_r->_field_constant);
			_388334_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5205078704;
		_case_end_4899857232:;
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4899628832; }
		_case_begin_4899628832:;
		{
			jule::Bool _393217_ok = (*this)._field_l->_field_constant->_method_div((*this)._field_r->_field_constant);
			if ((!(_393217_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_388334_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5205078704;
		_case_end_4899628832:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4899771008; }
		_case_begin_4899771008:;
		{
			jule::Bool _393917_ok = (*this)._field_l->_field_constant->_method_mod((*this)._field_r->_field_constant);
			if ((!(_393917_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_388334_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5205078704;
		_case_end_4899771008:;
		if (!((jule::Str("|", 1)) == _match_expr)) { goto _case_end_4900056672; }
		_case_begin_4900056672:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_or((*this)._field_r->_field_constant);
			_388334_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5205078704;
		_case_end_4900056672:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4900063072; }
		_case_begin_4900063072:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_and((*this)._field_r->_field_constant);
			_388334_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5205078704;
		_case_end_4900063072:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4900067616; }
		_case_begin_4900067616:;
		{
			(*this)._field_l->_field_constant->_method_xor((*this)._field_r->_field_constant);
			_388334_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5205078704;
		_case_end_4900067616:;
		if (!((jule::Str("<<", 2)) == _match_expr)) { goto _case_end_4900075536; }
		_case_begin_4900075536:;
		{
			_388334_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_lshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_388334_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_5205078704;
		_case_end_4900075536:;
		if (!((jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4900130160; }
		_case_begin_4900130160:;
		{
			_388334_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_rshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_388334_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_5205078704;
		_case_end_4900130160:;
		_match_end_5205078704:;
	}
	_388334_d->_field_model=jule::Any(_388334_d->_field_constant);
}



inline void _1da2d3bdc_BinopSolver::_method_post_const(jule::Ref<_1da2d3bdc_Data> _397129_d) {
	if ((!(jule::real(_397129_d)))) {
		return;
	}
	if ((!(_397129_d->_method_is_const()))) {
		return;
	}
	_1da2d3bdc_normalize_bitsize(_397129_d);
}



inline void _1da2d3bdc_BinopSolver::_method_prepare_data(jule::Ref<_1da2d3bdc_Data> _398231_d) {
	if (jule::real(_398231_d) && jule::real(_398231_d->_field_kind->_method_ref())) {
		_398231_d->_field_kind=_398231_d->_field_kind->_method_ref()->_field_elem;
	}
}



inline void _1da2d3bdc_BinopSolver::_method_prepare_eval(void) {
	(*this)._method_prepare_data((*this)._field_r);
	(*this)._method_prepare_data((*this)._field_l);
}



inline void _1da2d3bdc_BinopSolver::_method_check_data(jule::Ref<_1da2d3bdc_Data> _399333_d) {
	jule::Ref<_2053ddd54_FnIns> _399413_f = _399333_d->_field_kind->_method_fnc();
	if ((jule::real(_399413_f) && jule::real(_399413_f->_field_decl)) && _399413_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>({}));
	}
}



inline void _1da2d3bdc_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_solve_explicit(jule::Ref<_1da2d3bdc_Data> _400537_l,jule::Ref<_1da2d3bdc_Data> _400551_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_400537_l,_400551_r);
	(*this)._method_prepare_eval();
	(*this)._method_check_datas();
	jule::Ref<_1da2d3bdc_Data> _401117_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_400537_l,_400551_r);
	(*this)._method_solve_const(_401117_d);
	(*this)._method_post_const(_401117_d);
	if (jule::real(_401117_d)) {
		_401117_d->_field_lvalue=_401117_d->_field_kind->_method_lvalue();
		if ((!(_401117_d->_method_is_const()))) {
			_401117_d->_field_model=jule::Any(jule::new_struct<_206e63542_BinopExprModel>(new( std::nothrow ) _206e63542_BinopExprModel(_400537_l->_field_model,_400551_r->_field_model,(*this)._field_op._field_kind)));
		}
	}
	return _401117_d;
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_BinopSolver::_method_solve(jule::Ref<_2053703bd_BinopExpr> _403128_op) {
	jule::Ref<_1da2d3bdc_Data> _403217_l = (*this)._field_e->_method_eval_expr_kind(_403128_op->_field_left);
	if ((!(jule::real(_403217_l))) || (!(jule::real(_403217_l->_field_kind)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Ref<_1da2d3bdc_Data> _403717_r = (*this)._field_e->_method_eval_expr_kind(_403128_op->_field_right);
	if ((!(jule::real(_403717_r))) || (!(jule::real(_403717_r->_field_kind)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	(*this)._field_op=_403128_op->_field_op;
	jule::Ref<_1da2d3bdc_Data> _404417_d = (*this)._method_solve_explicit(_403217_l,_403717_r);
	if ((jule::real(_404417_d) && _403217_l->_field_is_rune) && _403717_r->_field_is_rune) {
		_404417_d->_field_is_rune=true;
	}
	return _404417_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da2d3bdc_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da411226_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1da411226_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	jule::Str _6317_kind = jule::Str("", 0);
	if ((*this)._field_variadic) {
		_6317_kind+=jule::Str("...", 3);
	}
	if ((*this)._method_cpp_linked()) {
		_6317_kind+=jule::Str("cpp.", 4) + (*this)._field_cpp_ident;
	} else {
		_6317_kind+=(*this)._field_kind.get()._method_to_str();
	}
	return _6317_kind;
}



inline jule::Bool _1da411226_TypeKind::_method_equals(jule::Ref<_1da411226_TypeKind> _7821_other) {
	if ((*this)._method_is_nil()) {
		return _7821_other->_method_is_nil();
	}
	if ((*this)._method_cpp_linked()) {
		if ((!(_7821_other->_method_cpp_linked()))) {
			return false;
		}
		return (*this)._field_cpp_ident == _7821_other->_field_cpp_ident;
	}
	return (*this)._field_kind.get()._method_equals(_7821_other);
}



inline jule::Ref<_1da411226_TypeKind> _1da411226_TypeKind::_method_clone(void) {
	if ((!(jule::real(this->self)))) {
		return jule::new_ref<_1da411226_TypeKind>();
	}
	jule::Ref<_1da411226_TypeKind> _10117_kind = jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(this->self->_field_cpp_ident,jule::Bool(),this->self->_field_kind));
	return _10117_kind;
}



inline jule::Bool _1da411226_TypeKind::_method_cpp_linked(void) {
	return (*this)._field_cpp_ident.len() != 0LL;
}



inline jule::Bool _1da411226_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



inline jule::Bool _1da411226_TypeKind::_method_void(void) {
	jule::Ref<_1da411226_Prim> _11613_prim = (*((&((*this)))))._method_prim();
	return jule::real(_11613_prim) && (_11613_prim->_method_to_str() == jule::Str("void", 4));
}



inline jule::Bool _1da411226_TypeKind::_method_lvalue(void) {
	{
		_1da411226_TypeKind* _12321__self = (&((*this)));
		return ((jule::real(_12321__self->_method_ref()) || jule::real(_12321__self->_method_ptr())) || jule::real(_12321__self->_method_slc())) || jule::real(_12321__self->_method_map());
	}
}



inline jule::Bool _1da411226_TypeKind::_method_mutable(void) {
	{
		_1da411226_TypeKind* _13521__self = (&((*this)));
		if (jule::real(_13521__self->_method_strct())) {
			return _13521__self->_method_strct()->_field_mutable;
		}
		if (jule::real(_13521__self->_method_trt())) {
			return _13521__self->_method_trt()->_field_mutable;
		}
		if (jule::real(_13521__self->_method_prim())) {
			jule::Ref<_1da411226_Prim> _14421_p = _13521__self->_method_prim();
			return _14421_p->_method_is_any();
		}
		if (jule::real(_13521__self->_method_arr())) {
			return _13521__self->_method_arr()->_field_elem->_method_mutable();
		}
		return (jule::real(_13521__self->_method_slc()) || jule::real(_13521__self->_method_ptr())) || jule::real(_13521__self->_method_ref());
	}
}



inline jule::Bool _1da411226_TypeKind::_method_nil_compatible(void) {
	{
		_1da411226_TypeKind* _15921__self = (&((*this)));
		jule::Ref<_1da411226_Prim> _16117_prim = _15921__self->_method_prim();
		if (jule::real(_16117_prim) && _16117_prim->_method_is_any()) {
			return true;
		}
		return ((((_15921__self->_method_is_nil() || jule::real(_15921__self->_method_fnc())) || jule::real(_15921__self->_method_ptr())) || jule::real(_15921__self->_method_trt())) || jule::real(_15921__self->_method_slc())) || jule::real(_15921__self->_method_map());
	}
}



inline jule::Bool _1da411226_TypeKind::_method_supports_cloning(void) {
	{
		_1da411226_TypeKind* _17821__self = (&((*this)));
		{
			if (!((jule::real(_17821__self->_method_prim())))) { goto _case_end_4899629584; }
			_case_begin_4899629584:;
			{
				return (!(_17821__self->_method_prim()->_method_is_any()));
			}
			goto _match_end_4899515280;
			_case_end_4899629584:;
			if (!((jule::real(_17821__self->_method_enm())))) { goto _case_end_4899667184; }
			_case_begin_4899667184:;
			{
				return true;
			}
			goto _match_end_4899515280;
			_case_end_4899667184:;
			if (!((jule::real(_17821__self->_method_fnc())))) { goto _case_end_4899643456; }
			_case_begin_4899643456:;
			{
				return true;
			}
			goto _match_end_4899515280;
			_case_end_4899643456:;
			if (!((jule::real(_17821__self->_method_ptr())))) { goto _case_end_4899777728; }
			_case_begin_4899777728:;
			{
				return true;
			}
			goto _match_end_4899515280;
			_case_end_4899777728:;
			if (!((jule::real(_17821__self->_method_slc())))) { goto _case_end_4899777840; }
			_case_begin_4899777840:;
			{
				return _17821__self->_method_slc()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4899515280;
			_case_end_4899777840:;
			if (!((jule::real(_17821__self->_method_map())))) { goto _case_end_4899816416; }
			_case_begin_4899816416:;
			{
				jule::Ref<_1da411226_Map> _19221_m = _17821__self->_method_map();
				return _19221_m->_field_key->_method_supports_cloning() && _19221_m->_field_val->_method_supports_cloning();
			}
			goto _match_end_4899515280;
			_case_end_4899816416:;
			if (!((jule::real(_17821__self->_method_arr())))) { goto _case_end_4899816528; }
			_case_begin_4899816528:;
			{
				return _17821__self->_method_arr()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4899515280;
			_case_end_4899816528:;
			if (!((jule::real(_17821__self->_method_ref())))) { goto _case_end_4899831328; }
			_case_begin_4899831328:;
			{
				return _17821__self->_method_ref()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4899515280;
			_case_end_4899831328:;
			if (!((jule::real(_17821__self->_method_strct())))) { goto _case_end_4899831440; }
			_case_begin_4899831440:;
			{
				jule::Ref<_2053cdc01_StructIns> _20225_s = _17821__self->_method_strct();
				if ((!(_20225_s->_field_mutable))) {
					return true;
				}
				if (((!(jule::real(_20225_s->_field_decl))) || _20225_s->_field_decl->_field_cpp_linked) || (!(_20225_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					return false;
				}
				return true;
			}
			goto _match_end_4899515280;
			_case_end_4899831440:;
			_case_begin_4899515408:;
			{
				return false;
			}
			goto _match_end_4899515280;
			_case_end_4899515408:;
			_match_end_4899515280:;
		}
	}
}



inline jule::Bool _1da411226_TypeKind::_method_variadicable(void) {
	{
		_1da411226_TypeKind* _22021__self = (&((*this)));
		return jule::real(_22021__self->_method_slc());
	}
}



inline jule::Ref<_1da411226_Prim> _1da411226_TypeKind::_method_prim(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1da411226_Prim>>())) { goto _case_end_4899452128; }
		_case_begin_4899452128:;
		{
			return (*this)._field_kind.operator jule::Ref<_1da411226_Prim>();
		}
		goto _match_end_4900072944;
		_case_end_4899452128:;
		_case_begin_5205120112:;
		{
			return jule::new_ref<_1da411226_Prim>();
		}
		goto _match_end_4900072944;
		_case_end_5205120112:;
		_match_end_4900072944:;
	}
}



inline jule::Ref<_1da411226_Ref> _1da411226_TypeKind::_method_ref(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1da411226_Ref>>())) { goto _case_end_4896946480; }
		_case_begin_4896946480:;
		{
			return (*this)._field_kind.operator jule::Ref<_1da411226_Ref>();
		}
		goto _match_end_4896887344;
		_case_end_4896946480:;
		_case_begin_4900039632:;
		{
			return jule::new_ref<_1da411226_Ref>();
		}
		goto _match_end_4896887344;
		_case_end_4900039632:;
		_match_end_4896887344:;
	}
}



inline jule::Ref<_1da411226_Ptr> _1da411226_TypeKind::_method_ptr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1da411226_Ptr>>())) { goto _case_end_5204922592; }
		_case_begin_5204922592:;
		{
			return (*this)._field_kind.operator jule::Ref<_1da411226_Ptr>();
		}
		goto _match_end_5205094784;
		_case_end_5204922592:;
		_case_begin_4896955888:;
		{
			return jule::new_ref<_1da411226_Ptr>();
		}
		goto _match_end_5205094784;
		_case_end_4896955888:;
		_match_end_5205094784:;
	}
}



inline jule::Ref<_206b06c0d_Enum> _1da411226_TypeKind::_method_enm(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_206b06c0d_Enum>>())) { goto _case_end_5205033488; }
		_case_begin_5205033488:;
		{
			return (*this)._field_kind.operator jule::Ref<_206b06c0d_Enum>();
		}
		goto _match_end_5204589232;
		_case_end_5205033488:;
		_case_begin_5204581184:;
		{
			return jule::new_ref<_206b06c0d_Enum>();
		}
		goto _match_end_5204589232;
		_case_end_5204581184:;
		_match_end_5204589232:;
	}
}



inline jule::Ref<_1da411226_Arr> _1da411226_TypeKind::_method_arr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1da411226_Arr>>())) { goto _case_end_4897388496; }
		_case_begin_4897388496:;
		{
			return (*this)._field_kind.operator jule::Ref<_1da411226_Arr>();
		}
		goto _match_end_5205033184;
		_case_end_4897388496:;
		_case_begin_5205130784:;
		{
			return jule::new_ref<_1da411226_Arr>();
		}
		goto _match_end_5205033184;
		_case_end_5205130784:;
		_match_end_5205033184:;
	}
}



inline jule::Ref<_1da411226_Slc> _1da411226_TypeKind::_method_slc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1da411226_Slc>>())) { goto _case_end_4897625536; }
		_case_begin_4897625536:;
		{
			return (*this)._field_kind.operator jule::Ref<_1da411226_Slc>();
		}
		goto _match_end_4897351744;
		_case_end_4897625536:;
		_case_begin_4897333936:;
		{
			return jule::new_ref<_1da411226_Slc>();
		}
		goto _match_end_4897351744;
		_case_end_4897333936:;
		_match_end_4897351744:;
	}
}



inline jule::Ref<_2053ddd54_FnIns> _1da411226_TypeKind::_method_fnc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_2053ddd54_FnIns>>())) { goto _case_end_4898039520; }
		_case_begin_4898039520:;
		{
			return (*this)._field_kind.operator jule::Ref<_2053ddd54_FnIns>();
		}
		goto _match_end_4897936176;
		_case_end_4898039520:;
		_case_begin_4897650976:;
		{
			return jule::new_ref<_2053ddd54_FnIns>();
		}
		goto _match_end_4897936176;
		_case_end_4897650976:;
		_match_end_4897936176:;
	}
}



inline jule::Ref<_2053cdc01_StructIns> _1da411226_TypeKind::_method_strct(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_2053cdc01_StructIns>>())) { goto _case_end_4898622928; }
		_case_begin_4898622928:;
		{
			return (*this)._field_kind.operator jule::Ref<_2053cdc01_StructIns>();
		}
		goto _match_end_4898138192;
		_case_end_4898622928:;
		_case_begin_4898481776:;
		{
			return jule::new_ref<_2053cdc01_StructIns>();
		}
		goto _match_end_4898138192;
		_case_end_4898481776:;
		_match_end_4898138192:;
	}
}



inline jule::Ref<_2065895c5_Trait> _1da411226_TypeKind::_method_trt(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_2065895c5_Trait>>())) { goto _case_end_4898829088; }
		_case_begin_4898829088:;
		{
			return (*this)._field_kind.operator jule::Ref<_2065895c5_Trait>();
		}
		goto _match_end_4898697408;
		_case_end_4898829088:;
		_case_begin_4898570304:;
		{
			return jule::new_ref<_2065895c5_Trait>();
		}
		goto _match_end_4898697408;
		_case_end_4898570304:;
		_match_end_4898697408:;
	}
}



inline jule::Ref<_1da411226_Map> _1da411226_TypeKind::_method_map(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1da411226_Map>>())) { goto _case_end_4899791552; }
		_case_begin_4899791552:;
		{
			return (*this)._field_kind.operator jule::Ref<_1da411226_Map>();
		}
		goto _match_end_4899311328;
		_case_end_4899791552:;
		_case_begin_4899651072:;
		{
			return jule::new_ref<_1da411226_Map>();
		}
		goto _match_end_4899311328;
		_case_end_4899651072:;
		_match_end_4899311328:;
	}
}



inline jule::Ref<_1da411226_Tuple> _1da411226_TypeKind::_method_tup(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1da411226_Tuple>>())) { goto _case_end_4898671376; }
		_case_begin_4898671376:;
		{
			return (*this)._field_kind.operator jule::Ref<_1da411226_Tuple>();
		}
		goto _match_end_4900038816;
		_case_end_4898671376:;
		_case_begin_4899720528:;
		{
			return jule::new_ref<_1da411226_Tuple>();
		}
		goto _match_end_4900038816;
		_case_end_4899720528:;
		_match_end_4900038816:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1da411226_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1da411226_TypeSymbol::_method_checked(void) {
	return jule::real((*this)._field_kind);
}



inline void _1da411226_TypeSymbol::_method_remove_kind(void) {
	jule::drop((*this)._field_kind);
}







std::ostream &operator<<(std::ostream &_Stream, const _1da411226_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1da411226_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _1da411226_Prim::_method_equals(jule::Ref<_1da411226_TypeKind> _33921_other) {
	jule::Ref<_1da411226_Prim> _34013_prim = (_33921_other).alloc->_method_prim();
	if ((!(jule::real(_34013_prim)))) {
		return false;
	}
	return (*this)._field_kind == _34013_prim->_field_kind;
}



inline jule::Bool _1da411226_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



inline jule::Bool _1da411226_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



inline jule::Bool _1da411226_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



inline jule::Bool _1da411226_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



inline jule::Bool _1da411226_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



inline jule::Bool _1da411226_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



inline jule::Bool _1da411226_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



inline jule::Bool _1da411226_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



inline jule::Bool _1da411226_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



inline jule::Bool _1da411226_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



inline jule::Bool _1da411226_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



inline jule::Bool _1da411226_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



inline jule::Bool _1da411226_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



inline jule::Bool _1da411226_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



inline jule::Bool _1da411226_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



inline jule::Bool _1da411226_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1da411226_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1da411226_Ref::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1da411226_Ref::_method_equals(jule::Ref<_1da411226_TypeKind> _40821_other) {
	jule::Ref<_1da411226_Ref> _40913_ref = (_40821_other).alloc->_method_ref();
	if ((!(jule::real(_40913_ref)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_40913_ref->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1da411226_Ref &_Src) {
	_Stream << "Ref{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1da411226_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1da411226_Slc::_method_equals(jule::Ref<_1da411226_TypeKind> _42721_other) {
	jule::Ref<_1da411226_Slc> _42813_slc = (_42721_other).alloc->_method_slc();
	if ((!(jule::real(_42813_slc)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_42813_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1da411226_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1da411226_Tuple::_method_to_str(void) {
	jule::Str _44417_s = jule::Str("(", 1);
	_44417_s+=(*this)._field_types[0LL]->_method_to_str();
	{
		auto _range_expr = (*this)._field_types.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da411226_TypeKind> _1da411226_t = *_range_begin;
			_iter_begin_4896890832:;
			{
				_44417_s+=jule::Str(",", 1);
				_44417_s+=_1da411226_t->_method_to_str();
			}
			_iter_next_4896890832:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da411226_t = *_range_begin; goto _iter_begin_4896890832; }
			_iter_end_4896890832:;
		}
	}
	_44417_s+=jule::Str(")", 1);
	return _44417_s;
}



inline jule::Bool _1da411226_Tuple::_method_equals(jule::Ref<_1da411226_TypeKind> _45521_other) {
	jule::Ref<_1da411226_Tuple> _45613_tup = (_45521_other).alloc->_method_tup();
	if ((!(jule::real(_45613_tup)))) {
		return false;
	}
	if ((*this)._field_types.len() != _45613_tup->_field_types.len()) {
		return false;
	}
	jule::Int _46517_i = 0LL;
	_iter_begin_4898865568:;
	if (!(_46517_i < (*this)._field_types.len())) { goto _iter_end_4898865568; }
	{
		if ((!((*this)._field_types[static_cast<jule::Int>(_46517_i)]->_method_equals(_45613_tup->_field_types[static_cast<jule::Int>(_46517_i)])))) {
			return false;
		}
	}
	_iter_next_4898865568:;
	(_46517_i)++;
	goto _iter_begin_4898865568;
	_iter_end_4898865568:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da411226_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1da411226_Map::_method_to_str(void) {
	jule::Str _48517_s = jule::Str("[", 1);
	_48517_s+=(*this)._field_key->_method_to_str();
	_48517_s+=jule::Str(":", 1);
	_48517_s+=(*this)._field_val->_method_to_str();
	_48517_s+=jule::Str("]", 1);
	return _48517_s;
}



inline jule::Bool _1da411226_Map::_method_equals(jule::Ref<_1da411226_TypeKind> _49421_other) {
	jule::Ref<_1da411226_Map> _49513_map = (_49421_other).alloc->_method_map();
	if ((!(jule::real(_49513_map)))) {
		return false;
	}
	return (*this)._field_key->_method_equals(_49513_map->_field_key) && (*this)._field_val->_method_equals(_49513_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _1da411226_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1da411226_Arr::_method_to_str(void) {
	jule::Str _51317_s = jule::Str("[", 1);
	_51317_s+=_2049bd7b9_itoa((*this)._field_n);
	_51317_s+=jule::Str("]", 1);
	_51317_s+=(*this)._field_elem->_method_to_str();
	return _51317_s;
}



inline jule::Bool _1da411226_Arr::_method_equals(jule::Ref<_1da411226_TypeKind> _52121_other) {
	jule::Ref<_1da411226_Arr> _52213_arr = (_52121_other).alloc->_method_arr();
	if ((!(jule::real(_52213_arr)))) {
		return false;
	}
	return ((*this)._field_n == _52213_arr->_field_n) && (*this)._field_elem->_method_equals(_52213_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1da411226_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1da411226_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1da411226_Ptr::_method_equals(jule::Ref<_1da411226_TypeKind> _54521_other) {
	jule::Ref<_1da411226_Ptr> _54613_ptr = (_54521_other).alloc->_method_ptr();
	if ((!(jule::real(_54613_ptr)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_54613_ptr->_field_elem);
}



inline jule::Bool _1da411226_Ptr::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1da411226_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da411226_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1da411226_TypeChecker::_method_push_err(_20542560a_Token _68327_token,jule::Str _68341_fmt,jule::Slice<jule::Any> _68354_args) {
	(*this)._field_s->_method_push_err(_68327_token,_68341_fmt,_68354_args);
}



inline jule::Ref<_1da411226_Prim> _1da411226_TypeChecker::_method_build_prim(jule::Ref<_2053703bd_IdentTypeDecl> _68729_decl) {
	if ((!(_1da411226_is_prim(_68729_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da411226_Prim>();
	}
	if (_68729_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_68729_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_68729_decl->_field_ident)}));
		return jule::new_ref<_1da411226_Prim>();
	}
	return _1da411226_build_prim_type(_68729_decl->_field_ident);
}



inline void _1da411226_TypeChecker::_method_push_cycle_error(jule::Any _70131_def1,jule::Any _70142_def2,jule::Str& _70158_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _70413_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70429_def) mutable -> jule::Str {
		{
			auto _match_expr{ _70429_def };
			if (!(_match_expr.type_is<jule::Ref<_1da411226_TypeAlias>>())) { goto _case_end_4900263536; }
			_case_begin_4900263536:;
			{
				return _70429_def.operator jule::Ref<_1da411226_TypeAlias>()->_field_ident;
			}
			goto _match_end_4900262608;
			_case_end_4900263536:;
			if (!(_match_expr.type_is<jule::Ref<_2053cdc01_Struct>>())) { goto _case_end_4900263648; }
			_case_begin_4900263648:;
			{
				return _70429_def.operator jule::Ref<_2053cdc01_Struct>()->_field_ident;
			}
			goto _match_end_4900262608;
			_case_end_4900263648:;
			if (!(_match_expr.type_is<jule::Ref<_206b06c0d_Enum>>())) { goto _case_end_4900263760; }
			_case_begin_4900263760:;
			{
				return _70429_def.operator jule::Ref<_206b06c0d_Enum>()->_field_ident;
			}
			goto _match_end_4900262608;
			_case_end_4900263760:;
			_case_begin_4900263088:;
			{
				return jule::Str("", 0);
			}
			goto _match_end_4900262608;
			_case_end_4900263088:;
			_match_end_4900262608:;
		}
	});
	jule::Str _71313_def1_ident = _70413_get_ident(_70131_def1);
	jule::Str _71413_def2_ident = _70413_get_ident(_70142_def2);
	jule::Str _71513_refers_to = _20377124e_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_71313_def1_ident),jule::Any(_71413_def2_ident)}));
	_70158_message=((_206a20e79_str_repeat(jule::Str(" ", 1),4LL) + _71513_refers_to) + jule::Str("\n", 1)) + _70158_message;
}



inline jule::Bool _1da411226_TypeChecker::_method_are_equals_cross_cycle_data_0(jule::Any _71945_a,jule::Any _71953_b) {
	{
		auto _match_expr{ _71945_a };
		if (!(_match_expr.type_is<jule::Ref<_1da411226_TypeAlias>>())) { goto _case_end_4900290624; }
		_case_begin_4900290624:;
		{
			{
				auto _match_expr{ _71953_b };
				if (!(_match_expr.type_is<jule::Ref<_1da411226_TypeAlias>>())) { goto _case_end_4900292800; }
				_case_begin_4900292800:;
				{
					return (_71945_a.operator jule::Ref<_1da411226_TypeAlias>()).alloc == (_71953_b.operator jule::Ref<_1da411226_TypeAlias>()).alloc;
				}
				goto _match_end_4900290784;
				_case_end_4900292800:;
				_case_begin_4900292416:;
				{
					return false;
				}
				goto _match_end_4900290784;
				_case_end_4900292416:;
				_match_end_4900290784:;
			}
		}
		goto _match_end_4900289808;
		_case_end_4900290624:;
		_case_begin_4900290240:;
		{
			return false;
		}
		goto _match_end_4900289808;
		_case_end_4900290240:;
		_match_end_4900289808:;
	}
}

inline jule::Bool _1da411226_TypeChecker::_method_are_equals_cross_cycle_data_1(jule::Any _71945_a,jule::Any _71953_b) {
	{
		auto _match_expr{ _71945_a };
		if (!(_match_expr.type_is<jule::Ref<_2053cdc01_Struct>>())) { goto _case_end_4900305760; }
		_case_begin_4900305760:;
		{
			{
				auto _match_expr{ _71953_b };
				if (!(_match_expr.type_is<jule::Ref<_2053cdc01_Struct>>())) { goto _case_end_4900307936; }
				_case_begin_4900307936:;
				{
					return (_71945_a.operator jule::Ref<_2053cdc01_Struct>()).alloc == (_71953_b.operator jule::Ref<_2053cdc01_Struct>()).alloc;
				}
				goto _match_end_4900305920;
				_case_end_4900307936:;
				_case_begin_4900307552:;
				{
					return false;
				}
				goto _match_end_4900305920;
				_case_end_4900307552:;
				_match_end_4900305920:;
			}
		}
		goto _match_end_4900304944;
		_case_end_4900305760:;
		_case_begin_4900305376:;
		{
			return false;
		}
		goto _match_end_4900304944;
		_case_end_4900305376:;
		_match_end_4900304944:;
	}
}



inline jule::Bool _1da411226_TypeChecker::_method_check_cross_cycle(jule::Any _73232_decl,jule::Str& _73248_message) {
	{
		auto _match_expr{ _73232_decl };
		if (!(_match_expr.type_is<jule::Ref<_1da411226_TypeAlias>>())) { goto _case_end_4900275440; }
		_case_begin_4900275440:;
		{
			jule::Ref<_1da411226_TypeAlias> _73517_ta = _73232_decl.operator jule::Ref<_1da411226_TypeAlias>();
			{
				auto _range_expr = _73517_ta->_field_refers;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Any _1da411226_d = *_range_begin;
					_iter_begin_4900278800:;
					{
						{
							auto _match_expr{ _1da411226_d };
							if (!(_match_expr.type_is<jule::Ref<_1da411226_TypeAlias>>())) { goto _case_end_4900280592; }
							_case_begin_4900280592:;
							{
								if ((*this)._method_are_equals_cross_cycle_data_0(_1da411226_d,(*this)._field_referencer->_field_owner)) {
									(*this)._method_push_cycle_error(jule::Any(_73517_ta),_1da411226_d,_73248_message);
									return false;
								}
							}
							goto _match_end_4900280064;
							_case_end_4900280592:;
							_match_end_4900280064:;
						}
						if ((!((*this)._method_check_cross_cycle(_1da411226_d,_73248_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_73517_ta),_1da411226_d,_73248_message);
							return false;
						}
					}
					_iter_next_4900278800:;
					++_range_begin;
					if (_range_begin != _range_end) { _1da411226_d = *_range_begin; goto _iter_begin_4900278800; }
					_iter_end_4900278800:;
				}
			}
		}
		goto _match_end_4900274992;
		_case_end_4900275440:;
		if (!(_match_expr.type_is<jule::Ref<_2053cdc01_Struct>>())) { goto _case_end_4900275584; }
		_case_begin_4900275584:;
		{
			jule::Ref<_2053cdc01_Struct> _75217_s = _73232_decl.operator jule::Ref<_2053cdc01_Struct>();
			{
				auto _range_expr = _75217_s->_field_depends;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_2053cdc01_Struct> _1da411226_d = *_range_begin;
					_iter_begin_4900281360:;
					{
						if ((*this)._method_are_equals_cross_cycle_data_1(jule::Any(_1da411226_d),(*this)._field_referencer->_field_owner)) {
							(*this)._method_push_cycle_error(jule::Any(_75217_s),jule::Any(_1da411226_d),_73248_message);
							return false;
						}
						if ((!((*this)._method_check_cross_cycle(jule::Any(_1da411226_d),_73248_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_75217_s),jule::Any(_1da411226_d),_73248_message);
							return false;
						}
					}
					_iter_next_4900281360:;
					++_range_begin;
					if (_range_begin != _range_end) { _1da411226_d = *_range_begin; goto _iter_begin_4900281360; }
					_iter_end_4900281360:;
				}
			}
		}
		goto _match_end_4900274992;
		_case_end_4900275584:;
		_match_end_4900274992:;
	}
	return true;
}



inline jule::Bool _1da411226_TypeChecker::_method_check_illegal_cycles(jule::Ref<_2053703bd_IdentTypeDecl> _77439_ident,jule::Any _77466_decl) {
	jule::Bool _77479_ok = jule::Bool();
	if ((!(jule::real((*this)._field_referencer)))) {
		_77479_ok = true;
		return _77479_ok;
	}
	{
		auto _match_expr{ _77466_decl };
		if (!(_match_expr.type_is<jule::Ref<_2053cdc01_Struct>>())) { goto _case_end_4900314976; }
		_case_begin_4900314976:;
		{
			if ((*this)._field_not_plain) {
				_77479_ok = true;
				return _77479_ok;
			}
		}
		goto _match_end_4900313920;
		_case_end_4900314976:;
		_match_end_4900313920:;
	}
	if ((*this)._field_referencer->_field_owner == _77466_decl) {
		(*this)._method_push_err(_77439_ident->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_77479_ok = false;
		return _77479_ok;
	}
	jule::Str _79317_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_77466_decl,_79317_message)))) {
		jule::Str _79621_err_msg = _79317_message;
		_79317_message=jule::Str("", 0);
		(*this)._method_push_cycle_error((*this)._field_referencer->_field_owner,_77466_decl,_79317_message);
		_79621_err_msg=_79621_err_msg + _79317_message;
		(*this)._method_push_err(_77439_ident->_field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_79621_err_msg)}));
		_77479_ok = false;
		return _77479_ok;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_1da411226_TypeAlias>>())) { goto _case_end_4900320800; }
		_case_begin_4900320800:;
		{
			{
				(*((*this)._field_referencer->_field_refs))=jule::append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_77466_decl}));
			}
		}
		goto _match_end_4900326128;
		_case_end_4900320800:;
		if (!(_match_expr.type_is<jule::Ref<_2053cdc01_Struct>>())) { goto _case_end_4900326928; }
		_case_begin_4900326928:;
		{
			{
				auto _match_expr{ _77466_decl };
				if (!(_match_expr.type_is<jule::Ref<_2053cdc01_Struct>>())) { goto _case_end_4900327936; }
				_case_begin_4900327936:;
				{
					jule::Ref<_2053cdc01_Struct> _81125_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_2053cdc01_Struct>();
					_81125_s->_field_depends=jule::append(_81125_s->_field_depends,jule::Slice<jule::Ref<_2053cdc01_Struct>>({_77466_decl.operator jule::Ref<_2053cdc01_Struct>()}));
				}
				goto _match_end_4900327040;
				_case_end_4900327936:;
				_match_end_4900327040:;
			}
		}
		goto _match_end_4900326128;
		_case_end_4900326928:;
		_match_end_4900326128:;
	}
	_77479_ok = true;
	return _77479_ok;
}



inline jule::Trait<_1da411226_Kind> _1da411226_TypeChecker::_method_from_type_alias(jule::Ref<_2053703bd_IdentTypeDecl> _81934_decl,jule::Ref<_1da411226_TypeAlias> _81960_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_81960_ta->_field_public,_81960_ta->_field_token)))) {
		(*this)._method_push_err(_81934_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_81934_decl->_field_ident)}));
		return nullptr;
	}
	_81960_ta->_field_used=true;
	if (_81934_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_81934_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_81934_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _83217_ok = (*this)._method_check_illegal_cycles(_81934_decl,jule::Any(_81960_ta));
	if ((!(_83217_ok))) {
		return nullptr;
	}
	_83217_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_81960_ta,(*this)._field_lookup);
	if ((!(_83217_ok))) {
		return nullptr;
	}
	jule::Ref<_1da411226_TypeKind> _84317_kind = _81960_ta->_field_kind->_field_kind->_method_clone();
	if (_81960_ta->_field_cpp_linked) {
		_84317_kind->_field_cpp_ident=_81960_ta->_field_ident;
	}
	return _84317_kind;
}



inline jule::Ref<_206b06c0d_Enum> _1da411226_TypeChecker::_method_from_enum(jule::Ref<_2053703bd_IdentTypeDecl> _85228_decl,jule::Ref<_206b06c0d_Enum> _85254_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_85254_e->_field_public,_85254_e->_field_token)))) {
		(*this)._method_push_err(_85228_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_85228_decl->_field_ident)}));
		return jule::new_ref<_206b06c0d_Enum>();
	}
	if (_85228_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_85228_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_85228_decl->_field_ident)}));
		return jule::new_ref<_206b06c0d_Enum>();
	}
	return _85254_e;
}



inline jule::Bool _1da411226_TypeChecker::_method_check_struct_ins(jule::Ref<_2053cdc01_StructIns> _86639_ins,_20542560a_Token _86656_error_token) {
	jule::Bool _86678_ok = jule::Bool();
	if (_86639_ins->_field_checked) {
		_86678_ok = true;
		return _86678_ok;
	}
	_86639_ins->_field_checked=true;
	if (jule::real((*this)._field_referencer) && ((*this)._field_referencer->_field_owner == _86639_ins->_field_decl)) {
		_86678_ok = true;
		return _86678_ok;
	}
	jule::Ref<_1da2aa301_SymbolTable> _88017_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_88017_old_file);
	});
	jule::Ref<_1da2aa301_SymbolTable> _88317_file = _1d9dc7517_find_file((*this)._field_s->_field_files,_86639_ins->_field_decl->_field_token._field_file);
	if (jule::real(_88317_file)) {
		(*this)._field_s->_method_set_current_file(_88317_file);
	}
	jule::Ref<_1da411226_Referencer> _88817_referencer = jule::new_struct<_1da411226_Referencer>(new( std::nothrow ) _1da411226_Referencer(_86639_ins->_field_decl->_field_ident,jule::Any(_86639_ins->_field_decl),nullptr));
	jule::Slice<jule::Ref<_1da411226_TypeAlias>> _89317_generics = jule::Slice<jule::Ref<_1da411226_TypeAlias>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_86639_ins->_field_generics.len())));
	{
		auto _range_expr = _86639_ins->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da411226_i = 0;
			jule::Ref<_1da411226_TypeKind> _1da411226_g = *_range_begin;
			_iter_begin_4395227216:;
			{
				_89317_generics[static_cast<jule::Int>(_1da411226_i)]=jule::new_struct<_1da411226_TypeAlias>(new( std::nothrow ) _1da411226_TypeAlias(jule::Ref<_2053703bd_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_20542560a_Token(),_86639_ins->_field_decl->_field_generics[static_cast<jule::Int>(_1da411226_i)]->_field_ident,jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),_1da411226_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_4395227216:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da411226_i; _1da411226_g = *_range_begin; goto _iter_begin_4395227216; }
			_iter_end_4395227216:;
		}
	}
	jule::Ref<_1da2aa301_SymbolTable> _90317_old_sema_file = _86639_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_86639_ins->_field_decl->_field_sema->_method_set_current_file(_90317_old_sema_file);
	});
	_1da411226_TypeChecker _90617_tc = _1da411226_TypeChecker(_86639_ins->_field_decl->_field_sema,_86639_ins->_field_decl->_field_sema,_88817_referencer,_20542560a_Token(),jule::Slice<jule::Ref<_2053703bd_GenericDecl>>(),_89317_generics,jule::Bool());
	{
		auto _range_expr = _86639_ins->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_FieldIns> _1da411226_field = *_range_begin;
			_iter_begin_4900369072:;
			{
				jule::Ref<_1da411226_TypeKind> _91521_kind = _90617_tc._method_check_decl(_1da411226_field->_field_decl->_field_kind->_field_decl);
				_86678_ok=jule::real(_91521_kind);
				if ((jule::real(_86639_ins->_field_decl->_field_sema) && ((*this)._field_s != _86639_ins->_field_decl->_field_sema)) && (_86639_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
					(*this)._field_s->_field_errors=jule::append((*this)._field_s->_field_errors,_86639_ins->_field_decl->_field_sema->_field_errors);
				}
				if ((!(_86678_ok))) {
					_86678_ok = false;
					return _86678_ok;
				}
				_1da411226_field->_field_kind=_91521_kind;
				if (_1da411226_field->_field_kind->_method_mutable()) {
					_86639_ins->_field_mutable=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_86639_ins);
				}
			}
			_iter_next_4900369072:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da411226_field = *_range_begin; goto _iter_begin_4900369072; }
			_iter_end_4900369072:;
		}
	}
	if (_86639_ins->_field_generics.len() > 0LL) {
		{
			auto _range_expr = _86639_ins->_field_methods;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_2053ddd54_Fn> _1da411226_m = *_range_begin;
				_iter_begin_4900382464:;
				{
					if (_1da411226_m->_field_generics.len() > 0LL) {
						goto _iter_next_4900382464;
					}
					(*this)._field_s->_method_check_type_method(_86639_ins,_1da411226_m);
				}
				_iter_next_4900382464:;
				++_range_begin;
				if (_range_begin != _range_end) { _1da411226_m = *_range_begin; goto _iter_begin_4900382464; }
				_iter_end_4900382464:;
			}
		}
	}
	_86678_ok = true;
	return _86678_ok;
}



inline void _1da411226_TypeChecker::_method_append_used_struct_reference(jule::Ref<_2053cdc01_Struct> _94751_s) {
	if ((!(jule::real((*this)._field_referencer)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_2053cdc01_Struct>>())) { goto _case_end_4900391728; }
		_case_begin_4900391728:;
		{
			jule::Ref<_2053cdc01_Struct> _95421_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_2053cdc01_Struct>();
			if ((!(_95421_ref_s->_method_is_uses(_94751_s)))) {
				_95421_ref_s->_field_uses=jule::append(_95421_ref_s->_field_uses,jule::Slice<jule::Ref<_2053cdc01_Struct>>({_94751_s}));
			}
		}
		goto _match_end_4900391072;
		_case_end_4900391728:;
		_match_end_4900391072:;
	}
}



inline jule::Ref<_2053cdc01_StructIns> _1da411226_TypeChecker::_method_from_struct(jule::Ref<_2053703bd_IdentTypeDecl> _96134_decl,jule::Ref<_2053cdc01_Struct> _96160_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_96160_s->_field_public,_96160_s->_field_token)))) {
		(*this)._method_push_err(_96134_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_96134_decl->_field_ident)}));
		return jule::new_ref<_2053cdc01_StructIns>();
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return jule::new_ref<_2053cdc01_StructIns>();
	}
	jule::Bool _97217_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_96134_decl,jule::Any(_96160_s));
	if ((!(_97217_ok))) {
		return jule::new_ref<_2053cdc01_StructIns>();
	}
	(*this)._method_append_used_struct_reference(_96160_s);
	jule::Ref<_2053cdc01_StructIns> _97817_ins = _96160_s->_method_instance();
	_97817_ins->_field_generics=jule::Slice<jule::Ref<_1da411226_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_96134_decl->_field_generics.len())));
	jule::Ref<_1da411226_Referencer> _98017_referencer = (*this)._field_referencer;
	jule::drop((*this)._field_referencer);
	{
		auto _range_expr = _96134_decl->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da411226_i = 0;
			jule::Ref<_2053703bd_TypeDecl> _1da411226_g = *_range_begin;
			_iter_begin_4900413472:;
			{
				jule::Ref<_1da411226_TypeKind> _98321_kind = (*this)._method_build(_1da411226_g->_field_kind);
				if ((!(jule::real(_98321_kind)))) {
					_97217_ok=false;
					goto _iter_next_4900413472;
				}
				_97817_ins->_field_generics[static_cast<jule::Int>(_1da411226_i)]=_98321_kind;
			}
			_iter_next_4900413472:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da411226_i; _1da411226_g = *_range_begin; goto _iter_begin_4900413472; }
			_iter_end_4900413472:;
		}
	}
	(*this)._field_referencer=_98017_referencer;
	if ((!(_97217_ok))) {
		return jule::new_ref<_2053cdc01_StructIns>();
	}
	_97217_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_97817_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_97817_ins->_field_generics.len()),_96134_decl->_field_token);
	if ((!(_97217_ok))) {
		return jule::new_ref<_2053cdc01_StructIns>();
	}
	jule::Ref<_2053cdc01_StructIns> _100217_exist_instance = _96160_s->_method_append_instance(_97817_ins);
	if (jule::real(_100217_exist_instance)) {
		return _100217_exist_instance;
	}
	_97217_ok=(*this)._method_check_struct_ins(_97817_ins,_96134_decl->_field_token);
	if ((!(_97217_ok))) {
		return jule::new_ref<_2053cdc01_StructIns>();
	}
	return _97817_ins;
}



inline jule::Trait<_1da411226_Kind> _1da411226_TypeChecker::_method_get_def(jule::Ref<_2053703bd_IdentTypeDecl> _101730_decl) {
	{
		auto _range_expr = (*this)._field_ignore_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053703bd_GenericDecl> _1da411226_g = *_range_begin;
			_iter_begin_4399642352:;
			{
				if (_1da411226_g->_field_ident == _101730_decl->_field_ident) {
					return _1da411226_build_prim_type(_1da411226_g->_field_ident);
				}
			}
			_iter_next_4399642352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da411226_g = *_range_begin; goto _iter_begin_4399642352; }
			_iter_end_4399642352:;
		}
	}
	{
		auto _range_expr = (*this)._field_use_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da411226_TypeAlias> _1da411226_g = *_range_begin;
			_iter_begin_4399646480:;
			{
				if (_1da411226_g->_field_ident == _101730_decl->_field_ident) {
					jule::Ref<_2053cdc01_StructIns> _102625_st = _1da411226_g->_field_kind->_field_kind->_method_strct();
					if (jule::real(_102625_st)) {
						jule::Bool _102825_ok = (*this)._method_check_illegal_cycles(_101730_decl,jule::Any(_102625_st->_field_decl));
						if ((!(_102825_ok))) {
							return nullptr;
						}
					}
					return _1da411226_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_4399646480:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da411226_g = *_range_begin; goto _iter_begin_4399646480; }
			_iter_end_4399646480:;
		}
	}
	if ((!(_101730_decl->_field_cpp_linked))) {
		jule::Ref<_206b06c0d_Enum> _103821_e = (*this)._field_lookup.get()._method_find_enum(_101730_decl->_field_ident);
		if (jule::real(_103821_e)) {
			return (*this)._method_from_enum(_101730_decl,_103821_e);
		}
		jule::Ref<_2065895c5_Trait> _104321_t = (*this)._field_lookup.get()._method_find_trait(_101730_decl->_field_ident);
		if ((!(jule::real(_104321_t)))) {
			_104321_t=_206c94dac_find_builtin_trait(_101730_decl->_field_ident);
		}
		if (jule::real(_104321_t)) {
			if ((!((*this)._field_s->_method_is_accessible_define(_104321_t->_field_public,_104321_t->_field_token)))) {
				(*this)._method_push_err(_101730_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_101730_decl->_field_ident)}));
				return nullptr;
			}
			if (_101730_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_101730_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_101730_decl->_field_ident)}));
				return nullptr;
			}
			return _104321_t;
		}
	}
	jule::Ref<_2053cdc01_Struct> _106117_s = (*this)._field_lookup.get()._method_find_struct(_101730_decl->_field_ident,_101730_decl->_field_cpp_linked);
	if (jule::real(_106117_s)) {
		return (*this)._method_from_struct(_101730_decl,_106117_s);
	}
	jule::Ref<_1da411226_TypeAlias> _106617_ta = (*this)._field_lookup.get()._method_find_type_alias(_101730_decl->_field_ident,_101730_decl->_field_cpp_linked);
	if ((!(jule::real(_106617_ta)))) {
		_106617_ta=_206c94dac_find_builtin_type_alias(_101730_decl->_field_ident);
	}
	if (jule::real(_106617_ta)) {
		return (*this)._method_from_type_alias(_101730_decl,_106617_ta);
	}
	(*this)._method_push_err(_101730_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_101730_decl->_field_ident)}));
	return nullptr;
}



inline jule::Trait<_1da411226_Kind> _1da411226_TypeChecker::_method_build_ident(jule::Ref<_2053703bd_IdentTypeDecl> _107834_decl) {
	{
		if (!((_1da411226_is_prim(_107834_decl->_field_ident)))) { goto _case_end_4399681200; }
		_case_begin_4399681200:;
		{
			return (*this)._method_build_prim(_107834_decl);
		}
		goto _match_end_4399679568;
		_case_end_4399681200:;
		_case_begin_4399679744:;
		{
			return (*this)._method_get_def(_107834_decl);
		}
		goto _match_end_4399679568;
		_case_end_4399679744:;
		_match_end_4399679568:;
	}
}



inline jule::Ref<_1da411226_Ref> _1da411226_TypeChecker::_method_build_ref_from_type(jule::Ref<_1da411226_TypeKind> _108542_elem) {
	{
		if (!(((!(jule::real(_108542_elem)))))) { goto _case_end_4399684320; }
		_case_begin_4399684320:;
		{
			return jule::new_ref<_1da411226_Ref>();
		}
		goto _match_end_4399682768;
		_case_end_4399684320:;
		if (!((jule::real(_108542_elem->_method_strct())))) { goto _case_end_4399684448; }
		_case_begin_4399684448:;
		{
			jule::Ref<_2053cdc01_StructIns> _109217_s = _108542_elem->_method_strct();
			if (jule::real(_109217_s->_field_decl) && _109217_s->_field_decl->_field_cpp_linked) {
				(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1da411226_Ref>();
			}
		}
		goto _match_end_4399682768;
		_case_end_4399684448:;
		if (!((jule::real(_108542_elem->_method_ref())))) { goto _case_end_4399684576; }
		_case_begin_4399684576:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to another reference", 48),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da411226_Ref>();
		}
		goto _match_end_4399682768;
		_case_end_4399684576:;
		if (!((jule::real(_108542_elem->_method_ptr())))) { goto _case_end_4399684704; }
		_case_begin_4399684704:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to pointer", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da411226_Ref>();
		}
		goto _match_end_4399682768;
		_case_end_4399684704:;
		if (!((jule::real(_108542_elem->_method_enm())))) { goto _case_end_4399684832; }
		_case_begin_4399684832:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to enum", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da411226_Ref>();
		}
		goto _match_end_4399682768;
		_case_end_4399684832:;
		if (!((jule::real(_108542_elem->_method_arr())))) { goto _case_end_4399684960; }
		_case_begin_4399684960:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to array", 36),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da411226_Ref>();
		}
		goto _match_end_4399682768;
		_case_end_4399684960:;
		_match_end_4399682768:;
	}
	return jule::new_struct<_1da411226_Ref>(new( std::nothrow ) _1da411226_Ref(_108542_elem));
}



inline jule::Ref<_1da411226_Ref> _1da411226_TypeChecker::_method_build_ref(jule::Ref<_2053703bd_RefTypeDecl> _112032_decl) {
	jule::Bool _112113_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_112113_not_plain;
	});
	jule::Ref<_1da411226_TypeKind> _112517_elem = (*this)._method_check_decl(_112032_decl->_field_elem);
	return (*this)._method_build_ref_from_type(_112517_elem);
}



inline jule::Ref<_1da411226_Ptr> _1da411226_TypeChecker::_method_build_ptr_from_type(jule::Ref<_1da411226_TypeKind> _112942_elem) {
	{
		if (!(((!(jule::real(_112942_elem)))))) { goto _case_end_4399709520; }
		_case_begin_4399709520:;
		{
			return jule::new_ref<_1da411226_Ptr>();
		}
		goto _match_end_4399709264;
		_case_end_4399709520:;
		if (!((jule::real(_112942_elem->_method_ref())))) { goto _case_end_4399709648; }
		_case_begin_4399709648:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to reference", 34),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da411226_Ptr>();
		}
		goto _match_end_4399709264;
		_case_end_4399709648:;
		if (!((jule::real(_112942_elem->_method_enm())))) { goto _case_end_4399709776; }
		_case_begin_4399709776:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to enum", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da411226_Ptr>();
		}
		goto _match_end_4399709264;
		_case_end_4399709776:;
		if (!((jule::real(_112942_elem->_method_arr()) && _112942_elem->_method_arr()->_field_auto))) { goto _case_end_4399709904; }
		_case_begin_4399709904:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da411226_Ptr>();
		}
		goto _match_end_4399709264;
		_case_end_4399709904:;
		_match_end_4399709264:;
	}
	return jule::new_struct<_1da411226_Ptr>(new( std::nothrow ) _1da411226_Ptr(_112942_elem));
}



inline jule::Ref<_1da411226_Ptr> _1da411226_TypeChecker::_method_build_ptr(jule::Ref<_2053703bd_PtrTypeDecl> _115332_decl) {
	jule::Bool _115413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_115413_not_plain;
	});
	jule::Ref<_1da411226_TypeKind> _115817_elem = jule::new_ref<_1da411226_TypeKind>();
	if ((!(_115332_decl->_method_is_unsafe()))) {
		_115817_elem=(*this)._method_check_decl(_115332_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_115817_elem);
	}
	return jule::new_struct<_1da411226_Ptr>(new( std::nothrow ) _1da411226_Ptr(_115817_elem));
}



inline jule::Ref<_1da411226_Slc> _1da411226_TypeChecker::_method_build_slc(jule::Ref<_2053703bd_SlcTypeDecl> _117032_decl) {
	jule::Bool _117113_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_117113_not_plain;
	});
	jule::Ref<_1da411226_TypeKind> _117517_elem = (*this)._method_check_decl(_117032_decl->_field_elem);
	{
		if (!(((!(jule::real(_117517_elem)))))) { goto _case_end_4399734944; }
		_case_begin_4399734944:;
		{
			return jule::new_ref<_1da411226_Slc>();
		}
		goto _match_end_4399734720;
		_case_end_4399734944:;
		if (!((jule::real(_117517_elem->_method_arr()) && _117517_elem->_method_arr()->_field_auto))) { goto _case_end_4399735056; }
		_case_begin_4399735056:;
		{
			(*this)._method_push_err(_117032_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da411226_Slc>();
		}
		goto _match_end_4399734720;
		_case_end_4399735056:;
		_match_end_4399734720:;
	}
	return jule::new_struct<_1da411226_Slc>(new( std::nothrow ) _1da411226_Slc(_117517_elem));
}



inline jule::Ref<_1da411226_Arr> _1da411226_TypeChecker::_method_build_arr(jule::Ref<_2053703bd_ArrTypeDecl> _119232_decl) {
	jule::Bool _119313_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_119313_not_plain;
	});
	jule::Int _119717_n = 0LL;
	if ((!(_119232_decl->_method_auto_sized()))) {
		jule::Ref<_1da2d3bdc_Data> _120021_size = (*this)._field_s->_method_eval(_119232_decl->_field_size,(*this)._field_lookup);
		if ((!(jule::real(_120021_size)))) {
			return jule::new_ref<_1da411226_Arr>();
		}
		if ((!(_120021_size->_method_is_const()))) {
			(*this)._method_push_err(_119232_decl->_field_size->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da411226_Arr>();
		} else if ((!(jule::real(_120021_size->_field_kind->_method_prim()))) || (!(_1a8a8de8a_is_int(_120021_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_119232_decl->_field_size->_field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da411226_Arr>();
		}
		_119717_n=static_cast<jule::Int>(_120021_size->_field_constant->_method_as_i64());
		if (_119717_n < 0LL) {
			(*this)._method_push_err(_119232_decl->_field_elem->_field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da411226_Arr>();
		}
	}
	jule::Ref<_1da411226_TypeKind> _122017_elem = (*this)._method_check_decl(_119232_decl->_field_elem);
	{
		if (!(((!(jule::real(_122017_elem)))))) { goto _case_end_4399762384; }
		_case_begin_4399762384:;
		{
			return jule::new_ref<_1da411226_Arr>();
		}
		goto _match_end_4399761936;
		_case_end_4399762384:;
		if (!((jule::real(_122017_elem->_method_arr()) && _122017_elem->_method_arr()->_field_auto))) { goto _case_end_4399762496; }
		_case_begin_4399762496:;
		{
			(*this)._method_push_err(_119232_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da411226_Arr>();
		}
		goto _match_end_4399761936;
		_case_end_4399762496:;
		_match_end_4399761936:;
	}
	return jule::new_struct<_1da411226_Arr>(new( std::nothrow ) _1da411226_Arr(_119232_decl->_method_auto_sized(),_119717_n,_122017_elem));
}



inline jule::Ref<_1da411226_Map> _1da411226_TypeChecker::_method_build_map(jule::Ref<_2053703bd_MapTypeDecl> _123932_decl) {
	jule::Bool _124013_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_124013_not_plain;
	});
	jule::Ref<_1da411226_TypeKind> _124417_key = (*this)._method_check_decl(_123932_decl->_field_key);
	if ((!(jule::real(_124417_key)))) {
		return jule::new_ref<_1da411226_Map>();
	}
	jule::Ref<_1da411226_TypeKind> _124917_val = (*this)._method_check_decl(_123932_decl->_field_val);
	if ((!(jule::real(_124917_val)))) {
		return jule::new_ref<_1da411226_Map>();
	}
	if (jule::real(_124917_val->_method_enm())) {
		(*this)._method_push_err(_123932_decl->_field_val->_field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>({}));
	}
	return jule::new_struct<_1da411226_Map>(new( std::nothrow ) _1da411226_Map(_124417_key,_124917_val));
}



inline jule::Ref<_1da411226_Tuple> _1da411226_TypeChecker::_method_build_tuple(jule::Ref<_2053703bd_TupleTypeDecl> _126334_decl) {
	jule::Slice<jule::Ref<_1da411226_TypeKind>> _126417_types = jule::Slice<jule::Ref<_1da411226_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_126334_decl->_field_types.len())));
	{
		auto _range_expr = _126334_decl->_field_types;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1da411226_i = 0;
			jule::Ref<_2053703bd_TypeDecl> _1da411226_t = *_range_begin;
			_iter_begin_4399785648:;
			{
				jule::Ref<_1da411226_TypeKind> _126621_kind = (*this)._method_check_decl(_1da411226_t);
				if ((!(jule::real(_126621_kind)))) {
					return jule::new_ref<_1da411226_Tuple>();
				}
				_126417_types[static_cast<jule::Int>(_1da411226_i)]=_126621_kind;
			}
			_iter_next_4399785648:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1da411226_i; _1da411226_t = *_range_begin; goto _iter_begin_4399785648; }
			_iter_end_4399785648:;
		}
	}
	return jule::new_struct<_1da411226_Tuple>(new( std::nothrow ) _1da411226_Tuple(_126417_types));
}



inline jule::Bool _1da411226_TypeChecker::_method_check_fn_types(jule::Ref<_2053ddd54_FnIns> _127637_f) {
	jule::Bool _127650_ok = jule::Bool();
	{
		auto _range_expr = _127637_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_ParamIns> _1da411226_p = *_range_begin;
			_iter_begin_4399794944:;
			{
				_1da411226_p->_field_kind=(*this)._method_build(_1da411226_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_127650_ok=jule::real(_1da411226_p->_field_kind);
				if ((!(_127650_ok))) {
					_127650_ok = false;
					return _127650_ok;
				}
			}
			_iter_next_4399794944:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da411226_p = *_range_begin; goto _iter_begin_4399794944; }
			_iter_end_4399794944:;
		}
	}
	if ((!(_127637_f->_field_decl->_method_is_void()))) {
		_127637_f->_field_result=(*this)._method_build(_127637_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_127650_ok = jule::real(_127637_f->_field_result);
		return _127650_ok;
	}
	_127650_ok = true;
	return _127650_ok;
}



inline jule::Ref<_2053ddd54_FnIns> _1da411226_TypeChecker::_method_build_fn(jule::Ref<_2053703bd_FnDecl> _129331_decl) {
	if (_129331_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_129331_decl->_field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
		return jule::new_ref<_2053ddd54_FnIns>();
	}
	jule::Ref<_2053ddd54_Fn> _129917_f = _206a20e79_build_fn(_129331_decl);
	jule::Ref<_2053ddd54_FnIns> _130017_ins = _129917_f->_method_instance_force();
	_130017_ins->_field_anon=true;
	jule::Bool _130313_ok = (*this)._method_check_fn_types(_130017_ins);
	if ((!(_130313_ok))) {
		return jule::new_ref<_2053ddd54_FnIns>();
	}
	return _130017_ins;
}



inline jule::Trait<_1da411226_Kind> _1da411226_TypeChecker::_method_build_by_namespace(jule::Ref<_2053703bd_NamespaceTypeDecl> _131141_decl) {
	jule::Str _131213_path = _1da411226_build_link_path_by_tokens(_131141_decl->_field_idents);
	jule::Ref<_206e66325_ImportInfo> _131317_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_206e66325_ImportInfo>)>([=](jule::Ref<_206e66325_ImportInfo> _131353_imp) mutable -> jule::Bool {
		if ((_131141_decl->_field_idents.len() == 1LL) && (_131353_imp->_field_alias == _131213_path)) {
			return true;
		}
		return _131353_imp->_field_link_path == _131213_path;
	}));
	if ((!(jule::real(_131317_imp))) || (!(_131317_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_131141_decl->_field_idents[0LL],jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_131213_path)}));
		return nullptr;
	}
	jule::Trait<_206c8d636_Lookup> _132517_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_131317_imp;
	jule::Trait<_1da411226_Kind> _132817_kind = (*this)._method_build_ident(_131141_decl->_field_kind);
	(*this)._field_lookup=_132517_lookup;
	return _132817_kind;
}



inline jule::Ref<_1da411226_TypeKind> _1da411226_TypeChecker::_method_build(jule::Any _133528_decl_kind) {
	jule::Trait<_1da411226_Kind> _133617_kind = nullptr;
	{
		auto _match_expr{ _133528_decl_kind };
		if (!(_match_expr.type_is<jule::Ref<_1da411226_TypeKind>>())) { goto _case_end_4399852848; }
		_case_begin_4399852848:;
		{
			_133617_kind=_133528_decl_kind.operator jule::Ref<_1da411226_TypeKind>();
		}
		goto _match_end_4399849376;
		_case_end_4399852848:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_IdentTypeDecl>>())) { goto _case_end_4399853424; }
		_case_begin_4399853424:;
		{
			jule::Trait<_1da411226_Kind> _134321_t = (*this)._method_build_ident(_133528_decl_kind.operator jule::Ref<_2053703bd_IdentTypeDecl>());
			if (_134321_t != nullptr) {
				_133617_kind=_134321_t;
			}
		}
		goto _match_end_4399849376;
		_case_end_4399853424:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_RefTypeDecl>>())) { goto _case_end_4399853088; }
		_case_begin_4399853088:;
		{
			jule::Ref<_1da411226_Ref> _134921_t = (*this)._method_build_ref(_133528_decl_kind.operator jule::Ref<_2053703bd_RefTypeDecl>());
			if (jule::real(_134921_t)) {
				_133617_kind=_134921_t;
			}
		}
		goto _match_end_4399849376;
		_case_end_4399853088:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_PtrTypeDecl>>())) { goto _case_end_4399853200; }
		_case_begin_4399853200:;
		{
			jule::Ref<_1da411226_Ptr> _135521_t = (*this)._method_build_ptr(_133528_decl_kind.operator jule::Ref<_2053703bd_PtrTypeDecl>());
			if (jule::real(_135521_t)) {
				_133617_kind=_135521_t;
			}
		}
		goto _match_end_4399849376;
		_case_end_4399853200:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_SlcTypeDecl>>())) { goto _case_end_4399852240; }
		_case_begin_4399852240:;
		{
			jule::Ref<_1da411226_Slc> _136121_t = (*this)._method_build_slc(_133528_decl_kind.operator jule::Ref<_2053703bd_SlcTypeDecl>());
			if (jule::real(_136121_t)) {
				_133617_kind=_136121_t;
			}
		}
		goto _match_end_4399849376;
		_case_end_4399852240:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_ArrTypeDecl>>())) { goto _case_end_4399852352; }
		_case_begin_4399852352:;
		{
			jule::Ref<_1da411226_Arr> _136721_t = (*this)._method_build_arr(_133528_decl_kind.operator jule::Ref<_2053703bd_ArrTypeDecl>());
			if (jule::real(_136721_t)) {
				_133617_kind=_136721_t;
			}
		}
		goto _match_end_4399849376;
		_case_end_4399852352:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_MapTypeDecl>>())) { goto _case_end_4399852464; }
		_case_begin_4399852464:;
		{
			jule::Ref<_1da411226_Map> _137321_t = (*this)._method_build_map(_133528_decl_kind.operator jule::Ref<_2053703bd_MapTypeDecl>());
			if (jule::real(_137321_t)) {
				_133617_kind=_137321_t;
			}
		}
		goto _match_end_4399849376;
		_case_end_4399852464:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_TupleTypeDecl>>())) { goto _case_end_4399850176; }
		_case_begin_4399850176:;
		{
			jule::Ref<_1da411226_Tuple> _137921_t = (*this)._method_build_tuple(_133528_decl_kind.operator jule::Ref<_2053703bd_TupleTypeDecl>());
			if (jule::real(_137921_t)) {
				_133617_kind=_137921_t;
			}
		}
		goto _match_end_4399849376;
		_case_end_4399850176:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_FnDecl>>())) { goto _case_end_4399850288; }
		_case_begin_4399850288:;
		{
			jule::Ref<_2053ddd54_FnIns> _138521_t = (*this)._method_build_fn(_133528_decl_kind.operator jule::Ref<_2053703bd_FnDecl>());
			if (jule::real(_138521_t)) {
				_133617_kind=_138521_t;
			}
		}
		goto _match_end_4399849376;
		_case_end_4399850288:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_NamespaceTypeDecl>>())) { goto _case_end_4399850400; }
		_case_begin_4399850400:;
		{
			jule::Trait<_1da411226_Kind> _139121_t = (*this)._method_build_by_namespace(_133528_decl_kind.operator jule::Ref<_2053703bd_NamespaceTypeDecl>());
			if (_139121_t != nullptr) {
				_133617_kind=_139121_t;
			}
		}
		goto _match_end_4399849376;
		_case_end_4399850400:;
		_case_begin_4399849792:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1da411226_TypeKind>();
		}
		goto _match_end_4399849376;
		_case_end_4399849792:;
		_match_end_4399849376:;
	}
	if (_133617_kind == nullptr) {
		return jule::new_ref<_1da411226_TypeKind>();
	}
	{
		auto _match_expr{ _133617_kind };
		if (!(_match_expr.type_is<jule::Ref<_1da411226_TypeKind>>())) { goto _case_end_4399883856; }
		_case_begin_4399883856:;
		{
			return _133617_kind.operator jule::Ref<_1da411226_TypeKind>();
		}
		goto _match_end_4399880800;
		_case_end_4399883856:;
		_case_begin_4399882560:;
		{
			return jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_133617_kind));
		}
		goto _match_end_4399880800;
		_case_end_4399882560:;
		_match_end_4399880800:;
	}
}



inline jule::Ref<_1da411226_TypeKind> _1da411226_TypeChecker::_method_check_decl(jule::Ref<_2053703bd_TypeDecl> _141633_decl) {
	_20542560a_Token _141817_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_141633_decl->_field_token;
	jule::Ref<_1da411226_TypeKind> _142117_kind = (*this)._method_build(_141633_decl->_field_kind);
	(*this)._field_error_token=_141817_error_token;
	return _142117_kind;
}



inline void _1da411226_TypeChecker::_method_check(jule::Ref<_1da411226_TypeSymbol> _142728_t) {
	if ((!(jule::real(_142728_t->_field_decl)))) {
		return;
	}
	jule::Ref<_1da411226_TypeKind> _143217_kind = (*this)._method_check_decl(_142728_t->_field_decl);
	if ((!(jule::real(_143217_kind)))) {
		_142728_t->_method_remove_kind();
		return;
	}
	_142728_t->_field_kind=_143217_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _1da411226_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_206e66325_ImportInfo> _204dc9ec2_PlainImporter::_method_get_import(jule::Str _10033_path) {
	{
		auto _range_expr = (*this)._field_all_packages;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _204dc9ec2_p = *_range_begin;
			_iter_begin_4900437280:;
			{
				if (_204dc9ec2_p->_field_path == _10033_path) {
					return _204dc9ec2_p;
				}
			}
			_iter_next_4900437280:;
			++_range_begin;
			if (_range_begin != _range_end) { _204dc9ec2_p = *_range_begin; goto _iter_begin_4900437280; }
			_iter_end_4900437280:;
		}
	}
	return jule::new_ref<_206e66325_ImportInfo>();
}



inline std::tuple<jule::Slice<jule::Ref<_20521102d_Ast>>,jule::Slice<_20377124e_Log>> _204dc9ec2_PlainImporter::_method_import_package(jule::Str _11037_path) {
	jule::Slice<jule::Ref<_20522b4aa_DirEntry>> _11114_dirents;
	jule::Str _11123_err_msg;
	std::tie(_11114_dirents,_11123_err_msg) = _204dc9ec2_read_package_dirents(_11037_path);
	if (_11123_err_msg != jule::Str("", 0)) {
		jule::Slice<_20377124e_Log> _11321_errors = jule::Slice<_20377124e_Log>({_204dc9ec2_flat_compiler_err(_11123_err_msg)});
		return std::make_tuple(nullptr,_11321_errors);
	}
	jule::Slice<jule::Ref<_20521102d_Ast>> _11717_asts = jule::Slice<jule::Ref<_20521102d_Ast>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_11114_dirents.len())));
	{
		auto _range_expr = _11114_dirents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_20522b4aa_DirEntry> _204dc9ec2_dirent = *_range_begin;
			_iter_begin_4900442624:;
			{
				jule::Str _11917__path = _203896264_join(jule::Slice<jule::Str>({_11037_path,_204dc9ec2_dirent->_field_name}));
				jule::Ref<_2053bdb25_File> _12021_file = _2053bdb25_new_file_set(_11917__path);
				_12021_file->_method_fill(_204dc9ec2_read_buff(_12021_file->_method_path()));
				jule::Slice<_20377124e_Log> _12221_errors = _20547ded2_lex(_12021_file);
				if (_12221_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12221_errors);
				}
				jule::Ref<_2053a3313_FileInfo> _12721_finfo = _2053a3313_parse_file(_12021_file);
				if (_12721_finfo->_field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12721_finfo->_field_errors);
				}
				if ((!(_204b7a5ad_is_pass_file_annotation(_204dc9ec2_dirent->_field_name)))) {
					goto _iter_next_4900442624;
				}
				if ((!(_204dc9ec2_is_pass_build_directives(_12721_finfo->_field_ast)))) {
					goto _iter_next_4900442624;
				}
				_11717_asts=jule::append(_11717_asts,jule::Slice<jule::Ref<_20521102d_Ast>>({_12721_finfo->_field_ast}));
			}
			_iter_next_4900442624:;
			++_range_begin;
			if (_range_begin != _range_end) { _204dc9ec2_dirent = *_range_begin; goto _iter_begin_4900442624; }
			_iter_end_4900442624:;
		}
	}
	return std::make_tuple(_11717_asts,nullptr);
}



inline void _204dc9ec2_PlainImporter::_method_imported(jule::Ref<_206e66325_ImportInfo> _14835_imp) {
	{
		auto _range_expr = (*this)._field_all_packages;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _204dc9ec2_p = *_range_begin;
			_iter_begin_4400057328:;
			{
				if ((_204dc9ec2_p->_field_cpp_linked == _14835_imp->_field_cpp_linked) && (_204dc9ec2_p->_field_link_path == _14835_imp->_field_link_path)) {
					return;
				}
			}
			_iter_next_4400057328:;
			++_range_begin;
			if (_range_begin != _range_end) { _204dc9ec2_p = *_range_begin; goto _iter_begin_4400057328; }
			_iter_end_4400057328:;
		}
	}
	(*this)._field_all_packages=jule::append((*this)._field_all_packages,jule::Slice<jule::Ref<_206e66325_ImportInfo>>({_14835_imp}));
}







std::ostream &operator<<(std::ostream &_Stream, const _204dc9ec2_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _204a335a9_OrderedDefines &_Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ref<_204a33ac6_IR>,jule::Slice<_20377124e_Log>> _204a33ac6_IR::_static_method_build(jule::Str _2525_path,jule::Int _2536_flags) {
	jule::Ref<_204dc9ec2_PlainImporter> _2617_importer = jule::new_struct<_204dc9ec2_PlainImporter>(new( std::nothrow ) _204dc9ec2_PlainImporter());
	jule::Slice<jule::Ref<_20521102d_Ast>> _2718_files;
	jule::Slice<_20377124e_Log> _2729_logs;
	std::tie(_2718_files,_2729_logs) = _2617_importer->_method_import_package(_2525_path);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_204a33ac6_IR>(),_2729_logs);
	}
	if (_2718_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_204a33ac6_IR>(),nullptr);
	}
	jule::Ref<_206e66325_Package> _3618_pkg;
	std::tie(_3618_pkg,_2729_logs) = _206c8d01a_analyze_package(_2718_files,_2617_importer,_2536_flags);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_204a33ac6_IR>(),_2729_logs);
	}
	jule::Ref<_204a33ac6_IR> _4117_ir = jule::new_struct<_204a33ac6_IR>(new( std::nothrow ) _204a33ac6_IR(jule::Slice<jule::Str>(),_3618_pkg,_2617_importer->_field_all_packages,_204a335a9_OrderedDefines()));
	_4117_ir->_field_passes=_204a33ac6_get_all_unique_passes(_4117_ir->_field_main,_4117_ir->_field_used);
	return std::make_tuple(_4117_ir,nullptr);
}



inline void _204a33ac6_IR::_method_append_structs(jule::Ref<_206e66325_Package>& _5234_p,jule::Slice<jule::Ref<_2053cdc01_Struct>>& _5258_buffer) {
	{
		auto _range_expr = _5234_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _204a33ac6_f = *_range_begin;
			_iter_begin_4400119200:;
			{
				{
					auto _range_expr = _204a33ac6_f->_field_structs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_2053cdc01_Struct> _204a33ac6_s = *_range_begin;
						_iter_begin_4400121152:;
						{
							if ((!(_204a33ac6_s->_field_cpp_linked))) {
								_5258_buffer=jule::append(_5258_buffer,jule::Slice<jule::Ref<_2053cdc01_Struct>>({_204a33ac6_s}));
							}
						}
						_iter_next_4400121152:;
						++_range_begin;
						if (_range_begin != _range_end) { _204a33ac6_s = *_range_begin; goto _iter_begin_4400121152; }
						_iter_end_4400121152:;
					}
				}
			}
			_iter_next_4400119200:;
			++_range_begin;
			if (_range_begin != _range_end) { _204a33ac6_f = *_range_begin; goto _iter_begin_4400119200; }
			_iter_end_4400119200:;
		}
	}
}



inline jule::Slice<jule::Ref<_2053cdc01_Struct>> _204a33ac6_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ref<_2053cdc01_Struct>> _6517_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_6517_buffer);
	{
		auto _range_expr = (*this)._field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _204a33ac6_u = *_range_begin;
			_iter_begin_4400126800:;
			{
				if ((!(_204a33ac6_u->_field_cpp_linked))) {
					(*this)._method_append_structs(_204a33ac6_u->_field_package,_6517_buffer);
				}
			}
			_iter_next_4400126800:;
			++_range_begin;
			if (_range_begin != _range_end) { _204a33ac6_u = *_range_begin; goto _iter_begin_4400126800; }
			_iter_end_4400126800:;
		}
	}
	return _6517_buffer;
}



inline void _204a33ac6_IR::_method_append_vars(jule::Ref<_206e66325_Package>& _7831_p,jule::Slice<jule::Ref<_1d9e22661_Var>>& _7855_buffer) {
	{
		auto _range_expr = _7831_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _204a33ac6_f = *_range_begin;
			_iter_begin_4400133584:;
			{
				{
					auto _range_expr = _204a33ac6_f->_field_vars;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1d9e22661_Var> _204a33ac6_v = *_range_begin;
						_iter_begin_4400135536:;
						{
							if ((!(_204a33ac6_v->_field_cpp_linked))) {
								_7855_buffer=jule::append(_7855_buffer,jule::Slice<jule::Ref<_1d9e22661_Var>>({_204a33ac6_v}));
							}
						}
						_iter_next_4400135536:;
						++_range_begin;
						if (_range_begin != _range_end) { _204a33ac6_v = *_range_begin; goto _iter_begin_4400135536; }
						_iter_end_4400135536:;
					}
				}
			}
			_iter_next_4400133584:;
			++_range_begin;
			if (_range_begin != _range_end) { _204a33ac6_f = *_range_begin; goto _iter_begin_4400133584; }
			_iter_end_4400133584:;
		}
	}
}



inline jule::Slice<jule::Ref<_1d9e22661_Var>> _204a33ac6_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ref<_1d9e22661_Var>> _9117_buffer = nullptr;
	(*this)._method_append_vars((*this)._field_main,_9117_buffer);
	{
		auto _range_expr = (*this)._field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _204a33ac6_u = *_range_begin;
			_iter_begin_4400141184:;
			{
				if ((!(_204a33ac6_u->_field_cpp_linked))) {
					(*this)._method_append_vars(_204a33ac6_u->_field_package,_9117_buffer);
				}
			}
			_iter_next_4400141184:;
			++_range_begin;
			if (_range_begin != _range_end) { _204a33ac6_u = *_range_begin; goto _iter_begin_4400141184; }
			_iter_end_4400141184:;
		}
	}
	return _9117_buffer;
}



inline void _204a33ac6_IR::_method_order(void) {
	(*this)._field_ordered._field_structs=(*this)._method_get_all_structures();
	(*this)._field_ordered._field_globals=(*this)._method_get_all_variables();
	_204a335a9_DefineOrderer::_static_method_order_variables((*this)._field_ordered._field_globals);
	_204a335a9_DefineOrderer::_static_method_order_structures((*this)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _204a33ac6_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204a335a9_DefineOrderer::_static_method_is_struct_ordered(jule::Slice<jule::Ref<_2053cdc01_Struct>>& _1738_structs,jule::Ref<_2053cdc01_Struct> _1758_s) {
	{
		auto _range_expr = _1758_s->_field_depends;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _204a335a9_d = *_range_begin;
			_iter_begin_4400161808:;
			{
				{
					auto _range_expr = _1738_structs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_2053cdc01_Struct> _204a335a9_ss = *_range_begin;
						_iter_begin_4400163584:;
						{
							if ((_204a335a9_ss).alloc == (_1758_s).alloc) {
								return false;
							}
							if ((_204a335a9_ss).alloc == (_204a335a9_d).alloc) {
								goto _iter_end_4400163584;
							}
						}
						_iter_next_4400163584:;
						++_range_begin;
						if (_range_begin != _range_end) { _204a335a9_ss = *_range_begin; goto _iter_begin_4400163584; }
						_iter_end_4400163584:;
					}
				}
			}
			_iter_next_4400161808:;
			++_range_begin;
			if (_range_begin != _range_end) { _204a335a9_d = *_range_begin; goto _iter_begin_4400161808; }
			_iter_end_4400161808:;
		}
	}
	return true;
}



inline void _204a335a9_DefineOrderer::_static_method_order_structures(jule::Slice<jule::Ref<_2053cdc01_Struct>>& _3441_structs) {
	jule::I64 _3513_n = _3441_structs.len();
	_julec_label_repeat:;
	jule::Bool _3717_order_changed = false;
	jule::Int _3817_i = 0LL;
	_iter_begin_4400170192:;
	if (!(_3817_i < _3513_n)) { goto _iter_end_4400170192; }
	{
		jule::Bool _4021_swapped = false;
		jule::Int _4221_j = 0LL;
		_iter_begin_4400173024:;
		if (!(_4221_j < ((_3513_n - _3817_i) - 1LL))) { goto _iter_end_4400173024; }
		{
			if ((!(_204a335a9_DefineOrderer::_static_method_is_struct_ordered(_3441_structs,_3441_structs[static_cast<jule::Int>(_4221_j)])))) {
				std::tie(_3441_structs[static_cast<jule::Int>(_4221_j)],_3441_structs[static_cast<jule::Int>(_4221_j + 1LL)]) = std::make_tuple(_3441_structs[static_cast<jule::Int>(_4221_j + 1LL)],_3441_structs[static_cast<jule::Int>(_4221_j)]);
				_4021_swapped=true;
				_3717_order_changed=true;
			}
		}
		_iter_next_4400173024:;
		(_4221_j)++;
		goto _iter_begin_4400173024;
		_iter_end_4400173024:;
		if ((!(_4021_swapped))) {
			goto _iter_end_4400170192;
		}
	}
	_iter_next_4400170192:;
	(_3817_i)++;
	goto _iter_begin_4400170192;
	_iter_end_4400170192:;
	if (_3717_order_changed) {
		goto _julec_label_repeat;
	}
}



inline jule::Bool _204a335a9_DefineOrderer::_static_method_is_var_ordered(jule::Slice<jule::Ref<_1d9e22661_Var>>& _6135_vars,jule::Ref<_1d9e22661_Var> _6149_v) {
	{
		auto _range_expr = _6149_v->_field_depends;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d9e22661_Var> _204a335a9_d = *_range_begin;
			_iter_begin_4400188128:;
			{
				{
					auto _range_expr = _6135_vars;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1d9e22661_Var> _204a335a9_vv = *_range_begin;
						_iter_begin_4400189904:;
						{
							if ((_204a335a9_vv).alloc == (_6149_v).alloc) {
								return false;
							}
							if ((_204a335a9_vv).alloc == (_204a335a9_d).alloc) {
								goto _iter_end_4400189904;
							}
						}
						_iter_next_4400189904:;
						++_range_begin;
						if (_range_begin != _range_end) { _204a335a9_vv = *_range_begin; goto _iter_begin_4400189904; }
						_iter_end_4400189904:;
					}
				}
			}
			_iter_next_4400188128:;
			++_range_begin;
			if (_range_begin != _range_end) { _204a335a9_d = *_range_begin; goto _iter_begin_4400188128; }
			_iter_end_4400188128:;
		}
	}
	return true;
}



inline void _204a335a9_DefineOrderer::_static_method_order_variables(jule::Slice<jule::Ref<_1d9e22661_Var>>& _7840_vars) {
	jule::I64 _7913_n = _7840_vars.len();
	_julec_label_repeat:;
	jule::Bool _8117_order_changed = false;
	jule::Int _8217_i = 0LL;
	_iter_begin_4400196512:;
	if (!(_8217_i < _7913_n)) { goto _iter_end_4400196512; }
	{
		jule::Bool _8421_swapped = false;
		jule::Int _8621_j = 0LL;
		_iter_begin_4400199344:;
		if (!(_8621_j < ((_7913_n - _8217_i) - 1LL))) { goto _iter_end_4400199344; }
		{
			if ((!(_204a335a9_DefineOrderer::_static_method_is_var_ordered(_7840_vars,_7840_vars[static_cast<jule::Int>(_8621_j)])))) {
				std::tie(_7840_vars[static_cast<jule::Int>(_8621_j)],_7840_vars[static_cast<jule::Int>(_8621_j + 1LL)]) = std::make_tuple(_7840_vars[static_cast<jule::Int>(_8621_j + 1LL)],_7840_vars[static_cast<jule::Int>(_8621_j)]);
				_8421_swapped=true;
				_8117_order_changed=true;
			}
		}
		_iter_next_4400199344:;
		(_8621_j)++;
		goto _iter_begin_4400199344;
		_iter_end_4400199344:;
		if ((!(_8421_swapped))) {
			goto _iter_end_4400196512;
		}
	}
	_iter_next_4400196512:;
	(_8217_i)++;
	goto _iter_begin_4400196512;
	_iter_end_4400196512:;
	if (_8117_order_changed) {
		goto _julec_label_repeat;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _204a335a9_DefineOrderer &_Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _20385a2c2_ScopeDeadCode::_method_optimize_child(jule::Ref<_206b0557a_Scope>& _2239_s) {
	jule::Ref<_20385a2c2_ScopeDeadCode> _2317_sdc = jule::new_struct<_20385a2c2_ScopeDeadCode>(new( std::nothrow ) _20385a2c2_ScopeDeadCode(this->self,_2239_s,(&(_2239_s->_field_stmts)),jule::Int()));
	{
		_2317_sdc->_method_optimize_stmts();
	}
}



inline void _20385a2c2_ScopeDeadCode::_method_eliminate_followed(void) {
	(*((*this)._field_stmts))=(*((*this)._field_stmts)).slice(0LL,static_cast<jule::Int>((*this)._field_i + 1LL));
	jule::Ref<_20385a2c2_ScopeDeadCode> _3317_parent = (*this)._field_parent;
	_iter_begin_4400489584:;
	if (!(jule::real(_3317_parent))) { goto _iter_end_4400489584; }
	{
		(*(_3317_parent->_field_stmts))=(*(_3317_parent->_field_stmts)).slice(0LL,static_cast<jule::Int>(_3317_parent->_field_i + 1LL));
		_3317_parent=_3317_parent->_field_parent;
	}
	_iter_next_4400489584:;
	goto _iter_begin_4400489584;
	_iter_end_4400489584:;
}



inline void _20385a2c2_ScopeDeadCode::_method_optimize_stmt(jule::Any _4044_st) {
	{
		auto _match_expr{ _4044_st };
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_Scope>>())) { goto _case_end_4400496768; }
		_case_begin_4400496768:;
		{
			jule::Ref<_206b0557a_Scope> _4321_scope = _4044_st.operator jule::Ref<_206b0557a_Scope>();
			if (_4321_scope->_field_deferred) {
				_20385a2c2_eliminate_dead_code_of_scope(_4321_scope);
			} else {
				this->self->_method_optimize_child(_4321_scope);
			}
		}
		goto _match_end_4400496432;
		_case_end_4400496768:;
		if (!(_match_expr.type_is<jule::Ref<_1da2d3bdc_Data>>())) { goto _case_end_4400496896; }
		_case_begin_4400496896:;
		{
			{
				auto _match_expr{ _4044_st.operator jule::Ref<_1da2d3bdc_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_206e63542_BuiltinPanicCallExprModel>>())) { goto _case_end_4400503648; }
				_case_begin_4400503648:;
				{
					this->self->_method_eliminate_followed();
				}
				goto _match_end_4400500912;
				_case_end_4400503648:;
				_match_end_4400500912:;
			}
		}
		goto _match_end_4400496432;
		_case_end_4400496896:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_RetSt>>())) { goto _case_end_4400497152; }
		_case_begin_4400497152:;
		{
			this->self->_method_eliminate_followed();
		}
		goto _match_end_4400496432;
		_case_end_4400497152:;
		_match_end_4400496432:;
	}
}



inline void _20385a2c2_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	_iter_begin_4400498016:;
	if (!(this->self->_field_i < this->self->_field_stmts->len())) { goto _iter_end_4400498016; }
	{
		this->self->_method_optimize_stmt((*(this->self->_field_stmts))[static_cast<jule::Int>(this->self->_field_i)]);
	}
	_iter_next_4400498016:;
	(this->self->_field_i)++;
	goto _iter_begin_4400498016;
	_iter_end_4400498016:;
}







std::ostream &operator<<(std::ostream &_Stream, const _20385a2c2_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2049ab4bb_IndexRangeSetter::_method_setup_vars(jule::Ref<_1d9e22661_Var> _4729_key_a,jule::Ref<_1d9e22661_Var> _4746_key_b) {
	jule::Str _4813_indent = _1a8e8cc29_indent();
	jule::Str _5017_obj = jule::Str("", 0);
	if (jule::real(_4729_key_a)) {
		_5017_obj+=_1a8e8cc29_gen_var_init_expr(_4729_key_a,jule::Str("0", 1));
		_5017_obj+=jule::Str("\n", 1);
		_5017_obj+=_4813_indent;
	}
	if (jule::real(_4746_key_b)) {
		_5017_obj+=_1a8e8cc29_gen_var_init_expr(_4746_key_b,jule::Str("*_range_begin", 13));
		_5017_obj+=jule::Str("\n", 1);
		_5017_obj+=_4813_indent;
	}
	return _5017_obj;
}



inline jule::Str _2049ab4bb_IndexRangeSetter::_method_next_steps(jule::Ref<_1d9e22661_Var> _6629_key_a,jule::Ref<_1d9e22661_Var> _6646_key_b,jule::Str _6659_begin) {
	jule::Str _6713_indent = _1a8e8cc29_indent();
	jule::Str _6917_obj = jule::Str("++_range_begin;\n", 16);
	_6917_obj+=_6713_indent;
	_6917_obj+=jule::Str("if (_range_begin != _range_end) { ", 34);
	if (jule::real(_6629_key_a)) {
		_6917_obj+=(jule::Str("++", 2) + _1a8e524c4_var_out_ident(_6629_key_a)) + jule::Str("; ", 2);
	}
	if (jule::real(_6646_key_b)) {
		_6917_obj+=_1a8e524c4_var_out_ident(_6646_key_b) + jule::Str(" = *_range_begin; ", 18);
	}
	_6917_obj+=(jule::Str("goto ", 5) + _6659_begin) + jule::Str("; }\n", 4);
	return _6917_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _2049ab4bb_IndexRangeSetter &_Src) {
	_Stream << "IndexRangeSetter{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2049ab4bb_MapRangeSetter::_method_setup_vars(jule::Ref<_1d9e22661_Var> _8829_key_a,jule::Ref<_1d9e22661_Var> _8846_key_b) {
	jule::Str _8913_indent = _1a8e8cc29_indent();
	jule::Str _9017_obj = jule::Str("", 0);
	if (jule::real(_8829_key_a)) {
		_9017_obj+=_1a8e8cc29_gen_var_init_expr(_8829_key_a,jule::Str("_range_begin->first", 19));
		_9017_obj+=jule::Str("\n", 1);
		_9017_obj+=_8913_indent;
	}
	if (jule::real(_8846_key_b)) {
		_9017_obj+=_1a8e8cc29_gen_var_init_expr(_8846_key_b,jule::Str("_range_begin->second", 20));
		_9017_obj+=jule::Str("\n", 1);
		_9017_obj+=_8913_indent;
	}
	return _9017_obj;
}



inline jule::Str _2049ab4bb_MapRangeSetter::_method_next_steps(jule::Ref<_1d9e22661_Var> _10729_key_a,jule::Ref<_1d9e22661_Var> _10746_key_b,jule::Str _10759_begin) {
	jule::Str _10813_indent = _1a8e8cc29_indent();
	jule::Str _11017_obj = jule::Str("++_range_begin;\n", 16);
	_11017_obj+=_10813_indent;
	_11017_obj+=jule::Str("if (_range_begin != _range_end) { ", 34);
	if (jule::real(_10729_key_a)) {
		_11017_obj+=_1a8e524c4_var_out_ident(_10729_key_a);
		_11017_obj+=jule::Str(" = _range_begin->first; ", 24);
	}
	if (jule::real(_10746_key_b)) {
		_11017_obj+=_1a8e524c4_var_out_ident(_10746_key_b);
		_11017_obj+=jule::Str(" = _range_begin->second; ", 25);
	}
	_11017_obj+=(jule::Str("goto ", 5) + _10759_begin) + jule::Str("; }\n", 4);
	return _11017_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _2049ab4bb_MapRangeSetter &_Src) {
	_Stream << "MapRangeSetter{";
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _204612364_is_surrogate(jule::I32 _6021_r) {
	return (55296LL <= _6021_r) && (_6021_r < 57344LL);
}



inline jule::I32 _204612364_decode_rune(jule::I32 _6720_r1,jule::I32 _6730_r2) {
	if ((((55296LL <= _6720_r1) && (_6720_r1 < 56320LL)) && (56320LL <= _6730_r2)) && (_6730_r2 < 57344LL)) {
		return static_cast<jule::I32>((((_6720_r1 - 55296LL) << 10LL) | (_6730_r2 - 56320LL)) + 65536LL);
	}
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _204612364_encode_rune(jule::I32 _7724_r) {
	jule::I32 _7735_r1 = jule::I32();
	jule::I32 _7745_r2 = jule::I32();
	if ((_7724_r < 65536LL) || (_7724_r > 1114111LL)) {
		_7735_r1 = 65533LL;
		_7745_r2 = 65533LL;
		return std::make_tuple(_7735_r1,_7745_r2);
	}
	_7724_r-=65536LL;
	_7735_r1 = static_cast<jule::I32>(55296LL + ((_7724_r >> 10LL) & 1023LL));
	_7745_r2 = static_cast<jule::I32>(56320LL + (_7724_r & 1023LL));
	return std::make_tuple(_7735_r1,_7745_r2);
}



inline jule::Slice<jule::U16> _204612364_encode(jule::Slice<jule::I32> _8615_s) {
	jule::I64 _8713_n = _8615_s.len();
	{
		auto _range_expr = _8615_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _204612364_v = *_range_begin;
			_iter_begin_4372833264:;
			{
				if (_204612364_v >= 65536LL) {
					(_8713_n)++;
				}
			}
			_iter_next_4372833264:;
			++_range_begin;
			if (_range_begin != _range_end) { _204612364_v = *_range_begin; goto _iter_begin_4372833264; }
			_iter_end_4372833264:;
		}
	}
	jule::Slice<jule::U16> _9413_a = jule::Slice<jule::U16>::alloc(static_cast<jule::Int>(_8713_n));
	_8713_n=0LL;
	{
		auto _range_expr = _8615_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _204612364_v = *_range_begin;
			_iter_begin_4373035136:;
			{
				{
					if (!(((0LL <= _204612364_v) && (_204612364_v < 55296LL)) || ((57344LL <= _204612364_v) && (_204612364_v < 65536LL)))) { goto _case_end_4373660432; }
					_case_begin_4373660432:;
					{
						_9413_a[static_cast<jule::Int>(_8713_n)]=static_cast<jule::U16>(_204612364_v);
						(_8713_n)++;
					}
					goto _match_end_4373522384;
					_case_end_4373660432:;
					if (!(((65536LL <= _204612364_v) && (_204612364_v <= 1114111LL)))) { goto _case_end_4373837776; }
					_case_begin_4373837776:;
					{
						jule::I32 _10418_r1;
						jule::I32 _10422_r2;
						std::tie(_10418_r1,_10422_r2) = _204612364_encode_rune(_204612364_v);
						_9413_a[static_cast<jule::Int>(_8713_n)]=static_cast<jule::U16>(_10418_r1);
						_9413_a[static_cast<jule::Int>(_8713_n + 1LL)]=static_cast<jule::U16>(_10422_r2);
						_8713_n+=2LL;
					}
					goto _match_end_4373522384;
					_case_end_4373837776:;
					_case_begin_4373596176:;
					{
						_9413_a[static_cast<jule::Int>(_8713_n)]=static_cast<jule::U16>(65533LLU);
						(_8713_n)++;
					}
					goto _match_end_4373522384;
					_case_end_4373596176:;
					_match_end_4373522384:;
				}
			}
			_iter_next_4373035136:;
			++_range_begin;
			if (_range_begin != _range_end) { _204612364_v = *_range_begin; goto _iter_begin_4373035136; }
			_iter_end_4373035136:;
		}
	}
	return _9413_a.slice(0LL,static_cast<jule::Int>(_8713_n));
}



inline jule::Slice<jule::I32> _204612364_decode(jule::Slice<jule::U16> _11815_s) {
	jule::Slice<jule::I32> _11913_a = jule::Slice<jule::I32>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_11815_s.len())));
	jule::Int _12013_n = 0LL;
	jule::Int _12113_i = 0LL;
	_iter_begin_4374610608:;
	if (!(_12113_i < _11815_s.len())) { goto _iter_end_4374610608; }
	{
		jule::U16 _12313_r = _11815_s[static_cast<jule::Int>(_12113_i)];
		{
			if (!((_12313_r < 55296LL) || (57344LL <= _12313_r))) { goto _case_end_4373195008; }
			_case_begin_4373195008:;
			{
				_11913_a[static_cast<jule::Int>(_12013_n)]=static_cast<jule::I32>(_12313_r);
			}
			goto _match_end_4372835920;
			_case_end_4373195008:;
			if (!((((((55296LL <= _12313_r) && (_12313_r < 56320LL)) && ((_12113_i + 1LL) < _11815_s.len())) && (56320LL <= _11815_s[static_cast<jule::Int>(_12113_i + 1LL)])) && (_11815_s[static_cast<jule::Int>(_12113_i + 1LL)] < 57344LL)))) { goto _case_end_4373224000; }
			_case_begin_4373224000:;
			{
				_11913_a[static_cast<jule::Int>(_12013_n)]=static_cast<jule::I32>(_204612364_decode_rune(static_cast<jule::I32>(_12313_r),static_cast<jule::I32>(_11815_s[static_cast<jule::Int>(_12113_i + 1LL)])));
				(_12113_i)++;
			}
			goto _match_end_4372835920;
			_case_end_4373224000:;
			_case_begin_4372845600:;
			{
				_11913_a[static_cast<jule::Int>(_12013_n)]=65533LL;
			}
			goto _match_end_4372835920;
			_case_end_4372845600:;
			_match_end_4372835920:;
		}
		(_12013_n)++;
	}
	_iter_next_4374610608:;
	(_12113_i)++;
	goto _iter_begin_4374610608;
	_iter_end_4374610608:;
	return _11913_a.slice(0LL,static_cast<jule::Int>(_12013_n));
}



inline jule::Slice<jule::U16> _204612364_append_rune(jule::Slice<jule::U16> _14524_a,jule::I32 _14534_r) {
	{
		if (!(((0LL <= _14534_r) && (_14534_r < 55296LL)) || ((57344LL <= _14534_r) && (_14534_r < 65536LL)))) { goto _case_end_4374280816; }
		_case_begin_4374280816:;
		{
			return jule::append(_14524_a,jule::Slice<jule::U16>({static_cast<jule::U16>(_14534_r)}));
		}
		goto _match_end_4374175168;
		_case_end_4374280816:;
		if (!(((65536LL <= _14534_r) && (_14534_r <= 1114111LL)))) { goto _case_end_4374348048; }
		_case_begin_4374348048:;
		{
			jule::I32 _15214_r1;
			jule::I32 _15218_r2;
			std::tie(_15214_r1,_15218_r2) = _204612364_encode_rune(_14534_r);
			return jule::append(_14524_a,jule::Slice<jule::U16>({static_cast<jule::U16>(_15214_r1),static_cast<jule::U16>(_15218_r2)}));
		}
		goto _match_end_4374175168;
		_case_end_4374348048:;
		_match_end_4374175168:;
	}
	return jule::append(_14524_a,jule::Slice<jule::U16>({65533LLU}));
}



inline void* _20393537a_malloc(jule::Uint _2215_size) {
	return malloc(_2215_size);
}



inline void* _20393537a_calloc(jule::Uint _2915_size,jule::Uint _2927_n) {
	return calloc(_2915_size,_2927_n);
}



inline void* _20393537a_realloc(void* _3727_ptr,jule::Uint _3741_size) {
	return realloc(_3727_ptr,_3741_size);
}



inline void _20393537a_free(void* _4524_ptr) {
	free(_4524_ptr);
}























inline jule::Str _2039a5483_type_id(jule::Any _11316_a) {
	if (_11316_a == nullptr) {
		return jule::Str("", 0);
	}
	return __jule_type_id_of_any(_11316_a);
}



inline jule::Slice<jule::U16> _2045e2c90_utf16_from_str(jule::Str _1523_s) {
	
	jule::Slice<jule::I32> _219_runes = static_cast<jule::Slice<jule::I32>>(_1523_s);
	jule::Slice<jule::U16> _2213_buff = jule::Slice<jule::U16>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_219_runes.len())));
	{
		auto _range_expr = _219_runes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _2045e2c90_r = *_range_begin;
			_iter_begin_4374582528:;
			{
				if (_2045e2c90_r == 0LL) {
					goto _iter_end_4374582528;
				}
				_2213_buff=_204612364_append_rune(_2213_buff,_2045e2c90_r);
			}
			_iter_next_4374582528:;
			++_range_begin;
			if (_range_begin != _range_end) { _2045e2c90_r = *_range_begin; goto _iter_begin_4374582528; }
			_iter_end_4374582528:;
		}
	}
	return _204612364_append_rune(_2213_buff,0LL);
}



inline jule::Str _2045e2c90_utf16_to_str(jule::Slice<jule::U16> _3521_s) {
	if (_3521_s == nullptr) {
		return jule::Str("", 0);
	}
	jule::Slice<jule::U16> _3913_code_page = (*((&(_3521_s))));
	{
		auto _range_expr = _3521_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2045e2c90_i = 0;
			jule::U16 _2045e2c90_v = *_range_begin;
			_iter_begin_4374619680:;
			{
				if (_2045e2c90_v == 0LL) {
					_3913_code_page=_3913_code_page.slice(0LL,static_cast<jule::Int>(_2045e2c90_i));
					goto _iter_end_4374619680;
				}
			}
			_iter_next_4374619680:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2045e2c90_i; _2045e2c90_v = *_range_begin; goto _iter_begin_4374619680; }
			_iter_end_4374619680:;
		}
	}
	return static_cast<jule::Str>(_204612364_decode(_3913_code_page));
}



inline jule::Str _2045e2c90_u16_ptr_to_str(jule::U16* _5130_s) {
	if (_5130_s == nullptr) {
		return jule::Str("", 0);
	}
	jule::Slice<jule::U16> _5613_code_page = nullptr;
	jule::Int _5713_i = 0LL;
	_iter_begin_4373993472:;
	{
		jule::U16 _5913_r = _5130_s[static_cast<jule::Int>(_5713_i)];
		if (_5913_r == 0LL) {
			return static_cast<jule::Str>(_204612364_decode(_5613_code_page));
		}
		_5613_code_page=jule::append(_5613_code_page,jule::Slice<jule::U16>({_5913_r}));
	}
	_iter_next_4373993472:;
	(_5713_i)++;
	goto _iter_begin_4373993472;
	_iter_end_4373993472:;
	return jule::Str("", 0);
}



inline jule::Str _2045e2c90_byte_ptr_to_str(jule::U8* _7031_s) {
	if (_7031_s == nullptr) {
		return jule::Str("", 0);
	}
	return __jule_str_from_byte_ptr(_7031_s);
}



inline jule::Int _2039a6dad_puts(jule::Str _913_s) {
	return static_cast<signed>(static_cast<signed>(puts(((char*)((&(_913_s[0LL])))))));
}



inline jule::Int _203934775_get_last_errno(void) {
	return errno;
}



inline jule::Int _203935853_stat(jule::U8* _4620_path,struct stat* _4637_stat) {
	return static_cast<jule::Int>(__jule_stat(((char*)(_4620_path)),_4637_stat));
}



inline jule::Int _203935853_open(jule::U8* _5120_path,jule::Int _5133_flag,jule::Int _5144_mode) {
	return static_cast<jule::Int>(open(((char*)(_5120_path)),_5133_flag,_5144_mode));
}



inline jule::U8* _203935853_getcwd(jule::U8* _5722_buff,jule::Uint _5735_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5722_buff)),_5735_bufflen)));
}



inline DIR* _203935853_opendir(jule::U8* _6223_path) {
	return opendir(((char*)(_6223_path)));
}



inline struct dirent* _203935853_readdir(DIR* _6527_dir) {
	return readdir(_6527_dir);
}



inline jule::Int _203935853_closedir(DIR* _6828_dir) {
	return static_cast<jule::Int>(closedir(_6828_dir));
}



inline jule::Int _203935853_chdir(jule::U8* _7121_path) {
	return static_cast<jule::Int>(chdir(((char*)(_7121_path))));
}



inline jule::Int _203935853_remove(jule::U8* _7422_path) {
	return static_cast<jule::Int>(remove(((char*)(_7422_path))));
}



inline jule::Int _203935853_mkdir(jule::U8* _7721_path,jule::Int _7734_mode) {
	return static_cast<jule::Int>(mkdir(((char*)(_7721_path)),_7734_mode));
}



inline jule::Int _203935853_rmdir(jule::U8* _8221_path) {
	return static_cast<jule::Int>(rmdir(((char*)(_8221_path))));
}



inline jule::Int _203935853_unlink(jule::U8* _8522_path) {
	return static_cast<jule::Int>(unlink(((char*)(_8522_path))));
}



inline jule::I64 _203997e37_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::Int _203997e37_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::Int _203997e37_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



inline jule::Int _203997e37_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _203997e37_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline jule::Int _2039173d4_get_last_os_error(void) {
	jule::Int _319_err = _203934775_get_last_errno();
	{
		auto _match_expr{ _319_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4375121216; }
		_case_begin_4375121216:;
		{
			return 1LLU;
		}
		goto _match_end_4375119712;
		_case_end_4375121216:;
		if (!((5LL) == _match_expr)) { goto _case_end_4375121328; }
		_case_begin_4375121328:;
		{
			return 2LLU;
		}
		goto _match_end_4375119712;
		_case_end_4375121328:;
		if (!((40LL) == _match_expr)) { goto _case_end_4375121440; }
		_case_begin_4375121440:;
		{
			return 3LLU;
		}
		goto _match_end_4375119712;
		_case_end_4375121440:;
		if (!((36LL) == _match_expr)) { goto _case_end_4375120496; }
		_case_begin_4375120496:;
		{
			return 4LLU;
		}
		goto _match_end_4375119712;
		_case_end_4375120496:;
		if (!((2LL) == _match_expr)) { goto _case_end_4375120608; }
		_case_begin_4375120608:;
		{
			return 5LLU;
		}
		goto _match_end_4375119712;
		_case_end_4375120608:;
		if (!((20LL) == _match_expr)) { goto _case_end_4375120720; }
		_case_begin_4375120720:;
		{
			return 6LLU;
		}
		goto _match_end_4375119712;
		_case_end_4375120720:;
		if (!((12LL) == _match_expr)) { goto _case_end_4375121824; }
		_case_begin_4375121824:;
		{
			return 7LLU;
		}
		goto _match_end_4375119712;
		_case_end_4375121824:;
		_case_begin_4375120048:;
		{
			return 0LLU;
		}
		goto _match_end_4375119712;
		_case_end_4375120048:;
		_match_end_4375119712:;
	}
}



inline std::tuple<jule::Str,jule::Int> _20391c818_working_dir(void) {
	jule::Str _3410_p;
	jule::Int _3413_err;
	std::tie(_3410_p,_3413_err) = _20392da16___getwd();
	return std::make_tuple(_3410_p,_3413_err);
}



inline jule::Int _20391c818_set_working_dir(jule::Str _4324_path) {
	if (_4324_path == jule::Str("", 0)) {
		return 6LLU;
	}
	return _20392da16___chdir(_4324_path);
}



inline void _20391c818_init(void) {
	{
		(*((&(_20391c818_ARGS))))=jule::command_line_args;
		(*((&(_20391c818_ENV))))=jule::environment_variables;
	}
}



inline std::tuple<jule::Str,jule::Int> _20392da16___getwd(void) {
	jule::U8* _1113_buff = _203935853_getcwd(nullptr,0LLU);
	if (_1113_buff == nullptr) {
		return std::make_tuple(jule::Str("", 0),_2039173d4_get_last_os_error());
	}
	jule::Str _159_pwd = _2045e2c90_byte_ptr_to_str(_1113_buff);
	{
		_20393537a_free(_1113_buff);
	}
	return std::make_tuple(_159_pwd,0LLU);
}



inline jule::Int _20392da16___chdir(jule::Str _2212_path) {
	if (_203935853_chdir((&(_2212_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _2039173d4_get_last_os_error();
}



inline jule::Str _203896264_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _2038b7de0_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(static_cast<jule::Int>(_1099_vol_len));
	if (_10718_path == jule::Str("", 0)) {
		if (((_1099_vol_len > 1LL) && _2038b7de0_is_path_sep(_1089_original_path[0LL])) && _2038b7de0_is_path_sep(_1089_original_path[1LL])) {
			return _203896264_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _2038b7de0_is_path_sep(_10718_path[0LL]);
	jule::I64 _1259_n = _10718_path.len();
	_203896264_LazyBuff _12613_out = _203896264_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(47LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	_iter_begin_4375188448:;
	if (!(_13114_r < _1259_n)) { goto _iter_end_4375188448; }
	{
		{
			if (!((_2038b7de0_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)])))) { goto _case_end_4375206000; }
			_case_begin_4375206000:;
			{
				(_13114_r)++;
			}
			goto _match_end_4375189552;
			_case_end_4375206000:;
			if (!(((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (((_13114_r + 1LL) == _1259_n) || _2038b7de0_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 1LL)]))))) { goto _case_end_4375202912; }
			_case_begin_4375202912:;
			{
				(_13114_r)++;
			}
			goto _match_end_4375189552;
			_case_end_4375202912:;
			if (!((((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (_10718_path[static_cast<jule::Int>(_13114_r + 1LL)] == '.')) && (((_13114_r + 2LL) == _1259_n) || _2038b7de0_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 2LL)]))))) { goto _case_end_4375190048; }
			_case_begin_4375190048:;
			{
				_13114_r+=2LL;
				{
					if (!((_12613_out._field_w > _13121_dotdot))) { goto _case_end_4375214608; }
					_case_begin_4375214608:;
					{
						(_12613_out._field_w)--;
						_iter_begin_4375218320:;
						if (!((_12613_out._field_w > _13121_dotdot) && (!(_2038b7de0_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w))))))) { goto _iter_end_4375218320; }
						{
							(_12613_out._field_w)--;
						}
						_iter_next_4375218320:;
						goto _iter_begin_4375218320;
						_iter_end_4375218320:;
					}
					goto _match_end_4375214512;
					_case_end_4375214608:;
					if (!(((!(_1189_rooted))))) { goto _case_end_4375217056; }
					_case_begin_4375217056:;
					{
						if (_12613_out._field_w > 0LL) {
							_12613_out._method_append(47LLU);
						}
						_12613_out._method_append('.');
						_12613_out._method_append('.');
						_13121_dotdot=_12613_out._field_w;
					}
					goto _match_end_4375214512;
					_case_end_4375217056:;
					_match_end_4375214512:;
				}
			}
			goto _match_end_4375189552;
			_case_end_4375190048:;
			_case_begin_4375189744:;
			{
				if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
					_12613_out._method_append(47LLU);
				}
				if (((false && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
					jule::Int _17425_i = _13114_r;
					_iter_begin_4375194992:;
					if (!((_17425_i < _1259_n) && (!(_2038b7de0_is_path_sep(_10718_path[static_cast<jule::Int>(_17425_i)]))))) { goto _iter_end_4375194992; }
					{
						if (_10718_path[static_cast<jule::Int>(_17425_i)] == ':') {
							_12613_out._method_append('.');
							_12613_out._method_append(47LLU);
							goto _iter_end_4375194992;
						}
					}
					_iter_next_4375194992:;
					(_17425_i)++;
					goto _iter_begin_4375194992;
					_iter_end_4375194992:;
				}
				_iter_begin_4375201184:;
				if (!((_13114_r < _1259_n) && (!(_2038b7de0_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)]))))) { goto _iter_end_4375201184; }
				{
					_12613_out._method_append(_10718_path[static_cast<jule::Int>(_13114_r)]);
				}
				_iter_next_4375201184:;
				(_13114_r)++;
				goto _iter_begin_4375201184;
				_iter_end_4375201184:;
			}
			goto _match_end_4375189552;
			_case_end_4375189744:;
			_match_end_4375189552:;
		}
	}
	_iter_next_4375188448:;
	goto _iter_begin_4375188448;
	_iter_end_4375188448:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _203896264_from_slash(_12613_out._method_string());
}



inline jule::Str _203896264_to_slash(jule::Str _20017_path) {
	if (true) {
		return _20017_path;
	}
	return _20017_path.replace(static_cast<jule::Str>(47LL),jule::Str("/", 1),-1LL);
}



inline jule::Str _203896264_from_slash(jule::Str _21019_path) {
	if (true) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _203896264_join(jule::Slice<jule::Str> _22413_elem) {
	return _2038b7de0___join(_22413_elem);
}



inline jule::Str _203896264_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	_iter_begin_4375232928:;
	if (!((_23013_i >= 0LL) && (!(_2038b7de0_is_path_sep(_22912_path[static_cast<jule::Int>(_23013_i)]))))) { goto _iter_end_4375232928; }
	{
		if (_22912_path[static_cast<jule::Int>(_23013_i)] == '.') {
			return _22912_path.slice(static_cast<jule::Int>(_23013_i));
		}
	}
	_iter_next_4375232928:;
	(_23013_i)--;
	goto _iter_begin_4375232928;
	_iter_end_4375232928:;
	return jule::Str("", 0);
}



inline std::tuple<jule::Str,jule::Bool> _203896264_abs(jule::Str _24412_path) {
	jule::Str _24510_abs_path;
	jule::Bool _24520_ok;
	std::tie(_24510_abs_path,_24520_ok) = _2038b7de0___abs(_24412_path);
	return std::make_tuple(_24510_abs_path,_24520_ok);
}



inline jule::Str _203896264_base(jule::Str _25317_path) {
	if (_25317_path == jule::Str("", 0)) {
		return jule::Str(".", 1);
	}
	_iter_begin_4375248896:;
	if (!((_25317_path.len() > 0LL) && _2038b7de0_is_path_sep(_25317_path[static_cast<jule::Int>(_25317_path.len() - 1LL)]))) { goto _iter_end_4375248896; }
	{
		_25317_path=_25317_path.slice(0LL,static_cast<jule::Int>(_25317_path.len() - 1LL));
	}
	_iter_next_4375248896:;
	goto _iter_begin_4375248896;
	_iter_end_4375248896:;
	_25317_path=_25317_path.slice(static_cast<jule::Int>(_203896264_volume_name(_25317_path).len()));
	jule::I64 _26413_i = _25317_path.len() - 1LL;
	_iter_begin_4375247680:;
	if (!((_26413_i >= 0LL) && (!(_2038b7de0_is_path_sep(_25317_path[static_cast<jule::Int>(_26413_i)]))))) { goto _iter_end_4375247680; }
	{
		(_26413_i)--;
	}
	_iter_next_4375247680:;
	goto _iter_begin_4375247680;
	_iter_end_4375247680:;
	if (_26413_i >= 0LL) {
		_25317_path=_25317_path.slice(static_cast<jule::Int>(_26413_i + 1LL));
	}
	if (_25317_path == jule::Str("", 0)) {
		return static_cast<jule::Str>(47LL);
	}
	return _25317_path;
}



inline jule::Str _203896264_dir(jule::Str _28412_path) {
	jule::Str _2859_vol = _203896264_volume_name(_28412_path);
	jule::I64 _28613_i = _28412_path.len() - 1LL;
	_iter_begin_4375260768:;
	if (!((_28613_i >= _2859_vol.len()) && (!(_2038b7de0_is_path_sep(_28412_path[static_cast<jule::Int>(_28613_i)]))))) { goto _iter_end_4375260768; }
	{
		(_28613_i)--;
	}
	_iter_next_4375260768:;
	goto _iter_begin_4375260768;
	_iter_end_4375260768:;
	jule::Str _2909_dir = _203896264_clean(_28412_path.slice(static_cast<jule::Int>(_2859_vol.len()),static_cast<jule::Int>(_28613_i + 1LL)));
	if ((_2909_dir == jule::Str(".", 1)) && (_2859_vol.len() > 2LL)) {
		return _2859_vol;
	}
	return _2859_vol + _2909_dir;
}



inline jule::Str _203896264_volume_name(jule::Str _30220_path) {
	return _203896264_from_slash(_30220_path.slice(0LL,static_cast<jule::Int>(_2038b7de0_volume_name_len(_30220_path))));
}



inline jule::Bool _2038b7de0_is_path_sep(jule::U8 _4720_c) {
	return 47LL == _4720_c;
}



inline jule::Bool _2038b7de0_is_abs(jule::Str _5215_path) {
	return _5215_path.has_prefix(jule::Str("/", 1));
}



inline jule::Int _2038b7de0_volume_name_len(jule::Str _5620_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _2038b7de0___abs(jule::Str _5810_path) {
	jule::Bool _5828_ok = jule::Bool();
	if (_2038b7de0_is_abs(_5810_path)) {
		_5828_ok = true;
		return std::make_tuple(_203896264_clean(_5810_path),_5828_ok);
	}
	jule::Str _6210_wd;
	jule::Int _6214_err;
	std::tie(_6210_wd,_6214_err) = _20391c818_working_dir();
	if (_6214_err != 0LLU) {
		_5828_ok = false;
		return std::make_tuple(jule::Str("", 0),_5828_ok);
	}
	_5828_ok = true;
	return std::make_tuple(_2038b7de0___join(jule::Slice<jule::Str>({_6210_wd,_5810_path})),_5828_ok);
}



inline jule::Str _2038b7de0_str_join(jule::Slice<jule::Str> _6913_elems,jule::Str _6927_sep) {
	{
		auto _match_expr{ _6913_elems.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4375285696; }
		_case_begin_4375285696:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4375284928;
		_case_end_4375285696:;
		if (!((1LL) == _match_expr)) { goto _case_end_4375285808; }
		_case_begin_4375285808:;
		{
			return _6913_elems[0LL];
		}
		goto _match_end_4375284928;
		_case_end_4375285808:;
		_match_end_4375284928:;
	}
	jule::Str _7513_s = _6913_elems[0LL];
	{
		auto _range_expr = _6913_elems.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _2038b7de0_elem = *_range_begin;
			_iter_begin_4375289712:;
			{
				_7513_s+=_6927_sep + _2038b7de0_elem;
			}
			_iter_next_4375289712:;
			++_range_begin;
			if (_range_begin != _range_end) { _2038b7de0_elem = *_range_begin; goto _iter_begin_4375289712; }
			_iter_end_4375289712:;
		}
	}
	return _7513_s;
}



inline jule::Str _2038b7de0___join(jule::Slice<jule::Str> _8211_elem) {
	{
		auto _range_expr = _8211_elem;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2038b7de0_i = 0;
			jule::Str _2038b7de0_e = *_range_begin;
			_iter_begin_4375291120:;
			{
				if (_2038b7de0_e != jule::Str("", 0)) {
					return _203896264_clean(_2038b7de0_str_join(_8211_elem.slice(static_cast<jule::Int>(_2038b7de0_i)),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_4375291120:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2038b7de0_i; _2038b7de0_e = *_range_begin; goto _iter_begin_4375291120; }
			_iter_end_4375291120:;
		}
	}
	return jule::Str("", 0);
}



inline void _2039051d5_exit(jule::Int _1213_code) {
	_203997e37_exit(_1213_code);
}



inline jule::Str _2039051d5_executable(void) {
	return jule::executable();
}



inline jule::Bool _2037761bb_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[static_cast<jule::Int>(_2627_p.len() - 1LL)] == '>');
}



inline jule::Bool _2037761bb_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto _range_expr = _2037761bb_CPP_HEADER_EXTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _2037761bb_valid_ext = *_range_begin;
			_iter_begin_4375480224:;
			{
				if (_3128_ext == _2037761bb_valid_ext) {
					return true;
				}
			}
			_iter_next_4375480224:;
			++_range_begin;
			if (_range_begin != _range_end) { _2037761bb_valid_ext = *_range_begin; goto _iter_begin_4375480224; }
			_iter_end_4375480224:;
		}
	}
	return false;
}



inline jule::Bool _2037761bb_is_valid_cpp_ext(jule::Str _4225_ext) {
	{
		auto _range_expr = _2037761bb_CPP_EXTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _2037761bb_e = *_range_begin;
			_iter_begin_4375483264:;
			{
				if (_4225_ext == _2037761bb_e) {
					return true;
				}
			}
			_iter_next_4375483264:;
			++_range_begin;
			if (_range_begin != _range_end) { _2037761bb_e = *_range_begin; goto _iter_begin_4375483264; }
			_iter_end_4375483264:;
		}
	}
	{
		auto _range_expr = _2037761bb_OBJECTIVE_CPP_EXTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _2037761bb_e = *_range_begin;
			_iter_begin_4375486352:;
			{
				if (_4225_ext == _2037761bb_e) {
					return true;
				}
			}
			_iter_next_4375486352:;
			++_range_begin;
			if (_range_begin != _range_end) { _2037761bb_e = *_range_begin; goto _iter_begin_4375486352; }
			_iter_end_4375486352:;
		}
	}
	return false;
}



inline jule::Str _20377124e_logf(jule::Str _25013_fmt,jule::Slice<jule::Any> _25026_args) {
	return _20377124e_apply_fmt(_25013_fmt,_25026_args);
}



inline jule::Str _20377124e_arg_to_str(jule::Any _25415_arg) {
	{
		auto _match_expr{ _25415_arg };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4375491040; }
		_case_begin_4375491040:;
		{
			return _25415_arg.operator jule::Str();
		}
		goto _match_end_4375488960;
		_case_end_4375491040:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_4375491152; }
		_case_begin_4375491152:;
		{
			return static_cast<jule::Str>(_25415_arg.operator jule::U8());
		}
		goto _match_end_4375488960;
		_case_end_4375491152:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_4375491264; }
		_case_begin_4375491264:;
		{
			return static_cast<jule::Str>(_25415_arg.operator jule::I32());
		}
		goto _match_end_4375488960;
		_case_end_4375491264:;
		_case_begin_4375489648:;
		{
			return jule::Str("<fmt?>", 6);
		}
		goto _match_end_4375488960;
		_case_end_4375489648:;
		_match_end_4375488960:;
	}
}



inline jule::Int _20377124e_find_next_fmt(jule::Str _26318_fmt) {
	{
		auto _range_expr = _26318_fmt;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _20377124e_i = 0;
			jule::U8 _20377124e_b = *_range_begin;
			_iter_begin_4375495600:;
			{
				if (_20377124e_b == '@') {
					return _20377124e_i;
				}
			}
			_iter_next_4375495600:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_20377124e_i; _20377124e_b = *_range_begin; goto _iter_begin_4375495600; }
			_iter_end_4375495600:;
		}
	}
	return -1LL;
}



inline jule::Str _20377124e_apply_fmt(jule::Str _27218_fmt,jule::Slice<jule::Any> _27228_args) {
	jule::Str _27313_s = jule::Str("", 0);
	{
		auto _range_expr = _27228_args;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _20377124e_arg = *_range_begin;
			_iter_begin_4375500512:;
			{
				jule::Int _27613_i = _20377124e_find_next_fmt(_27218_fmt);
				if (_27613_i == -1LL) {
					goto _iter_end_4375500512;
				}
				_27313_s+=_27218_fmt.slice(0LL,static_cast<jule::Int>(_27613_i));
				_27313_s+=_20377124e_arg_to_str(_20377124e_arg);
				_27218_fmt=_27218_fmt.slice(static_cast<jule::Int>(_27613_i + 1LL));
			}
			_iter_next_4375500512:;
			++_range_begin;
			if (_range_begin != _range_end) { _20377124e_arg = *_range_begin; goto _iter_begin_4375500512; }
			_iter_end_4375500512:;
		}
	}
	_27313_s+=_27218_fmt;
	return _27313_s;
}



inline jule::Bool _2037d887c_is_top_directive(jule::Str _3625_directive) {
	return (_3625_directive == jule::Str("pass", 4)) || (_3625_directive == jule::Str("build", 5));
}



inline jule::Bool _2037d86a1_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



inline jule::Bool _2037d86a1_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



inline jule::Bool _2037d86a1_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



inline jule::Bool _2037d86a1_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



inline jule::Bool _2037d86a1_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



inline jule::Bool _2037d86a1_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



inline jule::Bool _2037d86a1_is_unix(jule::Str _6316_os) {
	return _2037d86a1_is_darwin(_6316_os) || _2037d86a1_is_linux(_6316_os);
}



inline jule::Bool _2037d86a1_is_32bit(jule::Str _6517_arch) {
	return _2037d86a1_is_i386(_6517_arch);
}



inline jule::Bool _2037d86a1_is_64bit(jule::Str _6717_arch) {
	return _2037d86a1_is_amd64(_6717_arch) || _2037d86a1_is_arm64(_6717_arch);
}



inline void _203845d29_exit_err(jule::Str _1613_msg) {
	
	jule::outln(_1613_msg);
	_2039051d5_exit(1LL);
}



inline void _203845d29_init(void) {
	jule::Str _2413_path = _2039051d5_executable();
	if (_2413_path == jule::Str("", 0)) {
		_203845d29_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _2910_pwd;
	jule::Int _2915_err;
	std::tie(_2910_pwd,_2915_err) = _20391c818_working_dir();
	if (_2915_err != 0LLU) {
		_203845d29_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
	}
	jule::Str _349_path_exec = _203896264_dir(_2413_path);
	_2413_path=_203896264_join(jule::Slice<jule::Str>({_349_path_exec,jule::Str("..", 2)}));
	{
		(*((&(_203845d29_PATH_WD))))=_2910_pwd;
		(*((&(_203845d29_PATH_EXEC))))=_349_path_exec;
		(*((&(_203845d29_PATH_STDLIB))))=_203896264_join(jule::Slice<jule::Str>({_2413_path,jule::Str("std", 3)}));
		(*((&(_203845d29_PATH_API))))=_203896264_join(jule::Slice<jule::Str>({_203845d29_PATH_EXEC,jule::Str("..", 2)}));
		(*((&(_203845d29_PATH_API))))=_203896264_join(jule::Slice<jule::Str>({_203845d29_PATH_API,jule::Str("api", 3)}));
		(*((&(_203845d29_PATH_API))))=_203896264_join(jule::Slice<jule::Str>({_203845d29_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Bool _203846676_is_jule(jule::Str _2316_path) {
	return _203896264_ext(_2316_path) == jule::Str(".jule", 5);
}



inline jule::Int _20525c51e_leading_zeros(jule::Uint _4922_x) {
	return static_cast<jule::Int>(64LL - _20525c51e_len(_4922_x));
}



inline jule::Int _20525c51e_leading_zeros8(jule::U8 _5223_x) {
	return static_cast<jule::Int>(8LL - _20525c51e_len8(_5223_x));
}



inline jule::Int _20525c51e_leading_zeros16(jule::U16 _5524_x) {
	return static_cast<jule::Int>(16LL - _20525c51e_len16(_5524_x));
}



inline jule::Int _20525c51e_leading_zeros32(jule::U32 _5824_x) {
	return static_cast<jule::Int>(32LL - _20525c51e_len32(_5824_x));
}



inline jule::Int _20525c51e_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - _20525c51e_len64(_6124_x));
}



inline jule::Int _20525c51e_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_20525c51e_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_20525c51e_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



inline jule::Int _20525c51e_trailing_zeros8(jule::U8 _9124_x) {
	return static_cast<jule::Int>(jule::Str("\b\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\a\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00", 256)[static_cast<jule::Int>(_9124_x)]);
}



inline jule::Int _20525c51e_trailing_zeros16(jule::U16 _9625_x) {
	if (_9625_x == 0LL) {
		return 16LL;
	}
	return static_cast<jule::Int>(_20525c51e_DE_BRUIJN32_TAB[static_cast<jule::Int>((static_cast<jule::U32>(_9625_x & (-(_9625_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _20525c51e_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_20525c51e_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _20525c51e_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_20525c51e_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



inline jule::Int _20525c51e_ones_count(jule::Uint _14119_x) {
	if (false) {
		return static_cast<jule::Int>(_20525c51e_ones_count32(static_cast<jule::U32>(_14119_x)));
	}
	return static_cast<jule::Int>(_20525c51e_ones_count64(static_cast<jule::U64>(_14119_x)));
}



inline jule::Int _20525c51e_ones_count8(jule::U8 _14920_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_14920_x)]);
}



inline jule::Int _20525c51e_ones_count16(jule::U16 _15421_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x >> 8LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x & 255LL)]);
}



inline jule::Int _20525c51e_ones_count32(jule::U32 _15921_x) {
	return static_cast<jule::Int>(((jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x >> 24LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 16LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 8LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x & 255LL)]);
}



inline jule::Int _20525c51e_ones_count64(jule::U64 _16425_x) {
	
	_16425_x=static_cast<jule::U64>(((_16425_x >> 1LL) & 6148914691236517205LL) + (_16425_x & 6148914691236517205LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 2LL) & 3689348814741910323LL) + (_16425_x & 3689348814741910323LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 4LL) + _16425_x) & 1085102592571150095LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 8LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 16LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 32LL);
	return static_cast<jule::Int>(static_cast<jule::Int>(_16425_x) & 127LLU);
}



inline jule::Uint _20525c51e_rotate_left(jule::Uint _20020_x,jule::Int _20029_k) {
	if (false) {
		return static_cast<jule::Uint>(_20525c51e_rotate_left32(static_cast<jule::U32>(_20020_x),_20029_k));
	}
	return static_cast<jule::Uint>(_20525c51e_rotate_left64(static_cast<jule::U64>(_20020_x),_20029_k));
}



inline jule::U8 _20525c51e_rotate_left8(jule::U8 _21121_x,jule::Int _21128_k) {
	
	jule::Uint _2139_s = static_cast<jule::Uint>(_21128_k) & 7LL;
	return static_cast<jule::U8>((_21121_x << _2139_s) | (_21121_x >> (8LL - _2139_s)));
}



inline jule::U16 _20525c51e_rotate_left16(jule::U16 _22122_x,jule::Int _22130_k) {
	
	jule::Uint _2239_s = static_cast<jule::Uint>(_22130_k) & 15LL;
	return static_cast<jule::U16>((_22122_x << _2239_s) | (_22122_x >> (16LL - _2239_s)));
}



inline jule::U32 _20525c51e_rotate_left32(jule::U32 _23122_x,jule::Int _23130_k) {
	
	jule::Uint _2339_s = static_cast<jule::Uint>(_23130_k) & 31LL;
	return static_cast<jule::U32>((_23122_x << _2339_s) | (_23122_x >> (32LL - _2339_s)));
}



inline jule::U64 _20525c51e_rotate_left64(jule::U64 _24122_x,jule::Int _24130_k) {
	
	jule::Uint _2439_s = static_cast<jule::Uint>(_24130_k) & 63LL;
	return static_cast<jule::U64>((_24122_x << _2439_s) | (_24122_x >> (64LL - _2439_s)));
}



inline jule::Uint _20525c51e_reverse(jule::Uint _25016_x) {
	if (false) {
		return static_cast<jule::Uint>(_20525c51e_reverse32(static_cast<jule::U32>(_25016_x)));
	}
	return static_cast<jule::Uint>(_20525c51e_reverse64(static_cast<jule::U64>(_25016_x)));
}



inline jule::U8 _20525c51e_reverse8(jule::U8 _25817_x) {
	return static_cast<jule::U8>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_25817_x)]);
}



inline jule::U16 _20525c51e_reverse16(jule::U16 _26318_x) {
	return static_cast<jule::U16>(static_cast<jule::U16>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_26318_x >> 8LL)]) | (static_cast<jule::U16>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_26318_x & 255LL)]) << 8LL));
}



inline jule::U32 _20525c51e_reverse32(jule::U32 _26822_x) {
	
	_26822_x=static_cast<jule::U32>(((_26822_x >> 1LL) & 1431655765LL) | ((_26822_x & 1431655765LL) << 1LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 2LL) & 858993459LL) | ((_26822_x & 858993459LL) << 2LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 4LL) & 252645135LL) | ((_26822_x & 252645135LL) << 4LL));
	return static_cast<jule::U32>(_20525c51e_reverse_bytes32(_26822_x));
}



inline jule::U64 _20525c51e_reverse64(jule::U64 _27722_x) {
	
	_27722_x=static_cast<jule::U64>(((_27722_x >> 1LL) & 6148914691236517205LL) | ((_27722_x & 6148914691236517205LL) << 1LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 2LL) & 3689348814741910323LL) | ((_27722_x & 3689348814741910323LL) << 2LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 4LL) & 1085102592571150095LL) | ((_27722_x & 1085102592571150095LL) << 4LL));
	return static_cast<jule::U64>(_20525c51e_reverse_bytes64(_27722_x));
}



inline jule::Uint _20525c51e_reverse_bytes(jule::Uint _29022_x) {
	if (false) {
		return static_cast<jule::Uint>(_20525c51e_reverse_bytes32(static_cast<jule::U32>(_29022_x)));
	}
	return static_cast<jule::Uint>(_20525c51e_reverse_bytes64(static_cast<jule::U64>(_29022_x)));
}



inline jule::U16 _20525c51e_reverse_bytes16(jule::U16 _30024_x) {
	return static_cast<jule::U16>((_30024_x >> 8LL) | (_30024_x << 8LL));
}



inline jule::U32 _20525c51e_reverse_bytes32(jule::U32 _30728_x) {
	
	_30728_x=static_cast<jule::U32>(((_30728_x >> 8LL) & 16711935LL) | ((_30728_x & 16711935LL) << 8LL));
	return static_cast<jule::U32>((_30728_x >> 16LL) | (_30728_x << 16LL));
}



inline jule::U64 _20525c51e_reverse_bytes64(jule::U64 _31628_x) {
	
	_31628_x=static_cast<jule::U64>(((_31628_x >> 8LL) & 71777214294589695LL) | ((_31628_x & 71777214294589695LL) << 8LL));
	_31628_x=static_cast<jule::U64>(((_31628_x >> 16LL) & 281470681808895LL) | ((_31628_x & 281470681808895LL) << 16LL));
	return static_cast<jule::U64>((_31628_x >> 32LL) | (_31628_x << 32LL));
}



inline jule::Int _20525c51e_len(jule::Uint _32712_x) {
	if (false) {
		return static_cast<jule::Int>(_20525c51e_len32(static_cast<jule::U32>(_32712_x)));
	}
	return static_cast<jule::Int>(_20525c51e_len64(static_cast<jule::U64>(_32712_x)));
}



inline jule::Int _20525c51e_len8(jule::U8 _33613_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_33613_x)]);
}



inline jule::Int _20525c51e_len16(jule::U16 _34218_x) {
	jule::Int _34228_n = jule::Int();
	if (_34218_x >= 256LL) {
		_34218_x>>=8LL;
		_34228_n=8LL;
	}
	_34228_n = static_cast<jule::Int>(_34228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_34218_x)]));
	return _34228_n;
}



inline jule::Int _20525c51e_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LL) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LL) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::Int>(_35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]));
	return _35228_n;
}



inline jule::Int _20525c51e_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LL) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LL) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LL) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::Int>(_36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]));
	return _36628_n;
}



inline std::tuple<jule::Uint,jule::Uint> _20525c51e_add(jule::Uint _38912_x,jule::Uint _38921_y,jule::Uint _38930_carry) {
	jule::Uint _38945_sum = jule::Uint();
	jule::Uint _38956_carry_out = jule::Uint();
	if (false) {
		jule::U32 _39114_s32;
		jule::U32 _39119_c32;
		std::tie(_39114_s32,_39119_c32) = _20525c51e_add32(static_cast<jule::U32>(_38912_x),static_cast<jule::U32>(_38921_y),static_cast<jule::U32>(_38930_carry));
		_38945_sum = static_cast<jule::Uint>(_39114_s32);
		_38956_carry_out = static_cast<jule::Uint>(_39119_c32);
		return std::make_tuple(_38945_sum,_38956_carry_out);
	}
	jule::U64 _39410_s64;
	jule::U64 _39415_c64;
	std::tie(_39410_s64,_39415_c64) = _20525c51e_add64(static_cast<jule::U64>(_38912_x),static_cast<jule::U64>(_38921_y),static_cast<jule::U64>(_38930_carry));
	_38945_sum = static_cast<jule::Uint>(_39410_s64);
	_38956_carry_out = static_cast<jule::Uint>(_39415_c64);
	return std::make_tuple(_38945_sum,_38956_carry_out);
}



inline std::tuple<jule::U32,jule::U32> _20525c51e_add32(jule::U32 _40314_x,jule::U32 _40322_y,jule::U32 _40330_carry) {
	jule::U32 _40344_sum = jule::U32();
	jule::U32 _40354_carryout = jule::U32();
	jule::U64 _4049_sum64 = (static_cast<jule::U64>(_40314_x) + static_cast<jule::U64>(_40322_y)) + static_cast<jule::U64>(_40330_carry);
	_40344_sum=static_cast<jule::U32>(_4049_sum64);
	_40354_carryout=static_cast<jule::U32>(_4049_sum64 >> 32LL);
	return std::make_tuple(_40344_sum,_40354_carryout);
}



inline std::tuple<jule::U64,jule::U64> _20525c51e_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>((_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>(((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::Uint,jule::Uint> _20525c51e_sub(jule::Uint _43112_x,jule::Uint _43121_y,jule::Uint _43130_borrow) {
	jule::Uint _43146_diff = jule::Uint();
	jule::Uint _43158_borrow_out = jule::Uint();
	if (false) {
		jule::U32 _43314_d32;
		jule::U32 _43319_b32;
		std::tie(_43314_d32,_43319_b32) = _20525c51e_sub32(static_cast<jule::U32>(_43112_x),static_cast<jule::U32>(_43121_y),static_cast<jule::U32>(_43130_borrow));
		_43146_diff = static_cast<jule::Uint>(_43314_d32);
		_43158_borrow_out = static_cast<jule::Uint>(_43319_b32);
		return std::make_tuple(_43146_diff,_43158_borrow_out);
	}
	jule::U64 _43610_d64;
	jule::U64 _43615_b64;
	std::tie(_43610_d64,_43615_b64) = _20525c51e_sub64(static_cast<jule::U64>(_43112_x),static_cast<jule::U64>(_43121_y),static_cast<jule::U64>(_43130_borrow));
	_43146_diff = static_cast<jule::Uint>(_43610_d64);
	_43158_borrow_out = static_cast<jule::Uint>(_43615_b64);
	return std::make_tuple(_43146_diff,_43158_borrow_out);
}



inline std::tuple<jule::U32,jule::U32> _20525c51e_sub32(jule::U32 _44514_x,jule::U32 _44522_y,jule::U32 _44530_borrow) {
	jule::U32 _44545_diff = jule::U32();
	jule::U32 _44556_borrowout = jule::U32();
	_44545_diff=static_cast<jule::U32>((_44514_x - _44522_y) - _44530_borrow);
	_44556_borrowout=static_cast<jule::U32>((((~(_44514_x)) & _44522_y) | ((~(_44514_x ^ _44522_y)) & _44545_diff)) >> 31LL);
	return std::make_tuple(_44545_diff,_44556_borrowout);
}



inline std::tuple<jule::U64,jule::U64> _20525c51e_sub64(jule::U64 _46014_x,jule::U64 _46022_y,jule::U64 _46030_borrow) {
	jule::U64 _46045_diff = jule::U64();
	jule::U64 _46056_borrowout = jule::U64();
	_46045_diff=static_cast<jule::U64>((_46014_x - _46022_y) - _46030_borrow);
	_46056_borrowout=static_cast<jule::U64>((((~(_46014_x)) & _46022_y) | ((~(_46014_x ^ _46022_y)) & _46045_diff)) >> 63LL);
	return std::make_tuple(_46045_diff,_46056_borrowout);
}



inline std::tuple<jule::Uint,jule::Uint> _20525c51e_mul(jule::Uint _47412_x,jule::Uint _47421_y) {
	jule::Uint _47432_hi = jule::Uint();
	jule::Uint _47442_lo = jule::Uint();
	if (false) {
		jule::U32 _47614_h;
		jule::U32 _47617_l;
		std::tie(_47614_h,_47617_l) = _20525c51e_mul32(static_cast<jule::U32>(_47412_x),static_cast<jule::U32>(_47421_y));
		_47432_hi = static_cast<jule::Uint>(_47614_h);
		_47442_lo = static_cast<jule::Uint>(_47617_l);
		return std::make_tuple(_47432_hi,_47442_lo);
	}
	jule::U64 _47910_h;
	jule::U64 _47913_l;
	std::tie(_47910_h,_47913_l) = _20525c51e_mul64(static_cast<jule::U64>(_47412_x),static_cast<jule::U64>(_47421_y));
	_47432_hi = static_cast<jule::Uint>(_47910_h);
	_47442_lo = static_cast<jule::Uint>(_47913_l);
	return std::make_tuple(_47432_hi,_47442_lo);
}



inline std::tuple<jule::U32,jule::U32> _20525c51e_mul32(jule::U32 _48814_x,jule::U32 _48822_y) {
	jule::U32 _48832_hi = jule::U32();
	jule::U32 _48841_lo = jule::U32();
	jule::U64 _4899_tmp = static_cast<jule::U64>(_48814_x) * static_cast<jule::U64>(_48822_y);
	std::tie(_48832_hi,_48841_lo) = std::make_tuple(static_cast<jule::U32>(_4899_tmp >> 32LL),static_cast<jule::U32>(_4899_tmp));
	return std::make_tuple(_48832_hi,_48841_lo);
}



inline std::tuple<jule::U64,jule::U64> _20525c51e_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LL;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LL;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LL;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline std::tuple<jule::Uint,jule::Uint> _20525c51e_div(jule::Uint _52112_hi,jule::Uint _52122_lo,jule::Uint _52132_y) {
	jule::Uint _52143_quo = jule::Uint();
	jule::Uint _52154_rem = jule::Uint();
	if (false) {
		jule::U32 _52314_q;
		jule::U32 _52317_r;
		std::tie(_52314_q,_52317_r) = _20525c51e_div32(static_cast<jule::U32>(_52112_hi),static_cast<jule::U32>(_52122_lo),static_cast<jule::U32>(_52132_y));
		_52143_quo = static_cast<jule::Uint>(_52314_q);
		_52154_rem = static_cast<jule::Uint>(_52317_r);
		return std::make_tuple(_52143_quo,_52154_rem);
	}
	jule::U64 _52610_q;
	jule::U64 _52613_r;
	std::tie(_52610_q,_52613_r) = _20525c51e_div64(static_cast<jule::U64>(_52112_hi),static_cast<jule::U64>(_52122_lo),static_cast<jule::U64>(_52132_y));
	_52143_quo = static_cast<jule::Uint>(_52610_q);
	_52154_rem = static_cast<jule::Uint>(_52613_r);
	return std::make_tuple(_52143_quo,_52154_rem);
}



inline std::tuple<jule::U32,jule::U32> _20525c51e_div32(jule::U32 _53414_hi,jule::U32 _53423_lo,jule::U32 _53432_y) {
	jule::U32 _53442_quo = jule::U32();
	jule::U32 _53452_rem = jule::U32();
	if (_53432_y == 0LL) {
		jule::panic(_20532e338_DIVIDE_ERROR);
	}
	if ((_53432_y != 0LL) && (_53432_y <= _53414_hi)) {
		jule::panic(_20532e338_OVERFLOW_ERROR);
	}
	jule::U64 _5419_z = (static_cast<jule::U64>(_53414_hi) << 32LL) | static_cast<jule::U64>(_53423_lo);
	std::tie(_53442_quo,_53452_rem) = std::make_tuple(static_cast<jule::U32>(jule::div(_5419_z,static_cast<jule::U64>(_53432_y))),static_cast<jule::U32>(jule::mod(_5419_z,static_cast<jule::U64>(_53432_y))));
	return std::make_tuple(_53442_quo,_53452_rem);
}



inline std::tuple<jule::U64,jule::U64> _20525c51e_div64(jule::U64 _55014_hi,jule::U64 _55023_lo,jule::U64 _55036_y) {
	jule::U64 _55046_quo = jule::U64();
	jule::U64 _55056_rem = jule::U64();
	
	
	if (_55036_y == 0LL) {
		jule::panic(_20532e338_DIVIDE_ERROR);
	}
	if (_55036_y <= _55014_hi) {
		jule::panic(_20532e338_OVERFLOW_ERROR);
	}
	jule::Uint _5609_s = static_cast<jule::Uint>(_20525c51e_leading_zeros64(_55036_y));
	_55036_y<<=_5609_s;
	jule::U64 _5639_yn1 = _55036_y >> 32LL;
	jule::U64 _5649_yn0 = _55036_y & 4294967295LL;
	jule::U64 _5659_un32 = (_55014_hi << _5609_s) | (_55023_lo >> (64LL - _5609_s));
	jule::U64 _5669_un10 = _55023_lo << _5609_s;
	jule::U64 _5679_un1 = _5669_un10 >> 32LL;
	jule::U64 _5689_un0 = _5669_un10 & 4294967295LL;
	jule::U64 _56913_q1 = jule::div(_5659_un32,_5639_yn1);
	jule::U64 _57013_rhat = _5659_un32 - (_56913_q1 * _5639_yn1);
	_iter_begin_4375932512:;
	if (!((_56913_q1 >= 4294967296LL) || ((_56913_q1 * _5649_yn0) > ((4294967296LL * _57013_rhat) + _5679_un1)))) { goto _iter_end_4375932512; }
	{
		(_56913_q1)--;
		_57013_rhat+=_5639_yn1;
		if (_57013_rhat >= 4294967296LL) {
			goto _iter_end_4375932512;
		}
	}
	_iter_next_4375932512:;
	goto _iter_begin_4375932512;
	_iter_end_4375932512:;
	jule::U64 _5809_un21 = ((_5659_un32 * 4294967296LL) + _5679_un1) - (_56913_q1 * _55036_y);
	jule::U64 _58113_q0 = jule::div(_5809_un21,_5639_yn1);
	_57013_rhat=static_cast<jule::U64>(_5809_un21 - (_58113_q0 * _5639_yn1));
	_iter_begin_4375937328:;
	if (!((_58113_q0 >= 4294967296LL) || ((_58113_q0 * _5649_yn0) > ((4294967296LL * _57013_rhat) + _5689_un0)))) { goto _iter_end_4375937328; }
	{
		(_58113_q0)--;
		_57013_rhat+=_5639_yn1;
		if (_57013_rhat >= 4294967296LL) {
			goto _iter_end_4375937328;
		}
	}
	_iter_next_4375937328:;
	goto _iter_begin_4375937328;
	_iter_end_4375937328:;
	_55046_quo = static_cast<jule::U64>((_56913_q1 * 4294967296LL) + _58113_q0);
	_55056_rem = static_cast<jule::U64>((((_5809_un21 * 4294967296LL) + _5689_un0) - (_58113_q0 * _55036_y)) >> _5609_s);
	return std::make_tuple(_55046_quo,_55056_rem);
}



inline jule::Uint _20525c51e_rem(jule::Uint _59812_hi,jule::Uint _59822_lo,jule::Uint _59832_y) {
	if (false) {
		return static_cast<jule::Uint>(_20525c51e_rem32(static_cast<jule::U32>(_59812_hi),static_cast<jule::U32>(_59822_lo),static_cast<jule::U32>(_59832_y)));
	}
	return static_cast<jule::Uint>(_20525c51e_rem64(static_cast<jule::U64>(_59812_hi),static_cast<jule::U64>(_59822_lo),static_cast<jule::U64>(_59832_y)));
}



inline jule::U32 _20525c51e_rem32(jule::U32 _60814_hi,jule::U32 _60823_lo,jule::U32 _60832_y) {
	return static_cast<jule::U32>(jule::mod((static_cast<jule::U64>(_60814_hi) << 32LL) | static_cast<jule::U64>(_60823_lo),static_cast<jule::U64>(_60832_y)));
}



inline jule::U64 _20525c51e_rem64(jule::U64 _61514_hi,jule::U64 _61523_lo,jule::U64 _61532_y) {
	jule::U64 _62213_rem;
	std::tie(std::ignore,_62213_rem) = _20525c51e_div64(static_cast<jule::U64>(jule::mod(_61514_hi,_61532_y)),_61523_lo,_61532_y);
	return _62213_rem;
}



inline jule::F64 _204a03ed6_atanh(jule::F64 _7818_x) {
	
	{
		if (!((_7818_x < -1LL) || (_7818_x > 1LL) || (_204ae433a_is_nan(_7818_x)))) { goto _case_end_4376240192; }
		_case_begin_4376240192:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4376240032;
		_case_end_4376240192:;
		if (!((_7818_x == 1LL))) { goto _case_end_4376240304; }
		_case_begin_4376240304:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(1LL));
		}
		goto _match_end_4376240032;
		_case_end_4376240304:;
		if (!((_7818_x == -1LL))) { goto _case_end_4376240416; }
		_case_begin_4376240416:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(-1LL));
		}
		goto _match_end_4376240032;
		_case_end_4376240416:;
		_match_end_4376240032:;
	}
	jule::Bool _8913_sign = false;
	if (_7818_x < 0LL) {
		_7818_x=static_cast<jule::F64>((-(_7818_x)));
		_8913_sign=true;
	}
	jule::F64 _9413_temp = 0LL;
	{
		if (!((_7818_x < 0.000000003725290298461914))) { goto _case_end_4376250544; }
		_case_begin_4376250544:;
		{
			_9413_temp=_7818_x;
		}
		goto _match_end_4376247888;
		_case_end_4376250544:;
		if (!((_7818_x < 0.5))) { goto _case_end_4376248816; }
		_case_begin_4376248816:;
		{
			_9413_temp=static_cast<jule::F64>(_7818_x + _7818_x);
			_9413_temp=static_cast<jule::F64>(0.5 * _204ee5a5a_log1p(static_cast<jule::F64>(_9413_temp + jule::div(_9413_temp * _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4376247888;
		_case_end_4376248816:;
		_case_begin_4376247984:;
		{
			_9413_temp=static_cast<jule::F64>(0.5 * _204ee5a5a_log1p(static_cast<jule::F64>(jule::div(_7818_x + _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4376247888;
		_case_end_4376247984:;
		_match_end_4376247888:;
	}
	if (_8913_sign) {
		_9413_temp=static_cast<jule::F64>((-(_9413_temp)));
	}
	return _9413_temp;
}



inline jule::U32 _204a244ce_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _204a244ce_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _204a244ce_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _204a244ce_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline jule::F64 _204a2e5b6_cos(jule::F64 _14816_x) {
	
	
	
	if (_204ae433a_is_nan(_14816_x) || _204ae433a_is_inf(_14816_x,0LL)) {
		return static_cast<jule::F64>(_204ae433a_nan());
	}
	jule::Bool _15813_sign = false;
	_14816_x=static_cast<jule::F64>(_204c18409_abs(_14816_x));
	jule::U64 _16113_j = 0LL;
	jule::F64 _16213_y = 0LL;
	jule::F64 _16313_z = 0LL;
	if (_14816_x >= 536870912LL) {
		std::tie(_16113_j,_16313_z) = _204a322ab_trig_reduce(_14816_x);
	} else {
		_16113_j=static_cast<jule::U64>(_14816_x * 1.2732395447351628);
		_16213_y=static_cast<jule::F64>(_16113_j);
		if ((_16113_j & 1LL) == 1LL) {
			(_16113_j)++;
			(_16213_y)++;
		}
		_16113_j&=7LL;
		_16313_z=static_cast<jule::F64>(((_14816_x - (_16213_y * 0.7853981256484985)) - (_16213_y * 0.00000003774894707930798)) - (_16213_y * 0.0000000000000026951514290790595));
	}
	if (_16113_j > 3LL) {
		_16113_j-=4LL;
		_15813_sign=(!(_15813_sign));
	}
	if (_16113_j > 1LL) {
		_15813_sign=(!(_15813_sign));
	}
	jule::F64 _1879_zz = _16313_z * _16313_z;
	if ((_16113_j == 1LL) || (_16113_j == 2LL)) {
		_16213_y=static_cast<jule::F64>(_16313_z + ((_16313_z * _1879_zz) * ((((((((((_204a2e5b6__SIN[0LL] * _1879_zz) + _204a2e5b6__SIN[1LL]) * _1879_zz) + _204a2e5b6__SIN[2LL]) * _1879_zz) + _204a2e5b6__SIN[3LL]) * _1879_zz) + _204a2e5b6__SIN[4LL]) * _1879_zz) + _204a2e5b6__SIN[5LL])));
	} else {
		_16213_y=static_cast<jule::F64>((1LL - (0.5 * _1879_zz)) + ((_1879_zz * _1879_zz) * ((((((((((_204a2e5b6__COS[0LL] * _1879_zz) + _204a2e5b6__COS[1LL]) * _1879_zz) + _204a2e5b6__COS[2LL]) * _1879_zz) + _204a2e5b6__COS[3LL]) * _1879_zz) + _204a2e5b6__COS[4LL]) * _1879_zz) + _204a2e5b6__COS[5LL])));
	}
	if (_15813_sign) {
		_16213_y=static_cast<jule::F64>((-(_16213_y)));
	}
	return _16213_y;
}



inline jule::F64 _204a2e5b6_sin(jule::F64 _20516_x) {
	
	
	
	{
		if (!((_20516_x == 0LL) || (_204ae433a_is_nan(_20516_x)))) { goto _case_end_4376302288; }
		_case_begin_4376302288:;
		{
			return _20516_x;
		}
		goto _match_end_4376302128;
		_case_end_4376302288:;
		if (!((_204ae433a_is_inf(_20516_x,0LL)))) { goto _case_end_4376302416; }
		_case_begin_4376302416:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4376302128;
		_case_end_4376302416:;
		_match_end_4376302128:;
	}
	jule::Bool _21813_sign = false;
	if (_20516_x < 0LL) {
		_20516_x=static_cast<jule::F64>((-(_20516_x)));
		_21813_sign=true;
	}
	jule::U64 _22413_j = 0LL;
	jule::F64 _22513_y = 0LL;
	jule::F64 _22613_z = 0LL;
	if (_20516_x >= 536870912LL) {
		std::tie(_22413_j,_22613_z) = _204a322ab_trig_reduce(_20516_x);
	} else {
		_22413_j=static_cast<jule::U64>(_20516_x * 1.2732395447351628);
		_22513_y=static_cast<jule::F64>(_22413_j);
		if ((_22413_j & 1LL) == 1LL) {
			(_22413_j)++;
			(_22513_y)++;
		}
		_22413_j&=7LL;
		_22613_z=static_cast<jule::F64>(((_20516_x - (_22513_y * 0.7853981256484985)) - (_22513_y * 0.00000003774894707930798)) - (_22513_y * 0.0000000000000026951514290790595));
	}
	if (_22413_j > 3LL) {
		_21813_sign=(!(_21813_sign));
		_22413_j-=4LL;
	}
	jule::F64 _2469_zz = _22613_z * _22613_z;
	if ((_22413_j == 1LL) || (_22413_j == 2LL)) {
		_22513_y=static_cast<jule::F64>((1LL - (0.5 * _2469_zz)) + ((_2469_zz * _2469_zz) * ((((((((((_204a2e5b6__COS[0LL] * _2469_zz) + _204a2e5b6__COS[1LL]) * _2469_zz) + _204a2e5b6__COS[2LL]) * _2469_zz) + _204a2e5b6__COS[3LL]) * _2469_zz) + _204a2e5b6__COS[4LL]) * _2469_zz) + _204a2e5b6__COS[5LL])));
	} else {
		_22513_y=static_cast<jule::F64>(_22613_z + ((_22613_z * _2469_zz) * ((((((((((_204a2e5b6__SIN[0LL] * _2469_zz) + _204a2e5b6__SIN[1LL]) * _2469_zz) + _204a2e5b6__SIN[2LL]) * _2469_zz) + _204a2e5b6__SIN[3LL]) * _2469_zz) + _204a2e5b6__SIN[4LL]) * _2469_zz) + _204a2e5b6__SIN[5LL])));
	}
	if (_21813_sign) {
		_22513_y=static_cast<jule::F64>((-(_22513_y)));
	}
	return _22513_y;
}



inline jule::F64 _204a2e7c5_tan(jule::F64 _11316_x) {
	
	
	
	{
		if (!((_11316_x == 0LL) || (_204ae433a_is_nan(_11316_x)))) { goto _case_end_4376339568; }
		_case_begin_4376339568:;
		{
			return _11316_x;
		}
		goto _match_end_4376339408;
		_case_end_4376339568:;
		if (!((_204ae433a_is_inf(_11316_x,0LL)))) { goto _case_end_4376339696; }
		_case_begin_4376339696:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4376339408;
		_case_end_4376339696:;
		_match_end_4376339408:;
	}
	jule::Bool _12613_sign = false;
	if (_11316_x < 0LL) {
		_11316_x=static_cast<jule::F64>((-(_11316_x)));
		_12613_sign=true;
	}
	jule::U64 _13113_j = 0LL;
	jule::F64 _13213_y = 0LL;
	jule::F64 _13313_z = 0LL;
	if (_11316_x >= 536870912LL) {
		std::tie(_13113_j,_13313_z) = _204a322ab_trig_reduce(_11316_x);
	} else {
		_13113_j=static_cast<jule::U64>(_11316_x * 1.2732395447351628);
		_13213_y=static_cast<jule::F64>(_13113_j);
		if ((_13113_j & 1LL) == 1LL) {
			(_13113_j)++;
			(_13213_y)++;
		}
		_13313_z=static_cast<jule::F64>(((_11316_x - (_13213_y * 0.7853981256484985)) - (_13213_y * 0.00000003774894707930798)) - (_13213_y * 0.0000000000000026951514290790595));
	}
	jule::F64 _1489_zz = _13313_z * _13313_z;
	if (_1489_zz > 0.00000000000001) {
		_13213_y=static_cast<jule::F64>(_13313_z + (_13313_z * jule::div(_1489_zz * ((((_204a2e7c5__TAN_P[0LL] * _1489_zz) + _204a2e7c5__TAN_P[1LL]) * _1489_zz) + _204a2e7c5__TAN_P[2LL]),((((((_1489_zz + _204a2e7c5__TAN_Q[1LL]) * _1489_zz) + _204a2e7c5__TAN_Q[2LL]) * _1489_zz) + _204a2e7c5__TAN_Q[3LL]) * _1489_zz) + _204a2e7c5__TAN_Q[4LL])));
	} else {
		_13213_y=_13313_z;
	}
	if ((_13113_j & 2LL) == 2LL) {
		_13213_y=static_cast<jule::F64>(jule::div(-1LL,_13213_y));
	}
	if (_12613_sign) {
		_13213_y=static_cast<jule::F64>((-(_13213_y)));
	}
	return _13213_y;
}



inline jule::F64 _204a0b120_mod(jule::F64 _5212_x,jule::F64 _5224_y) {
	if ((((_5224_y == 0LL) || _204ae433a_is_inf(_5212_x,0LL)) || _204ae433a_is_nan(_5212_x)) || _204ae433a_is_nan(_5224_y)) {
		return static_cast<jule::F64>(_204ae433a_nan());
	}
	_5224_y=static_cast<jule::F64>(_204c18409_abs(_5224_y));
	jule::F64 _5810_yfr;
	jule::Int _5815_yexp;
	std::tie(_5810_yfr,_5815_yexp) = _204a91b01_frexp(_5224_y);
	jule::F64 _5913_r = _5212_x;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5212_x)));
	}
	_iter_begin_4376374752:;
	if (!(_5913_r >= _5224_y)) { goto _iter_end_4376374752; }
	{
		jule::F64 _6514_rfr;
		jule::Int _6523_rexp;
		std::tie(_6514_rfr,_6523_rexp) = _204a91b01_frexp(_5913_r);
		if (_6514_rfr < _5810_yfr) {
			_6523_rexp=static_cast<jule::Int>(_6523_rexp - 1LL);
		}
		_5913_r=static_cast<jule::F64>(_5913_r - _204d88447_ldexp(_5224_y,static_cast<jule::Int>(_6523_rexp - _5815_yexp)));
	}
	_iter_next_4376374752:;
	goto _iter_begin_4376374752;
	_iter_end_4376374752:;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5913_r)));
	}
	return _5913_r;
}



inline std::tuple<jule::F64,jule::Int> _204a91b01_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::Int _4739_exp = jule::Int();
	{
		if (!((_4718_f == 0LL))) { goto _case_end_4376381920; }
		_case_begin_4376381920:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4376381680;
		_case_end_4376381920:;
		if (!((_204ae433a_is_inf(_4718_f,0LL)) || (_204ae433a_is_nan(_4718_f)))) { goto _case_end_4376382048; }
		_case_begin_4376382048:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4376381680;
		_case_end_4376382048:;
		_match_end_4376381680:;
	}
	std::tie(_4718_f,_4739_exp) = _204ae433a_normalize(_4718_f);
	jule::U64 _5613_x = _204a244ce_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::Int>((static_cast<jule::Int>((_5613_x >> 52LL) & 2047LL) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>(_5613_x & -9218868437227405313LL);
	_5613_x|=4602678819172646912LL;
	_4728_frac=static_cast<jule::F64>(_204a244ce_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F32 _204a9d26c_nextafter32(jule::F32 _4420_x,jule::F32 _4428_y) {
	jule::F32 _4438_r = jule::F32();
	{
		if (!((_204ae433a_is_nan(static_cast<jule::F64>(_4420_x))) || (_204ae433a_is_nan(static_cast<jule::F64>(_4428_y))))) { goto _case_end_4376393568; }
		_case_begin_4376393568:;
		{
			_4438_r=static_cast<jule::F32>(_204ae433a_nan());
		}
		goto _match_end_4376392560;
		_case_end_4376393568:;
		if (!((_4420_x == _4428_y))) { goto _case_end_4376395344; }
		_case_begin_4376395344:;
		{
			_4438_r=_4420_x;
		}
		goto _match_end_4376392560;
		_case_end_4376395344:;
		if (!((_4420_x == 0LL))) { goto _case_end_4376394096; }
		_case_begin_4376394096:;
		{
			_4438_r=static_cast<jule::F32>(_204a923d7_copysign(static_cast<jule::F64>(_204a244ce_f32_from_bits(1LLU)),static_cast<jule::F64>(_4428_y)));
		}
		goto _match_end_4376392560;
		_case_end_4376394096:;
		if (!(((_4428_y > _4420_x) == (_4420_x > 0LL)))) { goto _case_end_4376393040; }
		_case_begin_4376393040:;
		{
			_4438_r=static_cast<jule::F32>(_204a244ce_f32_from_bits(static_cast<jule::U32>(_204a244ce_f32_bits(_4420_x) + 1LL)));
		}
		goto _match_end_4376392560;
		_case_end_4376393040:;
		_case_begin_4376392736:;
		{
			_4438_r=static_cast<jule::F32>(_204a244ce_f32_from_bits(static_cast<jule::U32>(_204a244ce_f32_bits(_4420_x) - 1LL)));
		}
		goto _match_end_4376392560;
		_case_end_4376392736:;
		_match_end_4376392560:;
	}
	return _4438_r;
}



inline jule::F64 _204a9d26c_nextafter(jule::F64 _6618_x,jule::F64 _6626_y) {
	jule::F64 _6636_r = jule::F64();
	{
		if (!((_204ae433a_is_nan(_6618_x)) || (_204ae433a_is_nan(_6626_y)))) { goto _case_end_4376404992; }
		_case_begin_4376404992:;
		{
			_6636_r=static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4376403792;
		_case_end_4376404992:;
		if (!((_6618_x == _6626_y))) { goto _case_end_4376405296; }
		_case_begin_4376405296:;
		{
			_6636_r=_6618_x;
		}
		goto _match_end_4376403792;
		_case_end_4376405296:;
		if (!((_6618_x == 0LL))) { goto _case_end_4376404800; }
		_case_begin_4376404800:;
		{
			_6636_r=static_cast<jule::F64>(_204a923d7_copysign(static_cast<jule::F64>(_204a244ce_f64_from_bits(1LLU)),_6626_y));
		}
		goto _match_end_4376403792;
		_case_end_4376404800:;
		if (!(((_6626_y > _6618_x) == (_6618_x > 0LL)))) { goto _case_end_4376406384; }
		_case_begin_4376406384:;
		{
			_6636_r=static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>(_204a244ce_f64_bits(_6618_x) + 1LL)));
		}
		goto _match_end_4376403792;
		_case_end_4376406384:;
		_case_begin_4376403968:;
		{
			_6636_r=static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>(_204a244ce_f64_bits(_6618_x) - 1LL)));
		}
		goto _match_end_4376403792;
		_case_end_4376403968:;
		_match_end_4376403792:;
	}
	return _6636_r;
}



inline jule::F64 _204a923d7_copysign(jule::F64 _3917_f,jule::F64 _3925_sign) {
	
	return static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>((_204a244ce_f64_bits(_3917_f) & 9223372036854775807LLU) | (_204a244ce_f64_bits(_3925_sign) & 9223372036854775808LLU))));
}



inline std::tuple<jule::U64,jule::F64> _204a322ab_trig_reduce(jule::F64 _6020_x) {
	jule::U64 _6030_j = jule::U64();
	jule::F64 _6038_z = jule::F64();
	
	if (_6020_x < 0.7853981633974483) {
		_6030_j = 0LL;
		_6038_z = _6020_x;
		return std::make_tuple(_6030_j,_6038_z);
	}
	jule::U64 _6713_ix = _204a244ce_f64_bits(_6020_x);
	jule::Int _689_exp = (static_cast<jule::Int>((_6713_ix >> 52LL) & 2047LL) - 1023LL) - 52LL;
	_6713_ix=static_cast<jule::U64>(_6713_ix & -9218868437227405313LL);
	_6713_ix|=4503599627370496LL;
	jule::Uint _7410_digit = jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	jule::Uint _7417_bitshift = jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	std::tie(_7410_digit,_7417_bitshift) = std::make_tuple(jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL),jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL));
	jule::U64 _759_z0 = (_204a322ab_M_PI4[static_cast<jule::Int>(_7410_digit)] << _7417_bitshift) | (_204a322ab_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] >> (64LL - _7417_bitshift));
	jule::U64 _769_z1 = (_204a322ab_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] << _7417_bitshift) | (_204a322ab_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] >> (64LL - _7417_bitshift));
	jule::U64 _779_z2 = (_204a322ab_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] << _7417_bitshift) | (_204a322ab_M_PI4[static_cast<jule::Int>(_7410_digit + 3LL)] >> (64LL - _7417_bitshift));
	jule::U64 _7910_z2hi;
	std::tie(_7910_z2hi,std::ignore) = _20525c51e_mul64(_779_z2,_6713_ix);
	jule::U64 _8010_z1hi;
	jule::U64 _8016_z1lo;
	std::tie(_8010_z1hi,_8016_z1lo) = _20525c51e_mul64(_769_z1,_6713_ix);
	jule::U64 _819_z0lo = _759_z0 * _6713_ix;
	jule::U64 _8210_lo;
	jule::U64 _8214_c;
	std::tie(_8210_lo,_8214_c) = _20525c51e_add64(_8016_z1lo,_7910_z2hi,0LLU);
	jule::U64 _8314_hi;
	std::tie(_8314_hi,std::ignore) = _20525c51e_add64(_819_z0lo,_8010_z1hi,_8214_c);
	_6030_j=static_cast<jule::U64>(_8314_hi >> 61LL);
	_8314_hi=static_cast<jule::U64>((_8314_hi << 3LL) | (_8210_lo >> 61LL));
	jule::Uint _889_lz = static_cast<jule::Uint>(_20525c51e_leading_zeros64(_8314_hi));
	jule::U64 _899_e = static_cast<jule::U64>(1023LL - (_889_lz + 1LL));
	_8314_hi=static_cast<jule::U64>((_8314_hi << (_889_lz + 1LL)) | (_8210_lo >> (64LL - (_889_lz + 1LL))));
	_8314_hi>>=12LL;
	_8314_hi|=static_cast<jule::U64>(_899_e << 52LL);
	_6038_z=static_cast<jule::F64>(_204a244ce_f64_from_bits(_8314_hi));
	if ((_6030_j & 1LL) == 1LL) {
		(_6030_j)++;
		_6030_j&=7LL;
		(_6038_z)--;
	}
	_6030_j = _6030_j;
	_6038_z = static_cast<jule::F64>(_6038_z * 0.7853981633974483);
	return std::make_tuple(_6030_j,_6038_z);
}



inline jule::F64 _204ac872b_atan2(jule::F64 _6014_y,jule::F64 _6022_x) {
	{
		if (!((_204ae433a_is_nan(_6014_y)) || (_204ae433a_is_nan(_6022_x)))) { goto _case_end_4376455536; }
		_case_begin_4376455536:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4376453200;
		_case_end_4376455536:;
		if (!((_6014_y == 0LL))) { goto _case_end_4376455664; }
		_case_begin_4376455664:;
		{
			if ((_6022_x >= 0LL) && (!(_204ce6b9c_signbit(_6022_x)))) {
				return static_cast<jule::F64>(_204a923d7_copysign(0LL,_6014_y));
			}
			return static_cast<jule::F64>(_204a923d7_copysign(3.141592653589793,_6014_y));
		}
		goto _match_end_4376453200;
		_case_end_4376455664:;
		if (!((_6022_x == 0LL))) { goto _case_end_4376455792; }
		_case_begin_4376455792:;
		{
			return static_cast<jule::F64>(_204a923d7_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4376453200;
		_case_end_4376455792:;
		if (!((_204ae433a_is_inf(_6022_x,0LL)))) { goto _case_end_4376455920; }
		_case_begin_4376455920:;
		{
			if (_204ae433a_is_inf(_6022_x,1LL)) {
				{
					if (!((_204ae433a_is_inf(_6014_y,0LL)))) { goto _case_end_4376465040; }
					_case_begin_4376465040:;
					{
						return static_cast<jule::F64>(_204a923d7_copysign(0.7853981633974483,_6014_y));
					}
					goto _match_end_4376463392;
					_case_end_4376465040:;
					_case_begin_4376463584:;
					{
						return static_cast<jule::F64>(_204a923d7_copysign(0LL,_6014_y));
					}
					goto _match_end_4376463392;
					_case_end_4376463584:;
					_match_end_4376463392:;
				}
			}
			{
				if (!((_204ae433a_is_inf(_6014_y,0LL)))) { goto _case_end_4376467856; }
				_case_begin_4376467856:;
				{
					return static_cast<jule::F64>(_204a923d7_copysign(2.356194490192345,_6014_y));
				}
				goto _match_end_4376462480;
				_case_end_4376467856:;
				_case_begin_4376465920:;
				{
					return static_cast<jule::F64>(_204a923d7_copysign(3.141592653589793,_6014_y));
				}
				goto _match_end_4376462480;
				_case_end_4376465920:;
				_match_end_4376462480:;
			}
		}
		goto _match_end_4376453200;
		_case_end_4376455920:;
		if (!((_204ae433a_is_inf(_6014_y,0LL)))) { goto _case_end_4376456048; }
		_case_begin_4376456048:;
		{
			return static_cast<jule::F64>(_204a923d7_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4376453200;
		_case_end_4376456048:;
		_match_end_4376453200:;
	}
	jule::F64 _929_q = _205170762_atan(static_cast<jule::F64>(jule::div(_6014_y,_6022_x)));
	if (_6022_x < 0LL) {
		if (_929_q <= 0LL) {
			return static_cast<jule::F64>(_929_q + 3.141592653589793);
		}
		return static_cast<jule::F64>(_929_q - 3.141592653589793);
	}
	return _929_q;
}



inline jule::F64 _204ac0943_floor(jule::F64 _4414_x) {
	if (((_4414_x == 0LL) || _204ae433a_is_nan(_4414_x)) || _204ae433a_is_inf(_4414_x,0LL)) {
		return _4414_x;
	}
	if (_4414_x < 0LL) {
		jule::F64 _4918_d;
		jule::F64 _4921_fract;
		std::tie(_4918_d,_4921_fract) = _204c8b845_modf(static_cast<jule::F64>((-(_4414_x))));
		if (_4921_fract != 0LL) {
			_4918_d=static_cast<jule::F64>(_4918_d + 1LL);
		}
		return static_cast<jule::F64>((-(_4918_d)));
	}
	jule::F64 _5510_d;
	std::tie(_5510_d,std::ignore) = _204c8b845_modf(_4414_x);
	return _5510_d;
}



inline jule::F64 _204ac0943_ceil(jule::F64 _6513_x) {
	return static_cast<jule::F64>((-(_204ac0943_floor(static_cast<jule::F64>((-(_6513_x)))))));
}



inline jule::F64 _204ac0943_trunc(jule::F64 _7314_x) {
	if (((_7314_x == 0LL) || _204ae433a_is_nan(_7314_x)) || _204ae433a_is_inf(_7314_x,0LL)) {
		return _7314_x;
	}
	jule::F64 _7710_d;
	std::tie(_7710_d,std::ignore) = _204c8b845_modf(_7314_x);
	return _7710_d;
}



inline jule::F64 _204ac0943_round(jule::F64 _8714_x) {
	jule::U64 _9713_bits = _204a244ce_f64_bits(_8714_x);
	jule::Uint _9813_e = static_cast<jule::Uint>(_9713_bits >> 52LL) & 2047LL;
	if (_9813_e < 1023LL) {
		_9713_bits&=9223372036854775808LLU;
		if (_9813_e == 1022LL) {
			_9713_bits|=4607182418800017408LL;
		}
	} else if (_9813_e < 1075LL) {
		
		_9813_e-=1023LL;
		_9713_bits+=static_cast<jule::Int>(2251799813685248LL >> _9813_e);
		_9713_bits&=static_cast<jule::Int>((~(4503599627370495LL >> _9813_e)));
	}
	return static_cast<jule::F64>(_204a244ce_f64_from_bits(_9713_bits));
}



inline jule::F64 _204ac0943_round_even(jule::F64 _12419_x) {
	jule::U64 _13613_bits = _204a244ce_f64_bits(_12419_x);
	jule::Uint _13713_e = static_cast<jule::Uint>(_13613_bits >> 52LL) & 2047LL;
	if (_13713_e >= 1023LL) {
		
		_13713_e-=1023LL;
		_13613_bits+=static_cast<jule::U64>((2251799813685247LL + ((_13613_bits >> (52LL - _13713_e)) & 1LL)) >> _13713_e);
		_13613_bits&=static_cast<jule::Int>((~(4503599627370495LL >> _13713_e)));
	} else if ((_13713_e == 1022LL) && ((_13613_bits & 4503599627370495LL) != 0LL)) {
		_13613_bits=static_cast<jule::U64>((_13613_bits & 9223372036854775808LLU) | 4607182418800017408LL);
	} else {
		_13613_bits&=9223372036854775808LLU;
	}
	return static_cast<jule::F64>(_204a244ce_f64_from_bits(_13613_bits));
}



inline jule::F64 _204ae433a_nan(void) {
	return static_cast<jule::F64>(_204a244ce_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _204ae433a_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _204ae433a_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_204a244ce_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_204a244ce_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _204ae433a_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline std::tuple<jule::F64,jule::Int> _204ae433a_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::Int _8232_exp = jule::Int();
	
	if (_204c18409_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_8224_y = static_cast<jule::F64>(_8214_x * 4503599627370496LL);
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline std::tuple<jule::F64,jule::F64> _204b40793_sincos(jule::F64 _4619_x) {
	jule::F64 _4629_sin = jule::F64();
	jule::F64 _4639_cos = jule::F64();
	
	
	
	{
		if (!((_4619_x == 0LL))) { goto _case_end_4376522976; }
		_case_begin_4376522976:;
		{
			_4629_sin = _4619_x;
			_4639_cos = 1LL;
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4376522816;
		_case_end_4376522976:;
		if (!((_204ae433a_is_nan(_4619_x)) || (_204ae433a_is_inf(_4619_x,0LL)))) { goto _case_end_4376523104; }
		_case_begin_4376523104:;
		{
			_4629_sin = static_cast<jule::F64>(_204ae433a_nan());
			_4639_cos = static_cast<jule::F64>(_204ae433a_nan());
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4376522816;
		_case_end_4376523104:;
		_match_end_4376522816:;
	}
	jule::Bool _5914_sin_sign = false;
	jule::Bool _5928_cos_sign = false;
	std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple(false,false);
	if (_4619_x < 0LL) {
		_4619_x=static_cast<jule::F64>((-(_4619_x)));
		_5914_sin_sign=true;
	}
	jule::U64 _6513_j = 0LL;
	jule::F64 _6613_y = 0LL;
	jule::F64 _6713_z = 0LL;
	if (_4619_x >= 536870912LL) {
		std::tie(_6513_j,_6713_z) = _204a322ab_trig_reduce(_4619_x);
	} else {
		_6513_j=static_cast<jule::U64>(_4619_x * 1.2732395447351628);
		_6613_y=static_cast<jule::F64>(_6513_j);
		if ((_6513_j & 1LL) == 1LL) {
			(_6513_j)++;
			(_6613_y)++;
		}
		_6513_j&=7LL;
		_6713_z=static_cast<jule::F64>(((_4619_x - (_6613_y * 0.7853981256484985)) - (_6613_y * 0.00000003774894707930798)) - (_6613_y * 0.0000000000000026951514290790595));
	}
	if (_6513_j > 3LL) {
		_6513_j-=4LL;
		std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple((!(_5914_sin_sign)),(!(_5928_cos_sign)));
	}
	if (_6513_j > 1LL) {
		_5928_cos_sign=(!(_5928_cos_sign));
	}
	jule::F64 _899_zz = _6713_z * _6713_z;
	_4639_cos=static_cast<jule::F64>((1LL - (0.5 * _899_zz)) + ((_899_zz * _899_zz) * ((((((((((_204a2e5b6__COS[0LL] * _899_zz) + _204a2e5b6__COS[1LL]) * _899_zz) + _204a2e5b6__COS[2LL]) * _899_zz) + _204a2e5b6__COS[3LL]) * _899_zz) + _204a2e5b6__COS[4LL]) * _899_zz) + _204a2e5b6__COS[5LL])));
	_4629_sin=static_cast<jule::F64>(_6713_z + ((_6713_z * _899_zz) * ((((((((((_204a2e5b6__SIN[0LL] * _899_zz) + _204a2e5b6__SIN[1LL]) * _899_zz) + _204a2e5b6__SIN[2LL]) * _899_zz) + _204a2e5b6__SIN[3LL]) * _899_zz) + _204a2e5b6__SIN[4LL]) * _899_zz) + _204a2e5b6__SIN[5LL])));
	if ((_6513_j == 1LL) || (_6513_j == 2LL)) {
		std::tie(_4629_sin,_4639_cos) = std::make_tuple(_4639_cos,_4629_sin);
	}
	if (_5928_cos_sign) {
		_4639_cos=static_cast<jule::F64>((-(_4639_cos)));
	}
	if (_5914_sin_sign) {
		_4629_sin=static_cast<jule::F64>((-(_4629_sin)));
	}
	return std::make_tuple(_4629_sin,_4639_cos);
}



inline jule::F64 _204b13678_dim(jule::F64 _4412_x,jule::F64 _4420_y) {
	jule::F64 _509_v = _4412_x - _4420_y;
	if (_509_v <= 0LL) {
		return 0LL;
	}
	return _509_v;
}



inline jule::F64 _204b13678_max(jule::F64 _6612_x,jule::F64 _6620_y) {
	{
		if (!((_204ae433a_is_inf(_6612_x,1LL)) || (_204ae433a_is_inf(_6620_y,1LL)))) { goto _case_end_4376567008; }
		_case_begin_4376567008:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(1LL));
		}
		goto _match_end_4376566768;
		_case_end_4376567008:;
		if (!((_204ae433a_is_nan(_6612_x)) || (_204ae433a_is_nan(_6620_y)))) { goto _case_end_4376567136; }
		_case_begin_4376567136:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4376566768;
		_case_end_4376567136:;
		if (!(((_6612_x == 0LL) && (_6612_x == _6620_y)))) { goto _case_end_4376567264; }
		_case_begin_4376567264:;
		{
			if (_204ce6b9c_signbit(_6612_x)) {
				return _6620_y;
			}
			return _6612_x;
		}
		goto _match_end_4376566768;
		_case_end_4376567264:;
		_match_end_4376566768:;
	}
	if (_6612_x > _6620_y) {
		return _6612_x;
	}
	return _6620_y;
}



inline jule::F64 _204b13678_min(jule::F64 _9212_x,jule::F64 _9220_y) {
	{
		if (!((_204ae433a_is_inf(_9212_x,-1LL)) || (_204ae433a_is_inf(_9220_y,-1LL)))) { goto _case_end_4376574240; }
		_case_begin_4376574240:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(-1LL));
		}
		goto _match_end_4376574000;
		_case_end_4376574240:;
		if (!((_204ae433a_is_nan(_9212_x)) || (_204ae433a_is_nan(_9220_y)))) { goto _case_end_4376574368; }
		_case_begin_4376574368:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4376574000;
		_case_end_4376574368:;
		if (!(((_9212_x == 0LL) && (_9212_x == _9220_y)))) { goto _case_end_4376574496; }
		_case_begin_4376574496:;
		{
			if (_204ce6b9c_signbit(_9212_x)) {
				return _9212_x;
			}
			return _9220_y;
		}
		goto _match_end_4376574000;
		_case_end_4376574496:;
		_match_end_4376574000:;
	}
	if (_9212_x < _9220_y) {
		return _9212_x;
	}
	return _9220_y;
}



inline jule::F64 _204b436ca_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		if (!((_204ae433a_is_nan(_11112_x)) || (_204ae433a_is_inf(_11112_x,1LL)))) { goto _case_end_4376589760; }
		_case_begin_4376589760:;
		{
			return _11112_x;
		}
		goto _match_end_4376589568;
		_case_end_4376589760:;
		if (!((_11112_x < 0LL))) { goto _case_end_4376589888; }
		_case_begin_4376589888:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4376589568;
		_case_end_4376589888:;
		if (!((_11112_x == 0LL))) { goto _case_end_4376590016; }
		_case_begin_4376590016:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(-1LL));
		}
		goto _match_end_4376589568;
		_case_end_4376590016:;
		_match_end_4376589568:;
	}
	jule::F64 _13314_f1;
	jule::Int _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _204a91b01_frexp(_11112_x);
	if (_13314_f1 < 0.7071067811865476) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = _13314_f1 - 1LL;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,2LL + _1389_f);
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586))))));
	jule::F64 _1469_t2 = _1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f));
}



inline jule::F64 _204baea54_expm1(jule::F64 _15618_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_204ae433a_is_inf(_15618_x,1LL)) || (_204ae433a_is_nan(_15618_x)))) { goto _case_end_4376623504; }
		_case_begin_4376623504:;
		{
			return _15618_x;
		}
		goto _match_end_4376623328;
		_case_end_4376623504:;
		if (!((_204ae433a_is_inf(_15618_x,-1LL)))) { goto _case_end_4376623632; }
		_case_begin_4376623632:;
		{
			return -1LL;
		}
		goto _match_end_4376623328;
		_case_end_4376623632:;
		_match_end_4376623328:;
	}
	jule::F64 _18013_absx = _15618_x;
	jule::Bool _18113_sign = false;
	if (_15618_x < 0LL) {
		_18013_absx=static_cast<jule::F64>((-(_18013_absx)));
		_18113_sign=true;
	}
	if (_18013_absx >= 38.816242111356935) {
		if (_18113_sign) {
			return -1LL;
		}
		if (_18013_absx >= 709.782712893384) {
			return static_cast<jule::F64>(_204ae433a_inf(1LL));
		}
	}
	jule::F64 _19813_c = 0LL;
	jule::Int _19913_k = 0LL;
	if (_18013_absx > 0.34657359027997264) {
		jule::F64 _20117_hi = 0LL;
		jule::F64 _20217_lo = 0LL;
		if (_18013_absx < 1.0397207708399179) {
			if ((!(_18113_sign))) {
				_20117_hi=static_cast<jule::F64>(_15618_x - 0.6931471803691238);
				_20217_lo=0.00000000019082149292705877;
				_19913_k=1LL;
			} else {
				_20117_hi=static_cast<jule::F64>(_15618_x + 0.6931471803691238);
				_20217_lo=-0.00000000019082149292705877;
				_19913_k=-1LL;
			}
		} else {
			if ((!(_18113_sign))) {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) + 0.5);
			} else {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) - 0.5);
			}
			jule::F64 _21917_t = static_cast<jule::F64>(_19913_k);
			_20117_hi=static_cast<jule::F64>(_15618_x - (_21917_t * 0.6931471803691238));
			_20217_lo=static_cast<jule::F64>(_21917_t * 0.00000000019082149292705877);
		}
		_15618_x=static_cast<jule::F64>(_20117_hi - _20217_lo);
		_19813_c=static_cast<jule::F64>((_20117_hi - _15618_x) - _20217_lo);
	} else if (_18013_absx < 0.00000000000000005551115123125783) {
		return _15618_x;
	} else {
		_19913_k=0LL;
	}
	jule::F64 _2329_hfx = 0.5 * _15618_x;
	jule::F64 _2339_hxs = _15618_x * _2329_hfx;
	jule::F64 _2349_r1 = 1LL + (_2339_hxs * (-0.03333333333333313 + (_2339_hxs * (0.0015873015872548146 + (_2339_hxs * (-0.0000793650757867488 + (_2339_hxs * (0.000004008217827329362 + (_2339_hxs * -0.00000020109921818362437)))))))));
	jule::F64 _23513_t = 3LL - (_2349_r1 * _2329_hfx);
	jule::F64 _23613_e = _2339_hxs * jule::div(_2349_r1 - _23513_t,6LL - (_15618_x * _23513_t));
	if (_19913_k == 0LL) {
		return static_cast<jule::F64>(_15618_x - ((_15618_x * _23613_e) - _2339_hxs));
	}
	_23613_e=static_cast<jule::F64>((_15618_x * (_23613_e - _19813_c)) - _19813_c);
	_23613_e-=_2339_hxs;
	{
		if (!((_19913_k == -1LL))) { goto _case_end_4376657456; }
		_case_begin_4376657456:;
		{
			return static_cast<jule::F64>((0.5 * (_15618_x - _23613_e)) - 0.5);
		}
		goto _match_end_4376657920;
		_case_end_4376657456:;
		if (!((_19913_k == 1LL))) { goto _case_end_4376658896; }
		_case_begin_4376658896:;
		{
			if (_15618_x < -0.25) {
				return static_cast<jule::F64>(-2LL * (_23613_e - (_15618_x + 0.5)));
			}
			return static_cast<jule::F64>(1LL + (2LL * (_15618_x - _23613_e)));
		}
		goto _match_end_4376657920;
		_case_end_4376658896:;
		if (!((_19913_k <= -2LL) || (_19913_k > 56LL))) { goto _case_end_4376659056; }
		_case_begin_4376659056:;
		{
			jule::F64 _25117_y = 1LL - (_23613_e - _15618_x);
			_25117_y=static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>(_204a244ce_f64_bits(_25117_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
			return static_cast<jule::F64>(_25117_y - 1LL);
		}
		goto _match_end_4376657920;
		_case_end_4376659056:;
		_match_end_4376657920:;
	}
	if (_19913_k < 20LL) {
		_23513_t=static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>(4607182418800017408LL - (9007199254740992LL >> static_cast<jule::Uint>(_19913_k)))));
		jule::F64 _25717_y = _23513_t - (_23613_e - _15618_x);
		_25717_y=static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>(_204a244ce_f64_bits(_25717_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
		return _25717_y;
	}
	_23513_t=static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>(static_cast<jule::U64>(1023LL - _19913_k) << 52LL)));
	jule::F64 _26213_y = _15618_x - (_23613_e + _23513_t);
	(_26213_y)++;
	_26213_y=static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>(_204a244ce_f64_bits(_26213_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
	return _26213_y;
}



inline jule::F64 _204c18409_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>(_204a244ce_f64_bits(_4312_x) & 9223372036854775807LLU)));
}



inline jule::F64 _204bc0e1c_j1(jule::F64 _10515_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_204ae433a_is_nan(_10515_x)))) { goto _case_end_4376690480; }
		_case_begin_4376690480:;
		{
			return _10515_x;
		}
		goto _match_end_4376690304;
		_case_end_4376690480:;
		if (!((_204ae433a_is_inf(_10515_x,0LL)) || (_10515_x == 0LL))) { goto _case_end_4376690608; }
		_case_begin_4376690608:;
		{
			return 0LL;
		}
		goto _match_end_4376690304;
		_case_end_4376690608:;
		_match_end_4376690304:;
	}
	jule::Bool _12613_sign = false;
	if (_10515_x < 0LL) {
		_10515_x=static_cast<jule::F64>((-(_10515_x)));
		_12613_sign=true;
	}
	if (_10515_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _204b40793_sincos(_10515_x);
		jule::F64 _13317_ss = (-(_13214_s)) - _13217_c;
		jule::F64 _13417_cc = _13214_s - _13217_c;
		if (_10515_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = _204a2e5b6_cos(static_cast<jule::F64>(_10515_x + _10515_x));
			if ((_13214_s * _13217_c) > 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10515_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_2050b9975_sqrt(_10515_x)));
		} else {
			jule::F64 _15317_u = _204bc0e1c_pone(_10515_x);
			jule::F64 _15417_v = _204bc0e1c_qone(_10515_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_2050b9975_sqrt(_10515_x)));
		}
		if (_12613_sign) {
			return static_cast<jule::F64>((-(_14917_z)));
		}
		return _14917_z;
	}
	if (_10515_x < 0.000000007450580596923828) {
		return static_cast<jule::F64>(0.5 * _10515_x);
	}
	jule::F64 _16613_z = _10515_x * _10515_x;
	jule::F64 _16713_r = _16613_z * (-0.0625 + (_16613_z * (0.001407056669551897 + (_16613_z * (-0.00001599556310840356 + (_16613_z * 0.000000049672799960958445))))));
	jule::F64 _1689_s = 1LL + (_16613_z * (0.019153759953836346 + (_16613_z * (0.00018594678558863092 + (_16613_z * (0.0000011771846404262368 + (_16613_z * (0.0000000050463625707621704 + (_16613_z * 0.000000000012354227442613791)))))))));
	_16713_r*=_10515_x;
	_16613_z=static_cast<jule::F64>((0.5 * _10515_x) + jule::div(_16713_r,_1689_s));
	if (_12613_sign) {
		return static_cast<jule::F64>((-(_16613_z)));
	}
	return _16613_z;
}



inline jule::F64 _204bc0e1c_y1(jule::F64 _18411_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18411_x < 0LL) || (_204ae433a_is_nan(_18411_x)))) { goto _case_end_4376733184; }
		_case_begin_4376733184:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4376732992;
		_case_end_4376733184:;
		if (!((_204ae433a_is_inf(_18411_x,1LL)))) { goto _case_end_4376733312; }
		_case_begin_4376733312:;
		{
			return 0LL;
		}
		goto _match_end_4376732992;
		_case_end_4376733312:;
		if (!((_18411_x == 0LL))) { goto _case_end_4376733440; }
		_case_begin_4376733440:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(-1LL));
		}
		goto _match_end_4376732992;
		_case_end_4376733440:;
		_match_end_4376732992:;
	}
	if (_18411_x >= 2LL) {
		jule::F64 _20814_s;
		jule::F64 _20817_c;
		std::tie(_20814_s,_20817_c) = _204b40793_sincos(_18411_x);
		jule::F64 _20917_ss = (-(_20814_s)) - _20817_c;
		jule::F64 _21017_cc = _20814_s - _20817_c;
		if (_18411_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _21417_z = _204a2e5b6_cos(static_cast<jule::F64>(_18411_x + _18411_x));
			if ((_20814_s * _20817_c) > 0LL) {
				_21017_cc=static_cast<jule::F64>(jule::div(_21417_z,_20917_ss));
			} else {
				_20917_ss=static_cast<jule::F64>(jule::div(_21417_z,_21017_cc));
			}
		}
		jule::F64 _23217_z = 0LL;
		if (_18411_x > 5188146770730811392LL) {
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _20917_ss,_2050b9975_sqrt(_18411_x)));
		} else {
			jule::F64 _23617_u = _204bc0e1c_pone(_18411_x);
			jule::F64 _23717_v = _204bc0e1c_qone(_18411_x);
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23617_u * _20917_ss) + (_23717_v * _21017_cc)),_2050b9975_sqrt(_18411_x)));
		}
		return _23217_z;
	}
	if (_18411_x <= 0.00000000000000005551115123125783) {
		return static_cast<jule::F64>(jule::div(-0.6366197723675814,_18411_x));
	}
	jule::F64 _2459_z = _18411_x * _18411_x;
	jule::F64 _2469_u = -0.19605709064623894 + (_2459_z * (0.05044387166398113 + (_2459_z * (-0.0019125689587576355 + (_2459_z * (0.00002352526005616105 + (_2459_z * -0.00000009190991580398789)))))));
	jule::F64 _2479_v = 1LL + (_2459_z * (0.01991673182366499 + (_2459_z * (0.00020255258102513517 + (_2459_z * (0.0000013560880109751623 + (_2459_z * (0.000000006227414523646215 + (_2459_z * 0.000000000016655924620799208)))))))));
	return static_cast<jule::F64>((_18411_x * jule::div(_2469_u,_2479_v)) + (0.6366197723675814 * ((_204bc0e1c_j1(_18411_x) * _204b436ca_log(_18411_x)) - jule::div(1LL,_18411_x))));
}



inline jule::F64 _204bc0e1c_pone(jule::F64 _3289_x) {
	jule::Array<jule::F64,6>* _32913_p = nullptr;
	jule::Array<jule::F64,5>* _33013_q = nullptr;
	if (_3289_x >= 8LL) {
		_32913_p=(&(_204bc0e1c_P_1R8));
		_33013_q=(&(_204bc0e1c_P_1S8));
	} else if (_3289_x >= 4.5454) {
		_32913_p=(&(_204bc0e1c_P_1R5));
		_33013_q=(&(_204bc0e1c_P_1S5));
	} else if (_3289_x >= 2.8571) {
		_32913_p=(&(_204bc0e1c_P_1R3));
		_33013_q=(&(_204bc0e1c_P_1S3));
	} else if (_3289_x >= 2LL) {
		_32913_p=(&(_204bc0e1c_P_1R2));
		_33013_q=(&(_204bc0e1c_P_1S2));
	}
	{
		jule::F64 _34513_z = jule::div(1LL,_3289_x * _3289_x);
		jule::F64 _34613_r = (*(_32913_p))[0LL] + (_34513_z * ((*(_32913_p))[1LL] + (_34513_z * ((*(_32913_p))[2LL] + (_34513_z * ((*(_32913_p))[3LL] + (_34513_z * ((*(_32913_p))[4LL] + (_34513_z * (*(_32913_p))[5LL])))))))));
		jule::F64 _34713_s = 1LL + (_34513_z * ((*(_33013_q))[0LL] + (_34513_z * ((*(_33013_q))[1LL] + (_34513_z * ((*(_33013_q))[2LL] + (_34513_z * ((*(_33013_q))[3LL] + (_34513_z * (*(_33013_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34613_r,_34713_s));
	}
}



inline jule::F64 _204bc0e1c_qone(jule::F64 _4339_x) {
	jule::Array<jule::F64,6>* _43413_p = nullptr;
	jule::Array<jule::F64,6>* _43513_q = nullptr;
	if (_4339_x >= 8LL) {
		_43413_p=(&(_204bc0e1c_Q_1R8));
		_43513_q=(&(_204bc0e1c_Q_1S8));
	} else if (_4339_x >= 4.5454) {
		_43413_p=(&(_204bc0e1c_Q_1R5));
		_43513_q=(&(_204bc0e1c_Q_1S5));
	} else if (_4339_x >= 2.8571) {
		_43413_p=(&(_204bc0e1c_Q_1R3));
		_43513_q=(&(_204bc0e1c_Q_1S3));
	} else if (_4339_x >= 2LL) {
		_43413_p=(&(_204bc0e1c_Q_1R2));
		_43513_q=(&(_204bc0e1c_Q_1S2));
	}
	{
		jule::F64 _45013_z = jule::div(1LL,_4339_x * _4339_x);
		jule::F64 _45113_r = (*(_43413_p))[0LL] + (_45013_z * ((*(_43413_p))[1LL] + (_45013_z * ((*(_43413_p))[2LL] + (_45013_z * ((*(_43413_p))[3LL] + (_45013_z * ((*(_43413_p))[4LL] + (_45013_z * (*(_43413_p))[5LL])))))))));
		jule::F64 _45213_s = 1LL + (_45013_z * ((*(_43513_q))[0LL] + (_45013_z * ((*(_43513_q))[1LL] + (_45013_z * ((*(_43513_q))[2LL] + (_45013_z * ((*(_43513_q))[3LL] + (_45013_z * ((*(_43513_q))[4LL] + (_45013_z * (*(_43513_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(0.375 + jule::div(_45113_r,_45213_s),_4339_x));
	}
}



inline jule::U64 _204c920cb_zero(jule::U64 _409_x) {
	if (_409_x == 0LL) {
		return 1LL;
	}
	return 0LL;
}



inline jule::U64 _204c920cb_nonzero(jule::U64 _4912_x) {
	if (_4912_x != 0LL) {
		return 1LL;
	}
	return 0LL;
}



inline std::tuple<jule::U64,jule::U64> _204c920cb_shl(jule::U64 _588_u1,jule::U64 _5817_u2,jule::Uint _5826_n) {
	jule::U64 _5837_r1 = jule::U64();
	jule::U64 _5846_r2 = jule::U64();
	_5837_r1=static_cast<jule::U64>(((_588_u1 << _5826_n) | (_5817_u2 >> (64LL - _5826_n))) | (_5817_u2 << (_5826_n - 64LL)));
	_5846_r2=static_cast<jule::U64>(_5817_u2 << _5826_n);
	return std::make_tuple(_5837_r1,_5846_r2);
}



inline std::tuple<jule::U64,jule::U64> _204c920cb_shr(jule::U64 _648_u1,jule::U64 _6417_u2,jule::Uint _6426_n) {
	jule::U64 _6437_r1 = jule::U64();
	jule::U64 _6446_r2 = jule::U64();
	jule::U64 _7113_shift = _648_u1;
	jule::Uint _7213_shift_n = _6426_n - 64LL;
	_iter_begin_4376839344:;
	if (!((_7113_shift > 0LL) && (_7213_shift_n > 0LL))) { goto _iter_end_4376839344; }
	{
		(_7213_shift_n)--;
		_7113_shift>>=1LL;
	}
	_iter_next_4376839344:;
	goto _iter_begin_4376839344;
	_iter_end_4376839344:;
	_6446_r2=static_cast<jule::U64>(((_6417_u2 >> _6426_n) | (_648_u1 << (64LL - _6426_n))) | _7113_shift);
	_6437_r1=static_cast<jule::U64>(_648_u1 >> _6426_n);
	return std::make_tuple(_6437_r1,_6446_r2);
}



inline std::tuple<jule::U64,jule::U64> _204c920cb_shrcompress(jule::U64 _8716_u1,jule::U64 _8725_u2,jule::Uint _8734_n) {
	jule::U64 _8745_r1 = jule::U64();
	jule::U64 _8754_r2 = jule::U64();
	{
		if (!((_8734_n == 0LL))) { goto _case_end_4376846816; }
		_case_begin_4376846816:;
		{
			_8745_r1 = _8716_u1;
			_8754_r2 = _8725_u2;
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4376846528;
		_case_end_4376846816:;
		if (!((_8734_n == 64LL))) { goto _case_end_4376846944; }
		_case_begin_4376846944:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_8716_u1 | _204c920cb_nonzero(_8725_u2));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4376846528;
		_case_end_4376846944:;
		if (!((_8734_n >= 128LL))) { goto _case_end_4376847072; }
		_case_begin_4376847072:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_204c920cb_nonzero(static_cast<jule::U64>(_8716_u1 | _8725_u2)));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4376846528;
		_case_end_4376847072:;
		if (!((_8734_n < 64LL))) { goto _case_end_4376847200; }
		_case_begin_4376847200:;
		{
			std::tie(_8745_r1,_8754_r2) = _204c920cb_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_204c920cb_nonzero(static_cast<jule::U64>(_8725_u2 & ((1LL << _8734_n) - 1LL))));
		}
		goto _match_end_4376846528;
		_case_end_4376847200:;
		if (!((_8734_n < 128LL))) { goto _case_end_4376847328; }
		_case_begin_4376847328:;
		{
			std::tie(_8745_r1,_8754_r2) = _204c920cb_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_204c920cb_nonzero(static_cast<jule::U64>((_8716_u1 & ((1LL << (_8734_n - 64LL)) - 1LL)) | _8725_u2)));
		}
		goto _match_end_4376846528;
		_case_end_4376847328:;
		_match_end_4376846528:;
	}
	return std::make_tuple(_8745_r1,_8754_r2);
}



inline jule::I32 _204c920cb_lz(jule::U64 _1057_u1,jule::U64 _10516_u2) {
	jule::I32 _10527_l = jule::I32();
	_10527_l=static_cast<jule::I32>(_20525c51e_leading_zeros64(_1057_u1));
	if (_10527_l == 64LL) {
		_10527_l+=static_cast<jule::I32>(_20525c51e_leading_zeros64(_10516_u2));
	}
	_10527_l = _10527_l;
	return _10527_l;
}



inline std::tuple<jule::U32,jule::I32,jule::U64> _204c920cb_split(jule::U64 _11610_b) {
	jule::U32 _11620_sign = jule::U32();
	jule::I32 _11631_exp = jule::I32();
	jule::U64 _11641_mantissa = jule::U64();
	_11620_sign=static_cast<jule::U32>(_11610_b >> 63LL);
	_11631_exp=static_cast<jule::I32>(static_cast<jule::I32>(_11610_b >> 52LL) & 2047LL);
	_11641_mantissa=static_cast<jule::U64>(_11610_b & 4503599627370495LL);
	if (_11631_exp == 0LL) {
		jule::Uint _12313_shift = static_cast<jule::Uint>(_20525c51e_leading_zeros64(_11641_mantissa) - 11LL);
		_11641_mantissa<<=_12313_shift;
		_11631_exp=static_cast<jule::I32>(1LL - static_cast<jule::I32>(_12313_shift));
	} else {
		_11641_mantissa|=4503599627370496LL;
	}
	return std::make_tuple(_11620_sign,_11631_exp,_11641_mantissa);
}



inline jule::F64 _204c920cb_fma(jule::F64 _13512_x,jule::F64 _13520_y,jule::F64 _13528_z) {
	jule::U64 _13610_bx = _204a244ce_f64_bits(_13512_x);
	jule::U64 _13614_by = _204a244ce_f64_bits(_13520_y);
	jule::U64 _13618_bz = _204a244ce_f64_bits(_13528_z);
	std::tie(_13610_bx,_13614_by,_13618_bz) = std::make_tuple(_204a244ce_f64_bits(_13512_x),_204a244ce_f64_bits(_13520_y),_204a244ce_f64_bits(_13528_z));
	if (((((_13512_x == 0LL) || (_13520_y == 0LL)) || (_13528_z == 0LL)) || ((_13610_bx & 9218868437227405312LL) == 9218868437227405312LL)) || ((_13614_by & 9218868437227405312LL) == 9218868437227405312LL)) {
		return static_cast<jule::F64>((_13512_x * _13520_y) + _13528_z);
	}
	if ((_13618_bz & 9218868437227405312LL) == 9218868437227405312LL) {
		return _13528_z;
	}
	jule::U32 _15010_xs;
	jule::I32 _15014_xe;
	jule::U64 _15018_xm;
	std::tie(_15010_xs,_15014_xe,_15018_xm) = _204c920cb_split(_13610_bx);
	jule::U32 _15110_ys;
	jule::I32 _15114_ye;
	jule::U64 _15118_ym;
	std::tie(_15110_ys,_15114_ye,_15118_ym) = _204c920cb_split(_13614_by);
	jule::U32 _15214_zs;
	jule::I32 _15222_ze;
	jule::U64 _15226_zm;
	std::tie(_15214_zs,_15222_ze,_15226_zm) = _204c920cb_split(_13618_bz);
	jule::I32 _15613_pe = ((_15014_xe + _15114_ye) - 1023LL) + 1LL;
	jule::U64 _16114_pm1;
	jule::U64 _16123_pm2;
	std::tie(_16114_pm1,_16123_pm2) = _20525c51e_mul64(static_cast<jule::U64>(_15018_xm << 10LL),static_cast<jule::U64>(_15118_ym << 11LL));
	jule::U64 _16214_zm1 = _15226_zm << 10LL;
	jule::U64 _16223_zm2 = static_cast<jule::U64>(0LLU);
	std::tie(_16214_zm1,_16223_zm2) = std::make_tuple(_15226_zm << 10LL,static_cast<jule::U64>(0LLU));
	jule::U32 _16313_ps = _15010_xs ^ _15110_ys;
	jule::Uint _1669_is62zero = static_cast<jule::Uint>(((~(_16114_pm1)) >> 62LL) & 1LL);
	std::tie(_16114_pm1,_16123_pm2) = _204c920cb_shl(_16114_pm1,_16123_pm2,_1669_is62zero);
	_15613_pe-=static_cast<jule::I32>(_1669_is62zero);
	if ((_15613_pe < _15222_ze) || ((_15613_pe == _15222_ze) && (_16114_pm1 < _16214_zm1))) {
		std::tie(_16313_ps,_15613_pe,_16114_pm1,_16123_pm2,_15214_zs,_15222_ze,_16214_zm1,_16223_zm2) = std::make_tuple(_15214_zs,_15222_ze,_16214_zm1,_16223_zm2,_16313_ps,static_cast<jule::I32>(_15613_pe),_16114_pm1,_16123_pm2);
	}
	std::tie(_16214_zm1,_16223_zm2) = _204c920cb_shrcompress(_16214_zm1,_16223_zm2,static_cast<jule::Uint>(_15613_pe - _15222_ze));
	jule::U64 _17913_m = 0LL;
	jule::U64 _18013_c = 0LL;
	if (_16313_ps == _15214_zs) {
		std::tie(_16123_pm2,_18013_c) = _20525c51e_add64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _20525c51e_add64(_16114_pm1,_16214_zm1,_18013_c);
		_15613_pe-=static_cast<jule::I32>((~(_16114_pm1)) >> 63LL);
		std::tie(_16114_pm1,_17913_m) = _204c920cb_shrcompress(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(64LL + (_16114_pm1 >> 63LL)));
	} else {
		std::tie(_16123_pm2,_18013_c) = _20525c51e_sub64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _20525c51e_sub64(_16114_pm1,_16214_zm1,_18013_c);
		jule::I32 _19113_nz = _204c920cb_lz(_16114_pm1,_16123_pm2);
		_15613_pe-=_19113_nz;
		std::tie(_17913_m,_16123_pm2) = _204c920cb_shl(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(_19113_nz - 1LL));
		_17913_m|=static_cast<jule::U64>(_204c920cb_nonzero(_16123_pm2));
	}
	if ((_15613_pe > 2045LL) || ((_15613_pe == 2045LL) && (((_17913_m + 512LL) >> 63LL) == 1LL))) {
		return static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(_16313_ps) << 63LL) | 9218868437227405312LL)));
	}
	if (_15613_pe < 0LL) {
		jule::Uint _20313_n = static_cast<jule::Uint>((-(_15613_pe)));
		_17913_m=static_cast<jule::U64>((_17913_m >> _20313_n) | _204c920cb_nonzero(static_cast<jule::U64>(_17913_m & ((1LL << _20313_n) - 1LL))));
		_15613_pe=0LL;
	}
	_17913_m=static_cast<jule::U64>(((_17913_m + 512LL) >> 10LL) & (~(_204c920cb_zero(static_cast<jule::U64>((_17913_m & 1023LL) ^ 512LL)))));
	_15613_pe&=static_cast<jule::I32>((-(static_cast<jule::I32>(_204c920cb_nonzero(_17913_m)))));
	return static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>(((static_cast<jule::U64>(_16313_ps) << 63LL) + (static_cast<jule::U64>(_15613_pe) << 52LL)) + _17913_m)));
}



inline std::tuple<jule::F64,jule::F64> _204c8b845_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _204c18409_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if (_469_abs_f > 4503599627370496LL) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>(_469_abs_f + 4503599627370496LL);
		_4713_i-=4503599627370496LL;
		_iter_begin_4376929936:;
		if (!(_4713_i > _469_abs_f)) { goto _iter_end_4376929936; }
		{
			(_4713_i)--;
		}
		_iter_next_4376929936:;
		goto _iter_begin_4376929936;
		_iter_end_4376929936:;
		if (_4413_f < 0LL) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _204cd760a_log10(jule::F64 _4014_x) {
	return static_cast<jule::F64>(_204b436ca_log(_4014_x) * 0.43429448190325176);
}



inline jule::F64 _204cd760a_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::Int _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _204a91b01_frexp(_4413_x);
	if (_4510_frac == 0.5) {
		return static_cast<jule::F64>(_4516_exp - 1LL);
	}
	return static_cast<jule::F64>((_204b436ca_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp));
}



inline jule::F64 _204cedd4c_hypot(jule::F64 _5018_p,jule::F64 _5030_q) {
	{
		if (!((_204ae433a_is_inf(_5018_p,0LL)) || (_204ae433a_is_inf(_5030_q,0LL)))) { goto _case_end_4376942592; }
		_case_begin_4376942592:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(1LL));
		}
		goto _match_end_4376942368;
		_case_end_4376942592:;
		if (!((_204ae433a_is_nan(_5018_p)) || (_204ae433a_is_nan(_5030_q)))) { goto _case_end_4376942720; }
		_case_begin_4376942720:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4376942368;
		_case_end_4376942720:;
		_match_end_4376942368:;
	}
	std::tie(_5018_p,_5030_q) = std::make_tuple(static_cast<jule::F64>(_204c18409_abs(_5018_p)),static_cast<jule::F64>(_204c18409_abs(_5030_q)));
	if (_5018_p < _5030_q) {
		std::tie(_5018_p,_5030_q) = std::make_tuple(_5030_q,_5018_p);
	}
	if (_5018_p == 0LL) {
		return 0LL;
	}
	_5030_q=static_cast<jule::F64>(jule::div(_5030_q,_5018_p));
	return static_cast<jule::F64>(_5018_p * _2050b9975_sqrt(static_cast<jule::F64>(1LL + (_5030_q * _5030_q))));
}



inline jule::F64 _204cae0b5_j0(jule::F64 _10715_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_204ae433a_is_nan(_10715_x)))) { goto _case_end_4376962848; }
		_case_begin_4376962848:;
		{
			return _10715_x;
		}
		goto _match_end_4376962656;
		_case_end_4376962848:;
		if (!((_204ae433a_is_inf(_10715_x,0LL)))) { goto _case_end_4376962976; }
		_case_begin_4376962976:;
		{
			return 0LL;
		}
		goto _match_end_4376962656;
		_case_end_4376962976:;
		if (!((_10715_x == 0LL))) { goto _case_end_4376963104; }
		_case_begin_4376963104:;
		{
			return 1LL;
		}
		goto _match_end_4376962656;
		_case_end_4376963104:;
		_match_end_4376962656:;
	}
	_10715_x=static_cast<jule::F64>(_204c18409_abs(_10715_x));
	if (_10715_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _204b40793_sincos(_10715_x);
		jule::F64 _13317_ss = _13214_s - _13217_c;
		jule::F64 _13417_cc = _13214_s + _13217_c;
		if (_10715_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = (-(_204a2e5b6_cos(static_cast<jule::F64>(_10715_x + _10715_x))));
			if ((_13214_s * _13217_c) < 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10715_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_2050b9975_sqrt(_10715_x)));
		} else {
			jule::F64 _15317_u = _204cae0b5_pzero(_10715_x);
			jule::F64 _15417_v = _204cae0b5_qzero(_10715_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_2050b9975_sqrt(_10715_x)));
		}
		return _14917_z;
	}
	if (_10715_x < 0.0001220703125) {
		if (_10715_x < 0.000000007450580596923828) {
			return 1LL;
		}
		return static_cast<jule::F64>(1LL - ((0.25 * _10715_x) * _10715_x));
	}
	jule::F64 _1659_z = _10715_x * _10715_x;
	jule::F64 _1669_r = _1659_z * (0.015624999999999995 + (_1659_z * (-0.00018997929423885472 + (_1659_z * (0.0000018295404953270067 + (_1659_z * -0.000000004618326885321032))))));
	jule::F64 _1679_s = 1LL + (_1659_z * (0.015619102946489001 + (_1659_z * (0.00011692678466333745 + (_1659_z * (0.0000005135465502073181 + (_1659_z * 0.0000000011661400333379)))))));
	if (_10715_x < 1LL) {
		return static_cast<jule::F64>(1LL + (_1659_z * (-0.25 + jule::div(_1669_r,_1679_s))));
	}
	jule::F64 _1719_u = 0.5 * _10715_x;
	return static_cast<jule::F64>(((1LL + _1719_u) * (1LL - _1719_u)) + (_1659_z * jule::div(_1669_r,_1679_s)));
}



inline jule::F64 _204cae0b5_y0(jule::F64 _18211_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18211_x < 0LL) || (_204ae433a_is_nan(_18211_x)))) { goto _case_end_4377006960; }
		_case_begin_4377006960:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4377006768;
		_case_end_4377006960:;
		if (!((_204ae433a_is_inf(_18211_x,1LL)))) { goto _case_end_4377007088; }
		_case_begin_4377007088:;
		{
			return 0LL;
		}
		goto _match_end_4377006768;
		_case_end_4377007088:;
		if (!((_18211_x == 0LL))) { goto _case_end_4377007216; }
		_case_begin_4377007216:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(-1LL));
		}
		goto _match_end_4377006768;
		_case_end_4377007216:;
		_match_end_4377006768:;
	}
	if (_18211_x >= 2LL) {
		jule::F64 _21814_s;
		jule::F64 _21817_c;
		std::tie(_21814_s,_21817_c) = _204b40793_sincos(_18211_x);
		jule::F64 _21917_ss = _21814_s - _21817_c;
		jule::F64 _22017_cc = _21814_s + _21817_c;
		if (_18211_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _22717_z = (-(_204a2e5b6_cos(static_cast<jule::F64>(_18211_x + _18211_x))));
			if ((_21814_s * _21817_c) < 0LL) {
				_22017_cc=static_cast<jule::F64>(jule::div(_22717_z,_21917_ss));
			} else {
				_21917_ss=static_cast<jule::F64>(jule::div(_22717_z,_22017_cc));
			}
		}
		jule::F64 _23417_z = 0LL;
		if (_18211_x > 5188146770730811392LL) {
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _21917_ss,_2050b9975_sqrt(_18211_x)));
		} else {
			jule::F64 _23817_u = _204cae0b5_pzero(_18211_x);
			jule::F64 _23917_v = _204cae0b5_qzero(_18211_x);
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23817_u * _21917_ss) + (_23917_v * _22017_cc)),_2050b9975_sqrt(_18211_x)));
		}
		return _23417_z;
	}
	if (_18211_x <= 0.000000007450580596923828) {
		return static_cast<jule::F64>(-0.07380429510868723 + (0.6366197723675814 * _204b436ca_log(_18211_x)));
	}
	jule::F64 _2479_z = _18211_x * _18211_x;
	jule::F64 _2489_u = -0.07380429510868723 + (_2479_z * (0.17666645250918112 + (_2479_z * (-0.01381856719455969 + (_2479_z * (0.00034745343209368365 + (_2479_z * (-0.0000038140705372436416 + (_2479_z * (0.000000019559013703502292 + (_2479_z * -0.00000000003982051941321034)))))))))));
	jule::F64 _2499_v = 1LL + (_2479_z * (0.01273048348341237 + (_2479_z * (0.00007600686273503533 + (_2479_z * (0.0000002591508518404578 + (_2479_z * 0.00000000044111031133267547)))))));
	return static_cast<jule::F64>(jule::div(_2489_u,_2499_v) + ((0.6366197723675814 * _204cae0b5_j0(_18211_x)) * _204b436ca_log(_18211_x)));
}



inline jule::F64 _204cae0b5_pzero(jule::F64 _33010_x) {
	jule::Array<jule::F64,6>* _33113_p = nullptr;
	jule::Array<jule::F64,5>* _33213_q = nullptr;
	if (_33010_x >= 8LL) {
		_33113_p=(&(_204cae0b5_P_0R8));
		_33213_q=(&(_204cae0b5_P_0S8));
	} else if (_33010_x >= 4.5454) {
		_33113_p=(&(_204cae0b5_P_0R5));
		_33213_q=(&(_204cae0b5_P_0S5));
	} else if (_33010_x >= 2.8571) {
		_33113_p=(&(_204cae0b5_P_0R3));
		_33213_q=(&(_204cae0b5_P_0S3));
	} else if (_33010_x >= 2LL) {
		_33113_p=(&(_204cae0b5_P_0R2));
		_33213_q=(&(_204cae0b5_P_0S2));
	}
	{
		jule::F64 _34713_z = jule::div(1LL,_33010_x * _33010_x);
		jule::F64 _34813_r = (*(_33113_p))[0LL] + (_34713_z * ((*(_33113_p))[1LL] + (_34713_z * ((*(_33113_p))[2LL] + (_34713_z * ((*(_33113_p))[3LL] + (_34713_z * ((*(_33113_p))[4LL] + (_34713_z * (*(_33113_p))[5LL])))))))));
		jule::F64 _34913_s = 1LL + (_34713_z * ((*(_33213_q))[0LL] + (_34713_z * ((*(_33213_q))[1LL] + (_34713_z * ((*(_33213_q))[2LL] + (_34713_z * ((*(_33213_q))[3LL] + (_34713_z * (*(_33213_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34813_r,_34913_s));
	}
}



inline jule::F64 _204cae0b5_qzero(jule::F64 _43510_x) {
	jule::Array<jule::F64,6>* _43613_p = nullptr;
	jule::Array<jule::F64,6>* _43713_q = nullptr;
	if (_43510_x >= 8LL) {
		_43613_p=(&(_204cae0b5_Q_0R8));
		_43713_q=(&(_204cae0b5_Q_0S8));
	} else if (_43510_x >= 4.5454) {
		_43613_p=(&(_204cae0b5_Q_0R5));
		_43713_q=(&(_204cae0b5_Q_0S5));
	} else if (_43510_x >= 2.8571) {
		_43613_p=(&(_204cae0b5_Q_0R3));
		_43713_q=(&(_204cae0b5_Q_0S3));
	} else if (_43510_x >= 2LL) {
		_43613_p=(&(_204cae0b5_Q_0R2));
		_43713_q=(&(_204cae0b5_Q_0S2));
	}
	{
		jule::F64 _45213_z = jule::div(1LL,_43510_x * _43510_x);
		jule::F64 _45313_r = (*(_43613_p))[0LL] + (_45213_z * ((*(_43613_p))[1LL] + (_45213_z * ((*(_43613_p))[2LL] + (_45213_z * ((*(_43613_p))[3LL] + (_45213_z * ((*(_43613_p))[4LL] + (_45213_z * (*(_43613_p))[5LL])))))))));
		jule::F64 _45413_s = 1LL + (_45213_z * ((*(_43713_q))[0LL] + (_45213_z * ((*(_43713_q))[1LL] + (_45213_z * ((*(_43713_q))[2LL] + (_45213_z * ((*(_43713_q))[3LL] + (_45213_z * ((*(_43713_q))[4LL] + (_45213_z * (*(_43713_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(-0.125 + jule::div(_45313_r,_45413_s),_43510_x));
	}
}



inline jule::F64 _204d88447_ldexp(jule::F64 _4518_frac,jule::Int _4533_exp) {
	{
		if (!((_4518_frac == 0LL))) { goto _case_end_4377084912; }
		_case_begin_4377084912:;
		{
			return _4518_frac;
		}
		goto _match_end_4377064912;
		_case_end_4377084912:;
		if (!((_204ae433a_is_inf(_4518_frac,0LL)) || (_204ae433a_is_nan(_4518_frac)))) { goto _case_end_4377085040; }
		_case_begin_4377085040:;
		{
			return _4518_frac;
		}
		goto _match_end_4377064912;
		_case_end_4377085040:;
		_match_end_4377064912:;
	}
	jule::Int _5313_e = 0LL;
	std::tie(_4518_frac,_5313_e) = _204ae433a_normalize(_4518_frac);
	_4533_exp+=_5313_e;
	jule::U64 _5613_x = _204a244ce_f64_bits(_4518_frac);
	_4533_exp+=static_cast<jule::Int>((static_cast<jule::Int>(_5613_x >> 52LL) & 2047LL) - 1023LL);
	if (_4533_exp < -1075LL) {
		return static_cast<jule::F64>(_204a923d7_copysign(0LL,_4518_frac));
	}
	if (_4533_exp > 1023LL) {
		if (_4518_frac < 0LL) {
			return static_cast<jule::F64>(_204ae433a_inf(-1LL));
		}
		return static_cast<jule::F64>(_204ae433a_inf(1LL));
	}
	jule::F64 _6713_m = 1LL;
	if (_4533_exp < -1022LL) {
		_4533_exp+=53LL;
		_6713_m=0.00000000000000011102230246251565;
	}
	_5613_x=static_cast<jule::U64>(_5613_x & -9218868437227405313LL);
	_5613_x|=static_cast<jule::U64>(static_cast<jule::U64>(_4533_exp + 1023LL) << 52LL);
	return static_cast<jule::F64>(_6713_m * _204a244ce_f64_from_bits(_5613_x));
}



inline jule::Bool _204ce6b9c_signbit(jule::F64 _3916_x) {
	return (_204a244ce_f64_bits(_3916_x) & 9223372036854775808LLU) != 0LL;
}



inline jule::F64 _204d8b747_sinh(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	jule::Bool _6613_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_6613_sign=true;
	}
	jule::F64 _7213_temp = 0LL;
	{
		if (!((_5617_x > 21LL))) { goto _case_end_4377118112; }
		_case_begin_4377118112:;
		{
			_7213_temp=static_cast<jule::F64>(_204ec2e11_exp(_5617_x) * 0.5);
		}
		goto _match_end_4377111792;
		_case_end_4377118112:;
		if (!((_5617_x > 0.5))) { goto _case_end_4377114080; }
		_case_begin_4377114080:;
		{
			jule::F64 _7713_ex = _204ec2e11_exp(_5617_x);
			_7213_temp=static_cast<jule::F64>((_7713_ex - jule::div(1LL,_7713_ex)) * 0.5);
		}
		goto _match_end_4377111792;
		_case_end_4377114080:;
		_case_begin_4377111888:;
		{
			jule::F64 _8013_sq = _5617_x * _5617_x;
			_7213_temp=static_cast<jule::F64>(((((((-26.30563213397497 * _8013_sq) + -2894.211355989564) * _8013_sq) + -89912.72022039509) * _8013_sq) + -630767.3640497717) * _5617_x);
			_7213_temp=static_cast<jule::F64>(jule::div(_7213_temp,((((_8013_sq + -173.6789535582337) * _8013_sq) + 15215.17378790019) * _8013_sq) + -630767.3640497717));
		}
		goto _match_end_4377111792;
		_case_end_4377111888:;
		_match_end_4377111792:;
	}
	if (_6613_sign) {
		_7213_temp=static_cast<jule::F64>((-(_7213_temp)));
	}
	return _7213_temp;
}



inline jule::F64 _204d8b747_cosh(jule::F64 _9717_x) {
	_9717_x=static_cast<jule::F64>(_204c18409_abs(_9717_x));
	if (_9717_x > 21LL) {
		return static_cast<jule::F64>(_204ec2e11_exp(_9717_x) * 0.5);
	}
	jule::F64 _1029_ex = _204ec2e11_exp(_9717_x);
	return static_cast<jule::F64>((_1029_ex + jule::div(1LL,_1029_ex)) * 0.5);
}



inline std::tuple<jule::F64,jule::Int> _204da66b8_lgamma(jule::F64 _20519_x) {
	jule::F64 _20529_lgamma = jule::F64();
	jule::Int _20542_sign = jule::Int();
	
	
	
	
	
	
	
	_20542_sign=1LL;
	{
		if (!((_204ae433a_is_nan(_20519_x)))) { goto _case_end_4377135424; }
		_case_begin_4377135424:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4377135248;
		_case_end_4377135424:;
		if (!((_204ae433a_is_inf(_20519_x,0LL)))) { goto _case_end_4377135632; }
		_case_begin_4377135632:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4377135248;
		_case_end_4377135632:;
		if (!((_20519_x == 0LL))) { goto _case_end_4377135760; }
		_case_begin_4377135760:;
		{
			_20529_lgamma=static_cast<jule::F64>(_204ae433a_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4377135248;
		_case_end_4377135760:;
		_match_end_4377135248:;
	}
	jule::Bool _22813_neg = false;
	if (_20519_x < 0LL) {
		_20519_x=static_cast<jule::F64>((-(_20519_x)));
		_22813_neg=true;
	}
	if (_20519_x < 0.000000000000000000000847033) {
		if (_22813_neg) {
			_20542_sign=-1LL;
		}
		_20529_lgamma=static_cast<jule::F64>((-(_204b436ca_log(_20519_x))));
		return std::make_tuple(_20529_lgamma,_20542_sign);
	}
	jule::F64 _24113_nadj = 0LL;
	if (_22813_neg) {
		if (_20519_x >= 4503599627370496LL) {
			_20529_lgamma=static_cast<jule::F64>(_204ae433a_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		jule::F64 _24713_t = _204da66b8_sin_pi(_20519_x);
		if (_24713_t == 0LL) {
			_20529_lgamma=static_cast<jule::F64>(_204ae433a_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		_24113_nadj=static_cast<jule::F64>(_204b436ca_log(static_cast<jule::F64>(jule::div(3.141592653589793,_204c18409_abs(static_cast<jule::F64>(_24713_t * _20519_x))))));
		if (_24713_t < 0LL) {
			_20542_sign=-1LL;
		}
	}
	{
		if (!((_20519_x == 1LL) || (_20519_x == 2LL))) { goto _case_end_4377151472; }
		_case_begin_4377151472:;
		{
			_20529_lgamma=0LL;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4377152064;
		_case_end_4377151472:;
		if (!((_20519_x < 2LL))) { goto _case_end_4377153696; }
		_case_begin_4377153696:;
		{
			jule::F64 _26317_y = 0LL;
			jule::Int _26417_i = 0LL;
			if (_20519_x <= 0.9) {
				_20529_lgamma=static_cast<jule::F64>((-(_204b436ca_log(_20519_x))));
				{
					if (!((_20519_x >= 0.7316321449683623))) { goto _case_end_4377160496; }
					_case_begin_4377160496:;
					{
						_26317_y=static_cast<jule::F64>(1LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4377158688;
					_case_end_4377160496:;
					if (!((_20519_x >= 0.19163214496836223))) { goto _case_end_4377161472; }
					_case_begin_4377161472:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 0.46163214496836225);
						_26417_i=1LL;
					}
					goto _match_end_4377158688;
					_case_end_4377161472:;
					_case_begin_4377159664:;
					{
						_26317_y=_20519_x;
						_26417_i=2LL;
					}
					goto _match_end_4377158688;
					_case_end_4377159664:;
					_match_end_4377158688:;
				}
			} else {
				_20529_lgamma=0LL;
				{
					if (!((_20519_x >= 1.7316321449683623))) { goto _case_end_4377166736; }
					_case_begin_4377166736:;
					{
						_26317_y=static_cast<jule::F64>(2LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4377162336;
					_case_end_4377166736:;
					if (!((_20519_x >= 1.1916321449683622))) { goto _case_end_4377165776; }
					_case_begin_4377165776:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1.4616321449683622);
						_26417_i=1LL;
					}
					goto _match_end_4377162336;
					_case_end_4377165776:;
					_case_begin_4377163792:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1LL);
						_26417_i=2LL;
					}
					goto _match_end_4377162336;
					_case_end_4377163792:;
					_match_end_4377162336:;
				}
			}
			{
				auto _match_expr{ _26417_i };
				if (!((0LL) == _match_expr)) { goto _case_end_4377159776; }
				_case_begin_4377159776:;
				{
					jule::F64 _29417_z = _26317_y * _26317_y;
					jule::F64 _29517_p1 = _204da66b8__LGAM_A[0LL] + (_29417_z * (_204da66b8__LGAM_A[2LL] + (_29417_z * (_204da66b8__LGAM_A[4LL] + (_29417_z * (_204da66b8__LGAM_A[6LL] + (_29417_z * (_204da66b8__LGAM_A[8LL] + (_29417_z * _204da66b8__LGAM_A[10LL])))))))));
					jule::F64 _29617_p2 = _29417_z * (_204da66b8__LGAM_A[1LL] + (_29417_z * ((+(_204da66b8__LGAM_A[3LL])) + (_29417_z * (_204da66b8__LGAM_A[5LL] + (_29417_z * (_204da66b8__LGAM_A[7LL] + (_29417_z * (_204da66b8__LGAM_A[9LL] + (_29417_z * _204da66b8__LGAM_A[11LL]))))))))));
					jule::F64 _29717_p = (_26317_y * _29517_p1) + _29617_p2;
					_20529_lgamma+=static_cast<jule::F64>(_29717_p - (0.5 * _26317_y));
				}
				goto _match_end_4377168352;
				_case_end_4377159776:;
				if (!((1LL) == _match_expr)) { goto _case_end_4377164960; }
				_case_begin_4377164960:;
				{
					jule::F64 _30017_z = _26317_y * _26317_y;
					jule::F64 _30117_w = _30017_z * _26317_y;
					jule::F64 _30217_p1 = _204da66b8__LGAM_T[0LL] + (_30117_w * (_204da66b8__LGAM_T[3LL] + (_30117_w * (_204da66b8__LGAM_T[6LL] + (_30117_w * (_204da66b8__LGAM_T[9LL] + (_30117_w * _204da66b8__LGAM_T[12LL])))))));
					jule::F64 _30317_p2 = _204da66b8__LGAM_T[1LL] + (_30117_w * (_204da66b8__LGAM_T[4LL] + (_30117_w * (_204da66b8__LGAM_T[7LL] + (_30117_w * (_204da66b8__LGAM_T[10LL] + (_30117_w * _204da66b8__LGAM_T[13LL])))))));
					jule::F64 _30417_p3 = _204da66b8__LGAM_T[2LL] + (_30117_w * (_204da66b8__LGAM_T[5LL] + (_30117_w * (_204da66b8__LGAM_T[8LL] + (_30117_w * (_204da66b8__LGAM_T[11LL] + (_30117_w * _204da66b8__LGAM_T[14LL])))))));
					jule::F64 _30517_p = (_30017_z * _30217_p1) - (-0.000000000000000003638676997039505 - (_30117_w * (_30317_p2 + (_26317_y * _30417_p3))));
					_20529_lgamma+=static_cast<jule::F64>(-0.12148629053584961 + _30517_p);
				}
				goto _match_end_4377168352;
				_case_end_4377164960:;
				if (!((2LL) == _match_expr)) { goto _case_end_4377157888; }
				_case_begin_4377157888:;
				{
					jule::F64 _30817_p1 = _26317_y * (_204da66b8__LGAM_U[0LL] + (_26317_y * (_204da66b8__LGAM_U[1LL] + (_26317_y * (_204da66b8__LGAM_U[2LL] + (_26317_y * (_204da66b8__LGAM_U[3LL] + (_26317_y * (_204da66b8__LGAM_U[4LL] + (_26317_y * _204da66b8__LGAM_U[5LL]))))))))));
					jule::F64 _30917_p2 = 1LL + (_26317_y * (_204da66b8__LGAM_V[1LL] + (_26317_y * (_204da66b8__LGAM_V[2LL] + (_26317_y * (_204da66b8__LGAM_V[3LL] + (_26317_y * (_204da66b8__LGAM_V[4LL] + (_26317_y * _204da66b8__LGAM_V[5LL])))))))));
					_20529_lgamma+=static_cast<jule::F64>((-0.5 * _26317_y) + jule::div(_30817_p1,_30917_p2));
				}
				goto _match_end_4377168352;
				_case_end_4377157888:;
				_match_end_4377168352:;
			}
		}
		goto _match_end_4377152064;
		_case_end_4377153696:;
		if (!((_20519_x < 8LL))) { goto _case_end_4377153808; }
		_case_begin_4377153808:;
		{
			jule::Int _31313_i = static_cast<jule::Int>(_20519_x);
			jule::F64 _31413_y = _20519_x - static_cast<jule::F64>(_31313_i);
			jule::F64 _31513_p = _31413_y * (_204da66b8__LGAM_S[0LL] + (_31413_y * (_204da66b8__LGAM_S[1LL] + (_31413_y * (_204da66b8__LGAM_S[2LL] + (_31413_y * (_204da66b8__LGAM_S[3LL] + (_31413_y * (_204da66b8__LGAM_S[4LL] + (_31413_y * (_204da66b8__LGAM_S[5LL] + (_31413_y * _204da66b8__LGAM_S[6LL]))))))))))));
			jule::F64 _31613_q = 1LL + (_31413_y * (_204da66b8__LGAM_R[1LL] + (_31413_y * (_204da66b8__LGAM_R[2LL] + (_31413_y * (_204da66b8__LGAM_R[3LL] + (_31413_y * (_204da66b8__LGAM_R[4LL] + (_31413_y * (_204da66b8__LGAM_R[5LL] + (_31413_y * _204da66b8__LGAM_R[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>((0.5 * _31413_y) + jule::div(_31513_p,_31613_q));
			jule::F64 _31817_z = 1LL;
			{
				auto _match_expr{ _31313_i };
				if (!((7LL) == _match_expr)) { goto _case_end_4377244608; }
				_case_begin_4377244608:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 6LL);
					goto _case_begin_4377244992;
				}
				goto _match_end_4377236176;
				_case_end_4377244608:;
				if (!((6LL) == _match_expr)) { goto _case_end_4377244992; }
				_case_begin_4377244992:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 5LL);
					goto _case_begin_4377245104;
				}
				goto _match_end_4377236176;
				_case_end_4377244992:;
				if (!((5LL) == _match_expr)) { goto _case_end_4377245104; }
				_case_begin_4377245104:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 4LL);
					goto _case_begin_4377245216;
				}
				goto _match_end_4377236176;
				_case_end_4377245104:;
				if (!((4LL) == _match_expr)) { goto _case_end_4377245216; }
				_case_begin_4377245216:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 3LL);
					goto _case_begin_4377245328;
				}
				goto _match_end_4377236176;
				_case_end_4377245216:;
				if (!((3LL) == _match_expr)) { goto _case_end_4377245328; }
				_case_begin_4377245328:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 2LL);
					_20529_lgamma+=static_cast<jule::F64>(_204b436ca_log(_31817_z));
				}
				goto _match_end_4377236176;
				_case_end_4377245328:;
				_match_end_4377236176:;
			}
		}
		goto _match_end_4377152064;
		_case_end_4377153808:;
		if (!((_20519_x < 288230376151711744LL))) { goto _case_end_4377153920; }
		_case_begin_4377153920:;
		{
			jule::F64 _33713_t = _204b436ca_log(_20519_x);
			jule::F64 _33813_z = jule::div(1LL,_20519_x);
			jule::F64 _33913_y = _33813_z * _33813_z;
			jule::F64 _34013_w = _204da66b8__LGAM_W[0LL] + (_33813_z * (_204da66b8__LGAM_W[1LL] + (_33913_y * (_204da66b8__LGAM_W[2LL] + (_33913_y * (_204da66b8__LGAM_W[3LL] + (_33913_y * (_204da66b8__LGAM_W[4LL] + (_33913_y * (_204da66b8__LGAM_W[5LL] + (_33913_y * _204da66b8__LGAM_W[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>(((_20519_x - 0.5) * (_33713_t - 1LL)) + _34013_w);
		}
		goto _match_end_4377152064;
		_case_end_4377153920:;
		_case_begin_4377150480:;
		{
			_20529_lgamma=static_cast<jule::F64>(_20519_x * (_204b436ca_log(_20519_x) - 1LL));
		}
		goto _match_end_4377152064;
		_case_end_4377150480:;
		_match_end_4377152064:;
	}
	if (_22813_neg) {
		_20529_lgamma=static_cast<jule::F64>(_24113_nadj - _20529_lgamma);
	}
	return std::make_tuple(_20529_lgamma,_20542_sign);
}



inline jule::F64 _204da66b8_sin_pi(jule::F64 _35215_x) {
	
	
	if (_35215_x < 0.25) {
		return static_cast<jule::F64>((-(_204a2e5b6_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)))));
	}
	jule::F64 _36013_z = _204ac0943_floor(_35215_x);
	jule::Int _36113_n = 0LL;
	if (_36013_z != _35215_x) {
		_35215_x=static_cast<jule::F64>(_204a0b120_mod(_35215_x,2LL));
		_36113_n=static_cast<jule::Int>(_35215_x * 4LL);
	} else {
		if (_35215_x >= 9007199254740992LL) {
			_35215_x=0LL;
			_36113_n=0LL;
		} else {
			if (_35215_x < 4503599627370496LL) {
				_36013_z=static_cast<jule::F64>(_35215_x + 4503599627370496LL);
			}
			_36113_n=static_cast<jule::Int>(1LL & _204a244ce_f64_bits(_36013_z));
			_35215_x=static_cast<jule::F64>(_36113_n);
			_36113_n<<=2LL;
		}
	}
	{
		auto _match_expr{ _36113_n };
		if (!((0LL) == _match_expr)) { goto _case_end_4377278864; }
		_case_begin_4377278864:;
		{
			_35215_x=static_cast<jule::F64>(_204a2e5b6_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)));
		}
		goto _match_end_4377277280;
		_case_end_4377278864:;
		if (!((1LL) == _match_expr || (2LL) == _match_expr)) { goto _case_end_4377278976; }
		_case_begin_4377278976:;
		{
			_35215_x=static_cast<jule::F64>(_204a2e5b6_cos(static_cast<jule::F64>(3.141592653589793 * (0.5 - _35215_x))));
		}
		goto _match_end_4377277280;
		_case_end_4377278976:;
		if (!((3LL) == _match_expr || (4LL) == _match_expr)) { goto _case_end_4377274352; }
		_case_begin_4377274352:;
		{
			_35215_x=static_cast<jule::F64>(_204a2e5b6_sin(static_cast<jule::F64>(3.141592653589793 * (1LL - _35215_x))));
		}
		goto _match_end_4377277280;
		_case_end_4377274352:;
		if (!((5LL) == _match_expr || (6LL) == _match_expr)) { goto _case_end_4377274464; }
		_case_begin_4377274464:;
		{
			_35215_x=static_cast<jule::F64>((-(_204a2e5b6_cos(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 1.5))))));
		}
		goto _match_end_4377277280;
		_case_end_4377274464:;
		_case_begin_4377265744:;
		{
			_35215_x=static_cast<jule::F64>(_204a2e5b6_sin(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 2LL))));
		}
		goto _match_end_4377277280;
		_case_end_4377265744:;
		_match_end_4377277280:;
	}
	return static_cast<jule::F64>((-(_35215_x)));
}



inline jule::F64 _204da6ca1_acosh(jule::F64 _7314_x) {
	
	{
		if (!((_7314_x < 1LL) || (_204ae433a_is_nan(_7314_x)))) { goto _case_end_4377286496; }
		_case_begin_4377286496:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4377286304;
		_case_end_4377286496:;
		if (!((_7314_x == 1LL))) { goto _case_end_4377286624; }
		_case_begin_4377286624:;
		{
			return 0LL;
		}
		goto _match_end_4377286304;
		_case_end_4377286624:;
		if (!((_7314_x >= 268435456LL))) { goto _case_end_4377286752; }
		_case_begin_4377286752:;
		{
			return static_cast<jule::F64>(_204b436ca_log(_7314_x) + 0.6931471805599453);
		}
		goto _match_end_4377286304;
		_case_end_4377286752:;
		if (!((_7314_x > 2LL))) { goto _case_end_4377286880; }
		_case_begin_4377286880:;
		{
			return static_cast<jule::F64>(_204b436ca_log(static_cast<jule::F64>((2LL * _7314_x) - jule::div(1LL,_7314_x + _2050b9975_sqrt(static_cast<jule::F64>((_7314_x * _7314_x) - 1LL))))));
		}
		goto _match_end_4377286304;
		_case_end_4377286880:;
		_match_end_4377286304:;
	}
	jule::F64 _869_t = _7314_x - 1LL;
	return static_cast<jule::F64>(_204ee5a5a_log1p(static_cast<jule::F64>(_869_t + _2050b9975_sqrt(static_cast<jule::F64>((2LL * _869_t) + (_869_t * _869_t))))));
}



inline jule::F64 _204e49b79_tanh(jule::F64 _10613_x) {
	
	jule::F64 _10813_z = _204c18409_abs(_10613_x);
	{
		if (!((_10813_z > 44.014845965556525))) { goto _case_end_4377309136; }
		_case_begin_4377309136:;
		{
			if (_10613_x < 0LL) {
				return -1LL;
			}
			return 1LL;
		}
		goto _match_end_4377297968;
		_case_end_4377309136:;
		if (!((_10813_z >= 0.625))) { goto _case_end_4377301072; }
		_case_begin_4377301072:;
		{
			jule::F64 _11613_s = _204ec2e11_exp(static_cast<jule::F64>(2LL * _10813_z));
			_10813_z=static_cast<jule::F64>(1LL - jule::div(2LL,_11613_s + 1LL));
			if (_10613_x < 0LL) {
				_10813_z=static_cast<jule::F64>((-(_10813_z)));
			}
		}
		goto _match_end_4377297968;
		_case_end_4377301072:;
		_case_begin_4377298256:;
		{
			if (_10613_x == 0LL) {
				return _10613_x;
			}
			jule::F64 _12513_s = _10613_x * _10613_x;
			_10813_z=static_cast<jule::F64>(_10613_x + jule::div((_10613_x * _12513_s) * ((((_204e49b79_TANH_P[0LL] * _12513_s) + _204e49b79_TANH_P[1LL]) * _12513_s) + _204e49b79_TANH_P[2LL]),((((_12513_s + _204e49b79_TANH_Q[0LL]) * _12513_s) + _204e49b79_TANH_Q[1LL]) * _12513_s) + _204e49b79_TANH_Q[2LL]));
		}
		goto _match_end_4377297968;
		_case_end_4377298256:;
		_match_end_4377297968:;
	}
	return _10813_z;
}



inline jule::F64 _204dc3a04_cbrt(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	
	if (((_5617_x == 0LL) || _204ae433a_is_nan(_5617_x)) || _204ae433a_is_inf(_5617_x,0LL)) {
		return _5617_x;
	}
	jule::Bool _7113_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_7113_sign=true;
	}
	jule::F64 _7813_t = _204a244ce_f64_from_bits(static_cast<jule::U64>(jule::div(_204a244ce_f64_bits(_5617_x),3LL) + 3071306043645493248LL));
	if (_5617_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_7813_t=static_cast<jule::F64>(18014398509481984LL);
		_7813_t*=_5617_x;
		_7813_t=static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>(jule::div(_204a244ce_f64_bits(_7813_t),3LL) + 2990241250352824320LL)));
	}
	jule::F64 _8713_r = jule::div(_7813_t * _7813_t,_5617_x);
	jule::F64 _8813_s = 0.5428571428571428 + (_8713_r * _7813_t);
	_7813_t*=static_cast<jule::F64>(0.35714285714285715 + jule::div(1.6071428571428572,(_8813_s + 1.4142857142857144) + jule::div(-0.7053061224489796,_8813_s)));
	_7813_t=static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>((_204a244ce_f64_bits(_7813_t) & -1073741824LL) + 1073741824LL)));
	_8813_s=static_cast<jule::F64>(_7813_t * _7813_t);
	_8713_r=static_cast<jule::F64>(jule::div(_5617_x,_8813_s));
	jule::F64 _979_w = _7813_t + _7813_t;
	_8713_r=static_cast<jule::F64>(jule::div(_8713_r - _7813_t,_979_w + _8713_r));
	_7813_t=static_cast<jule::F64>(_7813_t + (_7813_t * _8713_r));
	if (_7113_sign) {
		_7813_t=static_cast<jule::F64>((-(_7813_t)));
	}
	return _7813_t;
}



inline jule::F64 _204e55a42_pow(jule::F64 _6412_x,jule::F64 _6420_y) {
	{
		if (!((_6420_y == 0LL) || (_6412_x == 1LL))) { goto _case_end_4377342528; }
		_case_begin_4377342528:;
		{
			return 1LL;
		}
		goto _match_end_4377342208;
		_case_end_4377342528:;
		if (!((_6420_y == 1LL))) { goto _case_end_4377342656; }
		_case_begin_4377342656:;
		{
			return _6412_x;
		}
		goto _match_end_4377342208;
		_case_end_4377342656:;
		if (!((_204ae433a_is_nan(_6412_x)) || (_204ae433a_is_nan(_6420_y)))) { goto _case_end_4377342784; }
		_case_begin_4377342784:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4377342208;
		_case_end_4377342784:;
		if (!((_6412_x == 0LL))) { goto _case_end_4377342912; }
		_case_begin_4377342912:;
		{
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4377345312; }
				_case_begin_4377345312:;
				{
					if (_204e55a42_is_odd_int(_6420_y)) {
						return static_cast<jule::F64>(_204a923d7_copysign(static_cast<jule::F64>(_204ae433a_inf(1LL)),_6412_x));
					}
					return static_cast<jule::F64>(_204ae433a_inf(1LL));
				}
				goto _match_end_4377346768;
				_case_end_4377345312:;
				if (!((_6420_y > 0LL))) { goto _case_end_4377345440; }
				_case_begin_4377345440:;
				{
					if (_204e55a42_is_odd_int(_6420_y)) {
						return _6412_x;
					}
					return 0LL;
				}
				goto _match_end_4377346768;
				_case_end_4377345440:;
				_match_end_4377346768:;
			}
		}
		goto _match_end_4377342208;
		_case_end_4377342912:;
		if (!((_204ae433a_is_inf(_6420_y,0LL)))) { goto _case_end_4377343040; }
		_case_begin_4377343040:;
		{
			{
				if (!((_6412_x == -1LL))) { goto _case_end_4377355104; }
				_case_begin_4377355104:;
				{
					return 1LL;
				}
				goto _match_end_4377347824;
				_case_end_4377355104:;
				if (!(((_204c18409_abs(_6412_x) < 1LL) == _204ae433a_is_inf(_6420_y,1LL)))) { goto _case_end_4377354848; }
				_case_begin_4377354848:;
				{
					return 0LL;
				}
				goto _match_end_4377347824;
				_case_end_4377354848:;
				_case_begin_4377352224:;
				{
					return static_cast<jule::F64>(_204ae433a_inf(1LL));
				}
				goto _match_end_4377347824;
				_case_end_4377352224:;
				_match_end_4377347824:;
			}
		}
		goto _match_end_4377342208;
		_case_end_4377343040:;
		if (!((_204ae433a_is_inf(_6412_x,0LL)))) { goto _case_end_4377343168; }
		_case_begin_4377343168:;
		{
			if (_204ae433a_is_inf(_6412_x,-1LL)) {
				return static_cast<jule::F64>(_204e55a42_pow(static_cast<jule::F64>(jule::div(1LL,_6412_x)),static_cast<jule::F64>((-(_6420_y)))));
			}
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4377359360; }
				_case_begin_4377359360:;
				{
					return 0LL;
				}
				goto _match_end_4377359216;
				_case_end_4377359360:;
				if (!((_6420_y > 0LL))) { goto _case_end_4377359472; }
				_case_begin_4377359472:;
				{
					return static_cast<jule::F64>(_204ae433a_inf(1LL));
				}
				goto _match_end_4377359216;
				_case_end_4377359472:;
				_match_end_4377359216:;
			}
		}
		goto _match_end_4377342208;
		_case_end_4377343168:;
		if (!((_6420_y == 0.5))) { goto _case_end_4377343296; }
		_case_begin_4377343296:;
		{
			return static_cast<jule::F64>(_2050b9975_sqrt(_6412_x));
		}
		goto _match_end_4377342208;
		_case_end_4377343296:;
		if (!((_6420_y == -0.5))) { goto _case_end_4377343424; }
		_case_begin_4377343424:;
		{
			return static_cast<jule::F64>(jule::div(1LL,_2050b9975_sqrt(_6412_x)));
		}
		goto _match_end_4377342208;
		_case_end_4377343424:;
		_match_end_4377342208:;
	}
	jule::F64 _10814_yi;
	jule::F64 _10822_yf;
	std::tie(_10814_yi,_10822_yf) = _204c8b845_modf(static_cast<jule::F64>(_204c18409_abs(_6420_y)));
	if ((_10822_yf != 0LL) && (_6412_x < 0LL)) {
		return static_cast<jule::F64>(_204ae433a_nan());
	}
	if (_10814_yi >= 9223372036854775808LLU) {
		{
			if (!((_6412_x == -1LL))) { goto _case_end_4377369072; }
			_case_begin_4377369072:;
			{
				return 1LL;
			}
			goto _match_end_4377364560;
			_case_end_4377369072:;
			if (!(((_204c18409_abs(_6412_x) < 1LL) == (_6420_y > 0LL)))) { goto _case_end_4377368816; }
			_case_begin_4377368816:;
			{
				return 0LL;
			}
			goto _match_end_4377364560;
			_case_end_4377368816:;
			_case_begin_4377366816:;
			{
				return static_cast<jule::F64>(_204ae433a_inf(1LL));
			}
			goto _match_end_4377364560;
			_case_end_4377366816:;
			_match_end_4377364560:;
		}
	}
	jule::F64 _12613_a1 = 1LL;
	jule::Int _12713_ae = 0LL;
	if (_10822_yf != 0LL) {
		if (_10822_yf > 0.5) {
			(_10822_yf)--;
			(_10814_yi)++;
		}
		_12613_a1=static_cast<jule::F64>(_204ec2e11_exp(static_cast<jule::F64>(_10822_yf * _204b436ca_log(_6412_x))));
	}
	jule::F64 _14214_x1;
	jule::Int _14222_xe;
	std::tie(_14214_x1,_14222_xe) = _204a91b01_frexp(_6412_x);
	jule::I64 _14313_i = static_cast<jule::I64>(_10814_yi);
	_iter_begin_4377376416:;
	if (!(_14313_i != 0LL)) { goto _iter_end_4377376416; }
	{
		if ((_14222_xe < -4096LL) || (4096LL < _14222_xe)) {
			_12713_ae+=_14222_xe;
			goto _iter_end_4377376416;
		}
		if ((_14313_i & 1LL) == 1LL) {
			_12613_a1*=_14214_x1;
			_12713_ae+=_14222_xe;
		}
		_14214_x1*=_14214_x1;
		_14222_xe<<=1LL;
		if (_14214_x1 < 0.5) {
			_14214_x1+=_14214_x1;
			(_14222_xe)--;
		}
	}
	_iter_next_4377376416:;
	_14313_i>>=1LL;
	goto _iter_begin_4377376416;
	_iter_end_4377376416:;
	if (_6420_y < 0LL) {
		_12613_a1=static_cast<jule::F64>(jule::div(1LL,_12613_a1));
		_12713_ae=static_cast<jule::Int>((-(_12713_ae)));
	}
	return static_cast<jule::F64>(_204d88447_ldexp(_12613_a1,_12713_ae));
}



inline jule::Bool _204e55a42_is_odd_int(jule::F64 _17615_x) {
	jule::F64 _17710_xi;
	jule::F64 _17714_xf;
	std::tie(_17710_xi,_17714_xf) = _204c8b845_modf(_17615_x);
	return (_17714_xf == 0LL) && ((static_cast<jule::I64>(_17710_xi) & 1LL) == 1LL);
}



inline jule::F64 _204ec2e11_exp(jule::F64 _12212_x) {
	
	
	
	
	
	
	{
		if (!((_204ae433a_is_nan(_12212_x)) || (_204ae433a_is_inf(_12212_x,1LL)))) { goto _case_end_4377394608; }
		_case_begin_4377394608:;
		{
			return _12212_x;
		}
		goto _match_end_4377393712;
		_case_end_4377394608:;
		if (!((_204ae433a_is_inf(_12212_x,-1LL)))) { goto _case_end_4377394720; }
		_case_begin_4377394720:;
		{
			return 0LL;
		}
		goto _match_end_4377393712;
		_case_end_4377394720:;
		if (!((_12212_x > 709.782712893384))) { goto _case_end_4377394832; }
		_case_begin_4377394832:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(1LL));
		}
		goto _match_end_4377393712;
		_case_end_4377394832:;
		if (!((_12212_x < -745.1332191019411))) { goto _case_end_4377394944; }
		_case_begin_4377394944:;
		{
			return 0LL;
		}
		goto _match_end_4377393712;
		_case_end_4377394944:;
		if (!(((-0.000000003725290298461914 < _12212_x) && (_12212_x < 0.000000003725290298461914)))) { goto _case_end_4377395056; }
		_case_begin_4377395056:;
		{
			return static_cast<jule::F64>(1LL + _12212_x);
		}
		goto _match_end_4377393712;
		_case_end_4377395056:;
		_match_end_4377393712:;
	}
	jule::Int _14613_k = 0LL;
	{
		if (!((_12212_x < 0LL))) { goto _case_end_4377401456; }
		_case_begin_4377401456:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) - 0.5);
		}
		goto _match_end_4377398544;
		_case_end_4377401456:;
		if (!((_12212_x > 0LL))) { goto _case_end_4377401568; }
		_case_begin_4377401568:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) + 0.5);
		}
		goto _match_end_4377398544;
		_case_end_4377401568:;
		_match_end_4377398544:;
	}
	jule::F64 _1519_hi = _12212_x - (static_cast<jule::F64>(_14613_k) * 0.6931471803691238);
	jule::F64 _1529_lo = static_cast<jule::F64>(_14613_k) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_204ec2e11_expmulti(_1519_hi,_1529_lo,_14613_k));
}



inline jule::F64 _204ec2e11_exp2(jule::F64 _16013_x) {
	
	
	
	
	{
		if (!((_204ae433a_is_nan(_16013_x)) || (_204ae433a_is_inf(_16013_x,1LL)))) { goto _case_end_4377413264; }
		_case_begin_4377413264:;
		{
			return _16013_x;
		}
		goto _match_end_4377413056;
		_case_end_4377413264:;
		if (!((_204ae433a_is_inf(_16013_x,-1LL)))) { goto _case_end_4377413392; }
		_case_begin_4377413392:;
		{
			return 0LL;
		}
		goto _match_end_4377413056;
		_case_end_4377413392:;
		if (!((_16013_x > 1023.9999999999999))) { goto _case_end_4377413520; }
		_case_begin_4377413520:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(1LL));
		}
		goto _match_end_4377413056;
		_case_end_4377413520:;
		if (!((_16013_x < -1074LL))) { goto _case_end_4377413648; }
		_case_begin_4377413648:;
		{
			return 0LL;
		}
		goto _match_end_4377413056;
		_case_end_4377413648:;
		_match_end_4377413056:;
	}
	jule::Int _18113_k = 0LL;
	{
		if (!((_16013_x > 0LL))) { goto _case_end_4377419072; }
		_case_begin_4377419072:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x + 0.5);
		}
		goto _match_end_4377418320;
		_case_end_4377419072:;
		if (!((_16013_x < 0LL))) { goto _case_end_4377419184; }
		_case_begin_4377419184:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x - 0.5);
		}
		goto _match_end_4377418320;
		_case_end_4377419184:;
		_match_end_4377418320:;
	}
	jule::F64 _1869_t = _16013_x - static_cast<jule::F64>(_18113_k);
	jule::F64 _1879_hi = _1869_t * 0.6931471803691238;
	jule::F64 _1889_lo = (-(_1869_t)) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_204ec2e11_expmulti(_1879_hi,_1889_lo,_18113_k));
}



inline jule::F64 _204ec2e11_expmulti(jule::F64 _19513_hi,jule::F64 _19522_lo,jule::Int _19531_k) {
	
	
	
	
	
	jule::F64 _2029_r = _19513_hi - _19522_lo;
	jule::F64 _2039_t = _2029_r * _2029_r;
	jule::F64 _2049_c = _2029_r - (_2039_t * (0.16666666666666666 + (_2039_t * (-0.0027777777777015593 + (_2039_t * (0.00006613756321437934 + (_2039_t * (-0.0000016533902205465252 + (_2039_t * 0.000000041381367970572385)))))))));
	jule::F64 _2059_y = 1LL - ((_19522_lo - jule::div(_2029_r * _2049_c,2LL - _2049_c)) - _19513_hi);
	return static_cast<jule::F64>(_204d88447_ldexp(_2059_y,_19531_k));
}



inline jule::F64 _204ee5a5a_log1p(jule::F64 _12614_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_12614_x < -1LL) || (_204ae433a_is_nan(_12614_x)))) { goto _case_end_4377448336; }
		_case_begin_4377448336:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4377447264;
		_case_end_4377448336:;
		if (!((_12614_x == -1LL))) { goto _case_end_4377456144; }
		_case_begin_4377456144:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(-1LL));
		}
		goto _match_end_4377447264;
		_case_end_4377456144:;
		if (!((_204ae433a_is_inf(_12614_x,1LL)))) { goto _case_end_4377456256; }
		_case_begin_4377456256:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(1LL));
		}
		goto _match_end_4377447264;
		_case_end_4377456256:;
		_match_end_4377447264:;
	}
	jule::F64 _1529_absx = _204c18409_abs(_12614_x);
	jule::F64 _15413_f = 0LL;
	jule::U64 _15513_iu = 0LL;
	jule::Int _15613_k = 1LL;
	if (_1529_absx < 0.41421356237309503) {
		if (_1529_absx < 0.000000001862645149230957) {
			if (_1529_absx < 0.00000000000000005551115123125783) {
				return _12614_x;
			}
			return static_cast<jule::F64>(_12614_x - ((_12614_x * _12614_x) * 0.5));
		}
		if (_12614_x > -0.2928932188134525) {
			_15613_k=0LL;
			_15413_f=_12614_x;
			_15513_iu=1LL;
		}
	}
	jule::F64 _17113_c = 0LL;
	if (_15613_k != 0LL) {
		jule::F64 _17317_u = 0LL;
		if (_1529_absx < 9007199254740992LL) {
			_17317_u=static_cast<jule::F64>(1LL + _12614_x);
			_15513_iu=static_cast<jule::U64>(_204a244ce_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			if (_15613_k > 0LL) {
				_17113_c=static_cast<jule::F64>(1LL - (_17317_u - _12614_x));
			} else {
				_17113_c=static_cast<jule::F64>(_12614_x - (_17317_u - 1LL));
			}
			_17113_c = jule::div(_17113_c,_17317_u);
		} else {
			_17317_u=_12614_x;
			_15513_iu=static_cast<jule::U64>(_204a244ce_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			_17113_c=0LL;
		}
		_15513_iu&=4503599627370495LL;
		if (_15513_iu < 1865452045155277LL) {
			_17317_u=static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4607182418800017408LL)));
		} else {
			(_15613_k)++;
			_17317_u=static_cast<jule::F64>(_204a244ce_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4602678819172646912LL)));
			_15513_iu=static_cast<jule::U64>((4503599627370496LL - _15513_iu) >> 2LL);
		}
		_15413_f=static_cast<jule::F64>(_17317_u - 1LL);
	}
	jule::F64 _2029_hfsq = (0.5 * _15413_f) * _15413_f;
	jule::F64 _20313_s = 0LL;
	jule::F64 _20413_R = 0LL;
	jule::F64 _20513_z = 0LL;
	if (_15513_iu == 0LL) {
		if (_15413_f == 0LL) {
			if (_15613_k == 0LL) {
				return 0LL;
			}
			_17113_c+=static_cast<jule::F64>(static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877);
			return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) + _17113_c);
		}
		_20413_R=static_cast<jule::F64>(_2029_hfsq * (1LL - (0.6666666666666666 * _15413_f)));
		if (_15613_k == 0LL) {
			return static_cast<jule::F64>(_15413_f - _20413_R);
		}
		return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_20413_R - ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c)) - _15413_f));
	}
	_20313_s=static_cast<jule::F64>(jule::div(_15413_f,2LL + _15413_f));
	_20513_z=static_cast<jule::F64>(_20313_s * _20313_s);
	_20413_R=static_cast<jule::F64>(_20513_z * (0.6666666666666735 + (_20513_z * (0.3999999999940942 + (_20513_z * (0.2857142874366239 + (_20513_z * (0.22222198432149784 + (_20513_z * (0.1818357216161805 + (_20513_z * (0.15313837699209373 + (_20513_z * 0.14798198605116586)))))))))))));
	if (_15613_k == 0LL) {
		return static_cast<jule::F64>(_15413_f - (_2029_hfsq - (_20313_s * (_2029_hfsq + _20413_R))));
	}
	return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_2029_hfsq - ((_20313_s * (_2029_hfsq + _20413_R)) + ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c))) - _15413_f));
}



inline std::tuple<jule::F64,jule::F64> _205003eec_stirling(jule::F64 _13113_x) {
	if (_13113_x > 200LL) {
		return std::make_tuple(static_cast<jule::F64>(_204ae433a_inf(1LL)),1LL);
	}
	
	
	jule::F64 _13713_w = jule::div(1LL,_13113_x);
	_13713_w=static_cast<jule::F64>(1LL + (_13713_w * ((((((((_205003eec__GAM_S[0LL] * _13713_w) + _205003eec__GAM_S[1LL]) * _13713_w) + _205003eec__GAM_S[2LL]) * _13713_w) + _205003eec__GAM_S[3LL]) * _13713_w) + _205003eec__GAM_S[4LL])));
	jule::F64 _13913_y1 = _204ec2e11_exp(_13113_x);
	jule::F64 _14013_y2 = 1LL;
	if (_13113_x > 143.01608) {
		jule::F64 _14213_v = _204e55a42_pow(_13113_x,static_cast<jule::F64>((0.5 * _13113_x) - 0.25));
		std::tie(_13913_y1,_14013_y2) = std::make_tuple(_14213_v,static_cast<jule::F64>(jule::div(_14213_v,_13913_y1)));
	} else {
		_13913_y1=static_cast<jule::F64>(jule::div(_204e55a42_pow(_13113_x,static_cast<jule::F64>(_13113_x - 0.5)),_13913_y1));
	}
	return std::make_tuple(_13913_y1,static_cast<jule::F64>((2.5066282746310007 * _13713_w) * _14013_y2));
}



inline jule::F64 _205003eec_gamma(jule::F64 _15918_x) {
	
	{
		if (!((_205003eec_is_neg_int(_15918_x)) || (_204ae433a_is_inf(_15918_x,-1LL)) || (_204ae433a_is_nan(_15918_x)))) { goto _case_end_4377525392; }
		_case_begin_4377525392:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4377525200;
		_case_end_4377525392:;
		if (!((_204ae433a_is_inf(_15918_x,1LL)))) { goto _case_end_4377525520; }
		_case_begin_4377525520:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(1LL));
		}
		goto _match_end_4377525200;
		_case_end_4377525520:;
		if (!((_15918_x == 0LL))) { goto _case_end_4377525648; }
		_case_begin_4377525648:;
		{
			if (_204ce6b9c_signbit(_15918_x)) {
				return static_cast<jule::F64>(_204ae433a_inf(-1LL));
			}
			return static_cast<jule::F64>(_204ae433a_inf(1LL));
		}
		goto _match_end_4377525200;
		_case_end_4377525648:;
		_match_end_4377525200:;
	}
	jule::F64 _17313_q = _204c18409_abs(_15918_x);
	jule::F64 _17413_p = _204ac0943_floor(_17313_q);
	if (_17313_q > 33LL) {
		if (_15918_x >= 0LL) {
			jule::F64 _17718_y1;
			jule::F64 _17722_y2;
			std::tie(_17718_y1,_17722_y2) = _205003eec_stirling(_15918_x);
			return static_cast<jule::F64>(_17718_y1 * _17722_y2);
		}
		jule::Int _18317_signgam = 1LL;
		jule::I64 _18413_ip = static_cast<jule::I64>(_17413_p);
		if ((_18413_ip & 1LL) == 0LL) {
			_18317_signgam=-1LL;
		}
		jule::F64 _18817_z = _17313_q - _17413_p;
		if (_18817_z > 0.5) {
			_17413_p=static_cast<jule::F64>(_17413_p + 1LL);
			_18817_z=static_cast<jule::F64>(_17313_q - _17413_p);
		}
		_18817_z=static_cast<jule::F64>(_17313_q * _204a2e5b6_sin(static_cast<jule::F64>(3.141592653589793 * _18817_z)));
		if (_18817_z == 0LL) {
			return static_cast<jule::F64>(_204ae433a_inf(_18317_signgam));
		}
		jule::F64 _19714_sq1;
		jule::F64 _19719_sq2;
		std::tie(_19714_sq1,_19719_sq2) = _205003eec_stirling(_17313_q);
		jule::F64 _19813_absz = _204c18409_abs(_18817_z);
		jule::F64 _19913_d = (_19813_absz * _19714_sq1) * _19719_sq2;
		if (_204ae433a_is_inf(_19913_d,0LL)) {
			_18817_z=static_cast<jule::F64>(jule::div(jule::div(jule::div(3.141592653589793,_19813_absz),_19714_sq1),_19719_sq2));
		} else {
			_18817_z=static_cast<jule::F64>(jule::div(3.141592653589793,_19913_d));
		}
		return static_cast<jule::F64>(static_cast<jule::F64>(_18317_signgam) * _18817_z);
	}
	jule::F64 _20913_z = 1LL;
	_iter_begin_4377551840:;
	if (!(_15918_x >= 3LL)) { goto _iter_end_4377551840; }
	{
		_15918_x=static_cast<jule::F64>(_15918_x - 1LL);
		_20913_z=static_cast<jule::F64>(_20913_z * _15918_x);
	}
	_iter_next_4377551840:;
	goto _iter_begin_4377551840;
	_iter_end_4377551840:;
	_iter_begin_4377554160:;
	if (!(_15918_x < 0LL)) { goto _iter_end_4377554160; }
	{
		if (_15918_x > -0.000000001) {
			goto _julec_label_small;
		}
		_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
		_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
	}
	_iter_next_4377554160:;
	goto _iter_begin_4377554160;
	_iter_end_4377554160:;
	_iter_begin_4377556304:;
	if (!(_15918_x < 2LL)) { goto _iter_end_4377556304; }
	{
		if (_15918_x < 0.000000001) {
			goto _julec_label_small;
		}
		_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
		_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
	}
	_iter_next_4377556304:;
	goto _iter_begin_4377556304;
	_iter_end_4377556304:;
	if (_15918_x == 2LL) {
		return _20913_z;
	}
	_15918_x=static_cast<jule::F64>(_15918_x - 2LL);
	_17413_p=static_cast<jule::F64>((((((((((((_15918_x * _205003eec__GAM_P[0LL]) + _205003eec__GAM_P[1LL]) * _15918_x) + _205003eec__GAM_P[2LL]) * _15918_x) + _205003eec__GAM_P[3LL]) * _15918_x) + _205003eec__GAM_P[4LL]) * _15918_x) + _205003eec__GAM_P[5LL]) * _15918_x) + _205003eec__GAM_P[6LL]);
	_17313_q=static_cast<jule::F64>((((((((((((((_15918_x * _205003eec__GAM_Q[0LL]) + _205003eec__GAM_Q[1LL]) * _15918_x) + _205003eec__GAM_Q[2LL]) * _15918_x) + _205003eec__GAM_Q[3LL]) * _15918_x) + _205003eec__GAM_Q[4LL]) * _15918_x) + _205003eec__GAM_Q[5LL]) * _15918_x) + _205003eec__GAM_Q[6LL]) * _15918_x) + _205003eec__GAM_Q[7LL]);
	return static_cast<jule::F64>(jule::div(_20913_z * _17413_p,_17313_q));
	_julec_label_small:;
	if (_15918_x == 0LL) {
		return static_cast<jule::F64>(_204ae433a_inf(1LL));
	}
	return static_cast<jule::F64>(jule::div(_20913_z,(1LL + (0.5772156649015329 * _15918_x)) * _15918_x));
}



inline jule::Bool _205003eec_is_neg_int(jule::F64 _24515_x) {
	if (_24515_x < 0LL) {
		jule::F64 _24717_xf;
		std::tie(std::ignore,_24717_xf) = _204c8b845_modf(_24515_x);
		return _24717_xf == 0LL;
	}
	return false;
}



inline jule::F64 _205033db7_erfinv(jule::F64 _10519_x) {
	if ((_204ae433a_is_nan(_10519_x) || (_10519_x <= -1LL)) || (_10519_x >= 1LL)) {
		if ((_10519_x == -1LL) || (_10519_x == 1LL)) {
			return static_cast<jule::F64>(_204ae433a_inf(static_cast<jule::Int>(_10519_x)));
		}
		return static_cast<jule::F64>(_204ae433a_nan());
	}
	jule::Bool _11413_sign = false;
	if (_10519_x < 0LL) {
		_10519_x=static_cast<jule::F64>((-(_10519_x)));
		_11413_sign=true;
	}
	jule::F64 _12013_ans = 0LL;
	if (_10519_x <= 0.85) {
		jule::F64 _12213_r = 0.180625 - ((0.25 * _10519_x) * _10519_x);
		jule::F64 _12313_z1 = (((((((((((((887.0940696254552 * _12213_r) + 11819.493347062295) * _12213_r) + 23782.041382114385) * _12213_r) + 16235.862515167575) * _12213_r) + 4854.886889384388) * _12213_r) + 697.062665343896) * _12213_r) + 47.07268811238398) * _12213_r) + 1.1975323115670913;
		jule::F64 _12413_z2 = (((((((((((((5226.495278852854 * _12213_r) + 28729.085735721943) * _12213_r) + 39307.89580009271) * _12213_r) + 21213.794301586597) * _12213_r) + 5394.196021424751) * _12213_r) + 687.1870074920579) * _12213_r) + 42.31333070160091) * _12213_r) + 1LL;
		_12013_ans=static_cast<jule::F64>(jule::div(_10519_x * _12313_z1,_12413_z2));
	} else {
		jule::F64 _12717_z1 = 0LL;
		jule::F64 _12817_z2 = 0LL;
		jule::F64 _12917_r = _2050b9975_sqrt(static_cast<jule::F64>(0.6931471805599453 - _204b436ca_log(static_cast<jule::F64>(1LL - _10519_x))));
		if (_12917_r <= 5LL) {
			_12917_r-=1.6;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.0007745450142783414 * _12917_r) + 0.022723844989269184) * _12917_r) + 0.2417807251774506) * _12917_r) + 1.2704582524523684) * _12917_r) + 3.6478483247632045) * _12917_r) + 5.769497221460691) * _12917_r) + 4.630337846156546) * _12917_r) + 1.4234371107496835);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000014859850019840355 * _12917_r) + 0.0007744145906515771) * _12917_r) + 0.021494160384252878) * _12917_r) + 0.2094506521051275) * _12917_r) + 0.9754783200178743) * _12917_r) + 2.3707661626024534) * _12917_r) + 2.9036514445419948) * _12917_r) + 1.4142135623730951);
		} else {
			_12917_r-=5LL;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.00000020103343992922881 * _12917_r) + 0.000027115555687434876) * _12917_r) + 0.0012426609473880784) * _12917_r) + 0.026532189526576124) * _12917_r) + 0.29656057182850487) * _12917_r) + 1.7848265399172913) * _12917_r) + 5.463784911164114) * _12917_r) + 6.657904643501103);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000000000028910246058729655 * _12917_r) + 0.0000002010321207683943) * _12917_r) + 0.000026110884050805935) * _12917_r) + 0.0011128009970788597) * _12917_r) + 0.02103693768272069) * _12917_r) + 0.19364809469506591) * _12917_r) + 0.8482908416595164) * _12917_r) + 1.4142135623730951);
		}
		_12013_ans=static_cast<jule::F64>(jule::div(_12717_z1,_12817_z2));
	}
	if (_11413_sign) {
		return static_cast<jule::F64>((-(_12013_ans)));
	}
	return _12013_ans;
}



inline jule::F64 _205033db7_erfcinv(jule::F64 _15516_x) {
	return static_cast<jule::F64>(_205033db7_erfinv(static_cast<jule::F64>(1LL - _15516_x)));
}



inline jule::F64 _2050b9744_erf(jule::F64 _21716_x) {
	
	
	{
		if (!((_204ae433a_is_nan(_21716_x)))) { goto _case_end_4377631616; }
		_case_begin_4377631616:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4377631344;
		_case_end_4377631616:;
		if (!((_204ae433a_is_inf(_21716_x,1LL)))) { goto _case_end_4377631728; }
		_case_begin_4377631728:;
		{
			return 1LL;
		}
		goto _match_end_4377631344;
		_case_end_4377631728:;
		if (!((_204ae433a_is_inf(_21716_x,-1LL)))) { goto _case_end_4377631840; }
		_case_begin_4377631840:;
		{
			return -1LL;
		}
		goto _match_end_4377631344;
		_case_end_4377631840:;
		_match_end_4377631344:;
	}
	jule::Bool _22913_sign = false;
	if (_21716_x < 0LL) {
		_21716_x=static_cast<jule::F64>((-(_21716_x)));
		_22913_sign=true;
	}
	if (_21716_x < 0.84375) {
		jule::F64 _23517_temp = 0LL;
		if (_21716_x < 0.000000003725290298461914) {
			if (_21716_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002848094538889218) {
				_23517_temp=static_cast<jule::F64>(0.125 * ((8LL * _21716_x) + (1.0270333367641007 * _21716_x)));
			} else {
				_23517_temp=static_cast<jule::F64>(_21716_x + (0.1283791670955126 * _21716_x));
			}
		} else {
			jule::F64 _24317_z = _21716_x * _21716_x;
			jule::F64 _24417_r = 0.12837916709551256 + (_24317_z * (-0.3250421072470015 + (_24317_z * (-0.02848174957559851 + (_24317_z * (-0.005770270296489442 + (_24317_z * -0.000023763016656650163)))))));
			jule::F64 _24517_s = 1LL + (_24317_z * (0.39791722395915535 + (_24317_z * (0.0650222499887673 + (_24317_z * (0.005081306281875766 + (_24317_z * (0.00013249473800432164 + (_24317_z * -0.000003960228278775368)))))))));
			jule::F64 _24617_y = jule::div(_24417_r,_24517_s);
			_23517_temp=static_cast<jule::F64>(_21716_x + (_21716_x * _24617_y));
		}
		if (_22913_sign) {
			return static_cast<jule::F64>((-(_23517_temp)));
		}
		return _23517_temp;
	}
	if (_21716_x < 1.25) {
		jule::F64 _25513_s = _21716_x - 1LL;
		jule::F64 _25613_P = -0.0023621185607526594 + (_25513_s * (0.41485611868374833 + (_25513_s * (-0.3722078760357013 + (_25513_s * (0.31834661990116175 + (_25513_s * (-0.11089469428239668 + (_25513_s * (0.035478304325618236 + (_25513_s * -0.002166375594868791)))))))))));
		jule::F64 _25713_Q = 1LL + (_25513_s * (0.10642088040084423 + (_25513_s * (0.540397917702171 + (_25513_s * (0.07182865441419627 + (_25513_s * (0.12617121980876164 + (_25513_s * (0.01363708391202905 + (_25513_s * 0.011984499846799107)))))))))));
		if (_22913_sign) {
			return static_cast<jule::F64>(-0.8450629115104675 - jule::div(_25613_P,_25713_Q));
		}
		return static_cast<jule::F64>(0.8450629115104675 + jule::div(_25613_P,_25713_Q));
	}
	if (_21716_x >= 6LL) {
		if (_22913_sign) {
			return -1LL;
		}
		return 1LL;
	}
	jule::F64 _2699_s = jule::div(1LL,_21716_x * _21716_x);
	jule::F64 _27013_R = 0LL;
	jule::F64 _27113_S = 0LL;
	if (_21716_x < 2.857142857142857) {
		_27013_R=static_cast<jule::F64>(-0.009864944034847148 + (_2699_s * (-0.6938585727071818 + (_2699_s * (-10.558626225323291 + (_2699_s * (-62.375332450326006 + (_2699_s * (-162.39666946257347 + (_2699_s * (-184.60509290671104 + (_2699_s * (-81.2874355063066 + (_2699_s * -9.814329344169145))))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (19.651271667439257 + (_2699_s * (137.65775414351904 + (_2699_s * (434.56587747522923 + (_2699_s * (645.3872717332679 + (_2699_s * (429.00814002756783 + (_2699_s * (108.63500554177944 + (_2699_s * (6.570249770319282 + (_2699_s * -0.0604244152148581))))))))))))))));
	} else {
		_27013_R=static_cast<jule::F64>(-0.0098649429247001 + (_2699_s * (-0.799283237680523 + (_2699_s * (-17.757954917754752 + (_2699_s * (-160.63638485582192 + (_2699_s * (-637.5664433683896 + (_2699_s * (-1025.0951316110772 + (_2699_s * -483.5191916086514))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (30.33806074348246 + (_2699_s * (325.7925129965739 + (_2699_s * (1536.729586084437 + (_2699_s * (3199.8582195085955 + (_2699_s * (2553.0504064331644 + (_2699_s * (474.52854120695537 + (_2699_s * -22.44095244658582))))))))))))));
	}
	jule::F64 _2799_z = _204a244ce_f64_from_bits(static_cast<jule::U64>(_204a244ce_f64_bits(_21716_x) & 18446744069414584320LLU));
	jule::F64 _2809_r = _204ec2e11_exp(static_cast<jule::F64>(((-(_2799_z)) * _2799_z) - 0.5625)) * _204ec2e11_exp(static_cast<jule::F64>(((_2799_z - _21716_x) * (_2799_z + _21716_x)) + jule::div(_27013_R,_27113_S)));
	if (_22913_sign) {
		return static_cast<jule::F64>(jule::div(_2809_r,_21716_x) - 1LL);
	}
	return static_cast<jule::F64>(1LL - jule::div(_2809_r,_21716_x));
}



inline jule::F64 _2050b9744_erfc(jule::F64 _29317_x) {
	
	{
		if (!((_204ae433a_is_nan(_29317_x)))) { goto _case_end_4377689648; }
		_case_begin_4377689648:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4377689488;
		_case_end_4377689648:;
		if (!((_204ae433a_is_inf(_29317_x,1LL)))) { goto _case_end_4377689760; }
		_case_begin_4377689760:;
		{
			return 0LL;
		}
		goto _match_end_4377689488;
		_case_end_4377689760:;
		if (!((_204ae433a_is_inf(_29317_x,-1LL)))) { goto _case_end_4377689872; }
		_case_begin_4377689872:;
		{
			return 2LL;
		}
		goto _match_end_4377689488;
		_case_end_4377689872:;
		_match_end_4377689488:;
	}
	jule::Bool _30413_sign = false;
	if (_29317_x < 0LL) {
		_29317_x=static_cast<jule::F64>((-(_29317_x)));
		_30413_sign=true;
	}
	if (_29317_x < 0.84375) {
		jule::F64 _31017_temp = 0LL;
		if (_29317_x < 0.000000000000000013877787807814457) {
			_31017_temp=_29317_x;
		} else {
			jule::F64 _31417_z = _29317_x * _29317_x;
			jule::F64 _31517_r = 0.12837916709551256 + (_31417_z * (-0.3250421072470015 + (_31417_z * (-0.02848174957559851 + (_31417_z * (-0.005770270296489442 + (_31417_z * -0.000023763016656650163)))))));
			jule::F64 _31617_s = 1LL + (_31417_z * (0.39791722395915535 + (_31417_z * (0.0650222499887673 + (_31417_z * (0.005081306281875766 + (_31417_z * (0.00013249473800432164 + (_31417_z * -0.000003960228278775368)))))))));
			jule::F64 _31717_y = jule::div(_31517_r,_31617_s);
			if (_29317_x < 0.25) {
				_31017_temp=static_cast<jule::F64>(_29317_x + (_29317_x * _31717_y));
			} else {
				_31017_temp=static_cast<jule::F64>(0.5 + ((_29317_x * _31717_y) + (_29317_x - 0.5)));
			}
		}
		if (_30413_sign) {
			return static_cast<jule::F64>(1LL + _31017_temp);
		}
		return static_cast<jule::F64>(1LL - _31017_temp);
	}
	if (_29317_x < 1.25) {
		jule::F64 _33013_s = _29317_x - 1LL;
		jule::F64 _33113_P = -0.0023621185607526594 + (_33013_s * (0.41485611868374833 + (_33013_s * (-0.3722078760357013 + (_33013_s * (0.31834661990116175 + (_33013_s * (-0.11089469428239668 + (_33013_s * (0.035478304325618236 + (_33013_s * -0.002166375594868791)))))))))));
		jule::F64 _33213_Q = 1LL + (_33013_s * (0.10642088040084423 + (_33013_s * (0.540397917702171 + (_33013_s * (0.07182865441419627 + (_33013_s * (0.12617121980876164 + (_33013_s * (0.01363708391202905 + (_33013_s * 0.011984499846799107)))))))))));
		if (_30413_sign) {
			return static_cast<jule::F64>(1.8450629115104675 + jule::div(_33113_P,_33213_Q));
		}
		return static_cast<jule::F64>(0.15493708848953247 - jule::div(_33113_P,_33213_Q));
	}
	if (_29317_x < 28LL) {
		jule::F64 _34013_s = jule::div(1LL,_29317_x * _29317_x);
		jule::F64 _34117_R = 0LL;
		jule::F64 _34217_S = 0LL;
		if (_29317_x < 2.857142857142857) {
			_34117_R=static_cast<jule::F64>(-0.009864944034847148 + (_34013_s * (-0.6938585727071818 + (_34013_s * (-10.558626225323291 + (_34013_s * (-62.375332450326006 + (_34013_s * (-162.39666946257347 + (_34013_s * (-184.60509290671104 + (_34013_s * (-81.2874355063066 + (_34013_s * -9.814329344169145))))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (19.651271667439257 + (_34013_s * (137.65775414351904 + (_34013_s * (434.56587747522923 + (_34013_s * (645.3872717332679 + (_34013_s * (429.00814002756783 + (_34013_s * (108.63500554177944 + (_34013_s * (6.570249770319282 + (_34013_s * -0.0604244152148581))))))))))))))));
		} else {
			if (_30413_sign && (_29317_x > 6LL)) {
				return 2LL;
			}
			_34117_R=static_cast<jule::F64>(-0.0098649429247001 + (_34013_s * (-0.799283237680523 + (_34013_s * (-17.757954917754752 + (_34013_s * (-160.63638485582192 + (_34013_s * (-637.5664433683896 + (_34013_s * (-1025.0951316110772 + (_34013_s * -483.5191916086514))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (30.33806074348246 + (_34013_s * (325.7925129965739 + (_34013_s * (1536.729586084437 + (_34013_s * (3199.8582195085955 + (_34013_s * (2553.0504064331644 + (_34013_s * (474.52854120695537 + (_34013_s * -22.44095244658582))))))))))))));
		}
		jule::F64 _35313_z = _204a244ce_f64_from_bits(static_cast<jule::U64>(_204a244ce_f64_bits(_29317_x) & 18446744069414584320LLU));
		jule::F64 _35413_r = _204ec2e11_exp(static_cast<jule::F64>(((-(_35313_z)) * _35313_z) - 0.5625)) * _204ec2e11_exp(static_cast<jule::F64>(((_35313_z - _29317_x) * (_35313_z + _29317_x)) + jule::div(_34117_R,_34217_S)));
		if (_30413_sign) {
			return static_cast<jule::F64>(2LL - jule::div(_35413_r,_29317_x));
		}
		return static_cast<jule::F64>(jule::div(_35413_r,_29317_x));
	}
	if (_30413_sign) {
		return 2LL;
	}
	return 0LL;
}



inline jule::F64 _205056879_pow10(jule::Int _6114_n) {
	if ((0LL <= _6114_n) && (_6114_n <= 308LL)) {
		return static_cast<jule::F64>(_205056879_POW10_POSTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>(_6114_n),32LL))] * _205056879_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>(_6114_n),32LL))]);
	}
	if ((-323LL <= _6114_n) && (_6114_n <= 0LL)) {
		return static_cast<jule::F64>(jule::div(_205056879_POW10_NEGTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>((-(_6114_n))),32LL))],_205056879_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>((-(_6114_n))),32LL))]));
	}
	if (_6114_n > 0LL) {
		return static_cast<jule::F64>(_204ae433a_inf(1LL));
	}
	return 0LL;
}



inline jule::F64 _2050b9975_sqrt(jule::F64 _12313_x) {
	{
		if (!((_12313_x == 0LL) || (_204ae433a_is_nan(_12313_x)) || (_204ae433a_is_inf(_12313_x,1LL)))) { goto _case_end_4377754320; }
		_case_begin_4377754320:;
		{
			return _12313_x;
		}
		goto _match_end_4377753392;
		_case_end_4377754320:;
		if (!((_12313_x < 0LL))) { goto _case_end_4377754448; }
		_case_begin_4377754448:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4377753392;
		_case_end_4377754448:;
		_match_end_4377753392:;
	}
	jule::U64 _13113_ix = _204a244ce_f64_bits(_12313_x);
	jule::Int _13313_exp = static_cast<jule::Int>((_13113_ix >> 52LL) & 2047LL);
	if (_13313_exp == 0LL) {
		_iter_begin_4377759456:;
		if (!((_13113_ix & 4503599627370496LL) == 0LL)) { goto _iter_end_4377759456; }
		{
			_13113_ix<<=1LL;
			(_13313_exp)--;
		}
		_iter_next_4377759456:;
		goto _iter_begin_4377759456;
		_iter_end_4377759456:;
		(_13313_exp)++;
	}
	_13313_exp-=1023LL;
	_13113_ix=static_cast<jule::U64>(_13113_ix & -9218868437227405313LL);
	_13113_ix|=4503599627370496LL;
	if ((_13313_exp & 1LL) == 1LL) {
		_13113_ix<<=1LL;
	}
	_13313_exp>>=1LL;
	_13113_ix<<=1LL;
	jule::U64 _15013_q = 0LL;
	jule::U64 _15113_s = 0LL;
	jule::U64 _15213_r = static_cast<jule::U64>(9007199254740992LLU);
	_iter_begin_4377766256:;
	if (!(_15213_r != 0LL)) { goto _iter_end_4377766256; }
	{
		jule::U64 _15413_t = _15113_s + _15213_r;
		if (_15413_t <= _13113_ix) {
			_15113_s=static_cast<jule::U64>(_15413_t + _15213_r);
			_13113_ix-=_15413_t;
			_15013_q+=_15213_r;
		}
		_13113_ix<<=1LL;
		_15213_r>>=1LL;
	}
	_iter_next_4377766256:;
	goto _iter_begin_4377766256;
	_iter_end_4377766256:;
	if (_13113_ix != 0LL) {
		_15013_q+=static_cast<jule::U64>(_15013_q & 1LL);
	}
	_13113_ix=static_cast<jule::U64>((_15013_q >> 1LL) + (static_cast<jule::U64>((_13313_exp - 1LL) + 1023LL) << 52LL));
	return static_cast<jule::F64>(_204a244ce_f64_from_bits(_13113_ix));
}



inline jule::F64 _20515c71b_logb(jule::F64 _4413_x) {
	{
		if (!((_4413_x == 0LL))) { goto _case_end_4377775696; }
		_case_begin_4377775696:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(-1LL));
		}
		goto _match_end_4377775408;
		_case_end_4377775696:;
		if (!((_204ae433a_is_inf(_4413_x,0LL)))) { goto _case_end_4377775808; }
		_case_begin_4377775808:;
		{
			return static_cast<jule::F64>(_204ae433a_inf(1LL));
		}
		goto _match_end_4377775408;
		_case_end_4377775808:;
		if (!((_204ae433a_is_nan(_4413_x)))) { goto _case_end_4377775920; }
		_case_begin_4377775920:;
		{
			return _4413_x;
		}
		goto _match_end_4377775408;
		_case_end_4377775920:;
		_match_end_4377775408:;
	}
	return static_cast<jule::F64>(_20515c71b__ilogb(_4413_x));
}



inline jule::Int _20515c71b_ilogb(jule::F64 _6314_x) {
	{
		if (!((_6314_x == 0LL))) { goto _case_end_4377780736; }
		_case_begin_4377780736:;
		{
			return -2147483648LL;
		}
		goto _match_end_4377777312;
		_case_end_4377780736:;
		if (!((_204ae433a_is_nan(_6314_x)))) { goto _case_end_4377780848; }
		_case_begin_4377780848:;
		{
			return 2147483647LL;
		}
		goto _match_end_4377777312;
		_case_end_4377780848:;
		if (!((_204ae433a_is_inf(_6314_x,0LL)))) { goto _case_end_4377780960; }
		_case_begin_4377780960:;
		{
			return 2147483647LL;
		}
		goto _match_end_4377777312;
		_case_end_4377780960:;
		_match_end_4377777312:;
	}
	return static_cast<jule::Int>(_20515c71b__ilogb(_6314_x));
}



inline jule::Int _20515c71b__ilogb(jule::F64 _7715_x) {
	jule::Int _7813_exp = 0LL;
	std::tie(_7715_x,_7813_exp) = _204ae433a_normalize(_7715_x);
	return static_cast<jule::Int>((static_cast<jule::Int>((_204a244ce_f64_bits(_7715_x) >> 52LL) & 2047LL) - 1023LL) + _7813_exp);
}



inline jule::F64 _20515d2aa_jn(jule::Int _8415_n,jule::F64 _8427_x) {
	
	
	{
		if (!((_204ae433a_is_nan(_8427_x)))) { goto _case_end_4377792144; }
		_case_begin_4377792144:;
		{
			return _8427_x;
		}
		goto _match_end_4377791888;
		_case_end_4377792144:;
		if (!((_204ae433a_is_inf(_8427_x,0LL)))) { goto _case_end_4377792256; }
		_case_begin_4377792256:;
		{
			return 0LL;
		}
		goto _match_end_4377791888;
		_case_end_4377792256:;
		_match_end_4377791888:;
	}
	if (_8415_n == 0LL) {
		return static_cast<jule::F64>(_204cae0b5_j0(_8427_x));
	}
	if (_8427_x == 0LL) {
		return 0LL;
	}
	if (_8415_n < 0LL) {
		std::tie(_8415_n,_8427_x) = std::make_tuple(static_cast<jule::Int>((-(_8415_n))),static_cast<jule::F64>((-(_8427_x))));
	}
	if (_8415_n == 1LL) {
		return static_cast<jule::F64>(_204bc0e1c_j1(_8427_x));
	}
	jule::Bool _10913_sign = false;
	if (_8427_x < 0LL) {
		_8427_x=static_cast<jule::F64>((-(_8427_x)));
		if ((_8415_n & 1LL) == 1LL) {
			_10913_sign=true;
		}
	}
	jule::F64 _11613_b = 0LL;
	if (static_cast<jule::F64>(_8415_n) <= _8427_x) {
		if (_8427_x >= 5967269506265907200LL) {
			jule::F64 _13321_temp = 0LL;
			jule::F64 _13418_s;
			jule::F64 _13421_c;
			std::tie(_13418_s,_13421_c) = _204b40793_sincos(_8427_x);
			{
				auto _match_expr{ _8415_n & 3LL };
				if (!((0LL) == _match_expr)) { goto _case_end_4377824832; }
				_case_begin_4377824832:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c + _13418_s);
				}
				goto _match_end_4377822688;
				_case_end_4377824832:;
				if (!((1LL) == _match_expr)) { goto _case_end_4377825072; }
				_case_begin_4377825072:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) + _13418_s);
				}
				goto _match_end_4377822688;
				_case_end_4377825072:;
				if (!((2LL) == _match_expr)) { goto _case_end_4377825184; }
				_case_begin_4377825184:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) - _13418_s);
				}
				goto _match_end_4377822688;
				_case_end_4377825184:;
				if (!((3LL) == _match_expr)) { goto _case_end_4377825296; }
				_case_begin_4377825296:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c - _13418_s);
				}
				goto _match_end_4377822688;
				_case_end_4377825296:;
				_match_end_4377822688:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13321_temp,_2050b9975_sqrt(_8427_x)));
		} else {
			_11613_b=static_cast<jule::F64>(_204bc0e1c_j1(_8427_x));
			jule::Int _14422_i = 1LL;
			jule::F64 _14429_a = _204cae0b5_j0(_8427_x);
			std::tie(_14422_i,_14429_a) = std::make_tuple(1LL,_204cae0b5_j0(_8427_x));
			_iter_begin_4377804448:;
			if (!(_14422_i < _8415_n)) { goto _iter_end_4377804448; }
			{
				std::tie(_14429_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>((_11613_b * jule::div(static_cast<jule::F64>(_14422_i + _14422_i),_8427_x)) - _14429_a));
			}
			_iter_next_4377804448:;
			(_14422_i)++;
			goto _iter_begin_4377804448;
			_iter_end_4377804448:;
		}
	} else {
		if (_8427_x < 0.000000001862645149230957) {
			if (_8415_n > 33LL) {
				_11613_b=0LL;
			} else {
				jule::F64 _15721_temp = _8427_x * 0.5;
				_11613_b=_15721_temp;
				jule::F64 _15925_a = 1LL;
				jule::Int _16025_i = 2LL;
				_iter_begin_4377841056:;
				if (!(_16025_i <= _8415_n)) { goto _iter_end_4377841056; }
				{
					_15925_a*=static_cast<jule::F64>(_16025_i);
					_11613_b*=_15721_temp;
				}
				_iter_next_4377841056:;
				(_16025_i)++;
				goto _iter_begin_4377841056;
				_iter_end_4377841056:;
				_11613_b = jule::div(_11613_b,_15925_a);
			}
		} else {
			jule::F64 _19717_w = jule::div(static_cast<jule::F64>(_8415_n + _8415_n),_8427_x);
			jule::F64 _19817_h = jule::div(2LL,_8427_x);
			jule::F64 _19921_q0 = _19717_w;
			jule::F64 _20021_z = _19717_w + _19817_h;
			jule::F64 _20121_q1 = (_19717_w * _20021_z) - 1LL;
			jule::Int _20221_k = 1LL;
			_iter_begin_4377848240:;
			if (!(_20121_q1 < 1000000000LL)) { goto _iter_end_4377848240; }
			{
				(_20221_k)++;
				_20021_z+=_19817_h;
				std::tie(_19921_q0,_20121_q1) = std::make_tuple(_20121_q1,static_cast<jule::F64>((_20021_z * _20121_q1) - _19921_q0));
			}
			_iter_next_4377848240:;
			goto _iter_begin_4377848240;
			_iter_end_4377848240:;
			jule::Int _20817_m = _8415_n + _8415_n;
			jule::F64 _20921_t = 0LL;
			jule::Int _21021_i = 2LL * (_8415_n + _20221_k);
			_iter_begin_4377853488:;
			if (!(_21021_i >= _20817_m)) { goto _iter_end_4377853488; }
			{
				_20921_t=static_cast<jule::F64>(jule::div(1LL,jule::div(static_cast<jule::F64>(_21021_i),_8427_x) - _20921_t));
			}
			_iter_next_4377853488:;
			_21021_i-=2LL;
			goto _iter_begin_4377853488;
			_iter_end_4377853488:;
			jule::F64 _21421_a = _20921_t;
			_11613_b=1LL;
			jule::F64 _22421_tmp = static_cast<jule::F64>(_8415_n);
			jule::F64 _22517_v = jule::div(2LL,_8427_x);
			_22421_tmp=static_cast<jule::F64>(_22421_tmp * _204b436ca_log(static_cast<jule::F64>(_204c18409_abs(static_cast<jule::F64>(_22517_v * _22421_tmp)))));
			if (_22421_tmp < 709.782712893384) {
				_21021_i=static_cast<jule::Int>(_8415_n - 1LL);
				_iter_begin_4377862880:;
				if (!(_21021_i > 0LL)) { goto _iter_end_4377862880; }
				{
					jule::F64 _23025_di = static_cast<jule::F64>(_21021_i + _21021_i);
					std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23025_di,_8427_x) - _21421_a));
				}
				_iter_next_4377862880:;
				(_21021_i)--;
				goto _iter_begin_4377862880;
				_iter_end_4377862880:;
			} else {
				_21021_i=static_cast<jule::Int>(_8415_n - 1LL);
				_iter_begin_4377867360:;
				if (!(_21021_i > 0LL)) { goto _iter_end_4377867360; }
				{
					jule::F64 _23625_di = static_cast<jule::F64>(_21021_i + _21021_i);
					std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23625_di,_8427_x) - _21421_a));
					if (_11613_b > 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
						_21421_a = jule::div(_21421_a,_11613_b);
						_20921_t = jule::div(_20921_t,_11613_b);
						_11613_b=1LL;
					}
				}
				_iter_next_4377867360:;
				(_21021_i)--;
				goto _iter_begin_4377867360;
				_iter_end_4377867360:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(_20921_t * _204cae0b5_j0(_8427_x),_11613_b));
		}
	}
	if (_10913_sign) {
		return static_cast<jule::F64>((-(_11613_b)));
	}
	return _11613_b;
}



inline jule::F64 _20515d2aa_yn(jule::Int _26315_n,jule::F64 _26323_x) {
	
	{
		if (!((_26323_x < 0LL) || (_204ae433a_is_nan(_26323_x)))) { goto _case_end_4377874112; }
		_case_begin_4377874112:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4377873936;
		_case_end_4377874112:;
		if (!((_204ae433a_is_inf(_26323_x,1LL)))) { goto _case_end_4377874240; }
		_case_begin_4377874240:;
		{
			return 0LL;
		}
		goto _match_end_4377873936;
		_case_end_4377874240:;
		_match_end_4377873936:;
	}
	if (_26315_n == 0LL) {
		return static_cast<jule::F64>(_204cae0b5_y0(_26323_x));
	}
	if (_26323_x == 0LL) {
		if ((_26315_n < 0LL) && ((_26315_n & 1LL) == 1LL)) {
			return static_cast<jule::F64>(_204ae433a_inf(1LL));
		}
		return static_cast<jule::F64>(_204ae433a_inf(-1LL));
	}
	jule::Bool _28213_sign = false;
	if (_26315_n < 0LL) {
		_26315_n=static_cast<jule::Int>((-(_26315_n)));
		if ((_26315_n & 1LL) == 1LL) {
			_28213_sign=true;
		}
	}
	if (_26315_n == 1LL) {
		if (_28213_sign) {
			return static_cast<jule::F64>((-(_204bc0e1c_y1(_26323_x))));
		}
		return static_cast<jule::F64>(_204bc0e1c_y1(_26323_x));
	}
	jule::F64 _29513_b = 0LL;
	if (_26323_x >= 5967269506265907200LL) {
		jule::F64 _31017_temp = 0LL;
		jule::F64 _31114_s;
		jule::F64 _31117_c;
		std::tie(_31114_s,_31117_c) = _204b40793_sincos(_26323_x);
		{
			auto _match_expr{ _26315_n & 3LL };
			if (!((0LL) == _match_expr)) { goto _case_end_4377891072; }
			_case_begin_4377891072:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s - _31117_c);
			}
			goto _match_end_4377888928;
			_case_end_4377891072:;
			if (!((1LL) == _match_expr)) { goto _case_end_4377891312; }
			_case_begin_4377891312:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) - _31117_c);
			}
			goto _match_end_4377888928;
			_case_end_4377891312:;
			if (!((2LL) == _match_expr)) { goto _case_end_4377891424; }
			_case_begin_4377891424:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) + _31117_c);
			}
			goto _match_end_4377888928;
			_case_end_4377891424:;
			if (!((3LL) == _match_expr)) { goto _case_end_4377891536; }
			_case_begin_4377891536:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s + _31117_c);
			}
			goto _match_end_4377888928;
			_case_end_4377891536:;
			_match_end_4377888928:;
		}
		_29513_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _31017_temp,_2050b9975_sqrt(_26323_x)));
	} else {
		jule::F64 _32017_a = _204cae0b5_y0(_26323_x);
		_29513_b=static_cast<jule::F64>(_204bc0e1c_y1(_26323_x));
		jule::Int _32317_i = 1LL;
		_iter_begin_4377896576:;
		if (!((_32317_i < _26315_n) && (!(_204ae433a_is_inf(_29513_b,-1LL))))) { goto _iter_end_4377896576; }
		{
			std::tie(_32017_a,_29513_b) = std::make_tuple(_29513_b,static_cast<jule::F64>((jule::div(static_cast<jule::F64>(_32317_i + _32317_i),_26323_x) * _29513_b) - _32017_a));
		}
		_iter_next_4377896576:;
		(_32317_i)++;
		goto _iter_begin_4377896576;
		_iter_end_4377896576:;
	}
	if (_28213_sign) {
		return static_cast<jule::F64>((-(_29513_b)));
	}
	return _29513_b;
}



inline jule::F64 _2051dea9a_remainder(jule::F64 _6822_x,jule::F64 _6834_y) {
	
	
	{
		if (!((_204ae433a_is_nan(_6822_x)) || (_204ae433a_is_nan(_6834_y)) || (_204ae433a_is_inf(_6822_x,0LL)) || (_6834_y == 0LL))) { goto _case_end_4377905936; }
		_case_begin_4377905936:;
		{
			return static_cast<jule::F64>(_204ae433a_nan());
		}
		goto _match_end_4377905680;
		_case_end_4377905936:;
		if (!((_204ae433a_is_inf(_6834_y,0LL)))) { goto _case_end_4377906048; }
		_case_begin_4377906048:;
		{
			return _6822_x;
		}
		goto _match_end_4377905680;
		_case_end_4377906048:;
		_match_end_4377905680:;
	}
	jule::Bool _7913_sign = false;
	if (_6822_x < 0LL) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
		_7913_sign=true;
	}
	if (_6834_y < 0LL) {
		_6834_y=static_cast<jule::F64>((-(_6834_y)));
	}
	if (_6822_x == _6834_y) {
		if (_7913_sign) {
			jule::F64 _8917_zero = 0LL;
			return static_cast<jule::F64>((-(_8917_zero)));
		}
		return 0LL;
	}
	if (_6834_y <= 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
		_6822_x=static_cast<jule::F64>(_204a0b120_mod(_6822_x,static_cast<jule::F64>(_6834_y + _6834_y)));
	}
	if (_6834_y < 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403) {
		if ((_6822_x + _6822_x) > _6834_y) {
			_6822_x-=_6834_y;
			if ((_6822_x + _6822_x) >= _6834_y) {
				_6822_x-=_6834_y;
			}
		}
	} else {
		jule::F64 _10513_y_half = 0.5 * _6834_y;
		if (_6822_x > _10513_y_half) {
			_6822_x-=_6834_y;
			if (_6822_x >= _10513_y_half) {
				_6822_x-=_6834_y;
			}
		}
	}
	if (_7913_sign) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
	}
	return _6822_x;
}



inline jule::F64 _205170762_xatan(jule::F64 _8610_x) {
	
	
	
	
	
	
	
	
	
	
	jule::F64 _9813_z = _8610_x * _8610_x;
	_9813_z=static_cast<jule::F64>(jule::div(_9813_z * ((((((((-0.8750608600031904 * _9813_z) + -16.157537187333652) * _9813_z) + -75.00855792314705) * _9813_z) + -122.88666844901361) * _9813_z) + -64.85021904942025),((((((((_9813_z + 24.858464901423062) * _9813_z) + 165.02700983169885) * _9813_z) + 432.88106049129027) * _9813_z) + 485.3903996359137) * _9813_z) + 194.5506571482614));
	_9813_z=static_cast<jule::F64>((_8610_x * _9813_z) + _8610_x);
	return _9813_z;
}



inline jule::F64 _205170762_satan(jule::F64 _10610_x) {
	
	
	if (_10610_x <= 0.66) {
		return static_cast<jule::F64>(_205170762_xatan(_10610_x));
	}
	if (_10610_x > 2.414213562373095) {
		return static_cast<jule::F64>((1.5707963267948966 - _205170762_xatan(static_cast<jule::F64>(jule::div(1LL,_10610_x)))) + 0.00000000000000006123233995736766);
	}
	return static_cast<jule::F64>((0.7853981633974483 + _205170762_xatan(static_cast<jule::F64>(jule::div(_10610_x - 1LL,_10610_x + 1LL)))) + 0.00000000000000003061616997868383);
}



inline jule::F64 _205170762_atan(jule::F64 _12413_x) {
	if (_12413_x == 0LL) {
		return _12413_x;
	}
	if (_12413_x > 0LL) {
		return static_cast<jule::F64>(_205170762_satan(_12413_x));
	}
	return static_cast<jule::F64>((-(_205170762_satan(static_cast<jule::F64>((-(_12413_x)))))));
}



inline jule::F64 _2051e0194_asin(jule::F64 _5017_x) {
	if (_5017_x == 0LL) {
		return _5017_x;
	}
	jule::Bool _5413_sign = false;
	if (_5017_x < 0LL) {
		_5017_x=static_cast<jule::F64>((-(_5017_x)));
		_5413_sign=true;
	}
	if (_5017_x > 1LL) {
		return static_cast<jule::F64>(_204ae433a_nan());
	}
	jule::F64 _6313_temp = _2050b9975_sqrt(static_cast<jule::F64>(1LL - (_5017_x * _5017_x)));
	if (_5017_x > 0.7) {
		_6313_temp=static_cast<jule::F64>(1.5707963267948966 - _205170762_satan(static_cast<jule::F64>(jule::div(_6313_temp,_5017_x))));
	} else {
		_6313_temp=static_cast<jule::F64>(_205170762_satan(static_cast<jule::F64>(jule::div(_5017_x,_6313_temp))));
	}
	if (_5413_sign) {
		_6313_temp=static_cast<jule::F64>((-(_6313_temp)));
	}
	return _6313_temp;
}



inline jule::F64 _2051e0194_acos(jule::F64 _8013_x) {
	return static_cast<jule::F64>(1.5707963267948966 - _2051e0194_asin(_8013_x));
}



inline jule::F64 _20523c477_asinh(jule::F64 _7018_x) {
	
	
	
	if (_204ae433a_is_nan(_7018_x) || _204ae433a_is_inf(_7018_x,0LL)) {
		return _7018_x;
	}
	jule::Bool _7913_sign = false;
	if (_7018_x < 0LL) {
		_7018_x=static_cast<jule::F64>((-(_7018_x)));
		_7913_sign=true;
	}
	jule::F64 _8413_temp = 0LL;
	{
		if (!((_7018_x > 268435456LL))) { goto _case_end_4377970720; }
		_case_begin_4377970720:;
		{
			_8413_temp=static_cast<jule::F64>(_204b436ca_log(_7018_x) + 0.6931471805599453);
		}
		goto _match_end_4377967424;
		_case_end_4377970720:;
		if (!((_7018_x > 2LL))) { goto _case_end_4377973392; }
		_case_begin_4377973392:;
		{
			_8413_temp=static_cast<jule::F64>(_204b436ca_log(static_cast<jule::F64>((2LL * _7018_x) + jule::div(1LL,_2050b9975_sqrt(static_cast<jule::F64>((_7018_x * _7018_x) + 1LL)) + _7018_x))));
		}
		goto _match_end_4377967424;
		_case_end_4377973392:;
		if (!((_7018_x < 0.000000003725290298461914))) { goto _case_end_4377970912; }
		_case_begin_4377970912:;
		{
			_8413_temp=_7018_x;
		}
		goto _match_end_4377967424;
		_case_end_4377970912:;
		_case_begin_4377969904:;
		{
			_8413_temp=static_cast<jule::F64>(_204ee5a5a_log1p(static_cast<jule::F64>(_7018_x + jule::div(_7018_x * _7018_x,1LL + _2050b9975_sqrt(static_cast<jule::F64>(1LL + (_7018_x * _7018_x)))))));
		}
		goto _match_end_4377967424;
		_case_end_4377969904:;
		_match_end_4377967424:;
	}
	if (_7913_sign) {
		_8413_temp=static_cast<jule::F64>((-(_8413_temp)));
	}
	return _8413_temp;
}



inline std::tuple<jule::Bool,jule::Int> _2037e7a12_conv_bool(jule::Str _4118_s) {
	{
		auto _match_expr{ _4118_s };
		if (!((jule::Str("1", 1)) == _match_expr || (jule::Str("t", 1)) == _match_expr || (jule::Str("T", 1)) == _match_expr || (jule::Str("true", 4)) == _match_expr || (jule::Str("TRUE", 4)) == _match_expr || (jule::Str("True", 4)) == _match_expr)) { goto _case_end_4378478144; }
		_case_begin_4378478144:;
		{
			return std::make_tuple(true,0LLU);
		}
		goto _match_end_4378477776;
		_case_end_4378478144:;
		if (!((jule::Str("0", 1)) == _match_expr || (jule::Str("f", 1)) == _match_expr || (jule::Str("F", 1)) == _match_expr || (jule::Str("false", 5)) == _match_expr || (jule::Str("FALSE", 5)) == _match_expr || (jule::Str("False", 5)) == _match_expr)) { goto _case_end_4378478368; }
		_case_begin_4378478368:;
		{
			return std::make_tuple(false,0LLU);
		}
		goto _match_end_4378477776;
		_case_end_4378478368:;
		_match_end_4378477776:;
	}
	return std::make_tuple(false,2LLU);
}



inline jule::Str _2037e7a12_fmt_bool(jule::Bool _5217_b) {
	if (_5217_b) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _203830374_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_203830374_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _203830374_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LL;
	_203830374_FloatInfo* _8413_flt = nullptr;
	{
		auto _match_expr{ _8270_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4378496384; }
		_case_begin_4378496384:;
		{
			_8313_bits=static_cast<jule::U64>(_204a244ce_f32_bits(static_cast<jule::F32>(_8234_val)));
			_8413_flt=(&(_203830374_F32_INFO));
		}
		goto _match_end_4378494016;
		_case_end_4378496384:;
		if (!((64LL) == _match_expr)) { goto _case_end_4378495680; }
		_case_begin_4378495680:;
		{
			_8313_bits=static_cast<jule::U64>(_204a244ce_f64_bits(_8234_val));
			_8413_flt=(&(_203830374_F64_INFO));
		}
		goto _match_end_4378494016;
		_case_end_4378495680:;
		_case_begin_4378494896:;
		{
			jule::panic(jule::Str("std::conv: illegal bit_size", 27));
		}
		goto _match_end_4378494016;
		_case_end_4378494896:;
		_match_end_4378494016:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & ((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto _match_expr{ _9713_exp };
		if (!(((1LL << _8413_flt->_field_expbits) - 1LL) == _match_expr)) { goto _case_end_4378506336; }
		_case_begin_4378506336:;
		{
			jule::Str _10317_s = jule::Str("", 0);
			{
				if (!((_9813_mant != 0LL))) { goto _case_end_4378512416; }
				_case_begin_4378512416:;
				{
					_10317_s=jule::Str("nan", 3);
				}
				goto _match_end_4378510352;
				_case_end_4378512416:;
				if (!((_969_neg))) { goto _case_end_4378511504; }
				_case_begin_4378511504:;
				{
					_10317_s=jule::Str("-inf", 4);
				}
				goto _match_end_4378510352;
				_case_end_4378511504:;
				_case_begin_4378510480:;
				{
					_10317_s=jule::Str("+inf", 4);
				}
				goto _match_end_4378510352;
				_case_end_4378510480:;
				_match_end_4378510352:;
			}
			return jule::append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
		}
		goto _match_end_4378504048;
		_case_end_4378506336:;
		if (!((0LL) == _match_expr)) { goto _case_end_4378508096; }
		_case_begin_4378508096:;
		{
			(_9713_exp)++;
		}
		goto _match_end_4378504048;
		_case_end_4378508096:;
		_case_begin_4378494624:;
		{
			_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
		}
		goto _match_end_4378504048;
		_case_end_4378494624:;
		_match_end_4378504048:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _203830374_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _203830374_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _203830374_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_203830374_DecimalSlice _13413_digs = _203830374_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		jule::Array<jule::U8,32> _14013_buf = jule::Array<jule::U8,32>({});
		_13413_digs._field_d=_14013_buf.slice(0LL);
		_2047bd4cb_ryu_ftoa_shortest(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4378526640; }
			_case_begin_4378526640:;
			{
				_8259_prec=static_cast<jule::Int>(_203830374_max(static_cast<jule::Int>(_13413_digs._field_nd - 1LL),0LL));
			}
			goto _match_end_4378527200;
			_case_end_4378526640:;
			if (!(('f') == _match_expr)) { goto _case_end_4378527360; }
			_case_begin_4378527360:;
			{
				_8259_prec=static_cast<jule::Int>(_203830374_max(static_cast<jule::Int>(_13413_digs._field_nd - _13413_digs._field_dp),0LL));
			}
			goto _match_end_4378527200;
			_case_end_4378527360:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4378527472; }
			_case_begin_4378527472:;
			{
				_8259_prec=_13413_digs._field_nd;
			}
			goto _match_end_4378527200;
			_case_end_4378527472:;
			_match_end_4378527200:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15517_digits = _8259_prec;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4378534272; }
			_case_begin_4378534272:;
			{
				(_15517_digits)++;
			}
			goto _match_end_4378532576;
			_case_end_4378534272:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4378533760; }
			_case_begin_4378533760:;
			{
				if (_8259_prec == 0LL) {
					_8259_prec=1LL;
				}
				_15517_digits=_8259_prec;
			}
			goto _match_end_4378532576;
			_case_end_4378533760:;
			_case_begin_4378531744:;
			{
				_15517_digits=1LL;
			}
			goto _match_end_4378532576;
			_case_end_4378531744:;
			_match_end_4378532576:;
		}
		jule::Array<jule::U8,24> _16813_buf = jule::Array<jule::U8,24>({});
		if ((_8270_bit_size == 32LL) && (_15517_digits <= 9LL)) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_2047bd4cb_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		} else if (_15517_digits <= 18LL) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_2047bd4cb_ryu_ftoa_fixed64(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _203830374_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _203830374_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _203830374_big_ftoa(jule::Slice<jule::U8> _18617_dst,jule::Int _18634_prec,jule::U8 _18645_fmt,jule::Bool _18656_neg,jule::U64 _18713_mant,jule::Int _18724_exp,_203830374_FloatInfo& _18735_flt) {
	_2047bec19_Decimal _18813_d = _2047bec19_Decimal();
	_18813_d._method_assign(_18713_mant);
	_18813_d._method_shift(static_cast<jule::Int>(_18724_exp - static_cast<jule::Int>(_18735_flt._field_mantbits)));
	_203830374_DecimalSlice _19113_digs = _203830374_DecimalSlice();
	jule::Bool _1929_shortest = _18634_prec < 0LL;
	if (_1929_shortest) {
		_203830374_round_shortest(_18813_d,_18713_mant,_18724_exp,_18735_flt);
		_19113_digs=_203830374_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4378559728; }
			_case_begin_4378559728:;
			{
				_18634_prec=static_cast<jule::Int>(_19113_digs._field_nd - 1LL);
			}
			goto _match_end_4378558752;
			_case_end_4378559728:;
			if (!(('f') == _match_expr)) { goto _case_end_4378561712; }
			_case_begin_4378561712:;
			{
				_18634_prec=static_cast<jule::Int>(_203830374_max(static_cast<jule::Int>(_19113_digs._field_nd - _19113_digs._field_dp),0LL));
			}
			goto _match_end_4378558752;
			_case_end_4378561712:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4378561824; }
			_case_begin_4378561824:;
			{
				_18634_prec=_19113_digs._field_nd;
			}
			goto _match_end_4378558752;
			_case_end_4378561824:;
			_match_end_4378558752:;
		}
	} else {
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4378566624; }
			_case_begin_4378566624:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18634_prec + 1LL));
			}
			goto _match_end_4378562128;
			_case_end_4378566624:;
			if (!(('f') == _match_expr)) { goto _case_end_4378565664; }
			_case_begin_4378565664:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18813_d._field_dp + _18634_prec));
			}
			goto _match_end_4378562128;
			_case_end_4378565664:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4378564176; }
			_case_begin_4378564176:;
			{
				if (_18634_prec == 0LL) {
					_18634_prec=1LL;
				}
				_18813_d._method_round(_18634_prec);
			}
			goto _match_end_4378562128;
			_case_end_4378564176:;
			_match_end_4378562128:;
		}
		_19113_digs=_203830374_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
	}
	return _203830374_fmt_digits(_18617_dst,_1929_shortest,_18656_neg,_19113_digs,_18634_prec,_18645_fmt);
}



inline jule::Slice<jule::U8> _203830374_fmt_digits(jule::Slice<jule::U8> _22319_dst,jule::Bool _22332_shortest,jule::Bool _22348_neg,_203830374_DecimalSlice _22413_digs,jule::Int _22437_prec,jule::U8 _22448_fmt) {
	{
		auto _match_expr{ _22448_fmt };
		if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4378578592; }
		_case_begin_4378578592:;
		{
			return _203830374_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec,_22448_fmt);
		}
		goto _match_end_4378578112;
		_case_end_4378578592:;
		if (!(('f') == _match_expr)) { goto _case_end_4378578704; }
		_case_begin_4378578704:;
		{
			return _203830374_fmt_f(_22319_dst,_22348_neg,_22413_digs,_22437_prec);
		}
		goto _match_end_4378578112;
		_case_end_4378578704:;
		if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4378578816; }
		_case_begin_4378578816:;
		{
			jule::Int _23217_eprec = _22437_prec;
			if ((_23217_eprec > _22413_digs._field_nd) && (_22413_digs._field_nd >= _22413_digs._field_dp)) {
				_23217_eprec=_22413_digs._field_nd;
			}
			if (_22332_shortest) {
				_23217_eprec=6LL;
			}
			jule::Int _24213_exp = _22413_digs._field_dp - 1LL;
			if ((_24213_exp < -4LL) || (_24213_exp >= _23217_eprec)) {
				if (_22437_prec > _22413_digs._field_nd) {
					_22437_prec=_22413_digs._field_nd;
				}
				return _203830374_fmt_e(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_22437_prec - 1LL),static_cast<jule::U8>((_22448_fmt + 'e') - 'g'));
			}
			if (_22437_prec > _22413_digs._field_dp) {
				_22437_prec=_22413_digs._field_nd;
			}
			return _203830374_fmt_f(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_203830374_max(static_cast<jule::Int>(_22437_prec - _22413_digs._field_dp),0LL)));
		}
		goto _match_end_4378578112;
		_case_end_4378578816:;
		_match_end_4378578112:;
	}
	return jule::append(_22319_dst,jule::Slice<jule::U8>({'%',_22448_fmt}));
}



inline void _203830374_round_shortest(_2047bec19_Decimal& _26124_d,jule::U64 _26136_mant,jule::Int _26147_exp,_203830374_FloatInfo& _26158_flt) {
	if (_26136_mant == 0LL) {
		_26124_d._field_nd=0LL;
		return;
	}
	jule::Int _2829_minexp = _26158_flt._field_bias + 1LL;
	if ((_26147_exp > _2829_minexp) && ((332LL * (_26124_d._field_dp - _26124_d._field_nd)) >= (100LL * (_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits))))) {
		return;
	}
	_2047bec19_Decimal _29113_upper = _2047bec19_Decimal();
	_29113_upper._method_assign(static_cast<jule::U64>((_26136_mant * 2LL) + 1LL));
	_29113_upper._method_shift(static_cast<jule::Int>((_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::U64 _30113_mantlo = 0LL;
	jule::Int _30213_explo = 0LL;
	if ((_26136_mant > (1LL << _26158_flt._field_mantbits)) || (_26147_exp == _2829_minexp)) {
		_30113_mantlo=static_cast<jule::U64>(_26136_mant - 1LL);
		_30213_explo=_26147_exp;
	} else {
		_30113_mantlo=static_cast<jule::U64>((_26136_mant * 2LL) - 1LL);
		_30213_explo=static_cast<jule::Int>(_26147_exp - 1LL);
	}
	_2047bec19_Decimal _31013_lower = _2047bec19_Decimal();
	_31013_lower._method_assign(static_cast<jule::U64>((_30113_mantlo * 2LL) + 1LL));
	_31013_lower._method_shift(static_cast<jule::Int>((_30213_explo - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::Bool _3179_inclusive = jule::mod(_26136_mant,2LL) == 0LL;
	jule::U8 _33013_upperdelta = 0LL;
	jule::Int _33413_ui = 0LL;
	_iter_begin_4378618352:;
	{
		jule::Int _33913_mi = (_33413_ui - _29113_upper._field_dp) + _26124_d._field_dp;
		if (_33913_mi >= _26124_d._field_nd) {
			goto _iter_end_4378618352;
		}
		jule::Int _34313_li = (_33413_ui - _29113_upper._field_dp) + _31013_lower._field_dp;
		jule::U8 _34417_l = static_cast<jule::U8>(48LLU);
		if ((_34313_li >= 0LL) && (_34313_li < _31013_lower._field_nd)) {
			_34417_l=_31013_lower._field_d[static_cast<jule::Int>(_34313_li)];
		}
		jule::U8 _34817_m = static_cast<jule::U8>(48LLU);
		if (_33913_mi >= 0LL) {
			_34817_m=_26124_d._field_d[static_cast<jule::Int>(_33913_mi)];
		}
		jule::U8 _35217_u = static_cast<jule::U8>(48LLU);
		if (_33413_ui < _29113_upper._field_nd) {
			_35217_u=_29113_upper._field_d[static_cast<jule::Int>(_33413_ui)];
		}
		jule::Bool _36013_okdown = (_34417_l != _34817_m) || (_3179_inclusive && ((_34313_li + 1LL) == _31013_lower._field_nd));
		{
			if (!(((_33013_upperdelta == 0LL) && ((_34817_m + 1LL) < _35217_u)))) { goto _case_end_4378636416; }
			_case_begin_4378636416:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_4378635872;
			_case_end_4378636416:;
			if (!(((_33013_upperdelta == 0LL) && (_34817_m != _35217_u)))) { goto _case_end_4378636528; }
			_case_begin_4378636528:;
			{
				_33013_upperdelta=1LL;
			}
			goto _match_end_4378635872;
			_case_end_4378636528:;
			if (!(((_33013_upperdelta == 1LL) && ((_34817_m != '9') || (_35217_u != '0'))))) { goto _case_end_4378636992; }
			_case_begin_4378636992:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_4378635872;
			_case_end_4378636992:;
			_match_end_4378635872:;
		}
		jule::Bool _38113_okup = (_33013_upperdelta > 0LL) && ((_3179_inclusive || (_33013_upperdelta > 1LL)) || ((_33413_ui + 1LL) < _29113_upper._field_nd));
		{
			if (!((_36013_okdown && _38113_okup))) { goto _case_end_4378642816; }
			_case_begin_4378642816:;
			{
				_26124_d._method_round(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_4378642320;
			_case_end_4378642816:;
			if (!((_36013_okdown))) { goto _case_end_4378642928; }
			_case_begin_4378642928:;
			{
				_26124_d._method_round_down(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_4378642320;
			_case_end_4378642928:;
			if (!((_38113_okup))) { goto _case_end_4378643040; }
			_case_begin_4378643040:;
			{
				_26124_d._method_round_up(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_4378642320;
			_case_end_4378643040:;
			_match_end_4378642320:;
		}
	}
	_iter_next_4378618352:;
	(_33413_ui)++;
	goto _iter_begin_4378618352;
	_iter_end_4378618352:;
}



inline jule::Slice<jule::U8> _203830374_fmt_e(jule::Slice<jule::U8> _40014_dst,jule::Bool _40027_neg,_203830374_DecimalSlice _40038_d,jule::Int _40055_prec,jule::U8 _40066_fmt) {
	if (_40027_neg) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'-'}));
	}
	jule::U8 _40713_ch = '0';
	if (_40038_d._field_nd != 0LL) {
		_40713_ch=_40038_d._field_d[0LL];
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	if (_40055_prec > 0LL) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _41617_i = 1LL;
		jule::Int _41713_m = _203830374_min(_40038_d._field_nd,static_cast<jule::Int>(_40055_prec + 1LL));
		if (_41617_i < _41713_m) {
			_40014_dst=jule::append(_40014_dst,_40038_d._field_d.slice(static_cast<jule::Int>(_41617_i),static_cast<jule::Int>(_41713_m)));
			_41617_i=_41713_m;
		}
		_iter_begin_4378667536:;
		if (!(_41617_i <= _40055_prec)) { goto _iter_end_4378667536; }
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_4378667536:;
		(_41617_i)++;
		goto _iter_begin_4378667536;
		_iter_end_4378667536:;
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40066_fmt}));
	jule::Int _42913_exp = _40038_d._field_dp - 1LL;
	if (_40038_d._field_nd == 0LL) {
		_42913_exp=0LL;
	}
	if (_42913_exp < 0LL) {
		_40713_ch='-';
		_42913_exp=static_cast<jule::Int>((-(_42913_exp)));
	} else {
		_40713_ch='+';
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	{
		if (!((_42913_exp < 10LL))) { goto _case_end_4378671168; }
		_case_begin_4378671168:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0',static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp) + '0')}));
		}
		goto _match_end_4378669232;
		_case_end_4378671168:;
		if (!((_42913_exp < 100LL))) { goto _case_end_4378670624; }
		_case_begin_4378670624:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4378669232;
		_case_end_4378670624:;
		_case_begin_4378664240:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,100LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_42913_exp,10LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4378669232;
		_case_end_4378664240:;
		_match_end_4378669232:;
	}
	return _40014_dst;
}



inline jule::Slice<jule::U8> _203830374_fmt_f(jule::Slice<jule::U8> _45514_dst,jule::Bool _45527_neg,_203830374_DecimalSlice _45538_d,jule::Int _45555_prec) {
	if (_45527_neg) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'-'}));
	}
	if (_45538_d._field_dp > 0LL) {
		jule::Int _46317_m = _203830374_min(_45538_d._field_nd,_45538_d._field_dp);
		_45514_dst=jule::append(_45514_dst,_45538_d._field_d.slice(0LL,static_cast<jule::Int>(_46317_m)));
		_iter_begin_4378688192:;
		if (!(_46317_m < _45538_d._field_dp)) { goto _iter_end_4378688192; }
		{
			_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_4378688192:;
		(_46317_m)++;
		goto _iter_begin_4378688192;
		_iter_end_4378688192:;
	} else {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
	}
	if (_45555_prec > 0LL) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _47417_i = 0LL;
		_iter_begin_4378690992:;
		if (!(_47417_i < _45555_prec)) { goto _iter_end_4378690992; }
		{
			jule::U8 _47621_ch = static_cast<jule::U8>(48LLU);
			jule::Int _47717_j = _45538_d._field_dp + _47417_i;
			if ((0LL <= _47717_j) && (_47717_j < _45538_d._field_nd)) {
				_47621_ch=_45538_d._field_d[static_cast<jule::Int>(_47717_j)];
			}
			_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({_47621_ch}));
		}
		_iter_next_4378690992:;
		(_47417_i)++;
		goto _iter_begin_4378690992;
		_iter_end_4378690992:;
	}
	return _45514_dst;
}



inline jule::Slice<jule::U8> _203830374_fmt_b(jule::Slice<jule::U8> _48814_dst,jule::Bool _48827_neg,jule::U64 _48838_mant,jule::Int _48853_exp,_203830374_FloatInfo& _48864_flt) {
	if (_48827_neg) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'-'}));
	}
	std::tie(_48814_dst,std::ignore) = _2049bd7b9_fmt_bits(_48814_dst,_48838_mant,10LL,false,true);
	_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'p'}));
	_48853_exp-=static_cast<jule::Int>(_48864_flt._field_mantbits);
	if (_48853_exp >= 0LL) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'+'}));
	}
	std::tie(_48814_dst,std::ignore) = _2049bd7b9_fmt_bits(_48814_dst,static_cast<jule::U64>(_48853_exp),10LL,_48853_exp < 0LL,true);
	return _48814_dst;
}



inline jule::Slice<jule::U8> _203830374_fmt_x(jule::Slice<jule::U8> _51014_dst,jule::Int _51027_prec,jule::U8 _51038_fmt,jule::Bool _51049_neg,jule::U64 _51113_mant,jule::Int _51128_exp,_203830374_FloatInfo& _51139_flt) {
	if (_51113_mant == 0LL) {
		_51128_exp=0LL;
	}
	_51113_mant<<=static_cast<jule::Uint>(60LL - _51139_flt._field_mantbits);
	_iter_begin_4378711936:;
	if (!((_51113_mant != 0LL) && ((_51113_mant & 1152921504606846976LL) == 0LL))) { goto _iter_end_4378711936; }
	{
		_51113_mant<<=1LL;
		(_51128_exp)--;
	}
	_iter_next_4378711936:;
	goto _iter_begin_4378711936;
	_iter_end_4378711936:;
	if ((_51027_prec >= 0LL) && (_51027_prec < 15LL)) {
		jule::Uint _52513_shift = static_cast<jule::Uint>(_51027_prec * 4LL);
		jule::U64 _52613_extra = (_51113_mant << _52513_shift) & 1152921504606846976LL;
		_51113_mant>>=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_52613_extra | (_51113_mant & 1LL)) > 576460752303423488LL) {
			(_51113_mant)++;
		}
		_51113_mant<<=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_51113_mant & 2305843009213693952LL) != 0LL) {
			_51113_mant>>=1LL;
			(_51128_exp)++;
		}
	}
	jule::Str _53913_hex = jule::Str("0123456789abcdef", 16);
	if (_51038_fmt == 'X') {
		_53913_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_51049_neg) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'-'}));
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'0',_51038_fmt,static_cast<jule::U8>('0' + static_cast<jule::U8>((_51113_mant >> 60LL) & 1LL))}));
	_51113_mant<<=4LL;
	if ((_51027_prec < 0LL) && (_51113_mant != 0LL)) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		_iter_begin_4378725472:;
		if (!(_51113_mant != 0LL)) { goto _iter_end_4378725472; }
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_4378725472:;
		goto _iter_begin_4378725472;
		_iter_end_4378725472:;
	} else if (_51027_prec > 0LL) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _56017_i = 0LL;
		_iter_begin_4378732112:;
		if (!(_56017_i < _51027_prec)) { goto _iter_end_4378732112; }
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_4378732112:;
		(_56017_i)++;
		goto _iter_begin_4378732112;
		_iter_end_4378732112:;
	}
	jule::U8 _56813_ch = static_cast<jule::U8>(80LLU);
	if (_51038_fmt == _20383c161_lower(_51038_fmt)) {
		_56813_ch='p';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	if (_51128_exp < 0LL) {
		_56813_ch='-';
		_51128_exp=static_cast<jule::Int>((-(_51128_exp)));
	} else {
		_56813_ch='+';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	{
		if (!((_51128_exp < 100LL))) { goto _case_end_4378741456; }
		_case_begin_4378741456:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4378739216;
		_case_end_4378741456:;
		if (!((_51128_exp < 1000LL))) { goto _case_end_4378740992; }
		_case_begin_4378740992:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,100LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4378739216;
		_case_end_4378740992:;
		_case_begin_4378738400:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,1000LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_51128_exp,100LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4378739216;
		_case_end_4378738400:;
		_match_end_4378739216:;
	}
	return _51014_dst;
}



inline jule::Int _203830374_min(jule::Int _5938_a,jule::Int _59316_b) {
	if (_5938_a < _59316_b) {
		return _5938_a;
	}
	return _59316_b;
}



inline jule::Int _203830374_max(jule::Int _6008_a,jule::Int _60016_b) {
	if (_6008_a > _60016_b) {
		return _6008_a;
	}
	return _60016_b;
}



inline jule::U8 _20383c161_lower(jule::U8 _4910_c) {
	return static_cast<jule::U8>(_4910_c | 32LL);
}



inline std::tuple<jule::U64,jule::Int> _20383c161_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str("", 0)) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		if (!(((2LL <= _5435_base) && (_5435_base <= 36LL)))) { goto _case_end_4378763344; }
		goto _match_end_4378759392;
		_case_end_4378763344:;
		if (!((_5435_base == 0LL))) { goto _case_end_4378762352; }
		_case_begin_4378762352:;
		{
			_5435_base=10LL;
			if (_5423_s[0LL] == '0') {
				{
					if (!(((_5423_s.len() >= 3LL) && (_20383c161_lower(_5423_s[1LL]) == 'b')))) { goto _case_end_4378767136; }
					_case_begin_4378767136:;
					{
						_5435_base=2LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4378766112;
					_case_end_4378767136:;
					if (!(((_5423_s.len() >= 3LL) && (_20383c161_lower(_5423_s[1LL]) == 'o')))) { goto _case_end_4378767312; }
					_case_begin_4378767312:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4378766112;
					_case_end_4378767312:;
					if (!(((_5423_s.len() >= 3LL) && (_20383c161_lower(_5423_s[1LL]) == 'x')))) { goto _case_end_4378768272; }
					_case_begin_4378768272:;
					{
						_5435_base=16LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4378766112;
					_case_end_4378768272:;
					_case_begin_4378766304:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(1LL);
					}
					goto _match_end_4378766112;
					_case_end_4378766304:;
					_match_end_4378766112:;
				}
			}
		}
		goto _match_end_4378759392;
		_case_end_4378762352:;
		_case_begin_4378759488:;
		{
			return std::make_tuple(0LL,3LLU);
		}
		goto _match_end_4378759392;
		_case_end_4378759488:;
		_match_end_4378759392:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LL;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LL;
	{
		auto _match_expr{ _5435_base };
		if (!((10LL) == _match_expr)) { goto _case_end_4378780208; }
		_case_begin_4378780208:;
		{
			_9313_cutoff=1844674407370955264LL;
		}
		goto _match_end_4378761920;
		_case_end_4378780208:;
		if (!((16LL) == _match_expr)) { goto _case_end_4378781968; }
		_case_begin_4378781968:;
		{
			_9313_cutoff=1152921504606846976LL;
		}
		goto _match_end_4378761920;
		_case_end_4378781968:;
		_case_begin_4378779424:;
		{
			_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
		}
		goto _match_end_4378761920;
		_case_end_4378779424:;
		_match_end_4378761920:;
	}
	jule::U64 _10013_max_val = 0LL;
	{
		auto _match_expr{ _5450_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4378780000; }
		_case_begin_4378780000:;
		{
			_10013_max_val=4294967295LLU;
		}
		goto _match_end_4378783840;
		_case_end_4378780000:;
		if (!((64LL) == _match_expr)) { goto _case_end_4378784336; }
		_case_begin_4378784336:;
		{
			_10013_max_val=jule::MAX_U64;
		}
		goto _match_end_4378783840;
		_case_end_4378784336:;
		_match_end_4378783840:;
	}
	jule::U64 _11213_n = 0LL;
	{
		auto _range_expr = _5423_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::U8 _20383c161_c = *_range_begin;
			_iter_begin_4378786992:;
			{
				jule::U8 _11417_d = 0LL;
				{
					if (!((('0' <= _20383c161_c) && (_20383c161_c <= '9')))) { goto _case_end_4378792064; }
					_case_begin_4378792064:;
					{
						_11417_d=static_cast<jule::U8>(_20383c161_c - '0');
					}
					goto _match_end_4378789888;
					_case_end_4378792064:;
					if (!((('a' <= _20383c161_lower(_20383c161_c)) && (_20383c161_lower(_20383c161_c) <= 'z')))) { goto _case_end_4378791072; }
					_case_begin_4378791072:;
					{
						_11417_d=static_cast<jule::U8>((_20383c161_lower(_20383c161_c) - 'a') + 10LL);
					}
					goto _match_end_4378789888;
					_case_end_4378791072:;
					_case_begin_4378790016:;
					{
						return std::make_tuple(0LL,2LLU);
					}
					goto _match_end_4378789888;
					_case_end_4378790016:;
					_match_end_4378789888:;
				}
				if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
					return std::make_tuple(0LL,2LLU);
				}
				if (_11213_n >= _9313_cutoff) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
				if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_4378786992:;
			++_range_begin;
			if (_range_begin != _range_end) { _20383c161_c = *_range_begin; goto _iter_begin_4378786992; }
			_iter_end_4378786992:;
		}
	}
	return std::make_tuple(_11213_n,0LLU);
}



inline std::tuple<jule::I64,jule::Int> _20383c161_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::I64 _16562_i = jule::I64();
	jule::Int _16570_err = 0LLU;
	if (_16522_s == jule::Str("", 0)) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[0LL] == '+') {
		_16522_s=_16522_s.slice(1LL);
	} else if (_16522_s[0LL] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(1LL);
	}
	jule::Uint _18013_un = 0LL;
	std::tie(_18013_un,_16570_err) = _20383c161_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		_16570_err = _16570_err;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LL;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>((-(static_cast<jule::I64>(_1909_cutoff))));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



inline std::tuple<jule::F64,jule::Bool> _203842a5c_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_204a244ce_f64_from_bits(9223372036854775808LLU));
		}
		_4158_f = _4158_f;
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _20525c51e_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _20525c51e_mul64(_4123_man,_203842a5c_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][1LL]);
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _20525c51e_mul64(_4123_man,_203842a5c_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>(_8013_ret_mantissa & 1LL);
	_8013_ret_mantissa>>=1LL;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_204a244ce_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _203842a5c_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_204a244ce_f32_from_bits(2147483648LLU));
		}
		_11058_f = _11058_f;
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _20525c51e_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _20525c51e_mul64(_11023_man,_203842a5c_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][1LL]);
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _20525c51e_mul64(_11023_man,_203842a5c_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>(_15513_ret_mantissa & 1LL);
	_15513_ret_mantissa>>=1LL;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = static_cast<jule::F32>(_204a244ce_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _20384ee76_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	_iter_begin_4378926096:;
	if (!(_5013_i < _4613_n)) { goto _iter_end_4378926096; }
	{
		jule::U8 _5217_c = _4534_s[static_cast<jule::Int>(_5013_i)];
		if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
			_5217_c+=32LL;
		}
		if (_5217_c != _4542_prefix[static_cast<jule::Int>(_5013_i)]) {
			return _5013_i;
		}
	}
	_iter_next_4378926096:;
	(_5013_i)++;
	goto _iter_begin_4378926096;
	_iter_end_4378926096:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _20384ee76_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::Int _6834_n = jule::Int();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s == jule::Str("", 0)) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto _match_expr{ _6816_s[0LL] };
		if (!(('+') == _match_expr || ('-') == _match_expr)) { goto _case_end_4378941920; }
		_case_begin_4378941920:;
		{
			if (_6816_s[0LL] == '-') {
				_7213_sign=-1LL;
			}
			_7313_nsign=1LL;
			_6816_s=_6816_s.slice(1LL);
			goto _case_begin_4378942032;
		}
		goto _match_end_4378940880;
		_case_end_4378941920:;
		if (!(('i') == _match_expr || ('I') == _match_expr)) { goto _case_end_4378942032; }
		_case_begin_4378942032:;
		{
			jule::Int _8317_case_n = _20384ee76_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
			if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
				_8317_case_n=3LL;
			}
			if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
				_6826_f = static_cast<jule::F64>(_204ae433a_inf(_7213_sign));
				_6834_n = static_cast<jule::Int>(_7313_nsign + _6834_n);
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4378940880;
		_case_end_4378942032:;
		if (!(('n') == _match_expr || ('N') == _match_expr)) { goto _case_end_4378942160; }
		_case_begin_4378942160:;
		{
			if (_20384ee76_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
				_6826_f = static_cast<jule::F64>(_204ae433a_nan());
				_6834_n = 3LL;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4378940880;
		_case_end_4378942160:;
		_match_end_4378940880:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _20384ee76_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::Int _10340_exp = jule::Int();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '+'))) { goto _case_end_4378960128; }
		_case_begin_4378960128:;
		{
			(_10449_i)++;
		}
		goto _match_end_4378959984;
		_case_end_4378960128:;
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '-'))) { goto _case_end_4378960352; }
		_case_begin_4378960352:;
		{
			_10350_neg=true;
			(_10449_i)++;
		}
		goto _match_end_4378959984;
		_case_end_4378960352:;
		_match_end_4378959984:;
	}
	jule::U64 _11813_base = 10LL;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[static_cast<jule::Int>(_10449_i)] == '0')) && (_20383c161_lower(_10315_s[static_cast<jule::Int>(_10449_i + 1LL)]) == 'x')) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	_iter_begin_4378977600:;
	if (!(_10449_i < _10315_s.len())) { goto _iter_end_4378977600; }
	{
		jule::U8 _13413_c = _10315_s[static_cast<jule::Int>(_10449_i)];
		{
			if (!((_13413_c == '.'))) { goto _case_end_4378981760; }
			_case_begin_4378981760:;
			{
				if (_12813_sawdot) {
					goto _julec_label_loop_end;
				}
				_12813_sawdot=true;
				_13213_dp=_13013_nd;
				goto _iter_next_4378977600;
			}
			goto _match_end_4378981120;
			_case_end_4378981760:;
			if (!((('0' <= _13413_c) && (_13413_c <= '9')))) { goto _case_end_4378981888; }
			_case_begin_4378981888:;
			{
				_12913_sawdigits=true;
				if ((_13413_c == '0') && (_13013_nd == 0LL)) {
					(_13213_dp)--;
					goto _iter_next_4378977600;
				}
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=_11813_base;
					_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
					(_13113_nd_mant)++;
				} else if (_13413_c != '0') {
					_10425_trunc=true;
				}
				goto _iter_next_4378977600;
			}
			goto _match_end_4378981120;
			_case_end_4378981888:;
			if (!((((_11813_base == 16LL) && ('a' <= _20383c161_lower(_13413_c))) && (_20383c161_lower(_13413_c) <= 'f')))) { goto _case_end_4378982016; }
			_case_begin_4378982016:;
			{
				_12913_sawdigits=true;
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=16LL;
					_10325_mantissa+=static_cast<jule::U64>((_20383c161_lower(_13413_c) - 'a') + 10LL);
					(_13113_nd_mant)++;
				} else {
					_10425_trunc=true;
				}
				goto _iter_next_4378977600;
			}
			goto _match_end_4378981120;
			_case_end_4378982016:;
			_match_end_4378981120:;
		}
		goto _iter_end_4378977600;
	}
	_iter_next_4378977600:;
	(_10449_i)++;
	goto _iter_begin_4378977600;
	_iter_end_4378977600:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_20383c161_lower(_10315_s[static_cast<jule::Int>(_10449_i)]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[static_cast<jule::Int>(_10449_i)] == '+') {
			(_10449_i)++;
		} else if (_10315_s[static_cast<jule::Int>(_10449_i)] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[static_cast<jule::Int>(_10449_i)] < '0')) || (_10315_s[static_cast<jule::Int>(_10449_i)] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		_iter_begin_4379006064:;
		if (!((_10449_i < _10315_s.len()) && (('0' <= _10315_s[static_cast<jule::Int>(_10449_i)]) && (_10315_s[static_cast<jule::Int>(_10449_i)] <= '9')))) { goto _iter_end_4379006064; }
		{
			if (_20517_e < 10000LL) {
				_20517_e=static_cast<jule::Int>(((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[static_cast<jule::Int>(_10449_i)])) - '0');
			}
		}
		_iter_next_4379006064:;
		(_10449_i)++;
		goto _iter_begin_4379006064;
		_iter_end_4379006064:;
		_13213_dp+=static_cast<jule::Int>(_20517_e * _19517_esign);
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=static_cast<jule::Int>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _20384ee76_atof64_exact(jule::U64 _43317_mantissa,jule::Int _43336_exp,jule::Bool _43346_neg) {
	jule::F64 _43359_f = jule::F64();
	jule::Bool _43367_ok = jule::Bool();
	if ((_43317_mantissa >> _203830374_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_43359_f,_43367_ok);
	}
	_43359_f=static_cast<jule::F64>(_43317_mantissa);
	if (_43346_neg) {
		_43359_f=static_cast<jule::F64>((-(_43359_f)));
	}
	{
		if (!((_43336_exp == 0LL))) { goto _case_end_4379025888; }
		_case_begin_4379025888:;
		{
			_43359_f = _43359_f;
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4379026576;
		_case_end_4379025888:;
		if (!(((_43336_exp > 0LL) && (_43336_exp <= 37LL)))) { goto _case_end_4379026000; }
		_case_begin_4379026000:;
		{
			if (_43336_exp > 22LL) {
				_43359_f*=_20384ee76_F64_POW10[static_cast<jule::Int>(_43336_exp - 22LL)];
				_43336_exp=22LL;
			}
			if ((_43359_f > 1000000000000000LL) || (_43359_f < -1000000000000000LL)) {
				return std::make_tuple(_43359_f,_43367_ok);
			}
			_43359_f = static_cast<jule::F64>(_43359_f * _20384ee76_F64_POW10[static_cast<jule::Int>(_43336_exp)]);
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4379026576;
		_case_end_4379026000:;
		if (!(((_43336_exp < 0LL) && (_43336_exp >= -22LL)))) { goto _case_end_4379026128; }
		_case_begin_4379026128:;
		{
			_43359_f = static_cast<jule::F64>(jule::div(_43359_f,_20384ee76_F64_POW10[static_cast<jule::Int>((-(_43336_exp)))]));
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4379026576;
		_case_end_4379026128:;
		_match_end_4379026576:;
	}
	return std::make_tuple(_43359_f,_43367_ok);
}



inline std::tuple<jule::F64,jule::Bool> _20384ee76_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::F64 _47258_f = jule::F64();
	jule::Bool _47266_ok = jule::Bool();
	if ((_47216_mantissa >> _203830374_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (!((_47235_exp == 0LL))) { goto _case_end_4379043760; }
		_case_begin_4379043760:;
		{
			_47258_f = _47258_f;
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4379044448;
		_case_end_4379043760:;
		if (!(((_47235_exp > 0LL) && (_47235_exp <= 37LL)))) { goto _case_end_4379043872; }
		_case_begin_4379043872:;
		{
			if (_47235_exp > 22LL) {
				_47258_f*=_20384ee76_F64_POW10[static_cast<jule::Int>(_47235_exp - 22LL)];
				_47235_exp=22LL;
			}
			if ((_47258_f > 1000000000000000LL) || (_47258_f < -1000000000000000LL)) {
				return std::make_tuple(_47258_f,_47266_ok);
			}
			_47258_f = static_cast<jule::F64>(_47258_f * _20384ee76_F64_POW10[static_cast<jule::Int>(_47235_exp)]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4379044448;
		_case_end_4379043872:;
		if (!(((_47235_exp < 0LL) && (_47235_exp >= -22LL)))) { goto _case_end_4379043984; }
		_case_begin_4379043984:;
		{
			_47258_f = static_cast<jule::F64>(jule::div(_47258_f,_20384ee76_F64_POW10[static_cast<jule::Int>((-(_47235_exp)))]));
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4379044448;
		_case_end_4379043984:;
		_match_end_4379044448:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _20384ee76_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::F32 _50662_f = jule::F32();
	jule::Bool _50670_ok = jule::Bool();
	if ((_50616_mantissa >> _203830374_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (!((_50635_exp == 0LL))) { goto _case_end_4379061504; }
		_case_begin_4379061504:;
		{
			_50662_f = _50662_f;
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4379062192;
		_case_end_4379061504:;
		if (!(((_50635_exp > 0LL) && (_50635_exp <= 17LL)))) { goto _case_end_4379061616; }
		_case_begin_4379061616:;
		{
			if (_50635_exp > 10LL) {
				_50662_f*=_20384ee76_F32_POW10[static_cast<jule::Int>(_50635_exp - 10LL)];
				_50635_exp=10LL;
			}
			if ((_50662_f > 10000000LL) || (_50662_f < -10000000LL)) {
				return std::make_tuple(_50662_f,_50670_ok);
			}
			_50662_f = static_cast<jule::F32>(_50662_f * _20384ee76_F32_POW10[static_cast<jule::Int>(_50635_exp)]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4379062192;
		_case_end_4379061616:;
		if (!(((_50635_exp < 0LL) && (_50635_exp >= -10LL)))) { goto _case_end_4379061744; }
		_case_begin_4379061744:;
		{
			_50662_f = static_cast<jule::F32>(jule::div(_50662_f,_20384ee76_F32_POW10[static_cast<jule::Int>((-(_50635_exp)))]));
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4379062192;
		_case_end_4379061744:;
		_match_end_4379062192:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



inline std::tuple<jule::F64,jule::Int> _20384ee76_atof_hex(jule::Str _54213_s,_203830374_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = ((1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	_iter_begin_4379079504:;
	if (!((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL))) { goto _iter_end_4379079504; }
	{
		_54242_mantissa<<=1LL;
		(_54261_exp)--;
	}
	_iter_next_4379079504:;
	goto _iter_begin_4379079504;
	_iter_end_4379079504:;
	if (_54282_trunc) {
		_54242_mantissa|=1LL;
	}
	_iter_begin_4379084560:;
	if (!((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL)) { goto _iter_end_4379084560; }
	{
		_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
		(_54261_exp)++;
	}
	_iter_next_4379084560:;
	goto _iter_begin_4379084560;
	_iter_end_4379084560:;
	_iter_begin_4379083968:;
	if (!((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL)))) { goto _iter_end_4379083968; }
	{
		_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
		(_54261_exp)++;
	}
	_iter_next_4379083968:;
	goto _iter_begin_4379083968;
	_iter_end_4379083968:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LL;
	_57413_round|=static_cast<jule::U64>(_54242_mantissa & 1LL);
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LL;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=static_cast<jule::Int>(_5439_max_exp + 1LL);
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & ((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Int>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _203830374_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_204a244ce_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_204a244ce_f64_from_bits(_59613_bits)),_58913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _20384ee76_atof32(jule::Str _60711_s) {
	jule::F32 _60721_f = jule::F32();
	jule::Int _60733_n = jule::Int();
	jule::Int _60745_err = 0LLU;
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _20384ee76_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60733_n = _60919__n;
			_60745_err = 0LLU;
			return std::make_tuple(_60721_f,_60733_n,_60745_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _20384ee76_read_float(_60711_s);
	_60733_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60733_n = _60733_n;
		_60745_err = 2LLU;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0LL;
		std::tie(_62217_ff,_60745_err) = _20384ee76_atof_hex(_60711_s.slice(0LL,static_cast<jule::Int>(_60733_n)),_203830374_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		_60733_n = _60733_n;
		_60745_err = _60745_err;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _20384ee76_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _203842a5c_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
			jule::F32 _64421_f_up = 0LL;
			std::tie(_64421_f_up,_61550_ok) = _203842a5c_eisel_lemire32(static_cast<jule::U64>(_61510_mantissa + 1LL),_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
		}
	}
	_2047bec19_Decimal _65313_d = _2047bec19_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,static_cast<jule::Int>(_60733_n)))))) {
		_60721_f = 0LL;
		_60733_n = _60733_n;
		_60745_err = 2LLU;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_203830374_F32_INFO);
	_60721_f=static_cast<jule::F32>(_204a244ce_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60745_err=1LLU;
	}
	_60721_f = _60721_f;
	_60733_n = _60733_n;
	_60745_err = _60745_err;
	return std::make_tuple(_60721_f,_60733_n,_60745_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _20384ee76_atof64(jule::Str _66511_s) {
	jule::F64 _66525_f = jule::F64();
	jule::Int _66537_n = jule::Int();
	jule::Int _66545_err = 0LLU;
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _20384ee76_special(_66511_s);
		if (_66723_ok) {
			_66525_f = _66714_val;
			_66537_n = _66719__n;
			_66545_err = 0LLU;
			return std::make_tuple(_66525_f,_66537_n,_66545_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _20384ee76_read_float(_66511_s);
	_66537_n=_67342__n;
	if ((!(_67350_ok))) {
		_66525_f = 0LL;
		_66537_n = _66537_n;
		_66545_err = 2LLU;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	if (_67337_hex) {
		std::tie(_66525_f,_66545_err) = _20384ee76_atof_hex(_66511_s.slice(0LL,static_cast<jule::Int>(_66537_n)),_203830374_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		_66525_f = _66525_f;
		_66537_n = _66537_n;
		_66545_err = _66545_err;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66525_f,_67350_ok) = _20384ee76_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
		}
		std::tie(_66525_f,_67350_ok) = _203842a5c_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
			jule::F64 _70121_f_up = 0LL;
			std::tie(_70121_f_up,_67350_ok) = _203842a5c_eisel_lemire64(static_cast<jule::U64>(_67310_mantissa + 1LL),_67320_exp,_67325_neg);
			if (_67350_ok && (_66525_f == _70121_f_up)) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
		}
	}
	_2047bec19_Decimal _71013_d = _2047bec19_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,static_cast<jule::Int>(_66537_n)))))) {
		_66525_f = 0LL;
		_66537_n = _66537_n;
		_66545_err = 2LLU;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_203830374_F64_INFO);
	_66525_f=static_cast<jule::F64>(_204a244ce_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66545_err=1LLU;
	}
	_66525_f = _66525_f;
	_66537_n = _66537_n;
	_66545_err = _66545_err;
	return std::make_tuple(_66525_f,_66537_n,_66545_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _20384ee76_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _20384ee76_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	jule::F64 _72810_f;
	jule::Int _72813_n;
	jule::Int _72816_err;
	std::tie(_72810_f,_72813_n,_72816_err) = _20384ee76_atof64(_72223_s);
	return std::make_tuple(_72810_f,_72813_n,_72816_err);
}



inline std::tuple<jule::F64,jule::Int> _20384ee76_parse_float(jule::Str _75620_s,jule::Int _75628_bit_size) {
	jule::F64 _75710_f;
	jule::Int _75713_n;
	jule::Int _75716_err;
	std::tie(_75710_f,_75713_n,_75716_err) = _20384ee76_parse_float_prefix(_75620_s,_75628_bit_size);
	if ((_75713_n != _75620_s.len()) && ((_75716_err == 0LLU) || (_75716_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75710_f,_75716_err);
}



inline void _2047bd4cb_ryu_ftoa_fixed32(_203830374_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42));
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37));
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _20525c51e_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_2047bd4cb_mul_by_log2_log10(static_cast<jule::Int>(_6213_e2 + 24LL)))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _2047bd4cb_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49));
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _2047bd4cb_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LL;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_2047bd4cb_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _2047bd4cb_ryu_ftoa_fixed64(_203830374_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38));
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _20525c51e_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::Uint>(55LL - _1349_b));
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_2047bd4cb_mul_by_log2_log10(static_cast<jule::Int>(_13313_e2 + 54LL)))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _2047bd4cb_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _2047bd4cb_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LL;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_2047bd4cb_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _2047bd4cb_format_decimal(_203830374_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _2047bd4cb_U64_POW10[static_cast<jule::Int>(_20490_prec)];
	jule::Int _20613_trimmed = 0LL;
	_iter_begin_4379267888:;
	if (!(_20445_m >= _2059_max)) { goto _iter_end_4379267888; }
	{
		jule::U64 _20814_a = jule::div(_20445_m,10LL);
		jule::U64 _20817_b = jule::mod(_20445_m,10LL);
		std::tie(_20814_a,_20817_b) = std::make_tuple(jule::div(_20445_m,10LL),jule::mod(_20445_m,10LL));
		_20445_m=_20814_a;
		(_20613_trimmed)++;
		if (_20817_b > 5LL) {
			_20474_round_up=true;
		} else if (_20817_b < 5LL) {
			_20474_round_up=false;
		} else {
			_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
		}
		if (_20817_b != 0LL) {
			_20457_trunc=true;
		}
	}
	_iter_next_4379267888:;
	goto _iter_begin_4379267888;
	_iter_end_4379267888:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m = jule::div(_20445_m,10LL);
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	_iter_begin_4379268512:;
	if (!(_23513_v >= 100LL)) { goto _iter_end_4379268512; }
	{
		jule::U64 _23717_v1 = 0LL;
		jule::U64 _23817_v2 = 0LL;
		if ((_23513_v >> 32LL) == 0LL) {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(jule::mod(static_cast<jule::U32>(_23513_v),100LL)));
		} else {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(_23513_v,100LL)),static_cast<jule::U64>(jule::mod(_23513_v,100LL)));
		}
		_23313_n-=2LL;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
		_23513_v=_23717_v1;
	}
	_iter_next_4379268512:;
	goto _iter_begin_4379268512;
	_iter_end_4379268512:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	_iter_begin_4379302496:;
	if (!(_20424_d._field_d[static_cast<jule::Int>(_20424_d._field_nd - 1LL)] == '0')) { goto _iter_end_4379302496; }
	{
		(_20424_d._field_nd)--;
		(_20613_trimmed)++;
	}
	_iter_next_4379302496:;
	goto _iter_begin_4379302496;
	_iter_end_4379302496:;
	_20424_d._field_dp=static_cast<jule::Int>(_20424_d._field_nd + _20613_trimmed);
}



inline void _2047bd4cb_ryu_ftoa_shortest(_203830374_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_203830374_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_20525c51e_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_2047bd4cb_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _2047bd4cb_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_2047bd4cb_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _2047bd4cb_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LL;
	jule::U64 _28813_dc = 0LL;
	jule::U64 _28913_du = 0LL;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _203830374_F32_INFO) {
		jule::U32 _29417_dl32 = 0LL;
		jule::U32 _29517_dc32 = 0LL;
		jule::U32 _29617_du32 = 0LL;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _2047bd4cb_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _2047bd4cb_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _2047bd4cb_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _2047bd4cb_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _2047bd4cb_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _2047bd4cb_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_2047bd4cb_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_2047bd4cb_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_2047bd4cb_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LL;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LL;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LL;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_2047bd4cb_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::Int _2047bd4cb_mul_by_log2_log10(jule::Int _38322_x) {
	return static_cast<jule::Int>((_38322_x * 78913LL) >> 18LL);
}



inline jule::Int _2047bd4cb_mul_by_log10_log2(jule::Int _39322_x) {
	return static_cast<jule::Int>((_39322_x * 108853LL) >> 15LL);
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _2047bd4cb_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_203830374_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::Int _40274_e2 = jule::Int();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 1LL);
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 2LL);
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _2047bd4cb_ryu_digits(_203830374_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _2047bd4cb_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _2047bd4cb_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _2047bd4cb_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_2047bd4cb_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_2047bd4cb_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		_iter_begin_4379401792:;
		if (!(_43517_v > 0LL)) { goto _iter_end_4379401792; }
		{
			jule::U32 _43718_v1 = jule::div(_43517_v,10LL);
			jule::U32 _43722_v2 = jule::mod(_43517_v,10LL);
			std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::div(_43517_v,10LL),jule::mod(_43517_v,10LL));
			_43517_v=_43718_v1;
			(_43417_n)--;
			_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
		}
		_iter_next_4379401792:;
		goto _iter_begin_4379401792;
		_iter_end_4379401792:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_2047bd4cb_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::Int>(_41520_d._field_nd + 8LL));
	}
	_iter_begin_4379404016:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[static_cast<jule::Int>(_41520_d._field_nd - 1LL)] == '0'))) { goto _iter_end_4379404016; }
	{
		(_41520_d._field_nd)--;
	}
	_iter_next_4379404016:;
	goto _iter_begin_4379404016;
	_iter_end_4379404016:;
	_iter_begin_4379401520:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0'))) { goto _iter_end_4379401520; }
	{
		(_41520_d._field_nd)--;
		(_41520_d._field_dp)--;
		_41520_d._field_d=_41520_d._field_d.slice(1LL);
	}
	_iter_next_4379401520:;
	goto _iter_begin_4379401520;
	_iter_end_4379401520:;
}



inline void _2047bd4cb_ryu_digits32(_203830374_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=static_cast<jule::Int>(_46166_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	_iter_begin_4379423264:;
	if (!(_46121_upper > 0LL)) { goto _iter_end_4379423264; }
	{
		jule::U32 _47613_l = jule::div(_46043_lower + 9LL,10LL);
		jule::U32 _47718_c = jule::div(_46059_central,10LL);
		jule::U32 _47725_cdigit = jule::mod(_46059_central,10LL);
		std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::div(_46059_central,10LL),jule::mod(_46059_central,10LL));
		jule::U32 _47813_u = jule::div(_46121_upper,10LL);
		if (_47613_l > _47813_u) {
			goto _iter_end_4379423264;
		}
		if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
			(_47718_c)++;
			_47725_cdigit=0LL;
			_46151_cup=false;
		}
		(_46613_trimmed)++;
		_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
		_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
		std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
	}
	_iter_next_4379423264:;
	goto _iter_begin_4379423264;
	_iter_end_4379423264:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	_iter_begin_4379427248:;
	if (!(_51813_n > _46022_d._field_nd)) { goto _iter_end_4379427248; }
	{
		jule::U32 _52014_v1 = jule::div(_51713_v,100LL);
		jule::U32 _52018_v2 = jule::mod(_51713_v,100LL);
		std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::div(_51713_v,100LL),jule::mod(_51713_v,100LL));
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
		_46022_d._field_d[static_cast<jule::Int>(_51813_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
		_51813_n-=2LL;
		_51713_v=_52014_v1;
	}
	_iter_next_4379427248:;
	goto _iter_begin_4379427248;
	_iter_end_4379427248:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=static_cast<jule::Int>(_46166_endindex + 1LL);
	_46022_d._field_dp=static_cast<jule::Int>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _2047bd4cb_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::Int _54262_resE = jule::Int();
	jule::Bool _54273_exact = jule::Bool();
	if (_54241_q == 0LL) {
		_54251_resM = static_cast<jule::U32>(_54220_m << 6LL);
		_54262_resE = static_cast<jule::Int>(_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44));
	}
	jule::U64 _55113_pow = _203842a5c_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_54241_q - -348LL)][1LL];
	if (_54241_q < 0LL) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _20525c51e_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_2047bd4cb_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _2047bd4cb_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::Int _57063_resE = jule::Int();
	jule::Bool _57074_exact = jule::Bool();
	if (_57042_q == 0LL) {
		_57052_resM = static_cast<jule::U64>(_57021_m << 8LL);
		_57063_resE = static_cast<jule::Int>(_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45));
	}
	jule::Array<jule::U64,2> _57913_pow = _203842a5c_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_57042_q - -348LL)];
	if (_57042_q < 0LL) {
		_57913_pow[0LL]+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((_2047bd4cb_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _20525c51e_mul64(_57021_m,_57913_pow[0LL]);
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _20525c51e_mul64(_57021_m,_57913_pow[1LL]);
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _20525c51e_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>((_58814_h1 << 9LL) | (_58910_mid >> 55LL));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _2047bd4cb_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	_iter_begin_4379496752:;
	if (!(_59813_i < _59434_k)) { goto _iter_end_4379496752; }
	{
		if (jule::mod(_59426_m,5LL) != 0LL) {
			return false;
		}
		_59426_m = jule::div(_59426_m,5LL);
	}
	_iter_next_4379496752:;
	(_59813_i)++;
	goto _iter_begin_4379496752;
	_iter_end_4379496752:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _2047bd4cb_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::div(_61014_x,1000000000LL)),static_cast<jule::U32>(jule::mod(_61014_x,1000000000LL)));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _20525c51e_mul64(static_cast<jule::U64>(_61014_x >> 1LL),9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1000000000LL)));
}



inline jule::Int _2047bec19_digit_zero(jule::Slice<jule::U8> _26519_dst) {
	{
		auto _range_expr = _26519_dst;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2047bec19_i = 0;
			_iter_begin_4379506304:;
			{
				_26519_dst[static_cast<jule::Int>(_2047bec19_i)]='0';
			}
			_iter_next_4379506304:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2047bec19_i; goto _iter_begin_4379506304; }
			_iter_end_4379506304:;
		}
	}
	return static_cast<jule::I64>(_26519_dst.len());
}



inline void _2047bec19_trim(_2047bec19_Decimal& _27514_a) {
	_iter_begin_4379509552:;
	if (!((_27514_a._field_nd > 0LL) && (_27514_a._field_d[static_cast<jule::Int>(_27514_a._field_nd - 1LL)] == '0'))) { goto _iter_end_4379509552; }
	{
		(_27514_a._field_nd)--;
	}
	_iter_next_4379509552:;
	goto _iter_begin_4379509552;
	_iter_end_4379509552:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



inline void _2047bec19_right_shift(_2047bec19_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LL;
	_iter_begin_4379518320:;
	if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_4379518320; }
	{
		if (_28613_r >= _28521_a._field_nd) {
			if (_29013_n == 0LL) {
				_28521_a._field_nd=0LL;
				return;
			}
			_iter_begin_4379524368:;
			if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_4379524368; }
			{
				_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
				(_28613_r)++;
			}
			_iter_next_4379524368:;
			goto _iter_begin_4379524368;
			_iter_end_4379524368:;
			goto _iter_end_4379518320;
		}
		jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _30413_c) - '0');
	}
	_iter_next_4379518320:;
	(_28613_r)++;
	goto _iter_begin_4379518320;
	_iter_end_4379518320:;
	_28521_a._field_dp-=static_cast<jule::Int>(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	_iter_begin_4379531104:;
	if (!(_28613_r < _28521_a._field_nd)) { goto _iter_end_4379531104; }
	{
		jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		jule::Uint _31413_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_31413_dig + '0');
		(_28713_w)++;
		_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _31313_c) - '0');
	}
	_iter_next_4379531104:;
	(_28613_r)++;
	goto _iter_begin_4379531104;
	_iter_end_4379531104:;
	_iter_begin_4379538032:;
	if (!(_29013_n > 0LL)) { goto _iter_end_4379538032; }
	{
		jule::Uint _32313_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		if (_28713_w < 800LL) {
			_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_32313_dig + '0');
			(_28713_w)++;
		} else if (_32313_dig > 0LL) {
			_28521_a._field_trunc=true;
		}
		_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
	}
	_iter_next_4379538032:;
	goto _iter_begin_4379538032;
	_iter_end_4379538032:;
	_28521_a._field_nd=_28713_w;
	_2047bec19_trim(_28521_a);
}



inline jule::Bool _2047bec19_prefix_is_less_than(jule::Slice<jule::U8> _33924_b,jule::Str _33935_s) {
	jule::Int _34013_i = 0LL;
	_iter_begin_4379546912:;
	if (!(_34013_i < _33935_s.len())) { goto _iter_end_4379546912; }
	{
		if (_34013_i >= _33924_b.len()) {
			return true;
		}
		if (_33924_b[static_cast<jule::Int>(_34013_i)] != _33935_s[static_cast<jule::Int>(_34013_i)]) {
			return _33924_b[static_cast<jule::Int>(_34013_i)] < _33935_s[static_cast<jule::Int>(_34013_i)];
		}
	}
	_iter_next_4379546912:;
	(_34013_i)++;
	goto _iter_begin_4379546912;
	_iter_end_4379546912:;
	return false;
}



inline void _2047bec19_left_shift(_2047bec19_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _2047bec19_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_2047bec19_prefix_is_less_than(_35320_a._field_d.slice(0LL,static_cast<jule::Int>(_35320_a._field_nd)),_2047bec19_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LL;
	(_35913_r)--;
	_iter_begin_4379564144:;
	if (!(_35913_r >= 0LL)) { goto _iter_end_4379564144; }
	{
		_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[static_cast<jule::Int>(_35913_r)]) - '0') << _35332_k);
		jule::Uint _36713_quo = jule::div(_36313_n,10LL);
		jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_36813_rem + '0');
		} else if (_36813_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_36713_quo;
	}
	_iter_next_4379564144:;
	(_35913_r)--;
	goto _iter_begin_4379564144;
	_iter_end_4379564144:;
	_iter_begin_4379574064:;
	if (!(_36313_n > 0LL)) { goto _iter_end_4379574064; }
	{
		jule::Uint _38013_quo = jule::div(_36313_n,10LL);
		jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_38113_rem + '0');
		} else if (_38113_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_38013_quo;
	}
	_iter_next_4379574064:;
	goto _iter_begin_4379574064;
	_iter_end_4379574064:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_2047bec19_trim(_35320_a);
}



inline jule::Bool _2047bec19_should_round_up(_2047bec19_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[static_cast<jule::Int>(_40033_nd)] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (jule::mod(_40021_a._field_d[static_cast<jule::Int>(_40033_nd - 1LL)] - '0',2LL) != 0LL);
	}
	return _40021_a._field_d[static_cast<jule::Int>(_40033_nd)] >= '5';
}



inline jule::Str _2049bd7b9_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _2049bd7b9_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _2049bd7b9_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _2049bd7b9_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _2049bd7b9_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _2049bd7b9_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



inline jule::Str _2049bd7b9_itoa(jule::Int _8213_i) {
	return _2049bd7b9_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



inline jule::Str _2049bd7b9_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(static_cast<jule::Int>(_8510_i),static_cast<jule::Int>(_8510_i + 1LL));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(static_cast<jule::Int>(_8510_i * 2LL),static_cast<jule::Int>((_8510_i * 2LL) + 2LL));
}



inline jule::Bool _2049bd7b9_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _2049bd7b9_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	jule::Str _9992_s = jule::Str();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23));
	}
	jule::Array<jule::U8,65> _10513_a = jule::Array<jule::U8,65>({});
	jule::Int _10613_i = 65LL;
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			_iter_begin_4379623392:;
			if (!(_9934_u >= 1000000000LL)) { goto _iter_end_4379623392; }
			{
				jule::U64 _12521_q = jule::div(_9934_u,1000000000LL);
				jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1000000000LL));
				jule::Int _12725_j = 4LL;
				_iter_begin_4379625456:;
				if (!(_12725_j > 0LL)) { goto _iter_end_4379625456; }
				{
					jule::Uint _12925_is = jule::mod(_12625_us,100LL) * 2LL;
					_12625_us = jule::div(_12625_us,100LL);
					_10613_i-=2LL;
					_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
					_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
				}
				_iter_next_4379625456:;
				(_12725_j)--;
				goto _iter_begin_4379625456;
				_iter_end_4379625456:;
				(_10613_i)--;
				_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
				_9934_u=_12521_q;
			}
			_iter_next_4379623392:;
			goto _iter_begin_4379623392;
			_iter_end_4379623392:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		_iter_begin_4379626304:;
		if (!(_14717_us >= 100LL)) { goto _iter_end_4379626304; }
		{
			jule::Uint _14917_is = jule::mod(_14717_us,100LL) * 2LL;
			_14717_us = jule::div(_14717_us,100LL);
			_10613_i-=2LL;
			_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
			_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
		}
		_iter_next_4379626304:;
		goto _iter_begin_4379626304;
		_iter_end_4379626304:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_2049bd7b9_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_20525c51e_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		_iter_begin_4379653360:;
		if (!(_9934_u >= _17313_b)) { goto _iter_end_4379653360; }
		{
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
			_9934_u>>=_17213_shift;
		}
		_iter_next_4379653360:;
		goto _iter_begin_4379653360;
		_iter_end_4379653360:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		_iter_begin_4379669168:;
		if (!(_9934_u >= _18513_b)) { goto _iter_end_4379669168; }
		{
			(_10613_i)--;
			jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
			_9934_u=_19117_q;
		}
		_iter_next_4379669168:;
		goto _iter_begin_4379669168;
		_iter_end_4379669168:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]='-';
	}
	if (_9964_append_) {
		_9981_d=jule::append(_9917_dst,_10513_a.slice(static_cast<jule::Int>(_10613_i)));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(static_cast<jule::Int>(_10613_i)));
	return std::make_tuple(_9981_d,_9992_s);
}



inline void _205094587_push_opt_level(jule::Int _3223_level) {
	{
		auto _match_expr{ _3223_level };
		if (!((0LLU) == _match_expr)) { goto _case_end_4379845408; }
		_case_begin_4379845408:;
		{
			_205094587_OPTIMIZATIONS=nullptr;
		}
		goto _match_end_4379843888;
		_case_end_4379845408:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4379845520; }
		_case_begin_4379845520:;
		{
			_205094587_OPTIMIZATIONS=jule::append(_205094587_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10),jule::Str("--opt-deadcode", 14),jule::Str("--opt-append", 12),jule::Str("--opt-math", 10),jule::Str("--opt-access", 12)}));
		}
		goto _match_end_4379843888;
		_case_end_4379845520:;
		_case_begin_4379844368:;
		{
			return;
		}
		goto _match_end_4379843888;
		_case_end_4379844368:;
		_match_end_4379843888:;
	}
}



inline jule::Bool _205094587_is_opt_enabled(jule::Str _5123_opt) {
	{
		auto _range_expr = _205094587_OPTIMIZATIONS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _205094587_oopt = *_range_begin;
			_iter_begin_4379844960:;
			{
				if (_5123_opt == _205094587_oopt) {
					return true;
				}
			}
			_iter_next_4379844960:;
			++_range_begin;
			if (_range_begin != _range_end) { _205094587_oopt = *_range_begin; goto _iter_begin_4379844960; }
			_iter_end_4379844960:;
		}
	}
	return false;
}



inline jule::Int _2050be293_get_last_fs_error(void) {
	jule::Int _739_err = _203934775_get_last_errno();
	{
		auto _match_expr{ _739_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4379890448; }
		_case_begin_4379890448:;
		{
			return 1LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379890448:;
		if (!((5LL) == _match_expr)) { goto _case_end_4379890048; }
		_case_begin_4379890048:;
		{
			return 2LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379890048:;
		if (!((40LL) == _match_expr)) { goto _case_end_4379890160; }
		_case_begin_4379890160:;
		{
			return 3LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379890160:;
		if (!((36LL) == _match_expr)) { goto _case_end_4379890272; }
		_case_begin_4379890272:;
		{
			return 4LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379890272:;
		if (!((2LL) == _match_expr)) { goto _case_end_4379889328; }
		_case_begin_4379889328:;
		{
			return 5LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379889328:;
		if (!((20LL) == _match_expr)) { goto _case_end_4379889440; }
		_case_begin_4379889440:;
		{
			return 6LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379889440:;
		if (!((75LL) == _match_expr)) { goto _case_end_4379889552; }
		_case_begin_4379889552:;
		{
			return 7LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379889552:;
		if (!((9LL) == _match_expr)) { goto _case_end_4379890656; }
		_case_begin_4379890656:;
		{
			return 8LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379890656:;
		if (!((24LL) == _match_expr)) { goto _case_end_4379890768; }
		_case_begin_4379890768:;
		{
			return 9LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379890768:;
		if (!((23LL) == _match_expr)) { goto _case_end_4379890880; }
		_case_begin_4379890880:;
		{
			return 10LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379890880:;
		if (!((12LL) == _match_expr)) { goto _case_end_4379891616; }
		_case_begin_4379891616:;
		{
			return 11LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379891616:;
		if (!((17LL) == _match_expr)) { goto _case_end_4379891728; }
		_case_begin_4379891728:;
		{
			return 12LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379891728:;
		if (!((4LL) == _match_expr)) { goto _case_end_4379891840; }
		_case_begin_4379891840:;
		{
			return 13LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379891840:;
		if (!((22LL) == _match_expr)) { goto _case_end_4379891952; }
		_case_begin_4379891952:;
		{
			return 14LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379891952:;
		if (!((21LL) == _match_expr)) { goto _case_end_4379892064; }
		_case_begin_4379892064:;
		{
			return 15LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379892064:;
		if (!((63LL) == _match_expr)) { goto _case_end_4379892176; }
		_case_begin_4379892176:;
		{
			return 16LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379892176:;
		if (!((28LL) == _match_expr)) { goto _case_end_4379892288; }
		_case_begin_4379892288:;
		{
			return 17LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379892288:;
		if (!((6LL) == _match_expr)) { goto _case_end_4379892400; }
		_case_begin_4379892400:;
		{
			return 18LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379892400:;
		if (!((30LL) == _match_expr)) { goto _case_end_4379892512; }
		_case_begin_4379892512:;
		{
			return 19LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379892512:;
		if (!((11LL) == _match_expr)) { goto _case_end_4379892624; }
		_case_begin_4379892624:;
		{
			return 20LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379892624:;
		if (!((26LL) == _match_expr || (16LL) == _match_expr)) { goto _case_end_4379892736; }
		_case_begin_4379892736:;
		{
			return 21LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379892736:;
		if (!((27LL) == _match_expr)) { goto _case_end_4379892848; }
		_case_begin_4379892848:;
		{
			return 22LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379892848:;
		if (!((32LL) == _match_expr)) { goto _case_end_4379892960; }
		_case_begin_4379892960:;
		{
			return 23LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379892960:;
		if (!((34LL) == _match_expr)) { goto _case_end_4379893072; }
		_case_begin_4379893072:;
		{
			return 24LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379893072:;
		if (!((29LL) == _match_expr)) { goto _case_end_4379893200; }
		_case_begin_4379893200:;
		{
			return 25LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379893200:;
		if (!((105LL) == _match_expr)) { goto _case_end_4379893328; }
		_case_begin_4379893328:;
		{
			return 26LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379893328:;
		if (!((74LL) == _match_expr)) { goto _case_end_4379893456; }
		_case_begin_4379893456:;
		{
			return 27LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379893456:;
		if (!((39LL) == _match_expr)) { goto _case_end_4379893584; }
		_case_begin_4379893584:;
		{
			return 28LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379893584:;
		_case_begin_4379888880:;
		{
			return 0LLU;
		}
		goto _match_end_4379888544;
		_case_end_4379888880:;
		_match_end_4379888544:;
	}
}



inline std::tuple<jule::Ref<_20522c3ce_File>,jule::Int> _205171686_open(jule::Str _6113_path,jule::Int _6124_flag,jule::Int _6137_mode) {
	jule::Int _629_handle = _203935853_open((&(_6113_path[0LL])),static_cast<jule::Int>(_6124_flag),_6137_mode);
	if (_629_handle == -1LL) {
		return std::make_tuple(_20522c3ce_File::_static_method_new(0LLU),_2050be293_get_last_fs_error());
	}
	return std::make_tuple(_20522c3ce_File::_static_method_new(static_cast<jule::Uintptr>(_629_handle)),0LLU);
}



inline jule::Int _205171686_remove_file(jule::Str _7320_path) {
	if (_203935853_unlink((&(_7320_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _2050be293_get_last_fs_error();
}



inline std::tuple<jule::Ref<_20537ab26_Status>,jule::Int> _205127c47_stat(jule::Str _1113_path) {
	jule::Ref<_20537ab26_Status> _1126_s = jule::Ref<_20537ab26_Status>();
	jule::Int _1138_err = 0LLU;
	struct stat _1213_handle = (struct stat){};
	jule::Int _139_code = _203935853_stat((&(_1113_path[0LL])),(&(_1213_handle)));
	if (_139_code != -1LL) {
		_1138_err=0LLU;
		_1126_s=jule::new_struct<_20537ab26_Status>(new( std::nothrow ) _20537ab26_Status(static_cast<jule::Uint>(_1213_handle.st_mode),static_cast<jule::Uint>(_1213_handle.st_size)));
	} else {
		_1138_err=_2050be293_get_last_fs_error();
	}
	return std::make_tuple(_1126_s,_1138_err);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Int> _20522c3ce_read_file(jule::Str _8518_path) {
	jule::Ref<_20537ab26_Status> _8610_s;
	jule::Int _8617_err;
	std::tie(_8610_s,_8617_err) = _205127c47_stat(_8518_path);
	if (_8617_err != 0LLU) {
		return std::make_tuple(nullptr,_8617_err);
	}
	if ((!(_8610_s->_method_is_reg()))) {
		return std::make_tuple(nullptr,15LLU);
	}
	if (_8610_s->_field_size == 0LL) {
		return std::make_tuple(jule::Slice<jule::U8>::alloc(0LL),0LLU);
	}
	jule::Ref<_20522c3ce_File> _9914_f;
	std::tie(_9914_f,_8617_err) = _205171686_open(_8518_path,0LL,0LL);
	if (_8617_err != 0LLU) {
		return std::make_tuple(nullptr,_8617_err);
	}
	__JULE_DEFER({
		_9914_f->_method_close();
	});
	jule::Slice<jule::U8> _10513_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_8610_s->_field_size));
	jule::Int _10610_n;
	std::tie(_10610_n,_8617_err) = _9914_f->_method_read(_10513_buff);
	if (_8617_err != 0LLU) {
		return std::make_tuple(nullptr,_8617_err);
	}
	return std::make_tuple(_10513_buff.slice(0LL,static_cast<jule::Int>(_10610_n)),0LLU);
}



inline std::tuple<jule::Slice<jule::Ref<_20522b4aa_DirEntry>>,jule::Int> _20539ca9e_read_dir(jule::Str _1517_path) {
	jule::Slice<jule::Ref<_20522b4aa_DirEntry>> _1530_dirents = jule::Slice<jule::Ref<_20522b4aa_DirEntry>>();
	jule::Int _1552_err = 0LLU;
	DIR* _1613_dir = _203935853_opendir((&(_1517_path[0LL])));
	if (_1613_dir == nullptr) {
		_1552_err=_2050be293_get_last_fs_error();
		return std::make_tuple(_1530_dirents,_1552_err);
	}
	_iter_begin_4379972160:;
	{
		struct dirent* _2213_dirent = _203935853_readdir(_1613_dir);
		if (_2213_dirent == nullptr) {
			goto _iter_end_4379972160;
		}
		jule::Str _2613_name = _2045e2c90_byte_ptr_to_str(((jule::U8*)(_2213_dirent->d_name)));
		jule::Ref<_20537ab26_Status> _2718_stat;
		jule::Int _2724_serr;
		std::tie(_2718_stat,_2724_serr) = _205127c47_stat(_203896264_join(jule::Slice<jule::Str>({_1517_path,_2613_name})));
		if (_2724_serr != 0LLU) {
			_1552_err=_2724_serr;
			_1530_dirents=nullptr;
			goto _iter_end_4379972160;
		}
		_1530_dirents=jule::append(_1530_dirents,jule::Slice<jule::Ref<_20522b4aa_DirEntry>>({jule::new_struct<_20522b4aa_DirEntry>(new( std::nothrow ) _20522b4aa_DirEntry(_2613_name,_2718_stat))}));
	}
	_iter_next_4379972160:;
	goto _iter_begin_4379972160;
	_iter_end_4379972160:;
	_203935853_closedir(_1613_dir);
	return std::make_tuple(_1530_dirents,_1552_err);
}



inline jule::Int _20539ca9e_create_dir(jule::Str _4519_path) {
	if (_203935853_mkdir((&(_4519_path[0LL])),448LL) == 0LL) {
		return 0LLU;
	}
	return _2050be293_get_last_fs_error();
}



inline jule::Int _20539ca9e_remove_dir(jule::Str _5819_path) {
	if (_203935853_rmdir((&(_5819_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _2050be293_get_last_fs_error();
}



inline jule::Bool _205583b75_is_graphic(jule::I32 _5619_r) {
	if (static_cast<jule::U32>(_5619_r) <= 255LL) {
		return (_20548cac3__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_5619_r))] & 144LL) != 0LL;
	}
	return _205583b75_is_in(_5619_r,_205583b75_GRAPHIC_RANGES);
}



inline jule::Bool _205583b75_is_in(jule::I32 _6614_r,jule::Slice<jule::Ref<_20548c650_RangeTable>> _6623_ranges) {
	{
		auto _range_expr = _6623_ranges;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_20548c650_RangeTable> _205583b75_inside = *_range_begin;
			_iter_begin_4383802640:;
			{
				if (_20548c650_is(_205583b75_inside,_6614_r)) {
					return true;
				}
			}
			_iter_next_4383802640:;
			++_range_begin;
			if (_range_begin != _range_end) { _205583b75_inside = *_range_begin; goto _iter_begin_4383802640; }
			_iter_end_4383802640:;
		}
	}
	return false;
}



inline jule::Bool _205583b75_is_letter(jule::I32 _7618_r) {
	if (static_cast<jule::U32>(_7618_r) <= 255LL) {
		return (_20548cac3__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_7618_r))] & 96LL) != 0LL;
	}
	return _20548c650_is_excluding_latin(_20548cac3_LETTER,_7618_r);
}



inline jule::Bool _205583b75_is_number(jule::I32 _8418_r) {
	if (static_cast<jule::U32>(_8418_r) <= 255LL) {
		return (_20548cac3__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_8418_r))] & 4LL) != 0LL;
	}
	return _20548c650_is_excluding_latin(_20548cac3_NUMBER,_8418_r);
}



inline jule::Bool _205583b75_is_punct(jule::I32 _9217_r) {
	if (static_cast<jule::U32>(_9217_r) <= 255LL) {
		return (_20548cac3__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_9217_r))] & 2LL) != 0LL;
	}
	return _20548c650_is(_20548cac3_PUNCT,_9217_r);
}



inline jule::Bool _205583b75_is_space(jule::I32 _10717_r) {
	if (static_cast<jule::U32>(_10717_r) <= 255LL) {
		{
			auto _match_expr{ _10717_r };
			if (!(('\t') == _match_expr || ('\n') == _match_expr || ('\v') == _match_expr || ('\f') == _match_expr || ('\r') == _match_expr || (' ') == _match_expr || (133LL) == _match_expr || (160LL) == _match_expr)) { goto _case_end_4383819184; }
			_case_begin_4383819184:;
			{
				return true;
			}
			goto _match_end_4383818704;
			_case_end_4383819184:;
			_match_end_4383818704:;
		}
		return false;
	}
	return _20548c650_is_excluding_latin(_20548cac3_WHITE_SPACE,_10717_r);
}



inline jule::Bool _2062a7aeb_is_digit(jule::I32 _3917_r) {
	if (_3917_r <= 255LL) {
		return ('0' <= _3917_r) && (_3917_r <= '9');
	}
	return _20548c650_is_excluding_latin(_20548cac3_DIGIT,_3917_r);
}



inline std::tuple<jule::I32,jule::Bool> _20548c650___to(jule::Int _1259_case,jule::I32 _12520_r,jule::Slice<_20548c650_CaseRange> _12529_case_range) {
	jule::I32 _12556_mapped_rune = jule::I32();
	jule::Bool _12575_found_mapping = jule::Bool();
	if ((_1259_case < 0LL) || (3LL <= _1259_case)) {
		_12556_mapped_rune = 65533LL;
		_12575_found_mapping = false;
		return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
	}
	jule::Int _13113_lo = 0LL;
	jule::I64 _13213_hi = _12529_case_range.len();
	_iter_begin_4383827008:;
	if (!(_13113_lo < _13213_hi)) { goto _iter_end_4383827008; }
	{
		jule::Int _13413_m = _13113_lo + jule::div(_13213_hi - _13113_lo,2LL);
		_20548c650_CaseRange _13513_cr = _12529_case_range[static_cast<jule::Int>(_13413_m)];
		if ((static_cast<jule::I32>(_13513_cr._field_lo) <= _12520_r) && (_12520_r <= static_cast<jule::I32>(_13513_cr._field_hi))) {
			jule::I32 _13717_delta = _13513_cr._field_delta[static_cast<jule::Int>(_1259_case)];
			if (_13717_delta > 1114111LL) {
				_12556_mapped_rune = static_cast<jule::I32>(static_cast<jule::I32>(_13513_cr._field_lo) + (((_12520_r - static_cast<jule::I32>(_13513_cr._field_lo)) & -2LL) | static_cast<jule::I32>(_1259_case & 1LL)));
				_12575_found_mapping = true;
				return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
			}
			_12556_mapped_rune = static_cast<jule::I32>(_12520_r + _13717_delta);
			_12575_found_mapping = true;
			return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
		}
		if (_12520_r < static_cast<jule::I32>(_13513_cr._field_lo)) {
			_13213_hi=_13413_m;
		} else {
			_13113_lo=static_cast<jule::Int>(_13413_m + 1LL);
		}
	}
	_iter_next_4383827008:;
	goto _iter_begin_4383827008;
	_iter_end_4383827008:;
	_12556_mapped_rune = _12520_r;
	_12575_found_mapping = false;
	return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
}



inline jule::I32 _20548c650_to(jule::Int _16311_case,jule::I32 _16326_r) {
	std::tie(_16326_r,std::ignore) = _20548c650___to(_16311_case,_16326_r,_20548cac3_CASE_RANGES);
	return _16326_r;
}



inline jule::I32 _20548c650_to_upper(jule::I32 _16921_r) {
	if (_16921_r <= 127LL) {
		if (('a' <= _16921_r) && (_16921_r <= 'z')) {
			_16921_r-=32LL;
		}
		return _16921_r;
	}
	return static_cast<jule::I32>(_20548c650_to(0LL,_16921_r));
}



inline jule::I32 _20548c650_to_lower(jule::I32 _18021_r) {
	if (_18021_r <= 127LL) {
		if (('A' <= _18021_r) && (_18021_r <= 'Z')) {
			_18021_r+=32LL;
		}
		return _18021_r;
	}
	return static_cast<jule::I32>(_20548c650_to(1LL,_18021_r));
}



inline jule::Bool _20548c650_is16(jule::Slice<_20548c650_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LL)) {
		{
			auto _range_expr = _1919_ranges;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _20548c650_i = 0;
				_iter_begin_4383499568:;
				{
					_20548c650_Range16* _19417_range = (&(_1919_ranges[static_cast<jule::Int>(_20548c650_i)]));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LL) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4383499568:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_20548c650_i; goto _iter_begin_4383499568; }
				_iter_end_4383499568:;
			}
		}
		return false;
	}
	jule::Int _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	_iter_begin_4383506192:;
	if (!(_20813_lo < _20913_hi)) { goto _iter_end_4383506192; }
	{
		jule::Int _21113_m = _20813_lo + jule::div(_20913_hi - _20813_lo,2LL);
		_20548c650_Range16* _21213_range = (&(_1919_ranges[static_cast<jule::Int>(_21113_m)]));
		{
			if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
				return (_21213_range->_field_stride == 1LL) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LL);
			}
			if (_19128_r < _21213_range->_field_lo) {
				_20913_hi=_21113_m;
			} else {
				_20813_lo=static_cast<jule::Int>(_21113_m + 1LL);
			}
		}
	}
	_iter_next_4383506192:;
	goto _iter_begin_4383506192;
	_iter_end_4383506192:;
	return false;
}



inline jule::Bool _20548c650_is32(jule::Slice<_20548c650_Range32> _2289_ranges,jule::U32 _22828_r) {
	if (_2289_ranges.len() <= 18LL) {
		{
			auto _range_expr = _2289_ranges;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _20548c650_i = 0;
				_iter_begin_4383520112:;
				{
					_20548c650_Range32* _23117_range = (&(_2289_ranges[static_cast<jule::Int>(_20548c650_i)]));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LL) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4383520112:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_20548c650_i; goto _iter_begin_4383520112; }
				_iter_end_4383520112:;
			}
		}
		return false;
	}
	jule::Int _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	_iter_begin_4383521344:;
	if (!(_24513_lo < _24613_hi)) { goto _iter_end_4383521344; }
	{
		jule::Int _24813_m = _24513_lo + jule::div(_24613_hi - _24513_lo,2LL);
		_20548c650_Range32* _24913_range = (&(_2289_ranges[static_cast<jule::Int>(_24813_m)]));
		{
			if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
				return (_24913_range->_field_stride == 1LL) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LL);
			}
			if (_22828_r < _24913_range->_field_lo) {
				_24613_hi=_24813_m;
			} else {
				_24513_lo=static_cast<jule::Int>(_24813_m + 1LL);
			}
		}
	}
	_iter_next_4383521344:;
	goto _iter_begin_4383521344;
	_iter_end_4383521344:;
	return false;
}



inline jule::Bool _20548c650_is(jule::Ref<_20548c650_RangeTable> _26511_range_tab,jule::I32 _26535_r) {
	jule::Slice<_20548c650_Range16> &_26610_r16 = _26511_range_tab->_field_r16;
	if ((_26610_r16.len() > 0LL) && (static_cast<jule::U32>(_26535_r) <= static_cast<jule::U32>(_26610_r16[static_cast<jule::Int>(_26610_r16.len() - 1LL)]._field_hi))) {
		return _20548c650_is16(_26610_r16,static_cast<jule::U16>(_26535_r));
	}
	jule::Slice<_20548c650_Range32> &_27110_r32 = _26511_range_tab->_field_r32;
	if ((_27110_r32.len() > 0LL) && (_26535_r >= static_cast<jule::I32>(_27110_r32[0LL]._field_lo))) {
		return _20548c650_is32(_27110_r32,static_cast<jule::U32>(_26535_r));
	}
	return false;
}



inline jule::Bool _20548c650_is_excluding_latin(jule::Ref<_20548c650_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_20548c650_Range16> &_28014_r16 = _27823_range_tab->_field_r16;
		jule::Int _28213_off = _27823_range_tab->_field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[static_cast<jule::Int>(_28014_r16.len() - 1LL)]._field_hi))) {
			return _20548c650_is16(_28014_r16.slice(static_cast<jule::Int>(_28213_off)),static_cast<jule::U16>(_27847_r));
		}
	}
	jule::Slice<_20548c650_Range32> &_28710_r32 = _27823_range_tab->_field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo))) {
		return _20548c650_is32(_28710_r32,static_cast<jule::U32>(_27847_r));
	}
	return false;
}



inline jule::Bool _20548c650_is_upper(jule::I32 _29517_r) {
	if (static_cast<jule::U32>(_29517_r) <= 255LL) {
		return (_20548cac3__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_29517_r))] & 96LL) == 32LL;
	}
	return _20548c650_is_excluding_latin(_20548cac3_UPPER,_29517_r);
}



inline jule::Bool _20548c650_is_lower(jule::I32 _30417_r) {
	if (static_cast<jule::U32>(_30417_r) <= 255LL) {
		return (_20548cac3__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_30417_r))] & 96LL) == 64LL;
	}
	return _20548c650_is_excluding_latin(_20548cac3_LOWER,_30417_r);
}



inline jule::Bool _2062e3ad2_full_rune(jule::Slice<jule::U8> _13718_p) {
	if (_13718_p.len() == 0LL) {
		return false;
	}
	jule::U8 _1419_x = _2062e3ad2_FIRST[static_cast<jule::Int>(_13718_p[0LL])];
	if (_13718_p.len() >= static_cast<jule::Int>(_1419_x & 7LL)) {
		return true;
	}
	_2062e3ad2_accept_range _1469_accept = _2062e3ad2_ACCEPT_RANGES[static_cast<jule::Int>(_1419_x >> 4LL)];
	if ((_13718_p.len() > 1LL) && ((_13718_p[1LL] < _1469_accept._field_lo) || (_1469_accept._field_hi < _13718_p[1LL]))) {
		return true;
	} else if ((_13718_p.len() > 2LL) && ((_13718_p[2LL] < 128LL) || (191LL < _13718_p[2LL]))) {
		return true;
	}
	return false;
}



inline jule::Bool _2062e3ad2_full_rune_str(jule::Str _15622_s) {
	if (_15622_s.len() == 0LL) {
		return false;
	}
	jule::U8 _1609_x = _2062e3ad2_FIRST[static_cast<jule::Int>(_15622_s[0LL])];
	if (_15622_s.len() >= static_cast<jule::Int>(_1609_x & 7LL)) {
		return true;
	}
	_2062e3ad2_accept_range _1659_accept = _2062e3ad2_ACCEPT_RANGES[static_cast<jule::Int>(_1609_x >> 4LL)];
	if ((_15622_s.len() > 1LL) && ((_15622_s[1LL] < _1659_accept._field_lo) || (_1659_accept._field_hi < _15622_s[1LL]))) {
		return true;
	} else if ((_15622_s.len() > 2LL) && ((_15622_s[2LL] < 128LL) || (191LL < _15622_s[2LL]))) {
		return true;
	}
	return false;
}



inline std::tuple<jule::I32,jule::Int> _2062e3ad2_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::Int _18242_size = jule::Int();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _2062e3ad2_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = static_cast<jule::U8>((_1879_x << 31LL) >> 31LL);
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_2062e3ad2_accept_range _1969_accept = _2062e3ad2_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::Int> _2062e3ad2_decode_rune_str(jule::Str _22924_s) {
	jule::I32 _22934_r = jule::I32();
	jule::Int _22943_size = jule::Int();
	if (_22924_s.len() < 1LL) {
		_22934_r = 65533LL;
		_22943_size = 0LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2339_s0 = _22924_s[0LL];
	jule::U8 _2349_x = _2062e3ad2_FIRST[static_cast<jule::Int>(_2339_s0)];
	if (_2349_x >= 240LL) {
		jule::I32 _23913_mask = static_cast<jule::U8>((_2349_x << 31LL) >> 31LL);
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_22924_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask));
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::Int _2429_sz = static_cast<jule::Int>(_2349_x & 7LL);
	_2062e3ad2_accept_range _2439_accept = _2062e3ad2_ACCEPT_RANGES[static_cast<jule::Int>(_2349_x >> 4LL)];
	if (_22924_s.len() < _2429_sz) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2479_s1 = _22924_s[1LL];
	if ((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 2LL) {
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_2339_s0 & 31LL) << 6LL) | static_cast<jule::I32>(_2479_s1 & 63LL));
		_22943_size = 2LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2549_s2 = _22924_s[2LL];
	if ((_2549_s2 < 128LL) || (191LL < _2549_s2)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 3LL) {
		_22934_r = static_cast<jule::I32>(((static_cast<jule::I32>(_2339_s0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2549_s2 & 63LL));
		_22943_size = 3LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2619_s3 = _22924_s[3LL];
	if ((_2619_s3 < 128LL) || (191LL < _2619_s3)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	_22934_r = static_cast<jule::I32>((((static_cast<jule::I32>(_2339_s0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2549_s2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2619_s3 & 63LL));
	_22943_size = 4LL;
	return std::make_tuple(_22934_r,_22943_size);
}



inline std::tuple<jule::I32,jule::Int> _2062e3ad2_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::Int _27647_size = jule::Int();
	if (_27625_p.len() == 0LL) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _2809_end = _27625_p.len();
	jule::I64 _28113_start = _2809_end - 1LL;
	_27638_r=static_cast<jule::I32>(_27625_p[static_cast<jule::Int>(_28113_start)]);
	if (_27638_r < 128LL) {
		_27638_r = _27638_r;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _28913_lim = _2809_end - 4LL;
	if (_28913_lim < 0LL) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	_iter_begin_4383758224:;
	if (!(_28113_start >= _28913_lim)) { goto _iter_end_4383758224; }
	{
		if (_2062e3ad2_rune_start(_27625_p[static_cast<jule::Int>(_28113_start)])) {
			goto _iter_end_4383758224;
		}
	}
	_iter_next_4383758224:;
	(_28113_start)--;
	goto _iter_begin_4383758224;
	_iter_end_4383758224:;
	if (_28113_start < 0LL) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _2062e3ad2_decode_rune(_27625_p.slice(static_cast<jule::Int>(_28113_start),static_cast<jule::Int>(_2809_end)));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	_27638_r = _27638_r;
	_27647_size = _27647_size;
	return std::make_tuple(_27638_r,_27647_size);
}



inline std::tuple<jule::I32,jule::Int> _2062e3ad2_decode_last_rune_str(jule::Str _31729_s) {
	jule::I32 _31739_r = jule::I32();
	jule::Int _31748_size = jule::Int();
	if (_31729_s.len() == 0LL) {
		_31739_r = 65533LL;
		_31748_size = 0LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _3219_end = _31729_s.len();
	jule::I64 _32213_start = _3219_end - 1LL;
	_31739_r=static_cast<jule::I32>(_31729_s[static_cast<jule::Int>(_32213_start)]);
	if (_31739_r < 128LL) {
		_31739_r = _31739_r;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _33013_lim = _3219_end - 4LL;
	if (_33013_lim < 0LL) {
		_33013_lim=0LL;
	}
	(_32213_start)--;
	_iter_begin_4383776912:;
	if (!(_32213_start >= _33013_lim)) { goto _iter_end_4383776912; }
	{
		if (_2062e3ad2_rune_start(_31729_s[static_cast<jule::Int>(_32213_start)])) {
			goto _iter_end_4383776912;
		}
	}
	_iter_next_4383776912:;
	(_32213_start)--;
	goto _iter_begin_4383776912;
	_iter_end_4383776912:;
	if (_32213_start < 0LL) {
		_32213_start=0LL;
	}
	std::tie(_31739_r,_31748_size) = _2062e3ad2_decode_rune_str(_31729_s.slice(static_cast<jule::Int>(_32213_start),static_cast<jule::Int>(_3219_end)));
	if ((_32213_start + _31748_size) != _3219_end) {
		_31739_r = 65533LL;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	_31739_r = _31739_r;
	_31748_size = _31748_size;
	return std::make_tuple(_31739_r,_31748_size);
}



inline jule::Int _2062e3ad2_rune_len(jule::I32 _35217_r) {
	{
		if (!((_35217_r < 0LL))) { goto _case_end_4384572176; }
		_case_begin_4384572176:;
		{
			return -1LL;
		}
		goto _match_end_4383775632;
		_case_end_4384572176:;
		if (!((_35217_r <= 127LLU))) { goto _case_end_4384572448; }
		_case_begin_4384572448:;
		{
			return 1LL;
		}
		goto _match_end_4383775632;
		_case_end_4384572448:;
		if (!((_35217_r <= 2047LL))) { goto _case_end_4384572560; }
		_case_begin_4384572560:;
		{
			return 2LL;
		}
		goto _match_end_4383775632;
		_case_end_4384572560:;
		if (!(((55296LL <= _35217_r) && (_35217_r <= 57343LL)))) { goto _case_end_4384572672; }
		_case_begin_4384572672:;
		{
			return -1LL;
		}
		goto _match_end_4383775632;
		_case_end_4384572672:;
		if (!((_35217_r <= 65535LL))) { goto _case_end_4384571664; }
		_case_begin_4384571664:;
		{
			return 3LL;
		}
		goto _match_end_4383775632;
		_case_end_4384571664:;
		if (!((_35217_r <= 1114111LL))) { goto _case_end_4384571776; }
		_case_begin_4384571776:;
		{
			return 4LL;
		}
		goto _match_end_4383775632;
		_case_end_4384571776:;
		_case_begin_4384570608:;
		{
			return -1LL;
		}
		goto _match_end_4383775632;
		_case_end_4384570608:;
		_match_end_4383775632:;
	}
}



inline jule::Int _2062e3ad2_encode_rune(jule::Slice<jule::U8> _36724_p,jule::I32 _36739_r) {
	jule::U32 _3699_i = static_cast<jule::U32>(_36739_r);
	{
		if (!((_3699_i <= 127LLU))) { goto _case_end_4384589504; }
		_case_begin_4384589504:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(_36739_r);
			return 1LL;
		}
		goto _match_end_4384579376;
		_case_end_4384589504:;
		if (!((_3699_i <= 2047LL))) { goto _case_end_4384589616; }
		_case_begin_4384589616:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(192LL | static_cast<jule::U8>(_36739_r >> 6LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 2LL;
		}
		goto _match_end_4384579376;
		_case_end_4384589616:;
		if (!((_3699_i > 1114111LL) || ((55296LL <= _3699_i) && (_3699_i <= 57343LL)))) { goto _case_end_4384579808; }
		_case_begin_4384579808:;
		{
			_36739_r=65533LL;
			goto _case_begin_4384579920;
		}
		goto _match_end_4384579376;
		_case_end_4384579808:;
		if (!((_3699_i <= 65535LL))) { goto _case_end_4384579920; }
		_case_begin_4384579920:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(224LL | static_cast<jule::U8>(_36739_r >> 12LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 3LL;
		}
		goto _match_end_4384579376;
		_case_end_4384579920:;
		_case_begin_4384579504:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(240LL | static_cast<jule::U8>(_36739_r >> 18LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 12LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[3LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 4LL;
		}
		goto _match_end_4384579376;
		_case_end_4384579504:;
		_match_end_4384579376:;
	}
}



inline jule::Slice<jule::U8> _2062e3ad2_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if (static_cast<jule::U32>(_39835_r) <= 127LLU) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(_39835_r)}));
	}
	return _2062e3ad2_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _2062e3ad2_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		if (!((_4079_i <= 2047LL))) { goto _case_end_4384613184; }
		_case_begin_4384613184:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LL | static_cast<jule::U8>(_40545_r >> 6LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4384609968;
		_case_end_4384613184:;
		if (!((_4079_i > 1114111LL) || ((55296LL <= _4079_i) && (_4079_i <= 57343LL)))) { goto _case_end_4384613296; }
		_case_begin_4384613296:;
		{
			_40545_r=65533LL;
			goto _case_begin_4384613408;
		}
		goto _match_end_4384609968;
		_case_end_4384613296:;
		if (!((_4079_i <= 65535LL))) { goto _case_end_4384613408; }
		_case_begin_4384613408:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LL | static_cast<jule::U8>(_40545_r >> 12LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4384609968;
		_case_end_4384613408:;
		_case_begin_4384610096:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LL | static_cast<jule::U8>(_40545_r >> 18LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 12LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4384609968;
		_case_end_4384610096:;
		_match_end_4384609968:;
	}
}



inline jule::Int _2062e3ad2_rune_count(jule::Slice<jule::U8> _42319_p) {
	jule::Int _42332_n = jule::Int();
	jule::Int _42413_i = 0LL;
	_iter_begin_4384612160:;
	if (!(_42413_i < _42319_p.len())) { goto _iter_end_4384612160; }
	{
		(_42332_n)++;
		jule::U8 _42717_c = _42319_p[static_cast<jule::Int>(_42413_i)];
		if (_42717_c < 128LL) {
			(_42413_i)++;
			goto _iter_next_4384612160;
		}
		jule::U8 _43313_x = _2062e3ad2_FIRST[static_cast<jule::Int>(_42717_c)];
		if (_43313_x == 241LL) {
			(_42413_i)++;
			goto _iter_next_4384612160;
		}
		jule::Int _43817_size = static_cast<jule::Int>(_43313_x & 7LL);
		if ((_42413_i + _43817_size) > _42319_p.len()) {
			(_42413_i)++;
			goto _iter_next_4384612160;
		}
		_2062e3ad2_accept_range _44313_accept = _2062e3ad2_ACCEPT_RANGES[static_cast<jule::Int>(_43313_x >> 4LL)];
		_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 1LL)];
		if ((_42717_c < _44313_accept._field_lo) || (_44313_accept._field_hi < _42717_c)) {
			_43817_size=1LL;
		} else if (_43817_size == 2LL) {
		} else {
			_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 2LL)];
			if ((_42717_c < 128LL) || (191LL < _42717_c)) {
				_43817_size=1LL;
			} else if (_43817_size == 3LL) {
			} else {
				_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 3LL)];
				if ((_42717_c < 128LL) || (191LL < _42717_c)) {
					_43817_size=1LL;
				}
			}
		}
		_42413_i+=_43817_size;
	}
	_iter_next_4384612160:;
	goto _iter_begin_4384612160;
	_iter_end_4384612160:;
	_42332_n = _42332_n;
	return _42332_n;
}



inline jule::Int _2062e3ad2_rune_count_str(jule::Str _46623_s) {
	jule::Int _46633_n = jule::Int();
	jule::Int _46713_i = 0LL;
	_iter_begin_4384649200:;
	if (!(_46713_i < _46623_s.len())) { goto _iter_end_4384649200; }
	{
		jule::U8 _46917_c = _46623_s[static_cast<jule::Int>(_46713_i)];
		if (_46917_c < 128LL) {
			(_46713_i)++;
			goto _iter_next_4384649200;
		}
		jule::U8 _47513_x = _2062e3ad2_FIRST[static_cast<jule::Int>(_46917_c)];
		if (_47513_x == 241LL) {
			(_46713_i)++;
			goto _iter_next_4384649200;
		}
		jule::Int _48017_size = static_cast<jule::Int>(_47513_x & 7LL);
		if ((_46713_i + _48017_size) > _46623_s.len()) {
			(_46713_i)++;
			goto _iter_next_4384649200;
		}
		_2062e3ad2_accept_range _48513_accept = _2062e3ad2_ACCEPT_RANGES[static_cast<jule::Int>(_47513_x >> 4LL)];
		_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 1LL)];
		if ((_46917_c < _48513_accept._field_lo) || (_48513_accept._field_hi < _46917_c)) {
			_48017_size=1LL;
		} else if (_48017_size == 2LL) {
		} else {
			_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 2LL)];
			if ((_46917_c < 128LL) || (191LL < _46917_c)) {
				_48017_size=1LL;
			} else if (_48017_size == 3LL) {
			} else {
				_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 3LL)];
				if ((_46917_c < 128LL) || (191LL < _46917_c)) {
					_48017_size=1LL;
				}
			}
		}
		_46713_i+=_48017_size;
	}
	_iter_next_4384649200:;
	(_46633_n)++;
	goto _iter_begin_4384649200;
	_iter_end_4384649200:;
	_46633_n = _46633_n;
	return _46633_n;
}



inline jule::Bool _2062e3ad2_rune_start(jule::U8 _51019_b) {
	return (_51019_b & 192LL) != 128LL;
}



inline jule::Bool _2062e3ad2_valid(jule::Slice<jule::U8> _51314_p) {
	jule::Slice<jule::U8> _51613_cp = (*((&(_51314_p))));
	_iter_begin_4384673696:;
	if (!(_51613_cp.len() >= 8LL)) { goto _iter_end_4384673696; }
	{
		jule::U32 _52213_first32 = ((static_cast<jule::U32>(_51613_cp[0LL]) | (static_cast<jule::U32>(_51613_cp[1LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[2LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[3LL]) << 24LL);
		jule::U32 _52313_second32 = ((static_cast<jule::U32>(_51613_cp[4LL]) | (static_cast<jule::U32>(_51613_cp[5LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[6LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[7LL]) << 24LL);
		if (((_52213_first32 | _52313_second32) & 2155905152LL) != 0LL) {
			goto _iter_end_4384673696;
		}
		_51613_cp=_51613_cp.slice(8LL);
	}
	_iter_next_4384673696:;
	goto _iter_begin_4384673696;
	_iter_end_4384673696:;
	jule::Int _53013_i = 0LL;
	_iter_begin_4384672352:;
	if (!(_53013_i < _51613_cp.len())) { goto _iter_end_4384672352; }
	{
		jule::U8 _53213_pi = _51613_cp[static_cast<jule::Int>(_53013_i)];
		if (_53213_pi < 128LL) {
			(_53013_i)++;
			goto _iter_next_4384672352;
		}
		jule::U8 _53713_x = _2062e3ad2_FIRST[static_cast<jule::Int>(_53213_pi)];
		if (_53713_x == 241LL) {
			return false;
		}
		jule::Int _54113_size = static_cast<jule::Int>(_53713_x & 7LL);
		if ((_53013_i + _54113_size) > _51613_cp.len()) {
			return false;
		}
		_2062e3ad2_accept_range _54513_accept = _2062e3ad2_ACCEPT_RANGES[static_cast<jule::Int>(_53713_x >> 4LL)];
		jule::U8 _54617_c = _51613_cp[static_cast<jule::Int>(_53013_i + 1LL)];
		if ((_54617_c < _54513_accept._field_lo) || (_54513_accept._field_hi < _54617_c)) {
			return false;
		} else if (_54113_size == 2LL) {
		} else {
			_54617_c=_51613_cp[static_cast<jule::Int>(_53013_i + 2LL)];
			if ((_54617_c < 128LL) || (191LL < _54617_c)) {
				return false;
			} else if (_54113_size == 3LL) {
			} else {
				_54617_c=_51613_cp[static_cast<jule::Int>(_53013_i + 3LL)];
				if ((_54617_c < 128LL) || (191LL < _54617_c)) {
					return false;
				}
			}
		}
		_53013_i+=_54113_size;
	}
	_iter_next_4384672352:;
	goto _iter_begin_4384672352;
	_iter_end_4384672352:;
	return true;
}



inline jule::Bool _2062e3ad2_valid_str(jule::Str _56822_s) {
	_iter_begin_4384711872:;
	if (!(_56822_s.len() >= 8LL)) { goto _iter_end_4384711872; }
	{
		jule::U32 _57313_first32 = ((static_cast<jule::U32>(_56822_s[0LL]) | (static_cast<jule::U32>(_56822_s[1LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[2LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[3LL]) << 24LL);
		jule::U32 _57413_second32 = ((static_cast<jule::U32>(_56822_s[4LL]) | (static_cast<jule::U32>(_56822_s[5LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[6LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[7LL]) << 24LL);
		if (((_57313_first32 | _57413_second32) & 2155905152LL) != 0LL) {
			goto _iter_end_4384711872;
		}
		_56822_s=_56822_s.slice(8LL);
	}
	_iter_next_4384711872:;
	goto _iter_begin_4384711872;
	_iter_end_4384711872:;
	jule::Int _58113_i = 0LL;
	_iter_begin_4384727776:;
	if (!(_58113_i < _56822_s.len())) { goto _iter_end_4384727776; }
	{
		jule::U8 _58313_si = _56822_s[static_cast<jule::Int>(_58113_i)];
		if (_58313_si < 128LL) {
			(_58113_i)++;
			goto _iter_next_4384727776;
		}
		jule::U8 _58813_x = _2062e3ad2_FIRST[static_cast<jule::Int>(_58313_si)];
		if (_58813_x == 241LL) {
			return false;
		}
		jule::Int _59213_size = static_cast<jule::Int>(_58813_x & 7LL);
		if ((_58113_i + _59213_size) > _56822_s.len()) {
			return false;
		}
		_2062e3ad2_accept_range _59613_accept = _2062e3ad2_ACCEPT_RANGES[static_cast<jule::Int>(_58813_x >> 4LL)];
		jule::U8 _59717_c = _56822_s[static_cast<jule::Int>(_58113_i + 1LL)];
		if ((_59717_c < _59613_accept._field_lo) || (_59613_accept._field_hi < _59717_c)) {
			return false;
		} else if (_59213_size == 2LL) {
		} else {
			_59717_c=_56822_s[static_cast<jule::Int>(_58113_i + 2LL)];
			if ((_59717_c < 128LL) || (191LL < _59717_c)) {
				return false;
			} else if (_59213_size == 3LL) {
			} else {
				_59717_c=_56822_s[static_cast<jule::Int>(_58113_i + 3LL)];
				if ((_59717_c < 128LL) || (191LL < _59717_c)) {
					return false;
				}
			}
		}
		_58113_i+=_59213_size;
	}
	_iter_next_4384727776:;
	goto _iter_begin_4384727776;
	_iter_end_4384727776:;
	return true;
}



inline jule::Bool _2062e3ad2_valid_rune(jule::I32 _62019_r) {
	{
		if (!(((0LL <= _62019_r) && (_62019_r < 55296LL)))) { goto _case_end_4384751584; }
		_case_begin_4384751584:;
		{
			return true;
		}
		goto _match_end_4384751040;
		_case_end_4384751584:;
		if (!(((57343LL < _62019_r) && (_62019_r <= 1114111LL)))) { goto _case_end_4384751696; }
		_case_begin_4384751696:;
		{
			return true;
		}
		goto _match_end_4384751040;
		_case_end_4384751696:;
		_case_begin_4384751232:;
		{
			return false;
		}
		goto _match_end_4384751040;
		_case_end_4384751232:;
		_match_end_4384751040:;
	}
}



inline jule::Bool _20542560a_is_unary_op(jule::Str _31120_kind) {
	{
		auto _range_expr = _20542560a_UNARY_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _20542560a_op = *_range_begin;
			_iter_begin_4384959424:;
			{
				if (_31120_kind == _20542560a_op) {
					return true;
				}
			}
			_iter_next_4384959424:;
			++_range_begin;
			if (_range_begin != _range_end) { _20542560a_op = *_range_begin; goto _iter_begin_4384959424; }
			_iter_end_4384959424:;
		}
	}
	return false;
}



inline jule::Bool _20542560a_is_bin_op(jule::Str _32218_kind) {
	{
		auto _range_expr = _20542560a_BIN_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _20542560a_op = *_range_begin;
			_iter_begin_4384961136:;
			{
				if (_32218_kind == _20542560a_op) {
					return true;
				}
			}
			_iter_next_4384961136:;
			++_range_begin;
			if (_range_begin != _range_end) { _20542560a_op = *_range_begin; goto _iter_begin_4384961136; }
			_iter_end_4384961136:;
		}
	}
	return false;
}



inline jule::Bool _20542560a_is_weak_op(jule::Str _33319_kind) {
	{
		auto _range_expr = _20542560a_WEAK_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _20542560a_op = *_range_begin;
			_iter_begin_4384963872:;
			{
				if (_33319_kind == _20542560a_op) {
					return true;
				}
			}
			_iter_next_4384963872:;
			++_range_begin;
			if (_range_begin != _range_end) { _20542560a_op = *_range_begin; goto _iter_begin_4384963872; }
			_iter_end_4384963872:;
		}
	}
	return false;
}



inline jule::Bool _20542560a_is_str(jule::Str _34415_k) {
	return (_34415_k != jule::Str("", 0)) && ((_34415_k[0LL] == '\"') || _20542560a_is_raw_str(_34415_k));
}



inline jule::Bool _20542560a_is_raw_str(jule::Str _34619_k) {
	return (_34619_k != jule::Str("", 0)) && (_34619_k[0LL] == '`');
}



inline jule::Bool _20542560a_is_rune(jule::Str _34916_k) {
	return (_34916_k != jule::Str("", 0)) && (_34916_k[0LL] == '\'');
}



inline jule::Bool _20542560a_is_nil(jule::Str _35115_k) {
	return _35115_k == jule::Str("nil", 3);
}



inline jule::Bool _20542560a_is_bool(jule::Str _35316_k) {
	return (_35316_k == jule::Str("true", 4)) || (_35316_k == jule::Str("false", 5));
}



inline jule::Bool _20542560a_contains_any(jule::Str _35517_s,jule::Str _35525_bytes) {
	{
		auto _range_expr = _35525_bytes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::U8 _20542560a_b = *_range_begin;
			_iter_begin_4384977920:;
			{
				jule::Int _35713_i = _35517_s.find(static_cast<jule::Str>(_20542560a_b));
				if (_35713_i >= 0LL) {
					return true;
				}
			}
			_iter_next_4384977920:;
			++_range_begin;
			if (_range_begin != _range_end) { _20542560a_b = *_range_begin; goto _iter_begin_4384977920; }
			_iter_end_4384977920:;
		}
	}
	return false;
}



inline jule::Bool _20542560a_is_float(jule::Str _36717_k) {
	if (_36717_k.has_prefix(jule::Str("0x", 2))) {
		return _20542560a_contains_any(_36717_k,jule::Str(".pP", 3));
	}
	return _20542560a_contains_any(_36717_k,jule::Str(".eE", 3));
}



inline jule::Bool _20542560a_is_num(jule::Str _37615_k) {
	if (_37615_k == jule::Str("", 0)) {
		return false;
	}
	jule::U8 _3819_b = _37615_k[0LL];
	return (_3819_b == '.') || (('0' <= _3819_b) && (_3819_b <= '9'));
}



inline jule::Bool _20542560a_is_lit(jule::Str _38615_k) {
	return (((_20542560a_is_num(_38615_k) || _20542560a_is_str(_38615_k)) || _20542560a_is_rune(_38615_k)) || _20542560a_is_nil(_38615_k)) || _20542560a_is_bool(_38615_k);
}



inline jule::Bool _20542560a_is_ignore_ident(jule::Str _39124_ident) {
	return _39124_ident == jule::Str("_", 1);
}



inline jule::Bool _20542560a_is_anon_ident(jule::Str _39322_ident) {
	return _39322_ident == jule::Str("<anonymous>", 11);
}



inline jule::Bool _20542560a_is_punct(jule::I32 _39617_r) {
	{
		auto _range_expr = _20542560a_PUNCTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _20542560a_cr = *_range_begin;
			_iter_begin_4384995552:;
			{
				if (_39617_r == _20542560a_cr) {
					return true;
				}
			}
			_iter_next_4384995552:;
			++_range_begin;
			if (_range_begin != _range_end) { _20542560a_cr = *_range_begin; goto _iter_begin_4384995552; }
			_iter_end_4384995552:;
		}
	}
	return false;
}



inline jule::Bool _20542560a_is_space(jule::I32 _40717_r) {
	{
		auto _range_expr = _20542560a_SPACES;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _20542560a_cr = *_range_begin;
			_iter_begin_4384997968:;
			{
				if (_40717_r == _20542560a_cr) {
					return true;
				}
			}
			_iter_next_4384997968:;
			++_range_begin;
			if (_range_begin != _range_end) { _20542560a_cr = *_range_begin; goto _iter_begin_4384997968; }
			_iter_end_4384997968:;
		}
	}
	return false;
}



inline jule::Bool _20542560a_is_letter(jule::I32 _41818_r) {
	return _205583b75_is_letter(_41818_r);
}



inline jule::Bool _20542560a_is_ident_rune(jule::Str _42422_s) {
	if (_42422_s == jule::Str("", 0)) {
		return false;
	}
	if (_42422_s[0LL] != '_') {
		jule::I32 _43014_r;
		std::tie(_43014_r,std::ignore) = _2062e3ad2_decode_rune_str(_42422_s);
		if ((!(_20542560a_is_letter(_43014_r)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _20542560a_is_decimal(jule::U8 _44019_b) {
	return ('0' <= _44019_b) && (_44019_b <= '9');
}



inline jule::Bool _20542560a_is_binary(jule::U8 _44218_b) {
	return (_44218_b == '0') || (_44218_b == '1');
}



inline jule::Bool _20542560a_is_octal(jule::U8 _44417_b) {
	return ('0' <= _44417_b) && (_44417_b <= '7');
}



inline jule::Bool _20542560a_is_hex(jule::U8 _44715_b) {
	{
		if (!((('0' <= _44715_b) && (_44715_b <= '9')))) { goto _case_end_4385013280; }
		_case_begin_4385013280:;
		{
			return true;
		}
		goto _match_end_4385010640;
		_case_end_4385013280:;
		if (!((('a' <= _44715_b) && (_44715_b <= 'f')))) { goto _case_end_4385013392; }
		_case_begin_4385013392:;
		{
			return true;
		}
		goto _match_end_4385010640;
		_case_end_4385013392:;
		if (!((('A' <= _44715_b) && (_44715_b <= 'F')))) { goto _case_end_4385013504; }
		_case_begin_4385013504:;
		{
			return true;
		}
		goto _match_end_4385010640;
		_case_end_4385013504:;
		_case_begin_4385008400:;
		{
			return false;
		}
		goto _match_end_4385010640;
		_case_end_4385008400:;
		_match_end_4385010640:;
	}
}



inline jule::Bool _20542560a_is_assign(jule::Uint _45918_id) {
	return ((((((_45918_id == 2LLU) || (_45918_id == 31LLU)) || (_45918_id == 34LLU)) || (_45918_id == 20LLU)) || (_45918_id == 28LLU)) || (_45918_id == 3LLU)) || (_45918_id == 7LLU);
}



inline jule::Bool _20542560a_is_postfix_op(jule::Str _47222_kind) {
	{
		auto _range_expr = _20542560a_POSTFIX_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _20542560a_op = *_range_begin;
			_iter_begin_4385020624:;
			{
				if (_47222_kind == _20542560a_op) {
					return true;
				}
			}
			_iter_next_4385020624:;
			++_range_begin;
			if (_range_begin != _range_end) { _20542560a_op = *_range_begin; goto _iter_begin_4385020624; }
			_iter_end_4385020624:;
		}
	}
	return false;
}



inline jule::Bool _20542560a_is_assign_op(jule::Str _48321_kind) {
	if (_20542560a_is_postfix_op(_48321_kind)) {
		return true;
	}
	{
		auto _range_expr = _20542560a_ASSING_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _20542560a_op = *_range_begin;
			_iter_begin_4385024256:;
			{
				if (_48321_kind == _20542560a_op) {
					return true;
				}
			}
			_iter_next_4385024256:;
			++_range_begin;
			if (_range_begin != _range_end) { _20542560a_op = *_range_begin; goto _iter_begin_4385024256; }
			_iter_end_4385024256:;
		}
	}
	return false;
}



inline jule::Ref<_2053bdb25_File> _2053bdb25_new_file_set(jule::Str _6421_path) {
	return jule::new_struct<_2053bdb25_File>(new( std::nothrow ) _2053bdb25_File(jule::Slice<jule::U8>(),_6421_path,jule::Slice<_20542560a_Token>()));
}



inline _20377124e_Log _20547ded2_make_err(jule::Int _10313_row,jule::Int _10323_col,jule::Ref<_2053bdb25_File> _10333_f,jule::Str _10343_fmt,jule::Slice<jule::Any> _10356_args) {
	return _20377124e_Log(1LLU,_10313_row,_10323_col,_10333_f->_method_path(),_20377124e_logf(_10343_fmt,_10356_args),jule::Str(),jule::Str());
}



inline jule::Bool _20547ded2_bytes_has_prefix(jule::Slice<jule::U8> _11321_bytes,jule::Str _11336_prefix) {
	if (_11321_bytes.len() < _11336_prefix.len()) {
		return false;
	}
	{
		auto _range_expr = _11336_prefix;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _20547ded2_i = 0;
			_iter_begin_4385036944:;
			{
				if (_11321_bytes[static_cast<jule::Int>(_20547ded2_i)] != _11336_prefix[static_cast<jule::Int>(_20547ded2_i)]) {
					return false;
				}
			}
			_iter_next_4385036944:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_20547ded2_i; goto _iter_begin_4385036944; }
			_iter_end_4385036944:;
		}
	}
	return true;
}



inline jule::Str _20547ded2_float_fmt_e(jule::Slice<jule::U8> _12516_txt,jule::Int _12533_i) {
	jule::Str _12543_lit = jule::Str();
	(_12533_i)++;
	if (_12533_i >= _12516_txt.len()) {
		return _12543_lit;
	}
	jule::U8 _13113_b = _12516_txt[static_cast<jule::Int>(_12533_i)];
	if ((_13113_b == '+') || (_13113_b == '-')) {
		(_12533_i)++;
		if (_12533_i >= _12516_txt.len()) {
			return _12543_lit;
		}
	}
	jule::Int _1399_first = _12533_i;
	_iter_begin_4385047168:;
	if (!(_12533_i < _12516_txt.len())) { goto _iter_end_4385047168; }
	{
		_13113_b=_12516_txt[static_cast<jule::Int>(_12533_i)];
		if ((!(_20542560a_is_decimal(_13113_b)))) {
			goto _iter_end_4385047168;
		}
	}
	_iter_next_4385047168:;
	(_12533_i)++;
	goto _iter_begin_4385047168;
	_iter_end_4385047168:;
	if (_12533_i == _1399_first) {
		_12543_lit = jule::Str("", 0);
		return _12543_lit;
	}
	_12543_lit = static_cast<jule::Str>(_12516_txt.slice(0LL,static_cast<jule::Int>(_12533_i)));
	return _12543_lit;
}



inline jule::Str _20547ded2_float_fmt_p(jule::Slice<jule::U8> _15316_txt,jule::Int _15329_i) {
	return _20547ded2_float_fmt_e(_15316_txt,_15329_i);
}



inline jule::Str _20547ded2_float_fmt_dotnp(jule::Slice<jule::U8> _15520_txt,jule::Int _15537_i) {
	if (_15520_txt[static_cast<jule::Int>(_15537_i)] != '.') {
		return jule::Str("", 0);
	}
	(_15537_i)++;
	_julec_label_loop:;
	_iter_begin_4385058560:;
	if (!(_15537_i < _15520_txt.len())) { goto _iter_end_4385058560; }
	{
		jule::U8 _16313_b = _15520_txt[static_cast<jule::Int>(_15537_i)];
		{
			if (!((_20542560a_is_decimal(_16313_b)))) { goto _case_end_4385062016; }
			_case_begin_4385062016:;
			{
				goto _iter_next_4385058560;
			}
			goto _match_end_4385061536;
			_case_end_4385062016:;
			if (!((_20547ded2_is_float_fmt_p(_16313_b,_15537_i)))) { goto _case_end_4385062128; }
			_case_begin_4385062128:;
			{
				return _20547ded2_float_fmt_p(_15520_txt,_15537_i);
			}
			goto _match_end_4385061536;
			_case_end_4385062128:;
			_case_begin_4385061664:;
			{
				goto _iter_end_4385058560;
			}
			goto _match_end_4385061536;
			_case_end_4385061664:;
			_match_end_4385061536:;
		}
	}
	_iter_next_4385058560:;
	(_15537_i)++;
	goto _iter_begin_4385058560;
	_iter_end_4385058560:;
	return jule::Str("", 0);
}



inline jule::Str _20547ded2_float_fmt_dotfp(jule::Slice<jule::U8> _17320_txt,jule::Int _17337_i) {
	_17337_i+=2LL;
	return _20547ded2_float_fmt_e(_17320_txt,_17337_i);
}



inline jule::Str _20547ded2_float_fmt_dotp(jule::Slice<jule::U8> _18019_txt,jule::Int _18036_i) {
	(_18036_i)++;
	return _20547ded2_float_fmt_e(_18019_txt,_18036_i);
}



inline jule::Str _20547ded2_float_num(jule::Slice<jule::U8> _18714_txt,jule::Int _18731_i) {
	jule::Str _18741_lit = jule::Str();
	(_18731_i)++;
	_iter_begin_4385072032:;
	if (!(_18731_i < _18714_txt.len())) { goto _iter_end_4385072032; }
	{
		jule::U8 _19013_b = _18714_txt[static_cast<jule::Int>(_18731_i)];
		if ((_18731_i > 1LL) && ((_19013_b == 'e') || (_19013_b == 'E'))) {
			_18741_lit = _20547ded2_float_fmt_e(_18714_txt,_18731_i);
			return _18741_lit;
		}
		if ((!(_20542560a_is_decimal(_19013_b)))) {
			goto _iter_end_4385072032;
		}
	}
	_iter_next_4385072032:;
	(_18731_i)++;
	goto _iter_begin_4385072032;
	_iter_end_4385072032:;
	if (_18731_i == 1LL) {
		return _18741_lit;
	}
	_18741_lit = static_cast<jule::Str>(_18714_txt.slice(0LL,static_cast<jule::Int>(_18731_i)));
	return _18741_lit;
}



inline jule::Str _20547ded2_common_num(jule::Slice<jule::U8> _20515_txt) {
	jule::Str _20530_lit = jule::Str();
	jule::Int _20613_i = 0LL;
	_julec_label_loop:;
	_iter_begin_4385081232:;
	if (!(_20613_i < _20515_txt.len())) { goto _iter_end_4385081232; }
	{
		jule::U8 _20913_b = _20515_txt[static_cast<jule::Int>(_20613_i)];
		{
			if (!((_20913_b == '.'))) { goto _case_end_4385084560; }
			_case_begin_4385084560:;
			{
				_20530_lit = _20547ded2_float_num(_20515_txt,_20613_i);
				return _20530_lit;
			}
			goto _match_end_4385084368;
			_case_end_4385084560:;
			if (!((_20547ded2_is_float_fmt_e(_20913_b,_20613_i)))) { goto _case_end_4385084688; }
			_case_begin_4385084688:;
			{
				_20530_lit = _20547ded2_float_fmt_e(_20515_txt,_20613_i);
				return _20530_lit;
			}
			goto _match_end_4385084368;
			_case_end_4385084688:;
			if (!(((!(_20542560a_is_decimal(_20913_b)))))) { goto _case_end_4385084816; }
			_case_begin_4385084816:;
			{
				goto _iter_end_4385081232;
			}
			goto _match_end_4385084368;
			_case_end_4385084816:;
			_match_end_4385084368:;
		}
	}
	_iter_next_4385081232:;
	(_20613_i)++;
	goto _iter_begin_4385081232;
	_iter_end_4385081232:;
	if (_20613_i == 0LL) {
		return _20530_lit;
	}
	_20530_lit = static_cast<jule::Str>(_20515_txt.slice(0LL,static_cast<jule::Int>(_20613_i)));
	return _20530_lit;
}



inline jule::Str _20547ded2_binary_num(jule::Slice<jule::U8> _22315_txt) {
	jule::Str _22330_lit = jule::Str();
	if ((!(_20547ded2_bytes_has_prefix(_22315_txt,jule::Str("0b", 2))))) {
		_22330_lit = jule::Str("", 0);
		return _22330_lit;
	}
	if (_22315_txt.len() < 2LL) {
		return _22330_lit;
	}
	
	jule::Int _23213_i = 2LL;
	_iter_begin_4385095216:;
	if (!(_23213_i < _22315_txt.len())) { goto _iter_end_4385095216; }
	{
		if ((!(_20542560a_is_binary(_22315_txt[static_cast<jule::Int>(_23213_i)])))) {
			goto _iter_end_4385095216;
		}
	}
	_iter_next_4385095216:;
	(_23213_i)++;
	goto _iter_begin_4385095216;
	_iter_end_4385095216:;
	if (_23213_i == 2LL) {
		return _22330_lit;
	}
	_22330_lit = static_cast<jule::Str>(_22315_txt.slice(0LL,static_cast<jule::Int>(_23213_i)));
	return _22330_lit;
}



inline jule::Bool _20547ded2_is_float_fmt_e(jule::U8 _24519_b,jule::Int _24528_i) {
	return (_24528_i > 0LL) && ((_24519_b == 'e') || (_24519_b == 'E'));
}



inline jule::Bool _20547ded2_is_float_fmt_p(jule::U8 _24619_b,jule::Int _24628_i) {
	return (_24628_i > 0LL) && ((_24619_b == 'p') || (_24619_b == 'P'));
}



inline jule::Bool _20547ded2_is_float_fmt_dotnp(jule::Slice<jule::U8> _24823_txt,jule::Int _24840_i) {
	if (_24823_txt[static_cast<jule::Int>(_24840_i)] != '.') {
		return false;
	}
	(_24840_i)++;
	_julec_label_loop:;
	_iter_begin_4385106128:;
	if (!(_24840_i < _24823_txt.len())) { goto _iter_end_4385106128; }
	{
		jule::U8 _25613_b = _24823_txt[static_cast<jule::Int>(_24840_i)];
		{
			if (!((_20542560a_is_decimal(_25613_b)))) { goto _case_end_4385112240; }
			_case_begin_4385112240:;
			{
				goto _iter_next_4385106128;
			}
			goto _match_end_4385111760;
			_case_end_4385112240:;
			if (!((_20547ded2_is_float_fmt_p(_25613_b,_24840_i)))) { goto _case_end_4385112352; }
			_case_begin_4385112352:;
			{
				return true;
			}
			goto _match_end_4385111760;
			_case_end_4385112352:;
			_case_begin_4385111888:;
			{
				goto _iter_end_4385106128;
			}
			goto _match_end_4385111760;
			_case_end_4385111888:;
			_match_end_4385111760:;
		}
	}
	_iter_next_4385106128:;
	(_24840_i)++;
	goto _iter_begin_4385106128;
	_iter_end_4385106128:;
	return false;
}



inline jule::Bool _20547ded2_is_float_fmt_dotp(jule::Slice<jule::U8> _26722_txt,jule::Int _26735_i) {
	{
		if (!((_26722_txt.len() < 3LL))) { goto _case_end_4385117616; }
		_case_begin_4385117616:;
		{
			goto _case_begin_4385117728;
		}
		goto _match_end_4385117072;
		_case_end_4385117616:;
		if (!((_26722_txt[static_cast<jule::Int>(_26735_i)] != '.'))) { goto _case_end_4385117728; }
		_case_begin_4385117728:;
		{
			goto _case_begin_4385117840;
		}
		goto _match_end_4385117072;
		_case_end_4385117728:;
		if (!(((_26722_txt[static_cast<jule::Int>(_26735_i + 1LL)] != 'p') && (_26722_txt[static_cast<jule::Int>(_26735_i + 1LL)] != 'P')))) { goto _case_end_4385117840; }
		_case_begin_4385117840:;
		{
			return false;
		}
		goto _match_end_4385117072;
		_case_end_4385117840:;
		_case_begin_4385117248:;
		{
			return true;
		}
		goto _match_end_4385117072;
		_case_end_4385117248:;
		_match_end_4385117072:;
	}
}



inline jule::Bool _20547ded2_is_float_fmt_dotfp(jule::Slice<jule::U8> _27623_txt,jule::Int _27636_i) {
	{
		if (!((_27623_txt.len() < 4LL))) { goto _case_end_4385126192; }
		_case_begin_4385126192:;
		{
			goto _case_begin_4385126304;
		}
		goto _match_end_4385125632;
		_case_end_4385126192:;
		if (!((_27623_txt[static_cast<jule::Int>(_27636_i)] != '.'))) { goto _case_end_4385126304; }
		_case_begin_4385126304:;
		{
			goto _case_begin_4385126416;
		}
		goto _match_end_4385125632;
		_case_end_4385126304:;
		if (!(((_27623_txt[static_cast<jule::Int>(_27636_i + 1LL)] != 'f') && (_27623_txt[static_cast<jule::Int>(_27636_i + 1LL)] != 'F')))) { goto _case_end_4385126416; }
		_case_begin_4385126416:;
		{
			goto _case_begin_4385127504;
		}
		goto _match_end_4385125632;
		_case_end_4385126416:;
		if (!(((_27623_txt[static_cast<jule::Int>(_27636_i + 2LL)] != 'p') && (_27623_txt[static_cast<jule::Int>(_27636_i + 1LL)] != 'P')))) { goto _case_end_4385127504; }
		_case_begin_4385127504:;
		{
			return false;
		}
		goto _match_end_4385125632;
		_case_end_4385127504:;
		_case_begin_4385125808:;
		{
			return true;
		}
		goto _match_end_4385125632;
		_case_end_4385125808:;
		_match_end_4385125632:;
	}
}



inline jule::Str _20547ded2_octal_num(jule::Slice<jule::U8> _28614_txt) {
	jule::Str _28629_lit = jule::Str();
	if (_28614_txt[0LL] != '0') {
		_28629_lit = jule::Str("", 0);
		return _28629_lit;
	}
	if (_28614_txt.len() < 2LL) {
		return _28629_lit;
	}
	jule::Int _29413_octal_start = 1LL;
	if (_28614_txt[1LL] == 'o') {
		if (_28614_txt.len() < 3LL) {
			return _28629_lit;
		}
		(_29413_octal_start)++;
	}
	jule::Int _30313_i = _29413_octal_start;
	_iter_begin_4385144080:;
	if (!(_30313_i < _28614_txt.len())) { goto _iter_end_4385144080; }
	{
		jule::U8 _30513_b = _28614_txt[static_cast<jule::Int>(_30313_i)];
		if (_20547ded2_is_float_fmt_e(_30513_b,_30313_i)) {
			_28629_lit = _20547ded2_float_fmt_e(_28614_txt,_30313_i);
			return _28629_lit;
		}
		if ((!(_20542560a_is_octal(_30513_b)))) {
			goto _iter_end_4385144080;
		}
	}
	_iter_next_4385144080:;
	(_30313_i)++;
	goto _iter_begin_4385144080;
	_iter_end_4385144080:;
	if (_30313_i == _29413_octal_start) {
		return _28629_lit;
	}
	_28629_lit = static_cast<jule::Str>(_28614_txt.slice(0LL,static_cast<jule::Int>(_30313_i)));
	return _28629_lit;
}



inline jule::Str _20547ded2_hex_num(jule::Slice<jule::U8> _32012_txt) {
	jule::Str _32027_lit = jule::Str();
	if (_32012_txt.len() < 3LL) {
		return _32027_lit;
	}
	if ((_32012_txt[0LL] != '0') || ((_32012_txt[1LL] != 'x') && (_32012_txt[1LL] != 'X'))) {
		return _32027_lit;
	}
	
	jule::Int _32913_i = 2LL;
	_julec_label_loop:;
	_iter_begin_4385176256:;
	if (!(_32913_i < _32012_txt.len())) { goto _iter_end_4385176256; }
	{
		jule::U8 _33213_b = _32012_txt[static_cast<jule::Int>(_32913_i)];
		{
			if (!((_20547ded2_is_float_fmt_dotp(_32012_txt,_32913_i)))) { goto _case_end_4385179536; }
			_case_begin_4385179536:;
			{
				_32027_lit = _20547ded2_float_fmt_dotp(_32012_txt,_32913_i);
				return _32027_lit;
			}
			goto _match_end_4385179312;
			_case_end_4385179536:;
			if (!((_20547ded2_is_float_fmt_dotfp(_32012_txt,_32913_i)))) { goto _case_end_4385179664; }
			_case_begin_4385179664:;
			{
				_32027_lit = _20547ded2_float_fmt_dotfp(_32012_txt,_32913_i);
				return _32027_lit;
			}
			goto _match_end_4385179312;
			_case_end_4385179664:;
			if (!((_20547ded2_is_float_fmt_p(_33213_b,_32913_i)))) { goto _case_end_4385179792; }
			_case_begin_4385179792:;
			{
				_32027_lit = _20547ded2_float_fmt_p(_32012_txt,_32913_i);
				return _32027_lit;
			}
			goto _match_end_4385179312;
			_case_end_4385179792:;
			if (!((_20547ded2_is_float_fmt_dotnp(_32012_txt,_32913_i)))) { goto _case_end_4385179920; }
			_case_begin_4385179920:;
			{
				_32027_lit = _20547ded2_float_fmt_dotnp(_32012_txt,_32913_i);
				return _32027_lit;
			}
			goto _match_end_4385179312;
			_case_end_4385179920:;
			if (!(((!(_20542560a_is_hex(_33213_b)))))) { goto _case_end_4385180048; }
			_case_begin_4385180048:;
			{
				goto _iter_end_4385176256;
			}
			goto _match_end_4385179312;
			_case_end_4385180048:;
			_match_end_4385179312:;
		}
	}
	_iter_next_4385176256:;
	(_32913_i)++;
	goto _iter_begin_4385176256;
	_iter_end_4385176256:;
	if (_32913_i == 2LL) {
		return _32027_lit;
	}
	_32027_lit = static_cast<jule::Str>(_32012_txt.slice(0LL,static_cast<jule::Int>(_32913_i)));
	return _32027_lit;
}



inline jule::Str _20547ded2_hex_escape(jule::Slice<jule::U8> _35715_txt,jule::Int _35728_n) {
	jule::Str _35738_seq = jule::Str();
	if (_35715_txt.len() < _35728_n) {
		return _35738_seq;
	}
	
	jule::Int _36313_i = 2LL;
	_iter_begin_4385192784:;
	if (!(_36313_i < _35728_n)) { goto _iter_end_4385192784; }
	{
		if ((!(_20542560a_is_hex(_35715_txt[static_cast<jule::Int>(_36313_i)])))) {
			return _35738_seq;
		}
	}
	_iter_next_4385192784:;
	(_36313_i)++;
	goto _iter_begin_4385192784;
	_iter_end_4385192784:;
	_35738_seq=static_cast<jule::Str>(_35715_txt.slice(0LL,static_cast<jule::Int>(_35728_n)));
	return _35738_seq;
}



inline jule::Str _20547ded2_big_unicode_point_escape(jule::Slice<jule::U8> _37529_txt) {
	return _20547ded2_hex_escape(_37529_txt,10LL);
}



inline jule::Str _20547ded2_little_unicode_point_escape(jule::Slice<jule::U8> _37732_txt) {
	return _20547ded2_hex_escape(_37732_txt,6LL);
}



inline jule::Str _20547ded2_hex_byte_escape(jule::Slice<jule::U8> _37920_txt) {
	return _20547ded2_hex_escape(_37920_txt,4LL);
}



inline jule::Str _20547ded2_byte_escape(jule::Slice<jule::U8> _38216_txt) {
	jule::Str _38231_seq = jule::Str();
	if (_38216_txt.len() < 4LL) {
		return _38231_seq;
	}
	if (((!(_20542560a_is_octal(_38216_txt[1LL]))) || (!(_20542560a_is_octal(_38216_txt[2LL])))) || (!(_20542560a_is_octal(_38216_txt[3LL])))) {
		return _38231_seq;
	}
	_38231_seq = static_cast<jule::Str>(_38216_txt.slice(0LL,4LL));
	return _38231_seq;
}



inline jule::Slice<_20377124e_Log> _20547ded2_lex(jule::Ref<_2053bdb25_File> _77616_f) {
	if ((!(jule::real(_77616_f)))) {
		return nullptr;
	}
	_20547ded2_Lex _78113_lex = _20547ded2_Lex(jule::Slice<_20542560a_Token>(),_77616_f,0LL,jule::Int(),-1LL,jule::Slice<_20377124e_Log>());
	_78113_lex._method_new_line();
	_78113_lex._method_lex();
	if (_78113_lex._field_errors.len() > 0LL) {
		return _78113_lex._field_errors;
	}
	_77616_f->_field__tokens=_78113_lex._field_tokens;
	return nullptr;
}



inline jule::Ref<_2053a3313_FileInfo> _2053a3313_parse_file(jule::Ref<_2053bdb25_File> _2223_f) {
	if ((!(jule::real(_2223_f)))) {
		return jule::new_ref<_2053a3313_FileInfo>();
	}
	jule::Ref<_2053a3313_FileInfo> _2713_finf = jule::new_struct<_2053a3313_FileInfo>(new( std::nothrow ) _2053a3313_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _2053a3313_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors.len() > 0LL) {
		jule::drop(_2713_finf->_field_ast);
	}
	return _2713_finf;
}



inline jule::Ref<_2053a3313_PackageInfo> _2053a3313_parse_package(jule::Slice<jule::Ref<_2053bdb25_File>> _3926_filesets) {
	if (_3926_filesets == nullptr) {
		return jule::new_ref<_2053a3313_PackageInfo>();
	}
	jule::Ref<_2053a3313_PackageInfo> _4413_pinf = jule::new_struct<_2053a3313_PackageInfo>(new( std::nothrow ) _2053a3313_PackageInfo());
	_4413_pinf->_field_files=jule::Slice<jule::Ref<_2053a3313_FileInfo>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_3926_filesets.len())));
	{
		auto _range_expr = _3926_filesets;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053bdb25_File> _2053a3313_f = *_range_begin;
			_iter_begin_4385923936:;
			{
				if ((!(jule::real(_2053a3313_f)))) {
					goto _iter_next_4385923936;
				}
				jule::Ref<_2053a3313_FileInfo> _5117_finfo = _2053a3313_parse_file(_2053a3313_f);
				_4413_pinf->_field_files=jule::append(_4413_pinf->_field_files,jule::Slice<jule::Ref<_2053a3313_FileInfo>>({_5117_finfo}));
			}
			_iter_next_4385923936:;
			++_range_begin;
			if (_range_begin != _range_end) { _2053a3313_f = *_range_begin; goto _iter_begin_4385923936; }
			_iter_end_4385923936:;
		}
	}
	return _4413_pinf;
}



inline std::tuple<jule::Ref<_20521102d_Ast>,jule::Slice<_20377124e_Log>> _2053a3313_parse_fileset(jule::Ref<_2053bdb25_File> _5822_f) {
	jule::Ref<_206540c0d_Parser> _5913_p = jule::new_struct<_206540c0d_Parser>(new( std::nothrow ) _206540c0d_Parser());
	_5913_p->_method_parse(_5822_f);
	return std::make_tuple(_5913_p->_field_ast,_5913_p->_field_errors);
}



inline jule::Ref<_2053703bd_ScopeTree> _2053cae51_new_scope(void) {
	return jule::new_struct<_2053703bd_ScopeTree>(new( std::nothrow ) _2053703bd_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _2053cae51_is_st(_20542560a_Token _4410_current,_20542560a_Token _4426_prev) {
	jule::Bool _4441_ok = jule::Bool();
	jule::Bool _4451_terminated = jule::Bool();
	_4441_ok=(_4410_current._field_id == 5LLU) || (_4426_prev._field_row < _4410_current._field_row);
	_4451_terminated=_4410_current._field_id == 5LLU;
	return std::make_tuple(_4441_ok,_4451_terminated);
}



inline jule::Bool _2053cae51_prev_is_incomplete_binary_expr(jule::Slice<_20542560a_Token>& _5036_tokens,jule::Int& _5054_i) {
	if ((_5054_i > 1LL) && (_5036_tokens[static_cast<jule::Int>(_5054_i - 2LL)]._field_id == 23LLU)) {
		return false;
	}
	{
		_20542560a_Token* _5713_prev = (&(_5036_tokens[static_cast<jule::Int>(_5054_i - 1LL)]));
		return ((_5713_prev->_field_id == 7LLU) && _20542560a_is_bin_op(_5713_prev->_field_kind)) && (_5713_prev->_field_row < _5036_tokens[static_cast<jule::Int>(_5054_i)]._field_row);
	}
}



inline std::tuple<jule::Int,jule::Bool> _2053cae51_next_st_pos(jule::Slice<_20542560a_Token> _6516_tokens,jule::Int _6533_start) {
	jule::Int _6613_brace_n = 0LL;
	jule::Int _6713_i = _6533_start;
	_iter_begin_4385953376:;
	if (!(_6713_i < _6516_tokens.len())) { goto _iter_end_4385953376; }
	{
		jule::Bool _6917_ok = false;
		jule::Bool _7017_terminated = false;
		_20542560a_Token _7113_tok = _6516_tokens[static_cast<jule::Int>(_6713_i)];
		{
			auto _match_expr{ _7113_tok._field_id };
			if (!((3LLU) == _match_expr)) { goto _case_end_4385959408; }
			_case_begin_4385959408:;
			{
				{
					auto _match_expr{ _7113_tok._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4385967680; }
					_case_begin_4385967680:;
					{
						if ((_6613_brace_n == 0LL) && (_6713_i > _6533_start)) {
							if ((!(_2053cae51_prev_is_incomplete_binary_expr(_6516_tokens,_6713_i)))) {
								std::tie(_6917_ok,_7017_terminated) = _2053cae51_is_st(_7113_tok,_6516_tokens[static_cast<jule::Int>(_6713_i - 1LL)]);
								if (_6917_ok) {
									goto _julec_label_return;
								}
							}
						}
						(_6613_brace_n)++;
					}
					goto _match_end_4385959920;
					_case_end_4385967680:;
					_case_begin_4385961040:;
					{
						(_6613_brace_n)--;
						if ((_6613_brace_n == 0LL) && ((_6713_i + 1LL) < _6516_tokens.len())) {
							std::tie(_6917_ok,_7017_terminated) = _2053cae51_is_st(_6516_tokens[static_cast<jule::Int>(_6713_i + 1LL)],_7113_tok);
							if (_6917_ok) {
								(_6713_i)++;
								goto _julec_label_return;
							}
						}
					}
					goto _match_end_4385959920;
					_case_end_4385961040:;
					_match_end_4385959920:;
				}
				goto _iter_next_4385953376;
			}
			goto _match_end_4385955136;
			_case_end_4385959408:;
			_match_end_4385955136:;
		}
		if (_6613_brace_n != 0LL) {
			goto _iter_next_4385953376;
		}
		if (_6713_i > _6533_start) {
			if (_2053cae51_prev_is_incomplete_binary_expr(_6516_tokens,_6713_i)) {
				goto _iter_next_4385953376;
			}
			std::tie(_6917_ok,_7017_terminated) = _2053cae51_is_st(_7113_tok,_6516_tokens[static_cast<jule::Int>(_6713_i - 1LL)]);
		} else {
			std::tie(_6917_ok,_7017_terminated) = _2053cae51_is_st(_7113_tok,_7113_tok);
		}
		if ((!(_6917_ok))) {
			goto _iter_next_4385953376;
		}
		_julec_label_return:;
		if (_7017_terminated) {
			(_6713_i)++;
		}
		return std::make_tuple(_6713_i,_7017_terminated);
	}
	_iter_next_4385953376:;
	(_6713_i)++;
	goto _iter_begin_4385953376;
	_iter_end_4385953376:;
	return std::make_tuple(_6713_i,false);
}



inline std::tuple<jule::Slice<_20542560a_Token>,jule::Bool> _2053cae51_skip_st(jule::Int& _12817_i,jule::Slice<_20542560a_Token> _12829_tokens) {
	jule::Int _1299_start = _12817_i;
	jule::Bool _13013_terminated = false;
	std::tie(_12817_i,_13013_terminated) = _2053cae51_next_st_pos(_12829_tokens,_1299_start);
	jule::Slice<_20542560a_Token> _13213_st_tokens = _12829_tokens.slice(static_cast<jule::Int>(_1299_start),static_cast<jule::Int>(_12817_i));
	if (_13013_terminated) {
		if (_13213_st_tokens.len() == 1LL) {
			std::tie(_13213_st_tokens,_13013_terminated) = _2053cae51_skip_st(_12817_i,_12829_tokens);
			return std::make_tuple(_13213_st_tokens,_13013_terminated);
		}
		_13213_st_tokens=_13213_st_tokens.slice(0LL,static_cast<jule::Int>(_13213_st_tokens.len() - 1LL));
	}
	return std::make_tuple(_13213_st_tokens,_13013_terminated);
}



inline jule::Slice<jule::Ref<_2053cae51_Stmt>> _2053cae51_split_stms(jule::Slice<_20542560a_Token> _15019_tokens) {
	jule::Slice<jule::Ref<_2053cae51_Stmt>> _15113_stms = nullptr;
	jule::Int _15213_pos = 0LL;
	_iter_begin_4385996208:;
	if (!(_15213_pos < _15019_tokens.len())) { goto _iter_end_4385996208; }
	{
		jule::Slice<_20542560a_Token> _15418_tokens;
		jule::Bool _15426_terminated;
		std::tie(_15418_tokens,_15426_terminated) = _2053cae51_skip_st(_15213_pos,_15019_tokens);
		_15113_stms=jule::append(_15113_stms,jule::Slice<jule::Ref<_2053cae51_Stmt>>({jule::new_struct<_2053cae51_Stmt>(new( std::nothrow ) _2053cae51_Stmt(_15418_tokens,_15426_terminated))}));
	}
	_iter_next_4385996208:;
	goto _iter_begin_4385996208;
	_iter_end_4385996208:;
	return _15113_stms;
}



inline jule::Slice<_20542560a_Token> _2054205a0_is_fn_call(jule::Slice<_20542560a_Token> _3919_tokens) {
	{
		auto _match_expr{ _3919_tokens[0LL]._field_id };
		if (!((3LLU) == _match_expr || (2LLU) == _match_expr || (1LLU) == _match_expr)) { goto _case_end_4386007328; }
		goto _match_end_4385983152;
		_case_end_4386007328:;
		_case_begin_4386000464:;
		{
			_20542560a_Token _4713_tok = _3919_tokens[static_cast<jule::Int>(_3919_tokens.len() - 1LL)];
			if ((_4713_tok._field_id != 3LLU) && (_4713_tok._field_kind != jule::Str(")", 1))) {
				return nullptr;
			}
		}
		goto _match_end_4385983152;
		_case_end_4386000464:;
		_match_end_4385983152:;
	}
	_20542560a_Token _5213_tok = _3919_tokens[static_cast<jule::Int>(_3919_tokens.len() - 1LL)];
	if ((_5213_tok._field_id != 3LLU) || (_5213_tok._field_kind != jule::Str(")", 1))) {
		return nullptr;
	}
	jule::Int _5613_brace_n = 0LL;
	jule::I64 _5913_i = _3919_tokens.len() - 1LL;
	_iter_begin_4386011728:;
	if (!(_5913_i >= 1LL)) { goto _iter_end_4386011728; }
	{
		_5213_tok=_3919_tokens[static_cast<jule::Int>(_5913_i)];
		if (_5213_tok._field_id == 3LLU) {
			{
				auto _match_expr{ _5213_tok._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4386016928; }
				_case_begin_4386016928:;
				{
					(_5613_brace_n)++;
				}
				goto _match_end_4386016224;
				_case_end_4386016928:;
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4386017040; }
				_case_begin_4386017040:;
				{
					(_5613_brace_n)--;
				}
				goto _match_end_4386016224;
				_case_end_4386017040:;
				_match_end_4386016224:;
			}
			if (_5613_brace_n == 0LL) {
				return _3919_tokens.slice(0LL,static_cast<jule::Int>(_5913_i));
			}
		}
	}
	_iter_next_4386011728:;
	(_5913_i)--;
	goto _iter_begin_4386011728;
	_iter_end_4386011728:;
	return nullptr;
}



inline jule::Ref<_2054205a0_CallData> _2054205a0_get_call_data(jule::Slice<_20542560a_Token> _8122_tokens) {
	jule::Ref<_2054205a0_CallData> _8213_data = jule::new_struct<_2054205a0_CallData>(new( std::nothrow ) _2054205a0_CallData());
	std::tie(_8213_data->_field_expr_tokens,_8213_data->_field_args_tokens) = _206540c0d_range_last(_8122_tokens);
	if (_8213_data->_field_expr_tokens.len() == 0LL) {
		return _8213_data;
	}
	_20542560a_Token _899_token = _8213_data->_field_expr_tokens[static_cast<jule::Int>(_8213_data->_field_expr_tokens.len() - 1LL)];
	if ((_899_token._field_id == 3LLU) && (_899_token._field_kind == jule::Str("]", 1))) {
		std::tie(_8213_data->_field_expr_tokens,_8213_data->_field_generics_tokens) = _206540c0d_range_last(_8213_data->_field_expr_tokens);
	}
	return _8213_data;
}



inline jule::Slice<_20542560a_Token> _2054205a0_get_block_expr(jule::Slice<_20542560a_Token> _9723_tokens) {
	jule::Int _9813_brace_n = 0LL;
	{
		auto _range_expr = _9723_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2054205a0_i = 0;
			_20542560a_Token _2054205a0_tok = *_range_begin;
			_iter_begin_4386030704:;
			{
				if (_2054205a0_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _2054205a0_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4386035232; }
						_case_begin_4386035232:;
						{
							if (_9813_brace_n > 0LL) {
								(_9813_brace_n)++;
								goto _match_end_4386033648;
							}
							return _9723_tokens.slice(0LL,static_cast<jule::Int>(_2054205a0_i));
						}
						goto _match_end_4386033648;
						_case_end_4386035232:;
						if (!((jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4386035584; }
						_case_begin_4386035584:;
						{
							(_9813_brace_n)++;
						}
						goto _match_end_4386033648;
						_case_end_4386035584:;
						_case_begin_4386034432:;
						{
							(_9813_brace_n)--;
						}
						goto _match_end_4386033648;
						_case_end_4386034432:;
						_match_end_4386033648:;
					}
				}
			}
			_iter_next_4386030704:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2054205a0_i; _2054205a0_tok = *_range_begin; goto _iter_begin_4386030704; }
			_iter_end_4386030704:;
		}
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_20542560a_Token>,jule::Slice<_20542560a_Token>> _2054205a0_split_colon(jule::Slice<_20542560a_Token> _12320_tokens) {
	jule::Int _12413_range_n = 0LL;
	{
		auto _range_expr = _12320_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2054205a0_i = 0;
			_20542560a_Token _2054205a0_token = *_range_begin;
			_iter_begin_4386038976:;
			{
				{
					auto _match_expr{ _2054205a0_token._field_id };
					if (!((3LLU) == _match_expr)) { goto _case_end_4386041792; }
					_case_begin_4386041792:;
					{
						{
							auto _match_expr{ _2054205a0_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4386044400; }
							_case_begin_4386044400:;
							{
								(_12413_range_n)++;
								goto _iter_next_4386038976;
							}
							goto _match_end_4386042464;
							_case_end_4386044400:;
							_case_begin_4386043584:;
							{
								(_12413_range_n)--;
							}
							goto _match_end_4386042464;
							_case_end_4386043584:;
							_match_end_4386042464:;
						}
					}
					goto _match_end_4386040960;
					_case_end_4386041792:;
					if (!((11LLU) == _match_expr)) { goto _case_end_4386041904; }
					_case_begin_4386041904:;
					{
						if (_12413_range_n < 1LL) {
							jule::Slice<_20542560a_Token> _14125_l = _12320_tokens.slice(0LL,static_cast<jule::Int>(_2054205a0_i));
							jule::Slice<_20542560a_Token> _14225_r = _12320_tokens.slice(static_cast<jule::Int>(_2054205a0_i + 1LL));
							return std::make_tuple(_14125_l,_14225_r);
						}
					}
					goto _match_end_4386040960;
					_case_end_4386041904:;
					_match_end_4386040960:;
				}
			}
			_iter_next_4386038976:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2054205a0_i; _2054205a0_token = *_range_begin; goto _iter_begin_4386038976; }
			_iter_end_4386038976:;
		}
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_20542560a_Token> _2054205a0_eliminate_comments(jule::Slice<_20542560a_Token> _18127_tokens) {
	jule::Slice<_20542560a_Token> _18213_cutted = nullptr;
	{
		auto _range_expr = _18127_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_20542560a_Token _2054205a0_token = *_range_begin;
			_iter_begin_4386053152:;
			{
				if (_2054205a0_token._field_id != 18LLU) {
					_18213_cutted=jule::append(_18213_cutted,jule::Slice<_20542560a_Token>({_2054205a0_token}));
				}
			}
			_iter_next_4386053152:;
			++_range_begin;
			if (_range_begin != _range_end) { _2054205a0_token = *_range_begin; goto _iter_begin_4386053152; }
			_iter_end_4386053152:;
		}
	}
	return _18213_cutted;
}



inline jule::Int _2054205a0_find_lowest_prec_op(jule::Slice<_20542560a_Token> _19324_tokens) {
	_2054205a0_Precedencer _19413_prec = _2054205a0_Precedencer();
	jule::Int _19513_brace_n = 0LL;
	{
		auto _range_expr = _19324_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2054205a0_i = 0;
			_20542560a_Token _2054205a0_token = *_range_begin;
			_iter_begin_4386060256:;
			{
				{
					if (!((_2054205a0_token._field_id == 3LLU))) { goto _case_end_4386063088; }
					_case_begin_4386063088:;
					{
						{
							auto _match_expr{ _2054205a0_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4386066416; }
							_case_begin_4386066416:;
							{
								(_19513_brace_n)++;
							}
							goto _match_end_4386064448;
							_case_end_4386066416:;
							_case_begin_4386064704:;
							{
								(_19513_brace_n)--;
							}
							goto _match_end_4386064448;
							_case_end_4386064704:;
							_match_end_4386064448:;
						}
						goto _iter_next_4386060256;
					}
					goto _match_end_4386062816;
					_case_end_4386063088:;
					if (!((_2054205a0_i == 0LL))) { goto _case_end_4386063216; }
					_case_begin_4386063216:;
					{
						goto _iter_next_4386060256;
					}
					goto _match_end_4386062816;
					_case_end_4386063216:;
					if (!((_2054205a0_token._field_id != 7LLU))) { goto _case_end_4386063344; }
					_case_begin_4386063344:;
					{
						goto _iter_next_4386060256;
					}
					goto _match_end_4386062816;
					_case_end_4386063344:;
					if (!((_19513_brace_n > 0LL))) { goto _case_end_4386063472; }
					_case_begin_4386063472:;
					{
						goto _iter_next_4386060256;
					}
					goto _match_end_4386062816;
					_case_end_4386063472:;
					_match_end_4386062816:;
				}
				_20542560a_Token _22013_left = _19324_tokens[static_cast<jule::Int>(_2054205a0_i - 1LL)];
				if ((_22013_left._field_id == 7LLU) || (_22013_left._field_id == 11LLU)) {
					goto _iter_next_4386060256;
				}
				if (((_2054205a0_i > 1LL) && (_22013_left._field_id == 3LLU)) && (_22013_left._field_kind == jule::Str("]", 1))) {
					_20542560a_Token _22817_lleft = _19324_tokens[static_cast<jule::Int>(_2054205a0_i - 2LL)];
					if ((_22817_lleft._field_id == 3LLU) && (_22817_lleft._field_kind == jule::Str("[", 1))) {
						if ((_2054205a0_token._field_kind == jule::Str("&", 1)) || (_2054205a0_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_4386060256;
						}
					}
				}
				jule::Int _23713_p = _2054205a0_token._method_prec();
				if (_23713_p != -1LL) {
					_19413_prec._method_set(_23713_p,jule::Any(_2054205a0_i));
				}
			}
			_iter_next_4386060256:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2054205a0_i; _2054205a0_token = *_range_begin; goto _iter_begin_4386060256; }
			_iter_end_4386060256:;
		}
	}
	jule::Any _2439_data = _19413_prec._method_get_lower();
	if (_2439_data == nullptr) {
		return -1LL;
	}
	return _2439_data.operator jule::Int();
}



inline jule::Ref<_2053703bd_IdentExpr> _2054205a0_build_ident_expr(_20542560a_Token _25025_token) {
	return jule::new_struct<_2053703bd_IdentExpr>(new( std::nothrow ) _2053703bd_IdentExpr(_25025_token,_25025_token._field_kind,false));
}



inline std::tuple<jule::Slice<_20542560a_Token>,jule::Int> _2054205a0_get_range_expr_tokens(jule::Slice<_20542560a_Token> _25830_tokens) {
	jule::Int _25913_range_n = 0LL;
	jule::I64 _26013_i = _25830_tokens.len() - 1LL;
	_iter_begin_4386090224:;
	if (!(_26013_i >= 0LL)) { goto _iter_end_4386090224; }
	{
		_20542560a_Token _26213_tok = _25830_tokens[static_cast<jule::Int>(_26013_i)];
		if (_26213_tok._field_id == 3LLU) {
			{
				auto _match_expr{ _26213_tok._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4386096272; }
				_case_begin_4386096272:;
				{
					(_25913_range_n)++;
				}
				goto _match_end_4386094688;
				_case_end_4386096272:;
				_case_begin_4386095472:;
				{
					(_25913_range_n)--;
				}
				goto _match_end_4386094688;
				_case_end_4386095472:;
				_match_end_4386094688:;
			}
		}
		if (_25913_range_n == 0LL) {
			return std::make_tuple(_25830_tokens.slice(0LL,static_cast<jule::Int>(_26013_i)),_25913_range_n);
		}
	}
	_iter_next_4386090224:;
	(_26013_i)--;
	goto _iter_begin_4386090224;
	_iter_end_4386090224:;
	return std::make_tuple(nullptr,_25913_range_n);
}



inline jule::Bool _20543982d_check_assign_tokens(jule::Slice<_20542560a_Token> _1624_tokens) {
	if ((_1624_tokens.len() == 0LL) || (!(_20542560a_is_assign(_1624_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto _range_expr = _1624_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_20542560a_Token _20543982d_t = *_range_begin;
			_iter_begin_4386103776:;
			{
				if (_20543982d_t._field_id == 3LLU) {
					{
						auto _match_expr{ _20543982d_t._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4386107568; }
						_case_begin_4386107568:;
						{
							(_2113_brace_n)++;
						}
						goto _match_end_4386105984;
						_case_end_4386107568:;
						_case_begin_4386106768:;
						{
							(_2113_brace_n)--;
						}
						goto _match_end_4386105984;
						_case_end_4386106768:;
						_match_end_4386105984:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_4386103776;
				} else if ((_20543982d_t._field_id == 7LLU) && _20542560a_is_assign_op(_20543982d_t._field_kind)) {
					return true;
				}
			}
			_iter_next_4386103776:;
			++_range_begin;
			if (_range_begin != _range_end) { _20543982d_t = *_range_begin; goto _iter_begin_4386103776; }
			_iter_end_4386103776:;
		}
	}
	return false;
}



inline _20377124e_Log _206540c0d_make_err(jule::Int _5113_row,jule::Int _5123_col,jule::Ref<_2053bdb25_File> _5133_f,jule::Str _5143_fmt,jule::Slice<jule::Any> _5156_args) {
	return _20377124e_Log(1LLU,_5113_row,_5123_col,_5133_f->_method_path(),_20377124e_logf(_5143_fmt,_5156_args),jule::Str(),jule::Str());
}



inline jule::Slice<_20542560a_Token> _206540c0d_range(jule::Int& _7015_i,jule::Str _7023_open,jule::Str _7040_close,jule::Slice<_20542560a_Token> _7062_tokens) {
	if (_7015_i >= _7062_tokens.len()) {
		return nullptr;
	}
	_20542560a_Token _759_tok = _7062_tokens[static_cast<jule::Int>(_7015_i)];
	if ((_759_tok._field_id != 3LLU) || (_759_tok._field_kind != _7023_open)) {
		return nullptr;
	}
	(_7015_i)++;
	jule::Int _8113_range_n = 1LL;
	jule::Int _829_start = _7015_i;
	_iter_begin_4386122720:;
	if (!((_8113_range_n != 0LL) && (_7015_i < _7062_tokens.len()))) { goto _iter_end_4386122720; }
	{
		_20542560a_Token _8413_token = _7062_tokens[static_cast<jule::Int>(_7015_i)];
		if (_8413_token._field_id == 3LLU) {
			{
				auto _match_expr{ _8413_token._field_kind };
				if (!((_7023_open) == _match_expr)) { goto _case_end_4386130208; }
				_case_begin_4386130208:;
				{
					(_8113_range_n)++;
				}
				goto _match_end_4386129376;
				_case_end_4386130208:;
				if (!((_7040_close) == _match_expr)) { goto _case_end_4386130320; }
				_case_begin_4386130320:;
				{
					(_8113_range_n)--;
				}
				goto _match_end_4386129376;
				_case_end_4386130320:;
				_match_end_4386129376:;
			}
		}
	}
	_iter_next_4386122720:;
	(_7015_i)++;
	goto _iter_begin_4386122720;
	_iter_end_4386122720:;
	return _7062_tokens.slice(static_cast<jule::Int>(_829_start),static_cast<jule::Int>(_7015_i - 1LL));
}



inline std::tuple<jule::Slice<_20542560a_Token>,jule::Slice<_20542560a_Token>> _206540c0d_range_last(jule::Slice<_20542560a_Token> _10319_tokens) {
	jule::Slice<_20542560a_Token> _10338_cutted = jule::Slice<_20542560a_Token>();
	jule::Slice<_20542560a_Token> _10355_cut = jule::Slice<_20542560a_Token>();
	if (_10319_tokens.len() == 0LL) {
		_10338_cutted = _10319_tokens;
		_10355_cut = nullptr;
		return std::make_tuple(_10338_cutted,_10355_cut);
	} else if (_10319_tokens[static_cast<jule::Int>(_10319_tokens.len() - 1LL)]._field_id != 3LLU) {
		_10338_cutted = _10319_tokens;
		_10355_cut = nullptr;
		return std::make_tuple(_10338_cutted,_10355_cut);
	}
	jule::Int _11013_brace_n = 0LL;
	jule::I64 _11113_i = _10319_tokens.len() - 1LL;
	_iter_begin_4386132448:;
	if (!(_11113_i >= 0LL)) { goto _iter_end_4386132448; }
	{
		_20542560a_Token _11313_token = _10319_tokens[static_cast<jule::Int>(_11113_i)];
		if (_11313_token._field_id == 3LLU) {
			{
				auto _match_expr{ _11313_token._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4386146704; }
				_case_begin_4386146704:;
				{
					(_11013_brace_n)++;
					goto _iter_next_4386132448;
				}
				goto _match_end_4386145120;
				_case_end_4386146704:;
				_case_begin_4386145904:;
				{
					(_11013_brace_n)--;
				}
				goto _match_end_4386145120;
				_case_end_4386145904:;
				_match_end_4386145120:;
			}
		}
		if (_11013_brace_n == 0LL) {
			_10338_cutted = _10319_tokens.slice(0LL,static_cast<jule::Int>(_11113_i));
			_10355_cut = _10319_tokens.slice(static_cast<jule::Int>(_11113_i));
			return std::make_tuple(_10338_cutted,_10355_cut);
		}
	}
	_iter_next_4386132448:;
	(_11113_i)--;
	goto _iter_begin_4386132448;
	_iter_end_4386132448:;
	_10338_cutted = _10319_tokens;
	_10355_cut = nullptr;
	return std::make_tuple(_10338_cutted,_10355_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_20542560a_Token>>,jule::Slice<_20377124e_Log>> _206540c0d_parts(jule::Slice<_20542560a_Token> _14114_tokens,jule::Uint _14131_id,jule::Bool _14144_expr_must) {
	if (_14114_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_20542560a_Token>> _14613_parts = nullptr;
	jule::Slice<_20377124e_Log> _14713_errors = nullptr;
	jule::Int _14913_range_n = 0LL;
	jule::Int _15013_last = 0LL;
	{
		auto _range_expr = _14114_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206540c0d_i = 0;
			_20542560a_Token _206540c0d_token = *_range_begin;
			_iter_begin_4386160448:;
			{
				if (_206540c0d_token._field_id == 3LLU) {
					{
						auto _match_expr{ _206540c0d_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4386164848; }
						_case_begin_4386164848:;
						{
							(_14913_range_n)++;
							goto _iter_next_4386160448;
						}
						goto _match_end_4386163264;
						_case_end_4386164848:;
						_case_begin_4386164048:;
						{
							(_14913_range_n)--;
						}
						goto _match_end_4386163264;
						_case_end_4386164048:;
						_match_end_4386163264:;
					}
				}
				if (_14913_range_n > 0LL) {
					goto _iter_next_4386160448;
				}
				if (_206540c0d_token._field_id == _14131_id) {
					if (_14144_expr_must && ((_206540c0d_i - _15013_last) <= 0LL)) {
						_20377124e_Log _17021_err = _206540c0d_make_err(_206540c0d_token._field_row,_206540c0d_token._field_column,_206540c0d_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
						_14713_errors=jule::append(_14713_errors,jule::Slice<_20377124e_Log>({_17021_err}));
					}
					_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_20542560a_Token>>({_14114_tokens.slice(static_cast<jule::Int>(_15013_last),static_cast<jule::Int>(_206540c0d_i))}));
					_15013_last=static_cast<jule::Int>(_206540c0d_i + 1LL);
				}
			}
			_iter_next_4386160448:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206540c0d_i; _206540c0d_token = *_range_begin; goto _iter_begin_4386160448; }
			_iter_end_4386160448:;
		}
	}
	if (_15013_last < _14114_tokens.len()) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_20542560a_Token>>({_14114_tokens.slice(static_cast<jule::Int>(_15013_last))}));
	} else if ((!(_14144_expr_must))) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_20542560a_Token>>({jule::Slice<_20542560a_Token>({})}));
	}
	return std::make_tuple(_14613_parts,_14713_errors);
}



inline jule::Str _206540c0d_get_close_kind_of_brace(jule::Str _18728_left) {
	{
		auto _match_expr{ _18728_left };
		if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4386178592; }
		_case_begin_4386178592:;
		{
			return jule::Str("(", 1);
		}
		goto _match_end_4386174672;
		_case_end_4386178592:;
		if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4386178704; }
		_case_begin_4386178704:;
		{
			return jule::Str("{", 1);
		}
		goto _match_end_4386174672;
		_case_end_4386178704:;
		if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4386178816; }
		_case_begin_4386178816:;
		{
			return jule::Str("[", 1);
		}
		goto _match_end_4386174672;
		_case_end_4386178816:;
		_case_begin_4386175056:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4386174672;
		_case_end_4386175056:;
		_match_end_4386174672:;
	}
}



inline _20377124e_Log _206540c0d_compiler_err(_20542560a_Token _19617_token,jule::Str _19631_fmt,jule::Slice<jule::Any> _19644_args) {
	return _20377124e_Log(1LLU,_19617_token._field_row,_19617_token._field_column,_19617_token._field_file->_method_path(),_20377124e_logf(_19631_fmt,_19644_args),_19617_token._field_file->_method_get_row(_19617_token._field_row),jule::Str());
}



inline void _206540c0d_push_suggestion(_20377124e_Log* _20731_log,jule::Str _20742_fmt,jule::Slice<jule::Any> _20755_args) {
	_20731_log->_field_suggestion=_20377124e_logf(_20742_fmt,_20755_args);
}



inline jule::Ref<_2053703bd_Comment> _206540c0d_build_comment(_20542560a_Token _21122_token) {
	_21122_token._field_kind=_21122_token._field_kind.slice(2LL).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_2053703bd_Comment>(new( std::nothrow ) _2053703bd_Comment(_21122_token,_21122_token._field_kind));
}



inline jule::Str _206540c0d_tokstoa(jule::Slice<_20542560a_Token> _22012_tokens) {
	jule::Str _22113_s = jule::Str("", 0);
	{
		auto _range_expr = _22012_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_20542560a_Token _206540c0d_token = *_range_begin;
			_iter_begin_4386211008:;
			{
				_22113_s+=_206540c0d_token._field_kind;
			}
			_iter_next_4386211008:;
			++_range_begin;
			if (_range_begin != _range_end) { _206540c0d_token = *_range_begin; goto _iter_begin_4386211008; }
			_iter_end_4386211008:;
		}
	}
	return _22113_s;
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_build_void_type(void) {
	return jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl());
}



inline jule::Ref<_2053703bd_TypeDecl> _206581226_build_prim_type(_20542560a_Token _2024_token) {
	return jule::new_struct<_2053703bd_TypeDecl>(new( std::nothrow ) _2053703bd_TypeDecl(_2024_token,jule::Any(jule::new_struct<_2053703bd_IdentTypeDecl>(new( std::nothrow ) _2053703bd_IdentTypeDecl(_2024_token,_2024_token._field_kind,false,nullptr)))));
}



inline std::tuple<jule::Slice<_20542560a_Token>,jule::Int> _206581226_split_map_range(jule::Slice<_20542560a_Token> _3524_tokens,jule::Int& _3546_i) {
	jule::Slice<_20542560a_Token> _3556_range_tokens = jule::Slice<_20542560a_Token>();
	jule::Int _3579_colon = jule::Int();
	_3579_colon=-1LL;
	jule::Int _3713_range_n = 0LL;
	jule::Int _389_start = _3546_i;
	_iter_begin_4386220208:;
	if (!(_3546_i < _3524_tokens.len())) { goto _iter_end_4386220208; }
	{
		_20542560a_Token _4013_token = _3524_tokens[static_cast<jule::Int>(_3546_i)];
		if (_4013_token._field_id == 3LLU) {
			{
				auto _match_expr{ _4013_token._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4386225472; }
				_case_begin_4386225472:;
				{
					(_3713_range_n)++;
					goto _iter_next_4386220208;
				}
				goto _match_end_4386223888;
				_case_end_4386225472:;
				_case_begin_4386224672:;
				{
					(_3713_range_n)--;
				}
				goto _match_end_4386223888;
				_case_end_4386224672:;
				_match_end_4386223888:;
			}
		}
		if (_3713_range_n == 0LL) {
			if ((_389_start + 1LL) > _3546_i) {
				return std::make_tuple(_3556_range_tokens,_3579_colon);
			}
			_3556_range_tokens=_3524_tokens.slice(static_cast<jule::Int>(_389_start + 1LL),static_cast<jule::Int>(_3546_i));
			goto _iter_end_4386220208;
		} else if (_3713_range_n != 1LL) {
			goto _iter_next_4386220208;
		}
		if ((_3579_colon == -1LL) && (_4013_token._field_id == 11LLU)) {
			_3579_colon=static_cast<jule::Int>((_3546_i - _389_start) - 1LL);
		}
	}
	_iter_next_4386220208:;
	(_3546_i)++;
	goto _iter_begin_4386220208;
	_iter_end_4386220208:;
	return std::make_tuple(_3556_range_tokens,_3579_colon);
}



inline void _1a89ca987_lshift_unsig(_1a89ca987_Const& _53222_c,_1a89ca987_Const& _53233_x) {
	jule::U64 _5339_l = _53222_c._method_as_u64();
	jule::U64 _5349_r = _53233_x._method_as_u64();
	_53222_c._method_set_u64(static_cast<jule::U64>(_5339_l << _5349_r));
}



inline void _1a89ca987_rshift_unsig(_1a89ca987_Const& _53822_c,_1a89ca987_Const& _53833_x) {
	jule::U64 _5399_l = _53822_c._method_as_u64();
	jule::U64 _5409_r = _53833_x._method_as_u64();
	_53822_c._method_set_u64(static_cast<jule::U64>(_5399_l >> _5409_r));
}



inline jule::Bool _1da96e289_check_bit(jule::Str _914_v,jule::Int _922_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)> _932_checker) {
	{
		if (!((_914_v == jule::Str("", 0)))) { goto _case_end_4389801728; }
		_case_begin_4389801728:;
		{
			return false;
		}
		goto _match_end_4389799312;
		_case_end_4389801728:;
		if (!((_914_v.len() == 1LL))) { goto _case_end_4389800560; }
		_case_begin_4389800560:;
		{
			return true;
		}
		goto _match_end_4389799312;
		_case_end_4389800560:;
		if (!((_914_v.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4389800672; }
		_case_begin_4389800672:;
		{
			return _932_checker(_914_v.slice(2LL),16LL,_922_bit);
		}
		goto _match_end_4389799312;
		_case_end_4389800672:;
		if (!((_914_v.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4389800784; }
		_case_begin_4389800784:;
		{
			return _932_checker(_914_v.slice(2LL),2LL,_922_bit);
		}
		goto _match_end_4389799312;
		_case_end_4389800784:;
		if (!((_914_v.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4389799808; }
		_case_begin_4389799808:;
		{
			return _932_checker(_914_v.slice(2LL),8LL,_922_bit);
		}
		goto _match_end_4389799312;
		_case_end_4389799808:;
		if (!((_914_v[0LL] == '0'))) { goto _case_end_4389799920; }
		_case_begin_4389799920:;
		{
			return _932_checker(_914_v.slice(1LL),8LL,_922_bit);
		}
		goto _match_end_4389799312;
		_case_end_4389799920:;
		_case_begin_4389799504:;
		{
			return _932_checker(_914_v,10LL,_922_bit);
		}
		goto _match_end_4389799312;
		_case_end_4389799504:;
		_match_end_4389799312:;
	}
}



inline jule::Str _1da96e289_real_kind_of(jule::Str _2421_kind) {
	{
		auto _match_expr{ _2421_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4389813344; }
		_case_begin_4389813344:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4389798896;
		_case_end_4389813344:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("uintptr", 7)) == _match_expr)) { goto _case_end_4389813456; }
		_case_begin_4389813456:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4389798896;
		_case_end_4389813456:;
		_case_begin_4389811920:;
		{
			return _2421_kind;
		}
		goto _match_end_4389798896;
		_case_end_4389811920:;
		_match_end_4389798896:;
	}
}



inline jule::Int _1da96e289_bitsize_of(jule::Str _4019_k) {
	{
		auto _match_expr{ _4019_k };
		if (!((jule::Str("i8", 2)) == _match_expr || (jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4389816944; }
		_case_begin_4389816944:;
		{
			return 8LL;
		}
		goto _match_end_4389815744;
		_case_end_4389816944:;
		if (!((jule::Str("i16", 3)) == _match_expr || (jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4389817056; }
		_case_begin_4389817056:;
		{
			return 16LL;
		}
		goto _match_end_4389815744;
		_case_end_4389817056:;
		if (!((jule::Str("i32", 3)) == _match_expr || (jule::Str("u32", 3)) == _match_expr || (jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4389817232; }
		_case_begin_4389817232:;
		{
			return 32LL;
		}
		goto _match_end_4389815744;
		_case_end_4389817232:;
		if (!((jule::Str("i64", 3)) == _match_expr || (jule::Str("u64", 3)) == _match_expr || (jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4389817344; }
		_case_begin_4389817344:;
		{
			return 64LL;
		}
		goto _match_end_4389815744;
		_case_end_4389817344:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("int", 3)) == _match_expr)) { goto _case_end_4389817456; }
		_case_begin_4389817456:;
		{
			return 32LL;
		}
		goto _match_end_4389815744;
		_case_end_4389817456:;
		_case_begin_4389814464:;
		{
			return -1LL;
		}
		goto _match_end_4389815744;
		_case_end_4389814464:;
		_match_end_4389815744:;
	}
}



inline jule::Str _1da96e289_int_from_bits(jule::U64 _7222_bits) {
	{
		auto _match_expr{ _7222_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4389821792; }
		_case_begin_4389821792:;
		{
			return jule::Str("i8", 2);
		}
		goto _match_end_4389796624;
		_case_end_4389821792:;
		if (!((16LL) == _match_expr)) { goto _case_end_4389821904; }
		_case_begin_4389821904:;
		{
			return jule::Str("i16", 3);
		}
		goto _match_end_4389796624;
		_case_end_4389821904:;
		if (!((32LL) == _match_expr)) { goto _case_end_4389822016; }
		_case_begin_4389822016:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4389796624;
		_case_end_4389822016:;
		if (!((64LL) == _match_expr)) { goto _case_end_4389822832; }
		_case_begin_4389822832:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4389796624;
		_case_end_4389822832:;
		_case_begin_4389821104:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4389796624;
		_case_end_4389821104:;
		_match_end_4389796624:;
	}
}



inline jule::Str _1da96e289_uint_from_bits(jule::U64 _8523_bits) {
	{
		auto _match_expr{ _8523_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4389820240; }
		_case_begin_4389820240:;
		{
			return jule::Str("u8", 2);
		}
		goto _match_end_4389824864;
		_case_end_4389820240:;
		if (!((16LL) == _match_expr)) { goto _case_end_4389820352; }
		_case_begin_4389820352:;
		{
			return jule::Str("u16", 3);
		}
		goto _match_end_4389824864;
		_case_end_4389820352:;
		if (!((32LL) == _match_expr)) { goto _case_end_4389820464; }
		_case_begin_4389820464:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4389824864;
		_case_end_4389820464:;
		if (!((64LL) == _match_expr)) { goto _case_end_4389827040; }
		_case_begin_4389827040:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4389824864;
		_case_end_4389827040:;
		_case_begin_4389825696:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4389824864;
		_case_end_4389825696:;
		_match_end_4389824864:;
	}
}



inline jule::Str _1da96e289_float_from_bits(jule::U64 _9924_bits) {
	{
		auto _match_expr{ _9924_bits };
		if (!((32LL) == _match_expr)) { goto _case_end_4389829904; }
		_case_begin_4389829904:;
		{
			return jule::Str("f32", 3);
		}
		goto _match_end_4389829072;
		_case_end_4389829904:;
		if (!((64LL) == _match_expr)) { goto _case_end_4389830016; }
		_case_begin_4389830016:;
		{
			return jule::Str("f64", 3);
		}
		goto _match_end_4389829072;
		_case_end_4389830016:;
		_case_begin_4389826352:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4389829072;
		_case_end_4389826352:;
		_match_end_4389829072:;
	}
}



inline jule::Bool _1da96e289_check_bit_int(jule::Str _10822_v,jule::Int _10830_bit) {
	return _1da96e289_check_bit(_10822_v,_10830_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _10930_v,jule::Int _10938_base,jule::Int _10949_bit) mutable -> jule::Bool {
		jule::Int _11017_err;
		std::tie(std::ignore,_11017_err) = _20383c161_parse_int(_10930_v,_10938_base,_10949_bit);
		return _11017_err == 0LLU;
	}));
}



inline jule::Bool _1da96e289_check_bit_uint(jule::Str _11623_v,jule::Int _11631_bit) {
	return _1da96e289_check_bit(_11623_v,_11631_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _11730_v,jule::Int _11738_base,jule::Int _11749_bit) mutable -> jule::Bool {
		jule::Int _11817_err;
		std::tie(std::ignore,_11817_err) = _20383c161_parse_uint(_11730_v,_11738_base,_11749_bit);
		return _11817_err == 0LLU;
	}));
}



inline jule::Bool _1da96e289_check_bit_float(jule::Str _12424_val,jule::Int _12434_bit) {
	jule::Int _12513_err;
	std::tie(std::ignore,_12513_err) = _20384ee76_parse_float(_12424_val,_12434_bit);
	return _12513_err == 0LLU;
}



inline jule::U64 _1da96e289_bitsize_of_float(jule::F64 _13425_x) {
	{
		if (!(((-340282346638528860000000000000000000000.0 <= _13425_x) && (_13425_x <= 340282346638528860000000000000000000000.0)))) { goto _case_end_4389854480; }
		_case_begin_4389854480:;
		{
			return 32LL;
		}
		goto _match_end_4389852176;
		_case_end_4389854480:;
		_case_begin_4389852368:;
		{
			return 64LL;
		}
		goto _match_end_4389852176;
		_case_end_4389852368:;
		_match_end_4389852176:;
	}
}



inline jule::U64 _1da96e289_bitsize_of_int(jule::I64 _14823_x) {
	{
		if (!(((-128LL <= _14823_x) && (_14823_x <= 127LL)))) { goto _case_end_4389857552; }
		_case_begin_4389857552:;
		{
			return 8LL;
		}
		goto _match_end_4389855184;
		_case_end_4389857552:;
		if (!(((-32768LL <= _14823_x) && (_14823_x <= 32767LL)))) { goto _case_end_4389857120; }
		_case_begin_4389857120:;
		{
			return 16LL;
		}
		goto _match_end_4389855184;
		_case_end_4389857120:;
		if (!(((-2147483648LL <= _14823_x) && (_14823_x <= 2147483647LL)))) { goto _case_end_4389857232; }
		_case_begin_4389857232:;
		{
			return 32LL;
		}
		goto _match_end_4389855184;
		_case_end_4389857232:;
		_case_begin_4389855328:;
		{
			return 64LL;
		}
		goto _match_end_4389855184;
		_case_end_4389855328:;
		_match_end_4389855184:;
	}
}



inline jule::U64 _1da96e289_bitsize_of_uint(jule::U64 _16424_x) {
	{
		if (!((_16424_x <= 255LL))) { goto _case_end_4389863024; }
		_case_begin_4389863024:;
		{
			return 8LL;
		}
		goto _match_end_4389861040;
		_case_end_4389863024:;
		if (!((_16424_x <= 65535LL))) { goto _case_end_4389862592; }
		_case_begin_4389862592:;
		{
			return 16LL;
		}
		goto _match_end_4389861040;
		_case_end_4389862592:;
		if (!((_16424_x <= 4294967295LL))) { goto _case_end_4389862704; }
		_case_begin_4389862704:;
		{
			return 32LL;
		}
		goto _match_end_4389861040;
		_case_end_4389862704:;
		_case_begin_4389861136:;
		{
			return 64LL;
		}
		goto _match_end_4389861040;
		_case_end_4389861136:;
		_match_end_4389861040:;
	}
}



inline jule::F64 _1da826509_min(jule::Str _4316_k) {
	_4316_k=_1da96e289_real_kind_of(_4316_k);
	{
		auto _match_expr{ _4316_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4389867664; }
		_case_begin_4389867664:;
		{
			return -128LL;
		}
		goto _match_end_4389862288;
		_case_end_4389867664:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4389867184; }
		_case_begin_4389867184:;
		{
			return -32768LL;
		}
		goto _match_end_4389862288;
		_case_end_4389867184:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4389867296; }
		_case_begin_4389867296:;
		{
			return -2147483648LL;
		}
		goto _match_end_4389862288;
		_case_end_4389867296:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4389866784; }
		_case_begin_4389866784:;
		{
			return jule::MIN_I64;
		}
		goto _match_end_4389862288;
		_case_end_4389866784:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4389866896; }
		_case_begin_4389866896:;
		{
			return -340282346638528860000000000000000000000.0;
		}
		goto _match_end_4389862288;
		_case_end_4389866896:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4389867008; }
		_case_begin_4389867008:;
		{
			return jule::MIN_F64;
		}
		goto _match_end_4389862288;
		_case_end_4389867008:;
		_case_begin_4389865488:;
		{
			return 0LL;
		}
		goto _match_end_4389862288;
		_case_end_4389865488:;
		_match_end_4389862288:;
	}
}



inline jule::F64 _1da826509_max(jule::Str _5816_k) {
	_5816_k=_1da96e289_real_kind_of(_5816_k);
	{
		auto _match_expr{ _5816_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4389873248; }
		_case_begin_4389873248:;
		{
			return 127LL;
		}
		goto _match_end_4389870944;
		_case_end_4389873248:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4389873360; }
		_case_begin_4389873360:;
		{
			return 32767LL;
		}
		goto _match_end_4389870944;
		_case_end_4389873360:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4389872448; }
		_case_begin_4389872448:;
		{
			return 2147483647LL;
		}
		goto _match_end_4389870944;
		_case_end_4389872448:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4389872560; }
		_case_begin_4389872560:;
		{
			return jule::MAX_I64;
		}
		goto _match_end_4389870944;
		_case_end_4389872560:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4389872672; }
		_case_begin_4389872672:;
		{
			return 255LL;
		}
		goto _match_end_4389870944;
		_case_end_4389872672:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4389872784; }
		_case_begin_4389872784:;
		{
			return 65535LL;
		}
		goto _match_end_4389870944;
		_case_end_4389872784:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4389872896; }
		_case_begin_4389872896:;
		{
			return 4294967295LL;
		}
		goto _match_end_4389870944;
		_case_end_4389872896:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4389873008; }
		_case_begin_4389873008:;
		{
			return jule::MAX_U64;
		}
		goto _match_end_4389870944;
		_case_end_4389873008:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4389873120; }
		_case_begin_4389873120:;
		{
			return 340282346638528860000000000000000000000.0;
		}
		goto _match_end_4389870944;
		_case_end_4389873120:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4389873888; }
		_case_begin_4389873888:;
		{
			return jule::MAX_F64;
		}
		goto _match_end_4389870944;
		_case_end_4389873888:;
		_case_begin_4389871920:;
		{
			return 0LL;
		}
		goto _match_end_4389870944;
		_case_end_4389871920:;
		_match_end_4389870944:;
	}
}



inline jule::Bool _1da90ea98_is_i8_compatible(jule::Str _629_k) {
	_629_k=_1da96e289_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



inline jule::Bool _1da90ea98_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_1da96e289_real_kind_of(_1230_k);
	return ((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2));
}



inline jule::Bool _1da90ea98_is_i32_compatible(jule::Str _2030_k) {
	_2030_k=_1da96e289_real_kind_of(_2030_k);
	return ((((_2030_k == jule::Str("i8", 2)) || (_2030_k == jule::Str("i16", 3))) || (_2030_k == jule::Str("i32", 3))) || (_2030_k == jule::Str("u8", 2))) || (_2030_k == jule::Str("u16", 3));
}



inline jule::Bool _1da90ea98_is_i64_compatible(jule::Str _3030_k) {
	_3030_k=_1da96e289_real_kind_of(_3030_k);
	return ((((((_3030_k == jule::Str("i8", 2)) || (_3030_k == jule::Str("i16", 3))) || (_3030_k == jule::Str("i32", 3))) || (_3030_k == jule::Str("i64", 3))) || (_3030_k == jule::Str("u8", 2))) || (_3030_k == jule::Str("u16", 3))) || (_3030_k == jule::Str("u32", 3));
}



inline jule::Bool _1da90ea98_is_u8_compatible(jule::Str _4229_k) {
	_4229_k=_1da96e289_real_kind_of(_4229_k);
	return _4229_k == jule::Str("u8", 2);
}



inline jule::Bool _1da90ea98_is_u16_compatible(jule::Str _4830_k) {
	_4830_k=_1da96e289_real_kind_of(_4830_k);
	return (_4830_k == jule::Str("u8", 2)) || (_4830_k == jule::Str("u16", 3));
}



inline jule::Bool _1da90ea98_is_u32_compatible(jule::Str _5430_k) {
	_5430_k=_1da96e289_real_kind_of(_5430_k);
	return ((_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3))) || (_5430_k == jule::Str("u32", 3));
}



inline jule::Bool _1da90ea98_is_u64_compatible(jule::Str _6230_k) {
	_6230_k=_1da96e289_real_kind_of(_6230_k);
	return (((_6230_k == jule::Str("u8", 2)) || (_6230_k == jule::Str("u16", 3))) || (_6230_k == jule::Str("u32", 3))) || (_6230_k == jule::Str("u64", 3));
}



inline jule::Bool _1da90ea98_is_f32_compatible(jule::Str _7130_k) {
	_7130_k=_1da96e289_real_kind_of(_7130_k);
	return _7130_k == jule::Str("f32", 3);
}



inline jule::Bool _1da90ea98_is_f64_compatible(jule::Str _7730_k) {
	_7730_k=_1da96e289_real_kind_of(_7730_k);
	return (_7730_k == jule::Str("f64", 3)) || (_7730_k == jule::Str("f32", 3));
}



inline jule::Bool _1da90ea98_types_are_compatible(jule::Str _8633_k1,jule::Str _8642_k2) {
	_8633_k1=_1da96e289_real_kind_of(_8633_k1);
	{
		auto _match_expr{ _8633_k1 };
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4389903152; }
		_case_begin_4389903152:;
		{
			return true;
		}
		goto _match_end_4389900048;
		_case_end_4389903152:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4389904096; }
		_case_begin_4389904096:;
		{
			return _1da90ea98_is_i8_compatible(_8642_k2);
		}
		goto _match_end_4389900048;
		_case_end_4389904096:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4389904208; }
		_case_begin_4389904208:;
		{
			return _1da90ea98_is_i16_compatible(_8642_k2);
		}
		goto _match_end_4389900048;
		_case_end_4389904208:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4389904320; }
		_case_begin_4389904320:;
		{
			return _1da90ea98_is_i32_compatible(_8642_k2);
		}
		goto _match_end_4389900048;
		_case_end_4389904320:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4389904432; }
		_case_begin_4389904432:;
		{
			return _1da90ea98_is_i64_compatible(_8642_k2);
		}
		goto _match_end_4389900048;
		_case_end_4389904432:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4389903456; }
		_case_begin_4389903456:;
		{
			return _1da90ea98_is_u8_compatible(_8642_k2);
		}
		goto _match_end_4389900048;
		_case_end_4389903456:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4389903568; }
		_case_begin_4389903568:;
		{
			return _1da90ea98_is_u16_compatible(_8642_k2);
		}
		goto _match_end_4389900048;
		_case_end_4389903568:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4389903680; }
		_case_begin_4389903680:;
		{
			return _1da90ea98_is_u32_compatible(_8642_k2);
		}
		goto _match_end_4389900048;
		_case_end_4389903680:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4389903792; }
		_case_begin_4389903792:;
		{
			return _1da90ea98_is_u64_compatible(_8642_k2);
		}
		goto _match_end_4389900048;
		_case_end_4389903792:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4389903904; }
		_case_begin_4389903904:;
		{
			return _1da90ea98_is_f32_compatible(_8642_k2);
		}
		goto _match_end_4389900048;
		_case_end_4389903904:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4389904576; }
		_case_begin_4389904576:;
		{
			return _1da90ea98_is_f64_compatible(_8642_k2);
		}
		goto _match_end_4389900048;
		_case_end_4389904576:;
		if (!((jule::Str("bool", 4)) == _match_expr)) { goto _case_end_4389904704; }
		_case_begin_4389904704:;
		{
			return _8642_k2 == jule::Str("bool", 4);
		}
		goto _match_end_4389900048;
		_case_end_4389904704:;
		if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4389904832; }
		_case_begin_4389904832:;
		{
			return _8642_k2 == jule::Str("str", 3);
		}
		goto _match_end_4389900048;
		_case_end_4389904832:;
		_case_begin_4389902528:;
		{
			return false;
		}
		goto _match_end_4389900048;
		_case_end_4389902528:;
		_match_end_4389900048:;
	}
}



inline jule::Bool _1da90ea98_is_i16_greater(jule::Str _10727_k) {
	_10727_k=_1da96e289_real_kind_of(_10727_k);
	return _10727_k == jule::Str("u8", 2);
}



inline jule::Bool _1da90ea98_is_i32_greater(jule::Str _11327_k) {
	_11327_k=_1da96e289_real_kind_of(_11327_k);
	return (_11327_k == jule::Str("i8", 2)) || (_11327_k == jule::Str("i16", 3));
}



inline jule::Bool _1da90ea98_is_i64_greater(jule::Str _11927_k) {
	_11927_k=_1da96e289_real_kind_of(_11927_k);
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



inline jule::Bool _1da90ea98_is_u8_greater(jule::Str _12726_k) {
	_12726_k=_1da96e289_real_kind_of(_12726_k);
	return _12726_k == jule::Str("i8", 2);
}



inline jule::Bool _1da90ea98_is_u16_greater(jule::Str _13327_k) {
	_13327_k=_1da96e289_real_kind_of(_13327_k);
	return ((_13327_k == jule::Str("u8", 2)) || (_13327_k == jule::Str("i8", 2))) || (_13327_k == jule::Str("i16", 3));
}



inline jule::Bool _1da90ea98_is_u32_greater(jule::Str _14127_k) {
	_14127_k=_1da96e289_real_kind_of(_14127_k);
	return ((((_14127_k == jule::Str("u8", 2)) || (_14127_k == jule::Str("u16", 3))) || (_14127_k == jule::Str("i8", 2))) || (_14127_k == jule::Str("i16", 3))) || (_14127_k == jule::Str("i32", 3));
}



inline jule::Bool _1da90ea98_is_u64_greater(jule::Str _15127_k) {
	_15127_k=_1da96e289_real_kind_of(_15127_k);
	return ((((((_15127_k == jule::Str("u8", 2)) || (_15127_k == jule::Str("u16", 3))) || (_15127_k == jule::Str("u32", 3))) || (_15127_k == jule::Str("i8", 2))) || (_15127_k == jule::Str("i16", 3))) || (_15127_k == jule::Str("i32", 3))) || (_15127_k == jule::Str("i64", 3));
}



inline jule::Bool _1da90ea98_is_f32_greater(jule::Str _16323_k) {
	return _16323_k != jule::Str("f64", 3);
}



inline jule::Bool _1da90ea98_is_f64_greater(jule::Str _16523_k) {
	return true;
}



inline jule::Bool _1da90ea98_is_greater(jule::Str _16823_k1,jule::Str _16832_k2) {
	_16823_k1=_1da96e289_real_kind_of(_16823_k1);
	{
		auto _match_expr{ _16823_k1 };
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4389933792; }
		_case_begin_4389933792:;
		{
			return _1da90ea98_is_i16_greater(_16832_k2);
		}
		goto _match_end_4389927680;
		_case_end_4389933792:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4389933904; }
		_case_begin_4389933904:;
		{
			return _1da90ea98_is_i32_greater(_16832_k2);
		}
		goto _match_end_4389927680;
		_case_end_4389933904:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4389934784; }
		_case_begin_4389934784:;
		{
			return _1da90ea98_is_i64_greater(_16832_k2);
		}
		goto _match_end_4389927680;
		_case_end_4389934784:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4389934896; }
		_case_begin_4389934896:;
		{
			return _1da90ea98_is_u16_greater(_16832_k2);
		}
		goto _match_end_4389927680;
		_case_end_4389934896:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4389935008; }
		_case_begin_4389935008:;
		{
			return _1da90ea98_is_u8_greater(_16832_k2);
		}
		goto _match_end_4389927680;
		_case_end_4389935008:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4389935136; }
		_case_begin_4389935136:;
		{
			return _1da90ea98_is_u32_greater(_16832_k2);
		}
		goto _match_end_4389927680;
		_case_end_4389935136:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4389934144; }
		_case_begin_4389934144:;
		{
			return _1da90ea98_is_u64_greater(_16832_k2);
		}
		goto _match_end_4389927680;
		_case_end_4389934144:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4389934272; }
		_case_begin_4389934272:;
		{
			return _1da90ea98_is_f32_greater(_16832_k2);
		}
		goto _match_end_4389927680;
		_case_end_4389934272:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4389934400; }
		_case_begin_4389934400:;
		{
			return _1da90ea98_is_f64_greater(_16832_k2);
		}
		goto _match_end_4389927680;
		_case_end_4389934400:;
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4389934528; }
		_case_begin_4389934528:;
		{
			return true;
		}
		goto _match_end_4389927680;
		_case_end_4389934528:;
		_case_begin_4389933312:;
		{
			return false;
		}
		goto _match_end_4389927680;
		_case_end_4389933312:;
		_match_end_4389927680:;
	}
}



inline jule::Bool _1a8a8de8a_is_sig_int(jule::Str _2723_k) {
	_2723_k=_1da96e289_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



inline jule::Bool _1a8a8de8a_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_1da96e289_real_kind_of(_3825_k);
	return (((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3));
}



inline jule::Bool _1a8a8de8a_is_int(jule::Str _4915_k) {
	return _1a8a8de8a_is_sig_int(_4915_k) || _1a8a8de8a_is_unsig_int(_4915_k);
}



inline jule::Bool _1a8a8de8a_is_float(jule::Str _5417_k) {
	return (_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3));
}



inline jule::Bool _1a8a8de8a_is_num(jule::Str _5915_k) {
	return _1a8a8de8a_is_int(_5915_k) || _1a8a8de8a_is_float(_5915_k);
}



inline jule::Bool _1a8a8de8a_is_sig_num(jule::Str _6419_k) {
	return _1a8a8de8a_is_sig_int(_6419_k) || _1a8a8de8a_is_float(_6419_k);
}



inline std::tuple<jule::Str,jule::Bool> _1a8bded22_is_byte_lit(jule::Str _1524_kind) {
	if (_1524_kind.len() < 3LL) {
		return std::make_tuple(jule::Str("", 0),false);
	}
	_1524_kind=_1524_kind.slice(1LL,static_cast<jule::Int>(_1524_kind.len() - 1LL));
	jule::Bool _2113_is_byte = false;
	{
		if (!(((_1524_kind.len() == 1LL) && (_1524_kind[0LL] <= 255LL)))) { goto _case_end_4389978576; }
		_case_begin_4389978576:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4389978384;
		_case_end_4389978576:;
		if (!(((_1524_kind[0LL] == '\\') && (_1524_kind[1LL] == 'x')))) { goto _case_end_4389978704; }
		_case_begin_4389978704:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4389978384;
		_case_end_4389978704:;
		if (!((((_1524_kind[0LL] == '\\') && (_1524_kind[1LL] >= '0')) && (_1524_kind[1LL] <= '7')))) { goto _case_end_4389978832; }
		_case_begin_4389978832:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4389978384;
		_case_end_4389978832:;
		_match_end_4389978384:;
	}
	return std::make_tuple(_1524_kind,_2113_is_byte);
}



inline jule::I32 _1a8bded22_to_rune(jule::Slice<jule::U8> _4016_bytes) {
	if (_4016_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _4513_r = 0LL;
	if ((_4016_bytes[0LL] == '\\') && (_4016_bytes.len() > 1LL)) {
		jule::Int _4717_i = 0LL;
		_4513_r=static_cast<jule::I32>(_1a8bded22_rune_from_esq_seq(_4016_bytes,_4717_i));
	} else {
		std::tie(_4513_r,std::ignore) = _2062e3ad2_decode_rune(_4016_bytes);
	}
	return _4513_r;
}



inline jule::Str _1a8bded22_to_raw_str(jule::Slice<jule::U8> _5919_bytes) {
	return static_cast<jule::Str>(_5919_bytes);
}



inline jule::Str _1a8bded22_to_str(jule::Slice<jule::U8> _6415_bytes) {
	if (_6415_bytes.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _6913_s = jule::Str("", 0);
	jule::Int _7013_i = 0LL;
	_iter_begin_4389998288:;
	if (!(_7013_i < _6415_bytes.len())) { goto _iter_end_4389998288; }
	{
		jule::U8 _7213_b = _6415_bytes[static_cast<jule::Int>(_7013_i)];
		if (_7213_b == '\\') {
			_6913_s+=_1a8bded22_str_esq_seq(_6415_bytes,_7013_i);
		} else {
			jule::I32 _7618_r;
			jule::Int _7621_size;
			std::tie(_7618_r,_7621_size) = _2062e3ad2_decode_rune(_6415_bytes.slice(static_cast<jule::Int>(_7013_i)));
			_7013_i+=_7621_size;
			_6913_s+=static_cast<jule::Str>(_7618_r);
		}
	}
	_iter_next_4389998288:;
	goto _iter_begin_4389998288;
	_iter_end_4389998288:;
	return _6913_s;
}



inline std::tuple<jule::U8,jule::Bool> _1a8bded22_try_btoa_common_esq(jule::Slice<jule::U8> _8424_bytes) {
	jule::U8 _8441_seq = jule::U8();
	jule::Bool _8452_ok = jule::Bool();
	if ((_8424_bytes.len() < 2LL) || (_8424_bytes[0LL] != '\\')) {
		return std::make_tuple(_8441_seq,_8452_ok);
	}
	{
		auto _match_expr{ _8424_bytes[1LL] };
		if (!(('\\') == _match_expr)) { goto _case_end_4390013184; }
		_case_begin_4390013184:;
		{
			_8441_seq='\\';
		}
		goto _match_end_4390010784;
		_case_end_4390013184:;
		if (!(('\'') == _match_expr)) { goto _case_end_4390013296; }
		_case_begin_4390013296:;
		{
			_8441_seq='\'';
		}
		goto _match_end_4390010784;
		_case_end_4390013296:;
		if (!(('\"') == _match_expr)) { goto _case_end_4390013408; }
		_case_begin_4390013408:;
		{
			_8441_seq='\"';
		}
		goto _match_end_4390010784;
		_case_end_4390013408:;
		if (!(('a') == _match_expr)) { goto _case_end_4390013536; }
		_case_begin_4390013536:;
		{
			_8441_seq='\a';
		}
		goto _match_end_4390010784;
		_case_end_4390013536:;
		if (!(('b') == _match_expr)) { goto _case_end_4390013664; }
		_case_begin_4390013664:;
		{
			_8441_seq='\b';
		}
		goto _match_end_4390010784;
		_case_end_4390013664:;
		if (!(('f') == _match_expr)) { goto _case_end_4390013792; }
		_case_begin_4390013792:;
		{
			_8441_seq='\f';
		}
		goto _match_end_4390010784;
		_case_end_4390013792:;
		if (!(('n') == _match_expr)) { goto _case_end_4390013920; }
		_case_begin_4390013920:;
		{
			_8441_seq='\n';
		}
		goto _match_end_4390010784;
		_case_end_4390013920:;
		if (!(('r') == _match_expr)) { goto _case_end_4390014048; }
		_case_begin_4390014048:;
		{
			_8441_seq='\r';
		}
		goto _match_end_4390010784;
		_case_end_4390014048:;
		if (!(('t') == _match_expr)) { goto _case_end_4390014176; }
		_case_begin_4390014176:;
		{
			_8441_seq='\t';
		}
		goto _match_end_4390010784;
		_case_end_4390014176:;
		if (!(('v') == _match_expr)) { goto _case_end_4390014304; }
		_case_begin_4390014304:;
		{
			_8441_seq='\v';
		}
		goto _match_end_4390010784;
		_case_end_4390014304:;
		_match_end_4390010784:;
	}
	_8452_ok=_8441_seq != 0LL;
	return std::make_tuple(_8441_seq,_8452_ok);
}



inline jule::I32 _1a8bded22_rune_from_esq_seq(jule::Slice<jule::U8> _10622_bytes,jule::Int& _10642_i) {
	jule::U8 _10710_b;
	jule::Bool _10713_ok;
	std::tie(_10710_b,_10713_ok) = _1a8bded22_try_btoa_common_esq(_10622_bytes.slice(static_cast<jule::Int>(_10642_i)));
	(_10642_i)++;
	if (_10713_ok) {
		(_10642_i)++;
		return static_cast<jule::I32>(_10710_b);
	}
	{
		auto _match_expr{ _10622_bytes[static_cast<jule::Int>(_10642_i)] };
		if (!(('u') == _match_expr)) { goto _case_end_4390031808; }
		_case_begin_4390031808:;
		{
			
			jule::U64 _11714_rc;
			std::tie(_11714_rc,std::ignore) = _20383c161_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 5LL))),16LL,64LL);
			_10642_i+=5LL;
			jule::I32 _11913_r = static_cast<jule::I32>(_11714_rc);
			return _11913_r;
		}
		goto _match_end_4390025296;
		_case_end_4390031808:;
		if (!(('U') == _match_expr)) { goto _case_end_4390032384; }
		_case_begin_4390032384:;
		{
			
			jule::U64 _12414_rc;
			std::tie(_12414_rc,std::ignore) = _20383c161_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 9LL))),16LL,64LL);
			_10642_i+=9LL;
			jule::I32 _12613_r = static_cast<jule::I32>(_12414_rc);
			return _12613_r;
		}
		goto _match_end_4390025296;
		_case_end_4390032384:;
		if (!(('x') == _match_expr)) { goto _case_end_4390032496; }
		_case_begin_4390032496:;
		{
			
			jule::Slice<jule::U8> _13113_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _13314_b;
			std::tie(_13314_b,std::ignore) = _20383c161_parse_uint(static_cast<jule::Str>(_13113_seq),16LL,64LL);
			return static_cast<jule::I32>(_13314_b);
		}
		goto _match_end_4390025296;
		_case_end_4390032496:;
		_case_begin_4390024192:;
		{
			
			jule::Slice<jule::U8> _13813_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _14014_b;
			std::tie(_14014_b,std::ignore) = _20383c161_parse_uint(static_cast<jule::Str>(_13813_seq.slice(1LL)),8LL,64LL);
			return static_cast<jule::I32>(_14014_b);
		}
		goto _match_end_4390025296;
		_case_end_4390024192:;
		_match_end_4390025296:;
	}
}



inline jule::Str _1a8bded22_str_esq_seq(jule::Slice<jule::U8> _14516_bytes,jule::Int& _14536_i) {
	jule::I32 _1469_r = _1a8bded22_rune_from_esq_seq(_14516_bytes,_14536_i);
	if (_1469_r <= 255LL) {
		return static_cast<jule::Str>(_1469_r);
	}
	return _1a8bded22_to_str(static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1469_r)));
}



inline jule::Str _206a20e79_str_repeat(jule::Str _8715_sub,jule::Int _8729_n) {
	if (_8729_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _9213_s = jule::Str("", 0);
	_iter_begin_4390990736:;
	if (!(_8729_n > 0LL)) { goto _iter_end_4390990736; }
	{
		_9213_s+=_8715_sub;
	}
	_iter_next_4390990736:;
	(_8729_n)--;
	goto _iter_begin_4390990736;
	_iter_end_4390990736:;
	return _9213_s;
}



inline jule::Str _206a20e79_build_doc(jule::Ref<_2053703bd_CommentGroup> _9918_cg) {
	if ((!(jule::real(_9918_cg)))) {
		return jule::Str("", 0);
	}
	jule::Str _10413_doc = jule::Str("", 0);
	{
		auto _range_expr = _9918_cg->_field_comments;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053703bd_Comment> _206a20e79_c = *_range_begin;
			_iter_begin_4390995072:;
			{
				_10413_doc+=_206a20e79_c->_field_text;
				_10413_doc+=jule::Str(" ", 1);
			}
			_iter_next_4390995072:;
			++_range_begin;
			if (_range_begin != _range_end) { _206a20e79_c = *_range_begin; goto _iter_begin_4390995072; }
			_iter_end_4390995072:;
		}
	}
	return _10413_doc;
}



inline jule::Ref<_1da411226_TypeSymbol> _206a20e79_build_type(jule::Ref<_2053703bd_TypeDecl> _11219_t) {
	if ((!(jule::real(_11219_t)))) {
		return jule::new_ref<_1da411226_TypeSymbol>();
	}
	return jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(_11219_t,jule::Ref<_1da411226_TypeKind>()));
}



inline jule::Ref<_1da2d3bdc_Value> _206a20e79_build_expr(jule::Ref<_2053703bd_Expr> _12119_expr) {
	if ((!(jule::real(_12119_expr)))) {
		return jule::new_ref<_1da2d3bdc_Value>();
	}
	return jule::new_struct<_1da2d3bdc_Value>(new( std::nothrow ) _1da2d3bdc_Value(_12119_expr,jule::Ref<_1da2d3bdc_Data>()));
}



inline jule::Ref<_1da411226_TypeAlias> _206a20e79_build_type_alias(jule::Ref<_2053703bd_TypeAliasDecl> _13125_decl) {
	return jule::new_struct<_1da411226_TypeAlias>(new( std::nothrow ) _1da411226_TypeAlias(_13125_decl->_field_scope,_13125_decl->_field_public,_13125_decl->_field_cpp_linked,jule::Bool(),_13125_decl->_field_token,_13125_decl->_field_ident,_206a20e79_build_type(_13125_decl->_field_kind),_206a20e79_build_doc(_13125_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



inline jule::Ref<_2053cdc01_Field> _206a20e79_build_field(jule::Ref<_2053703bd_FieldDecl> _14320_decl) {
	return jule::new_struct<_2053cdc01_Field>(new( std::nothrow ) _2053cdc01_Field(jule::Ref<_2053cdc01_Struct>(),_14320_decl->_field_token,_14320_decl->_field_public,_14320_decl->_field_mutable,_14320_decl->_field_ident,_206a20e79_build_type(_14320_decl->_field_kind)));
}



inline jule::Slice<jule::Ref<_2053cdc01_Field>> _206a20e79_build_fields(jule::Slice<jule::Ref<_2053703bd_FieldDecl>> _15321_decls) {
	jule::Slice<jule::Ref<_2053cdc01_Field>> _15413_fields = jule::Slice<jule::Ref<_2053cdc01_Field>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_15321_decls.len())));
	{
		auto _range_expr = _15321_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206a20e79_i = 0;
			jule::Ref<_2053703bd_FieldDecl> _206a20e79_decl = *_range_begin;
			_iter_begin_4391011968:;
			{
				_15413_fields[static_cast<jule::Int>(_206a20e79_i)]=_206a20e79_build_field(_206a20e79_decl);
			}
			_iter_next_4391011968:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206a20e79_i; _206a20e79_decl = *_range_begin; goto _iter_begin_4391011968; }
			_iter_end_4391011968:;
		}
	}
	return _15413_fields;
}



inline jule::Ref<_2053cdc01_Struct> _206a20e79_build_struct(jule::Ref<_2053703bd_StructDecl> _16121_decl) {
	return jule::new_struct<_2053cdc01_Struct>(new( std::nothrow ) _2053cdc01_Struct(jule::Ref<_1d9dc7517_Sema>(),jule::Slice<jule::Ref<_2053cdc01_Struct>>(),jule::Slice<jule::Ref<_2053cdc01_Struct>>(),_16121_decl->_field_token,_16121_decl->_field_ident,_206a20e79_build_fields(_16121_decl->_field_fields),jule::Slice<jule::Ref<_2053ddd54_Fn>>(),_16121_decl->_field_public,_16121_decl->_field_cpp_linked,_16121_decl->_field_directives,_206a20e79_build_doc(_16121_decl->_field_doc_comments),_16121_decl->_field_generics,jule::Slice<jule::Ref<_2065895c5_Trait>>(),jule::Slice<jule::Ref<_2053cdc01_StructIns>>()));
}



inline jule::Ref<_2053ddd54_Param> _206a20e79_build_param(jule::Ref<_2053703bd_ParamDecl> _17420_decl) {
	return jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_17420_decl->_field_token,_17420_decl->_field_mutable,_17420_decl->_field_variadic,_17420_decl->_field_reference,_206a20e79_build_type(_17420_decl->_field_kind),_17420_decl->_field_ident));
}



inline jule::Slice<jule::Ref<_2053ddd54_Param>> _206a20e79_build_params(jule::Slice<jule::Ref<_2053703bd_ParamDecl>> _18521_decls) {
	jule::Slice<jule::Ref<_2053ddd54_Param>> _18613_params = jule::Slice<jule::Ref<_2053ddd54_Param>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_18521_decls.len())));
	{
		auto _range_expr = _18521_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206a20e79_i = 0;
			jule::Ref<_2053703bd_ParamDecl> _206a20e79_decl = *_range_begin;
			_iter_begin_4391026080:;
			{
				_18613_params[static_cast<jule::Int>(_206a20e79_i)]=_206a20e79_build_param(_206a20e79_decl);
			}
			_iter_next_4391026080:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206a20e79_i; _206a20e79_decl = *_range_begin; goto _iter_begin_4391026080; }
			_iter_end_4391026080:;
		}
	}
	return _18613_params;
}



inline jule::Ref<_2053ddd54_RetType> _206a20e79_build_ret_type(jule::Ref<_2053703bd_RetTypeDecl> _19323_decl) {
	if ((_19323_decl->_field_idents == nullptr) && (!(jule::real(_19323_decl->_field_kind)))) {
		return jule::new_ref<_2053ddd54_RetType>();
	}
	return jule::new_struct<_2053ddd54_RetType>(new( std::nothrow ) _2053ddd54_RetType(_206a20e79_build_type(_19323_decl->_field_kind),_19323_decl->_field_idents));
}



inline jule::Ref<_2053ddd54_Fn> _206a20e79_build_fn(jule::Ref<_2053703bd_FnDecl> _20317_decl) {
	return jule::new_struct<_2053ddd54_Fn>(new( std::nothrow ) _2053ddd54_Fn(jule::Ref<_1d9dc7517_Sema>(),_20317_decl->_field_token,_20317_decl->_field_global,_20317_decl->_field_unsafety,_20317_decl->_field_public,_20317_decl->_field_cpp_linked,_20317_decl->_field_statically,_20317_decl->_field_ident,_20317_decl->_field_directives,_206a20e79_build_doc(_20317_decl->_field_doc_comments),_20317_decl->_field_scope,_20317_decl->_field_generics,_206a20e79_build_ret_type(_20317_decl->_field_result),_206a20e79_build_params(_20317_decl->_field_params),jule::Ref<_2053cdc01_Struct>(),jule::Slice<jule::Ref<_2053ddd54_FnIns>>()));
}



inline jule::Slice<jule::Ref<_2053ddd54_Fn>> _206a20e79_build_methods(jule::Slice<jule::Ref<_2053703bd_FnDecl>> _22122_decls) {
	jule::Slice<jule::Ref<_2053ddd54_Fn>> _22213_methods = jule::Slice<jule::Ref<_2053ddd54_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_22122_decls.len())));
	{
		auto _range_expr = _22122_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206a20e79_i = 0;
			jule::Ref<_2053703bd_FnDecl> _206a20e79_decl = *_range_begin;
			_iter_begin_4391042304:;
			{
				_22213_methods[static_cast<jule::Int>(_206a20e79_i)]=_206a20e79_build_fn(_206a20e79_decl);
			}
			_iter_next_4391042304:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206a20e79_i; _206a20e79_decl = *_range_begin; goto _iter_begin_4391042304; }
			_iter_end_4391042304:;
		}
	}
	return _22213_methods;
}



inline jule::Ref<_2065895c5_Trait> _206a20e79_build_trait(jule::Ref<_2053703bd_TraitDecl> _22920_decl) {
	return jule::new_struct<_2065895c5_Trait>(new( std::nothrow ) _2065895c5_Trait(_22920_decl->_field_token,_22920_decl->_field_ident,_22920_decl->_field_public,jule::Bool(),_206a20e79_build_doc(_22920_decl->_field_doc_comments),_206a20e79_build_methods(_22920_decl->_field_methods),jule::Slice<jule::Ref<_2053cdc01_Struct>>()));
}



inline jule::Ref<_206b06c0d_EnumItem> _206a20e79_build_enum_item(jule::Ref<_2053703bd_EnumItemDecl> _23924_decl) {
	return jule::new_struct<_206b06c0d_EnumItem>(new( std::nothrow ) _206b06c0d_EnumItem(_23924_decl->_field_token,_23924_decl->_field_ident,_206a20e79_build_expr(_23924_decl->_field_expr)));
}



inline jule::Slice<jule::Ref<_206b06c0d_EnumItem>> _206a20e79_build_enum_items(jule::Slice<jule::Ref<_2053703bd_EnumItemDecl>> _24725_decls) {
	jule::Slice<jule::Ref<_206b06c0d_EnumItem>> _24813_items = jule::Slice<jule::Ref<_206b06c0d_EnumItem>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_24725_decls.len())));
	{
		auto _range_expr = _24725_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206a20e79_i = 0;
			jule::Ref<_2053703bd_EnumItemDecl> _206a20e79_decl = *_range_begin;
			_iter_begin_4391054496:;
			{
				_24813_items[static_cast<jule::Int>(_206a20e79_i)]=_206a20e79_build_enum_item(_206a20e79_decl);
			}
			_iter_next_4391054496:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206a20e79_i; _206a20e79_decl = *_range_begin; goto _iter_begin_4391054496; }
			_iter_end_4391054496:;
		}
	}
	return _24813_items;
}



inline jule::Ref<_206b06c0d_Enum> _206a20e79_build_enum(jule::Ref<_2053703bd_EnumDecl> _25519_decl) {
	return jule::new_struct<_206b06c0d_Enum>(new( std::nothrow ) _206b06c0d_Enum(_25519_decl->_field_token,_25519_decl->_field_public,_25519_decl->_field_ident,_206a20e79_build_type(_25519_decl->_field_kind),_206a20e79_build_enum_items(_25519_decl->_field_items),_206a20e79_build_doc(_25519_decl->_field_doc_comments)));
}



inline jule::Ref<_1d9e22661_Var> _206a20e79_build_var(jule::Ref<_2053703bd_VarDecl> _26618_decl) {
	return jule::new_struct<_1d9e22661_Var>(new( std::nothrow ) _1d9e22661_Var(jule::Ref<_206b0557a_Scope>(),_26618_decl->_field_token,_26618_decl->_field_ident,_26618_decl->_field_cpp_linked,_26618_decl->_field_constant,_26618_decl->_field_mutable,_26618_decl->_field_public,jule::Bool(),_26618_decl->_field_statically,_26618_decl->_field_reference,_206a20e79_build_doc(_26618_decl->_field_doc_comments),_206a20e79_build_type(_26618_decl->_field_kind),_206a20e79_build_expr(_26618_decl->_field_expr),_206a20e79_ReferenceStack::_static_method_new(),_26618_decl->_field_directives,jule::Slice<jule::Ref<_1d9e22661_Var>>()));
}



inline jule::Ref<_206b07093_Impl> _206a20e79_build_impl(jule::Ref<_2053703bd_Impl> _28419_decl) {
	return jule::new_struct<_206b07093_Impl>(new( std::nothrow ) _206b07093_Impl(_28419_decl->_field_base,_28419_decl->_field_dest,_206a20e79_build_methods(_28419_decl->_field_methods)));
}



inline jule::Ref<_206b0557a_ScopeChecker> _206b0557a_new_scope_checker_base(jule::Ref<_1d9dc7517_Sema> _3831_s,jule::Ref<_2053ddd54_FnIns> _3845_owner) {
	return jule::new_struct<_206b0557a_ScopeChecker>(new( std::nothrow ) _206b0557a_ScopeChecker(_3831_s,_3845_owner,jule::Ref<_206b0557a_ScopeChecker>(),jule::Int(),jule::new_struct<_1da2aa301_SymbolTable>(new( std::nothrow ) _1da2aa301_SymbolTable()),jule::Ref<_206b0557a_Scope>(),jule::Ref<_2053703bd_ScopeTree>(),jule::Uintptr(),jule::Uintptr(),jule::Ref<jule::Slice<jule::Ref<_206b0557a_ScopeLabel>>>(),jule::Ref<jule::Slice<jule::Ref<_206b0557a_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ref<_206b0557a_ScopeChecker> _206b0557a_new_scope_checker(jule::Ref<_1d9dc7517_Sema> _4626_s,jule::Ref<_2053ddd54_FnIns> _4640_owner) {
	jule::Ref<_206b0557a_ScopeChecker> _4713_base = _206b0557a_new_scope_checker_base(_4626_s,_4640_owner);
	_4713_base->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_206b0557a_ScopeLabel>>>(nullptr);
	_4713_base->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_206b0557a_ScopeGoto>>>(nullptr);
	return _4713_base;
}



inline jule::Ref<_206b0557a_ScopeLabel> _206b0557a_find_label_parent(jule::Str _5622_ident,jule::Ref<_206b0557a_ScopeChecker> _5638_scope) {
	jule::Ref<_206b0557a_ScopeLabel> _5713_label = _5638_scope->_method_find_label_scope(_5622_ident);
	_iter_begin_4391079728:;
	if (!((!(jule::real(_5713_label))))) { goto _iter_end_4391079728; }
	{
		if ((!(jule::real(_5638_scope->_field_parent))) || jule::real(_5638_scope->_field_owner)) {
			return jule::new_ref<_206b0557a_ScopeLabel>();
		}
		_5638_scope=_5638_scope->_field_parent;
		_5713_label=_5638_scope->_method_find_label_scope(_5622_ident);
	}
	_iter_next_4391079728:;
	goto _iter_begin_4391079728;
	_iter_end_4391079728:;
	return _5713_label;
}



inline jule::Int _206b0557a_count_match_type(jule::Ref<_206b0557a_Match> _7021_m,jule::Ref<_1da411226_TypeKind> _7032_t) {
	jule::Int _7113_n = 0LL;
	jule::Str _729_kind = _7032_t->_method_to_str();
	_julec_label_loop:;
	{
		auto _range_expr = _7021_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b0557a_Case> _206b0557a_c = *_range_begin;
			_iter_begin_4391090320:;
			{
				if ((!(jule::real(_206b0557a_c)))) {
					goto _iter_next_4391090320;
				}
				{
					auto _range_expr = _206b0557a_c->_field_exprs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Any _206b0557a_expr = *_range_begin;
						_iter_begin_4391092912:;
						{
							if (_206b0557a_expr == nullptr) {
								goto _iter_end_4391090320;
							}
							if (_729_kind == _206b0557a_expr.operator jule::Ref<_1da411226_TypeKind>()->_method_to_str()) {
								(_7113_n)++;
							}
						}
						_iter_next_4391092912:;
						++_range_begin;
						if (_range_begin != _range_end) { _206b0557a_expr = *_range_begin; goto _iter_begin_4391092912; }
						_iter_end_4391092912:;
					}
				}
			}
			_iter_next_4391090320:;
			++_range_begin;
			if (_range_begin != _range_end) { _206b0557a_c = *_range_begin; goto _iter_begin_4391090320; }
			_iter_end_4391090320:;
		}
	}
	return _7113_n;
}



inline jule::Slice<jule::Ref<_1da2d3bdc_Data>> _206b0557a_get_datas_from_tuple_data(jule::Ref<_1da2d3bdc_Data> _9434_d) {
	if (jule::real(_9434_d->_field_kind->_method_tup())) {
		{
			auto _match_expr{ _9434_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_206e63542_TupleExprModel>>())) { goto _case_end_4391100336; }
			_case_begin_4391100336:;
			{
				return _9434_d->_field_model.operator jule::Ref<_206e63542_TupleExprModel>()->_field_datas;
			}
			goto _match_end_4391098320;
			_case_end_4391100336:;
			_case_begin_4391099008:;
			{
				jule::Ref<_1da411226_Tuple> _10121_t = _9434_d->_field_kind->_method_tup();
				jule::Slice<jule::Ref<_1da2d3bdc_Data>> _10221_r = jule::Slice<jule::Ref<_1da2d3bdc_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_10121_t->_field_types.len())));
				{
					auto _range_expr = _10121_t->_field_types;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _206b0557a_i = 0;
						jule::Ref<_1da411226_TypeKind> _206b0557a_kind = *_range_begin;
						_iter_begin_4391105232:;
						{
							_10221_r[static_cast<jule::Int>(_206b0557a_i)]=jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(_206b0557a_kind,jule::Ref<_1da411226_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
						}
						_iter_next_4391105232:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_206b0557a_i; _206b0557a_kind = *_range_begin; goto _iter_begin_4391105232; }
						_iter_end_4391105232:;
					}
				}
				return _10221_r;
			}
			goto _match_end_4391098320;
			_case_end_4391099008:;
			_match_end_4391098320:;
		}
	} else {
		return jule::Slice<jule::Ref<_1da2d3bdc_Data>>({_9434_d});
	}
}



inline jule::Slice<jule::Any> _206b0557a_get_expr_models(jule::Any _11624_m) {
	{
		auto _match_expr{ _11624_m };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_TupleExpr>>())) { goto _case_end_4391097920; }
		_case_begin_4391097920:;
		{
			jule::Ref<_2053703bd_TupleExpr> _11917_tup = _11624_m.operator jule::Ref<_2053703bd_TupleExpr>();
			jule::Slice<jule::Any> _12017_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_11917_tup->_field_expr.len())));
			{
				auto _range_expr = _11917_tup->_field_expr;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_2053703bd_Expr> _206b0557a_expr = *_range_begin;
					_iter_begin_4391116768:;
					{
						_12017_models=jule::append(_12017_models,jule::Slice<jule::Any>({_206b0557a_expr->_field_kind}));
					}
					_iter_next_4391116768:;
					++_range_begin;
					if (_range_begin != _range_end) { _206b0557a_expr = *_range_begin; goto _iter_begin_4391116768; }
					_iter_end_4391116768:;
				}
			}
			return _12017_models;
		}
		goto _match_end_4391110080;
		_case_end_4391097920:;
		_case_begin_4391112432:;
		{
			return jule::Slice<jule::Any>({_11624_m});
		}
		goto _match_end_4391110080;
		_case_end_4391112432:;
		_match_end_4391110080:;
	}
}



inline jule::Bool _206b0557a_check_mut(jule::Ref<_1d9dc7517_Sema> _13118_s,jule::Ref<_1da2d3bdc_Data> _13128_left,jule::Ref<_1da2d3bdc_Data> _13145_right,_20542560a_Token _13159_error_token) {
	jule::Bool _13181_ok = jule::Bool();
	{
		if (!(((!(_13128_left->_field_mutable))))) { goto _case_end_4391124944; }
		_case_begin_4391124944:;
		{
			_13118_s->_method_push_err(_13159_error_token,jule::Str("cannot assign to immutable define", 33),jule::Slice<jule::Any>({}));
			_13181_ok = false;
			return _13181_ok;
		}
		goto _match_end_4391123280;
		_case_end_4391124944:;
		if (!(((jule::real(_13145_right) && (!(_13145_right->_field_mutable))) && _13145_right->_field_kind->_method_mutable()))) { goto _case_end_4391124464; }
		_case_begin_4391124464:;
		{
			_13118_s->_method_push_err(_13159_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
			_13181_ok = false;
			return _13181_ok;
		}
		goto _match_end_4391123280;
		_case_end_4391124464:;
		_case_begin_4391123408:;
		{
			_13181_ok = true;
			return _13181_ok;
		}
		goto _match_end_4391123280;
		_case_end_4391123408:;
		_match_end_4391123280:;
	}
}



inline jule::Bool _206b0557a_check_assign(jule::Ref<_1d9dc7517_Sema> _14621_s,jule::Ref<_1da2d3bdc_Data> _14635_left,jule::Ref<_1da2d3bdc_Data> _14652_right,_20542560a_Token _14666_error_token) {
	jule::Bool _14688_ok = jule::Bool();
	jule::Ref<_2053ddd54_FnIns> _1479_f = _14635_left->_field_kind->_method_fnc();
	if ((jule::real(_1479_f) && jule::real(_1479_f->_field_decl)) && _1479_f->_field_decl->_field_global) {
		_14621_s->_method_push_err(_14666_error_token,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>({}));
		_14688_ok = false;
		return _14688_ok;
	}
	{
		if (!((_14635_left->_method_is_const()))) { goto _case_end_4391141952; }
		_case_begin_4391141952:;
		{
			_14621_s->_method_push_err(_14666_error_token,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>({}));
			_14621_s->_method_push_suggestion(jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>({}));
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4391139568;
		_case_end_4391141952:;
		if (!(((!(_14635_left->_field_lvalue))))) { goto _case_end_4391141456; }
		_case_begin_4391141456:;
		{
			_14621_s->_method_push_err(_14666_error_token,jule::Str("assignment required lvalue", 26),jule::Slice<jule::Any>({}));
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4391139568;
		_case_end_4391141456:;
		if (!(((!(_206b0557a_check_mut(_14621_s,_14635_left,_14652_right,_14666_error_token)))))) { goto _case_end_4391141568; }
		_case_begin_4391141568:;
		{
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4391139568;
		_case_end_4391141568:;
		_case_begin_4391140464:;
		{
			_14688_ok = true;
			return _14688_ok;
		}
		goto _match_end_4391139568;
		_case_end_4391140464:;
		_match_end_4391139568:;
	}
}



inline jule::Bool _206b0557a_is_valid_ast_st_for_next_st(jule::Any _17136_n) {
	{
		auto _match_expr{ _17136_n };
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_AssignSt>>())) { goto _case_end_4391152016; }
		_case_begin_4391152016:;
		{
			return (!(_17136_n.operator jule::Ref<_2053703bd_AssignSt>()->_field_declarative));
		}
		goto _match_end_4391134640;
		_case_end_4391152016:;
		if (!(_match_expr.type_is<jule::Ref<_2053703bd_FnCallExpr>>() || _match_expr.type_is<jule::Ref<_2053703bd_Expr>>())) { goto _case_end_4391152128; }
		_case_begin_4391152128:;
		{
			return true;
		}
		goto _match_end_4391134640;
		_case_end_4391152128:;
		_case_begin_4391150256:;
		{
			return false;
		}
		goto _match_end_4391134640;
		_case_end_4391150256:;
		_match_end_4391134640:;
	}
}



inline jule::Bool _206b0557a_is_valid_st_for_next_st(jule::Any _18528_st) {
	{
		auto _match_expr{ _18528_st };
		if (!(_match_expr.type_is<jule::Ref<_206e63542_FnCallExprModel>>() || _match_expr.type_is<jule::Ref<_206b0557a_Postfix>>() || _match_expr.type_is<jule::Ref<_206b0557a_Assign>>() || _match_expr.type_is<jule::Ref<_206b0557a_MultiAssign>>())) { goto _case_end_4391155184; }
		_case_begin_4391155184:;
		{
			return true;
		}
		goto _match_end_4391154112;
		_case_end_4391155184:;
		if (!(_match_expr.type_is<jule::Ref<_1da2d3bdc_Data>>())) { goto _case_end_4391155296; }
		_case_begin_4391155296:;
		{
			{
				auto _match_expr{ _18528_st.operator jule::Ref<_1da2d3bdc_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_206e63542_FnCallExprModel>>())) { goto _case_end_4391163136; }
				_case_begin_4391163136:;
				{
					return true;
				}
				goto _match_end_4391160832;
				_case_end_4391163136:;
				_case_begin_4391162832:;
				{
					return false;
				}
				goto _match_end_4391160832;
				_case_end_4391162832:;
				_match_end_4391160832:;
			}
		}
		goto _match_end_4391154112;
		_case_end_4391155296:;
		_case_begin_4391154656:;
		{
			return false;
		}
		goto _match_end_4391154112;
		_case_end_4391154656:;
		_match_end_4391154112:;
	}
}



inline jule::Bool _206b0557a_st_is_def(jule::Any _20414_st) {
	{
		auto _match_expr{ _20414_st };
		if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4391163888; }
		_case_begin_4391163888:;
		{
			return true;
		}
		goto _match_end_4391161408;
		_case_end_4391163888:;
		_case_begin_4391164624:;
		{
			return false;
		}
		goto _match_end_4391161408;
		_case_end_4391164624:;
		_match_end_4391161408:;
	}
}



inline jule::Ref<_1d9e22661_Var> _206e66325_find_var_in_package(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>> _2728_files,jule::Str _2751_ident,jule::Bool _2763_cpp_linked) {
	{
		auto _range_expr = _2728_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _206e66325_f = *_range_begin;
			_iter_begin_4391168304:;
			{
				jule::Ref<_1d9e22661_Var> _2917_v = _206e66325_f->_method_find_var(_2751_ident,_2763_cpp_linked);
				if (jule::real(_2917_v)) {
					return _2917_v;
				}
			}
			_iter_next_4391168304:;
			++_range_begin;
			if (_range_begin != _range_end) { _206e66325_f = *_range_begin; goto _iter_begin_4391168304; }
			_iter_end_4391168304:;
		}
	}
	return jule::new_ref<_1d9e22661_Var>();
}



inline jule::Ref<_1da411226_TypeAlias> _206e66325_find_type_alias_in_package(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>> _3935_files,jule::Str _3958_ident,jule::Bool _3970_cpp_linked) {
	{
		auto _range_expr = _3935_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _206e66325_f = *_range_begin;
			_iter_begin_4391175216:;
			{
				jule::Ref<_1da411226_TypeAlias> _4117_ta = _206e66325_f->_method_find_type_alias(_3958_ident,_3970_cpp_linked);
				if (jule::real(_4117_ta)) {
					return _4117_ta;
				}
			}
			_iter_next_4391175216:;
			++_range_begin;
			if (_range_begin != _range_end) { _206e66325_f = *_range_begin; goto _iter_begin_4391175216; }
			_iter_end_4391175216:;
		}
	}
	return jule::new_ref<_1da411226_TypeAlias>();
}



inline jule::Ref<_2053cdc01_Struct> _206e66325_find_struct_in_package(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>> _5131_files,jule::Str _5154_ident,jule::Bool _5166_cpp_linked) {
	{
		auto _range_expr = _5131_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _206e66325_f = *_range_begin;
			_iter_begin_4391182096:;
			{
				jule::Ref<_2053cdc01_Struct> _5317_s = _206e66325_f->_method_find_struct(_5154_ident,_5166_cpp_linked);
				if (jule::real(_5317_s)) {
					return _5317_s;
				}
			}
			_iter_next_4391182096:;
			++_range_begin;
			if (_range_begin != _range_end) { _206e66325_f = *_range_begin; goto _iter_begin_4391182096; }
			_iter_end_4391182096:;
		}
	}
	return jule::new_ref<_2053cdc01_Struct>();
}



inline jule::Ref<_2053ddd54_Fn> _206e66325_find_fn_in_package(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>> _6327_files,jule::Str _6350_ident,jule::Bool _6362_cpp_linked) {
	{
		auto _range_expr = _6327_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _206e66325_file = *_range_begin;
			_iter_begin_4391188976:;
			{
				jule::Ref<_2053ddd54_Fn> _6517_f = _206e66325_file->_method_find_fn(_6350_ident,_6362_cpp_linked);
				if (jule::real(_6517_f)) {
					return _6517_f;
				}
			}
			_iter_next_4391188976:;
			++_range_begin;
			if (_range_begin != _range_end) { _206e66325_file = *_range_begin; goto _iter_begin_4391188976; }
			_iter_end_4391188976:;
		}
	}
	return jule::new_ref<_2053ddd54_Fn>();
}



inline jule::Ref<_2065895c5_Trait> _206e66325_find_trait_in_package(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>> _7530_files,jule::Str _7553_ident) {
	{
		auto _range_expr = _7530_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _206e66325_f = *_range_begin;
			_iter_begin_4391195632:;
			{
				jule::Ref<_2065895c5_Trait> _7717_t = _206e66325_f->_method_find_trait(_7553_ident);
				if (jule::real(_7717_t)) {
					return _7717_t;
				}
			}
			_iter_next_4391195632:;
			++_range_begin;
			if (_range_begin != _range_end) { _206e66325_f = *_range_begin; goto _iter_begin_4391195632; }
			_iter_end_4391195632:;
		}
	}
	return jule::new_ref<_2065895c5_Trait>();
}



inline jule::Ref<_206b06c0d_Enum> _206e66325_find_enum_in_package(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>> _8729_files,jule::Str _8752_ident) {
	{
		auto _range_expr = _8729_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _206e66325_f = *_range_begin;
			_iter_begin_4391201520:;
			{
				jule::Ref<_206b06c0d_Enum> _8917_e = _206e66325_f->_method_find_enum(_8752_ident);
				if (jule::real(_8917_e)) {
					return _8917_e;
				}
			}
			_iter_next_4391201520:;
			++_range_begin;
			if (_range_begin != _range_end) { _206e66325_f = *_range_begin; goto _iter_begin_4391201520; }
			_iter_end_4391201520:;
		}
	}
	return jule::new_ref<_206b06c0d_Enum>();
}



inline _20377124e_Log _1d9dc7517_compiler_err(_20542560a_Token _1617_token,jule::Bool _1631_line,jule::Str _1643_fmt,jule::Slice<jule::Any> _1656_args) {
	_20377124e_Log _1713_log = _20377124e_Log(1LLU,_1617_token._field_row,_1617_token._field_column,_1617_token._field_file->_method_path(),_20377124e_logf(_1643_fmt,_1656_args),jule::Str(),jule::Str());
	if (_1631_line) {
		_1713_log._field_line=_1617_token._field_file->_method_get_row(_1617_token._field_row);
	}
	return _1713_log;
}



inline jule::Bool _1d9dc7517_imp_is_lookupable(jule::Ref<_206e66325_ImportInfo> _3022_i,jule::Str _3038_ident) {
	if (_3022_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_3022_i->_field_import_all))) {
		if (_3022_i->_field_selected.len() > 0LL) {
			return _3022_i->_method_exist_ident(_3038_ident);
		}
	}
	return _3022_i->_field_import_all;
}



inline jule::Slice<jule::Ref<_1d9e22661_Var>> _1d9dc7517_build_ret_vars(jule::Ref<_2053ddd54_FnIns> _4323_f) {
	if (_4323_f->_field_decl->_method_is_void() || (!(jule::real(_4323_f->_field_result)))) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1d9e22661_Var>> _4813_vars = nullptr;
	jule::Slice<jule::Ref<_1da411226_TypeKind>> _4913_types = _1da120d15_get_fn_result_types(_4323_f);
	{
		auto _range_expr = _4323_f->_field_decl->_field_result->_field_idents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d9dc7517_i = 0;
			_20542560a_Token _1d9dc7517_ident = *_range_begin;
			_iter_begin_4391226240:;
			{
				if (_20542560a_is_ignore_ident(_1d9dc7517_ident._field_kind)) {
					goto _iter_next_4391226240;
				}
				jule::Ref<_1d9e22661_Var> _5517_v = jule::new_struct<_1d9e22661_Var>(new( std::nothrow ) _1d9e22661_Var(_4323_f->_field_scope,_1d9dc7517_ident,_1d9dc7517_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),_4913_types[static_cast<jule::Int>(_1d9dc7517_i)])),jule::new_struct<_1da2d3bdc_Value>(new( std::nothrow ) _1da2d3bdc_Value(jule::Ref<_2053703bd_Expr>(),jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data()))),jule::Ref<_206a20e79_ReferenceStack>(),jule::Slice<jule::Ref<_2053703bd_Directive>>(),jule::Slice<jule::Ref<_1d9e22661_Var>>()));
				_4813_vars=jule::append(_4813_vars,jule::Slice<jule::Ref<_1d9e22661_Var>>({_5517_v}));
			}
			_iter_next_4391226240:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d9dc7517_i; _1d9dc7517_ident = *_range_begin; goto _iter_begin_4391226240; }
			_iter_end_4391226240:;
		}
	}
	return _4813_vars;
}



inline jule::Slice<jule::Ref<_1d9e22661_Var>> _1d9dc7517_build_param_vars(jule::Ref<_2053ddd54_FnIns> _7225_f) {
	if (_7225_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1d9e22661_Var>> _7713_vars = jule::Slice<jule::Ref<_1d9e22661_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_7225_f->_field_params.len())));
	{
		auto _range_expr = _7225_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d9dc7517_i = 0;
			jule::Ref<_2053ddd54_ParamIns> _1d9dc7517_p = *_range_begin;
			_iter_begin_4391240272:;
			{
				jule::Ref<_1d9e22661_Var> _7917_v = jule::new_struct<_1d9e22661_Var>(new( std::nothrow ) _1d9e22661_Var(_7225_f->_field_scope,_1d9dc7517_p->_field_decl->_field_token,_1d9dc7517_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_1d9dc7517_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol()),jule::new_struct<_1da2d3bdc_Value>(new( std::nothrow ) _1da2d3bdc_Value(jule::Ref<_2053703bd_Expr>(),jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data()))),jule::Ref<_206a20e79_ReferenceStack>(),jule::Slice<jule::Ref<_2053703bd_Directive>>(),jule::Slice<jule::Ref<_1d9e22661_Var>>()));
				{
					if (!((_1d9dc7517_p->_field_decl->_method_is_self()))) { goto _case_end_4391248240; }
					_case_begin_4391248240:;
					{
						_7917_v->_field_kind->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_7225_f->_field_owner));
						_7917_v->_field_reference=true;
						if (_1d9dc7517_p->_field_decl->_method_is_ref()) {
							_7917_v->_field_ident=_7917_v->_field_ident.slice(1LL);
							_7917_v->_field_kind->_field_kind->_field_kind=jule::new_struct<_1da411226_Ref>(new( std::nothrow ) _1da411226_Ref(_7917_v->_field_kind->_field_kind->_method_clone()));
						}
					}
					goto _match_end_4391247280;
					_case_end_4391248240:;
					if (!((_1d9dc7517_p->_field_decl->_field_variadic))) { goto _case_end_4391251136; }
					_case_begin_4391251136:;
					{
						_7917_v->_field_kind->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1da411226_Slc>(new( std::nothrow ) _1da411226_Slc(_1d9dc7517_p->_field_kind->_method_clone()))));
					}
					goto _match_end_4391247280;
					_case_end_4391251136:;
					_case_begin_4391247408:;
					{
						_7917_v->_field_kind->_field_kind=_1d9dc7517_p->_field_kind->_method_clone();
					}
					goto _match_end_4391247280;
					_case_end_4391247408:;
					_match_end_4391247280:;
				}
				_7713_vars[static_cast<jule::Int>(_1d9dc7517_i)]=_7917_v;
			}
			_iter_next_4391240272:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d9dc7517_i; _1d9dc7517_p = *_range_begin; goto _iter_begin_4391240272; }
			_iter_end_4391240272:;
		}
	}
	return _7713_vars;
}



inline jule::Slice<jule::Ref<_1da411226_TypeAlias>> _1d9dc7517_build_generic_type_aliases(jule::Ref<_2053ddd54_FnIns> _12035_f) {
	jule::I64 _12113_size = _12035_f->_field_generics.len();
	if (jule::real(_12035_f->_field_decl->_field_owner)) {
		_12113_size+=static_cast<jule::I64>(_12035_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_12113_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1da411226_TypeAlias>> _13013_aliases = jule::Slice<jule::Ref<_1da411226_TypeAlias>>::alloc(static_cast<jule::Int>(_12113_size));
	{
		auto _range_expr = _12035_f->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d9dc7517_i = 0;
			jule::Ref<_1da411226_TypeKind> _1d9dc7517_g = *_range_begin;
			_iter_begin_4391269216:;
			{
				jule::Ref<_2053703bd_GenericDecl> _13317_decl = _12035_f->_field_decl->_field_generics[static_cast<jule::Int>(_1d9dc7517_i)];
				_13013_aliases[static_cast<jule::Int>(_1d9dc7517_i)]=jule::new_struct<_1da411226_TypeAlias>(new( std::nothrow ) _1da411226_TypeAlias(_12035_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_13317_decl->_field_token,_13317_decl->_field_ident,jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),_1d9dc7517_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_4391269216:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d9dc7517_i; _1d9dc7517_g = *_range_begin; goto _iter_begin_4391269216; }
			_iter_end_4391269216:;
		}
	}
	if (jule::real(_12035_f->_field_decl->_field_owner)) {
		jule::Ref<_2053cdc01_StructIns> _14417_owner = _12035_f->_field_owner;
		{
			auto _range_expr = _14417_owner->_field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1d9dc7517_i = 0;
				jule::Ref<_1da411226_TypeKind> _1d9dc7517_g = *_range_begin;
				_iter_begin_4391278752:;
				{
					jule::Ref<_2053703bd_GenericDecl> _14621_decl = _14417_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1d9dc7517_i)];
					_13013_aliases[static_cast<jule::Int>(_12035_f->_field_generics.len() + _1d9dc7517_i)]=jule::new_struct<_1da411226_TypeAlias>(new( std::nothrow ) _1da411226_TypeAlias(_12035_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_14621_decl->_field_token,_14621_decl->_field_ident,jule::new_struct<_1da411226_TypeSymbol>(new( std::nothrow ) _1da411226_TypeSymbol(jule::Ref<_2053703bd_TypeDecl>(),_1d9dc7517_g)),jule::Str(),jule::Slice<jule::Any>()));
				}
				_iter_next_4391278752:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1d9dc7517_i; _1d9dc7517_g = *_range_begin; goto _iter_begin_4391278752; }
				_iter_end_4391278752:;
			}
		}
	}
	return _13013_aliases;
}



inline jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_find_file(jule::Slice<jule::Ref<_1da2aa301_SymbolTable>> _16018_files,jule::Ref<_2053bdb25_File> _16041_handler) {
	{
		auto _range_expr = _16018_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1d9dc7517_fl = *_range_begin;
			_iter_begin_4391287792:;
			{
				if ((_1d9dc7517_fl->_field_file).alloc == (_16041_handler).alloc) {
					return _1d9dc7517_fl;
				}
			}
			_iter_next_4391287792:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_fl = *_range_begin; goto _iter_begin_4391287792; }
			_iter_end_4391287792:;
		}
	}
	return jule::new_ref<_1da2aa301_SymbolTable>();
}



inline std::tuple<jule::Bool,jule::Bool> _1d9dc7517_conditional_has_ret(jule::Ref<_206b0557a_Conditional> _16928_c) {
	jule::Bool _16947_ok = jule::Bool();
	jule::Bool _16957_breaking = jule::Bool();
	jule::Bool _17013_breaked = false;
	{
		auto _range_expr = _16928_c->_field_elifs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b0557a_If> _1d9dc7517_elif = *_range_begin;
			_iter_begin_4391293776:;
			{
				if ((!(jule::real(_1d9dc7517_elif)))) {
					_16947_ok = false;
					_16957_breaking = false;
					return std::make_tuple(_16947_ok,_16957_breaking);
				}
				std::tie(_16947_ok,std::ignore,_16957_breaking) = _1d9dc7517___has_ret(_1d9dc7517_elif->_field_scope);
				_17013_breaked=_17013_breaked || _16957_breaking;
				if ((!(_16947_ok))) {
					_16947_ok = false;
					_16957_breaking = _17013_breaked;
					return std::make_tuple(_16947_ok,_16957_breaking);
				}
			}
			_iter_next_4391293776:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_elif = *_range_begin; goto _iter_begin_4391293776; }
			_iter_end_4391293776:;
		}
	}
	if ((!(jule::real(_16928_c->_field_default)))) {
		_16947_ok = false;
		_16957_breaking = _17013_breaked;
		return std::make_tuple(_16947_ok,_16957_breaking);
	}
	std::tie(_16947_ok,std::ignore,_16957_breaking) = _1d9dc7517___has_ret(_16928_c->_field_default->_field_scope);
	_17013_breaked=_17013_breaked || _16957_breaking;
	_16947_ok = _16947_ok;
	_16957_breaking = _17013_breaked;
	return std::make_tuple(_16947_ok,_16957_breaking);
}



inline jule::Bool _1d9dc7517_match_has_ret(jule::Ref<_206b0557a_Match> _19122_m) {
	if ((!(jule::real(_19122_m->_field_default)))) {
		return false;
	}
	jule::Bool _19613_ok = true;
	jule::Bool _19713_falled = false;
	jule::Bool _19813_breaked = false;
	{
		auto _range_expr = _19122_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b0557a_Case> _1d9dc7517_c = *_range_begin;
			_iter_begin_4391307808:;
			{
				if ((!(jule::real(_1d9dc7517_c)))) {
					return false;
				}
				std::tie(_19613_ok,_19713_falled,_19813_breaked) = _1d9dc7517___has_ret(_1d9dc7517_c->_field_scope);
				if (((!(_19613_ok)) && (!(_19713_falled))) || _19813_breaked) {
					return false;
				}
				{
					if (!(((!(_19613_ok))))) { goto _case_end_4391312192; }
					_case_begin_4391312192:;
					{
						if ((!(_19713_falled))) {
							return false;
						}
						goto _case_begin_4391312304;
					}
					goto _match_end_4391311808;
					_case_end_4391312192:;
					if (!((_19713_falled))) { goto _case_end_4391312304; }
					_case_begin_4391312304:;
					{
						if ((!(jule::real(_1d9dc7517_c->_field_next)))) {
							return false;
						}
						goto _iter_next_4391307808;
					}
					goto _match_end_4391311808;
					_case_end_4391312304:;
					_match_end_4391311808:;
				}
				_19713_falled=false;
			}
			_iter_next_4391307808:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_c = *_range_begin; goto _iter_begin_4391307808; }
			_iter_end_4391307808:;
		}
	}
	return _1d9dc7517_has_ret(_19122_m->_field_default->_field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1d9dc7517___has_ret(jule::Ref<_206b0557a_Scope> _22718_s) {
	jule::Bool _22731_ok = jule::Bool();
	jule::Bool _22741_falled = jule::Bool();
	jule::Bool _22755_breaked = jule::Bool();
	if ((!(jule::real(_22718_s)))) {
		_22731_ok = false;
		_22741_falled = false;
		_22755_breaked = false;
		return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
	}
	{
		auto _range_expr = _22718_s->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1d9dc7517_st = *_range_begin;
			_iter_begin_4391320352:;
			{
				{
					auto _match_expr{ _1d9dc7517_st };
					if (!(_match_expr.type_is<jule::Ref<_206b0557a_FallSt>>())) { goto _case_end_4391324288; }
					_case_begin_4391324288:;
					{
						_22741_falled=true;
					}
					goto _match_end_4391323168;
					_case_end_4391324288:;
					if (!(_match_expr.type_is<jule::Ref<_206b0557a_BreakSt>>())) { goto _case_end_4391324608; }
					_case_begin_4391324608:;
					{
						_22731_ok = false;
						_22741_falled = false;
						_22755_breaked = true;
						return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
					}
					goto _match_end_4391323168;
					_case_end_4391324608:;
					if (!(_match_expr.type_is<jule::Ref<_206b0557a_ContSt>>())) { goto _case_end_4391324720; }
					_case_begin_4391324720:;
					{
						_22731_ok = false;
						_22741_falled = false;
						_22755_breaked = true;
						return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
					}
					goto _match_end_4391323168;
					_case_end_4391324720:;
					if (!(_match_expr.type_is<jule::Ref<_206b0557a_InfIter>>())) { goto _case_end_4391324848; }
					_case_begin_4391324848:;
					{
						_22731_ok=_1d9dc7517_has_ret(_1d9dc7517_st.operator jule::Ref<_206b0557a_InfIter>()->_field_scope);
						if (_22731_ok) {
							_22731_ok = true;
							_22741_falled = false;
							_22755_breaked = false;
							return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
						}
					}
					goto _match_end_4391323168;
					_case_end_4391324848:;
					if (!(_match_expr.type_is<jule::Ref<_206b0557a_RetSt>>())) { goto _case_end_4391324976; }
					_case_begin_4391324976:;
					{
						_22731_ok = true;
						_22741_falled = _22741_falled;
						_22755_breaked = _22755_breaked;
						return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
					}
					goto _match_end_4391323168;
					_case_end_4391324976:;
					if (!(_match_expr.type_is<jule::Ref<_206b0557a_Scope>>())) { goto _case_end_4391325104; }
					_case_begin_4391325104:;
					{
						_22731_ok=_1d9dc7517_has_ret(_1d9dc7517_st.operator jule::Ref<_206b0557a_Scope>());
						if (_22731_ok) {
							_22731_ok = true;
							_22741_falled = false;
							_22755_breaked = false;
							return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
						}
					}
					goto _match_end_4391323168;
					_case_end_4391325104:;
					if (!(_match_expr.type_is<jule::Ref<_1da2d3bdc_Data>>())) { goto _case_end_4391325232; }
					_case_begin_4391325232:;
					{
						{
							auto _match_expr{ _1d9dc7517_st.operator jule::Ref<_1da2d3bdc_Data>()->_field_model };
							if (!(_match_expr.type_is<jule::Ref<_206e63542_BuiltinPanicCallExprModel>>())) { goto _case_end_4391343888; }
							_case_begin_4391343888:;
							{
								_22731_ok = true;
								_22741_falled = _22741_falled;
								_22755_breaked = _22755_breaked;
								return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
							}
							goto _match_end_4391343248;
							_case_end_4391343888:;
							_match_end_4391343248:;
						}
					}
					goto _match_end_4391323168;
					_case_end_4391325232:;
					if (!(_match_expr.type_is<jule::Ref<_206b0557a_Recover>>())) { goto _case_end_4391325360; }
					_case_begin_4391325360:;
					{
						jule::Bool _26518_ok;
						jule::Bool _26522__falled;
						jule::Bool _26531__breaked;
						std::tie(_26518_ok,_26522__falled,_26531__breaked) = _1d9dc7517___has_ret(_1d9dc7517_st.operator jule::Ref<_206b0557a_Recover>()->_field_scope);
						if (_26518_ok) {
							_22731_ok = true;
							_22741_falled = _26522__falled;
							_22755_breaked = _26531__breaked;
							return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
						}
					}
					goto _match_end_4391323168;
					_case_end_4391325360:;
					if (!(_match_expr.type_is<jule::Ref<_206b0557a_Conditional>>())) { goto _case_end_4391325488; }
					_case_begin_4391325488:;
					{
						std::tie(_22731_ok,_22755_breaked) = _1d9dc7517_conditional_has_ret(_1d9dc7517_st.operator jule::Ref<_206b0557a_Conditional>());
						if (_22731_ok) {
							_22731_ok = true;
							_22741_falled = false;
							_22755_breaked = false;
							return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
						}
						if (_22755_breaked) {
							_22731_ok = false;
							_22741_falled = false;
							_22755_breaked = _22755_breaked;
							return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
						}
					}
					goto _match_end_4391323168;
					_case_end_4391325488:;
					if (!(_match_expr.type_is<jule::Ref<_206b0557a_Match>>())) { goto _case_end_4391325616; }
					_case_begin_4391325616:;
					{
						_22731_ok=_1d9dc7517_match_has_ret(_1d9dc7517_st.operator jule::Ref<_206b0557a_Match>());
						if (_22731_ok) {
							_22731_ok = true;
							_22741_falled = false;
							_22755_breaked = false;
							return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
						}
					}
					goto _match_end_4391323168;
					_case_end_4391325616:;
					_match_end_4391323168:;
				}
			}
			_iter_next_4391320352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d9dc7517_st = *_range_begin; goto _iter_begin_4391320352; }
			_iter_end_4391320352:;
		}
	}
	_22731_ok = false;
	_22741_falled = _22741_falled;
	_22755_breaked = _22755_breaked;
	return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
}



inline jule::Bool _1d9dc7517_has_ret(jule::Ref<_206b0557a_Scope> _29116_s) {
	jule::Bool _29210_ok;
	std::tie(_29210_ok,std::ignore,std::ignore) = _1d9dc7517___has_ret(_29116_s);
	return _29210_ok;
}



inline void _1d9dc7517_push_suggestion(_20377124e_Log* _29631_log,jule::Str _29642_fmt,jule::Slice<jule::Any> _29655_args) {
	_29631_log->_field_suggestion=_20377124e_logf(_29642_fmt,_29655_args);
}



inline jule::Slice<jule::Ref<_1da411226_TypeKind>> _1da120d15_get_fn_result_types(jule::Ref<_2053ddd54_FnIns> _2528_f) {
	{
		if (!((_2528_f->_field_decl->_method_is_void() || (!(jule::real(_2528_f->_field_result)))))) { goto _case_end_4391369472; }
		_case_begin_4391369472:;
		{
			return nullptr;
		}
		goto _match_end_4391367904;
		_case_end_4391369472:;
		if (!(((!(jule::real(_2528_f->_field_result->_method_tup())))))) { goto _case_end_4391370496; }
		_case_begin_4391370496:;
		{
			return jule::Slice<jule::Ref<_1da411226_TypeKind>>({_2528_f->_field_result});
		}
		goto _match_end_4391367904;
		_case_end_4391370496:;
		_case_begin_4391368016:;
		{
			return _2528_f->_field_result->_method_tup()->_field_types;
		}
		goto _match_end_4391367904;
		_case_end_4391368016:;
		_match_end_4391367904:;
	}
}



inline jule::Bool _1da120d15_trait_has_reference_receiver(jule::Ref<_2065895c5_Trait> _3833_t) {
	{
		auto _range_expr = _3833_t->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1da120d15_f = *_range_begin;
			_iter_begin_4391372736:;
			{
				if (_1da120d15_f->_field_statically) {
					goto _iter_next_4391372736;
				}
				jule::Ref<_2053ddd54_Param> _4513_p = _1da120d15_f->_field_params[0LL];
				if (_4513_p->_method_is_ref() && _4513_p->_method_is_self()) {
					return true;
				}
			}
			_iter_next_4391372736:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da120d15_f = *_range_begin; goto _iter_begin_4391372736; }
			_iter_end_4391372736:;
		}
	}
	return false;
}



inline jule::Bool _1da120d15_float_assignable(jule::Str _5321_kind,jule::Ref<_1da2d3bdc_Data> _5332_d) {
	jule::Str _549_value = _203830374_fmt_float(static_cast<jule::F64>(_5332_d->_field_constant->_method_read_f64()),'e',-1LL,64LL);
	return _1da96e289_check_bit_float(_549_value,static_cast<jule::Int>(_1da96e289_bitsize_of(_5321_kind)));
}



inline jule::Bool _1da120d15_sig_assignable(jule::Str _5819_kind,jule::Ref<_1da2d3bdc_Data> _5830_d) {
	jule::F64 _599_min = _1da826509_min(_5819_kind);
	jule::F64 _609_max = _1da826509_max(_5819_kind);
	{
		if (!((_5830_d->_field_constant->_method_is_f64()))) { goto _case_end_4391388768; }
		_case_begin_4391388768:;
		{
			jule::F64 _6413_x = static_cast<jule::F64>(_5830_d->_field_constant->_method_read_f64());
			jule::F64 _6514_i;
			jule::F64 _6517_frac;
			std::tie(_6514_i,_6517_frac) = _204c8b845_modf(_6413_x);
			if (_6517_frac != 0LL) {
				return false;
			}
			return (_6514_i >= _599_min) && (_6514_i <= _609_max);
		}
		goto _match_end_4391388432;
		_case_end_4391388768:;
		if (!((_5830_d->_field_constant->_method_is_u64()))) { goto _case_end_4391388880; }
		_case_begin_4391388880:;
		{
			jule::F64 _7213_x = static_cast<jule::F64>(_5830_d->_field_constant->_method_read_u64());
			if (_7213_x <= _609_max) {
				return true;
			}
		}
		goto _match_end_4391388432;
		_case_end_4391388880:;
		if (!((_5830_d->_field_constant->_method_is_i64()))) { goto _case_end_4391388992; }
		_case_begin_4391388992:;
		{
			jule::F64 _7813_x = static_cast<jule::F64>(_5830_d->_field_constant->_method_read_i64());
			return (_599_min <= _7813_x) && (_7813_x <= _609_max);
		}
		goto _match_end_4391388432;
		_case_end_4391388992:;
		_match_end_4391388432:;
	}
	return false;
}



inline jule::Bool _1da120d15_unsig_assignable(jule::Str _8521_kind,jule::Ref<_1da2d3bdc_Data> _8532_d) {
	jule::F64 _869_max = _1da826509_max(_8521_kind);
	{
		if (!((_8532_d->_field_constant->_method_is_f64()))) { goto _case_end_4391404080; }
		_case_begin_4391404080:;
		{
			jule::F64 _9013_x = _8532_d->_field_constant->_method_read_f64();
			if (_9013_x < 0LL) {
				return false;
			}
			jule::F64 _9514_i;
			jule::F64 _9517_frac;
			std::tie(_9514_i,_9517_frac) = _204c8b845_modf(_9013_x);
			if (_9517_frac != 0LL) {
				return false;
			}
			return _9514_i <= _869_max;
		}
		goto _match_end_4391403824;
		_case_end_4391404080:;
		if (!((_8532_d->_field_constant->_method_is_u64()))) { goto _case_end_4391404192; }
		_case_begin_4391404192:;
		{
			jule::F64 _10213_x = static_cast<jule::F64>(_8532_d->_field_constant->_method_read_u64());
			if (_10213_x <= _869_max) {
				return true;
			}
		}
		goto _match_end_4391403824;
		_case_end_4391404192:;
		if (!((_8532_d->_field_constant->_method_is_i64()))) { goto _case_end_4391404304; }
		_case_begin_4391404304:;
		{
			jule::F64 _10813_x = static_cast<jule::F64>(_8532_d->_field_constant->_method_read_i64());
			return (0LL <= _10813_x) && (_10813_x <= _869_max);
		}
		goto _match_end_4391403824;
		_case_end_4391404304:;
		_match_end_4391403824:;
	}
	return false;
}



inline jule::Bool _1da120d15_int_assignable(jule::Str _11519_kind,jule::Ref<_1da2d3bdc_Data> _11530_d) {
	{
		if (!((_1a8a8de8a_is_sig_int(_11519_kind)))) { goto _case_end_4391419568; }
		_case_begin_4391419568:;
		{
			return _1da120d15_sig_assignable(_11519_kind,_11530_d);
		}
		goto _match_end_4391418512;
		_case_end_4391419568:;
		if (!((_1a8a8de8a_is_unsig_int(_11519_kind)))) { goto _case_end_4391419680; }
		_case_begin_4391419680:;
		{
			return _1da120d15_unsig_assignable(_11519_kind,_11530_d);
		}
		goto _match_end_4391418512;
		_case_end_4391419680:;
		_case_begin_4391418688:;
		{
			return false;
		}
		goto _match_end_4391418512;
		_case_end_4391418688:;
		_match_end_4391418512:;
	}
}



inline jule::Any _1da2d3bdc_find_builtins_import(jule::Str _4525_ident,jule::Ref<_206e66325_ImportInfo> _4537_imp) {
	return _206c94dac_find_package_builtin_def(_4537_imp->_field_link_path,_4525_ident);
}



inline jule::Any _1da2d3bdc_find_builtins_sema(jule::Str _4923_ident,jule::Ref<_1d9dc7517_Sema> _4939_s) {
	{
		auto _range_expr = _4939_s->_field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1da2d3bdc_imp = *_range_begin;
			_iter_begin_4391426368:;
			{
				if (_1da2d3bdc_imp->_field_import_all || _1da2d3bdc_imp->_method_exist_ident(_4923_ident)) {
					jule::Any _5221_def = _1da2d3bdc_find_builtins_import(_4923_ident,_1da2d3bdc_imp);
					if (_5221_def != nullptr) {
						return _5221_def;
					}
				}
			}
			_iter_next_4391426368:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da2d3bdc_imp = *_range_begin; goto _iter_begin_4391426368; }
			_iter_end_4391426368:;
		}
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1da2d3bdc_is_ok_for_shifting(jule::Ref<_1da2d3bdc_Data> _6127_d) {
	jule::Ref<_1da411226_Prim> _629_prim = _6127_d->_field_kind->_method_prim();
	if ((!(jule::real(_629_prim))) || (!(_1a8a8de8a_is_int(_629_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_6127_d->_method_is_const()))) {
		return true;
	}
	{
		if (!((_6127_d->_field_constant->_method_is_i64()))) { goto _case_end_4391454784; }
		_case_begin_4391454784:;
		{
			return _6127_d->_field_constant->_method_read_i64() >= 0LL;
		}
		goto _match_end_4391453408;
		_case_end_4391454784:;
		if (!((_6127_d->_field_constant->_method_is_u64()))) { goto _case_end_4391454896; }
		_case_begin_4391454896:;
		{
			return true;
		}
		goto _match_end_4391453408;
		_case_end_4391454896:;
		_case_begin_4391453536:;
		{
			return false;
		}
		goto _match_end_4391453408;
		_case_end_4391453536:;
		_match_end_4391453408:;
	}
}



inline jule::Bool _1da2d3bdc_is_instanced_struct(jule::Ref<_2053cdc01_StructIns> _7824_s) {
	return _7824_s->_field_decl->_field_generics.len() == _7824_s->_field_generics.len();
}



inline void _1da2d3bdc_normalize_bitsize(jule::Ref<_1da2d3bdc_Data> _8226_d) {
	if ((!(_8226_d->_method_is_const()))) {
		return;
	}
	jule::Str _8713_kind = jule::Str("", 0);
	{
		if (!((_8226_d->_field_constant->_method_is_i64()))) { goto _case_end_4391464192; }
		_case_begin_4391464192:;
		{
			jule::I64 _9013_x = _8226_d->_field_constant->_method_read_i64();
			_8713_kind=_1da96e289_int_from_bits(static_cast<jule::U64>(_1da96e289_bitsize_of_int(_9013_x)));
		}
		goto _match_end_4391462896;
		_case_end_4391464192:;
		if (!((_8226_d->_field_constant->_method_is_u64()))) { goto _case_end_4391464304; }
		_case_begin_4391464304:;
		{
			jule::U64 _9413_x = _8226_d->_field_constant->_method_read_u64();
			_8713_kind=_1da96e289_uint_from_bits(static_cast<jule::U64>(_1da96e289_bitsize_of_uint(_9413_x)));
		}
		goto _match_end_4391462896;
		_case_end_4391464304:;
		_case_begin_4391463152:;
		{
			return;
		}
		goto _match_end_4391462896;
		_case_end_4391463152:;
		_match_end_4391462896:;
	}
	if (jule::real(_8226_d->_field_kind->_method_enm())) {
		return;
	}
	_8226_d->_field_kind->_field_kind=_1da411226_build_prim_type(_8713_kind);
}



inline void _1da2d3bdc_normalize_type(jule::Ref<_1da2d3bdc_Data> _10923_d) {
	{
		if (!((_1da120d15_int_assignable(jule::Str("int", 3),_10923_d)))) { goto _case_end_4391474304; }
		_case_begin_4391474304:;
		{
			_10923_d->_field_kind->_field_kind=_1da411226_build_prim_type(jule::Str("int", 3));
			_10923_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_10923_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4391474064;
		_case_end_4391474304:;
		if (!((_1da120d15_int_assignable(jule::Str("uint", 4),_10923_d)))) { goto _case_end_4391474432; }
		_case_begin_4391474432:;
		{
			_10923_d->_field_kind->_field_kind=_1da411226_build_prim_type(jule::Str("uint", 4));
			_10923_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_10923_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4391474064;
		_case_end_4391474432:;
		_match_end_4391474064:;
	}
}



inline void _1da2d3bdc_apply_cast_kind_model(jule::Ref<_1da2d3bdc_Data> _12130_d) {
	_12130_d->_field_model=jule::Any(jule::new_struct<_206e63542_CastingExprModel>(new( std::nothrow ) _206e63542_CastingExprModel(_12130_d->_field_model,_12130_d->_field_cast_kind,_12130_d->_field_kind)));
}



inline void _1da2d3bdc_apply_cast_kind(jule::Ref<_1da2d3bdc_Data> _12924_d) {
	if ((!(jule::real(_12924_d->_field_cast_kind)))) {
		return;
	}
	_1da2d3bdc_apply_cast_kind_model(_12924_d);
	_12924_d->_field_kind=_12924_d->_field_cast_kind;
	jule::drop(_12924_d->_field_cast_kind);
}



inline jule::Ref<_1da2d3bdc_Data> _1da2d3bdc_build_void_data(void) {
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("void", 4)))),jule::Ref<_1da411226_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1a89ca987_Const>()));
}



inline jule::Str _1da2d3bdc_kind_by_bitsize(jule::Any _15020_expr) {
	{
		auto _match_expr{ _15020_expr };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4391492464; }
		_case_begin_4391492464:;
		{
			jule::F64 _15313_x = _15020_expr.operator jule::F64();
			return _1da96e289_float_from_bits(static_cast<jule::U64>(_1da96e289_bitsize_of_float(_15313_x)));
		}
		goto _match_end_4391490208;
		_case_end_4391492464:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4391492576; }
		_case_begin_4391492576:;
		{
			jule::I64 _15713_x = _15020_expr.operator jule::I64();
			return _1da96e289_int_from_bits(static_cast<jule::U64>(_1da96e289_bitsize_of_int(_15713_x)));
		}
		goto _match_end_4391490208;
		_case_end_4391492576:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4391492688; }
		_case_begin_4391492688:;
		{
			jule::U64 _16113_x = _15020_expr.operator jule::U64();
			return _1da96e289_uint_from_bits(static_cast<jule::U64>(_1da96e289_bitsize_of_uint(_16113_x)));
		}
		goto _match_end_4391490208;
		_case_end_4391492688:;
		_case_begin_4391489728:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4391490208;
		_case_end_4391489728:;
		_match_end_4391490208:;
	}
}



inline jule::Str _1da2d3bdc_check_data_for_integer_indexing(jule::Ref<_1da2d3bdc_Data> _16940_d) {
	jule::Str _16952_err_fmt = jule::Str("", 0);
	if ((!(jule::real(_16940_d)))) {
		_16952_err_fmt = jule::Str("", 0);
		return _16952_err_fmt;
	}
	jule::Ref<_1da411226_TypeKind> _17413_kind = _16940_d->_field_kind;
	if (jule::real(_17413_kind->_method_ref())) {
		_17413_kind=_17413_kind->_method_ref()->_field_elem;
	}
	{
		if (!(((!(jule::real(_17413_kind->_method_prim())))))) { goto _case_end_4391508960; }
		_case_begin_4391508960:;
		{
			_16952_err_fmt = jule::Str("invalid expression", 18);
			return _16952_err_fmt;
		}
		goto _match_end_4391503632;
		_case_end_4391508960:;
		if (!(((!(_1a8a8de8a_is_int(_17413_kind->_method_prim()->_method_to_str())))))) { goto _case_end_4391509072; }
		_case_begin_4391509072:;
		{
			_16952_err_fmt = jule::Str("invalid expression", 18);
			return _16952_err_fmt;
		}
		goto _match_end_4391503632;
		_case_end_4391509072:;
		if (!((_16940_d->_method_is_const()))) { goto _case_end_4391506704; }
		_case_begin_4391506704:;
		{
			if (_16940_d->_field_constant->_method_as_f64() < 0LL) {
				_16952_err_fmt = jule::Str("overflow the limit of data-type", 31);
				return _16952_err_fmt;
			}
		}
		goto _match_end_4391503632;
		_case_end_4391506704:;
		_case_begin_4391503728:;
		{
			_16940_d->_field_cast_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("int", 3))));
			_1da2d3bdc_apply_cast_kind(_16940_d);
		}
		goto _match_end_4391503632;
		_case_end_4391503728:;
		_match_end_4391503632:;
	}
	_16952_err_fmt = jule::Str("", 0);
	return _16952_err_fmt;
}



inline jule::Bool _1da411226_can_get_ptr(jule::Ref<_1da2d3bdc_Data> _55920_d) {
	if ((!(_55920_d->_field_lvalue)) || _55920_d->_method_is_const()) {
		return false;
	}
	{
		if (!((jule::real(_55920_d->_field_kind->_method_fnc()) || jule::real(_55920_d->_field_kind->_method_enm())))) { goto _case_end_4391516656; }
		_case_begin_4391516656:;
		{
			return false;
		}
		goto _match_end_4391515584;
		_case_end_4391516656:;
		_case_begin_4391515680:;
		{
			return true;
		}
		goto _match_end_4391515584;
		_case_end_4391515680:;
		_match_end_4391515584:;
	}
}



inline jule::Bool _1da411226_is_valid_for_ref(jule::Ref<_1da411226_TypeKind> _57325_t) {
	jule::Ref<_2053cdc01_StructIns> _57413_s = _57325_t->_method_strct();
	if ((jule::real(_57413_s) && jule::real(_57413_s->_field_decl)) && _57413_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return (!(((jule::real(_57325_t->_method_enm()) || jule::real(_57325_t->_method_ptr())) || jule::real(_57325_t->_method_ref())) || jule::real(_57325_t->_method_arr())));
}



inline jule::Str _1da411226_build_link_path_by_tokens(jule::Slice<_20542560a_Token> _58130_tokens) {
	jule::Str _58213_s = _58130_tokens[0LL]._field_kind;
	{
		auto _range_expr = _58130_tokens.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_20542560a_Token _1da411226_token = *_range_begin;
			_iter_begin_4391530672:;
			{
				_58213_s+=jule::Str("::", 2);
				_58213_s+=_1da411226_token._field_kind;
			}
			_iter_next_4391530672:;
			++_range_begin;
			if (_range_begin != _range_end) { _1da411226_token = *_range_begin; goto _iter_begin_4391530672; }
			_iter_end_4391530672:;
		}
	}
	return _58213_s;
}



inline jule::Ref<_1da411226_Prim> _1da411226_build_prim_type(jule::Str _59020_kind) {
	return jule::new_struct<_1da411226_Prim>(new( std::nothrow ) _1da411226_Prim(_59020_kind));
}



inline jule::Ref<_2053cdc01_Struct> _1da411226_get_struct_from_kind(jule::Ref<_1da411226_TypeKind> _59629_k) {
	{
		if (!(((!(jule::real(_59629_k)))))) { goto _case_end_4391537248; }
		_case_begin_4391537248:;
		{
			return jule::new_ref<_2053cdc01_Struct>();
		}
		goto _match_end_4391534624;
		_case_end_4391537248:;
		if (!((jule::real(_59629_k->_method_strct())))) { goto _case_end_4391536256; }
		_case_begin_4391536256:;
		{
			return _59629_k->_method_strct()->_field_decl;
		}
		goto _match_end_4391534624;
		_case_end_4391536256:;
		if (!((jule::real(_59629_k->_method_ref())))) { goto _case_end_4391536464; }
		_case_begin_4391536464:;
		{
			return _1da411226_get_struct_from_kind(_59629_k->_method_ref()->_field_elem);
		}
		goto _match_end_4391534624;
		_case_end_4391536464:;
		if (!((jule::real(_59629_k->_method_slc())))) { goto _case_end_4391536912; }
		_case_begin_4391536912:;
		{
			return _1da411226_get_struct_from_kind(_59629_k->_method_slc()->_field_elem);
		}
		goto _match_end_4391534624;
		_case_end_4391536912:;
		if (!((jule::real(_59629_k->_method_arr())))) { goto _case_end_4391537024; }
		_case_begin_4391537024:;
		{
			return _1da411226_get_struct_from_kind(_59629_k->_method_arr()->_field_elem);
		}
		goto _match_end_4391534624;
		_case_end_4391537024:;
		if (!((jule::real(_59629_k->_method_ptr())))) { goto _case_end_4391535856; }
		_case_begin_4391535856:;
		{
			return jule::new_ref<_2053cdc01_Struct>();
		}
		goto _match_end_4391534624;
		_case_end_4391535856:;
		_case_begin_4391534896:;
		{
			return jule::new_ref<_2053cdc01_Struct>();
		}
		goto _match_end_4391534624;
		_case_end_4391534896:;
		_match_end_4391534624:;
	}
}



inline jule::Bool _1da411226_is_prim(jule::Str _62512_kind) {
	return (((((((((((((((_62512_kind == jule::Str("i8", 2)) || (_62512_kind == jule::Str("i16", 3))) || (_62512_kind == jule::Str("i32", 3))) || (_62512_kind == jule::Str("i64", 3))) || (_62512_kind == jule::Str("u8", 2))) || (_62512_kind == jule::Str("u16", 3))) || (_62512_kind == jule::Str("u32", 3))) || (_62512_kind == jule::Str("u64", 3))) || (_62512_kind == jule::Str("f32", 3))) || (_62512_kind == jule::Str("f64", 3))) || (_62512_kind == jule::Str("int", 3))) || (_62512_kind == jule::Str("uint", 4))) || (_62512_kind == jule::Str("uintptr", 7))) || (_62512_kind == jule::Str("bool", 4))) || (_62512_kind == jule::Str("str", 3))) || (_62512_kind == jule::Str("any", 3));
}



inline std::tuple<jule::Ref<_1da2aa301_SymbolTable>,jule::Slice<_20377124e_Log>> _206c8d01a_build_symbols(jule::Ref<_20521102d_Ast> _1522_ast,jule::Trait<_206e66325_Importer> _1537_importer,jule::Ref<_206a20e79_SymbolBuilder> _1561_owner) {
	jule::Ref<_206a20e79_SymbolBuilder> _1613_sb = jule::new_struct<_206a20e79_SymbolBuilder>(new( std::nothrow ) _206a20e79_SymbolBuilder(_1561_owner,_1537_importer,jule::Slice<_20377124e_Log>(),_1522_ast,jule::Ref<_1da2aa301_SymbolTable>()));
	_1613_sb->_method_build();
	if (_1613_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1613_sb->_field_table,nullptr);
	}
	return std::make_tuple(jule::new_ref<_1da2aa301_SymbolTable>(),_1613_sb->_field_errors);
}



inline std::tuple<jule::Ref<_206e66325_Package>,jule::Slice<_20377124e_Log>> _206c8d01a___analyze_package(jule::Slice<jule::Ref<_20521102d_Ast>> _2926_files,jule::Trait<_206e66325_Importer> _2945_importer,jule::Int _2965_flags) {
	jule::Slice<jule::Ref<_1da2aa301_SymbolTable>> _3113_tables = jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_2926_files.len())));
	{
		auto _range_expr = _2926_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _206c8d01a_i = 0;
			jule::Ref<_20521102d_Ast> _206c8d01a_f = *_range_begin;
			_iter_begin_4391564224:;
			{
				jule::Ref<_1da2aa301_SymbolTable> _3318_table;
				jule::Slice<_20377124e_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _206c8d01a_build_symbols(_206c8d01a_f,_2945_importer,jule::new_ref<_206a20e79_SymbolBuilder>());
				if (_3329_errors.len() > 0LL) {
					return std::make_tuple(jule::new_ref<_206e66325_Package>(),_3329_errors);
				}
				_3113_tables[static_cast<jule::Int>(_206c8d01a_i)]=_3318_table;
			}
			_iter_next_4391564224:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_206c8d01a_i; _206c8d01a_f = *_range_begin; goto _iter_begin_4391564224; }
			_iter_end_4391564224:;
		}
	}
	jule::Ref<_1d9dc7517_Sema> _4013_sema = jule::new_struct<_1d9dc7517_Sema>(new( std::nothrow ) _1d9dc7517_Sema(jule::Slice<_20377124e_Log>(),jule::Slice<jule::Ref<_1da2aa301_SymbolTable>>(),jule::Ref<_1da2aa301_SymbolTable>(),_2965_flags));
	_4013_sema->_method_check(_3113_tables);
	if (_4013_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_206e66325_Package>(),_4013_sema->_field_errors);
	}
	jule::Ref<_206e66325_Package> _4813_pkg = jule::new_struct<_206e66325_Package>(new( std::nothrow ) _206e66325_Package(_4013_sema->_field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ref<_206e66325_Package>,jule::Slice<_20377124e_Log>> _206c8d01a_analyze_package(jule::Slice<jule::Ref<_20521102d_Ast>> _7228_files,jule::Trait<_206e66325_Importer> _7247_importer,jule::Int _7267_flags) {
	if (_7228_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_206e66325_Package>(),nullptr);
	}
	jule::Ref<_206e66325_Package> _7714_package;
	jule::Slice<_20377124e_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _206c8d01a___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline std::tuple<jule::Ref<_1da2aa301_SymbolTable>,jule::Slice<_20377124e_Log>> _206c8d01a_analyze_file(jule::Ref<_20521102d_Ast> _9825_f,jule::Trait<_206e66325_Importer> _9838_importer,jule::Int _9858_flags) {
	jule::Slice<jule::Ref<_20521102d_Ast>> _9913_files = jule::Slice<jule::Ref<_20521102d_Ast>>({_9825_f});
	jule::Ref<_206e66325_Package> _10014_pkg;
	jule::Slice<_20377124e_Log> _10023_errors;
	std::tie(_10014_pkg,_10023_errors) = _206c8d01a_analyze_package(_9913_files,_9838_importer,_9858_flags);
	if (_10023_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1da2aa301_SymbolTable>(),_10023_errors);
	}
	jule::Ref<_1da2aa301_SymbolTable> _10713_table = _10014_pkg->_field_files[0LL];
	return std::make_tuple(_10713_table,nullptr);
}



inline void _206c94dac_init(void) {
	_206c94dac_BUILTIN_FN_OUT->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_out);
	_206c94dac_BUILTIN_FN_OUTLN->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_outln);
	_206c94dac_BUILTIN_FN_NEW->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_new);
	_206c94dac_BUILTIN_FN_REAL->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_real);
	_206c94dac_BUILTIN_FN_DROP->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_drop);
	_206c94dac_BUILTIN_FN_PANIC->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_panic);
	_206c94dac_BUILTIN_FN_MAKE->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_make);
	_206c94dac_BUILTIN_FN_APPEND->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_append);
	_206c94dac_BUILTIN_FN_COPY->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_copy);
	_206c94dac_BUILTIN_FN_RECOVER->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_recover);
	_206c94dac_BUILTIN_FN_CLONE->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_clone);
	_206c94dac_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_std_mem_size_of);
	_206c94dac_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_std_mem_align_of);
	_206c94dac_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_std_jule_integrated_to_str);
	jule::Ref<_2053ddd54_Fn> _11213_error_method = _206c94dac_BUILTIN_TRAIT_ERROR->_method_find_method(jule::Str("error", 5));
	jule::Ref<_2053ddd54_FnIns> _11313_error_method_ins = _11213_error_method->_method_instance();
	_11313_error_method_ins->_field_result=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("str", 3))));
	_11313_error_method_ins->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common);
	_11213_error_method->_method_append_instance(_11313_error_method_ins);
	jule::Ref<_2053ddd54_Fn> _11813_dispose_method = _206c94dac_BUILTIN_TRAIT_DISPOSE->_method_find_method(jule::Str("dispose", 7));
	jule::Ref<_2053ddd54_FnIns> _11913_dispose_method_ins = _11813_dispose_method->_method_instance();
	_11913_dispose_method_ins->_field_caller=jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common);
	_11813_dispose_method->_method_append_instance(_11913_dispose_method_ins);
}



inline jule::Ref<_2053ddd54_FnIns> _206c94dac_find_builtin_fn(jule::Str _12420_ident) {
	{
		auto _match_expr{ _12420_ident };
		if (!((jule::Str("out", 3)) == _match_expr)) { goto _case_end_4391620912; }
		_case_begin_4391620912:;
		{
			return _206c94dac_BUILTIN_FN_OUT;
		}
		goto _match_end_4391618160;
		_case_end_4391620912:;
		if (!((jule::Str("outln", 5)) == _match_expr)) { goto _case_end_4391621488; }
		_case_begin_4391621488:;
		{
			return _206c94dac_BUILTIN_FN_OUTLN;
		}
		goto _match_end_4391618160;
		_case_end_4391621488:;
		if (!((jule::Str("new", 3)) == _match_expr)) { goto _case_end_4391620496; }
		_case_begin_4391620496:;
		{
			return _206c94dac_BUILTIN_FN_NEW;
		}
		goto _match_end_4391618160;
		_case_end_4391620496:;
		if (!((jule::Str("real", 4)) == _match_expr)) { goto _case_end_4391620704; }
		_case_begin_4391620704:;
		{
			return _206c94dac_BUILTIN_FN_REAL;
		}
		goto _match_end_4391618160;
		_case_end_4391620704:;
		if (!((jule::Str("drop", 4)) == _match_expr)) { goto _case_end_4391621152; }
		_case_begin_4391621152:;
		{
			return _206c94dac_BUILTIN_FN_DROP;
		}
		goto _match_end_4391618160;
		_case_end_4391621152:;
		if (!((jule::Str("panic", 5)) == _match_expr)) { goto _case_end_4391621264; }
		_case_begin_4391621264:;
		{
			return _206c94dac_BUILTIN_FN_PANIC;
		}
		goto _match_end_4391618160;
		_case_end_4391621264:;
		if (!((jule::Str("make", 4)) == _match_expr)) { goto _case_end_4391620096; }
		_case_begin_4391620096:;
		{
			return _206c94dac_BUILTIN_FN_MAKE;
		}
		goto _match_end_4391618160;
		_case_end_4391620096:;
		if (!((jule::Str("append", 6)) == _match_expr)) { goto _case_end_4391620208; }
		_case_begin_4391620208:;
		{
			return _206c94dac_BUILTIN_FN_APPEND;
		}
		goto _match_end_4391618160;
		_case_end_4391620208:;
		if (!((jule::Str("copy", 4)) == _match_expr)) { goto _case_end_4391620320; }
		_case_begin_4391620320:;
		{
			return _206c94dac_BUILTIN_FN_COPY;
		}
		goto _match_end_4391618160;
		_case_end_4391620320:;
		if (!((jule::Str("recover", 7)) == _match_expr)) { goto _case_end_4391619488; }
		_case_begin_4391619488:;
		{
			return _206c94dac_BUILTIN_FN_RECOVER;
		}
		goto _match_end_4391618160;
		_case_end_4391619488:;
		if (!((jule::Str("clone", 5)) == _match_expr)) { goto _case_end_4391619600; }
		_case_begin_4391619600:;
		{
			return _206c94dac_BUILTIN_FN_CLONE;
		}
		goto _match_end_4391618160;
		_case_end_4391619600:;
		_case_begin_4391619104:;
		{
			return jule::new_ref<_2053ddd54_FnIns>();
		}
		goto _match_end_4391618160;
		_case_end_4391619104:;
		_match_end_4391618160:;
	}
}



inline jule::Ref<_1da411226_TypeAlias> _206c94dac_find_builtin_type_alias(jule::Str _14128_ident) {
	{
		auto _match_expr{ _14128_ident };
		if (!((jule::Str("byte", 4)) == _match_expr)) { goto _case_end_4391629744; }
		_case_begin_4391629744:;
		{
			return _206c94dac_BUILTIN_TYPE_ALIAS_BYTE;
		}
		goto _match_end_4391626176;
		_case_end_4391629744:;
		if (!((jule::Str("rune", 4)) == _match_expr)) { goto _case_end_4391628752; }
		_case_begin_4391628752:;
		{
			return _206c94dac_BUILTIN_TYPE_ALIAS_RUNE;
		}
		goto _match_end_4391626176;
		_case_end_4391628752:;
		_case_begin_4391627024:;
		{
			return jule::new_ref<_1da411226_TypeAlias>();
		}
		goto _match_end_4391626176;
		_case_end_4391627024:;
		_match_end_4391626176:;
	}
}



inline jule::Ref<_2065895c5_Trait> _206c94dac_find_builtin_trait(jule::Str _14923_ident) {
	{
		auto _match_expr{ _14923_ident };
		if (!((jule::Str("Error", 5)) == _match_expr)) { goto _case_end_4391632800; }
		_case_begin_4391632800:;
		{
			return _206c94dac_BUILTIN_TRAIT_ERROR;
		}
		goto _match_end_4391629408;
		_case_end_4391632800:;
		if (!((jule::Str("Dispose", 7)) == _match_expr)) { goto _case_end_4391631808; }
		_case_begin_4391631808:;
		{
			return _206c94dac_BUILTIN_TRAIT_DISPOSE;
		}
		goto _match_end_4391629408;
		_case_end_4391631808:;
		_case_begin_4391628160:;
		{
			return jule::new_ref<_2065895c5_Trait>();
		}
		goto _match_end_4391629408;
		_case_end_4391628160:;
		_match_end_4391629408:;
	}
}



inline jule::Any _206c94dac_find_builtin_def(jule::Str _15721_ident) {
	jule::Ref<_2053ddd54_FnIns> _15813_f = _206c94dac_find_builtin_fn(_15721_ident);
	if (jule::real(_15813_f)) {
		return jule::Any(_15813_f);
	}
	jule::Ref<_1da411226_TypeAlias> _16313_ta = _206c94dac_find_builtin_type_alias(_15721_ident);
	if (jule::real(_16313_ta)) {
		return jule::Any(_16313_ta);
	}
	jule::Ref<_2065895c5_Trait> _16813_t = _206c94dac_find_builtin_trait(_15721_ident);
	if (jule::real(_16813_t)) {
		return jule::Any(_16813_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _206c94dac_find_builtin_def_std_mem(jule::Str _17629_ident) {
	{
		auto _match_expr{ _17629_ident };
		if (!((jule::Str("size_of", 7)) == _match_expr)) { goto _case_end_4391641728; }
		_case_begin_4391641728:;
		{
			return jule::Any(_206c94dac_BUILTIN_FN_STD_MEM_SIZE_OF);
		}
		goto _match_end_4391639216;
		_case_end_4391641728:;
		if (!((jule::Str("align_of", 8)) == _match_expr)) { goto _case_end_4391642288; }
		_case_begin_4391642288:;
		{
			return jule::Any(_206c94dac_BUILTIN_FN_STD_MEM_ALIGN_OF);
		}
		goto _match_end_4391639216;
		_case_end_4391642288:;
		_case_begin_4391640400:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4391639216;
		_case_end_4391640400:;
		_match_end_4391639216:;
	}
}



inline jule::Any _206c94dac_find_builtin_def_std_jule_integrated(jule::Str _18441_ident) {
	{
		auto _match_expr{ _18441_ident };
		if (!((jule::Str("to_str", 6)) == _match_expr)) { goto _case_end_4391645152; }
		_case_begin_4391645152:;
		{
			return jule::Any(_206c94dac_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR);
		}
		goto _match_end_4391644112;
		_case_end_4391645152:;
		_case_begin_4391643264:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4391644112;
		_case_end_4391643264:;
		_match_end_4391644112:;
	}
}



inline jule::Any _206c94dac_find_package_builtin_def(jule::Str _19129_link_path,jule::Str _19145_ident) {
	{
		auto _match_expr{ _19129_link_path };
		if (!((jule::Str("std::mem", 8)) == _match_expr)) { goto _case_end_4391648496; }
		_case_begin_4391648496:;
		{
			return _206c94dac_find_builtin_def_std_mem(_19145_ident);
		}
		goto _match_end_4391645968;
		_case_end_4391648496:;
		if (!((jule::Str("std::jule::integrated", 21)) == _match_expr)) { goto _case_end_4391649056; }
		_case_begin_4391649056:;
		{
			return _206c94dac_find_builtin_def_std_jule_integrated(_19145_ident);
		}
		goto _match_end_4391645968;
		_case_end_4391649056:;
		_case_begin_4391647072:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4391645968;
		_case_end_4391647072:;
		_match_end_4391645968:;
	}
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_common_plain(jule::Ref<_1da2d3bdc_Eval> _19936_e,jule::Ref<_2053703bd_FnCallExpr> _19950_fc,jule::Ref<_1da2d3bdc_Data> _19971_d) {
	jule::Ref<_2053ddd54_FnIns> _20013_f = _19971_d->_field_kind->_method_fnc();
	_1da120d15_FnCallArgChecker _20213_fcac = _1da120d15_FnCallArgChecker(_19936_e,_19950_fc->_field_args,_19950_fc->_field_token,_20013_f,false,jule::Slice<jule::Any>());
	_20213_fcac._method_check();
	jule::Ref<_206e63542_FnCallExprModel> _21113_model = jule::new_struct<_206e63542_FnCallExprModel>(new( std::nothrow ) _206e63542_FnCallExprModel(_20013_f,_19950_fc->_field_concurrent,_19971_d->_field_model,_20213_fcac._field_arg_models));
	if ((!(jule::real(_20013_f->_field_result)))) {
		_19971_d=_1da2d3bdc_build_void_data();
	} else {
		_19971_d=jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(_20013_f->_field_result,jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
	}
	_19971_d->_field_model=jule::Any(_21113_model);
	return _19971_d;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_common(jule::Ref<_1da2d3bdc_Eval> _23030_e,jule::Ref<_2053703bd_FnCallExpr> _23044_fc,jule::Ref<_1da2d3bdc_Data> _23065_d) {
	if (_23044_fc->_field_generics.len() > 0LL) {
		_23030_e->_method_push_err(_23044_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	return _206c94dac_builtin_caller_common_plain(_23030_e,_23044_fc,_23065_d);
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_common_mut(jule::Ref<_1da2d3bdc_Eval> _23834_e,jule::Ref<_2053703bd_FnCallExpr> _23848_fc,jule::Ref<_1da2d3bdc_Data> _23869_d) {
	if ((!(_23869_d->_field_mutable))) {
		_23834_e->_method_push_err(_23848_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	return _206c94dac_builtin_caller_common(_23834_e,_23848_fc,_23869_d);
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_out(jule::Ref<_1da2d3bdc_Eval> _24527_e,jule::Ref<_2053703bd_FnCallExpr> _24541_fc,jule::Ref<_1da2d3bdc_Data> ) {
	if (_24541_fc->_field_generics.len() > 0LL) {
		_24527_e->_method_push_err(_24541_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_24541_fc->_field_args.len() < 1LL) {
		_24527_e->_method_push_err(_24541_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_24541_fc->_field_args.len() > 1LL) {
		_24527_e->_method_push_err(_24541_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _25713_expr = _24527_e->_method_eval_expr(_24541_fc->_field_args[0LL]);
	if ((!(jule::real(_25713_expr)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if ((_25713_expr->_method_is_void() || jule::real(_25713_expr->_field_kind->_method_fnc())) || jule::real(_25713_expr->_field_kind->_method_tup())) {
		_24527_e->_method_push_err(_24541_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Ref<_1da2d3bdc_Data> _26713_d = _1da2d3bdc_build_void_data();
	_26713_d->_field_model=jule::Any(jule::new_struct<_206e63542_BuiltinOutCallExprModel>(new( std::nothrow ) _206e63542_BuiltinOutCallExprModel(_25713_expr->_field_model)));
	return _26713_d;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_outln(jule::Ref<_1da2d3bdc_Eval> _27229_e,jule::Ref<_2053703bd_FnCallExpr> _27243_fc,jule::Ref<_1da2d3bdc_Data> ) {
	jule::Ref<_1da2d3bdc_Data> _27313_d = _206c94dac_builtin_caller_out(_27229_e,_27243_fc,jule::new_ref<_1da2d3bdc_Data>());
	if ((!(jule::real(_27313_d)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	_27313_d->_field_model=jule::Any(jule::new_struct<_206e63542_BuiltinOutlnCallExprModel>(new( std::nothrow ) _206e63542_BuiltinOutlnCallExprModel(_27313_d->_field_model.operator jule::Ref<_206e63542_BuiltinOutCallExprModel>()->_field_expr)));
	return _27313_d;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_new(jule::Ref<_1da2d3bdc_Eval> _28427_e,jule::Ref<_2053703bd_FnCallExpr> _28441_fc,jule::Ref<_1da2d3bdc_Data> _28462_d) {
	if (_28441_fc->_field_generics.len() > 0LL) {
		_28427_e->_method_push_err(_28441_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_28441_fc->_field_args.len() < 1LL) {
		_28427_e->_method_push_err(_28441_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_28441_fc->_field_args.len() > 2LL) {
		_28427_e->_method_push_err(_28441_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _29613_t = _28427_e->_method_eval_expr_kind(_28441_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_29613_t)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if ((!(_29613_t->_field_decl))) {
		_28427_e->_method_push_err(_28441_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if ((!(_1da411226_is_valid_for_ref(_29613_t->_field_kind)))) {
		jule::Ref<_2053cdc01_StructIns> _30717_s = _29613_t->_field_kind->_method_strct();
		if ((jule::real(_30717_s) && jule::real(_30717_s->_field_decl)) && _30717_s->_field_decl->_field_cpp_linked) {
			_28427_e->_method_push_err(_28441_fc->_field_args[0LL]->_field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
		} else {
			_28427_e->_method_push_err(_28441_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	_28462_d->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1da411226_Ref>(new( std::nothrow ) _1da411226_Ref(_29613_t->_field_kind->_method_clone()))));
	if (_28441_fc->_field_args.len() == 2LL) {
		jule::Ref<_1da2d3bdc_Data> _31917_init = _28427_e->_field_s->_method_evalp(_28441_fc->_field_args[1LL],_28427_e->_field_lookup,_29613_t->_field_kind);
		if (jule::real(_31917_init)) {
			_29613_t->_field_mutable=true;
			_206b0557a_check_mut(_28427_e->_field_s,_29613_t,_31917_init,_28441_fc->_field_args[1LL]->_field_token);
			_28427_e->_field_s->_method_check_assign_type(_29613_t->_field_kind,_31917_init,_28441_fc->_field_args[1LL]->_field_token,false);
			if (jule::real(_31917_init->_field_kind->_method_ref())) {
				_31917_init->_field_model=jule::Any(jule::new_struct<_206e63542_ExplicitDerefExprModel>(new( std::nothrow ) _206e63542_ExplicitDerefExprModel(_31917_init->_field_model)));
			}
			_28462_d->_field_model=jule::Any(jule::new_struct<_206e63542_BuiltinNewCallExprModel>(new( std::nothrow ) _206e63542_BuiltinNewCallExprModel(_29613_t->_field_kind,_31917_init->_field_model)));
		}
	} else {
		_28462_d->_field_model=jule::Any(jule::new_struct<_206e63542_BuiltinNewCallExprModel>(new( std::nothrow ) _206e63542_BuiltinNewCallExprModel(_29613_t->_field_kind,jule::Any())));
	}
	return _28462_d;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_real(jule::Ref<_1da2d3bdc_Eval> _34328_e,jule::Ref<_2053703bd_FnCallExpr> _34342_fc,jule::Ref<_1da2d3bdc_Data> _34363_d) {
	if (_34342_fc->_field_generics.len() > 0LL) {
		_34328_e->_method_push_err(_34342_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_34342_fc->_field_args.len() < 1LL) {
		_34328_e->_method_push_err(_34342_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_34342_fc->_field_args.len() > 1LL) {
		_34328_e->_method_push_err(_34342_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _35513_ref = _34328_e->_method_eval_expr(_34342_fc->_field_args[0LL]);
	if ((!(jule::real(_35513_ref)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if ((!(jule::real(_35513_ref->_field_kind->_method_ref())))) {
		_34328_e->_method_push_err(_34342_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_34328_e->_method_push_suggestion(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	_34363_d->_field_kind=_206c94dac_BUILTIN_FN_REAL->_field_result;
	_34363_d->_field_model=jule::Any(jule::new_struct<_206e63542_BuiltinRealCallExprModel>(new( std::nothrow ) _206e63542_BuiltinRealCallExprModel(_35513_ref->_field_model)));
	return _34363_d;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_drop(jule::Ref<_1da2d3bdc_Eval> _37128_e,jule::Ref<_2053703bd_FnCallExpr> _37142_fc,jule::Ref<_1da2d3bdc_Data> ) {
	if (_37142_fc->_field_generics.len() > 0LL) {
		_37128_e->_method_push_err(_37142_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_37142_fc->_field_args.len() < 1LL) {
		_37128_e->_method_push_err(_37142_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_37142_fc->_field_args.len() > 1LL) {
		_37128_e->_method_push_err(_37142_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _38313_ref = _37128_e->_method_eval_expr(_37142_fc->_field_args[0LL]);
	if ((!(jule::real(_38313_ref)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if ((!(jule::real(_38313_ref->_field_kind->_method_ref())))) {
		_37128_e->_method_push_err(_37142_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_37128_e->_method_push_suggestion(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	_206b0557a_check_mut(_37128_e->_field_s,_38313_ref,jule::new_ref<_1da2d3bdc_Data>(),_37142_fc->_field_args[0LL]->_field_token);
	jule::Ref<_1da2d3bdc_Data> _39613_d = _1da2d3bdc_build_void_data();
	_39613_d->_field_model=jule::Any(jule::new_struct<_206e63542_BuiltinDropCallExprModel>(new( std::nothrow ) _206e63542_BuiltinDropCallExprModel(_38313_ref->_field_model)));
	return _39613_d;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_panic(jule::Ref<_1da2d3bdc_Eval> _40129_e,jule::Ref<_2053703bd_FnCallExpr> _40143_fc,jule::Ref<_1da2d3bdc_Data> ) {
	if (_40143_fc->_field_generics.len() > 0LL) {
		_40129_e->_method_push_err(_40143_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_40143_fc->_field_args.len() < 1LL) {
		_40129_e->_method_push_err(_40143_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("error", 5))}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_40143_fc->_field_args.len() > 1LL) {
		_40129_e->_method_push_err(_40143_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _41313_expr = _40129_e->_method_eval_expr(_40143_fc->_field_args[0LL]);
	if ((!(jule::real(_41313_expr)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (jule::real(_41313_expr->_field_kind->_method_strct())) {
		jule::Ref<_2053cdc01_StructIns> _41913_s = _41313_expr->_field_kind->_method_strct();
		if (_41913_s->_field_decl->_method_is_implements(_206c94dac_BUILTIN_TRAIT_ERROR)) {
			_41313_expr->_field_cast_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_206c94dac_BUILTIN_TRAIT_ERROR));
			_1da2d3bdc_apply_cast_kind(_41313_expr);
		}
	}
	jule::Ref<_1da2d3bdc_Data> _42813_d = _1da2d3bdc_build_void_data();
	_42813_d->_field_model=jule::Any(jule::new_struct<_206e63542_BuiltinPanicCallExprModel>(new( std::nothrow ) _206e63542_BuiltinPanicCallExprModel(_41313_expr->_field_model)));
	return _42813_d;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_make(jule::Ref<_1da2d3bdc_Eval> _43328_e,jule::Ref<_2053703bd_FnCallExpr> _43342_fc,jule::Ref<_1da2d3bdc_Data> _43363_d) {
	if (_43342_fc->_field_generics.len() > 0LL) {
		_43328_e->_method_push_err(_43342_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_43342_fc->_field_args.len() < 2LL) {
		if (_43342_fc->_field_args.len() == 1LL) {
			_43328_e->_method_push_err(_43342_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		_43328_e->_method_push_err(_43342_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_43342_fc->_field_args.len() > 3LL) {
		_43328_e->_method_push_err(_43342_fc->_field_args[3LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _44913_t = _43328_e->_method_eval_expr_kind(_43342_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_44913_t)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if ((!(_44913_t->_field_decl)) || (!(jule::real(_44913_t->_field_kind->_method_slc())))) {
		_43328_e->_method_push_err(_43342_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	_43363_d->_field_kind=_44913_t->_field_kind;
	jule::Ref<_1da2d3bdc_Data> _46113_len = _43328_e->_field_s->_method_evalp(_43342_fc->_field_args[1LL],_43328_e->_field_lookup,_44913_t->_field_kind);
	if ((!(jule::real(_46113_len)))) {
		return _43363_d;
	}
	_43328_e->_method_check_integer_indexing_by_data(_46113_len,_43342_fc->_field_args[1LL]->_field_token);
	if (_43342_fc->_field_args.len() == 3LL) {
		jule::Ref<_1da2d3bdc_Data> _46917_cap = _43328_e->_field_s->_method_evalp(_43342_fc->_field_args[2LL],_43328_e->_field_lookup,_44913_t->_field_kind);
		if ((!(jule::real(_46917_cap)))) {
			return _43363_d;
		}
		_43328_e->_method_check_integer_indexing_by_data(_46917_cap,_43342_fc->_field_args[2LL]->_field_token);
		_43363_d->_field_model=jule::Any(jule::new_struct<_206e63542_BuiltinMakeCallExprModel>(new( std::nothrow ) _206e63542_BuiltinMakeCallExprModel(_44913_t->_field_kind,_46113_len->_field_model,_46917_cap->_field_model)));
	} else {
		_43363_d->_field_model=jule::Any(jule::new_struct<_206e63542_BuiltinMakeCallExprModel>(new( std::nothrow ) _206e63542_BuiltinMakeCallExprModel(_44913_t->_field_kind,_46113_len->_field_model,jule::Any())));
	}
	return _43363_d;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_append(jule::Ref<_1da2d3bdc_Eval> _49030_e,jule::Ref<_2053703bd_FnCallExpr> _49044_fc,jule::Ref<_1da2d3bdc_Data> _49065_d) {
	if (_49044_fc->_field_generics.len() > 0LL) {
		_49030_e->_method_push_err(_49044_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_49044_fc->_field_args.len() < 2LL) {
		if (_49044_fc->_field_args.len() == 1LL) {
			_49030_e->_method_push_err(_49044_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		_49030_e->_method_push_err(_49044_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Ref<_1da2d3bdc_Data> _50313_t = _49030_e->_method_eval_expr(_49044_fc->_field_args[0LL]);
	if ((!(jule::real(_50313_t)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Bool _50813_ref = false;
	if (jule::real(_50313_t->_field_kind->_method_ref())) {
		_50313_t->_field_kind=_50313_t->_field_kind->_method_ref()->_field_elem;
		_50813_ref=true;
	}
	if ((!(jule::real(_50313_t->_field_kind->_method_slc())))) {
		_49030_e->_method_push_err(_49044_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Ref<_2053ddd54_FnIns> _51913_f = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>({jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str())),_50313_t->_field_kind->_method_clone())),jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),true,true,jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str())),_50313_t->_field_kind->_method_slc()->_field_elem->_method_clone()))}),_50313_t->_field_kind->_method_clone(),jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_49065_d->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_51913_f));
	_49065_d->_field_model=jule::Any(jule::new_struct<_206e63542_CommonIdentExprModel>(new( std::nothrow ) _206e63542_CommonIdentExprModel(jule::Str("append", 6))));
	_49065_d=_206c94dac_builtin_caller_common_plain(_49030_e,_49044_fc,_49065_d);
	if (jule::real(_49065_d)) {
		jule::Ref<_206e63542_FnCallExprModel> _54317_model = _49065_d->_field_model.operator jule::Ref<_206e63542_FnCallExprModel>();
		if (_50813_ref) {
			_54317_model->_field_args[0LL]=jule::Any(jule::new_struct<_206e63542_ExplicitDerefExprModel>(new( std::nothrow ) _206e63542_ExplicitDerefExprModel(_50313_t->_field_model)));
		}
		_49065_d->_field_model=jule::Any(jule::new_struct<_206e63542_BuiltinAppendCallExprModel>(new( std::nothrow ) _206e63542_BuiltinAppendCallExprModel(_54317_model->_field_args[0LL],_54317_model->_field_args[1LL])));
	}
	return _49065_d;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_copy(jule::Ref<_1da2d3bdc_Eval> _55728_e,jule::Ref<_2053703bd_FnCallExpr> _55742_fc,jule::Ref<_1da2d3bdc_Data> _55763_d) {
	if (_55742_fc->_field_generics.len() > 0LL) {
		_55728_e->_method_push_err(_55742_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_55742_fc->_field_args.len() < 2LL) {
		if (_55742_fc->_field_args.len() == 1LL) {
			_55728_e->_method_push_err(_55742_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_1da2d3bdc_Data>();
		}
		_55728_e->_method_push_err(_55742_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_55742_fc->_field_args.len() > 2LL) {
		_55728_e->_method_push_err(_55742_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _57313_t = _55728_e->_method_eval_expr(_55742_fc->_field_args[0LL]);
	if ((!(jule::real(_57313_t)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Bool _57813_ref = false;
	if (jule::real(_57313_t->_field_kind->_method_ref())) {
		_57313_t->_field_kind=_57313_t->_field_kind->_method_ref()->_field_elem;
		_57813_ref=false;
	}
	if ((!(jule::real(_57313_t->_field_kind->_method_slc())))) {
		_55728_e->_method_push_err(_55742_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if ((!(_57313_t->_field_mutable))) {
		_55728_e->_method_push_err(_55742_fc->_field_args[0LL]->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_2053ddd54_FnIns> _59313_f = jule::new_struct<_2053ddd54_FnIns>(new( std::nothrow ) _2053ddd54_FnIns(jule::Ref<_2053cdc01_StructIns>(),jule::Ref<_2053ddd54_Fn>(),jule::Slice<jule::Ref<_1da411226_TypeKind>>(),jule::Slice<jule::Ref<_2053ddd54_ParamIns>>({jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param()),_57313_t->_field_kind->_method_clone())),jule::new_struct<_2053ddd54_ParamIns>(new( std::nothrow ) _2053ddd54_ParamIns(jule::new_struct<_2053ddd54_Param>(new( std::nothrow ) _2053ddd54_Param(_20542560a_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1da411226_TypeSymbol>(),jule::Str())),_57313_t->_field_kind->_method_clone()))}),_206c94dac_BUILTIN_FN_COPY->_field_result,jule::Ref<_206b0557a_Scope>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Ref<_206a20e79_ReferenceStack>(),jule::Fn<jule::Ref<_1da2d3bdc_Data>(jule::Ref<_1da2d3bdc_Eval>,jule::Ref<_2053703bd_FnCallExpr>,jule::Ref<_1da2d3bdc_Data>)>(_206c94dac_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_55763_d->_field_kind=jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_59313_f));
	_55763_d->_field_model=jule::Any(jule::new_struct<_206e63542_CommonIdentExprModel>(new( std::nothrow ) _206e63542_CommonIdentExprModel(jule::Str("copy", 4))));
	_55763_d=_206c94dac_builtin_caller_common_plain(_55728_e,_55742_fc,_55763_d);
	if (jule::real(_55763_d) && _57813_ref) {
		_55763_d->_field_model.operator jule::Ref<_206e63542_FnCallExprModel>()->_field_args[0LL]=jule::Any(jule::new_struct<_206e63542_ExplicitDerefExprModel>(new( std::nothrow ) _206e63542_ExplicitDerefExprModel(_57313_t->_field_model)));
	}
	return _55763_d;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_recover(jule::Ref<_1da2d3bdc_Eval> _62231_e,jule::Ref<_2053703bd_FnCallExpr> _62245_fc,jule::Ref<_1da2d3bdc_Data> ) {
	if (_62245_fc->_field_generics.len() > 0LL) {
		_62231_e->_method_push_err(_62245_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	
	if (_62245_fc->_field_args.len() < 1LL) {
		_62231_e->_method_push_err(_62245_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("handler", 7))}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_62245_fc->_field_args.len() > 1LL) {
		_62231_e->_method_push_err(_62245_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _63613_t = _62231_e->_method_eval_expr(_62245_fc->_field_args[0LL]);
	if ((!(jule::real(_63613_t)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if ((!(jule::real(_63613_t->_field_kind->_method_fnc())))) {
		_62231_e->_method_push_err(_62245_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Str _6469_tkind = _63613_t->_field_kind->_method_fnc()->_method_to_str();
	if (_6469_tkind != jule::Str("fn(Error)", 9)) {
		_62231_e->_method_push_err(_62245_fc->_field_args[0LL]->_field_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_6469_tkind),jule::Any(jule::Str("fn(Error)", 9))}));
	}
	jule::Ref<_1da2d3bdc_Data> _65113_d = _1da2d3bdc_build_void_data();
	_65113_d->_field_kind=_63613_t->_field_kind->_method_clone();
	_65113_d->_field_model=jule::Any(jule::new_struct<_206b0557a_Recover>(new( std::nothrow ) _206b0557a_Recover(jule::Ref<_2053ddd54_FnIns>(),_63613_t->_field_model,jule::Ref<_206b0557a_Scope>(),jule::Ref<_2053ddd54_FnIns>())));
	return _65113_d;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_clone(jule::Ref<_1da2d3bdc_Eval> _65929_e,jule::Ref<_2053703bd_FnCallExpr> _65943_fc,jule::Ref<_1da2d3bdc_Data> ) {
	if (_65943_fc->_field_generics.len() > 0LL) {
		_65929_e->_method_push_err(_65943_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_65943_fc->_field_args.len() < 1LL) {
		_65929_e->_method_push_err(_65943_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_65943_fc->_field_args.len() > 1LL) {
		_65929_e->_method_push_err(_65943_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _67213_d = _65929_e->_method_eval_expr_kind(_65943_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_67213_d)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	jule::Fn<void(jule::Ref<_1da411226_TypeKind>)> _6779_check_kind = jule::Fn<void(jule::Ref<_1da411226_TypeKind>)>([=](jule::Ref<_1da411226_TypeKind> _67729_k) mutable -> void {
		{
			if (!((jule::real(_67729_k->_method_slc())))) { goto _case_end_4392006432; }
			_case_begin_4392006432:;
			{
				if ((!(_67729_k->_method_slc()->_field_elem->_method_supports_cloning()))) {
					_65929_e->_method_push_err(_65943_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4392001632;
			_case_end_4392006432:;
			if (!((jule::real(_67729_k->_method_map())))) { goto _case_end_4392002656; }
			_case_begin_4392002656:;
			{
				jule::Ref<_1da411226_Map> _68517_m = _67729_k->_method_map();
				if ((!(_68517_m->_field_key->_method_supports_cloning())) || (!(_68517_m->_field_val->_method_supports_cloning()))) {
					_65929_e->_method_push_err(_65943_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4392001632;
			_case_end_4392002656:;
			if (!((jule::real(_67729_k->_method_arr())))) { goto _case_end_4392002128; }
			_case_begin_4392002128:;
			{
				if ((!(_67729_k->_method_arr()->_field_elem->_method_supports_cloning()))) {
					_65929_e->_method_push_err(_65943_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4392001632;
			_case_end_4392002128:;
			if (!((jule::real(_67729_k->_method_ref())))) { goto _case_end_4392002240; }
			_case_begin_4392002240:;
			{
				if ((!(_67729_k->_method_ref()->_field_elem->_method_supports_cloning()))) {
					_65929_e->_method_push_err(_65943_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4392001632;
			_case_end_4392002240:;
			if (!((jule::real(_67729_k->_method_strct())))) { goto _case_end_4392002352; }
			_case_begin_4392002352:;
			{
				jule::Ref<_2053cdc01_StructIns> _70117_s = _67213_d->_field_kind->_method_strct();
				if ((!(_70117_s->_field_mutable))) {
					_65929_e->_method_push_err(_65943_fc->_field_args[0LL]->_field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any(_67213_d->_field_kind->_method_to_str())}));
				}
				if (((!(jule::real(_70117_s->_field_decl))) || _70117_s->_field_decl->_field_cpp_linked) || (!(_70117_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					_65929_e->_method_push_err(_65943_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_67213_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				}
			}
			goto _match_end_4392001632;
			_case_end_4392002352:;
			_case_begin_4392001824:;
			{
				_65929_e->_method_push_err(_65943_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_67213_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
			}
			goto _match_end_4392001632;
			_case_end_4392001824:;
			_match_end_4392001632:;
		}
	});
	{
		if (!(((!(_67213_d->_field_lvalue))))) { goto _case_end_4391990480; }
		_case_begin_4391990480:;
		{
			_65929_e->_method_push_err(_65943_fc->_field_args[0LL]->_field_token,jule::Str("non-lvalue expressions cannot be clone", 38),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4392043552;
		_case_end_4391990480:;
		if (!(((!(_67213_d->_field_kind->_method_supports_cloning()))))) { goto _case_end_4392031216; }
		_case_begin_4392031216:;
		{
			_6779_check_kind(_67213_d->_field_kind);
		}
		goto _match_end_4392043552;
		_case_end_4392031216:;
		_match_end_4392043552:;
	}
	_67213_d->_field_mutable=true;
	_67213_d->_field_model=jule::Any(jule::new_struct<_206e63542_BuiltinCloneCallExprModel>(new( std::nothrow ) _206e63542_BuiltinCloneCallExprModel(_67213_d->_field_model)));
	return _67213_d;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_std_mem_size_of(jule::Ref<_1da2d3bdc_Eval> _72739_e,jule::Ref<_2053703bd_FnCallExpr> _72753_fc,jule::Ref<_1da2d3bdc_Data> ) {
	if (_72753_fc->_field_generics.len() > 0LL) {
		_72739_e->_method_push_err(_72753_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _73113_result = jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
	if (_72753_fc->_field_args.len() < 1LL) {
		_72739_e->_method_push_err(_72753_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _73113_result;
	}
	if (_72753_fc->_field_args.len() > 1LL) {
		_72739_e->_method_push_err(_72753_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _74313_d = _72739_e->_method_eval_expr_kind(_72753_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_74313_d)))) {
		return _73113_result;
	}
	_73113_result->_field_model=jule::Any(jule::new_struct<_206e63542_SizeofExprModel>(new( std::nothrow ) _206e63542_SizeofExprModel(_74313_d->_field_model)));
	return _73113_result;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_std_mem_align_of(jule::Ref<_1da2d3bdc_Eval> _75240_e,jule::Ref<_2053703bd_FnCallExpr> _75254_fc,jule::Ref<_1da2d3bdc_Data> ) {
	if (_75254_fc->_field_generics.len() > 0LL) {
		_75240_e->_method_push_err(_75254_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _75613_result = jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
	if (_75254_fc->_field_args.len() < 1LL) {
		_75240_e->_method_push_err(_75254_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _75613_result;
	}
	if (_75254_fc->_field_args.len() > 1LL) {
		_75240_e->_method_push_err(_75254_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _76813_d = _75240_e->_method_eval_expr_kind(_75254_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_76813_d)))) {
		return _75613_result;
	}
	_75613_result->_field_model=jule::Any(jule::new_struct<_206e63542_AlignofExprModel>(new( std::nothrow ) _206e63542_AlignofExprModel(_76813_d->_field_model)));
	return _75613_result;
}



inline jule::Ref<_1da2d3bdc_Data> _206c94dac_builtin_caller_std_jule_integrated_to_str(jule::Ref<_1da2d3bdc_Eval> _77750_e,jule::Ref<_2053703bd_FnCallExpr> _77764_fc,jule::Ref<_1da2d3bdc_Data> ) {
	if (_77764_fc->_field_generics.len() > 0LL) {
		_77750_e->_method_push_err(_77764_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_77764_fc->_field_args.len() < 1LL) {
		_77750_e->_method_push_err(_77764_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	if (_77764_fc->_field_args.len() > 1LL) {
		_77750_e->_method_push_err(_77764_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1da2d3bdc_Data> _79013_d = _77750_e->_method_eval_expr_kind(_77764_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_79013_d)))) {
		return jule::new_ref<_1da2d3bdc_Data>();
	}
	return jule::new_struct<_1da2d3bdc_Data>(new( std::nothrow ) _1da2d3bdc_Data(jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1da411226_build_prim_type(jule::Str("str", 3)))),jule::Ref<_1da411226_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_206e63542_IntegratedToStrExprModel>(new( std::nothrow ) _206e63542_IntegratedToStrExprModel(_79013_d->_field_model))),jule::Bool(),jule::Ref<_1a89ca987_Const>()));
}



inline std::tuple<jule::Bool,jule::Bool> _204b7a5ad_check_os(jule::Str _1013_arg) {
	jule::Bool _1025_ok = jule::Bool();
	jule::Bool _1035_exist = jule::Bool();
	_1025_ok=false;
	_1035_exist=true;
	{
		auto _match_expr{ _1013_arg };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4399926944; }
		_case_begin_4399926944:;
		{
			_1025_ok=_2037d86a1_is_windows(_204e61a09_OS);
		}
		goto _match_end_4399925008;
		_case_end_4399926944:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4399926080; }
		_case_begin_4399926080:;
		{
			_1025_ok=_2037d86a1_is_darwin(_204e61a09_OS);
		}
		goto _match_end_4399925008;
		_case_end_4399926080:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4399926192; }
		_case_begin_4399926192:;
		{
			_1025_ok=_2037d86a1_is_linux(_204e61a09_OS);
		}
		goto _match_end_4399925008;
		_case_end_4399926192:;
		if (!((jule::Str("unix", 4)) == _match_expr)) { goto _case_end_4399926304; }
		_case_begin_4399926304:;
		{
			_1025_ok=_2037d86a1_is_unix(_204e61a09_OS);
		}
		goto _match_end_4399925008;
		_case_end_4399926304:;
		_case_begin_4399924400:;
		{
			_1025_ok=true;
			_1035_exist=false;
		}
		goto _match_end_4399925008;
		_case_end_4399924400:;
		_match_end_4399925008:;
	}
	return std::make_tuple(_1025_ok,_1035_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _204b7a5ad_check_arch(jule::Str _2715_arg) {
	jule::Bool _2727_ok = jule::Bool();
	jule::Bool _2737_exist = jule::Bool();
	_2727_ok=false;
	_2737_exist=true;
	{
		auto _match_expr{ _2715_arg };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4399934240; }
		_case_begin_4399934240:;
		{
			_2727_ok=_2037d86a1_is_i386(_204e61a09_ARCH);
		}
		goto _match_end_4399932304;
		_case_end_4399934240:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4399933376; }
		_case_begin_4399933376:;
		{
			_2727_ok=_2037d86a1_is_amd64(_204e61a09_ARCH);
		}
		goto _match_end_4399932304;
		_case_end_4399933376:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4399933488; }
		_case_begin_4399933488:;
		{
			_2727_ok=_2037d86a1_is_arm64(_204e61a09_ARCH);
		}
		goto _match_end_4399932304;
		_case_end_4399933488:;
		if (!((jule::Str("64bit", 5)) == _match_expr)) { goto _case_end_4399933600; }
		_case_begin_4399933600:;
		{
			_2727_ok=_2037d86a1_is_64bit(_204e61a09_ARCH);
		}
		goto _match_end_4399932304;
		_case_end_4399933600:;
		if (!((jule::Str("32bit", 5)) == _match_expr)) { goto _case_end_4399932800; }
		_case_begin_4399932800:;
		{
			_2727_ok=_2037d86a1_is_32bit(_204e61a09_ARCH);
		}
		goto _match_end_4399932304;
		_case_end_4399932800:;
		_case_begin_4399931696:;
		{
			_2727_ok=true;
			_2737_exist=false;
		}
		goto _match_end_4399932304;
		_case_end_4399931696:;
		_match_end_4399932304:;
	}
	return std::make_tuple(_2727_ok,_2737_exist);
}



inline jule::Bool _204b7a5ad_is_pass_file_annotation(jule::Str _4632_p) {
	_4632_p=_203896264_base(_4632_p);
	jule::I64 _489_n = _4632_p.len();
	_4632_p=_4632_p.slice(0LL,static_cast<jule::Int>(_489_n - _203896264_ext(_4632_p).len()));
	jule::Str _5413_a1 = jule::Str("", 0);
	jule::Str _5713_a2 = jule::Str("", 0);
	jule::Int _6013_i = _4632_p.rfind(jule::Str("_", 1));
	if (_6013_i == -1LL) {
		jule::Bool _6318_ok;
		jule::Bool _6326_exist;
		std::tie(_6318_ok,_6326_exist) = _204b7a5ad_check_os(_4632_p);
		if (_6326_exist) {
			return _6318_ok;
		}
		std::tie(_6318_ok,_6326_exist) = _204b7a5ad_check_arch(_4632_p);
		return (!(_6326_exist)) || _6318_ok;
	}
	if ((_6013_i + 1LL) >= _489_n) {
		return true;
	}
	_5413_a1=_4632_p.slice(static_cast<jule::Int>(_6013_i + 1LL));
	_4632_p=_4632_p.slice(0LL,static_cast<jule::Int>(_6013_i));
	_6013_i=static_cast<jule::Int>(_4632_p.rfind(jule::Str("_", 1)));
	if (_6013_i != -1LL) {
		_5713_a2=_4632_p.slice(static_cast<jule::Int>(_6013_i + 1LL));
	}
	if (_5713_a2 == jule::Str("", 0)) {
		jule::Bool _8418_ok;
		jule::Bool _8426_exist;
		std::tie(_8418_ok,_8426_exist) = _204b7a5ad_check_os(_5413_a1);
		if (_8426_exist) {
			return _8418_ok;
		}
		std::tie(_8418_ok,_8426_exist) = _204b7a5ad_check_arch(_5413_a1);
		return (!(_8426_exist)) || _8418_ok;
	}
	jule::Bool _9214_ok;
	jule::Bool _9222_exist;
	std::tie(_9214_ok,_9222_exist) = _204b7a5ad_check_arch(_5413_a1);
	if (_9222_exist) {
		if ((!(_9214_ok))) {
			return false;
		}
		jule::Bool _9714_ok;
		jule::Bool _9718_exist;
		std::tie(_9714_ok,_9718_exist) = _204b7a5ad_check_os(_5713_a2);
		return (!(_9718_exist)) || _9714_ok;
	}
	std::tie(_9214_ok,_9222_exist) = _204b7a5ad_check_os(_5413_a1);
	return (!(_9222_exist)) || _9214_ok;
}



inline jule::Bool _204ae7b9b_eval_directive_ident(jule::Str _625_ident) {
	if (_625_ident == jule::Str("", 0)) {
		return false;
	}
	{
		auto _range_expr = _204b8e12c_FLAGS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _204ae7b9b_flag = *_range_begin;
			_iter_begin_4399966160:;
			{
				if (_204ae7b9b_flag == _625_ident) {
					return true;
				}
			}
			_iter_next_4399966160:;
			++_range_begin;
			if (_range_begin != _range_end) { _204ae7b9b_flag = *_range_begin; goto _iter_begin_4399966160; }
			_iter_end_4399966160:;
		}
	}
	return false;
}



inline jule::Bool _204ae7b9b_eval_directive_part(jule::Str _2228_part) {
	jule::Bool _239_logical_not = _2228_part[0LL] == '!';
	if (_239_logical_not) {
		_2228_part=_2228_part.slice(1LL);
	}
	jule::Bool _2813_result = _204ae7b9b_eval_directive_ident(_2228_part);
	if (_239_logical_not) {
		_2813_result=(!(_2813_result));
	}
	return _2813_result;
}



inline jule::Slice<jule::Str> _204ae7b9b_split_operans(jule::Str _3718_op,jule::Str _3727_expr) {
	jule::Slice<jule::Str> _3813_parts = jule::Slice<jule::Str>::alloc(0LL,10LL);
	jule::Int _4013_range_n = 0LL;
	jule::Int _4113_i = 0LL;
	jule::Int _4213_last = 0LL;
	_iter_begin_4399978032:;
	if (!(_4113_i < (_3727_expr.len() - 1LL))) { goto _iter_end_4399978032; }
	{
		jule::U8 _4413_b = _3727_expr[static_cast<jule::Int>(_4113_i)];
		if (_4413_b == '(') {
			(_4013_range_n)++;
			goto _iter_next_4399978032;
		} else if (_4413_b == ')') {
			(_4013_range_n)--;
		}
		if (_4013_range_n > 0LL) {
			goto _iter_next_4399978032;
		}
		{
			auto _match_expr{ _3718_op };
			if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4399984288; }
			_case_begin_4399984288:;
			{
				if ((_4413_b == '|') && (_3727_expr[static_cast<jule::Int>(_4113_i + 1LL)] == '|')) {
					_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last),static_cast<jule::Int>(_4113_i))}));
					_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
				}
			}
			goto _match_end_4399983680;
			_case_end_4399984288:;
			if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4399981904; }
			_case_begin_4399981904:;
			{
				if ((_4413_b == '&') && (_3727_expr[static_cast<jule::Int>(_4113_i + 1LL)] == '&')) {
					_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last),static_cast<jule::Int>(_4113_i))}));
					_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
				}
			}
			goto _match_end_4399983680;
			_case_end_4399981904:;
			_match_end_4399983680:;
		}
	}
	_iter_next_4399978032:;
	(_4113_i)++;
	goto _iter_begin_4399978032;
	_iter_end_4399978032:;
	if (_4213_last < _3727_expr.len()) {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last))}));
	} else {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({jule::Str("", 0)}));
	}
	return _3813_parts;
}



inline jule::Bool _204ae7b9b_eval_directive_expr(jule::Str _8724_expr) {
	if (_8724_expr == jule::Str("", 0)) {
		return false;
	}
	jule::Bool _9213_result = false;
	jule::Slice<jule::Str> _949_logical_or_parts = _204ae7b9b_split_operans(jule::Str("||", 2),_8724_expr);
	{
		auto _range_expr = _949_logical_or_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _204ae7b9b_part = *_range_begin;
			_iter_begin_4400002096:;
			{
				if (_204ae7b9b_part == jule::Str("", 0)) {
					return false;
				}
				jule::Bool _10017_and = true;
				jule::Slice<jule::Str> _10113_logical_and_parts = _204ae7b9b_split_operans(jule::Str("&&", 2),_204ae7b9b_part);
				{
					auto _range_expr = _10113_logical_and_parts;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Str _204ae7b9b_and_part = *_range_begin;
						_iter_begin_4400006656:;
						{
							if (_204ae7b9b_and_part.find(jule::Str("(", 1)) != -1LL) {
								if (_204ae7b9b_and_part[static_cast<jule::Int>(_204ae7b9b_and_part.len() - 1LL)] != ')') {
									return false;
								}
								jule::Str _10721__expr = _204ae7b9b_and_part.slice(1LL,static_cast<jule::Int>(_204ae7b9b_and_part.len() - 1LL));
								_10017_and=_10017_and && _204ae7b9b_eval_directive_expr(_10721__expr);
							} else {
								_10017_and=_10017_and && _204ae7b9b_eval_directive_part(_204ae7b9b_and_part);
							}
						}
						_iter_next_4400006656:;
						++_range_begin;
						if (_range_begin != _range_end) { _204ae7b9b_and_part = *_range_begin; goto _iter_begin_4400006656; }
						_iter_end_4400006656:;
					}
				}
				_9213_result=_9213_result || _10017_and;
			}
			_iter_next_4400002096:;
			++_range_begin;
			if (_range_begin != _range_end) { _204ae7b9b_part = *_range_begin; goto _iter_begin_4400002096; }
			_iter_end_4400002096:;
		}
	}
	return _9213_result;
}



inline void _204b8e12c_set_os_flags(void) {
	{
		auto _match_expr{ _204e61a09_OS };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4400015504; }
		_case_begin_4400015504:;
		{
			_204b8e12c_FLAGS=jule::append(_204b8e12c_FLAGS,jule::Slice<jule::Str>({jule::Str("windows", 7)}));
		}
		goto _match_end_4400001792;
		_case_end_4400015504:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4400017120; }
		_case_begin_4400017120:;
		{
			_204b8e12c_FLAGS=jule::append(_204b8e12c_FLAGS,jule::Slice<jule::Str>({jule::Str("linux", 5)}));
		}
		goto _match_end_4400001792;
		_case_end_4400017120:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4400002720; }
		_case_begin_4400002720:;
		{
			_204b8e12c_FLAGS=jule::append(_204b8e12c_FLAGS,jule::Slice<jule::Str>({jule::Str("darwin", 6)}));
		}
		goto _match_end_4400001792;
		_case_end_4400002720:;
		_match_end_4400001792:;
	}
	if (_2037d86a1_is_unix(_204e61a09_OS)) {
		_204b8e12c_FLAGS=jule::append(_204b8e12c_FLAGS,jule::Slice<jule::Str>({jule::Str("unix", 4)}));
	}
}



inline void _204b8e12c_set_arch_flags(void) {
	{
		auto _match_expr{ _204e61a09_ARCH };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4400021200; }
		_case_begin_4400021200:;
		{
			_204b8e12c_FLAGS=jule::append(_204b8e12c_FLAGS,jule::Slice<jule::Str>({jule::Str("i386", 4)}));
		}
		goto _match_end_4400021696;
		_case_end_4400021200:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4400016128; }
		_case_begin_4400016128:;
		{
			_204b8e12c_FLAGS=jule::append(_204b8e12c_FLAGS,jule::Slice<jule::Str>({jule::Str("amd64", 5)}));
		}
		goto _match_end_4400021696;
		_case_end_4400016128:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4400007584; }
		_case_begin_4400007584:;
		{
			_204b8e12c_FLAGS=jule::append(_204b8e12c_FLAGS,jule::Slice<jule::Str>({jule::Str("arm64", 5)}));
		}
		goto _match_end_4400021696;
		_case_end_4400007584:;
		_match_end_4400021696:;
	}
	if (_2037d86a1_is_64bit(_204e61a09_ARCH)) {
		_204b8e12c_FLAGS=jule::append(_204b8e12c_FLAGS,jule::Slice<jule::Str>({jule::Str("64bit", 5)}));
	}
	if (_2037d86a1_is_32bit(_204e61a09_ARCH)) {
		_204b8e12c_FLAGS=jule::append(_204b8e12c_FLAGS,jule::Slice<jule::Str>({jule::Str("32bit", 5)}));
	}
}



inline void _204b8e12c_init_flags(void) {
	_204b8e12c_set_os_flags();
	_204b8e12c_set_arch_flags();
}



inline void _204dc9ec2_exit_err(jule::Str _2213_msg) {
	
	jule::outln(_2213_msg);
	_2039051d5_exit(1LL);
}



inline jule::Slice<jule::U8> _204dc9ec2_read_buff(jule::Str _3014_path) {
	jule::Slice<jule::U8> _3114_buffer;
	jule::Int _3122_err;
	std::tie(_3114_buffer,_3122_err) = _20522c3ce_read_file(_3014_path);
	if (_3122_err != 0LLU) {
		_204dc9ec2_exit_err(jule::Str("error: file cannot read", 23));
	}
	return _3114_buffer;
}



inline _20377124e_Log _204dc9ec2_flat_compiler_err(jule::Str _4022_text) {
	return _20377124e_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_4022_text,jule::Str(),jule::Str());
}



inline std::tuple<jule::Slice<jule::Ref<_20522b4aa_DirEntry>>,jule::Str> _204dc9ec2_read_package_dirents(jule::Str _4825_path) {
	jule::Str _4851_err_msg = jule::Str();
	jule::Slice<jule::Ref<_20522b4aa_DirEntry>> _4914_dirents;
	jule::Int _4923_err;
	std::tie(_4914_dirents,_4923_err) = _20539ca9e_read_dir(_4825_path);
	if (_4923_err != 0LLU) {
		_4851_err_msg = jule::Str("connot read package directory: ", 31) + _4825_path;
		return std::make_tuple(nullptr,_4851_err_msg);
	}
	jule::Slice<jule::Ref<_20522b4aa_DirEntry>> _5413_passed_dirents = nullptr;
	{
		auto _range_expr = _4914_dirents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_20522b4aa_DirEntry> _204dc9ec2_dirent = *_range_begin;
			_iter_begin_4400042304:;
			{
				jule::Str _5613_name = _204dc9ec2_dirent->_field_name;
				if (_204dc9ec2_dirent->_field_stat->_method_is_dir() || (!(_5613_name.has_suffix(jule::Str(".jule", 5))))) {
					goto _iter_next_4400042304;
				}
				_5413_passed_dirents=jule::append(_5413_passed_dirents,jule::Slice<jule::Ref<_20522b4aa_DirEntry>>({_204dc9ec2_dirent}));
			}
			_iter_next_4400042304:;
			++_range_begin;
			if (_range_begin != _range_end) { _204dc9ec2_dirent = *_range_begin; goto _iter_begin_4400042304; }
			_iter_end_4400042304:;
		}
	}
	_4851_err_msg = jule::Str("", 0);
	return std::make_tuple(_5413_passed_dirents,_4851_err_msg);
}



inline jule::Str _204dc9ec2_concat_all_parts(jule::Slice<jule::Str> _7021_parts) {
	jule::Str _7113_s = jule::Str("", 0);
	{
		auto _range_expr = _7021_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _204dc9ec2_part = *_range_begin;
			_iter_begin_4900423808:;
			{
				_7113_s+=_204dc9ec2_part;
			}
			_iter_next_4900423808:;
			++_range_begin;
			if (_range_begin != _range_end) { _204dc9ec2_part = *_range_begin; goto _iter_begin_4900423808; }
			_iter_end_4900423808:;
		}
	}
	return _7113_s;
}



inline jule::Bool _204dc9ec2_is_pass_build_directives(jule::Ref<_20521102d_Ast>& _7934_file) {
	{
		auto _range_expr = _7934_file->_field_top_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053703bd_Directive> _204dc9ec2_td = *_range_begin;
			_iter_begin_4900425296:;
			{
				if (_204dc9ec2_td->_field_tag != jule::Str("build", 5)) {
					goto _iter_next_4900425296;
				}
				jule::Str _8513_expr = _204dc9ec2_concat_all_parts(_204dc9ec2_td->_field_args);
				jule::Bool _8613_result = _204ae7b9b_eval_directive_expr(_8513_expr);
				if ((!(_8613_result))) {
					return false;
				}
			}
			_iter_next_4900425296:;
			++_range_begin;
			if (_range_begin != _range_end) { _204dc9ec2_td = *_range_begin; goto _iter_begin_4900425296; }
			_iter_end_4900425296:;
		}
	}
	return true;
}



inline void _204a33ac6_push_passes(jule::Ref<_206e66325_Package>& _11321_p,jule::Slice<jule::Str>& _11345_passes) {
	{
		auto _range_expr = _11321_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _204a33ac6_f = *_range_begin;
			_iter_begin_4400083248:;
			{
				_julec_label_push:;
				{
					auto _range_expr = _204a33ac6_f->_field_passes;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						_206a20e79_Pass _204a33ac6_pass = *_range_begin;
						_iter_begin_4400085536:;
						{
							if (_204a33ac6_pass._field_text == jule::Str("", 0)) {
								goto _iter_next_4400085536;
							}
							{
								auto _range_expr = _11345_passes;
								if (_range_expr.begin() != _range_expr.end()) {
									auto _range_begin = _range_expr.begin();
									const auto _range_end = _range_expr.end();
									jule::Str _204a33ac6_cpass = *_range_begin;
									_iter_begin_4400088288:;
									{
										if (_204a33ac6_cpass == _204a33ac6_pass._field_text) {
											goto _iter_next_4400085536;
										}
									}
									_iter_next_4400088288:;
									++_range_begin;
									if (_range_begin != _range_end) { _204a33ac6_cpass = *_range_begin; goto _iter_begin_4400088288; }
									_iter_end_4400088288:;
								}
							}
							_11345_passes=jule::append(_11345_passes,jule::Slice<jule::Str>({_204a33ac6_pass._field_text}));
						}
						_iter_next_4400085536:;
						++_range_begin;
						if (_range_begin != _range_end) { _204a33ac6_pass = *_range_begin; goto _iter_begin_4400085536; }
						_iter_end_4400085536:;
					}
				}
			}
			_iter_next_4400083248:;
			++_range_begin;
			if (_range_begin != _range_end) { _204a33ac6_f = *_range_begin; goto _iter_begin_4400083248; }
			_iter_end_4400083248:;
		}
	}
}



inline jule::Slice<jule::Str> _204a33ac6_get_all_unique_passes(jule::Ref<_206e66325_Package>& _13031_pkg,jule::Slice<jule::Ref<_206e66325_ImportInfo>> _13056_uses) {
	jule::Slice<jule::Str> _13113_passes = nullptr;
	_204a33ac6_push_passes(_13031_pkg,_13113_passes);
	{
		auto _range_expr = _13056_uses;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _204a33ac6_u = *_range_begin;
			_iter_begin_4400094336:;
			{
				if ((!(_204a33ac6_u->_field_cpp_linked))) {
					_204a33ac6_push_passes(_204a33ac6_u->_field_package,_13113_passes);
				}
			}
			_iter_next_4400094336:;
			++_range_begin;
			if (_range_begin != _range_end) { _204a33ac6_u = *_range_begin; goto _iter_begin_4400094336; }
			_iter_end_4400094336:;
		}
	}
	return _13113_passes;
}



inline jule::Bool _20382b5b2_is_exist_0(jule::Slice<jule::Any> _3016_arr,jule::Ref<_2053ddd54_FnIns> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _20382b5b2_ref = *_range_begin;
			_iter_begin_4400256800:;
			{
				{
					auto _match_expr{ _20382b5b2_ref };
					if (!(_match_expr.type_is<jule::Ref<_2053ddd54_FnIns>>())) { goto _case_end_4400258656; }
					_case_begin_4400258656:;
					{
						if ((_20382b5b2_ref.operator jule::Ref<_2053ddd54_FnIns>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4400258224;
					_case_end_4400258656:;
					_match_end_4400258224:;
				}
			}
			_iter_next_4400256800:;
			++_range_begin;
			if (_range_begin != _range_end) { _20382b5b2_ref = *_range_begin; goto _iter_begin_4400256800; }
			_iter_end_4400256800:;
		}
	}
	return false;
}

inline jule::Bool _20382b5b2_is_exist_1(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1d9e22661_Var> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _20382b5b2_ref = *_range_begin;
			_iter_begin_4400264992:;
			{
				{
					auto _match_expr{ _20382b5b2_ref };
					if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4400266848; }
					_case_begin_4400266848:;
					{
						if ((_20382b5b2_ref.operator jule::Ref<_1d9e22661_Var>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4400266416;
					_case_end_4400266848:;
					_match_end_4400266416:;
				}
			}
			_iter_next_4400264992:;
			++_range_begin;
			if (_range_begin != _range_end) { _20382b5b2_ref = *_range_begin; goto _iter_begin_4400264992; }
			_iter_end_4400264992:;
		}
	}
	return false;
}

inline jule::Bool _20382b5b2_is_exist_2(jule::Slice<jule::Any> _3016_arr,jule::Ref<_2053cdc01_StructIns> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _20382b5b2_ref = *_range_begin;
			_iter_begin_4400273248:;
			{
				{
					auto _match_expr{ _20382b5b2_ref };
					if (!(_match_expr.type_is<jule::Ref<_2053cdc01_StructIns>>())) { goto _case_end_4400275104; }
					_case_begin_4400275104:;
					{
						if ((_20382b5b2_ref.operator jule::Ref<_2053cdc01_StructIns>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4400274672;
					_case_end_4400275104:;
					_match_end_4400274672:;
				}
			}
			_iter_next_4400273248:;
			++_range_begin;
			if (_range_begin != _range_end) { _20382b5b2_ref = *_range_begin; goto _iter_begin_4400273248; }
			_iter_end_4400273248:;
		}
	}
	return false;
}

inline jule::Bool _20382b5b2_is_exist_3(jule::Slice<jule::Any> _3016_arr,jule::Ref<_2065895c5_Trait> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _20382b5b2_ref = *_range_begin;
			_iter_begin_4400281440:;
			{
				{
					auto _match_expr{ _20382b5b2_ref };
					if (!(_match_expr.type_is<jule::Ref<_2065895c5_Trait>>())) { goto _case_end_4400283296; }
					_case_begin_4400283296:;
					{
						if ((_20382b5b2_ref.operator jule::Ref<_2065895c5_Trait>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4400282864;
					_case_end_4400283296:;
					_match_end_4400282864:;
				}
			}
			_iter_next_4400281440:;
			++_range_begin;
			if (_range_begin != _range_end) { _20382b5b2_ref = *_range_begin; goto _iter_begin_4400281440; }
			_iter_end_4400281440:;
		}
	}
	return false;
}



inline jule::Bool _20382b5b2_is_exist_ref(jule::Slice<jule::Any> _4321_refs,jule::Any _4334_ref) {
	{
		auto _match_expr{ _4334_ref };
		if (!(_match_expr.type_is<jule::Ref<_2053ddd54_FnIns>>())) { goto _case_end_4400248672; }
		_case_begin_4400248672:;
		{
			return _20382b5b2_is_exist_0(_4321_refs,_4334_ref.operator jule::Ref<_2053ddd54_FnIns>());
		}
		goto _match_end_4400247888;
		_case_end_4400248672:;
		if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4400248784; }
		_case_begin_4400248784:;
		{
			return _20382b5b2_is_exist_1(_4321_refs,_4334_ref.operator jule::Ref<_1d9e22661_Var>());
		}
		goto _match_end_4400247888;
		_case_end_4400248784:;
		if (!(_match_expr.type_is<jule::Ref<_2053cdc01_StructIns>>())) { goto _case_end_4400248896; }
		_case_begin_4400248896:;
		{
			return _20382b5b2_is_exist_2(_4321_refs,_4334_ref.operator jule::Ref<_2053cdc01_StructIns>());
		}
		goto _match_end_4400247888;
		_case_end_4400248896:;
		if (!(_match_expr.type_is<jule::Ref<_2065895c5_Trait>>())) { goto _case_end_4400249968; }
		_case_begin_4400249968:;
		{
			return _20382b5b2_is_exist_3(_4321_refs,_4334_ref.operator jule::Ref<_2065895c5_Trait>());
		}
		goto _match_end_4400247888;
		_case_end_4400249968:;
		_case_begin_4400248144:;
		{
			return false;
		}
		goto _match_end_4400247888;
		_case_end_4400248144:;
		_match_end_4400247888:;
	}
}



inline jule::Bool _20382b5b2_is_dead(jule::Any _5416_ref) {
	jule::Bool _5428_dead = jule::Bool();
	if (_20382b5b2_is_exist_ref(_20382b5b2_deads,_5416_ref)) {
		_5428_dead = true;
		return _5428_dead;
	}
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ref<_2053ddd54_FnIns>>())) { goto _case_end_4400288496; }
		_case_begin_4400288496:;
		{
			if (_5416_ref.operator jule::Ref<_2053ddd54_FnIns>()->_field_decl->_method_is_init()) {
				goto _match_end_4400283968;
			}
			goto _case_begin_4400249328;
		}
		goto _match_end_4400283968;
		_case_end_4400288496:;
		_case_begin_4400249328:;
		{
			if (_20382b5b2_is_exist_ref(jule::Slice<jule::Any>({_20382b5b2_current,_20382b5b2_main_current}),_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
			if (_20382b5b2_is_exist_ref(_20382b5b2_checking,_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
		}
		goto _match_end_4400283968;
		_case_end_4400249328:;
		_match_end_4400283968:;
	}
	jule::Any _7513_old = _20382b5b2_current;
	_20382b5b2_current=_5416_ref;
	jule::I64 _779_len = _20382b5b2_checking.len();
	_20382b5b2_checking=jule::append(_20382b5b2_checking,jule::Slice<jule::Any>({_5416_ref}));
	__JULE_DEFER({
		_20382b5b2_current=_7513_old;
		_20382b5b2_drop_ref(_20382b5b2_checking,_779_len);
	});
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ref<_2053ddd54_FnIns>>())) { goto _case_end_4400295120; }
		_case_begin_4400295120:;
		{
			_5428_dead = _20382b5b2_is_fn_dead(_5416_ref.operator jule::Ref<_2053ddd54_FnIns>());
			return _5428_dead;
		}
		goto _match_end_4400293472;
		_case_end_4400295120:;
		if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4400295232; }
		_case_begin_4400295232:;
		{
			_5428_dead = _20382b5b2_is_var_dead(_5416_ref.operator jule::Ref<_1d9e22661_Var>());
			return _5428_dead;
		}
		goto _match_end_4400293472;
		_case_end_4400295232:;
		if (!(_match_expr.type_is<jule::Ref<_2053cdc01_StructIns>>())) { goto _case_end_4400295344; }
		_case_begin_4400295344:;
		{
			_5428_dead = _20382b5b2_is_struct_dead(_5416_ref.operator jule::Ref<_2053cdc01_StructIns>());
			return _5428_dead;
		}
		goto _match_end_4400293472;
		_case_end_4400295344:;
		if (!(_match_expr.type_is<jule::Ref<_2065895c5_Trait>>())) { goto _case_end_4400292752; }
		_case_begin_4400292752:;
		{
			_5428_dead = _20382b5b2_is_trait_dead(_5416_ref.operator jule::Ref<_2065895c5_Trait>());
			return _5428_dead;
		}
		goto _match_end_4400293472;
		_case_end_4400292752:;
		_case_begin_4400292352:;
		{
			_5428_dead = false;
			return _5428_dead;
		}
		goto _match_end_4400293472;
		_case_end_4400292352:;
		_match_end_4400293472:;
	}
}



inline void _20382b5b2_drop_ref(jule::Slice<jule::Any>& _10618_refs,jule::Int _10631_pos) {
	_10618_refs=_10618_refs.slice(0LL,static_cast<jule::Int>(_10631_pos));
}



inline jule::Bool _20382b5b2_is_all_references_are_dead_0(jule::Ref<_206a20e79_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	_iter_begin_4400315568:;
	if (!(_11513_i < _11438_references->_method_len())) { goto _iter_end_4400315568; }
	{
		jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
		{
			auto _match_expr{ _20382b5b2_current };
			if (!(_match_expr.type_is<jule::Ref<_2053ddd54_FnIns>>())) { goto _case_end_4400318080; }
			_case_begin_4400318080:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_2053ddd54_FnIns>>())) { goto _case_end_4400320400; }
					_case_begin_4400320400:;
					{
						if ((_20382b5b2_current.operator jule::Ref<_2053ddd54_FnIns>()).alloc == (_11717_ref.operator jule::Ref<_2053ddd54_FnIns>()).alloc) {
							goto _iter_next_4400315568;
						}
					}
					goto _match_end_4400318192;
					_case_end_4400320400:;
					_match_end_4400318192:;
				}
			}
			goto _match_end_4400317328;
			_case_end_4400318080:;
			_match_end_4400317328:;
		}
		{
			auto _match_expr{ _20382b5b2_main_current };
			if (!(_match_expr.type_is<jule::Ref<_2053ddd54_FnIns>>())) { goto _case_end_4400321056; }
			_case_begin_4400321056:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_2053ddd54_FnIns>>())) { goto _case_end_4400321568; }
					_case_begin_4400321568:;
					{
						if ((_20382b5b2_main_current.operator jule::Ref<_2053ddd54_FnIns>()).alloc == (_11717_ref.operator jule::Ref<_2053ddd54_FnIns>()).alloc) {
							goto _iter_next_4400315568;
						}
					}
					goto _match_end_4400323072;
					_case_end_4400321568:;
					_match_end_4400323072:;
				}
			}
			goto _match_end_4400322224;
			_case_end_4400321056:;
			_match_end_4400322224:;
		}
		if ((!(_20382b5b2_is_dead(_11717_ref)))) {
			return false;
		}
	}
	_iter_next_4400315568:;
	(_11513_i)++;
	goto _iter_begin_4400315568;
	_iter_end_4400315568:;
	return true;
}

inline jule::Bool _20382b5b2_is_all_references_are_dead_1(jule::Ref<_206a20e79_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	_iter_begin_4400334736:;
	if (!(_11513_i < _11438_references->_method_len())) { goto _iter_end_4400334736; }
	{
		jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
		{
			auto _match_expr{ _20382b5b2_current };
			if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4400337888; }
			_case_begin_4400337888:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4400339536; }
					_case_begin_4400339536:;
					{
						if ((_20382b5b2_current.operator jule::Ref<_1d9e22661_Var>()).alloc == (_11717_ref.operator jule::Ref<_1d9e22661_Var>()).alloc) {
							goto _iter_next_4400334736;
						}
					}
					goto _match_end_4400338080;
					_case_end_4400339536:;
					_match_end_4400338080:;
				}
			}
			goto _match_end_4400337312;
			_case_end_4400337888:;
			_match_end_4400337312:;
		}
		{
			auto _match_expr{ _20382b5b2_main_current };
			if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4400342208; }
			_case_begin_4400342208:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4400339104; }
					_case_begin_4400339104:;
					{
						if ((_20382b5b2_main_current.operator jule::Ref<_1d9e22661_Var>()).alloc == (_11717_ref.operator jule::Ref<_1d9e22661_Var>()).alloc) {
							goto _iter_next_4400334736;
						}
					}
					goto _match_end_4400343200;
					_case_end_4400339104:;
					_match_end_4400343200:;
				}
			}
			goto _match_end_4400341360;
			_case_end_4400342208:;
			_match_end_4400341360:;
		}
		if ((!(_20382b5b2_is_dead(_11717_ref)))) {
			return false;
		}
	}
	_iter_next_4400334736:;
	(_11513_i)++;
	goto _iter_begin_4400334736;
	_iter_end_4400334736:;
	return true;
}

inline jule::Bool _20382b5b2_is_all_references_are_dead_2(jule::Ref<_206a20e79_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	_iter_begin_4400370336:;
	if (!(_11513_i < _11438_references->_method_len())) { goto _iter_end_4400370336; }
	{
		jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
		{
			auto _match_expr{ _20382b5b2_current };
			if (!(_match_expr.type_is<jule::Ref<_2053cdc01_StructIns>>())) { goto _case_end_4400373456; }
			_case_begin_4400373456:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_2053cdc01_StructIns>>())) { goto _case_end_4400375136; }
					_case_begin_4400375136:;
					{
						if ((_20382b5b2_current.operator jule::Ref<_2053cdc01_StructIns>()).alloc == (_11717_ref.operator jule::Ref<_2053cdc01_StructIns>()).alloc) {
							goto _iter_next_4400370336;
						}
					}
					goto _match_end_4400373632;
					_case_end_4400375136:;
					_match_end_4400373632:;
				}
			}
			goto _match_end_4400372912;
			_case_end_4400373456:;
			_match_end_4400372912:;
		}
		{
			auto _match_expr{ _20382b5b2_main_current };
			if (!(_match_expr.type_is<jule::Ref<_2053cdc01_StructIns>>())) { goto _case_end_4400375792; }
			_case_begin_4400375792:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_2053cdc01_StructIns>>())) { goto _case_end_4400376304; }
					_case_begin_4400376304:;
					{
						if ((_20382b5b2_main_current.operator jule::Ref<_2053cdc01_StructIns>()).alloc == (_11717_ref.operator jule::Ref<_2053cdc01_StructIns>()).alloc) {
							goto _iter_next_4400370336;
						}
					}
					goto _match_end_4400377808;
					_case_end_4400376304:;
					_match_end_4400377808:;
				}
			}
			goto _match_end_4400376960;
			_case_end_4400375792:;
			_match_end_4400376960:;
		}
		if ((!(_20382b5b2_is_dead(_11717_ref)))) {
			return false;
		}
	}
	_iter_next_4400370336:;
	(_11513_i)++;
	goto _iter_begin_4400370336;
	_iter_end_4400370336:;
	return true;
}



inline jule::Bool _20382b5b2_is_fn_dead(jule::Ref<_2053ddd54_FnIns> _14319_f) {
	if (_14319_f->_field_decl->_field_cpp_linked) {
		return false;
	}
	if (_14319_f->_field_decl->_method_is_entry_point() || _14319_f->_field_decl->_method_is_init()) {
		return (!(_14319_f->_field_decl->_field_statically));
	}
	if (jule::real(_14319_f->_field_owner)) {
		if (_20382b5b2_is_exist_ref(_20382b5b2_checking,jule::Any(_14319_f->_field_owner))) {
			return true;
		}
		return _20382b5b2_is_dead(jule::Any(_14319_f->_field_owner));
	}
	return _20382b5b2_is_all_references_are_dead_0(_14319_f->_field_references);
}



inline jule::Bool _20382b5b2_is_var_dead(jule::Ref<_1d9e22661_Var> _16920_v) {
	if (_16920_v->_field_constant) {
		return true;
	}
	if (_16920_v->_field_cpp_linked) {
		return false;
	}
	return _20382b5b2_is_all_references_are_dead_1(_16920_v->_field_references);
}



inline jule::Bool _20382b5b2_kind_is_dead(jule::Ref<_1da411226_TypeKind> _18121_k) {
	{
		if (!((jule::real(_18121_k->_method_ref())))) { goto _case_end_4400329680; }
		_case_begin_4400329680:;
		{
			return _20382b5b2_kind_is_dead(_18121_k->_method_ref()->_field_elem);
		}
		goto _match_end_4400344688;
		_case_end_4400329680:;
		if (!((jule::real(_18121_k->_method_ptr())))) { goto _case_end_4400329792; }
		_case_begin_4400329792:;
		{
			return _20382b5b2_kind_is_dead(_18121_k->_method_ptr()->_field_elem);
		}
		goto _match_end_4400344688;
		_case_end_4400329792:;
		if (!((jule::real(_18121_k->_method_slc())))) { goto _case_end_4400329904; }
		_case_begin_4400329904:;
		{
			return _20382b5b2_kind_is_dead(_18121_k->_method_slc()->_field_elem);
		}
		goto _match_end_4400344688;
		_case_end_4400329904:;
		if (!((jule::real(_18121_k->_method_arr())))) { goto _case_end_4400348192; }
		_case_begin_4400348192:;
		{
			return _20382b5b2_kind_is_dead(_18121_k->_method_arr()->_field_elem);
		}
		goto _match_end_4400344688;
		_case_end_4400348192:;
		if (!((jule::real(_18121_k->_method_trt())))) { goto _case_end_4400348304; }
		_case_begin_4400348304:;
		{
			jule::Ref<_2065895c5_Trait> _19617_t = _18121_k->_method_trt();
			if (_20382b5b2_is_dead(jule::Any(_19617_t))) {
				return true;
			}
		}
		goto _match_end_4400344688;
		_case_end_4400348304:;
		if (!((jule::real(_18121_k->_method_strct())))) { goto _case_end_4400348416; }
		_case_begin_4400348416:;
		{
			jule::Ref<_2053cdc01_StructIns> _20217_s = _18121_k->_method_strct();
			if (_20382b5b2_is_dead(jule::Any(_20217_s))) {
				return true;
			}
		}
		goto _match_end_4400344688;
		_case_end_4400348416:;
		_match_end_4400344688:;
	}
	return false;
}



inline jule::Bool _20382b5b2_is_any_generic_is_dead(jule::Slice<jule::Ref<_1da411226_TypeKind>>& _21032_generics) {
	{
		auto _range_expr = _21032_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da411226_TypeKind> _20382b5b2_g = *_range_begin;
			_iter_begin_4400361872:;
			{
				if (_20382b5b2_kind_is_dead(_20382b5b2_g)) {
					return true;
				}
			}
			_iter_next_4400361872:;
			++_range_begin;
			if (_range_begin != _range_end) { _20382b5b2_g = *_range_begin; goto _iter_begin_4400361872; }
			_iter_end_4400361872:;
		}
	}
	return false;
}



inline jule::Bool _20382b5b2_is_struct_dead(jule::Ref<_2053cdc01_StructIns> _21923_s) {
	return false;
	if (_21923_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return _20382b5b2_is_all_references_are_dead_2(_21923_s->_field_references);
}



inline jule::Bool _20382b5b2_is_trait_dead(jule::Ref<_2065895c5_Trait> _23622_t) {
	return false;
	{
		auto _range_expr = _23622_t->_field_implemented;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _20382b5b2_imp = *_range_begin;
			_iter_begin_4400380224:;
			{
				jule::Int _24117_i = 0LL;
				_iter_begin_4400385248:;
				if (!(_24117_i < _20382b5b2_imp->_field_instances.len())) { goto _iter_end_4400385248; }
				{
					jule::Ref<_2053cdc01_StructIns> _24321_ins = _20382b5b2_imp->_field_instances[static_cast<jule::Int>(_24117_i)];
					if ((!(_20382b5b2_is_struct_dead(_24321_ins)))) {
						return false;
					}
				}
				_iter_next_4400385248:;
				(_24117_i)++;
				goto _iter_begin_4400385248;
				_iter_end_4400385248:;
			}
			_iter_next_4400380224:;
			++_range_begin;
			if (_range_begin != _range_end) { _20382b5b2_imp = *_range_begin; goto _iter_begin_4400380224; }
			_iter_end_4400380224:;
		}
	}
	return true;
}



inline void _20382b5b2_eliminate_dead_functions(jule::Slice<jule::Ref<_2053ddd54_Fn>>& _25434_funcs) {
	jule::Int _25513_i = 0LL;
	_iter_begin_4400380448:;
	if (!(_25513_i < _25434_funcs.len())) { goto _iter_end_4400380448; }
	{
		jule::Ref<_2053ddd54_Fn> _25717_f = _25434_funcs[static_cast<jule::Int>(_25513_i)];
		jule::Int _25817_j = 0LL;
		_iter_begin_4400394176:;
		if (!(_25817_j < _25717_f->_field_instances.len())) { goto _iter_end_4400394176; }
		{
			jule::Ref<_2053ddd54_FnIns> _26021_ins = _25717_f->_field_instances[static_cast<jule::Int>(_25817_j)];
			_20382b5b2_main_current=jule::Any(_26021_ins);
			if (_20382b5b2_is_fn_dead(_26021_ins)) {
				_20382b5b2_deads=jule::append(_20382b5b2_deads,jule::Slice<jule::Any>({jule::Any(_26021_ins)}));
				_25717_f->_field_instances=jule::append(_25717_f->_field_instances.slice(0LL,static_cast<jule::Int>(_25817_j)),_25717_f->_field_instances.slice(static_cast<jule::Int>(_25817_j + 1LL)));
				goto _iter_next_4400394176;
			}
			_20385a2c2_eliminate_dead_code_of_scope(_26021_ins->_field_scope);
			(_25817_j)++;
		}
		_iter_next_4400394176:;
		goto _iter_begin_4400394176;
		_iter_end_4400394176:;
		if (_25717_f->_field_instances.len() == 0LL) {
			_25434_funcs=jule::append(_25434_funcs.slice(0LL,static_cast<jule::Int>(_25513_i)),_25434_funcs.slice(static_cast<jule::Int>(_25513_i + 1LL)));
			goto _iter_next_4400380448;
		}
		(_25513_i)++;
	}
	_iter_next_4400380448:;
	goto _iter_begin_4400380448;
	_iter_end_4400380448:;
}



inline void _20382b5b2_eliminate_dead_globals(jule::Ref<_206e66325_Package>& _28032_pkg) {
	{
		auto _range_expr = _28032_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _20382b5b2_f = *_range_begin;
			_iter_begin_4400406896:;
			{
				jule::Int _28217_i = 0LL;
				_iter_begin_4400410640:;
				if (!(_28217_i < _20382b5b2_f->_field_vars.len())) { goto _iter_end_4400410640; }
				{
					jule::Ref<_1d9e22661_Var> _28421_v = _20382b5b2_f->_field_vars[static_cast<jule::Int>(_28217_i)];
					_20382b5b2_main_current=jule::Any(_28421_v);
					if (_20382b5b2_is_var_dead(_28421_v)) {
						_20382b5b2_deads=jule::append(_20382b5b2_deads,jule::Slice<jule::Any>({jule::Any(_28421_v)}));
						_20382b5b2_f->_field_vars=jule::append(_20382b5b2_f->_field_vars.slice(0LL,static_cast<jule::Int>(_28217_i)),_20382b5b2_f->_field_vars.slice(static_cast<jule::Int>(_28217_i + 1LL)));
					} else {
						(_28217_i)++;
					}
				}
				_iter_next_4400410640:;
				goto _iter_begin_4400410640;
				_iter_end_4400410640:;
			}
			_iter_next_4400406896:;
			++_range_begin;
			if (_range_begin != _range_end) { _20382b5b2_f = *_range_begin; goto _iter_begin_4400406896; }
			_iter_end_4400406896:;
		}
	}
}



inline void _20382b5b2_eliminate_dead_functions_package(jule::Ref<_206e66325_Package>& _29642_pkg) {
	{
		auto _range_expr = _29642_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _20382b5b2_f = *_range_begin;
			_iter_begin_4400409536:;
			{
				_20382b5b2_eliminate_dead_functions(_20382b5b2_f->_field_funcs);
			}
			_iter_next_4400409536:;
			++_range_begin;
			if (_range_begin != _range_end) { _20382b5b2_f = *_range_begin; goto _iter_begin_4400409536; }
			_iter_end_4400409536:;
		}
	}
}



inline void _20382b5b2_eliminate_dead_structs(jule::Ref<_206e66325_Package>& _30232_pkg) {
	{
		auto _range_expr = _30232_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _20382b5b2_f = *_range_begin;
			_iter_begin_4400411664:;
			{
				jule::Int _30417_i = 0LL;
				_iter_begin_4400423936:;
				if (!(_30417_i < _20382b5b2_f->_field_structs.len())) { goto _iter_end_4400423936; }
				{
					jule::Ref<_2053cdc01_Struct> _30621_s = _20382b5b2_f->_field_structs[static_cast<jule::Int>(_30417_i)];
					jule::Int _30721_j = 0LL;
					_iter_begin_4400427888:;
					if (!(_30721_j < _30621_s->_field_instances.len())) { goto _iter_end_4400427888; }
					{
						jule::Ref<_2053cdc01_StructIns> _30925_ins = _30621_s->_field_instances[static_cast<jule::Int>(_30721_j)];
						_20382b5b2_main_current=jule::Any(_30925_ins);
						if (_20382b5b2_is_struct_dead(_30925_ins)) {
							_20382b5b2_deads=jule::append(_20382b5b2_deads,jule::Slice<jule::Any>({jule::Any(_30925_ins)}));
							_30621_s->_field_instances=jule::append(_30621_s->_field_instances.slice(0LL,static_cast<jule::Int>(_30721_j)),_30621_s->_field_instances.slice(static_cast<jule::Int>(_30721_j + 1LL)));
							goto _iter_next_4400427888;
						}
						(_30721_j)++;
					}
					_iter_next_4400427888:;
					goto _iter_begin_4400427888;
					_iter_end_4400427888:;
					if (_30621_s->_field_instances.len() == 0LL) {
						_20382b5b2_f->_field_structs=jule::append(_20382b5b2_f->_field_structs.slice(0LL,static_cast<jule::Int>(_30417_i)),_20382b5b2_f->_field_structs.slice(static_cast<jule::Int>(_30417_i + 1LL)));
						goto _iter_next_4400423936;
					}
					(_30417_i)++;
				}
				_iter_next_4400423936:;
				goto _iter_begin_4400423936;
				_iter_end_4400423936:;
			}
			_iter_next_4400411664:;
			++_range_begin;
			if (_range_begin != _range_end) { _20382b5b2_f = *_range_begin; goto _iter_begin_4400411664; }
			_iter_end_4400411664:;
		}
	}
}



inline void _20382b5b2_eliminate_dead_traits(jule::Ref<_206e66325_Package>& _32831_pkg) {
	{
		auto _range_expr = _32831_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _20382b5b2_f = *_range_begin;
			_iter_begin_4400434016:;
			{
				jule::Int _33017_i = 0LL;
				_iter_begin_4400444528:;
				if (!(_33017_i < _20382b5b2_f->_field_traits.len())) { goto _iter_end_4400444528; }
				{
					jule::Ref<_2065895c5_Trait> _33221_t = _20382b5b2_f->_field_traits[static_cast<jule::Int>(_33017_i)];
					_20382b5b2_main_current=jule::Any(_33221_t);
					if (_20382b5b2_is_trait_dead(_33221_t)) {
						_20382b5b2_deads=jule::append(_20382b5b2_deads,jule::Slice<jule::Any>({jule::Any(_33221_t)}));
						_20382b5b2_f->_field_traits=jule::append(_20382b5b2_f->_field_traits.slice(0LL,static_cast<jule::Int>(_33017_i)),_20382b5b2_f->_field_traits.slice(static_cast<jule::Int>(_33017_i + 1LL)));
					} else {
						(_33017_i)++;
					}
				}
				_iter_next_4400444528:;
				goto _iter_begin_4400444528;
				_iter_end_4400444528:;
			}
			_iter_next_4400434016:;
			++_range_begin;
			if (_range_begin != _range_end) { _20382b5b2_f = *_range_begin; goto _iter_begin_4400434016; }
			_iter_end_4400434016:;
		}
	}
}



inline void _20382b5b2_catch_alive_init(jule::Ref<_206e66325_Package>& _34426_pkg) {
	
	
	jule::Ref<_2053ddd54_Fn> _34713_f = _34426_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_34713_f)))) {
		return;
	}
	jule::I64 _3529_n = _20382b5b2_deads.len();
	__JULE_DEFER({
		_20382b5b2_deads=_20382b5b2_deads.slice(0LL,static_cast<jule::Int>(_3529_n));
		_20382b5b2_checking=nullptr;
		_20382b5b2_current=jule::Any(nullptr);
	});
	jule::Ref<_2053ddd54_FnIns> _36013_ins = _34713_f->_field_instances[0LL];
	jule::Int _36113_i = 0LL;
	_iter_begin_4400461568:;
	if (!(_36113_i < _36013_ins->_field_refers->_method_len())) { goto _iter_end_4400461568; }
	{
		if ((!(_20382b5b2_is_dead(_36013_ins->_field_refers->_method_at(_36113_i))))) {
			_34713_f->_field_statically=true;
			return;
		}
	}
	_iter_next_4400461568:;
	(_36113_i)++;
	goto _iter_begin_4400461568;
	_iter_end_4400461568:;
}



inline void _20382b5b2_eliminate_package(jule::Ref<_206e66325_Package>& _37027_pkg) {
	_20382b5b2_deads=jule::Slice<jule::Any>::alloc(0LL,2000LL);
	_20382b5b2_catch_alive_init(_37027_pkg);
	_20382b5b2_eliminate_dead_globals(_37027_pkg);
	_20382b5b2_eliminate_dead_functions_package(_37027_pkg);
}



inline void _20382b5b2_eliminate(jule::Ref<_204a33ac6_IR>& _38123_ir) {
	jule::I64 _38213_i = _38123_ir->_field_used.len() - 1LL;
	_iter_begin_4400469616:;
	if (!(_38213_i >= 0LL)) { goto _iter_end_4400469616; }
	{
		jule::Ref<_206e66325_ImportInfo> _38417_u = _38123_ir->_field_used[static_cast<jule::Int>(_38213_i)];
		if ((!(_38417_u->_field_cpp_linked))) {
			_20382b5b2_eliminate_package(_38417_u->_field_package);
		}
	}
	_iter_next_4400469616:;
	(_38213_i)--;
	goto _iter_begin_4400469616;
	_iter_end_4400469616:;
	_20382b5b2_eliminate_package(_38123_ir->_field_main);
	_20382b5b2_deads=nullptr;
	_20382b5b2_checking=nullptr;
	_20382b5b2_current=jule::Any(nullptr);
}



inline void _20385a2c2_eliminate_dead_code_of_scope(jule::Ref<_206b0557a_Scope> _7337_s) {
	jule::Ref<_20385a2c2_ScopeDeadCode> _7413_sdc = jule::new_struct<_20385a2c2_ScopeDeadCode>(new( std::nothrow ) _20385a2c2_ScopeDeadCode(jule::Ref<_20385a2c2_ScopeDeadCode>(),_7337_s,(&(_7337_s->_field_stmts)),jule::Int()));
	{
		_7413_sdc->_method_optimize_stmts();
	}
}



inline jule::Str _2049ab4bb_gen_if(jule::Ref<_206b0557a_If> _12915_i) {
	jule::Str _13013_obj = jule::Str("if (", 4);
	_13013_obj+=_204b36833_gen_expr(_12915_i->_field_expr);
	_13013_obj+=jule::Str(") ", 2);
	_13013_obj+=_2049ab4bb_gen_scope(_12915_i->_field_scope);
	return _13013_obj;
}



inline jule::Str _2049ab4bb_gen_conditional(jule::Ref<_206b0557a_Conditional> _13724_c) {
	jule::Str _13813_obj = _2049ab4bb_gen_if(_13724_c->_field_elifs[0LL]);
	{
		auto _range_expr = _13724_c->_field_elifs.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206b0557a_If> _2049ab4bb_elif = *_range_begin;
			_iter_begin_4400835648:;
			{
				_13813_obj+=jule::Str(" else ", 6);
				_13813_obj+=_2049ab4bb_gen_if(_2049ab4bb_elif);
			}
			_iter_next_4400835648:;
			++_range_begin;
			if (_range_begin != _range_end) { _2049ab4bb_elif = *_range_begin; goto _iter_begin_4400835648; }
			_iter_end_4400835648:;
		}
	}
	if (jule::real(_13724_c->_field_default)) {
		_13813_obj+=jule::Str(" else ", 6);
		_13813_obj+=_2049ab4bb_gen_scope(_13724_c->_field_default->_field_scope);
	}
	return _13813_obj;
}



inline jule::Str _2049ab4bb_gen_inf_iter(jule::Ref<_206b0557a_InfIter> _15321_it) {
	jule::Str _1549_begin = _1a8e524c4_iter_begin_label_ident(((jule::Uintptr)((_15321_it).alloc)));
	jule::Str _1559_end = _1a8e524c4_iter_end_label_ident(((jule::Uintptr)((_15321_it).alloc)));
	jule::Str _1569_next = _1a8e524c4_iter_next_label_ident(((jule::Uintptr)((_15321_it).alloc)));
	jule::Str _1579_indent = _1a8e8cc29_indent();
	jule::Str _15913_obj = _1549_begin + jule::Str(":;\n", 3);
	_15913_obj+=_1579_indent;
	_15913_obj+=_2049ab4bb_gen_scope(_15321_it->_field_scope);
	_15913_obj+=jule::Str("\n", 1);
	_15913_obj+=_1579_indent;
	_15913_obj+=_1569_next + jule::Str(":;\n", 3);
	_15913_obj+=_1579_indent;
	_15913_obj+=(jule::Str("goto ", 5) + _1549_begin) + jule::Str(";\n", 2);
	_15913_obj+=_1579_indent;
	_15913_obj+=_1559_end + jule::Str(":;", 2);
	return _15913_obj;
}



inline jule::Str _2049ab4bb_gen_while_iter(jule::Ref<_206b0557a_WhileIter> _17323_it) {
	jule::Str _1749_begin = _1a8e524c4_iter_begin_label_ident(((jule::Uintptr)((_17323_it).alloc)));
	jule::Str _1759_end = _1a8e524c4_iter_end_label_ident(((jule::Uintptr)((_17323_it).alloc)));
	jule::Str _1769_next = _1a8e524c4_iter_next_label_ident(((jule::Uintptr)((_17323_it).alloc)));
	jule::Str _1779_indent = _1a8e8cc29_indent();
	jule::Str _17913_obj = _1749_begin + jule::Str(":;\n", 3);
	_17913_obj+=_1779_indent;
	if (_17323_it->_field_expr != nullptr) {
		_17913_obj+=jule::Str("if (!(", 6);
		_17913_obj+=_204b36833_gen_expr(_17323_it->_field_expr);
		_17913_obj+=jule::Str(")) { goto ", 10);
		_17913_obj+=_1759_end;
		_17913_obj+=jule::Str("; }\n", 4);
		_17913_obj+=_1779_indent;
	}
	_17913_obj+=_2049ab4bb_gen_scope(_17323_it->_field_scope);
	_17913_obj+=jule::Str("\n", 1);
	_17913_obj+=_1779_indent;
	_17913_obj+=_1769_next + jule::Str(":;\n", 3);
	_17913_obj+=_1779_indent;
	if (_17323_it->_field_next != nullptr) {
		_17913_obj+=_2049ab4bb_gen_st(_17323_it->_field_next);
		_17913_obj+=jule::Str("\n", 1);
		_17913_obj+=_1779_indent;
	}
	_17913_obj+=(jule::Str("goto ", 5) + _1749_begin) + jule::Str(";\n", 2);
	_17913_obj+=_1779_indent;
	_17913_obj+=_1759_end + jule::Str(":;", 2);
	return _17913_obj;
}



inline jule::Trait<_2049ab4bb_RangeSetter> _2049ab4bb_get_range_setter(jule::Ref<_206b0557a_RangeIter> _20625_it) {
	{
		if (!((jule::real(_20625_it->_field_expr->_field_kind->_method_slc())))) { goto _case_end_4400870576; }
		_case_begin_4400870576:;
		{
			return jule::new_struct<_2049ab4bb_IndexRangeSetter>(new( std::nothrow ) _2049ab4bb_IndexRangeSetter());
		}
		goto _match_end_4400863232;
		_case_end_4400870576:;
		if (!((jule::real(_20625_it->_field_expr->_field_kind->_method_arr())))) { goto _case_end_4400868352; }
		_case_begin_4400868352:;
		{
			return jule::new_struct<_2049ab4bb_IndexRangeSetter>(new( std::nothrow ) _2049ab4bb_IndexRangeSetter());
		}
		goto _match_end_4400863232;
		_case_end_4400868352:;
		if (!((jule::real(_20625_it->_field_expr->_field_kind->_method_map())))) { goto _case_end_4400868464; }
		_case_begin_4400868464:;
		{
			return jule::new_struct<_2049ab4bb_MapRangeSetter>(new( std::nothrow ) _2049ab4bb_MapRangeSetter());
		}
		goto _match_end_4400863232;
		_case_end_4400868464:;
		_case_begin_4400866896:;
		{
			return jule::new_struct<_2049ab4bb_IndexRangeSetter>(new( std::nothrow ) _2049ab4bb_IndexRangeSetter());
		}
		goto _match_end_4400863232;
		_case_end_4400866896:;
		_match_end_4400863232:;
	}
}



inline jule::Str _2049ab4bb_gen_range_iter(jule::Ref<_206b0557a_RangeIter> _21523_it) {
	_1a8e8cc29_add_indent();
	jule::Str _2189_begin = _1a8e524c4_iter_begin_label_ident(((jule::Uintptr)((_21523_it).alloc)));
	jule::Str _2199_end = _1a8e524c4_iter_end_label_ident(((jule::Uintptr)((_21523_it).alloc)));
	jule::Str _2209_next = _1a8e524c4_iter_next_label_ident(((jule::Uintptr)((_21523_it).alloc)));
	jule::Str _22113__indent = _1a8e8cc29_indent();
	jule::Trait<_2049ab4bb_RangeSetter> _2229_setter = _2049ab4bb_get_range_setter(_21523_it);
	jule::Str _22413_obj = jule::Str("{\n", 2);
	_22413_obj+=_22113__indent;
	if (_21523_it->_field_expr->_field_lvalue && _205094587_is_opt_enabled(jule::Str("--opt-copy", 10))) {
		_22413_obj+=jule::Str("auto &_range_expr = ", 20);
	} else {
		_22413_obj+=jule::Str("auto _range_expr = ", 19);
	}
	_22413_obj+=_204b36833_gen_expr(_21523_it->_field_expr->_field_model) + jule::Str(";\n", 2);
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("if (_range_expr.begin() != _range_expr.end()) {\n", 48);
	_1a8e8cc29_add_indent();
	_22113__indent=_1a8e8cc29_indent();
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("auto _range_begin = _range_expr.begin();\n", 41);
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("const auto _range_end = _range_expr.end();\n", 43);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2229_setter.get()._method_setup_vars(_21523_it->_field_key_a,_21523_it->_field_key_b);
	_22413_obj+=_2189_begin + jule::Str(":;\n", 3);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2049ab4bb_gen_scope(_21523_it->_field_scope);
	_22413_obj+=jule::Str("\n", 1);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2209_next + jule::Str(":;\n", 3);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2229_setter.get()._method_next_steps(_21523_it->_field_key_a,_21523_it->_field_key_b,_2189_begin);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2199_end + jule::Str(":;\n", 3);
	_1a8e8cc29_done_indent();
	_22113__indent=_1a8e8cc29_indent();
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("}\n", 2);
	_1a8e8cc29_done_indent();
	_22113__indent=_1a8e8cc29_indent();
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("}", 1);
	return _22413_obj;
}



inline jule::Str _2049ab4bb_gen_cont(jule::Ref<_206b0557a_ContSt> _27013_c) {
	return (jule::Str("goto ", 5) + _1a8e524c4_iter_next_label_ident(_27013_c->_field_it)) + jule::Str(";", 1);
}



inline jule::Str _2049ab4bb_gen_label(jule::Ref<_206b0557a_Label> _27414_l) {
	return _1a8e524c4_label_ident(_27414_l->_field_ident) + jule::Str(":;", 2);
}



inline jule::Str _2049ab4bb_gen_goto(jule::Ref<_206b0557a_GotoSt> _27813_gt) {
	return (jule::Str("goto ", 5) + _1a8e524c4_label_ident(_27813_gt->_field_ident)) + jule::Str(";", 1);
}



inline jule::Str _2049ab4bb_gen_postfix(jule::Ref<_206b0557a_Postfix> _28220_p) {
	return (((jule::Str("(", 1) + _204b36833_gen_expr(_28220_p->_field_expr)) + jule::Str(")", 1)) + _28220_p->_field_op) + jule::Str(";", 1);
}



inline jule::Str _2049ab4bb_gen_div_by_zero_assign(jule::Ref<_206b0557a_Assign> _28631_a) {
	jule::Str _28713_obj = _204b36833_gen_expr(_28631_a->_field_l);
	_28713_obj+=jule::Str(" = ", 3);
	_28713_obj+=_204b36833_gen_div_by_zero_binop_expr_model(_28631_a->_field_op.slice(0LL,1LL),_28631_a->_field_l,_28631_a->_field_r);
	_28713_obj+=jule::Str(";", 1);
	return _28713_obj;
}



inline jule::Str _2049ab4bb_gen_assign(jule::Ref<_206b0557a_Assign> _29419_a) {
	{
		auto _match_expr{ _29419_a->_field_op };
		if (!((jule::Str("/=", 2)) == _match_expr || (jule::Str("%=", 2)) == _match_expr)) { goto _case_end_4400930672; }
		_case_begin_4400930672:;
		{
			return _2049ab4bb_gen_div_by_zero_assign(_29419_a);
		}
		goto _match_end_4400929440;
		_case_end_4400930672:;
		_match_end_4400929440:;
	}
	jule::Str _30113_obj = _204b36833_gen_expr(_29419_a->_field_l);
	_30113_obj+=_29419_a->_field_op;
	if (_205094587_is_opt_enabled(jule::Str("--opt-append", 12))) {
		{
			auto _match_expr{ _29419_a->_field_r };
			if (!(_match_expr.type_is<jule::Ref<_206e63542_BuiltinAppendCallExprModel>>())) { goto _case_end_4400935664; }
			_case_begin_4400935664:;
			{
				jule::Ref<_206e63542_BuiltinAppendCallExprModel> _30621_model = _29419_a->_field_r.operator jule::Ref<_206e63542_BuiltinAppendCallExprModel>();
				jule::Str _30718_expr;
				jule::Bool _30724_optimized;
				std::tie(_30718_expr,_30724_optimized) = _204b36833_gen_builtin_append_call_expr_model_assign(_29419_a->_field_l,_30621_model);
				if (_30724_optimized) {
					return _30718_expr;
				}
				_30113_obj+=_30718_expr;
			}
			goto _match_end_4400933824;
			_case_end_4400935664:;
			_case_begin_4400934880:;
			{
				_30113_obj+=_204b36833_gen_expr(_29419_a->_field_r);
			}
			goto _match_end_4400933824;
			_case_end_4400934880:;
			_match_end_4400933824:;
		}
	} else {
		_30113_obj+=_204b36833_gen_expr(_29419_a->_field_r);
	}
	_30113_obj+=jule::Str(";", 1);
	return _30113_obj;
}



inline jule::Str _2049ab4bb_gen_multi_assign(jule::Ref<_206b0557a_MultiAssign> _32325_a) {
	jule::Str _32413_obj = jule::Str("std::tie(", 9);
	{
		auto _range_expr = _32325_a->_field_l;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _2049ab4bb_l = *_range_begin;
			_iter_begin_4400943792:;
			{
				if (_2049ab4bb_l == nullptr) {
					_32413_obj+=jule::Str("std::ignore,", 12);
				} else {
					_32413_obj+=_204b36833_gen_expr(_2049ab4bb_l) + jule::Str(",", 1);
				}
			}
			_iter_next_4400943792:;
			++_range_begin;
			if (_range_begin != _range_end) { _2049ab4bb_l = *_range_begin; goto _iter_begin_4400943792; }
			_iter_end_4400943792:;
		}
	}
	_32413_obj=_32413_obj.slice(0LL,static_cast<jule::Int>(_32413_obj.len() - 1LL));
	_32413_obj+=jule::Str(") = ", 4);
	_32413_obj+=_204b36833_gen_expr(_32325_a->_field_r);
	_32413_obj+=jule::Str(";", 1);
	return _32413_obj;
}



inline jule::Str _2049ab4bb_gen_case(jule::Ref<_206b0557a_Match> _34117_m,jule::Ref<_206b0557a_Case> _34132_c) {
	
	jule::Str _3449_end = _1a8e524c4_case_end_label_ident(((jule::Uintptr)((_34132_c).alloc)));
	jule::Str _34513_obj = jule::Str("", 0);
	if (_34132_c->_field_exprs.len() > 0LL) {
		_34513_obj+=jule::Str("if (!(", 6);
		{
			auto _range_expr = _34132_c->_field_exprs;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _2049ab4bb_i = 0;
				jule::Any _2049ab4bb_expr = *_range_begin;
				_iter_begin_4400956240:;
				{
					{
						if (!(((!(_34117_m->_field_type_match))))) { goto _case_end_4400959424; }
						_case_begin_4400959424:;
						{
							_34513_obj+=jule::Str("(", 1);
							_34513_obj+=_204b36833_gen_expr(_2049ab4bb_expr);
							_34513_obj+=jule::Str(")", 1);
							if (_34117_m->_field_expr->_method_is_const()) {
								if ((!(_34117_m->_field_expr->_field_constant->_method_is_bool())) || (!(_34117_m->_field_expr->_field_constant->_method_read_bool()))) {
									_34513_obj+=jule::Str(" == ", 4);
									_34513_obj+=_204b36833_gen_expr_model(_34117_m->_field_expr->_field_model);
								}
							} else {
								_34513_obj+=jule::Str(" == ", 4);
								_34513_obj+=jule::Str("_match_expr", 11);
							}
						}
						goto _match_end_4400958416;
						_case_end_4400959424:;
						_case_begin_4400958592:;
						{
							_34513_obj+=jule::Str("_match_expr", 11);
							_34513_obj+=(jule::Str(".type_is<", 9) + _204b36833_gen_expr(_2049ab4bb_expr)) + jule::Str(">()", 3);
						}
						goto _match_end_4400958416;
						_case_end_4400958592:;
						_match_end_4400958416:;
					}
					if ((_2049ab4bb_i + 1LL) < _34132_c->_field_exprs.len()) {
						_34513_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_4400956240:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_2049ab4bb_i; _2049ab4bb_expr = *_range_begin; goto _iter_begin_4400956240; }
				_iter_end_4400956240:;
			}
		}
		_34513_obj+=jule::Str(")) { goto ", 10);
		_34513_obj+=_3449_end + jule::Str("; }\n", 4);
	}
	if (_34132_c->_field_scope->_field_stmts.len() > 0LL) {
		_34513_obj+=_1a8e8cc29_indent();
		_34513_obj+=_1a8e524c4_case_begin_label_ident(((jule::Uintptr)((_34132_c).alloc))) + jule::Str(":;\n", 3);
		_34513_obj+=_1a8e8cc29_indent();
		_34513_obj+=_2049ab4bb_gen_scope(_34132_c->_field_scope);
		_34513_obj+=jule::Str("\n", 1);
	}
	_34513_obj+=_1a8e8cc29_indent();
	_34513_obj+=jule::Str("goto ", 5);
	_34513_obj+=_1a8e524c4_match_end_label_ident(((jule::Uintptr)((_34117_m).alloc))) + jule::Str(";", 1);
	_34513_obj+=jule::Str("\n", 1);
	_34513_obj+=_1a8e8cc29_indent();
	_34513_obj+=_3449_end + jule::Str(":;", 2);
	return _34513_obj;
}



inline jule::Str _2049ab4bb_gen_match(jule::Ref<_206b0557a_Match> _39618_m) {
	jule::Str _39713_obj = jule::Str("{\n", 2);
	_1a8e8cc29_add_indent();
	_39713_obj+=_1a8e8cc29_indent();
	if ((!(_39618_m->_field_expr->_method_is_const()))) {
		if (_39618_m->_field_expr->_field_lvalue && _205094587_is_opt_enabled(jule::Str("--opt-copy", 10))) {
			_39713_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_39713_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_39713_obj+=_204b36833_gen_expr(_39618_m->_field_expr->_field_model);
		_39713_obj+=jule::Str(" };\n", 4);
		_39713_obj+=_1a8e8cc29_indent();
	}
	if (_39618_m->_field_cases.len() > 0LL) {
		_39713_obj+=_2049ab4bb_gen_case(_39618_m,_39618_m->_field_cases[0LL]);
		{
			auto _range_expr = _39618_m->_field_cases.slice(1LL);
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_206b0557a_Case> _2049ab4bb_c = *_range_begin;
				_iter_begin_4400986032:;
				{
					_39713_obj+=jule::Str("\n", 1);
					_39713_obj+=_1a8e8cc29_indent();
					_39713_obj+=_2049ab4bb_gen_case(_39618_m,_2049ab4bb_c);
				}
				_iter_next_4400986032:;
				++_range_begin;
				if (_range_begin != _range_end) { _2049ab4bb_c = *_range_begin; goto _iter_begin_4400986032; }
				_iter_end_4400986032:;
			}
		}
	}
	if (jule::real(_39618_m->_field_default)) {
		_39713_obj+=jule::Str("\n", 1);
		_39713_obj+=_2049ab4bb_gen_case(_39618_m,_39618_m->_field_default);
	}
	_39713_obj+=jule::Str("\n", 1);
	_39713_obj+=_1a8e8cc29_indent();
	_39713_obj+=_1a8e524c4_match_end_label_ident(((jule::Uintptr)((_39618_m).alloc))) + jule::Str(":;", 2);
	_39713_obj+=jule::Str("\n", 1);
	_1a8e8cc29_done_indent();
	_39713_obj+=_1a8e8cc29_indent();
	_39713_obj+=jule::Str("}", 1);
	return _39713_obj;
}



inline jule::Str _2049ab4bb_gen_fall_st(jule::Ref<_206b0557a_FallSt> _44216_f) {
	return (jule::Str("goto ", 5) + _1a8e524c4_case_begin_label_ident(_44216_f->_field_dest_case)) + jule::Str(";", 1);
}



inline jule::Str _2049ab4bb_gen_break_st(jule::Ref<_206b0557a_BreakSt> _44617_b) {
	jule::Str _44713_obj = jule::Str("goto ", 5);
	if (_44617_b->_field_it != 0LL) {
		_44713_obj+=_1a8e524c4_iter_end_label_ident(_44617_b->_field_it);
	} else {
		_44713_obj+=_1a8e524c4_match_end_label_ident(_44617_b->_field_mtch);
	}
	_44713_obj+=jule::Str(";", 1);
	return _44713_obj;
}



inline jule::Str _2049ab4bb_gen_ret_vars(jule::Ref<_206b0557a_RetSt> _45821_r) {
	jule::Str _45913_obj = jule::Str("", 0);
	{
		auto _range_expr = _45821_r->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d9e22661_Var> _2049ab4bb_v = *_range_begin;
			_iter_begin_4401001104:;
			{
				if (_20542560a_is_ignore_ident(_2049ab4bb_v->_field_ident)) {
					_45913_obj+=_204b36833_get_init_expr(_2049ab4bb_v->_field_kind->_field_kind);
				} else {
					_45913_obj+=_1a8e524c4_var_out_ident(_2049ab4bb_v);
				}
				_45913_obj+=jule::Str(",", 1);
			}
			_iter_next_4401001104:;
			++_range_begin;
			if (_range_begin != _range_end) { _2049ab4bb_v = *_range_begin; goto _iter_begin_4401001104; }
			_iter_end_4401001104:;
		}
	}
	_45913_obj=_45913_obj.slice(0LL,static_cast<jule::Int>(_45913_obj.len() - 1LL));
	if (_45821_r->_field_vars.len() > 1LL) {
		_45913_obj=(jule::Str("return std::make_tuple(", 23) + _45913_obj) + jule::Str(")", 1);
	} else {
		_45913_obj=jule::Str("return ", 7) + _45913_obj;
	}
	_45913_obj+=jule::Str(";", 1);
	return _45913_obj;
}



inline jule::Str _2049ab4bb_gen_ret_expr_tuple(jule::Ref<_206b0557a_RetSt> _48227_r) {
	{
		auto _match_expr{ _48227_r->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_206e63542_FnCallExprModel>>())) { goto _case_end_4401009856; }
		_case_begin_4401009856:;
		{
			return (jule::Str("return ", 7) + _204b36833_gen_expr_model(_48227_r->_field_expr)) + jule::Str(";", 1);
		}
		goto _match_end_4401007568;
		_case_end_4401009856:;
		_match_end_4401007568:;
	}
	jule::Slice<jule::Ref<_1da2d3bdc_Data>> _48813_datas = _48227_r->_field_expr.operator jule::Ref<_206e63542_TupleExprModel>()->_field_datas;
	jule::Str _48913_obj = jule::Str("", 0);
	{
		auto _range_expr = _48227_r->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2049ab4bb_i = 0;
			jule::Ref<_1d9e22661_Var> _2049ab4bb_v = *_range_begin;
			_iter_begin_4401014832:;
			{
				if ((!(_20542560a_is_ignore_ident(_2049ab4bb_v->_field_ident)))) {
					jule::Str _49317_ident = _1a8e524c4_var_out_ident(_2049ab4bb_v);
					_48913_obj+=((_49317_ident + jule::Str(" = ", 3)) + _204b36833_gen_expr(_48813_datas[static_cast<jule::Int>(_2049ab4bb_i)]->_field_model)) + jule::Str(";\n", 2);
					_48913_obj+=_1a8e8cc29_indent();
				}
			}
			_iter_next_4401014832:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2049ab4bb_i; _2049ab4bb_v = *_range_begin; goto _iter_begin_4401014832; }
			_iter_end_4401014832:;
		}
	}
	_48913_obj+=jule::Str("return std::make_tuple(", 23);
	{
		auto _range_expr = _48813_datas;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _2049ab4bb_i = 0;
			jule::Ref<_1da2d3bdc_Data> _2049ab4bb_d = *_range_begin;
			_iter_begin_4401017456:;
			{
				jule::Ref<_1d9e22661_Var> _50117_v = _48227_r->_field_vars[static_cast<jule::Int>(_2049ab4bb_i)];
				if (_20542560a_is_ignore_ident(_50117_v->_field_ident)) {
					_48913_obj+=_204b36833_gen_expr(_2049ab4bb_d->_field_model);
				} else {
					_48913_obj+=_1a8e524c4_var_out_ident(_50117_v);
				}
				_48913_obj+=jule::Str(",", 1);
			}
			_iter_next_4401017456:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_2049ab4bb_i; _2049ab4bb_d = *_range_begin; goto _iter_begin_4401017456; }
			_iter_end_4401017456:;
		}
	}
	_48913_obj=_48913_obj.slice(0LL,static_cast<jule::Int>(_48913_obj.len() - 1LL));
	_48913_obj+=jule::Str(");", 2);
	return _48913_obj;
}



inline jule::Str _2049ab4bb_gen_ret_expr(jule::Ref<_206b0557a_RetSt> _51621_r) {
	if (_51621_r->_field_vars.len() == 0LL) {
		return (jule::Str("return ", 7) + _204b36833_gen_expr(_51621_r->_field_expr)) + jule::Str(";", 1);
	}
	if (_51621_r->_field_vars.len() > 1LL) {
		return _2049ab4bb_gen_ret_expr_tuple(_51621_r);
	}
	if ((!(_20542560a_is_ignore_ident(_51621_r->_field_vars[0LL]->_field_ident)))) {
		jule::Str _52613_ident = _1a8e524c4_var_out_ident(_51621_r->_field_vars[0LL]);
		jule::Str _52717_obj = ((_52613_ident + jule::Str(" = ", 3)) + _204b36833_gen_expr(_51621_r->_field_expr)) + jule::Str(";\n", 2);
		_52717_obj+=_1a8e8cc29_indent();
		_52717_obj+=(jule::Str("return ", 7) + _52613_ident) + jule::Str(";", 1);
		return _52717_obj;
	}
	return (jule::Str("return ", 7) + _204b36833_gen_expr(_51621_r->_field_expr)) + jule::Str(";", 1);
}



inline jule::Str _2049ab4bb_gen_ret_st(jule::Ref<_206b0557a_RetSt> _53619_r) {
	if ((_53619_r->_field_expr == nullptr) && (_53619_r->_field_vars.len() == 0LL)) {
		return jule::Str("return;", 7);
	}
	if (_53619_r->_field_expr == nullptr) {
		return _2049ab4bb_gen_ret_vars(_53619_r);
	}
	return _2049ab4bb_gen_ret_expr(_53619_r);
}



inline jule::Str _2049ab4bb_gen_ret_st_with_defaults(jule::Ref<_1da411226_TypeKind> _54833_result) {
	jule::Str _54913_obj = jule::Str("return ", 7);
	if (jule::real(_54833_result->_method_tup())) {
		_54913_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto _range_expr = _54833_result->_method_tup()->_field_types;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1da411226_TypeKind> _2049ab4bb_t = *_range_begin;
				_iter_begin_4401049680:;
				{
					_54913_obj+=_204b36833_get_init_expr(_2049ab4bb_t);
					_54913_obj+=jule::Str(",", 1);
				}
				_iter_next_4401049680:;
				++_range_begin;
				if (_range_begin != _range_end) { _2049ab4bb_t = *_range_begin; goto _iter_begin_4401049680; }
				_iter_end_4401049680:;
			}
		}
		_54913_obj=_54913_obj.slice(0LL,static_cast<jule::Int>(_54913_obj.len() - 1LL));
		_54913_obj+=jule::Str(")", 1);
	} else {
		_54913_obj+=_204b36833_get_init_expr(_54833_result);
	}
	_54913_obj+=jule::Str(";", 1);
	return _54913_obj;
}



inline jule::Str _2049ab4bb_gen_recover(jule::Ref<_206b0557a_Recover> _56520_r) {
	jule::Str _56613_obj = jule::Str("try ", 4);
	_56613_obj+=_2049ab4bb_gen_scope(_56520_r->_field_scope);
	_56613_obj+=jule::Str(" catch(jule::Exception e) ", 26);
	if (_56520_r->_field_handler->_method_is_anon()) {
		_1a8e8cc29_add_indent();
		_56613_obj+=jule::Str("{\n", 2);
		_56613_obj+=_1a8e8cc29_indent();
		_56613_obj+=_204b36833_gen_expr(_56520_r->_field_handler_expr);
		_56613_obj+=jule::Str("(jule::exception_to_error(e));", 30);
		if ((!(_56520_r->_field_scope_owner->_field_decl->_method_is_void()))) {
			_56613_obj+=jule::Str("\n", 1);
			_56613_obj+=_1a8e8cc29_indent();
			_1a8e8cc29_done_indent();
			_56613_obj+=_2049ab4bb_gen_ret_st_with_defaults(_56520_r->_field_scope_owner->_field_result);
		} else {
			_1a8e8cc29_done_indent();
		}
		_56613_obj+=jule::Str("\n", 1);
		_56613_obj+=_1a8e8cc29_indent();
		_56613_obj+=jule::Str("}", 1);
	} else {
		_56613_obj+=jule::Str("{\n", 2);
		_1a8e8cc29_add_indent();
		_56613_obj+=_1a8e8cc29_indent();
		_56613_obj+=_204b36833_gen_expr(_56520_r->_field_handler_expr);
		_56613_obj+=jule::Str("(jule::exception_to_error(e));\n", 31);
		_56613_obj+=_1a8e8cc29_indent();
		if (_56520_r->_field_scope_owner->_field_decl->_method_is_void()) {
			_1a8e8cc29_done_indent();
			_56613_obj+=jule::Str(" }", 2);
		} else {
			_56613_obj+=_2049ab4bb_gen_ret_st_with_defaults(_56520_r->_field_scope_owner->_field_result);
			_56613_obj+=jule::Str("\n", 1);
			_1a8e8cc29_done_indent();
			_56613_obj+=_1a8e8cc29_indent();
			_56613_obj+=jule::Str("}", 1);
		}
	}
	return _56613_obj;
}



inline jule::Str _2049ab4bb_gen_data_expr(jule::Ref<_1da2d3bdc_Data> _61422_d) {
	return _204b36833_gen_expr(_61422_d->_field_model) + jule::Str(";", 1);
}



inline jule::Str _2049ab4bb_gen_st(jule::Any _61915_st) {
	{
		auto _match_expr{ _61915_st };
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_Scope>>())) { goto _case_end_4401075120; }
		_case_begin_4401075120:;
		{
			return _2049ab4bb_gen_scope(_61915_st.operator jule::Ref<_206b0557a_Scope>());
		}
		goto _match_end_4401072704;
		_case_end_4401075120:;
		if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4401074192; }
		_case_begin_4401074192:;
		{
			return _1a8e8cc29_gen_var(_61915_st.operator jule::Ref<_1d9e22661_Var>());
		}
		goto _match_end_4401072704;
		_case_end_4401074192:;
		if (!(_match_expr.type_is<jule::Ref<_1da2d3bdc_Data>>())) { goto _case_end_4401074304; }
		_case_begin_4401074304:;
		{
			return _2049ab4bb_gen_data_expr(_61915_st.operator jule::Ref<_1da2d3bdc_Data>());
		}
		goto _match_end_4401072704;
		_case_end_4401074304:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_Conditional>>())) { goto _case_end_4401074416; }
		_case_begin_4401074416:;
		{
			return _2049ab4bb_gen_conditional(_61915_st.operator jule::Ref<_206b0557a_Conditional>());
		}
		goto _match_end_4401072704;
		_case_end_4401074416:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_InfIter>>())) { goto _case_end_4401075392; }
		_case_begin_4401075392:;
		{
			return _2049ab4bb_gen_inf_iter(_61915_st.operator jule::Ref<_206b0557a_InfIter>());
		}
		goto _match_end_4401072704;
		_case_end_4401075392:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_WhileIter>>())) { goto _case_end_4401075504; }
		_case_begin_4401075504:;
		{
			return _2049ab4bb_gen_while_iter(_61915_st.operator jule::Ref<_206b0557a_WhileIter>());
		}
		goto _match_end_4401072704;
		_case_end_4401075504:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_RangeIter>>())) { goto _case_end_4401075616; }
		_case_begin_4401075616:;
		{
			return _2049ab4bb_gen_range_iter(_61915_st.operator jule::Ref<_206b0557a_RangeIter>());
		}
		goto _match_end_4401072704;
		_case_end_4401075616:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_ContSt>>())) { goto _case_end_4401075728; }
		_case_begin_4401075728:;
		{
			return _2049ab4bb_gen_cont(_61915_st.operator jule::Ref<_206b0557a_ContSt>());
		}
		goto _match_end_4401072704;
		_case_end_4401075728:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_Label>>())) { goto _case_end_4401075888; }
		_case_begin_4401075888:;
		{
			return _2049ab4bb_gen_label(_61915_st.operator jule::Ref<_206b0557a_Label>());
		}
		goto _match_end_4401072704;
		_case_end_4401075888:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_GotoSt>>())) { goto _case_end_4401076000; }
		_case_begin_4401076000:;
		{
			return _2049ab4bb_gen_goto(_61915_st.operator jule::Ref<_206b0557a_GotoSt>());
		}
		goto _match_end_4401072704;
		_case_end_4401076000:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_Postfix>>())) { goto _case_end_4401076112; }
		_case_begin_4401076112:;
		{
			return _2049ab4bb_gen_postfix(_61915_st.operator jule::Ref<_206b0557a_Postfix>());
		}
		goto _match_end_4401072704;
		_case_end_4401076112:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_Assign>>())) { goto _case_end_4401076224; }
		_case_begin_4401076224:;
		{
			return _2049ab4bb_gen_assign(_61915_st.operator jule::Ref<_206b0557a_Assign>());
		}
		goto _match_end_4401072704;
		_case_end_4401076224:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_MultiAssign>>())) { goto _case_end_4401076336; }
		_case_begin_4401076336:;
		{
			return _2049ab4bb_gen_multi_assign(_61915_st.operator jule::Ref<_206b0557a_MultiAssign>());
		}
		goto _match_end_4401072704;
		_case_end_4401076336:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_Match>>())) { goto _case_end_4401076448; }
		_case_begin_4401076448:;
		{
			return _2049ab4bb_gen_match(_61915_st.operator jule::Ref<_206b0557a_Match>());
		}
		goto _match_end_4401072704;
		_case_end_4401076448:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_FallSt>>())) { goto _case_end_4401076560; }
		_case_begin_4401076560:;
		{
			return _2049ab4bb_gen_fall_st(_61915_st.operator jule::Ref<_206b0557a_FallSt>());
		}
		goto _match_end_4401072704;
		_case_end_4401076560:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_BreakSt>>())) { goto _case_end_4401076672; }
		_case_begin_4401076672:;
		{
			return _2049ab4bb_gen_break_st(_61915_st.operator jule::Ref<_206b0557a_BreakSt>());
		}
		goto _match_end_4401072704;
		_case_end_4401076672:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_RetSt>>())) { goto _case_end_4401076784; }
		_case_begin_4401076784:;
		{
			return _2049ab4bb_gen_ret_st(_61915_st.operator jule::Ref<_206b0557a_RetSt>());
		}
		goto _match_end_4401072704;
		_case_end_4401076784:;
		if (!(_match_expr.type_is<jule::Ref<_206b0557a_Recover>>())) { goto _case_end_4401076896; }
		_case_begin_4401076896:;
		{
			return _2049ab4bb_gen_recover(_61915_st.operator jule::Ref<_206b0557a_Recover>());
		}
		goto _match_end_4401072704;
		_case_end_4401076896:;
		_case_begin_4400975040:;
		{
			return jule::Str("<unimplemented_stmt>", 20);
		}
		goto _match_end_4401072704;
		_case_end_4400975040:;
		_match_end_4401072704:;
	}
}



inline jule::Str _2049ab4bb_gen_scope(jule::Ref<_206b0557a_Scope> _64418_s) {
	jule::Str _64513_obj = jule::Str("{\n", 2);
	_1a8e8cc29_add_indent();
	{
		auto _range_expr = _64418_s->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _2049ab4bb_st = *_range_begin;
			_iter_begin_4401105680:;
			{
				_64513_obj+=_1a8e8cc29_indent();
				_64513_obj+=_2049ab4bb_gen_st(_2049ab4bb_st);
				_64513_obj+=jule::Str("\n", 1);
			}
			_iter_next_4401105680:;
			++_range_begin;
			if (_range_begin != _range_end) { _2049ab4bb_st = *_range_begin; goto _iter_begin_4401105680; }
			_iter_end_4401105680:;
		}
	}
	_1a8e8cc29_done_indent();
	_64513_obj+=_1a8e8cc29_indent();
	_64513_obj+=jule::Str("}", 1);
	if (_64418_s->_field_deferred) {
		_64513_obj=(jule::Str("__JULE_DEFER(", 13) + _64513_obj) + jule::Str(");", 2);
	}
	return _64513_obj;
}



inline jule::Str _2049ab4bb_gen_fn_scope(jule::Ref<_2053ddd54_FnIns> _66621_f) {
	if (jule::real(_66621_f->_field_owner)) {
		return _2049ab4bb_gen_method_scope(_66621_f);
	}
	return _2049ab4bb_gen_scope(_66621_f->_field_scope);
}



inline jule::Str _2049ab4bb_gen_method_scope(jule::Ref<_2053ddd54_FnIns> _67525_f) {
	return _2049ab4bb_gen_scope(_67525_f->_field_scope);
}



inline jule::Str _204b36833_concat_all_parts(jule::Slice<jule::Str> _7921_parts) {
	jule::Str _8013_s = jule::Str("", 0);
	{
		auto _range_expr = _7921_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _204b36833_part = *_range_begin;
			_iter_begin_4401116032:;
			{
				_8013_s+=_204b36833_part;
			}
			_iter_next_4401116032:;
			++_range_begin;
			if (_range_begin != _range_end) { _204b36833_part = *_range_begin; goto _iter_begin_4401116032; }
			_iter_end_4401116032:;
		}
	}
	return _8013_s;
}



inline jule::Str _204b36833_get_accessor(jule::Ref<_1da411226_TypeKind> _8721_t) {
	if (jule::real(_8721_t->_method_ref()) || jule::real(_8721_t->_method_ptr())) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



inline jule::Str _204b36833_decompose_common_esq(jule::U8 _9425_b) {
	{
		auto _match_expr{ _9425_b };
		if (!(('\\') == _match_expr)) { goto _case_end_4401122832; }
		_case_begin_4401122832:;
		{
			return jule::Str("\\\\", 2);
		}
		goto _match_end_4401121744;
		_case_end_4401122832:;
		if (!(('\'') == _match_expr)) { goto _case_end_4401122944; }
		_case_begin_4401122944:;
		{
			return jule::Str("'", 1);
		}
		goto _match_end_4401121744;
		_case_end_4401122944:;
		if (!(('\"') == _match_expr)) { goto _case_end_4401123904; }
		_case_begin_4401123904:;
		{
			return jule::Str("\\\"", 2);
		}
		goto _match_end_4401121744;
		_case_end_4401123904:;
		if (!(('\a') == _match_expr)) { goto _case_end_4401124016; }
		_case_begin_4401124016:;
		{
			return jule::Str("\\a", 2);
		}
		goto _match_end_4401121744;
		_case_end_4401124016:;
		if (!(('\b') == _match_expr)) { goto _case_end_4401124128; }
		_case_begin_4401124128:;
		{
			return jule::Str("\\b", 2);
		}
		goto _match_end_4401121744;
		_case_end_4401124128:;
		if (!(('\f') == _match_expr)) { goto _case_end_4401124240; }
		_case_begin_4401124240:;
		{
			return jule::Str("\\f", 2);
		}
		goto _match_end_4401121744;
		_case_end_4401124240:;
		if (!(('\n') == _match_expr)) { goto _case_end_4401123216; }
		_case_begin_4401123216:;
		{
			return jule::Str("\\n", 2);
		}
		goto _match_end_4401121744;
		_case_end_4401123216:;
		if (!(('\r') == _match_expr)) { goto _case_end_4401123328; }
		_case_begin_4401123328:;
		{
			return jule::Str("\\r", 2);
		}
		goto _match_end_4401121744;
		_case_end_4401123328:;
		if (!(('\t') == _match_expr)) { goto _case_end_4401123440; }
		_case_begin_4401123440:;
		{
			return jule::Str("\\t", 2);
		}
		goto _match_end_4401121744;
		_case_end_4401123440:;
		if (!(('\v') == _match_expr)) { goto _case_end_4401123568; }
		_case_begin_4401123568:;
		{
			return jule::Str("\\v", 2);
		}
		goto _match_end_4401121744;
		_case_end_4401123568:;
		_case_begin_4401121840:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4401121744;
		_case_end_4401121840:;
		_match_end_4401121744:;
	}
}



inline jule::Str _204b36833_sbtoa(jule::U8 _11010_b) {
	if (_11010_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_11010_b <= 127LL) {
		jule::Str _11613_seq = _204b36833_decompose_common_esq(_11010_b);
		if (_11613_seq != jule::Str("", 0)) {
			return _11613_seq;
		}
		if ((32LL <= _11010_b) && (_11010_b <= 126LL)) {
			return static_cast<jule::Str>(_11010_b);
		}
	}
	jule::Str _1269_seq = _2049bd7b9_fmt_uint(static_cast<jule::U64>(_11010_b),8LL);
	if (_1269_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1269_seq;
	}
	return jule::Str("\\", 1) + _1269_seq;
}



inline jule::Str _204b36833_get_str_model(jule::Ref<_1a89ca987_Const> _13318_c) {
	jule::Str _1349_content = _13318_c->_method_read_str();
	jule::Slice<jule::U8> _1359_bytes = static_cast<jule::Slice<jule::U8>>(_1349_content);
	jule::Str _1369_len = _2049bd7b9_fmt_int(static_cast<jule::I64>(_1359_bytes.len()),10LL);
	jule::Str _13813_lit = jule::Str("", 0);
	{
		auto _range_expr = _1359_bytes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::U8 _204b36833_b = *_range_begin;
			_iter_begin_4387764048:;
			{
				_13813_lit+=_204b36833_sbtoa(_204b36833_b);
			}
			_iter_next_4387764048:;
			++_range_begin;
			if (_range_begin != _range_end) { _204b36833_b = *_range_begin; goto _iter_begin_4387764048; }
			_iter_end_4387764048:;
		}
	}
	return ((((_1a8e524c4_as_jt(jule::Str("str", 3)) + jule::Str("(\"", 2)) + _13813_lit) + jule::Str("\", ", 3)) + _1369_len) + jule::Str(")", 1);
}



inline jule::Str _204b36833_get_bool_model(jule::Ref<_1a89ca987_Const> _14619_c) {
	if (_14619_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _204b36833_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _204b36833_gen_float_special_cases(jule::F64 _15528_x) {
	{
		if (!((_204ae433a_is_nan(_15528_x)))) { goto _case_end_4387770560; }
		_case_begin_4387770560:;
		{
			return jule::Str("NAN", 3);
		}
		goto _match_end_4387770016;
		_case_end_4387770560:;
		if (!((_204ae433a_is_inf(_15528_x,1LL)))) { goto _case_end_4387770672; }
		_case_begin_4387770672:;
		{
			return jule::Str("INFINITY", 8);
		}
		goto _match_end_4387770016;
		_case_end_4387770672:;
		if (!((_204ae433a_is_inf(_15528_x,-1LL)))) { goto _case_end_4387770784; }
		_case_begin_4387770784:;
		{
			return jule::Str("-INFINITY", 9);
		}
		goto _match_end_4387770016;
		_case_end_4387770784:;
		_case_begin_4387770192:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4387770016;
		_case_end_4387770192:;
		_match_end_4387770016:;
	}
}



inline jule::Str _204b36833_ftoa(jule::F64 _1649_f,jule::Int _16417_bitsize) {
	if (_16417_bitsize != 32LL) {
		if (_1649_f == static_cast<jule::F64>(static_cast<jule::I64>(_1649_f))) {
			return _204b36833_i64toa(static_cast<jule::I64>(_1649_f));
		}
		if (_1649_f == static_cast<jule::F64>(static_cast<jule::U64>(_1649_f))) {
			return _204b36833_u64toa(static_cast<jule::U64>(_1649_f));
		}
	}
	jule::Str _17413_m = _203830374_fmt_float(_1649_f,'f',-1LL,_16417_bitsize);
	if (_17413_m.find(jule::Str(".", 1)) == -1LL) {
		_17413_m+=jule::Str(".0", 2);
	}
	return _17413_m;
}



inline jule::Str _204b36833_get_f32_model(jule::Ref<_1a89ca987_Const> _18118_c) {
	jule::F64 _1829_x = _18118_c->_method_as_f64();
	jule::Str _1859_f = _204b36833_gen_float_special_cases(_1829_x);
	if (_1859_f != jule::Str("", 0)) {
		return _1859_f;
	}
	{
		if (!((_1829_x == 340282346638528860000000000000000000000.0))) { goto _case_end_4387787872; }
		_case_begin_4387787872:;
		{
			return jule::Str("jule::MAX_F32", 13);
		}
		goto _match_end_4387787232;
		_case_end_4387787872:;
		if (!((_1829_x == -340282346638528860000000000000000000000.0))) { goto _case_end_4387788000; }
		_case_begin_4387788000:;
		{
			return jule::Str("jule::MIN_F32", 13);
		}
		goto _match_end_4387787232;
		_case_end_4387788000:;
		_match_end_4387787232:;
	}
	return _204b36833_ftoa(_1829_x,32LL) + jule::Str("f", 1);
}



inline jule::Str _204b36833_get_f64_model(jule::Ref<_1a89ca987_Const> _19818_c) {
	jule::F64 _1999_x = _19818_c->_method_as_f64();
	jule::Str _2029_f = _204b36833_gen_float_special_cases(_1999_x);
	if (_2029_f != jule::Str("", 0)) {
		return _2029_f;
	}
	{
		if (!((_1999_x == jule::MAX_F64))) { goto _case_end_4387793648; }
		_case_begin_4387793648:;
		{
			return jule::Str("jule::MAX_F64", 13);
		}
		goto _match_end_4387793120;
		_case_end_4387793648:;
		if (!((_1999_x == jule::MIN_F64))) { goto _case_end_4387793760; }
		_case_begin_4387793760:;
		{
			return jule::Str("jule::MIN_F64", 13);
		}
		goto _match_end_4387793120;
		_case_end_4387793760:;
		_match_end_4387793120:;
	}
	return _204b36833_ftoa(_1999_x,64LL);
}



inline jule::Str _204b36833_get_float_model(jule::Ref<_1da2d3bdc_Data> _21524_d) {
	{
		if (!((_21524_d->_field_kind->_method_prim()->_method_is_f32()))) { goto _case_end_4387798864; }
		_case_begin_4387798864:;
		{
			return _204b36833_get_f32_model(_21524_d->_field_constant);
		}
		goto _match_end_4387797216;
		_case_end_4387798864:;
		_case_begin_4387797504:;
		{
			return _204b36833_get_f64_model(_21524_d->_field_constant);
		}
		goto _match_end_4387797216;
		_case_end_4387797504:;
		_match_end_4387797216:;
	}
}



inline jule::Str _204b36833_i64toa(jule::I64 _22211_x) {
	{
		if (!((_22211_x == jule::MAX_I64))) { goto _case_end_4387800464; }
		_case_begin_4387800464:;
		{
			return jule::Str("jule::MAX_I64", 13);
		}
		goto _match_end_4387797792;
		_case_end_4387800464:;
		if (!((_22211_x == jule::MIN_I64))) { goto _case_end_4387800592; }
		_case_begin_4387800592:;
		{
			return jule::Str("jule::MIN_I64", 13);
		}
		goto _match_end_4387797792;
		_case_end_4387800592:;
		_match_end_4387797792:;
	}
	jule::Str _2289_fmt = _2049bd7b9_fmt_int(_22211_x,10LL);
	if (_2037d86a1_is_64bit(jule::Str("i386", 4))) {
		return _2289_fmt + jule::Str("LL", 2);
	}
	return _2289_fmt + jule::Str("L", 1);
}



inline jule::Str _204b36833_get_i64_model(jule::Ref<_1a89ca987_Const> _23518_c) {
	return _204b36833_i64toa(static_cast<jule::I64>(_23518_c->_method_read_i64()));
}



inline jule::Str _204b36833_u64toa(jule::U64 _23911_x) {
	{
		if (!((_23911_x == jule::MAX_U64))) { goto _case_end_4387809280; }
		_case_begin_4387809280:;
		{
			return jule::Str("jule::MAX_U64", 13);
		}
		goto _match_end_4387809120;
		_case_end_4387809280:;
		_match_end_4387809120:;
	}
	jule::Str _2459_fmt = _2049bd7b9_fmt_uint(_23911_x,10LL);
	if (_2037d86a1_is_64bit(jule::Str("i386", 4))) {
		return _2459_fmt + jule::Str("LLU", 3);
	}
	return _2459_fmt + jule::Str("LU", 2);
}



inline jule::Str _204b36833_get_u64_model(jule::Ref<_1a89ca987_Const> _25218_c) {
	return _204b36833_u64toa(static_cast<jule::U64>(_25218_c->_method_read_u64()));
}



inline jule::Str _204b36833_gen_const_expr(jule::Ref<_1da2d3bdc_Data> _25623_d) {
	{
		if (!((_25623_d->_field_constant->_method_is_str()))) { goto _case_end_4387816096; }
		_case_begin_4387816096:;
		{
			return _204b36833_get_str_model(_25623_d->_field_constant);
		}
		goto _match_end_4387815552;
		_case_end_4387816096:;
		if (!((_25623_d->_field_constant->_method_is_bool()))) { goto _case_end_4387816208; }
		_case_begin_4387816208:;
		{
			return _204b36833_get_bool_model(_25623_d->_field_constant);
		}
		goto _match_end_4387815552;
		_case_end_4387816208:;
		if (!((_25623_d->_field_constant->_method_is_f64()))) { goto _case_end_4387817424; }
		_case_begin_4387817424:;
		{
			return _204b36833_get_float_model(_25623_d);
		}
		goto _match_end_4387815552;
		_case_end_4387817424:;
		if (!((_25623_d->_field_constant->_method_is_i64()))) { goto _case_end_4387817536; }
		_case_begin_4387817536:;
		{
			return _204b36833_get_i64_model(_25623_d->_field_constant);
		}
		goto _match_end_4387815552;
		_case_end_4387817536:;
		if (!((_25623_d->_field_constant->_method_is_u64()))) { goto _case_end_4387817648; }
		_case_begin_4387817648:;
		{
			return _204b36833_get_u64_model(_25623_d->_field_constant);
		}
		goto _match_end_4387815552;
		_case_end_4387817648:;
		if (!((_25623_d->_field_constant->_method_is_nil()))) { goto _case_end_4387817760; }
		_case_begin_4387817760:;
		{
			return _204b36833_get_nil_model();
		}
		goto _match_end_4387815552;
		_case_end_4387817760:;
		_case_begin_4387815680:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4387815552;
		_case_end_4387815680:;
		_match_end_4387815552:;
	}
}



inline jule::Str _204b36833_gen_const_expr_model(jule::Ref<_1a89ca987_Const> _26825_m) {
	{
		if (!((_26825_m->_method_is_str()))) { goto _case_end_4387827504; }
		_case_begin_4387827504:;
		{
			return _204b36833_get_str_model(_26825_m);
		}
		goto _match_end_4387826352;
		_case_end_4387827504:;
		if (!((_26825_m->_method_is_bool()))) { goto _case_end_4387827616; }
		_case_begin_4387827616:;
		{
			return _204b36833_get_bool_model(_26825_m);
		}
		goto _match_end_4387826352;
		_case_end_4387827616:;
		if (!((_26825_m->_method_is_f64()))) { goto _case_end_4387828832; }
		_case_begin_4387828832:;
		{
			return _204b36833_get_f64_model(_26825_m);
		}
		goto _match_end_4387826352;
		_case_end_4387828832:;
		if (!((_26825_m->_method_is_i64()))) { goto _case_end_4387828944; }
		_case_begin_4387828944:;
		{
			return _204b36833_get_i64_model(_26825_m);
		}
		goto _match_end_4387826352;
		_case_end_4387828944:;
		if (!((_26825_m->_method_is_u64()))) { goto _case_end_4387829056; }
		_case_begin_4387829056:;
		{
			return _204b36833_get_u64_model(_26825_m);
		}
		goto _match_end_4387826352;
		_case_end_4387829056:;
		if (!((_26825_m->_method_is_nil()))) { goto _case_end_4387829168; }
		_case_begin_4387829168:;
		{
			return _204b36833_get_nil_model();
		}
		goto _match_end_4387826352;
		_case_end_4387829168:;
		_case_begin_4387826480:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4387826352;
		_case_end_4387826480:;
		_match_end_4387826352:;
	}
}



inline jule::Str _204b36833_gen_div_by_zero_binop_expr_model(jule::Str _28037_op,jule::Any _28050_l,jule::Any _28068_r) {
	jule::Str _28113_op_func = jule::Str("", 0);
	{
		auto _match_expr{ _28037_op };
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4387837680; }
		_case_begin_4387837680:;
		{
			_28113_op_func=jule::Str("div", 3);
		}
		goto _match_end_4387837280;
		_case_end_4387837680:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4387837792; }
		_case_begin_4387837792:;
		{
			_28113_op_func=jule::Str("mod", 3);
		}
		goto _match_end_4387837280;
		_case_end_4387837792:;
		_match_end_4387837280:;
	}
	if (_205094587_is_opt_enabled(jule::Str("--opt-math", 10))) {
		{
			auto _match_expr{ _28068_r };
			if (!(_match_expr.type_is<jule::Ref<_1a89ca987_Const>>())) { goto _case_end_4387840528; }
			_case_begin_4387840528:;
			{
				_28113_op_func=jule::Str("unsafe_", 7) + _28113_op_func;
			}
			goto _match_end_4387840432;
			_case_end_4387840528:;
			_match_end_4387840432:;
		}
	}
	jule::Str _29413_obj = jule::Str("jule::", 6);
	_29413_obj+=_28113_op_func;
	_29413_obj+=jule::Str("(", 1);
	_29413_obj+=_204b36833_gen_expr(_28050_l);
	_29413_obj+=jule::Str(",", 1);
	_29413_obj+=_204b36833_gen_expr(_28068_r);
	_29413_obj+=jule::Str(")", 1);
	return _29413_obj;
}



inline jule::Str _204b36833_gen_binop_expr_model(jule::Ref<_206e63542_BinopExprModel> _30429_m) {
	{
		auto _match_expr{ _30429_m->_field_op };
		if (!((jule::Str("/", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr)) { goto _case_end_4387845488; }
		_case_begin_4387845488:;
		{
			return _204b36833_gen_div_by_zero_binop_expr_model(_30429_m->_field_op,_30429_m->_field_left,_30429_m->_field_right);
		}
		goto _match_end_4387844336;
		_case_end_4387845488:;
		_match_end_4387844336:;
	}
	jule::Str _31113_obj = jule::Str("(", 1);
	_31113_obj+=_204b36833_gen_expr_model(_30429_m->_field_left);
	_31113_obj+=jule::Str(" ", 1);
	_31113_obj+=_30429_m->_field_op;
	_31113_obj+=jule::Str(" ", 1);
	_31113_obj+=_204b36833_gen_expr_model(_30429_m->_field_right);
	_31113_obj+=jule::Str(")", 1);
	return _31113_obj;
}



inline jule::Str _204b36833_gen_var_expr_model(jule::Ref<_1d9e22661_Var> _32127_m) {
	if (_32127_m->_field_cpp_linked) {
		jule::Ref<_2053703bd_Directive> _32313_d = _1a8e8c223_find_directive(_32127_m->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_32313_d)) {
			return (_204b36833_concat_all_parts(_32313_d->_field_args) + jule::Str("::", 2)) + _1a8e524c4_var_out_ident(_32127_m);
		}
	}
	return _1a8e524c4_var_out_ident(_32127_m);
}



inline jule::Str _204b36833_gen_struct_expr_model(jule::Ref<_2053cdc01_Struct> _33126_m) {
	return _1a8e8c223_gen_struct_kind(_33126_m);
}



inline jule::Str _204b36833_gen_struct_ins_expr_model(jule::Ref<_2053cdc01_StructIns> _33534_m) {
	return _1a8e8c223_gen_struct_kind_ins(_33534_m);
}



inline jule::Str _204b36833_gen_unary_expr_model(jule::Ref<_206e63542_UnaryExprModel> _33929_m) {
	{
		auto _match_expr{ _33929_m->_field_op };
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4900467680; }
		_case_begin_4900467680:;
		{
			return (jule::Str("(~(", 3) + _204b36833_gen_expr(_33929_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_4900462640;
		_case_end_4900467680:;
		_case_begin_4900463200:;
		{
			return (((jule::Str("(", 1) + _33929_m->_field_op) + jule::Str("(", 1)) + _204b36833_gen_expr(_33929_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_4900462640;
		_case_end_4900463200:;
		_match_end_4900462640:;
	}
}



inline jule::Str _204b36833_gen_get_ref_ptr_expr_model(jule::Ref<_206e63542_GetRefPtrExprModel> _34635_m) {
	return (jule::Str("(", 1) + _204b36833_gen_expr(_34635_m->_field_expr)) + jule::Str(").alloc", 7);
}



inline jule::Str _204b36833_gen_cpp_struct_lit_expr_model(jule::Ref<_206e63542_StructLitExprModel> _35038_m) {
	jule::Str _35113_obj = jule::Str("(", 1) + _1a8e8c223_gen_struct_kind_ins(_35038_m->_field_strct);
	_35113_obj+=jule::Str("){", 2);
	if (_35038_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto _range_expr = _35038_m->_field_strct->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_2053cdc01_FieldIns> _204b36833_f = *_range_begin;
				_iter_begin_4900473792:;
				{
					if (_35038_m->_field_strct->_field_decl->_field_cpp_linked) {
						{
							auto _range_expr = _35038_m->_field_args;
							if (_range_expr.begin() != _range_expr.end()) {
								auto _range_begin = _range_expr.begin();
								const auto _range_end = _range_expr.end();
								jule::Ref<_206e63542_StructArgExprModel> _204b36833_arg = *_range_begin;
								_iter_begin_4900476656:;
								{
									if (_204b36833_arg->_field_field == _204b36833_f) {
										_35113_obj+=jule::Str(".", 1);
										_35113_obj+=_1a8e524c4_field_out_ident(_204b36833_f->_field_decl);
										_35113_obj+=jule::Str("=", 1);
										_35113_obj+=_204b36833_gen_expr(_204b36833_arg->_field_expr) + jule::Str(",", 1);
										goto _iter_next_4900473792;
									}
								}
								_iter_next_4900476656:;
								++_range_begin;
								if (_range_begin != _range_end) { _204b36833_arg = *_range_begin; goto _iter_begin_4900476656; }
								_iter_end_4900476656:;
							}
						}
						goto _iter_next_4900473792;
					}
					_35113_obj+=_1a8e524c4_field_out_ident(_204b36833_f->_field_decl) + jule::Str(": ", 2);
					{
						auto _range_expr = _35038_m->_field_args;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_206e63542_StructArgExprModel> _204b36833_arg = *_range_begin;
							_iter_begin_4900477504:;
							{
								if (_204b36833_arg->_field_field == _204b36833_f) {
									_35113_obj+=_204b36833_gen_expr(_204b36833_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_4900473792;
								}
							}
							_iter_next_4900477504:;
							++_range_begin;
							if (_range_begin != _range_end) { _204b36833_arg = *_range_begin; goto _iter_begin_4900477504; }
							_iter_end_4900477504:;
						}
					}
					_35113_obj+=_204b36833_get_init_expr(_204b36833_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_4900473792:;
				++_range_begin;
				if (_range_begin != _range_end) { _204b36833_f = *_range_begin; goto _iter_begin_4900473792; }
				_iter_end_4900473792:;
			}
		}
		_35113_obj=_35113_obj.slice(0LL,static_cast<jule::Int>(_35113_obj.len() - 1LL));
	}
	_35113_obj+=jule::Str("}", 1);
	return _35113_obj;
}



inline jule::Str _204b36833_gen_struct_lit_expr_model(jule::Ref<_206e63542_StructLitExprModel> _38434_m) {
	if (_38434_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _204b36833_gen_cpp_struct_lit_expr_model(_38434_m);
	}
	jule::Str _38913_obj = _1a8e524c4_struct_ins_out_ident(_38434_m->_field_strct);
	_38913_obj+=jule::Str("(", 1);
	if (_38434_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto _range_expr = _38434_m->_field_strct->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_2053cdc01_FieldIns> _204b36833_f = *_range_begin;
				_iter_begin_4900494304:;
				{
					{
						auto _range_expr = _38434_m->_field_args;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_206e63542_StructArgExprModel> _204b36833_arg = *_range_begin;
							_iter_begin_4900496192:;
							{
								if (_204b36833_arg->_field_field == _204b36833_f) {
									_38913_obj+=_204b36833_gen_expr(_204b36833_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_4900494304;
								}
							}
							_iter_next_4900496192:;
							++_range_begin;
							if (_range_begin != _range_end) { _204b36833_arg = *_range_begin; goto _iter_begin_4900496192; }
							_iter_end_4900496192:;
						}
					}
					_38913_obj+=_204b36833_get_init_expr(_204b36833_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_4900494304:;
				++_range_begin;
				if (_range_begin != _range_end) { _204b36833_f = *_range_begin; goto _iter_begin_4900494304; }
				_iter_end_4900494304:;
			}
		}
		_38913_obj=_38913_obj.slice(0LL,static_cast<jule::Int>(_38913_obj.len() - 1LL));
	}
	_38913_obj+=jule::Str(")", 1);
	return _38913_obj;
}



inline jule::Str _204b36833_gen_alloc_struct_lit_expr_model(jule::Ref<_206e63542_AllocStructLitExprModel> _40840_m) {
	jule::Str _40913_obj = jule::Str("jule::new_struct<", 17);
	_40913_obj+=_1a8e524c4_struct_ins_out_ident(_40840_m->_field_lit->_field_strct);
	_40913_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_40913_obj+=_204b36833_gen_struct_lit_expr_model(_40840_m->_field_lit);
	_40913_obj+=jule::Str(")", 1);
	return _40913_obj;
}



inline jule::Str _204b36833_gen_casting_expr_model(jule::Ref<_206e63542_CastingExprModel> _41731_m) {
	jule::Str _41813_obj = jule::Str("", 0);
	{
		if (!((jule::real(_41731_m->_field_kind->_method_prim()) && _41731_m->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4900511744; }
		_case_begin_4900511744:;
		{
			_41813_obj+=_1a8e8c223_gen_type_kind(_41731_m->_field_kind);
			_41813_obj+=jule::Str("(", 1);
			_41813_obj+=_204b36833_gen_expr_model(_41731_m->_field_expr);
			_41813_obj+=jule::Str(")", 1);
		}
		goto _match_end_4900507888;
		_case_end_4900511744:;
		if (!((jule::real(_41731_m->_field_expr_kind->_method_ptr())) || (jule::real(_41731_m->_field_kind->_method_ptr())))) { goto _case_end_4900511856; }
		_case_begin_4900511856:;
		{
			_41813_obj+=jule::Str("((", 2);
			_41813_obj+=_1a8e8c223_gen_type_kind(_41731_m->_field_kind);
			_41813_obj+=jule::Str(")(", 2);
			_41813_obj+=_204b36833_gen_expr(_41731_m->_field_expr);
			_41813_obj+=jule::Str("))", 2);
		}
		goto _match_end_4900507888;
		_case_end_4900511856:;
		if (!((jule::real(_41731_m->_field_expr_kind->_method_trt())) || (jule::real(_41731_m->_field_expr_kind->_method_prim()) && _41731_m->_field_expr_kind->_method_prim()->_method_is_any()))) { goto _case_end_4900511376; }
		_case_begin_4900511376:;
		{
			_41813_obj+=_204b36833_gen_expr_model(_41731_m->_field_expr);
			_41813_obj+=_204b36833_get_accessor(_41731_m->_field_expr_kind);
			_41813_obj+=jule::Str("operator ", 9);
			_41813_obj+=_1a8e8c223_gen_type_kind(_41731_m->_field_kind);
			_41813_obj+=jule::Str("()", 2);
		}
		goto _match_end_4900507888;
		_case_end_4900511376:;
		_case_begin_4900508016:;
		{
			_41813_obj+=jule::Str("static_cast<", 12);
			_41813_obj+=_1a8e8c223_gen_type_kind(_41731_m->_field_kind);
			_41813_obj+=jule::Str(">(", 2);
			_41813_obj+=_204b36833_gen_expr(_41731_m->_field_expr);
			_41813_obj+=jule::Str(")", 1);
		}
		goto _match_end_4900507888;
		_case_end_4900508016:;
		_match_end_4900507888:;
	}
	return _41813_obj;
}



inline jule::Str _204b36833_gen_arg_expr_models(jule::Slice<jule::Any> _45228_models) {
	if (_45228_models.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _45713_obj = jule::Str("", 0);
	{
		auto _range_expr = _45228_models;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _204b36833_m = *_range_begin;
			_iter_begin_4397450832:;
			{
				_45713_obj+=_204b36833_gen_expr(_204b36833_m) + jule::Str(",", 1);
			}
			_iter_next_4397450832:;
			++_range_begin;
			if (_range_begin != _range_end) { _204b36833_m = *_range_begin; goto _iter_begin_4397450832; }
			_iter_end_4397450832:;
		}
	}
	_45713_obj=_45713_obj.slice(0LL,static_cast<jule::Int>(_45713_obj.len() - 1LL));
	return _45713_obj;
}



inline jule::Str _204b36833_gen_expr_model_for_call(jule::Any _46532_expr) {
	{
		auto _match_expr{ _46532_expr };
		if (!(_match_expr.type_is<jule::Ref<_2053ddd54_FnIns>>())) { goto _case_end_4396766544; }
		_case_begin_4396766544:;
		{
			return _204b36833_gen_fn_ins_expr_model(_46532_expr.operator jule::Ref<_2053ddd54_FnIns>());
		}
		goto _match_end_4396719648;
		_case_end_4396766544:;
		_case_begin_4396997360:;
		{
			return _204b36833_gen_expr_model(_46532_expr);
		}
		goto _match_end_4396719648;
		_case_end_4396997360:;
		_match_end_4396719648:;
	}
}



inline jule::Str _204b36833_gen_fn_call_expr_model(jule::Ref<_206e63542_FnCallExprModel> _47231_m) {
	jule::Str _47313_obj = _204b36833_gen_expr_model_for_call(_47231_m->_field_expr);
	if ((!(_47231_m->_field_func->_method_is_builtin()))) {
		if (_47231_m->_field_func->_field_decl->_field_cpp_linked && (_47231_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_1a8e8c223_has_directive(_47231_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_47313_obj+=jule::Str("<", 1);
				{
					auto _range_expr = _47231_m->_field_func->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1da411226_TypeKind> _204b36833_g = *_range_begin;
						_iter_begin_4397461232:;
						{
							_47313_obj+=_1a8e8c223_gen_type_kind(_204b36833_g) + jule::Str(",", 1);
						}
						_iter_next_4397461232:;
						++_range_begin;
						if (_range_begin != _range_end) { _204b36833_g = *_range_begin; goto _iter_begin_4397461232; }
						_iter_end_4397461232:;
					}
				}
				_47313_obj=_47313_obj.slice(0LL,static_cast<jule::Int>(_47313_obj.len() - 1LL));
				_47313_obj+=jule::Str(">", 1);
			}
		}
	}
	_47313_obj+=jule::Str("(", 1);
	_47313_obj+=_204b36833_gen_arg_expr_models(_47231_m->_field_args);
	_47313_obj+=jule::Str(")", 1);
	if (_47231_m->_field_is_co) {
		_47313_obj=(jule::Str("__JULE_CO(", 10) + _47313_obj) + jule::Str(")", 1);
	}
	return _47313_obj;
}



inline jule::Str _204b36833_gen_slice_expr_model(jule::Ref<_206e63542_SliceExprModel> _49729_m) {
	jule::Str _49813_obj = _1a8e8c223_as_slice_kind(_49729_m->_field_elem_kind);
	_49813_obj+=jule::Str("({", 2);
	_49813_obj+=_204b36833_gen_arg_expr_models(_49729_m->_field_elems);
	_49813_obj+=jule::Str("})", 2);
	return _49813_obj;
}



inline jule::Str _204b36833_gen_indexing_expr_model(jule::Ref<_206e63542_IndexigExprModel> _50532_m) {
	jule::Str _50613_obj = _204b36833_gen_expr_model(_50532_m->_field_expr->_field_model);
	if ((_50532_m->_field_index->_method_is_const() && jule::real(_50532_m->_field_expr->_field_kind->_method_arr())) && _205094587_is_opt_enabled(jule::Str("--opt-access", 12))) {
		_50613_obj+=jule::Str(".__at(", 6);
		_50613_obj+=_204b36833_gen_expr(_50532_m->_field_index->_field_model);
		_50613_obj+=jule::Str(")", 1);
	} else {
		_50613_obj+=jule::Str("[", 1);
		_50613_obj+=_204b36833_gen_expr(_50532_m->_field_index->_field_model);
		_50613_obj+=jule::Str("]", 1);
	}
	return _50613_obj;
}



inline jule::Str _204b36833_gen_anon_fn_expr_model(jule::Ref<_206e63542_AnonFnExprModel> _51931_m) {
	jule::Str _52013_obj = _1a8e8c223_gen_fn_kind(_51931_m->_field_func);
	_52013_obj+=jule::Str("([=]", 4);
	_52013_obj+=_1a8e8cc29_gen_params_ins(_51931_m->_field_func->_field_params);
	_52013_obj+=jule::Str(" mutable -> ", 12);
	_52013_obj+=_1a8e8cc29_gen_fn_ins_result(_51931_m->_field_func);
	_52013_obj+=jule::Str(" ", 1);
	_52013_obj+=_2049ab4bb_gen_fn_scope(_51931_m->_field_func);
	_52013_obj+=jule::Str(")", 1);
	return _52013_obj;
}



inline jule::Str _204b36833_gen_map_expr_model(jule::Ref<_206e63542_MapExprModel> _53127_m) {
	jule::Str _53213_obj = _1a8e524c4_as_jt(jule::Str("map", 3));
	_53213_obj+=jule::Str("<", 1);
	_53213_obj+=_1a8e8c223_gen_type_kind(_53127_m->_field_key_kind);
	_53213_obj+=jule::Str(",", 1);
	_53213_obj+=_1a8e8c223_gen_type_kind(_53127_m->_field_val_kind);
	_53213_obj+=jule::Str(">({", 3);
	if (_53127_m->_field_entries.len() > 0LL) {
		{
			auto _range_expr = _53127_m->_field_entries;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_206e63542_KeyValPairExprModel> _204b36833_pair = *_range_begin;
				_iter_begin_4397487920:;
				{
					jule::Str _54021_pair_obj = jule::Str("{", 1);
					_54021_pair_obj+=_204b36833_gen_expr(_204b36833_pair->_field_key);
					_54021_pair_obj+=jule::Str(",", 1);
					_54021_pair_obj+=_204b36833_gen_expr(_204b36833_pair->_field_val);
					_54021_pair_obj+=jule::Str("}", 1);
					_53213_obj+=_54021_pair_obj;
					_53213_obj+=jule::Str(",", 1);
				}
				_iter_next_4397487920:;
				++_range_begin;
				if (_range_begin != _range_end) { _204b36833_pair = *_range_begin; goto _iter_begin_4397487920; }
				_iter_end_4397487920:;
			}
		}
		_53213_obj=_53213_obj.slice(0LL,static_cast<jule::Int>(_53213_obj.len() - 1LL));
	}
	_53213_obj+=jule::Str("})", 2);
	return _53213_obj;
}



inline jule::Str _204b36833_gen_slicing_expr_model(jule::Ref<_206e63542_SlicingExprModel> _55431_m) {
	jule::Str _55513_obj = _204b36833_gen_expr_model(_55431_m->_field_expr);
	_55513_obj+=jule::Str(".slice(", 7);
	_55513_obj+=_204b36833_gen_expr(_55431_m->_field_left);
	if (_55431_m->_field_right != nullptr) {
		_55513_obj+=jule::Str(",", 1);
		_55513_obj+=_204b36833_gen_expr(_55431_m->_field_right);
	}
	_55513_obj+=jule::Str(")", 1);
	return _55513_obj;
}



inline jule::Str _204b36833_gen_trait_sub_ident_expr_model(jule::Ref<_206e63542_TraitSubIdentExprModel> _56639_m) {
	jule::Str _56713_obj = _204b36833_gen_expr_model(_56639_m->_field_expr);
	_56713_obj+=jule::Str(".get()._method_", 15);
	_56713_obj+=_56639_m->_field_ident;
	return _56713_obj;
}



inline jule::Str _204b36833_gen_struct_sub_ident_expr_model(jule::Ref<_206e63542_StructSubIdentExprModel> _57340_m) {
	jule::Str _57413_obj = _204b36833_gen_expr_model(_57340_m->_field_expr);
	_57413_obj+=_204b36833_get_accessor(_57340_m->_field_expr_kind);
	if (jule::real(_57340_m->_field_field)) {
		_57413_obj+=_1a8e524c4_field_out_ident(_57340_m->_field_field->_field_decl);
	} else {
		_57413_obj+=_1a8e524c4_fn_ins_out_ident(_57340_m->_field_method);
	}
	return _57413_obj;
}



inline jule::Str _204b36833_gen_common_ident_expr_model(jule::Ref<_206e63542_CommonIdentExprModel> _58432_m) {
	return _58432_m->_field_ident;
}



inline jule::Str _204b36833_gen_common_sub_ident_expr_model(jule::Ref<_206e63542_CommonSubIdentExprModel> _58840_m) {
	jule::Str _58913_obj = _204b36833_gen_expr_model(_58840_m->_field_expr);
	_58913_obj+=_204b36833_get_accessor(_58840_m->_field_expr_kind);
	_58913_obj+=_58840_m->_field_ident;
	return _58913_obj;
}



inline jule::Str _204b36833_gen_array_expr_model(jule::Ref<_206e63542_ArrayExprModel> _59529_m) {
	jule::Str _59613_obj = _1a8e8c223_gen_array_kind(_59529_m->_field_kind);
	_59613_obj+=jule::Str("({", 2);
	_59613_obj+=_204b36833_gen_arg_expr_models(_59529_m->_field_elems);
	_59613_obj+=jule::Str("})", 2);
	return _59613_obj;
}



inline jule::Str _204b36833_gen_fn_ins_expr_model_common(jule::Ref<_2053ddd54_FnIns> _60537_m) {
	return ((_1a8e8c223_gen_fn_kind(_60537_m) + jule::Str("(", 1)) + _204b36833_gen_fn_ins_expr_model(_60537_m)) + jule::Str(")", 1);
}



inline jule::Str _204b36833_gen_fn_ins_expr_model(jule::Ref<_2053ddd54_FnIns> _61030_m) {
	if (jule::real(_61030_m->_field_decl) && _61030_m->_field_decl->_field_cpp_linked) {
		jule::Ref<_2053703bd_Directive> _61213_d = _1a8e8c223_find_directive(_61030_m->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_61213_d)) {
			return (_204b36833_concat_all_parts(_61213_d->_field_args) + jule::Str("::", 2)) + _1a8e524c4_fn_ins_out_ident(_61030_m);
		}
	}
	return _1a8e524c4_fn_ins_out_ident(_61030_m);
}



inline jule::Str _204b36833_gen_tuple_expr_model(jule::Ref<_206e63542_TupleExprModel> _62029_m) {
	jule::Str _62113_obj = jule::Str("std::make_tuple(", 16);
	{
		auto _range_expr = _62029_m->_field_datas;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2d3bdc_Data> _204b36833_d = *_range_begin;
			_iter_begin_4397524064:;
			{
				_62113_obj+=_204b36833_gen_expr(_204b36833_d->_field_model) + jule::Str(",", 1);
			}
			_iter_next_4397524064:;
			++_range_begin;
			if (_range_begin != _range_end) { _204b36833_d = *_range_begin; goto _iter_begin_4397524064; }
			_iter_end_4397524064:;
		}
	}
	_62113_obj=_62113_obj.slice(0LL,static_cast<jule::Int>(_62113_obj.len() - 1LL));
	_62113_obj+=jule::Str(")", 1);
	return _62113_obj;
}



inline jule::Str _204b36833_gen_builtin_new_call_expr_model(jule::Ref<_206e63542_BuiltinNewCallExprModel> _63040_m) {
	jule::Str _63113_obj = jule::Str("jule::new_ref<", 14);
	_63113_obj+=_1a8e8c223_gen_type_kind(_63040_m->_field_kind);
	_63113_obj+=jule::Str(">(", 2);
	if (_63040_m->_field_init != nullptr) {
		_63113_obj+=_204b36833_gen_expr(_63040_m->_field_init);
	}
	_63113_obj+=jule::Str(")", 1);
	return _63113_obj;
}



inline jule::Str _204b36833_gen_builtin_out_call_expr_model(jule::Ref<_206e63542_BuiltinOutCallExprModel> _64140_m) {
	jule::Str _64213_obj = jule::Str("jule::out(", 10);
	_64213_obj+=_204b36833_gen_expr(_64140_m->_field_expr);
	_64213_obj+=jule::Str(")", 1);
	return _64213_obj;
}



inline jule::Str _204b36833_gen_builtin_outln_call_expr_model(jule::Ref<_206e63542_BuiltinOutlnCallExprModel> _64842_m) {
	jule::Str _64913_obj = jule::Str("jule::outln(", 12);
	_64913_obj+=_204b36833_gen_expr(_64842_m->_field_expr);
	_64913_obj+=jule::Str(")", 1);
	return _64913_obj;
}



inline jule::Str _204b36833_gen_builtin_real_call_expr_model(jule::Ref<_206e63542_BuiltinRealCallExprModel> _65541_m) {
	jule::Str _65613_obj = jule::Str("jule::real(", 11);
	_65613_obj+=_204b36833_gen_expr(_65541_m->_field_expr);
	_65613_obj+=jule::Str(")", 1);
	return _65613_obj;
}



inline jule::Str _204b36833_gen_builtin_drop_call_expr_model(jule::Ref<_206e63542_BuiltinDropCallExprModel> _66241_m) {
	jule::Str _66313_obj = jule::Str("jule::drop(", 11);
	_66313_obj+=_204b36833_gen_expr(_66241_m->_field_expr);
	_66313_obj+=jule::Str(")", 1);
	return _66313_obj;
}



inline jule::Str _204b36833_gen_builtin_panic_call_expr_model(jule::Ref<_206e63542_BuiltinPanicCallExprModel> _66942_m) {
	jule::Str _67013_obj = jule::Str("jule::panic(", 12);
	_67013_obj+=_204b36833_gen_expr(_66942_m->_field_expr);
	_67013_obj+=jule::Str(")", 1);
	return _67013_obj;
}



inline jule::Str _204b36833_gen_builtin_make_call_expr_model(jule::Ref<_206e63542_BuiltinMakeCallExprModel> _67641_m) {
	jule::Str _67713_obj = jule::Str("", 0);
	if (_67641_m->_field_len != nullptr) {
		_67713_obj+=_204b36833_gen_expr(_67641_m->_field_len);
	} else {
		_67713_obj+=jule::Str("0", 1);
	}
	if (_67641_m->_field_cap != nullptr) {
		_67713_obj+=jule::Str(",", 1) + _204b36833_gen_expr(_67641_m->_field_cap);
	}
	if (jule::real(_67641_m->_field_kind->_method_slc()->_field_elem->_method_enm())) {
		_67713_obj+=jule::Str(",", 1);
		_67713_obj+=_204b36833_get_init_expr(_67641_m->_field_kind->_method_slc()->_field_elem);
		if (_67641_m->_field_cap != nullptr) {
			_67713_obj=(_1a8e8c223_gen_type_kind(_67641_m->_field_kind) + jule::Str("::alloc(", 8)) + _67713_obj;
		} else {
			_67713_obj=(_1a8e8c223_gen_type_kind(_67641_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _67713_obj;
		}
	} else {
		_67713_obj=(_1a8e8c223_gen_type_kind(_67641_m->_field_kind) + jule::Str("::alloc(", 8)) + _67713_obj;
	}
	_67713_obj+=jule::Str(")", 1);
	return _67713_obj;
}



inline jule::Str _204b36833_gen_builtin_append_call_expr_model_assign_opt(jule::Bool _7045_same_dest,jule::Str& _7056_dest_expr,jule::Ref<_1da411226_TypeKind>& _70610_dest_kind,jule::Ref<_206e63542_SliceExprModel>& _70710_s,jule::Ref<_206e63542_BuiltinAppendCallExprModel>& _70810_m) {
	jule::Str _70913_obj = jule::Str("", 0);
	if ((!(_7045_same_dest))) {
		_70913_obj+=(((((_7056_dest_expr + jule::Str(" = jule::alloc_for_append(", 26)) + _204b36833_gen_expr_model(_70810_m->_field_dest)) + jule::Str(",", 1)) + _2049bd7b9_itoa(static_cast<jule::I64>(_70710_s->_field_elems.len()))) + jule::Str(")", 1)) + jule::Str(";", 1);
	}
	{
		auto _range_expr = _70710_s->_field_elems;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _204b36833_e = *_range_begin;
			_iter_begin_4397564336:;
			{
				_70913_obj+=_7056_dest_expr;
				_70913_obj+=_204b36833_get_accessor(_70610_dest_kind);
				_70913_obj+=jule::Str("push(", 5);
				_70913_obj+=_204b36833_gen_expr_model(_204b36833_e);
				_70913_obj+=jule::Str(");", 2);
			}
			_iter_next_4397564336:;
			++_range_begin;
			if (_range_begin != _range_end) { _204b36833_e = *_range_begin; goto _iter_begin_4397564336; }
			_iter_end_4397564336:;
		}
	}
	return _70913_obj;
}



inline std::tuple<jule::Str,jule::Bool> _204b36833_gen_builtin_append_call_expr_model_assign(jule::Any _72350_dest,jule::Ref<_206e63542_BuiltinAppendCallExprModel> _72371_m) {
	jule::Bool _723110_optimized = jule::Bool();
	{
		auto _match_expr{ _72371_m->_field_elements };
		if (!(_match_expr.type_is<jule::Ref<_206e63542_SliceExprModel>>())) { goto _case_end_4397572992; }
		_case_begin_4397572992:;
		{
			{
				auto _match_expr{ _72350_dest };
				if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4397574752; }
				_case_begin_4397574752:;
				{
					jule::Ref<_206e63542_SliceExprModel> _72821_s = _72371_m->_field_elements.operator jule::Ref<_206e63542_SliceExprModel>();
					jule::Str _72917_dest_expr = _204b36833_gen_expr_model(_72350_dest);
					jule::Ref<_1d9e22661_Var> _73021_dest_var = _72350_dest.operator jule::Ref<_1d9e22661_Var>();
					jule::Bool _73117_same_dest = _1a8e8c223_any_equals_0(_73021_dest_var,_72371_m->_field_dest);
					_723110_optimized = true;
					return std::make_tuple(_204b36833_gen_builtin_append_call_expr_model_assign_opt(_73117_same_dest,_72917_dest_expr,_73021_dest_var->_field_kind->_field_kind,_72821_s,_72371_m),_723110_optimized);
				}
				goto _match_end_4397573136;
				_case_end_4397574752:;
				if (!(_match_expr.type_is<jule::Ref<_206e63542_StructSubIdentExprModel>>())) { goto _case_end_4397574944; }
				_case_begin_4397574944:;
				{
					jule::Ref<_206e63542_SliceExprModel> _73621_s = _72371_m->_field_elements.operator jule::Ref<_206e63542_SliceExprModel>();
					jule::Str _73717_dest_expr = _204b36833_gen_expr_model(_72350_dest);
					jule::Ref<_2053cdc01_FieldIns> _73821_dest_field = _72350_dest.operator jule::Ref<_206e63542_StructSubIdentExprModel>()->_field_field;
					jule::Bool _73917_same_dest = _1a8e8c223_any_equals_1(_73821_dest_field,_72371_m->_field_dest);
					_723110_optimized = true;
					return std::make_tuple(_204b36833_gen_builtin_append_call_expr_model_assign_opt(_73917_same_dest,_73717_dest_expr,_73821_dest_field->_field_kind,_73621_s,_72371_m),_723110_optimized);
				}
				goto _match_end_4397573136;
				_case_end_4397574944:;
				_match_end_4397573136:;
			}
		}
		goto _match_end_4397572384;
		_case_end_4397572992:;
		_match_end_4397572384:;
	}
	_723110_optimized = false;
	return std::make_tuple(_204b36833_gen_builtin_append_call_expr_model(_72371_m),_723110_optimized);
}



inline jule::Str _204b36833_gen_builtin_append_call_expr_model(jule::Ref<_206e63542_BuiltinAppendCallExprModel> _74843_m) {
	return (((jule::Str("jule::append(", 13) + _204b36833_gen_expr_model(_74843_m->_field_dest)) + jule::Str(",", 1)) + _204b36833_gen_expr_model(_74843_m->_field_elements)) + jule::Str(")", 1);
}



inline jule::Str _204b36833_gen_builtin_clone_call_expr_model(jule::Ref<_206e63542_BuiltinCloneCallExprModel> _75242_m) {
	jule::Str _75313_obj = jule::Str("jule::clone(", 12);
	_75313_obj+=_204b36833_gen_expr_model(_75242_m->_field_expr);
	_75313_obj+=jule::Str(")", 1);
	return _75313_obj;
}



inline jule::Str _204b36833_gen_sizeof_expr_model(jule::Ref<_206e63542_SizeofExprModel> _75930_m) {
	jule::Str _76013_obj = jule::Str("sizeof(", 7);
	_76013_obj+=_204b36833_gen_expr(_75930_m->_field_expr);
	_76013_obj+=jule::Str(")", 1);
	return _76013_obj;
}



inline jule::Str _204b36833_gen_alignof_expr_model(jule::Ref<_206e63542_AlignofExprModel> _76631_m) {
	jule::Str _76713_obj = jule::Str("alignof(", 8);
	_76713_obj+=_204b36833_gen_expr(_76631_m->_field_expr);
	_76713_obj+=jule::Str(")", 1);
	return _76713_obj;
}



inline jule::Str _204b36833_gen_rune_expr_model(jule::Ref<_206e63542_RuneExprModel> _77324_m) {
	if (_77324_m->_field_code <= 127LL) {
		jule::Str _77517_b = _204b36833_sbtoa(static_cast<jule::U8>(_77324_m->_field_code));
		if (_77517_b == jule::Str("'", 1)) {
			_77517_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _77517_b) + jule::Str("'", 1);
	}
	return _204b36833_i64toa(static_cast<jule::I64>(_77324_m->_field_code));
}



inline jule::Str _204b36833_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_206e63542_BuiltinErrorTraitSubIdentExprModel> _78453_m) {
	jule::Str _78513_obj = _204b36833_gen_expr_model(_78453_m->_field_expr);
	_78513_obj+=jule::Str(".get().", 7);
	_78513_obj+=jule::Str("_method_", 8) + _78453_m->_field_ident;
	return _78513_obj;
}



inline jule::Str _204b36833_gen_explicit_deref_expr_model(jule::Ref<_206e63542_ExplicitDerefExprModel> _79138_m) {
	jule::Str _79213_obj = _204b36833_gen_expr_model(_79138_m->_field_expr);
	_79213_obj+=jule::Str(".get()", 6);
	return _79213_obj;
}



inline jule::Str _204b36833_gen_struct_static_ident_expr_model(jule::Ref<_206e63542_StructStaticIdentExprModel> _79743_m) {
	jule::Str _79813_obj = _1a8e524c4_struct_ins_out_ident(_79743_m->_field_structure);
	_79813_obj+=jule::Str("::", 2);
	_79813_obj+=_1a8e524c4_fn_ins_out_ident(_79743_m->_field_method);
	return _79813_obj;
}



inline jule::Str _204b36833_gen_integrated_to_str_expr_model(jule::Ref<_206e63542_IntegratedToStrExprModel> _80441_m) {
	return (jule::Str("jule::to_str(", 13) + _204b36833_gen_expr_model(_80441_m->_field_expr)) + jule::Str(")", 1);
}



inline jule::Str _204b36833_gen_expr_model(jule::Any _80823_m) {
	{
		auto _match_expr{ _80823_m };
		if (!(_match_expr.type_is<jule::Ref<_1da411226_TypeKind>>())) { goto _case_end_4397631824; }
		_case_begin_4397631824:;
		{
			return _1a8e8c223_gen_type_kind(_80823_m.operator jule::Ref<_1da411226_TypeKind>());
		}
		goto _match_end_4397628848;
		_case_end_4397631824:;
		if (!(_match_expr.type_is<jule::Ref<_1a89ca987_Const>>())) { goto _case_end_4397631936; }
		_case_begin_4397631936:;
		{
			return _204b36833_gen_const_expr_model(_80823_m.operator jule::Ref<_1a89ca987_Const>());
		}
		goto _match_end_4397628848;
		_case_end_4397631936:;
		if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4397631424; }
		_case_begin_4397631424:;
		{
			return _204b36833_gen_var_expr_model(_80823_m.operator jule::Ref<_1d9e22661_Var>());
		}
		goto _match_end_4397628848;
		_case_end_4397631424:;
		if (!(_match_expr.type_is<jule::Ref<_2065895c5_Trait>>())) { goto _case_end_4397631536; }
		_case_begin_4397631536:;
		{
			return _1a8e524c4_trait_out_ident(_80823_m.operator jule::Ref<_2065895c5_Trait>());
		}
		goto _match_end_4397628848;
		_case_end_4397631536:;
		if (!(_match_expr.type_is<jule::Ref<_2053cdc01_Struct>>())) { goto _case_end_4397631648; }
		_case_begin_4397631648:;
		{
			return _204b36833_gen_struct_expr_model(_80823_m.operator jule::Ref<_2053cdc01_Struct>());
		}
		goto _match_end_4397628848;
		_case_end_4397631648:;
		if (!(_match_expr.type_is<jule::Ref<_2053cdc01_StructIns>>())) { goto _case_end_4397630864; }
		_case_begin_4397630864:;
		{
			return _204b36833_gen_struct_ins_expr_model(_80823_m.operator jule::Ref<_2053cdc01_StructIns>());
		}
		goto _match_end_4397628848;
		_case_end_4397630864:;
		if (!(_match_expr.type_is<jule::Ref<_2053ddd54_FnIns>>())) { goto _case_end_4397630976; }
		_case_begin_4397630976:;
		{
			return _204b36833_gen_fn_ins_expr_model_common(_80823_m.operator jule::Ref<_2053ddd54_FnIns>());
		}
		goto _match_end_4397628848;
		_case_end_4397630976:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_BinopExprModel>>())) { goto _case_end_4397631088; }
		_case_begin_4397631088:;
		{
			return _204b36833_gen_binop_expr_model(_80823_m.operator jule::Ref<_206e63542_BinopExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397631088:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_UnaryExprModel>>())) { goto _case_end_4397632288; }
		_case_begin_4397632288:;
		{
			return _204b36833_gen_unary_expr_model(_80823_m.operator jule::Ref<_206e63542_UnaryExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397632288:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_GetRefPtrExprModel>>())) { goto _case_end_4397632400; }
		_case_begin_4397632400:;
		{
			return _204b36833_gen_get_ref_ptr_expr_model(_80823_m.operator jule::Ref<_206e63542_GetRefPtrExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397632400:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_StructLitExprModel>>())) { goto _case_end_4397632512; }
		_case_begin_4397632512:;
		{
			return _204b36833_gen_struct_lit_expr_model(_80823_m.operator jule::Ref<_206e63542_StructLitExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397632512:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_AllocStructLitExprModel>>())) { goto _case_end_4397633376; }
		_case_begin_4397633376:;
		{
			return _204b36833_gen_alloc_struct_lit_expr_model(_80823_m.operator jule::Ref<_206e63542_AllocStructLitExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397633376:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_CastingExprModel>>())) { goto _case_end_4397633488; }
		_case_begin_4397633488:;
		{
			return _204b36833_gen_casting_expr_model(_80823_m.operator jule::Ref<_206e63542_CastingExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397633488:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_FnCallExprModel>>())) { goto _case_end_4397633600; }
		_case_begin_4397633600:;
		{
			return _204b36833_gen_fn_call_expr_model(_80823_m.operator jule::Ref<_206e63542_FnCallExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397633600:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_SliceExprModel>>())) { goto _case_end_4397633712; }
		_case_begin_4397633712:;
		{
			return _204b36833_gen_slice_expr_model(_80823_m.operator jule::Ref<_206e63542_SliceExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397633712:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_ArrayExprModel>>())) { goto _case_end_4397633824; }
		_case_begin_4397633824:;
		{
			return _204b36833_gen_array_expr_model(_80823_m.operator jule::Ref<_206e63542_ArrayExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397633824:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_IndexigExprModel>>())) { goto _case_end_4397633936; }
		_case_begin_4397633936:;
		{
			return _204b36833_gen_indexing_expr_model(_80823_m.operator jule::Ref<_206e63542_IndexigExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397633936:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_AnonFnExprModel>>())) { goto _case_end_4397634048; }
		_case_begin_4397634048:;
		{
			return _204b36833_gen_anon_fn_expr_model(_80823_m.operator jule::Ref<_206e63542_AnonFnExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397634048:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_MapExprModel>>())) { goto _case_end_4397634160; }
		_case_begin_4397634160:;
		{
			return _204b36833_gen_map_expr_model(_80823_m.operator jule::Ref<_206e63542_MapExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397634160:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_SlicingExprModel>>())) { goto _case_end_4397634272; }
		_case_begin_4397634272:;
		{
			return _204b36833_gen_slicing_expr_model(_80823_m.operator jule::Ref<_206e63542_SlicingExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397634272:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_TraitSubIdentExprModel>>())) { goto _case_end_4397634384; }
		_case_begin_4397634384:;
		{
			return _204b36833_gen_trait_sub_ident_expr_model(_80823_m.operator jule::Ref<_206e63542_TraitSubIdentExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397634384:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_StructSubIdentExprModel>>())) { goto _case_end_4397634496; }
		_case_begin_4397634496:;
		{
			return _204b36833_gen_struct_sub_ident_expr_model(_80823_m.operator jule::Ref<_206e63542_StructSubIdentExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397634496:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_CommonIdentExprModel>>())) { goto _case_end_4397634608; }
		_case_begin_4397634608:;
		{
			return _204b36833_gen_common_ident_expr_model(_80823_m.operator jule::Ref<_206e63542_CommonIdentExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397634608:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_CommonSubIdentExprModel>>())) { goto _case_end_4397634720; }
		_case_begin_4397634720:;
		{
			return _204b36833_gen_common_sub_ident_expr_model(_80823_m.operator jule::Ref<_206e63542_CommonSubIdentExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397634720:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_TupleExprModel>>())) { goto _case_end_4397634848; }
		_case_begin_4397634848:;
		{
			return _204b36833_gen_tuple_expr_model(_80823_m.operator jule::Ref<_206e63542_TupleExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397634848:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_BuiltinOutCallExprModel>>())) { goto _case_end_4397634976; }
		_case_begin_4397634976:;
		{
			return _204b36833_gen_builtin_out_call_expr_model(_80823_m.operator jule::Ref<_206e63542_BuiltinOutCallExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397634976:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_BuiltinOutlnCallExprModel>>())) { goto _case_end_4397635104; }
		_case_begin_4397635104:;
		{
			return _204b36833_gen_builtin_outln_call_expr_model(_80823_m.operator jule::Ref<_206e63542_BuiltinOutlnCallExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397635104:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_BuiltinNewCallExprModel>>())) { goto _case_end_4397635232; }
		_case_begin_4397635232:;
		{
			return _204b36833_gen_builtin_new_call_expr_model(_80823_m.operator jule::Ref<_206e63542_BuiltinNewCallExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397635232:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_BuiltinRealCallExprModel>>())) { goto _case_end_4397635360; }
		_case_begin_4397635360:;
		{
			return _204b36833_gen_builtin_real_call_expr_model(_80823_m.operator jule::Ref<_206e63542_BuiltinRealCallExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397635360:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_BuiltinDropCallExprModel>>())) { goto _case_end_4397635488; }
		_case_begin_4397635488:;
		{
			return _204b36833_gen_builtin_drop_call_expr_model(_80823_m.operator jule::Ref<_206e63542_BuiltinDropCallExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397635488:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_BuiltinPanicCallExprModel>>())) { goto _case_end_4397635616; }
		_case_begin_4397635616:;
		{
			return _204b36833_gen_builtin_panic_call_expr_model(_80823_m.operator jule::Ref<_206e63542_BuiltinPanicCallExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397635616:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_BuiltinMakeCallExprModel>>())) { goto _case_end_4397635744; }
		_case_begin_4397635744:;
		{
			return _204b36833_gen_builtin_make_call_expr_model(_80823_m.operator jule::Ref<_206e63542_BuiltinMakeCallExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397635744:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_BuiltinAppendCallExprModel>>())) { goto _case_end_4397635872; }
		_case_begin_4397635872:;
		{
			return _204b36833_gen_builtin_append_call_expr_model(_80823_m.operator jule::Ref<_206e63542_BuiltinAppendCallExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397635872:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_BuiltinCloneCallExprModel>>())) { goto _case_end_4397636000; }
		_case_begin_4397636000:;
		{
			return _204b36833_gen_builtin_clone_call_expr_model(_80823_m.operator jule::Ref<_206e63542_BuiltinCloneCallExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397636000:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_SizeofExprModel>>())) { goto _case_end_4397636128; }
		_case_begin_4397636128:;
		{
			return _204b36833_gen_sizeof_expr_model(_80823_m.operator jule::Ref<_206e63542_SizeofExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397636128:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_AlignofExprModel>>())) { goto _case_end_4397636256; }
		_case_begin_4397636256:;
		{
			return _204b36833_gen_alignof_expr_model(_80823_m.operator jule::Ref<_206e63542_AlignofExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397636256:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_RuneExprModel>>())) { goto _case_end_4397636384; }
		_case_begin_4397636384:;
		{
			return _204b36833_gen_rune_expr_model(_80823_m.operator jule::Ref<_206e63542_RuneExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397636384:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_BuiltinErrorTraitSubIdentExprModel>>())) { goto _case_end_4397636512; }
		_case_begin_4397636512:;
		{
			return _204b36833_gen_builtin_error_trait_sub_ident_expr_model(_80823_m.operator jule::Ref<_206e63542_BuiltinErrorTraitSubIdentExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397636512:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_ExplicitDerefExprModel>>())) { goto _case_end_4397636640; }
		_case_begin_4397636640:;
		{
			return _204b36833_gen_explicit_deref_expr_model(_80823_m.operator jule::Ref<_206e63542_ExplicitDerefExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397636640:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_StructStaticIdentExprModel>>())) { goto _case_end_4397636768; }
		_case_begin_4397636768:;
		{
			return _204b36833_gen_struct_static_ident_expr_model(_80823_m.operator jule::Ref<_206e63542_StructStaticIdentExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397636768:;
		if (!(_match_expr.type_is<jule::Ref<_206e63542_IntegratedToStrExprModel>>())) { goto _case_end_4397636896; }
		_case_begin_4397636896:;
		{
			return _204b36833_gen_integrated_to_str_expr_model(_80823_m.operator jule::Ref<_206e63542_IntegratedToStrExprModel>());
		}
		goto _match_end_4397628848;
		_case_end_4397636896:;
		_case_begin_4397630176:;
		{
			return jule::Str("<unimplemented_expression_model>", 32);
		}
		goto _match_end_4397628848;
		_case_end_4397630176:;
		_match_end_4397628848:;
	}
}



inline jule::Str _204b36833_gen_expr(jule::Any _93817_e) {
	jule::Str _93913_obj = _204b36833_gen_expr_model(_93817_e);
	if (_93913_obj[0LL] != '(') {
		return _93913_obj;
	}
	{
		auto _match_expr{ _93817_e };
		if (!(_match_expr.type_is<jule::Ref<_206e63542_BinopExprModel>>())) { goto _case_end_4397701600; }
		_case_begin_4397701600:;
		{
			_93913_obj=_93913_obj.slice(1LL,static_cast<jule::Int>(_93913_obj.len() - 1LL));
		}
		goto _match_end_4397700624;
		_case_end_4397701600:;
		_match_end_4397700624:;
	}
	return _93913_obj;
}



inline jule::Str _204b36833_gen_val(jule::Ref<_1da2d3bdc_Value> _95116_v) {
	if (_95116_v->_field_data->_method_is_const()) {
		return _204b36833_gen_const_expr(_95116_v->_field_data);
	}
	return _204b36833_gen_expr(_95116_v->_field_data->_field_model);
}



inline jule::Str _204b36833_get_init_expr(jule::Ref<_1da411226_TypeKind> _95822_t) {
	if (jule::real(_95822_t->_method_ptr())) {
		return jule::Str("nullptr", 7);
	}
	jule::Ref<_206b06c0d_Enum> _96313_enm = _95822_t->_method_enm();
	if ((!(jule::real(_96313_enm)))) {
		return _1a8e8c223_gen_type_kind(_95822_t) + jule::Str("()", 2);
	}
	return _204b36833_gen_val(_96313_enm->_field_items[0LL]->_field_value);
}



inline jule::Str _1a8a513e2_get_derive_fn_decl_clone(jule::Ref<_2053cdc01_Struct>& _730_s) {
	jule::Str _813_obj = _1a8e8c223_gen_struct_kind(_730_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



inline jule::Str _1a8a513e2_get_derive_fn_def_clone(jule::Ref<_2053cdc01_Struct>& _1329_s) {
	jule::Str _1413_obj = _1a8e8c223_gen_struct_kind(_1329_s);
	_1413_obj+=(jule::Str(" ", 1) + _1413_obj) + jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



inline jule::Str _1a8e524c4_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



inline jule::Str _1a8e524c4_as_jt(jule::Str _2814_id) {
	if ((97LL <= _2814_id[0LL]) && (_2814_id[0LL] <= 122LL)) {
		_2814_id[0LL]-=32LL;
	}
	return jule::Str("jule::", 6) + _2814_id;
}



inline jule::Str _1a8e524c4_get_addr_as_ident(jule::Uintptr _3622_addr) {
	return jule::Str("_", 1) + _2049bd7b9_fmt_uint(static_cast<jule::U64>(_3622_addr),15LL);
}



inline jule::Str _1a8e524c4_as_out_ident(jule::Str _4517_ident,jule::Uintptr _4529_addr) {
	if (_4529_addr != 0LL) {
		return (_1a8e524c4_get_addr_as_ident(_4529_addr) + jule::Str("_", 1)) + _4517_ident;
	}
	return _1a8e524c4_as_ident(_4517_ident);
}



inline jule::Str _1a8e524c4_as_local_ident(jule::Int _5819_row,jule::Int _5829_col,jule::Str _5843_ident) {
	_5843_ident=((_2049bd7b9_itoa(_5819_row) + _2049bd7b9_itoa(_5829_col)) + jule::Str("_", 1)) + _5843_ident;
	return _1a8e524c4_as_ident(_5843_ident);
}



inline jule::Str _1a8e524c4_fn_out_ident(jule::Ref<_2053ddd54_Fn>& _6418_f) {
	{
		if (!((_6418_f->_field_cpp_linked))) { goto _case_end_4401945872; }
		_case_begin_4401945872:;
		{
			return _6418_f->_field_ident;
		}
		goto _match_end_4401943648;
		_case_end_4401945872:;
		if (!((_6418_f->_field_ident == jule::Str("main", 4)))) { goto _case_end_4401947856; }
		_case_begin_4401947856:;
		{
			return jule::Str("entry_point", 11);
		}
		goto _match_end_4401943648;
		_case_end_4401947856:;
		if (!((_6418_f->_method_is_method()))) { goto _case_end_4401947968; }
		_case_begin_4401947968:;
		{
			if (_6418_f->_field_statically) {
				return jule::Str("_static_method_", 15) + _6418_f->_field_ident;
			}
			return jule::Str("_method_", 8) + _6418_f->_field_ident;
		}
		goto _match_end_4401943648;
		_case_end_4401947968:;
		_case_begin_4401943840:;
		{
			return _1a8e524c4_as_out_ident(_6418_f->_field_ident,static_cast<jule::Uintptr>(_6418_f->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4401943648;
		_case_end_4401943840:;
		_match_end_4401943648:;
	}
}



inline jule::Str _1a8e524c4_fn_ins_out_ident(jule::Ref<_2053ddd54_FnIns>& _8426_f) {
	if (_8426_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _8426_f->_field_decl->_field_ident;
	}
	if (_8426_f->_field_decl->_field_cpp_linked || (_8426_f->_field_generics.len() == 0LL)) {
		return _1a8e524c4_fn_out_ident(_8426_f->_field_decl);
	}
	{
		auto _range_expr = _8426_f->_field_decl->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a8e524c4_i = 0;
			jule::Ref<_2053ddd54_FnIns> _1a8e524c4_ins = *_range_begin;
			_iter_begin_4401956208:;
			{
				jule::Ref<_1da411226_TypeKind> _9413_kind = jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1a8e524c4_ins));
				if (_8426_f->_method_equals(_9413_kind)) {
					return (_1a8e524c4_fn_out_ident(_8426_f->_field_decl) + jule::Str("_", 1)) + _2049bd7b9_itoa(_1a8e524c4_i);
				}
			}
			_iter_next_4401956208:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a8e524c4_i; _1a8e524c4_ins = *_range_begin; goto _iter_begin_4401956208; }
			_iter_end_4401956208:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1a8e524c4_trait_out_ident(jule::Ref<_2065895c5_Trait> _10420_t) {
	if (_10420_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _10420_t->_field_ident;
	}
	return _1a8e524c4_as_out_ident(_10420_t->_field_ident,static_cast<jule::Uintptr>(_10420_t->_field_token._field_file->_method_addr()));
}



inline jule::Str _1a8e524c4_param_out_ident(jule::Ref<_2053ddd54_Param>& _11221_p) {
	if (_20542560a_is_anon_ident(_11221_p->_field_ident) || _20542560a_is_ignore_ident(_11221_p->_field_ident)) {
		return jule::Str("", 0);
	}
	return _1a8e524c4_as_local_ident(_11221_p->_field_token._field_row,_11221_p->_field_token._field_column,_11221_p->_field_ident);
}



inline jule::Str _1a8e524c4_struct_out_ident(jule::Ref<_2053cdc01_Struct>& _12022_s) {
	if (_12022_s->_field_cpp_linked) {
		if (_1a8e8c223_has_directive(_12022_s->_field_directives,jule::Str("typedef", 7))) {
			return _12022_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12022_s->_field_ident;
	}
	return _1a8e524c4_as_out_ident(_12022_s->_field_ident,static_cast<jule::Uintptr>(_12022_s->_field_token._field_file->_method_addr()));
}



inline jule::Str _1a8e524c4_struct_ins_out_ident(jule::Ref<_2053cdc01_StructIns>& _13130_s) {
	if (_13130_s->_field_decl->_field_cpp_linked || (_13130_s->_field_generics.len() == 0LL)) {
		return _1a8e524c4_struct_out_ident(_13130_s->_field_decl);
	}
	{
		auto _range_expr = _13130_s->_field_decl->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a8e524c4_i = 0;
			jule::Ref<_2053cdc01_StructIns> _1a8e524c4_ins = *_range_begin;
			_iter_begin_4401977280:;
			{
				jule::Ref<_1da411226_TypeKind> _13713_kind = jule::new_struct<_1da411226_TypeKind>(new( std::nothrow ) _1da411226_TypeKind(jule::Str(),jule::Bool(),_1a8e524c4_ins));
				if (_13130_s->_method_equals(_13713_kind)) {
					return (_1a8e524c4_struct_out_ident(_13130_s->_field_decl) + jule::Str("_", 1)) + _2049bd7b9_itoa(_1a8e524c4_i);
				}
			}
			_iter_next_4401977280:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a8e524c4_i; _1a8e524c4_ins = *_range_begin; goto _iter_begin_4401977280; }
			_iter_end_4401977280:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1a8e524c4_field_out_ident(jule::Ref<_2053cdc01_Field>& _14721_f) {
	if (_14721_f->_field_owner->_field_cpp_linked) {
		return _14721_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _14721_f->_field_ident;
}



inline jule::Str _1a8e524c4_var_out_ident(jule::Ref<_1d9e22661_Var> _15522_v) {
	{
		if (!((_15522_v->_field_cpp_linked))) { goto _case_end_4401988304; }
		_case_begin_4401988304:;
		{
			return _15522_v->_field_ident;
		}
		goto _match_end_4401985056;
		_case_end_4401988304:;
		if (!((_15522_v->_field_ident == jule::Str("self", 4)))) { goto _case_end_4401990096; }
		_case_begin_4401990096:;
		{
			if (jule::real(_15522_v->_field_kind->_field_kind->_method_ref())) {
				return jule::Str("this->self", 10);
			}
			return jule::Str("(*this)", 7);
		}
		goto _match_end_4401985056;
		_case_end_4401990096:;
		if (!((jule::real(_15522_v->_field_scope)))) { goto _case_end_4401990208; }
		_case_begin_4401990208:;
		{
			return _1a8e524c4_as_local_ident(_15522_v->_field_token._field_row,_15522_v->_field_token._field_column,_15522_v->_field_ident);
		}
		goto _match_end_4401985056;
		_case_end_4401990208:;
		_case_begin_4401986896:;
		{
			return _1a8e524c4_as_out_ident(_15522_v->_field_ident,static_cast<jule::Uintptr>(_15522_v->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4401985056;
		_case_end_4401986896:;
		_match_end_4401985056:;
	}
}



inline jule::Str _1a8e524c4_iter_begin_label_ident(jule::Uintptr _17527_it) {
	return jule::Str("_iter_begin_", 12) + _2049bd7b9_itoa(static_cast<jule::Int>(_17527_it));
}



inline jule::Str _1a8e524c4_iter_end_label_ident(jule::Uintptr _18025_it) {
	return jule::Str("_iter_end_", 10) + _2049bd7b9_itoa(static_cast<jule::Int>(_18025_it));
}



inline jule::Str _1a8e524c4_iter_next_label_ident(jule::Uintptr _18526_it) {
	return jule::Str("_iter_next_", 11) + _2049bd7b9_itoa(static_cast<jule::Int>(_18526_it));
}



inline jule::Str _1a8e524c4_label_ident(jule::Str _19016_ident) {
	return jule::Str("_julec_label_", 13) + _19016_ident;
}



inline jule::Str _1a8e524c4_match_end_label_ident(jule::Uintptr _19526_m) {
	return jule::Str("_match_end_", 11) + _2049bd7b9_itoa(static_cast<jule::Int>(_19526_m));
}



inline jule::Str _1a8e524c4_case_begin_label_ident(jule::Uintptr _20027_c) {
	return jule::Str("_case_begin_", 12) + _2049bd7b9_itoa(static_cast<jule::Int>(_20027_c));
}



inline jule::Str _1a8e524c4_case_end_label_ident(jule::Uintptr _20525_c) {
	return jule::Str("_case_end_", 10) + _2049bd7b9_itoa(static_cast<jule::Int>(_20525_c));
}



inline jule::Bool _1a8e8c223_any_equals_0(jule::Ref<_1d9e22661_Var>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_1d9e22661_Var>>())) { goto _case_end_4397586320; }
		_case_begin_4397586320:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_1d9e22661_Var>()).alloc;
		}
		goto _match_end_4397585456;
		_case_end_4397586320:;
		_case_begin_4397585936:;
		{
			return false;
		}
		goto _match_end_4397585456;
		_case_end_4397585936:;
		_match_end_4397585456:;
	}
}

inline jule::Bool _1a8e8c223_any_equals_1(jule::Ref<_2053cdc01_FieldIns>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_2053cdc01_FieldIns>>())) { goto _case_end_4397599680; }
		_case_begin_4397599680:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_2053cdc01_FieldIns>()).alloc;
		}
		goto _match_end_4397598816;
		_case_end_4397599680:;
		_case_begin_4397599296:;
		{
			return false;
		}
		goto _match_end_4397598816;
		_case_end_4397599296:;
		_match_end_4397598816:;
	}
}



inline jule::Ref<_2053703bd_Directive> _1a8e8c223_find_directive(jule::Slice<jule::Ref<_2053703bd_Directive>>& _3424_directives,jule::Str _3466_tag) {
	{
		auto _range_expr = _3424_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053703bd_Directive> _1a8e8c223_dr = *_range_begin;
			_iter_begin_4402007824:;
			{
				if (_1a8e8c223_dr->_field_tag == _3466_tag) {
					return _1a8e8c223_dr;
				}
			}
			_iter_next_4402007824:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8c223_dr = *_range_begin; goto _iter_begin_4402007824; }
			_iter_end_4402007824:;
		}
	}
	return jule::new_ref<_2053703bd_Directive>();
}



inline jule::Bool _1a8e8c223_has_directive(jule::Slice<jule::Ref<_2053703bd_Directive>>& _4419_directives,jule::Str _4461_tag) {
	return jule::real(_1a8e8c223_find_directive((*((&(_4419_directives)))),_4461_tag));
}



inline jule::Str _1a8e8c223_gen_prim_kind(jule::Ref<_1da411226_Prim> _4918_p) {
	return _1a8e524c4_as_jt(_4918_p->_method_to_str());
}



inline jule::Str _1a8e8c223_gen_tuple_kind(jule::Ref<_1da411226_Tuple> _5423_t) {
	jule::Str _5513_obj = jule::Str("std::tuple<", 11);
	{
		auto _range_expr = _5423_t->_field_types;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da411226_TypeKind> _1a8e8c223_tk = *_range_begin;
			_iter_begin_4402015792:;
			{
				_5513_obj+=_1a8e8c223_gen_type_kind(_1a8e8c223_tk) + jule::Str(",", 1);
			}
			_iter_next_4402015792:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8c223_tk = *_range_begin; goto _iter_begin_4402015792; }
			_iter_end_4402015792:;
		}
	}
	_5513_obj=_5513_obj.slice(0LL,static_cast<jule::Int>(_5513_obj.len() - 1LL));
	return _5513_obj + jule::Str(">", 1);
}



inline jule::Str _1a8e8c223_as_ref_kind(jule::Str _6416_elem) {
	jule::Str _659_ref = _1a8e524c4_as_jt(jule::Str("ref", 3));
	return ((_659_ref + jule::Str("<", 1)) + _6416_elem) + jule::Str(">", 1);
}



inline jule::Str _1a8e8c223_gen_ref_kind(jule::Ref<_1da411226_Ref> _7021_r) {
	jule::Str _719_elem = _1a8e8c223_gen_type_kind(_7021_r->_field_elem);
	return _1a8e8c223_as_ref_kind(_719_elem);
}



inline jule::Str _1a8e8c223_gen_ptr_kind(jule::Ref<_1da411226_Ptr> _7621_p) {
	
	if (_7621_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _829_elem = _1a8e8c223_gen_type_kind(_7621_p->_field_elem);
	return _829_elem + jule::Str("*", 1);
}



inline jule::Str _1a8e8c223_gen_enum_kind(jule::Ref<_206b06c0d_Enum> _8722_e) {
	return _1a8e8c223_gen_type_kind(_8722_e->_field_kind->_field_kind);
}



inline jule::Str _1a8e8c223_as_slice_kind(jule::Ref<_1da411226_TypeKind> _9122_elem) {
	jule::Str _929_elem_s = _1a8e8c223_gen_type_kind(_9122_elem);
	jule::Str _939_slc = _1a8e524c4_as_jt(jule::Str("slice", 5));
	return ((_939_slc + jule::Str("<", 1)) + _929_elem_s) + jule::Str(">", 1);
}



inline jule::Str _1a8e8c223_gen_slice_kind(jule::Ref<_1da411226_Slc> _9823_s) {
	return _1a8e8c223_as_slice_kind(_9823_s->_field_elem);
}



inline jule::Str _1a8e8c223_gen_map_kind(jule::Ref<_1da411226_Map> _10321_m) {
	jule::Str _1049_key = _1a8e8c223_gen_type_kind(_10321_m->_field_key);
	jule::Str _1059_val = _1a8e8c223_gen_type_kind(_10321_m->_field_val);
	jule::Str _1069__map = _1a8e524c4_as_jt(jule::Str("map", 3));
	return ((((_1069__map + jule::Str("<", 1)) + _1049_key) + jule::Str(",", 1)) + _1059_val) + jule::Str(">", 1);
}



inline jule::Str _1a8e8c223_gen_trait_kind_from_ident(jule::Str _11030_ident) {
	jule::Str _1119_trt = _1a8e524c4_as_jt(jule::Str("trait", 5));
	return ((_1119_trt + jule::Str("<", 1)) + _11030_ident) + jule::Str(">", 1);
}



inline jule::Str _1a8e8c223_gen_trait_kind(jule::Ref<_2065895c5_Trait> _11619_t) {
	jule::Str _1179_ident = _1a8e524c4_trait_out_ident(_11619_t);
	return _1a8e8c223_gen_trait_kind_from_ident(_1179_ident);
}



inline jule::Str _1a8e8c223_gen_struct_kind(jule::Ref<_2053cdc01_Struct> _12220_s) {
	jule::Str _12313_rep = jule::Str("", 0);
	if (_12220_s->_field_cpp_linked && (!(_1a8e8c223_has_directive(_12220_s->_field_directives,jule::Str("typedef", 7))))) {
		_12313_rep+=jule::Str("struct ", 7);
	}
	_12313_rep+=_1a8e524c4_struct_out_ident(_12220_s);
	return _12313_rep;
}



inline jule::Str _1a8e8c223_gen_struct_kind_ins(jule::Ref<_2053cdc01_StructIns> _13328_s) {
	if (_13328_s->_field_decl->_field_cpp_linked) {
		jule::Str _13517_ident = _1a8e524c4_struct_ins_out_ident(_13328_s);
		if (_13328_s->_field_generics.len() > 0LL) {
			_13517_ident+=jule::Str("<", 1);
			{
				auto _range_expr = _13328_s->_field_generics;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_1da411226_TypeKind> _1a8e8c223_g = *_range_begin;
					_iter_begin_4402053072:;
					{
						_13517_ident+=_1a8e8c223_gen_type_kind(_1a8e8c223_g) + jule::Str(",", 1);
					}
					_iter_next_4402053072:;
					++_range_begin;
					if (_range_begin != _range_end) { _1a8e8c223_g = *_range_begin; goto _iter_begin_4402053072; }
					_iter_end_4402053072:;
				}
			}
			_13517_ident=_13517_ident.slice(0LL,static_cast<jule::Int>(_13517_ident.len() - 1LL));
			_13517_ident+=jule::Str(">", 1);
		}
		jule::Ref<_2053703bd_Directive> _14413_d = _1a8e8c223_find_directive(_13328_s->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_14413_d)) {
			_13517_ident=(_204b36833_concat_all_parts(_14413_d->_field_args) + jule::Str("::", 2)) + _13517_ident;
		}
		return _13517_ident;
	}
	return _1a8e524c4_struct_ins_out_ident(_13328_s);
}



inline jule::Str _1a8e8c223_gen_array_kind(jule::Ref<_1da411226_Arr> _15423_a) {
	jule::Str _1559_arr = _1a8e524c4_as_jt(jule::Str("array", 5));
	jule::Str _1569_elem = _1a8e8c223_gen_type_kind(_15423_a->_field_elem);
	jule::Str _1579_size = _2049bd7b9_itoa(_15423_a->_field_n);
	return ((((_1559_arr + jule::Str("<", 1)) + _1569_elem) + jule::Str(",", 1)) + _1579_size) + jule::Str(">", 1);
}



inline jule::Str _1a8e8c223_gen_fn_anon_decl(jule::Ref<_2053ddd54_FnIns> _16125_f) {
	jule::Str _16213_decl = _1a8e8cc29_gen_fn_ins_result(_16125_f);
	_16213_decl+=jule::Str("(", 1);
	if (_16125_f->_field_params.len() > 0LL) {
		{
			auto _range_expr = _16125_f->_field_params;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_2053ddd54_ParamIns> _1a8e8c223_param = *_range_begin;
				_iter_begin_4402068896:;
				{
					if (_1a8e8c223_param->_field_decl->_method_is_self()) {
						goto _iter_next_4402068896;
					}
					_16213_decl+=_1a8e8cc29_gen_param_ins_prototype(_1a8e8c223_param);
					_16213_decl+=jule::Str(",", 1);
				}
				_iter_next_4402068896:;
				++_range_begin;
				if (_range_begin != _range_end) { _1a8e8c223_param = *_range_begin; goto _iter_begin_4402068896; }
				_iter_end_4402068896:;
			}
		}
		_16213_decl=_16213_decl.slice(0LL,static_cast<jule::Int>(_16213_decl.len() - 1LL));
	} else {
		_16213_decl+=jule::Str("void", 4);
	}
	_16213_decl+=jule::Str(")", 1);
	return _16213_decl;
}



inline jule::Str _1a8e8c223_gen_fn_kind(jule::Ref<_2053ddd54_FnIns> _18420_f) {
	jule::Str _1859_fnc = _1a8e524c4_as_jt(jule::Str("fn", 2));
	jule::Str _1869_decl = _1a8e8c223_gen_fn_anon_decl(_18420_f);
	return ((_1859_fnc + jule::Str("<", 1)) + _1869_decl) + jule::Str(">", 1);
}



inline jule::Str _1a8e8c223_gen_type_kind(jule::Ref<_1da411226_TypeKind> _19122_k) {
	{
		if (!((_19122_k->_method_cpp_linked()))) { goto _case_end_4402082160; }
		_case_begin_4402082160:;
		{
			return _19122_k->_field_cpp_ident;
		}
		goto _match_end_4402079440;
		_case_end_4402082160:;
		if (!((jule::real(_19122_k->_method_prim())))) { goto _case_end_4402081520; }
		_case_begin_4402081520:;
		{
			return _1a8e8c223_gen_prim_kind(_19122_k->_method_prim());
		}
		goto _match_end_4402079440;
		_case_end_4402081520:;
		if (!((jule::real(_19122_k->_method_tup())))) { goto _case_end_4402081632; }
		_case_begin_4402081632:;
		{
			return _1a8e8c223_gen_tuple_kind(_19122_k->_method_tup());
		}
		goto _match_end_4402079440;
		_case_end_4402081632:;
		if (!((jule::real(_19122_k->_method_ref())))) { goto _case_end_4402081760; }
		_case_begin_4402081760:;
		{
			return _1a8e8c223_gen_ref_kind(_19122_k->_method_ref());
		}
		goto _match_end_4402079440;
		_case_end_4402081760:;
		if (!((jule::real(_19122_k->_method_ptr())))) { goto _case_end_4402082368; }
		_case_begin_4402082368:;
		{
			return _1a8e8c223_gen_ptr_kind(_19122_k->_method_ptr());
		}
		goto _match_end_4402079440;
		_case_end_4402082368:;
		if (!((jule::real(_19122_k->_method_enm())))) { goto _case_end_4402082480; }
		_case_begin_4402082480:;
		{
			return _1a8e8c223_gen_enum_kind(_19122_k->_method_enm());
		}
		goto _match_end_4402079440;
		_case_end_4402082480:;
		if (!((jule::real(_19122_k->_method_slc())))) { goto _case_end_4402082608; }
		_case_begin_4402082608:;
		{
			return _1a8e8c223_gen_slice_kind(_19122_k->_method_slc());
		}
		goto _match_end_4402079440;
		_case_end_4402082608:;
		if (!((jule::real(_19122_k->_method_map())))) { goto _case_end_4402080768; }
		_case_begin_4402080768:;
		{
			return _1a8e8c223_gen_map_kind(_19122_k->_method_map());
		}
		goto _match_end_4402079440;
		_case_end_4402080768:;
		if (!((jule::real(_19122_k->_method_trt())))) { goto _case_end_4402080880; }
		_case_begin_4402080880:;
		{
			return _1a8e8c223_gen_trait_kind(_19122_k->_method_trt());
		}
		goto _match_end_4402079440;
		_case_end_4402080880:;
		if (!((jule::real(_19122_k->_method_strct())))) { goto _case_end_4402080992; }
		_case_begin_4402080992:;
		{
			return _1a8e8c223_gen_struct_kind_ins(_19122_k->_method_strct());
		}
		goto _match_end_4402079440;
		_case_end_4402080992:;
		if (!((jule::real(_19122_k->_method_arr())))) { goto _case_end_4402082784; }
		_case_begin_4402082784:;
		{
			return _1a8e8c223_gen_array_kind(_19122_k->_method_arr());
		}
		goto _match_end_4402079440;
		_case_end_4402082784:;
		if (!((jule::real(_19122_k->_method_fnc())))) { goto _case_end_4402082896; }
		_case_begin_4402082896:;
		{
			return _1a8e8c223_gen_fn_kind(_19122_k->_method_fnc());
		}
		goto _match_end_4402079440;
		_case_end_4402082896:;
		_case_begin_4402079024:;
		{
			return jule::Str("[<unimplemented_type_kind>]", 27);
		}
		goto _match_end_4402079440;
		_case_end_4402079024:;
		_match_end_4402079440:;
	}
}



inline void _1a8e8cc29_add_indent(void) {
	(_1a8e8cc29_INDENT)++;
}



inline void _1a8e8cc29_done_indent(void) {
	(_1a8e8cc29_INDENT)--;
}



inline jule::Str _1a8e8cc29_indent(void) {
	
	if (_1a8e8cc29_INDENT == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _7413_s = jule::Str("", 0);
	jule::Int _7513_i = 0LL;
	_iter_begin_4402105040:;
	if (!(_7513_i < _1a8e8cc29_INDENT)) { goto _iter_end_4402105040; }
	{
		_7413_s+=jule::Str("\t", 1);
	}
	_iter_next_4402105040:;
	(_7513_i)++;
	goto _iter_begin_4402105040;
	_iter_end_4402105040:;
	return _7413_s;
}



inline jule::Bool _1a8e8cc29_is_cpp_header_file(jule::Str _8223_path) {
	jule::Int _839_offset = _8223_path.rfind(jule::Str(".", 1));
	if (_839_offset == -1LL) {
		return false;
	}
	return _2037761bb_is_valid_header_ext(_8223_path.slice(static_cast<jule::Int>(_839_offset)));
}



inline jule::Str _1a8e8cc29_gen_links(jule::Ref<_204a33ac6_IR>& _9119_ir) {
	jule::Str _9213_obj = jule::Str("", 0);
	{
		auto _range_expr = _9119_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1a8e8cc29_pkg = *_range_begin;
			_iter_begin_4402112832:;
			{
				{
					if (!(((!(_1a8e8cc29_pkg->_field_cpp_linked))))) { goto _case_end_4402114752; }
					_case_begin_4402114752:;
					{
						goto _iter_next_4402112832;
					}
					goto _match_end_4402114512;
					_case_end_4402114752:;
					if (!((_2037761bb_is_std_header_path(_1a8e8cc29_pkg->_field_path)))) { goto _case_end_4402114880; }
					_case_begin_4402114880:;
					{
						_9213_obj+=(jule::Str("#include ", 9) + _1a8e8cc29_pkg->_field_path) + jule::Str("\n", 1);
					}
					goto _match_end_4402114512;
					_case_end_4402114880:;
					_match_end_4402114512:;
				}
			}
			_iter_next_4402112832:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_pkg = *_range_begin; goto _iter_begin_4402112832; }
			_iter_end_4402112832:;
		}
	}
	{
		auto _range_expr = _9119_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1a8e8cc29_pkg = *_range_begin;
			_iter_begin_4402116800:;
			{
				{
					if (!(((!(_1a8e8cc29_pkg->_field_cpp_linked))))) { goto _case_end_4402119808; }
					_case_begin_4402119808:;
					{
						goto _iter_next_4402116800;
					}
					goto _match_end_4402119568;
					_case_end_4402119808:;
					if (!((_1a8e8cc29_is_cpp_header_file(_1a8e8cc29_pkg->_field_path)))) { goto _case_end_4402119936; }
					_case_begin_4402119936:;
					{
						_9213_obj+=(jule::Str("#include \"", 10) + _1a8e8cc29_pkg->_field_path) + jule::Str("\"\n", 2);
					}
					goto _match_end_4402119568;
					_case_end_4402119936:;
					_match_end_4402119568:;
				}
			}
			_iter_next_4402116800:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_pkg = *_range_begin; goto _iter_begin_4402116800; }
			_iter_end_4402116800:;
		}
	}
	return _9213_obj;
}



inline jule::Str _1a8e8cc29_gen_fn_result(jule::Ref<_2053ddd54_Fn>& _11623_f) {
	if (_11623_f->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1a8e8c223_gen_type_kind(_11623_f->_field_result->_field_kind->_field_kind);
}



inline jule::Str _1a8e8cc29_gen_fn_ins_result(jule::Ref<_2053ddd54_FnIns>& _12427_f) {
	if (_12427_f->_field_decl->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1a8e8c223_gen_type_kind(_12427_f->_field_result);
}



inline jule::Str _1a8e8cc29_gen_param_prototype(jule::Ref<_2053ddd54_Param>& _13229_p) {
	jule::Str _13313_obj = jule::Str("", 0);
	if (_13229_p->_field_variadic) {
		_13313_obj+=_1a8e524c4_as_jt(jule::Str("slice", 5));
		_13313_obj+=jule::Str("<", 1);
		_13313_obj+=_1a8e8c223_gen_type_kind(_13229_p->_field_kind->_field_kind);
		_13313_obj+=jule::Str(">", 1);
	} else {
		_13313_obj+=_1a8e8c223_gen_type_kind(_13229_p->_field_kind->_field_kind);
	}
	return _13313_obj;
}



inline jule::Str _1a8e8cc29_gen_param_ins(jule::Ref<_2053ddd54_ParamIns>& _14623_p) {
	jule::Str _14713_obj = _1a8e8cc29_gen_param_ins_prototype(_14623_p);
	_14713_obj+=jule::Str(" ", 1);
	_14713_obj+=_1a8e524c4_param_out_ident(_14623_p->_field_decl);
	return _14713_obj;
}



inline jule::Str _1a8e8cc29_gen_param_ins_prototype(jule::Ref<_2053ddd54_ParamIns>& _15433_p) {
	jule::Str _15513_obj = jule::Str("", 0);
	if (_15433_p->_field_decl->_field_variadic) {
		_15513_obj+=_1a8e524c4_as_jt(jule::Str("slice", 5));
		_15513_obj+=jule::Str("<", 1);
		_15513_obj+=_1a8e8c223_gen_type_kind(_15433_p->_field_kind);
		_15513_obj+=jule::Str(">", 1);
	} else {
		_15513_obj+=_1a8e8c223_gen_type_kind(_15433_p->_field_kind);
	}
	if (_15433_p->_field_decl->_field_reference) {
		_15513_obj+=jule::Str("&", 1);
	}
	return _15513_obj;
}



inline jule::Str _1a8e8cc29_gen_param(jule::Ref<_2053ddd54_Param>& _17319_p) {
	jule::Str _17413_obj = _1a8e8cc29_gen_param_prototype(_17319_p);
	if (((_17319_p->_field_ident != jule::Str("", 0)) && (!(_20542560a_is_ignore_ident(_17319_p->_field_ident)))) && (!(_20542560a_is_anon_ident(_17319_p->_field_ident)))) {
		_17413_obj+=jule::Str(" ", 1) + _1a8e524c4_param_out_ident(_17319_p);
	}
	return _17413_obj;
}



inline jule::Str _1a8e8cc29_gen_params(jule::Slice<jule::Ref<_2053ddd54_Param>>& _18220_params) {
	{
		if (!((_18220_params.len() == 0LL))) { goto _case_end_4402150496; }
		_case_begin_4402150496:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4402150320;
		_case_end_4402150496:;
		if (!(((_18220_params.len() == 1LL) && _18220_params[0LL]->_method_is_self()))) { goto _case_end_4402150624; }
		_case_begin_4402150624:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4402150320;
		_case_end_4402150624:;
		_match_end_4402150320:;
	}
	jule::Str _19113_obj = jule::Str("(", 1);
	{
		auto _range_expr = _18220_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Param> _1a8e8cc29_p = *_range_begin;
			_iter_begin_4402154592:;
			{
				if ((!(_1a8e8cc29_p->_method_is_self()))) {
					_19113_obj+=_1a8e8cc29_gen_param(_1a8e8cc29_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4402154592:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_p = *_range_begin; goto _iter_begin_4402154592; }
			_iter_end_4402154592:;
		}
	}
	_19113_obj=_19113_obj.slice(0LL,static_cast<jule::Int>(_19113_obj.len() - 1LL));
	return _19113_obj + jule::Str(")", 1);
}



inline jule::Str _1a8e8cc29_gen_params_ins(jule::Slice<jule::Ref<_2053ddd54_ParamIns>>& _20324_params) {
	{
		if (!((_20324_params.len() == 0LL))) { goto _case_end_4402160352; }
		_case_begin_4402160352:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4402160192;
		_case_end_4402160352:;
		if (!(((_20324_params.len() == 1LL) && _20324_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4402160480; }
		_case_begin_4402160480:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4402160192;
		_case_end_4402160480:;
		_match_end_4402160192:;
	}
	jule::Str _21213_obj = jule::Str("(", 1);
	{
		auto _range_expr = _20324_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_ParamIns> _1a8e8cc29_p = *_range_begin;
			_iter_begin_4402164672:;
			{
				if ((!(_1a8e8cc29_p->_field_decl->_method_is_self()))) {
					_21213_obj+=_1a8e8cc29_gen_param_ins(_1a8e8cc29_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4402164672:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_p = *_range_begin; goto _iter_begin_4402164672; }
			_iter_end_4402164672:;
		}
	}
	_21213_obj=_21213_obj.slice(0LL,static_cast<jule::Int>(_21213_obj.len() - 1LL));
	return _21213_obj + jule::Str(")", 1);
}



inline jule::Str _1a8e8cc29_gen_params_prototypes(jule::Slice<jule::Ref<_2053ddd54_ParamIns>>& _22531_params) {
	{
		if (!((_22531_params.len() == 0LL))) { goto _case_end_4402170656; }
		_case_begin_4402170656:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4402170496;
		_case_end_4402170656:;
		if (!(((_22531_params.len() == 1LL) && _22531_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4402170784; }
		_case_begin_4402170784:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4402170496;
		_case_end_4402170784:;
		_match_end_4402170496:;
	}
	jule::Str _23413_obj = jule::Str("(", 1);
	{
		auto _range_expr = _22531_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_ParamIns> _1a8e8cc29_p = *_range_begin;
			_iter_begin_4402175616:;
			{
				if ((!(_1a8e8cc29_p->_field_decl->_method_is_self()))) {
					_23413_obj+=_1a8e8cc29_gen_param_ins_prototype(_1a8e8cc29_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4402175616:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_p = *_range_begin; goto _iter_begin_4402175616; }
			_iter_end_4402175616:;
		}
	}
	_23413_obj=_23413_obj.slice(0LL,static_cast<jule::Int>(_23413_obj.len() - 1LL));
	return _23413_obj + jule::Str(")", 1);
}



inline jule::Str _1a8e8cc29_gen_trait(jule::Ref<_2065895c5_Trait>& _24719_t) {
	
	jule::Str _2499_outid = _1a8e524c4_trait_out_ident(_24719_t);
	jule::Str _25113_obj = jule::Str("struct ", 7);
	_25113_obj+=_2499_outid;
	_25113_obj+=jule::Str(" {\n", 3);
	_25113_obj+=jule::Str("\t", 1);
	_25113_obj+=jule::Str("virtual ~", 9);
	_25113_obj+=_2499_outid;
	_25113_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto _range_expr = _24719_t->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1a8e8cc29_f = *_range_begin;
			_iter_begin_4402186368:;
			{
				_25113_obj+=jule::Str("\t", 1);
				_25113_obj+=jule::Str("virtual ", 8);
				_25113_obj+=_1a8e8cc29_gen_fn_result(_1a8e8cc29_f);
				_25113_obj+=jule::Str(" _method_", 9);
				_25113_obj+=_1a8e8cc29_f->_field_ident;
				_25113_obj+=_1a8e8cc29_gen_params(_1a8e8cc29_f->_field_params);
				_25113_obj+=jule::Str(" {", 2);
				if ((!(_1a8e8cc29_f->_method_is_void()))) {
					_25113_obj+=jule::Str(" return {}; ", 12);
				}
				_25113_obj+=jule::Str("}\n", 2);
			}
			_iter_next_4402186368:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_f = *_range_begin; goto _iter_begin_4402186368; }
			_iter_end_4402186368:;
		}
	}
	_25113_obj+=jule::Str("};", 2);
	return _25113_obj;
}



inline jule::Str _1a8e8cc29_gen_traits_tbl(jule::Ref<_1da2aa301_SymbolTable>& _27624_tbl) {
	jule::Str _27713_obj = jule::Str("", 0);
	{
		auto _range_expr = _27624_tbl->_field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2065895c5_Trait> _1a8e8cc29_t = *_range_begin;
			_iter_begin_4402193376:;
			{
				_27713_obj+=_1a8e8cc29_gen_trait(_1a8e8cc29_t) + jule::Str("\n\n", 2);
			}
			_iter_next_4402193376:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_t = *_range_begin; goto _iter_begin_4402193376; }
			_iter_end_4402193376:;
		}
	}
	return _27713_obj;
}



inline jule::Str _1a8e8cc29_gen_traits_pkg(jule::Ref<_206e66325_Package>& _28524_pkg) {
	jule::Str _28613_obj = jule::Str("", 0);
	{
		auto _range_expr = _28524_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1a8e8cc29_tbl = *_range_begin;
			_iter_begin_4402197328:;
			{
				_28613_obj+=_1a8e8cc29_gen_traits_tbl(_1a8e8cc29_tbl);
			}
			_iter_next_4402197328:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_tbl = *_range_begin; goto _iter_begin_4402197328; }
			_iter_end_4402197328:;
		}
	}
	return _28613_obj;
}



inline jule::Str _1a8e8cc29_gen_traits(jule::Ref<_204a33ac6_IR>& _29420_ir) {
	jule::Str _29513_obj = jule::Str("", 0);
	{
		auto _range_expr = _29420_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1a8e8cc29_u = *_range_begin;
			_iter_begin_4402201072:;
			{
				if ((!(_1a8e8cc29_u->_field_cpp_linked))) {
					_29513_obj+=_1a8e8cc29_gen_traits_pkg(_1a8e8cc29_u->_field_package);
				}
			}
			_iter_next_4402201072:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_u = *_range_begin; goto _iter_begin_4402201072; }
			_iter_end_4402201072:;
		}
	}
	_29513_obj+=_1a8e8cc29_gen_traits_pkg(_29420_ir->_field_main);
	return _29513_obj;
}



inline jule::Str _1a8e8cc29_gen_trait_prototype(jule::Ref<_2065895c5_Trait>& _30625_t) {
	return (jule::Str("struct ", 7) + _1a8e524c4_trait_out_ident(_30625_t)) + jule::Str(";", 1);
}



inline jule::Str _1a8e8cc29_gen_trait_prototypes(jule::Ref<_206e66325_Package>& _31130_p) {
	jule::Str _31213_obj = jule::Str("", 0);
	{
		auto _range_expr = _31130_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1a8e8cc29_f = *_range_begin;
			_iter_begin_4402207968:;
			{
				{
					auto _range_expr = _1a8e8cc29_f->_field_traits;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_2065895c5_Trait> _1a8e8cc29_t = *_range_begin;
						_iter_begin_4402209760:;
						{
							if (_1a8e8cc29_t->_field_token._field_id != 0LLU) {
								_31213_obj+=_1a8e8cc29_gen_trait_prototype(_1a8e8cc29_t) + jule::Str("\n", 1);
							}
						}
						_iter_next_4402209760:;
						++_range_begin;
						if (_range_begin != _range_end) { _1a8e8cc29_t = *_range_begin; goto _iter_begin_4402209760; }
						_iter_end_4402209760:;
					}
				}
			}
			_iter_next_4402207968:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_f = *_range_begin; goto _iter_begin_4402207968; }
			_iter_end_4402207968:;
		}
	}
	return _31213_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_plain_prototype(jule::Ref<_2053cdc01_Struct>& _32436_s) {
	jule::Str _32513_obj = jule::Str("", 0);
	{
		auto _range_expr = _32436_s->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_StructIns> _1a8e8cc29_ins = *_range_begin;
			_iter_begin_4402214256:;
			{
				_32513_obj+=jule::Str("\nstruct ", 8);
				_32513_obj+=_1a8e524c4_struct_ins_out_ident(_1a8e8cc29_ins);
				_32513_obj+=jule::Str(";", 1);
				_32513_obj+=jule::Str("\n", 1);
			}
			_iter_next_4402214256:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_ins = *_range_begin; goto _iter_begin_4402214256; }
			_iter_end_4402214256:;
		}
	}
	return _32513_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_2053cdc01_Struct>>& _33637_structs) {
	jule::Str _33713_obj = jule::Str("", 0);
	{
		auto _range_expr = _33637_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _1a8e8cc29_s = *_range_begin;
			_iter_begin_4402218496:;
			{
				if ((!(_1a8e8cc29_s->_field_cpp_linked)) && (_1a8e8cc29_s->_field_token._field_id != 0LLU)) {
					_33713_obj+=_1a8e8cc29_gen_struct_plain_prototype(_1a8e8cc29_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_4402218496:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_s = *_range_begin; goto _iter_begin_4402218496; }
			_iter_end_4402218496:;
		}
	}
	return _33713_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_traits(jule::Ref<_2053cdc01_Struct>& _34723_s) {
	if (_34723_s->_field_implements.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _35213_obj = jule::Str(": ", 2);
	{
		auto _range_expr = _34723_s->_field_implements;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2065895c5_Trait> _1a8e8cc29_i = *_range_begin;
			_iter_begin_4402225120:;
			{
				_35213_obj+=jule::Str("public ", 7);
				_35213_obj+=_1a8e524c4_trait_out_ident(_1a8e8cc29_i);
				_35213_obj+=jule::Str(",", 1);
			}
			_iter_next_4402225120:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_i = *_range_begin; goto _iter_begin_4402225120; }
			_iter_end_4402225120:;
		}
	}
	_35213_obj=_35213_obj.slice(0LL,static_cast<jule::Int>(_35213_obj.len() - 1LL));
	return _35213_obj;
}



inline jule::Str _1a8e8cc29_gen_field_decl(jule::Ref<_2053cdc01_FieldIns>& _36324_f) {
	jule::Str _36413_obj = _1a8e8c223_gen_type_kind(_36324_f->_field_kind) + jule::Str(" ", 1);
	_36413_obj+=_1a8e524c4_field_out_ident(_36324_f->_field_decl);
	_36413_obj+=(jule::Str("{", 1) + _204b36833_get_init_expr(_36324_f->_field_kind)) + jule::Str("}", 1);
	_36413_obj+=jule::Str(";", 1);
	return _36413_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_self_field_type_kind(jule::Ref<_2053cdc01_StructIns>& _37241_s) {
	return _1a8e8c223_as_ref_kind(_1a8e8c223_gen_struct_kind_ins(_37241_s));
}



inline jule::Str _1a8e8cc29_gen_struct_self_field(jule::Ref<_2053cdc01_StructIns>& _37731_s) {
	jule::Str _37813_obj = _1a8e8cc29_gen_struct_self_field_type_kind(_37731_s);
	_37813_obj+=jule::Str(" self{};", 8);
	return _37813_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_self_field_init_st(jule::Ref<_2053cdc01_StructIns>& _38339_s) {
	jule::Str _38413_obj = jule::Str("this->self = ", 13);
	_38413_obj+=_1a8e8cc29_gen_struct_self_field_type_kind(_38339_s);
	_38413_obj+=jule::Str("::make(this, nullptr);", 22);
	return _38413_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_constructor(jule::Ref<_2053cdc01_StructIns>& _39032_s) {
	jule::Str _39113_obj = _1a8e524c4_struct_ins_out_ident(_39032_s);
	_39113_obj+=jule::Str("(", 1);
	if (_39032_s->_field_fields.len() > 0LL) {
		{
			auto _range_expr = _39032_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_2053cdc01_FieldIns> _1a8e8cc29_f = *_range_begin;
				_iter_begin_4402242304:;
				{
					_39113_obj+=_1a8e8c223_gen_type_kind(_1a8e8cc29_f->_field_kind);
					_39113_obj+=(jule::Str(" __param_", 9) + _1a8e8cc29_f->_field_decl->_field_ident) + jule::Str(", ", 2);
				}
				_iter_next_4402242304:;
				++_range_begin;
				if (_range_begin != _range_end) { _1a8e8cc29_f = *_range_begin; goto _iter_begin_4402242304; }
				_iter_end_4402242304:;
			}
		}
		_39113_obj=_39113_obj.slice(0LL,static_cast<jule::Int>(_39113_obj.len() - 2LL));
	} else {
		_39113_obj+=jule::Str("void", 4);
	}
	_39113_obj+=jule::Str(") {\n", 4);
	_1a8e8cc29_add_indent();
	_39113_obj+=_1a8e8cc29_indent();
	_39113_obj+=_1a8e8cc29_gen_struct_self_field_init_st(_39032_s);
	_39113_obj+=jule::Str("\n", 1);
	if (_39032_s->_field_fields.len() > 0LL) {
		{
			auto _range_expr = _39032_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_2053cdc01_FieldIns> _1a8e8cc29_f = *_range_begin;
				_iter_begin_4387858112:;
				{
					_39113_obj+=jule::Str("\n", 1);
					_39113_obj+=_1a8e8cc29_indent();
					_39113_obj+=jule::Str("this->", 6);
					_39113_obj+=_1a8e524c4_field_out_ident(_1a8e8cc29_f->_field_decl);
					_39113_obj+=jule::Str(" = ", 3);
					_39113_obj+=jule::Str("__param_", 8) + _1a8e8cc29_f->_field_decl->_field_ident;
					_39113_obj+=jule::Str(";", 1);
				}
				_iter_next_4387858112:;
				++_range_begin;
				if (_range_begin != _range_end) { _1a8e8cc29_f = *_range_begin; goto _iter_begin_4387858112; }
				_iter_end_4387858112:;
			}
		}
	}
	_1a8e8cc29_done_indent();
	_39113_obj+=(jule::Str("\n", 1) + _1a8e8cc29_indent()) + jule::Str("}", 1);
	return _39113_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_destructor(jule::Ref<_2053cdc01_StructIns>& _42731_s) {
	jule::Str _42813_obj = jule::Str("~", 1);
	_42813_obj+=_1a8e524c4_struct_ins_out_ident(_42731_s);
	_42813_obj+=jule::Str("(void) { ", 9);
	if (_42731_s->_field_decl->_method_is_implements(_206c94dac_BUILTIN_TRAIT_DISPOSE)) {
		jule::Ref<_2053ddd54_Fn> _43413_dispose_method = _42731_s->_method_find_method(jule::Str("dispose", 7),false);
		_42813_obj+=jule::Str("this->", 6);
		_42813_obj+=_1a8e524c4_fn_out_ident(_43413_dispose_method);
		_42813_obj+=jule::Str("(); ", 4);
	}
	_42813_obj+=jule::Str("this->self.ref = nullptr; }", 27);
	return _42813_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_operators(jule::Ref<_2053cdc01_StructIns>& _44430_s) {
	jule::Str _4459_out_ident = _1a8e524c4_struct_ins_out_ident(_44430_s);
	jule::Str _44613_obj = jule::Str("", 0);
	_44613_obj+=_1a8e8cc29_indent();
	_44613_obj+=jule::Str("inline bool operator==(const ", 29);
	_44613_obj+=_4459_out_ident;
	_44613_obj+=jule::Str(" &_Src) const {", 15);
	if (_44430_s->_field_fields.len() > 0LL) {
		_1a8e8cc29_add_indent();
		_44613_obj+=jule::Str("\n", 1);
		_44613_obj+=_1a8e8cc29_indent();
		_44613_obj+=jule::Str("return ", 7);
		_1a8e8cc29_add_indent();
		jule::Int _45817_n = 0LL;
		{
			auto _range_expr = _44430_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_2053cdc01_FieldIns> _1a8e8cc29_f = *_range_begin;
				_iter_begin_4387879136:;
				{
					jule::Ref<_2053cdc01_StructIns> _46117_strct = _1a8e8cc29_f->_field_kind->_method_strct();
					if ((jule::real(_46117_strct) && jule::real(_46117_strct->_field_decl)) && _46117_strct->_field_decl->_field_cpp_linked) {
						goto _iter_next_4387879136;
					}
					(_45817_n)++;
					_44613_obj+=jule::Str("\n", 1);
					_44613_obj+=_1a8e8cc29_indent();
					_44613_obj+=jule::Str("this->", 6);
					jule::Str _47017_f_ident = _1a8e524c4_field_out_ident(_1a8e8cc29_f->_field_decl);
					_44613_obj+=_47017_f_ident;
					_44613_obj+=jule::Str(" == _Src.", 9);
					_44613_obj+=_47017_f_ident;
					_44613_obj+=jule::Str(" &&", 3);
				}
				_iter_next_4387879136:;
				++_range_begin;
				if (_range_begin != _range_end) { _1a8e8cc29_f = *_range_begin; goto _iter_begin_4387879136; }
				_iter_end_4387879136:;
			}
		}
		_1a8e8cc29_done_indent();
		if (_45817_n > 0LL) {
			_44613_obj=_44613_obj.slice(0LL,static_cast<jule::Int>(_44613_obj.len() - 3LL));
		} else {
			_44613_obj+=jule::Str("true", 4);
		}
		_44613_obj+=jule::Str(";\n", 2);
		_1a8e8cc29_done_indent();
		_44613_obj+=_1a8e8cc29_indent();
		_44613_obj+=jule::Str("}", 1);
	} else {
		_44613_obj+=jule::Str(" return true; }", 15);
	}
	_44613_obj+=jule::Str("\n\n", 2);
	_44613_obj+=_1a8e8cc29_indent();
	_44613_obj+=jule::Str("inline bool operator!=(const ", 29);
	_44613_obj+=_4459_out_ident;
	_44613_obj+=jule::Str(" &_Src) const { return !this->operator==(_Src); }", 49);
	return _44613_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_derive_defs_prototypes(jule::Ref<_2053cdc01_StructIns>& _49739_s) {
	jule::Str _49813_obj = jule::Str("", 0);
	if (_49739_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_49813_obj+=_1a8e8cc29_indent();
		_49813_obj+=_1a8a513e2_get_derive_fn_decl_clone(_49739_s->_field_decl);
		_49813_obj+=jule::Str(";\n\n", 3);
	}
	return _49813_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_ins_prototype(jule::Ref<_2053cdc01_StructIns>& _50934_s) {
	jule::Str _51013_obj = jule::Str("struct ", 7);
	jule::Str _5119_out_ident = _1a8e524c4_struct_ins_out_ident(_50934_s);
	_51013_obj+=_5119_out_ident;
	_51013_obj+=_1a8e8cc29_gen_struct_traits(_50934_s->_field_decl);
	_51013_obj+=jule::Str(" {\n", 3);
	_1a8e8cc29_add_indent();
	_51013_obj+=_1a8e8cc29_indent();
	_51013_obj+=_1a8e8cc29_gen_struct_self_field(_50934_s);
	_51013_obj+=jule::Str("\n\n", 2);
	if (_50934_s->_field_fields.len() > 0LL) {
		{
			auto _range_expr = _50934_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_2053cdc01_FieldIns> _1a8e8cc29_f = *_range_begin;
				_iter_begin_4900535792:;
				{
					_51013_obj+=_1a8e8cc29_indent();
					_51013_obj+=_1a8e8cc29_gen_field_decl(_1a8e8cc29_f);
					_51013_obj+=jule::Str("\n", 1);
				}
				_iter_next_4900535792:;
				++_range_begin;
				if (_range_begin != _range_end) { _1a8e8cc29_f = *_range_begin; goto _iter_begin_4900535792; }
				_iter_end_4900535792:;
			}
		}
		_51013_obj+=jule::Str("\n\n", 2);
		_51013_obj+=_1a8e8cc29_indent();
		_51013_obj+=_1a8e8cc29_gen_struct_constructor(_50934_s);
		_51013_obj+=jule::Str("\n\n", 2);
	}
	_51013_obj+=_1a8e8cc29_indent();
	_51013_obj+=_1a8e8cc29_gen_struct_destructor(_50934_s);
	_51013_obj+=jule::Str("\n\n", 2);
	_51013_obj+=_1a8e8cc29_indent();
	_51013_obj+=_5119_out_ident;
	_51013_obj+=jule::Str("(void) { ", 9);
	_51013_obj+=_1a8e8cc29_gen_struct_self_field_init_st(_50934_s);
	_51013_obj+=jule::Str(" }\n\n", 4);
	{
		auto _range_expr = _50934_s->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1a8e8cc29_f = *_range_begin;
			_iter_begin_4900541552:;
			{
				jule::Str _54417_proto = _1a8e8cc29_gen_fn_prototype(_1a8e8cc29_f,true);
				if (_1a8e8cc29_f->_field_statically) {
					_54417_proto=(_1a8e8cc29_indent() + jule::Str("static ", 7)) + _54417_proto.trim(jule::Str("\t ", 2));
				}
				_51013_obj+=_54417_proto;
				_51013_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4900541552:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_f = *_range_begin; goto _iter_begin_4900541552; }
			_iter_end_4900541552:;
		}
	}
	_51013_obj+=_1a8e8cc29_gen_struct_derive_defs_prototypes(_50934_s);
	_51013_obj+=_1a8e8cc29_gen_struct_operators(_50934_s);
	_51013_obj+=jule::Str("\n", 1);
	_1a8e8cc29_done_indent();
	_51013_obj+=_1a8e8cc29_indent() + jule::Str("};", 2);
	return _51013_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_prototype(jule::Ref<_2053cdc01_Struct>& _56330_s) {
	jule::Str _56413_obj = jule::Str("", 0);
	{
		auto _range_expr = _56330_s->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_StructIns> _1a8e8cc29_ins = *_range_begin;
			_iter_begin_4900551392:;
			{
				_56413_obj+=_1a8e8cc29_gen_struct_ins_prototype(_1a8e8cc29_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_4900551392:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_ins = *_range_begin; goto _iter_begin_4900551392; }
			_iter_end_4900551392:;
		}
	}
	return _56413_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_prototypes(jule::Slice<jule::Ref<_2053cdc01_Struct>>& _57231_structs) {
	jule::Str _57313_obj = jule::Str("", 0);
	{
		auto _range_expr = _57231_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _1a8e8cc29_s = *_range_begin;
			_iter_begin_4900554880:;
			{
				if ((!(_1a8e8cc29_s->_field_cpp_linked)) && (_1a8e8cc29_s->_field_token._field_id != 0LLU)) {
					_57313_obj+=_1a8e8cc29_gen_struct_prototype(_1a8e8cc29_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_4900554880:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_s = *_range_begin; goto _iter_begin_4900554880; }
			_iter_end_4900554880:;
		}
	}
	return _57313_obj;
}



inline jule::Str _1a8e8cc29_gen_fn_decl_head(jule::Ref<_2053ddd54_FnIns>& _58226_f,jule::Bool _58237_method) {
	jule::Str _58313_obj = jule::Str("", 0);
	if ((!(_58226_f->_field_decl->_method_is_entry_point()))) {
		_58313_obj+=jule::Str("inline ", 7);
	}
	_58313_obj+=_1a8e8cc29_gen_fn_ins_result(_58226_f) + jule::Str(" ", 1);
	if ((!(_58237_method)) && jule::real(_58226_f->_field_decl->_field_owner)) {
		_58313_obj+=_1a8e524c4_struct_ins_out_ident(_58226_f->_field_owner) + jule::Str("::", 2);
	}
	_58313_obj+=_1a8e524c4_fn_ins_out_ident(_58226_f);
	return _58313_obj;
}



inline jule::Str _1a8e8cc29_gen_fn_prototype(jule::Ref<_2053ddd54_Fn>& _59926_f,jule::Bool _59934_method) {
	jule::Str _60013_obj = jule::Str("", 0);
	{
		auto _range_expr = _59926_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_FnIns> _1a8e8cc29_c = *_range_begin;
			_iter_begin_4900568304:;
			{
				_60013_obj+=_1a8e8cc29_indent();
				_60013_obj+=_1a8e8cc29_gen_fn_decl_head(_1a8e8cc29_c,_59934_method);
				_60013_obj+=_1a8e8cc29_gen_params_prototypes(_1a8e8cc29_c->_field_params);
				_60013_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4900568304:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_c = *_range_begin; goto _iter_begin_4900568304; }
			_iter_end_4900568304:;
		}
	}
	return _60013_obj;
}



inline jule::Str _1a8e8cc29_gen_fn_prototypes(jule::Ref<_206e66325_Package>& _61127_pkg) {
	jule::Str _61213_obj = jule::Str("", 0);
	{
		auto _range_expr = _61127_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1a8e8cc29_file = *_range_begin;
			_iter_begin_4900573488:;
			{
				{
					auto _range_expr = _1a8e8cc29_file->_field_funcs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_2053ddd54_Fn> _1a8e8cc29_f = *_range_begin;
						_iter_begin_4900575280:;
						{
							if ((!(_1a8e8cc29_f->_field_cpp_linked)) && (_1a8e8cc29_f->_field_token._field_id != 0LLU)) {
								_61213_obj+=_1a8e8cc29_gen_fn_prototype(_1a8e8cc29_f,false);
							}
						}
						_iter_next_4900575280:;
						++_range_begin;
						if (_range_begin != _range_end) { _1a8e8cc29_f = *_range_begin; goto _iter_begin_4900575280; }
						_iter_end_4900575280:;
					}
				}
			}
			_iter_next_4900573488:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_file = *_range_begin; goto _iter_begin_4900573488; }
			_iter_end_4900573488:;
		}
	}
	return _61213_obj;
}



inline jule::Str _1a8e8cc29_gen_prototypes(jule::Ref<_204a33ac6_IR>& _62424_ir) {
	jule::Str _62513_obj = jule::Str("", 0);
	{
		auto _range_expr = _62424_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1a8e8cc29_u = *_range_begin;
			_iter_begin_4900576560:;
			{
				if ((!(_1a8e8cc29_u->_field_cpp_linked))) {
					_62513_obj+=_1a8e8cc29_gen_trait_prototypes(_1a8e8cc29_u->_field_package);
				}
			}
			_iter_next_4900576560:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_u = *_range_begin; goto _iter_begin_4900576560; }
			_iter_end_4900576560:;
		}
	}
	_62513_obj+=_1a8e8cc29_gen_trait_prototypes(_62424_ir->_field_main);
	_62513_obj+=_1a8e8cc29_gen_struct_plain_prototypes(_62424_ir->_field_ordered._field_structs);
	_62513_obj+=_1a8e8cc29_gen_traits(_62424_ir) + jule::Str("\n", 1);
	_62513_obj+=_1a8e8cc29_gen_struct_prototypes(_62424_ir->_field_ordered._field_structs);
	{
		auto _range_expr = _62424_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1a8e8cc29_u = *_range_begin;
			_iter_begin_4900585856:;
			{
				if ((!(_1a8e8cc29_u->_field_cpp_linked))) {
					_62513_obj+=_1a8e8cc29_gen_fn_prototypes(_1a8e8cc29_u->_field_package);
				}
			}
			_iter_next_4900585856:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_u = *_range_begin; goto _iter_begin_4900585856; }
			_iter_end_4900585856:;
		}
	}
	_62513_obj+=_1a8e8cc29_gen_fn_prototypes(_62424_ir->_field_main);
	return _62513_obj;
}



inline jule::Str _1a8e8cc29_gen_var_init_expr(jule::Ref<_1d9e22661_Var>& _65227_v,jule::Str _65236_init) {
	jule::Str _65313_obj = jule::Str("", 0);
	if (_65227_v->_field_statically) {
		_65313_obj+=jule::Str("static ", 7);
	}
	_65313_obj+=_1a8e8c223_gen_type_kind(_65227_v->_field_kind->_field_kind) + jule::Str(" ", 1);
	if (_65227_v->_field_reference) {
		_65313_obj+=jule::Str("&", 1);
	}
	_65313_obj+=_1a8e524c4_var_out_ident(_65227_v);
	if (_65236_init != jule::Str("", 0)) {
		_65313_obj+=jule::Str(" = ", 3) + _65236_init;
	}
	_65313_obj+=jule::Str(";", 1);
	return _65313_obj;
}



inline jule::Str _1a8e8cc29_gen_var(jule::Ref<_1d9e22661_Var> _67116_v) {
	if (_20542560a_is_ignore_ident(_67116_v->_field_ident)) {
		return jule::Str("", 0);
	}
	if (_67116_v->_field_constant) {
		return jule::Str("", 0);
	}
	if (jule::real(_67116_v->_field_value) && jule::real(_67116_v->_field_value->_field_expr)) {
		if (_67116_v->_field_value->_field_data->_field_model != nullptr) {
			return _1a8e8cc29_gen_var_init_expr(_67116_v,_204b36833_gen_val(_67116_v->_field_value));
		}
		return _1a8e8cc29_gen_var_init_expr(_67116_v,jule::Str("", 0));
	}
	return _1a8e8cc29_gen_var_init_expr(_67116_v,_204b36833_get_init_expr(_67116_v->_field_kind->_field_kind));
}



inline jule::Str _1a8e8cc29_gen_globals(jule::Slice<jule::Ref<_1d9e22661_Var>>& _68921_globals) {
	jule::Str _69013_obj = jule::Str("", 0);
	{
		auto _range_expr = _68921_globals;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d9e22661_Var> _1a8e8cc29_v = *_range_begin;
			_iter_begin_4900606064:;
			{
				if ((!(_1a8e8cc29_v->_field_constant)) && (_1a8e8cc29_v->_field_token._field_id != 0LLU)) {
					_69013_obj+=_1a8e8cc29_gen_var(_1a8e8cc29_v) + jule::Str("\n", 1);
				}
			}
			_iter_next_4900606064:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_v = *_range_begin; goto _iter_begin_4900606064; }
			_iter_end_4900606064:;
		}
	}
	return _69013_obj;
}



inline jule::Str _1a8e8cc29_gen_fn(jule::Ref<_2053ddd54_Fn>& _70216_f) {
	jule::Str _70313_obj = jule::Str("", 0);
	{
		auto _range_expr = _70216_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_FnIns> _1a8e8cc29_ins = *_range_begin;
			_iter_begin_4900611376:;
			{
				_70313_obj+=_1a8e8cc29_gen_fn_decl_head(_1a8e8cc29_ins,false);
				_70313_obj+=_1a8e8cc29_gen_params_ins(_1a8e8cc29_ins->_field_params) + jule::Str(" ", 1);
				_70313_obj+=_2049ab4bb_gen_fn_scope(_1a8e8cc29_ins);
				_70313_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4900611376:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_ins = *_range_begin; goto _iter_begin_4900611376; }
			_iter_end_4900611376:;
		}
	}
	return _70313_obj;
}



inline jule::Str _1a8e8cc29_gen_pkg_fns(jule::Ref<_206e66325_Package>& _71421_p) {
	jule::Str _71513_obj = jule::Str("", 0);
	{
		auto _range_expr = _71421_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1da2aa301_SymbolTable> _1a8e8cc29_f = *_range_begin;
			_iter_begin_4900616528:;
			{
				{
					auto _range_expr = _1a8e8cc29_f->_field_funcs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_2053ddd54_Fn> _1a8e8cc29_f = *_range_begin;
						_iter_begin_4900618416:;
						{
							if ((!(_1a8e8cc29_f->_field_cpp_linked)) && (_1a8e8cc29_f->_field_token._field_id != 0LLU)) {
								_71513_obj+=_1a8e8cc29_gen_fn(_1a8e8cc29_f) + jule::Str("\n\n", 2);
							}
						}
						_iter_next_4900618416:;
						++_range_begin;
						if (_range_begin != _range_end) { _1a8e8cc29_f = *_range_begin; goto _iter_begin_4900618416; }
						_iter_end_4900618416:;
					}
				}
			}
			_iter_next_4900616528:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_f = *_range_begin; goto _iter_begin_4900616528; }
			_iter_end_4900616528:;
		}
	}
	return _71513_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_method_defs(jule::Ref<_2053cdc01_StructIns>& _72732_s) {
	jule::Str _72813_obj = jule::Str("", 0);
	{
		auto _range_expr = _72732_s->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053ddd54_Fn> _1a8e8cc29_f = *_range_begin;
			_iter_begin_4900623360:;
			{
				_72813_obj+=_1a8e8cc29_indent();
				_72813_obj+=_1a8e8cc29_gen_fn(_1a8e8cc29_f);
				_72813_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4900623360:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_f = *_range_begin; goto _iter_begin_4900623360; }
			_iter_end_4900623360:;
		}
	}
	return _72813_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_ostream(jule::Ref<_2053cdc01_StructIns>& _73828_s) {
	jule::Str _73913_obj = jule::Str("", 0);
	_73913_obj+=_1a8e8cc29_indent();
	_73913_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_73913_obj+=_1a8e524c4_struct_ins_out_ident(_73828_s);
	_73913_obj+=jule::Str(" &_Src) {\n", 10);
	_1a8e8cc29_add_indent();
	_73913_obj+=_1a8e8cc29_indent();
	_73913_obj+=jule::Str("_Stream << \"", 12);
	_73913_obj+=_73828_s->_field_decl->_field_ident;
	_73913_obj+=jule::Str("{\";\n", 4);
	{
		auto _range_expr = _73828_s->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a8e8cc29_i = 0;
			jule::Ref<_2053cdc01_FieldIns> _1a8e8cc29_f = *_range_begin;
			_iter_begin_4900631312:;
			{
				_73913_obj+=_1a8e8cc29_indent();
				_73913_obj+=jule::Str("_Stream << \"", 12);
				_73913_obj+=_1a8e8cc29_f->_field_decl->_field_ident;
				_73913_obj+=jule::Str(":", 1);
				jule::Ref<_2053cdc01_StructIns> _75713_strct = _1a8e8cc29_f->_field_kind->_method_strct();
				if ((jule::real(_75713_strct) && jule::real(_75713_strct->_field_decl)) && _75713_strct->_field_decl->_field_cpp_linked) {
					_73913_obj+=(jule::Str(" cpp.", 5) + _1a8e524c4_field_out_ident(_1a8e8cc29_f->_field_decl)) + jule::Str("\"", 1);
				} else {
					_73913_obj+=jule::Str("\" << _Src.", 10);
					_73913_obj+=_1a8e524c4_field_out_ident(_1a8e8cc29_f->_field_decl);
				}
				if ((_1a8e8cc29_i + 1LL) < _73828_s->_field_fields.len()) {
					_73913_obj+=jule::Str(" << \", \"", 8);
				}
				_73913_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4900631312:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a8e8cc29_i; _1a8e8cc29_f = *_range_begin; goto _iter_begin_4900631312; }
			_iter_end_4900631312:;
		}
	}
	_73913_obj+=_1a8e8cc29_indent();
	_73913_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_73913_obj+=_1a8e8cc29_indent();
	_73913_obj+=jule::Str("return _Stream;\n", 16);
	_1a8e8cc29_done_indent();
	_73913_obj+=_1a8e8cc29_indent();
	_73913_obj+=jule::Str("}", 1);
	return _73913_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_derive_defs(jule::Ref<_2053cdc01_StructIns>& _78032_s) {
	jule::Str _78113_obj = jule::Str("", 0);
	if (_78032_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_78113_obj+=_1a8e8cc29_indent();
		_78113_obj+=_1a8a513e2_get_derive_fn_def_clone(_78032_s->_field_decl);
		_78113_obj+=jule::Str("{\n", 2);
		_1a8e8cc29_add_indent();
		_78113_obj+=_1a8e8cc29_indent();
		_78113_obj+=_1a8e8c223_gen_struct_kind_ins(_78032_s);
		_78113_obj+=jule::Str(" clone;\n", 8);
		{
			auto _range_expr = _78032_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_2053cdc01_FieldIns> _1a8e8cc29_f = *_range_begin;
				_iter_begin_4900648928:;
				{
					jule::Str _79217_ident = _1a8e524c4_field_out_ident(_1a8e8cc29_f->_field_decl);
					_78113_obj+=_1a8e8cc29_indent();
					_78113_obj+=jule::Str("clone.", 6);
					_78113_obj+=_79217_ident;
					_78113_obj+=jule::Str(" = jule::clone(this->", 21);
					_78113_obj+=_79217_ident;
					_78113_obj+=jule::Str(");\n", 3);
				}
				_iter_next_4900648928:;
				++_range_begin;
				if (_range_begin != _range_end) { _1a8e8cc29_f = *_range_begin; goto _iter_begin_4900648928; }
				_iter_end_4900648928:;
			}
		}
		_78113_obj+=_1a8e8cc29_indent();
		_78113_obj+=jule::Str("return clone;\n", 14);
		_1a8e8cc29_done_indent();
		_78113_obj+=_1a8e8cc29_indent();
		_78113_obj+=jule::Str("}", 1);
	}
	return _78113_obj;
}



inline jule::Str _1a8e8cc29_gen_struct_ins(jule::Ref<_2053cdc01_StructIns>& _81224_s) {
	jule::Str _81313_obj = _1a8e8cc29_gen_struct_method_defs(_81224_s);
	_81313_obj+=jule::Str("\n\n", 2);
	_81313_obj+=_1a8e8cc29_gen_struct_derive_defs(_81224_s);
	_81313_obj+=jule::Str("\n\n", 2);
	_81313_obj+=_1a8e8cc29_gen_struct_ostream(_81224_s);
	return _81313_obj;
}



inline jule::Str _1a8e8cc29_gen_struct(jule::Ref<_2053cdc01_Struct>& _82220_s) {
	jule::Str _82313_obj = jule::Str("", 0);
	{
		auto _range_expr = _82220_s->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_StructIns> _1a8e8cc29_ins = *_range_begin;
			_iter_begin_4900660592:;
			{
				_82313_obj+=_1a8e8cc29_gen_struct_ins(_1a8e8cc29_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_4900660592:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_ins = *_range_begin; goto _iter_begin_4900660592; }
			_iter_end_4900660592:;
		}
	}
	return _82313_obj;
}



inline jule::Str _1a8e8cc29_gen_structs(jule::Slice<jule::Ref<_2053cdc01_Struct>>& _83121_structs) {
	jule::Str _83213_obj = jule::Str("", 0);
	{
		auto _range_expr = _83121_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_2053cdc01_Struct> _1a8e8cc29_s = *_range_begin;
			_iter_begin_4900664480:;
			{
				if ((!(_1a8e8cc29_s->_field_cpp_linked)) && (_1a8e8cc29_s->_field_token._field_id != 0LLU)) {
					_83213_obj+=_1a8e8cc29_gen_struct(_1a8e8cc29_s);
					_83213_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_4900664480:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_s = *_range_begin; goto _iter_begin_4900664480; }
			_iter_end_4900664480:;
		}
	}
	return _83213_obj;
}



inline jule::Str _1a8e8cc29_gen_fns(jule::Ref<_204a33ac6_IR>& _84317_ir) {
	jule::Str _84413_obj = jule::Str("", 0);
	{
		auto _range_expr = _84317_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1a8e8cc29_u = *_range_begin;
			_iter_begin_4900669888:;
			{
				if ((!(_1a8e8cc29_u->_field_cpp_linked))) {
					_84413_obj+=_1a8e8cc29_gen_pkg_fns(_1a8e8cc29_u->_field_package);
				}
			}
			_iter_next_4900669888:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_u = *_range_begin; goto _iter_begin_4900669888; }
			_iter_end_4900669888:;
		}
	}
	_84413_obj+=_1a8e8cc29_gen_pkg_fns(_84317_ir->_field_main);
	return _84413_obj;
}



inline void _1a8e8cc29_push_init(jule::Ref<_206e66325_Package>& _85619_pkg,jule::Str& _85639_obj) {
	
	
	jule::Ref<_2053ddd54_Fn> _8609_f = _85619_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_8609_f)))) {
		return;
	}
	_85639_obj+=(jule::Str("\n\t", 2) + _1a8e524c4_fn_out_ident(_8609_f)) + jule::Str("();", 3);
}



inline jule::Str _1a8e8cc29_gen_init_caller(jule::Ref<_204a33ac6_IR>& _86925_ir) {
	jule::Str _87013_obj = jule::Str("void ", 5);
	_87013_obj+=jule::Str("__jule_call_initializers", 24);
	_87013_obj+=jule::Str("(void) {", 8);
	{
		auto _range_expr = _86925_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _1a8e8cc29_u = *_range_begin;
			_iter_begin_4900682640:;
			{
				if ((!(_1a8e8cc29_u->_field_cpp_linked))) {
					_1a8e8cc29_push_init(_1a8e8cc29_u->_field_package,_87013_obj);
				}
			}
			_iter_next_4900682640:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8e8cc29_u = *_range_begin; goto _iter_begin_4900682640; }
			_iter_end_4900682640:;
		}
	}
	_1a8e8cc29_push_init(_86925_ir->_field_main,_87013_obj);
	_87013_obj+=jule::Str("\n}", 2);
	return _87013_obj;
}



inline void _1a8e8cc29_append_standard(jule::Str& _88529_obj_code,jule::Str _88544_compiler,jule::Str _88559_compiler_cmd) {
	struct JuleCompileTime _8869_time = time_now();
	jule::Str _88813_time_str = jule::Str("", 0);
	_88813_time_str+=_2049bd7b9_itoa(_8869_time.day);
	_88813_time_str+=jule::Str("/", 1);
	_88813_time_str+=_2049bd7b9_itoa(_8869_time.month);
	_88813_time_str+=jule::Str("/", 1);
	_88813_time_str+=_2049bd7b9_itoa(_8869_time.year);
	_88813_time_str+=jule::Str(" ", 1);
	_88813_time_str+=_2049bd7b9_itoa(_8869_time.hour);
	_88813_time_str+=jule::Str(".", 1);
	_88813_time_str+=_2049bd7b9_itoa(_8869_time.minute);
	_88813_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM)", 21);
	jule::Str _90013_s = jule::Str("", 0);
	_90013_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_90013_s+=jule::Str("// JuleC version: ", 18);
	_90013_s+=jule::Str("beta 0.0.5 @master", 18);
	_90013_s+=jule::Str("\n", 1);
	_90013_s+=jule::Str("// Date: ", 9);
	_90013_s+=_88813_time_str;
	_90013_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_90013_s+=_88544_compiler;
	_90013_s+=jule::Str(" ", 1);
	_90013_s+=_88559_compiler_cmd;
	_90013_s+=jule::Str("\n\n#include \"", 12);
	_90013_s+=_203845d29_PATH_API;
	_90013_s+=jule::Str("\"\n\n", 3);
	_90013_s+=_88529_obj_code;
	_90013_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    std::set_terminate(&jule::terminate_handler);\n    jule::set_sig_handler(jule::signal_handler);\n    jule::setup_command_line_args(argc, argv);\n    jule::setup_environment_variables(envp);\n\n    __jule_call_initializers();\n    entry_point();\n\n    return EXIT_SUCCESS;\n}", 320);
	_88529_obj_code=_90013_s;
}



inline jule::Str _1a8e8cc29_gen(jule::Ref<_204a33ac6_IR>& _93417_ir) {
	jule::Str _93513_obj = jule::Str("", 0);
	_93513_obj+=_1a8e8cc29_gen_links(_93417_ir) + jule::Str("\n", 1);
	_93513_obj+=_1a8e8cc29_gen_prototypes(_93417_ir) + jule::Str("\n\n", 2);
	_93513_obj+=_1a8e8cc29_gen_globals(_93417_ir->_field_ordered._field_globals) + jule::Str("\n", 1);
	_93513_obj+=_1a8e8cc29_gen_structs(_93417_ir->_field_ordered._field_structs);
	_93513_obj+=_1a8e8cc29_gen_fns(_93417_ir) + jule::Str("\n", 1);
	_93513_obj+=_1a8e8cc29_gen_init_caller(_93417_ir) + jule::Str("\n", 1);
	return _93513_obj;
}



inline jule::Str _20373171a_str_repeat(jule::Str _3015_sub,jule::Int _3029_n) {
	if (_3029_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _3513_s = jule::Str("", 0);
	_iter_begin_4900803456:;
	if (!(_3029_n > 0LL)) { goto _iter_end_4900803456; }
	{
		_3513_s+=_3015_sub;
	}
	_iter_next_4900803456:;
	(_3029_n)--;
	goto _iter_begin_4900803456;
	_iter_end_4900803456:;
	return _3513_s;
}



inline void _20373171a_print_error_message(jule::Str _4224_msg) {
	jule::outln(_4224_msg);
}



inline void _20373171a_help(void) {
	if (_20391c818_ARGS.len() > 2LL) {
		_20373171a_print_error_message(jule::Str("invalid command: ", 17) + _20391c818_ARGS[2LL]);
		return;
	}
	jule::I64 _5113_max = _20373171a_HELP_MAP[0LL][0LL].len();
	{
		auto _range_expr = _20373171a_HELP_MAP;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Array<jule::Str,2> _20373171a_k = *_range_begin;
			_iter_begin_4900811664:;
			{
				jule::I64 _5313_n = _20373171a_k[0LL].len();
				if (_5313_n > _5113_max) {
					_5113_max=_5313_n;
				}
			}
			_iter_next_4900811664:;
			++_range_begin;
			if (_range_begin != _range_end) { _20373171a_k = *_range_begin; goto _iter_begin_4900811664; }
			_iter_end_4900811664:;
		}
	}
	jule::Str _5913_s = jule::Str("", 0);
	
	{
		auto _range_expr = _20373171a_HELP_MAP;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _20373171a_i = 0;
			jule::Array<jule::Str,2> _20373171a_part = *_range_begin;
			_iter_begin_4900817552:;
			{
				_5913_s+=_20373171a_part[0LL];
				_5913_s+=_20373171a_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_5113_max - _20373171a_part[0LL].len()) + 5LL));
				_5913_s+=_20373171a_part[1LL];
				if ((_20373171a_i + 1LL) < 4LL) {
					_5913_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_4900817552:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_20373171a_i; _20373171a_part = *_range_begin; goto _iter_begin_4900817552; }
			_iter_end_4900817552:;
		}
	}
	jule::outln(_5913_s);
}



inline void _20373171a_version(void) {
	if (_20391c818_ARGS.len() > 2LL) {
		_20373171a_print_error_message(jule::Str("invalid command: ", 17) + _20391c818_ARGS[2LL]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.5 @master", 18));
}



inline void _20373171a_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto _range_expr = _2037d86a1_DISTOS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _20373171a_os = *_range_begin;
			_iter_begin_4900829952:;
			{
				jule::out(_20373171a_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4900829952:;
			++_range_begin;
			if (_range_begin != _range_end) { _20373171a_os = *_range_begin; goto _iter_begin_4900829952; }
			_iter_end_4900829952:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _20373171a_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto _range_expr = _2037d86a1_DISTARCH;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _20373171a_arch = *_range_begin;
			_iter_begin_4900831056:;
			{
				jule::out(_20373171a_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4900831056:;
			++_range_begin;
			if (_range_begin != _range_end) { _20373171a_arch = *_range_begin; goto _iter_begin_4900831056; }
			_iter_end_4900831056:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _20373171a_tool(void) {
	if (_20391c818_ARGS.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_20391c818_ARGS.len() > 3LL) {
		_20373171a_print_error_message(jule::Str("invalid command: ", 17) + _20391c818_ARGS[3LL]);
		return;
	}
	jule::Str _1149_cmd = _20391c818_ARGS[2LL];
	{
		auto _match_expr{ _1149_cmd };
		if (!((jule::Str("distos", 6)) == _match_expr)) { goto _case_end_4900842368; }
		_case_begin_4900842368:;
		{
			_20373171a_tool_distos();
		}
		goto _match_end_4900840816;
		_case_end_4900842368:;
		if (!((jule::Str("distarch", 8)) == _match_expr)) { goto _case_end_4900843328; }
		_case_begin_4900843328:;
		{
			_20373171a_tool_distarch();
		}
		goto _match_end_4900840816;
		_case_end_4900843328:;
		_case_begin_4900841360:;
		{
			_20373171a_print_error_message(jule::Str("Undefined command: ", 19) + _1149_cmd);
		}
		goto _match_end_4900840816;
		_case_end_4900841360:;
		_match_end_4900840816:;
	}
}



inline void _20373171a_julenv(void) {
	jule::outln(jule::Str("julec version: beta 0.0.5 @master", 33));
	jule::outln(jule::Str("architecture: i386", 18));
	jule::outln(jule::Str("operating system: linux", 23));
}



inline jule::Bool _20373171a_process_command(void) {
	{
		auto _match_expr{ _20391c818_ARGS[1LL] };
		if (!((jule::Str("help", 4)) == _match_expr)) { goto _case_end_4900847792; }
		_case_begin_4900847792:;
		{
			_20373171a_help();
		}
		goto _match_end_4900841888;
		_case_end_4900847792:;
		if (!((jule::Str("version", 7)) == _match_expr)) { goto _case_end_4900847904; }
		_case_begin_4900847904:;
		{
			_20373171a_version();
		}
		goto _match_end_4900841888;
		_case_end_4900847904:;
		if (!((jule::Str("tool", 4)) == _match_expr)) { goto _case_end_4900848016; }
		_case_begin_4900848016:;
		{
			_20373171a_tool();
		}
		goto _match_end_4900841888;
		_case_end_4900848016:;
		if (!((jule::Str("julenv", 6)) == _match_expr)) { goto _case_end_4900849104; }
		_case_begin_4900849104:;
		{
			_20373171a_julenv();
		}
		goto _match_end_4900841888;
		_case_end_4900849104:;
		_case_begin_4900847408:;
		{
			return false;
		}
		goto _match_end_4900841888;
		_case_end_4900847408:;
		_match_end_4900841888:;
	}
	return true;
}



inline void _20373171a_exit_err(jule::Str _14313_msg) {
	jule::outln(_14313_msg);
	_2039051d5_exit(1LL);
}



void entry_point(void) {
	if (_20391c818_ARGS.len() < 2LL) {
		return;
	}
	if (_20373171a_process_command()) {
		return;
	}
	_2037747c4_compile_command();
}



inline void _2037315e9___init_common(void) {
	_2037747c4_COMPILER=jule::Str("clang", 5);
	_2037747c4_COMPILER_PATH=jule::Str("clang++", 7);
}



inline void _203771628_init(void) {
	_2037315e9___init_common();
}



inline jule::Int _2037747c4_system(jule::Str _8211_cmd) {
	return static_cast<jule::Int>(static_cast<jule::Int>(system(((char*)((&(_8211_cmd[0LL])))))));
}



inline std::tuple<jule::Str,jule::Str> _2037747c4_get_option(jule::Slice<jule::Str>& _8616_args,jule::Int& _8634_i) {
	jule::Str _8644_arg = jule::Str();
	jule::Str _8654_content = jule::Str();
	_iter_begin_4900864992:;
	if (!(_8634_i < _8616_args.len())) { goto _iter_end_4900864992; }
	{
		_8644_arg=_8616_args[static_cast<jule::Int>(_8634_i)];
		jule::Int _8917_j = 0LL;
		jule::Slice<jule::I32> _9017_runes = static_cast<jule::Slice<jule::I32>>(_8644_arg);
		jule::I32 _9117_r = _9017_runes[static_cast<jule::Int>(_8917_j)];
		if (_9117_r != '-') {
			_8654_content+=_8644_arg;
			_8644_arg=jule::Str("", 0);
			goto _iter_next_4900864992;
		}
		(_8917_j)++;
		if (_8917_j >= _9017_runes.len()) {
			_20373171a_exit_err(jule::Str("undefined syntax: ", 18) + _8644_arg);
		}
		_9117_r=_9017_runes[static_cast<jule::Int>(_8917_j)];
		if (_9117_r == '-') {
			(_8917_j)++;
			if (_8917_j >= _9017_runes.len()) {
				_20373171a_exit_err(jule::Str("undefined syntax: ", 18) + _8644_arg);
			}
			_9117_r=_9017_runes[static_cast<jule::Int>(_8917_j)];
		}
		if ((!(_20542560a_is_ident_rune(static_cast<jule::Str>(_9117_r))))) {
			_20373171a_exit_err(jule::Str("undefined syntax: ", 18) + _8644_arg);
		}
		(_8917_j)++;
		_iter_begin_4900879680:;
		if (!(_8917_j < _9017_runes.len())) { goto _iter_end_4900879680; }
		{
			_9117_r=_9017_runes[static_cast<jule::Int>(_8917_j)];
			if (((((!(_20542560a_is_space(_9117_r))) && (!(_20542560a_is_letter(_9117_r)))) && (!(_20542560a_is_decimal(static_cast<jule::U8>(_9117_r))))) && (_9117_r != '_')) && (_9117_r != '-')) {
				_20373171a_exit_err(jule::Str("undefined syntax: ", 18) + static_cast<jule::Str>(_9017_runes.slice(static_cast<jule::Int>(_8917_j))));
			}
		}
		_iter_next_4900879680:;
		(_8917_j)++;
		goto _iter_begin_4900879680;
		_iter_end_4900879680:;
		goto _iter_end_4900864992;
	}
	_iter_next_4900864992:;
	(_8634_i)++;
	goto _iter_begin_4900864992;
	_iter_end_4900864992:;
	return std::make_tuple(_8644_arg,_8654_content);
}



inline jule::Str _2037747c4_get_option_value(jule::Slice<jule::Str>& _13022_args,jule::Int& _13040_i) {
	(_13040_i)++;
	if (_13040_i < _13022_args.len()) {
		jule::Str _13313_arg = _13022_args[static_cast<jule::Int>(_13040_i)];
		return _13313_arg;
	}
	return jule::Str("", 0);
}



inline void _2037747c4_parse_out_option(jule::Slice<jule::Str>& _13922_args,jule::Int& _13940_i) {
	jule::Str _1409_value = _2037747c4_get_option_value(_13922_args,_13940_i);
	if (_1409_value == jule::Str("", 0)) {
		_20373171a_exit_err(jule::Str("missing option value: -o --out", 30));
	}
	_2037747c4_OUT=_1409_value;
}



inline void _2037747c4_parse_opt_option(jule::Slice<jule::Str>& _14722_args,jule::Int& _14740_i) {
	jule::Str _1489_value = _2037747c4_get_option_value(_14722_args,_14740_i);
	if (_1489_value == jule::Str("", 0)) {
		_20373171a_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto _match_expr{ _1489_value };
		if (!((jule::Str("L0", 2)) == _match_expr)) { goto _case_end_4900903312; }
		_case_begin_4900903312:;
		{
			_205094587_push_opt_level(0LLU);
		}
		goto _match_end_4900901568;
		_case_end_4900903312:;
		if (!((jule::Str("L1", 2)) == _match_expr)) { goto _case_end_4900904224; }
		_case_begin_4900904224:;
		{
			_205094587_push_opt_level(1LLU);
		}
		goto _match_end_4900901568;
		_case_end_4900904224:;
		_case_begin_4900900976:;
		{
			_20373171a_exit_err(jule::Str("invalid optimization level: ", 28) + _1489_value);
		}
		goto _match_end_4900901568;
		_case_end_4900900976:;
		_match_end_4900901568:;
	}
}



inline void _2037747c4_check_target_arch(jule::Str _16022_arch) {
	{
		auto _range_expr = _2037d86a1_DISTARCH;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _2037747c4_distarch = *_range_begin;
			_iter_begin_4900906544:;
			{
				if (_16022_arch == _2037747c4_distarch) {
					return;
				}
			}
			_iter_next_4900906544:;
			++_range_begin;
			if (_range_begin != _range_end) { _2037747c4_distarch = *_range_begin; goto _iter_begin_4900906544; }
			_iter_end_4900906544:;
		}
	}
	_20373171a_exit_err(jule::Str("unsupported/undefined architecture: ", 36) + _16022_arch);
}



inline void _2037747c4_check_target_os(jule::Str _17020_os) {
	{
		auto _range_expr = _2037d86a1_DISTOS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _2037747c4_distos = *_range_begin;
			_iter_begin_4900909840:;
			{
				if (_17020_os == _2037747c4_distos) {
					return;
				}
			}
			_iter_next_4900909840:;
			++_range_begin;
			if (_range_begin != _range_end) { _2037747c4_distos = *_range_begin; goto _iter_begin_4900909840; }
			_iter_end_4900909840:;
		}
	}
	_20373171a_exit_err(jule::Str("unsupported/undefined operating system: ", 40) + _17020_os);
}



inline void _2037747c4_parse_target_option(jule::Slice<jule::Str>& _18025_args,jule::Int& _18043_i) {
	jule::Str _1819_value = _2037747c4_get_option_value(_18025_args,_18043_i);
	if (_1819_value == jule::Str("", 0)) {
		_20373171a_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _1869_parts = _1819_value.split(jule::Str("-", 1),-1LL);
	if (_1869_parts.len() != 2LL) {
		_20373171a_exit_err(jule::Str("undefined platform target format: ", 34) + _1819_value);
	}
	jule::Str _19110_os = _1869_parts[0LL];
	jule::Str _19114_arch = _1869_parts[1LL];
	std::tie(_19110_os,_19114_arch) = std::make_tuple(_1869_parts[0LL],_1869_parts[1LL]);
	if (_19110_os != jule::Str("native", 6)) {
		_2037747c4_check_target_os(_19110_os);
		_204e61a09_OS=_19110_os;
	}
	if (_19114_arch != jule::Str("native", 6)) {
		_2037747c4_check_target_arch(_19114_arch);
		_204e61a09_ARCH=_19114_arch;
	}
}



inline void _2037747c4_parse_compiler_option(jule::Slice<jule::Str>& _20427_args,jule::Int& _20445_i) {
	jule::Str _2059_value = _2037747c4_get_option_value(_20427_args,_20445_i);
	{
		auto _match_expr{ _2059_value };
		if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_4900931632; }
		_case_begin_4900931632:;
		{
			_20373171a_exit_err(jule::Str("missing option value: --compiler", 32));
		}
		goto _match_end_4900928944;
		_case_end_4900931632:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4900931744; }
		_case_begin_4900931744:;
		{
			_2037747c4_COMPILER=jule::Str("clang", 5);
			_2037747c4_COMPILER_PATH=jule::Str("clang++", 7);
		}
		goto _match_end_4900928944;
		_case_end_4900931744:;
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4900931856; }
		_case_begin_4900931856:;
		{
			_2037747c4_COMPILER=jule::Str("gcc", 3);
			_2037747c4_COMPILER_PATH=jule::Str("g++", 3);
		}
		goto _match_end_4900928944;
		_case_end_4900931856:;
		_case_begin_4900929424:;
		{
			_20373171a_exit_err(jule::Str("invalid option value for --compiler: ", 37) + _2059_value);
		}
		goto _match_end_4900928944;
		_case_end_4900929424:;
		_match_end_4900928944:;
	}
}



inline jule::Str _2037747c4_parse_options(jule::Slice<jule::Str>& _22319_args) {
	jule::Str _22413_cmd = jule::Str("", 0);
	jule::Int _22813_i = 1LL;
	_iter_begin_4900935488:;
	if (!(_22813_i < _22319_args.len())) { goto _iter_end_4900935488; }
	{
		jule::Str _23014_arg;
		jule::Str _23019_content;
		std::tie(_23014_arg,_23019_content) = _2037747c4_get_option(_22319_args,_22813_i);
		_22413_cmd+=_23019_content;
		{
			auto _match_expr{ _23014_arg };
			if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_4900942096; }
			goto _match_end_4900937456;
			_case_end_4900942096:;
			if (!((jule::Str("-o", 2)) == _match_expr || (jule::Str("--out", 5)) == _match_expr)) { goto _case_end_4900940672; }
			_case_begin_4900940672:;
			{
				_2037747c4_parse_out_option(_22319_args,_22813_i);
			}
			goto _match_end_4900937456;
			_case_end_4900940672:;
			if (!((jule::Str("-t", 2)) == _match_expr || (jule::Str("--transpile", 11)) == _match_expr)) { goto _case_end_4900940928; }
			_case_begin_4900940928:;
			{
				_2037747c4_MODE=1LLU;
			}
			goto _match_end_4900937456;
			_case_end_4900940928:;
			if (!((jule::Str("-c", 2)) == _match_expr || (jule::Str("--compile", 9)) == _match_expr)) { goto _case_end_4900940160; }
			_case_begin_4900940160:;
			{
				_2037747c4_MODE=0LLU;
			}
			goto _match_end_4900937456;
			_case_end_4900940160:;
			if (!((jule::Str("--compiler", 10)) == _match_expr)) { goto _case_end_4900940272; }
			_case_begin_4900940272:;
			{
				_2037747c4_parse_compiler_option(_22319_args,_22813_i);
			}
			goto _match_end_4900937456;
			_case_end_4900940272:;
			if (!((jule::Str("--opt", 5)) == _match_expr)) { goto _case_end_4900940384; }
			_case_begin_4900940384:;
			{
				_2037747c4_parse_opt_option(_22319_args,_22813_i);
			}
			goto _match_end_4900937456;
			_case_end_4900940384:;
			if (!((jule::Str("--target", 8)) == _match_expr)) { goto _case_end_4900942208; }
			_case_begin_4900942208:;
			{
				_2037747c4_parse_target_option(_22319_args,_22813_i);
			}
			goto _match_end_4900937456;
			_case_end_4900942208:;
			if (!((jule::Str("--shadowing", 11)) == _match_expr)) { goto _case_end_4900942320; }
			_case_begin_4900942320:;
			{
				_2037747c4_SEMA_FLAGS|=1LL;
			}
			goto _match_end_4900937456;
			_case_end_4900942320:;
			if (!((jule::Str("--opt-copy", 10)) == _match_expr)) { goto _case_end_4900942432; }
			_case_begin_4900942432:;
			{
				_205094587_OPTIMIZATIONS=jule::append(_205094587_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10)}));
			}
			goto _match_end_4900937456;
			_case_end_4900942432:;
			if (!((jule::Str("--opt-deadcode", 14)) == _match_expr)) { goto _case_end_4900942544; }
			_case_begin_4900942544:;
			{
				_205094587_OPTIMIZATIONS=jule::append(_205094587_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-deadcode", 14)}));
			}
			goto _match_end_4900937456;
			_case_end_4900942544:;
			if (!((jule::Str("--opt-append", 12)) == _match_expr)) { goto _case_end_4900942656; }
			_case_begin_4900942656:;
			{
				_205094587_OPTIMIZATIONS=jule::append(_205094587_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-append", 12)}));
			}
			goto _match_end_4900937456;
			_case_end_4900942656:;
			if (!((jule::Str("--opt-math", 10)) == _match_expr)) { goto _case_end_4900942768; }
			_case_begin_4900942768:;
			{
				_205094587_OPTIMIZATIONS=jule::append(_205094587_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-math", 10)}));
			}
			goto _match_end_4900937456;
			_case_end_4900942768:;
			if (!((jule::Str("--opt-access", 12)) == _match_expr)) { goto _case_end_4900942880; }
			_case_begin_4900942880:;
			{
				_205094587_OPTIMIZATIONS=jule::append(_205094587_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-access", 12)}));
			}
			goto _match_end_4900937456;
			_case_end_4900942880:;
			_case_begin_4900939568:;
			{
				_20373171a_exit_err(jule::Str("undefined option: ", 18) + _23014_arg);
			}
			goto _match_end_4900937456;
			_case_end_4900939568:;
			_match_end_4900937456:;
		}
	}
	_iter_next_4900935488:;
	(_22813_i)++;
	goto _iter_begin_4900935488;
	_iter_end_4900935488:;
	_22413_cmd=_22413_cmd.trim(jule::Str(" \t\r\n\v", 5));
	return _22413_cmd;
}



inline void _2037747c4_write_output(jule::Str _27017_path,jule::Str _27028_content) {
	jule::Str _2719_dir = _203896264_dir(_27017_path);
	jule::Int _27317_err;
	std::tie(std::ignore,_27317_err) = _205127c47_stat(_2719_dir);
	if (_27317_err != 0LLU) {
		_27317_err=_20539ca9e_create_dir(_2719_dir);
		if (_27317_err != 0LLU) {
			_20373171a_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	}
	jule::Ref<_20522c3ce_File> _28114_f;
	std::tie(_28114_f,_27317_err) = _205171686_open(_27017_path,578LL,438LL);
	if (_27317_err != 0LLU) {
		_20373171a_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	std::tie(std::ignore,_27317_err) = _28114_f->_method_write(static_cast<jule::Slice<jule::U8>>(_27028_content));
	if (_27317_err != 0LLU) {
		_20373171a_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	_28114_f->_method_close();
}



inline void _2037747c4_clear_objects(void) {
	if (_205171686_remove_file(_2037747c4_get_compile_path()) != 0LLU) {
		jule::outln(jule::Str("a problem occurs when object cleaning", 37));
		return;
	}
	_20539ca9e_remove_dir(_2037747c4_OUT_DIR);
}



inline void _2037747c4_compile_ir(jule::Str _30715_compiler,jule::Str _30730_compiler_cmd) {
	jule::Int _3089_status = _2037747c4_system((_30715_compiler + jule::Str(" ", 1)) + _30730_compiler_cmd);
	if (_3089_status != 0LL) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_3089_status);
		_20373171a_exit_err(jule::Str("", 0));
	}
	_2037747c4_clear_objects();
}



inline void _2037747c4_do_spell(jule::Str _31913_obj,jule::Str _31923_compiler,jule::Str _31938_compiler_cmd) {
	jule::Str _3209_path = _2037747c4_get_compile_path();
	_2037747c4_write_output(_3209_path,_31913_obj);
	{
		auto _match_expr{ _2037747c4_MODE };
		if (!((0LLU) == _match_expr)) { goto _case_end_4900979424; }
		_case_begin_4900979424:;
		{
			_2037747c4_compile_ir(_31923_compiler,_31938_compiler_cmd);
		}
		goto _match_end_4900978112;
		_case_end_4900979424:;
		_match_end_4900978112:;
	}
}



inline void _2037747c4_check_mode(void) {
	if ((_2037747c4_MODE != 1LLU) && (_2037747c4_MODE != 0LLU)) {
		jule::outln(_20377124e_logf(jule::Str("\"@\" is invalid value for the \"@\" key", 36),jule::Slice<jule::Any>({jule::Any(_2037747c4_MODE),jule::Any(jule::Str("mode", 4))})));
		_20373171a_exit_err(jule::Str("", 0));
	}
}



inline void _2037747c4_check_compiler(void) {
	if ((_2037747c4_COMPILER != jule::Str("gcc", 3)) && (_2037747c4_COMPILER != jule::Str("clang", 5))) {
		jule::outln(_20377124e_logf(jule::Str("\"@\" is invalid value for the \"@\" key", 36),jule::Slice<jule::Any>({jule::Any(_2037747c4_COMPILER),jule::Any(jule::Str("compiler", 8))})));
		_20373171a_exit_err(jule::Str("", 0));
	}
}



inline void _2037747c4_set(void) {
	_2037747c4_check_mode();
	_2037747c4_check_compiler();
	_204b8e12c_init_flags();
}



inline jule::Bool _2037747c4_is_cpp_source_file(jule::Str _35023_path) {
	jule::Int _3519_offset = _35023_path.rfind(jule::Str(".", 1));
	if (_3519_offset == -1LL) {
		return false;
	}
	return _2037761bb_is_valid_cpp_ext(_35023_path.slice(static_cast<jule::Int>(_3519_offset)));
}



inline std::tuple<jule::Str,jule::Str> _2037747c4_gen_compile_cmd(jule::Str _35920_source_path,jule::Ref<_204a33ac6_IR>& _35939_ir) {
	jule::Str _3609_compiler = _2037747c4_COMPILER_PATH;
	
	
	
	jule::Str _3659_SET_STD = jule::Str("--std=", 6) + _2037747c4_CPP_STD;
	jule::Str _36713_cmd = jule::Str("-O0 ", 4);
	{
		auto _match_expr{ _2037747c4_COMPILER };
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4901001872; }
		_case_begin_4901001872:;
		{
			_36713_cmd+=jule::Str("-w ", 3);
		}
		goto _match_end_4901000160;
		_case_end_4901001872:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4901001984; }
		_case_begin_4901001984:;
		{
			_36713_cmd+=jule::Str("-Wno-everything ", 16);
		}
		goto _match_end_4901000160;
		_case_end_4901001984:;
		_match_end_4901000160:;
	}
	_36713_cmd+=_3659_SET_STD + jule::Str(" ", 1);
	{
		auto _range_expr = _35939_ir->_field_passes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _2037747c4_pass = *_range_begin;
			_iter_begin_4901004400:;
			{
				_36713_cmd+=_2037747c4_pass + jule::Str(" ", 1);
			}
			_iter_next_4901004400:;
			++_range_begin;
			if (_range_begin != _range_end) { _2037747c4_pass = *_range_begin; goto _iter_begin_4901004400; }
			_iter_end_4901004400:;
		}
	}
	{
		auto _range_expr = _35939_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_206e66325_ImportInfo> _2037747c4_u = *_range_begin;
			_iter_begin_4901005408:;
			{
				if (_2037747c4_u->_field_cpp_linked && _2037747c4_is_cpp_source_file(_2037747c4_u->_field_path)) {
					_36713_cmd+=_2037747c4_u->_field_path + jule::Str(" ", 1);
				}
			}
			_iter_next_4901005408:;
			++_range_begin;
			if (_range_begin != _range_end) { _2037747c4_u = *_range_begin; goto _iter_begin_4901005408; }
			_iter_end_4901005408:;
		}
	}
	if (_2037747c4_OUT != jule::Str("", 0)) {
		_36713_cmd+=(jule::Str("-o ", 3) + _2037747c4_OUT) + jule::Str(" ", 1);
	}
	_36713_cmd+=_35920_source_path;
	return std::make_tuple(_3609_compiler,_36713_cmd);
}



inline jule::Str _2037747c4_get_compile_path(void) {
	return _203896264_join(jule::Slice<jule::Str>({_2037747c4_OUT_DIR,_2037747c4_OUT_NAME}));
}



inline void _2037747c4_apply_target_independent_optimizations(jule::Ref<_204a33ac6_IR>& _40848_ir) {
	if (_205094587_is_opt_enabled(jule::Str("--opt-deadcode", 14))) {
		_20382b5b2_eliminate(_40848_ir);
	}
}



inline void _2037747c4_compile_command(void) {
	jule::Str _4169_path = _2037747c4_parse_options(_20391c818_ARGS);
	if (_4169_path == jule::Str("", 0)) {
		_20373171a_exit_err(_20377124e_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>({})));
	}
	jule::Ref<_20537ab26_Status> _42210_inf;
	jule::Int _42215_err;
	std::tie(_42210_inf,_42215_err) = _205127c47_stat(_203845d29_PATH_STDLIB);
	if ((_42215_err != 0LLU) || (!(_42210_inf->_method_is_dir()))) {
		_20373171a_exit_err(_20377124e_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>({})));
	}
	_2037747c4_set();
	jule::Ref<_204a33ac6_IR> _42914_ir;
	jule::Slice<_20377124e_Log> _42918_logs;
	std::tie(_42914_ir,_42918_logs) = _204a33ac6_IR::_static_method_build(_4169_path,_2037747c4_SEMA_FLAGS);
	if ((!(jule::real(_42914_ir))) && (_42918_logs == nullptr)) {
		_20373171a_exit_err(_20377124e_logf(jule::Str("there is no Jule source code in this package: @", 47),jule::Slice<jule::Any>({jule::Any(_4169_path)})));
	}
	if (_42918_logs != nullptr) {
		_203731143_Logger::_static_method_print_logs(_42918_logs);
		_20373171a_exit_err(jule::Str("", 0));
	}
	
	jule::Ref<_2053ddd54_Fn> _44113_f = _42914_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if ((!(jule::real(_44113_f)))) {
		_20373171a_exit_err(_20377124e_logf(jule::Str("entry point (main) function is not defined", 42),jule::Slice<jule::Any>({})));
	}
	_44113_f->_field_statically=true;
	_44113_f=_42914_ir->_field_main->_method_find_fn(jule::Str("init", 4),false);
	if (jule::real(_44113_f)) {
		_44113_f->_field_statically=true;
	}
	_42914_ir->_method_order();
	_2037747c4_apply_target_independent_optimizations(_42914_ir);
	jule::Str _45710_compiler;
	jule::Str _45720_compiler_cmd;
	std::tie(_45710_compiler,_45720_compiler_cmd) = _2037747c4_gen_compile_cmd(_2037747c4_get_compile_path(),_42914_ir);
	jule::Str _45913_obj = _1a8e8cc29_gen(_42914_ir);
	_1a8e8cc29_append_standard(_45913_obj,_45710_compiler,_45720_compiler_cmd);
	_2037747c4_do_spell(_45913_obj,_45710_compiler,_45720_compiler_cmd);
}




void __jule_call_initializers(void) {
	_20391c818_init();
	_203845d29_init();
	_206c94dac_init();
	_203771628_init();
}

int main(int argc, char *argv[], char *envp[]) {
    std::set_terminate(&jule::terminate_handler);
    jule::set_sig_handler(jule::signal_handler);
    jule::setup_command_line_args(argc, argv);
    jule::setup_environment_variables(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}