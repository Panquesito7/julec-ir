// Auto generated by JuleC.
// JuleC version: beta 0.0.5 @master
// Date: 26/9/2023 18.35 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -O0 -Wno-everything --std=c++17 dist/ir.cpp

#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   
#include "std/sys/syscall_unix.hpp"                                   

struct _1b623bb7a_Importer;
struct _1b6703d45_Kind;
struct _1b6b746d3_Lookup;
struct _1e86b150c_RangeIterGen;

struct _1e7673dc7_AnsiEscape;


struct _1e7673dc7_Logger;


struct _1e777b83c_LazyBuff;


struct _1e7690a81_Log;


struct _1ce43d858_bits_error;


struct _1e770c537_FloatInfo;


struct _1e770c537_DecimalSlice;


struct _1e878448c_LeftCheat;


struct _1e878448c_Decimal;


struct _1ce3851c8_DirEntry;


struct _1ce2b21b0_File;


struct _1ce48210a_Status;


struct _1b5a4a7db_FoldPair;


struct _1b5a4a7db_CaseRange;


struct _1b5a4a7db_Range16;


struct _1b5a4a7db_Range32;


struct _1b5a4a7db_RangeTable;


struct _1ce629071_accept_range;


struct _1ce35e3a0_Token;


struct _1ce4aae47_File;


struct _1ce494282_KindPair;


struct _1ce494282_Lex;


struct _1ce2b7acd_Ast;


struct _1ce385d22_CommentGroup;


struct _1ce385d22_NamespaceTypeDecl;


struct _1ce385d22_RefTypeDecl;


struct _1ce385d22_SlcTypeDecl;


struct _1ce385d22_TupleTypeDecl;


struct _1ce385d22_PtrTypeDecl;


struct _1ce385d22_ArrTypeDecl;


struct _1ce385d22_MapTypeDecl;


struct _1ce385d22_RetTypeDecl;


struct _1ce385d22_TupleExpr;


struct _1ce385d22_CastExpr;


struct _1ce385d22_StructLit;


struct _1ce385d22_ScopeTree;


struct _1ce385d22_Conditional;


struct _1ce38611e_FileInfo;


struct _1ce38611e_PackageInfo;


struct _1ce557587_Stmt;


struct _1ce557587_ScopeParser;


struct _1ce5ee178_CallData;


struct _1ce5ee178_Precedencer;


struct _1ce5ee178_ExprBuilder;


struct _1b5c910d6_Parser;


struct _1b5d8e899_TypeBuilder;


struct _1b6d4076c_Const;


struct _1ce385eed_FieldIns;


struct _1ce385eed_StructIns;


struct _1b6069348_RetType;


struct _1b6069348_ParamIns;


struct _1b6069348_FnIns;


struct _1ce50a46e_ReferenceStack;


struct _1ce50a46e_SymbolBuilder;


struct _1b61e873b_Scope;


struct _1b61e873b_If;


struct _1b61e873b_Else;


struct _1b61e873b_Conditional;


struct _1b61e873b_InfIter;


struct _1b61e873b_WhileIter;


struct _1b61e873b_RangeIter;


struct _1b61e873b_ContSt;


struct _1b61e873b_BreakSt;


struct _1b61e873b_Label;


struct _1b61e873b_GotoSt;


struct _1b61e873b_Postfix;


struct _1b61e873b_Assign;


struct _1b61e873b_MultiAssign;


struct _1b61e873b_Match;


struct _1b61e873b_Case;


struct _1b61e873b_FallSt;


struct _1b61e873b_RetSt;


struct _1b61e873b_Recover;


struct _1b61e873b_ScopeGoto;


struct _1b61e873b_ScopeChecker;


struct _1b61decc6_BinopExprModel;


struct _1b61decc6_UnaryExprModel;


struct _1b61decc6_GetRefPtrExprModel;


struct _1b61decc6_StructArgExprModel;


struct _1b61decc6_StructLitExprModel;


struct _1b61decc6_AllocStructLitExprModel;


struct _1b61decc6_CastingExprModel;


struct _1b61decc6_FnCallExprModel;


struct _1b61decc6_SliceExprModel;


struct _1b61decc6_IndexigExprModel;


struct _1b61decc6_AnonFnExprModel;


struct _1b61decc6_KeyValPairExprModel;


struct _1b61decc6_MapExprModel;


struct _1b61decc6_SlicingExprModel;


struct _1b61decc6_TraitSubIdentExprModel;


struct _1b61decc6_StructSubIdentExprModel;


struct _1b61decc6_StructStaticIdentExprModel;


struct _1b61decc6_ArrayExprModel;


struct _1b61decc6_CommonIdentExprModel;


struct _1b61decc6_CommonSubIdentExprModel;


struct _1b61decc6_TupleExprModel;


struct _1b61decc6_BuiltinOutCallExprModel;


struct _1b61decc6_BuiltinOutlnCallExprModel;


struct _1b61decc6_BuiltinCloneCallExprModel;


struct _1b61decc6_BuiltinNewCallExprModel;


struct _1b61decc6_BuiltinRealCallExprModel;


struct _1b61decc6_BuiltinDropCallExprModel;


struct _1b61decc6_BuiltinPanicCallExprModel;


struct _1b61decc6_BuiltinMakeCallExprModel;


struct _1b61decc6_BuiltinAppendCallExprModel;


struct _1b61decc6_BuiltinErrorTraitSubIdentExprModel;


struct _1b61decc6_SizeofExprModel;


struct _1b61decc6_AlignofExprModel;


struct _1b61decc6_RuneExprModel;


struct _1b61decc6_ExplicitDerefExprModel;


struct _1b61decc6_IntegratedToStrExprModel;


struct _1b61decc6_TernaryExprModel;


struct _1b623bb7a_Package;


struct _1b622b76e_Sema;


struct _1b65a085c_RangeChecker;


struct _1b66b3a3b_SymbolTable;


struct _1b66db129_Data;


struct _1b66db129_Value;


struct _1b66db129_Eval;


struct _1b6703d45_TypeKind;


struct _1b6703d45_TypeSymbol;


struct _1b6703d45_Prim;


struct _1b6703d45_Ref;


struct _1b6703d45_Slc;


struct _1b6703d45_Tuple;


struct _1b6703d45_Map;


struct _1b6703d45_Arr;


struct _1b6703d45_Ptr;


struct _1b6703d45_Referencer;


struct _1ce135770_PlainImporter;


struct _1cde30c0d_OrderedDefines;


struct _1cde30c0d_DefineOrderer;


struct _1cdd24409_ScopeDeadCode;


struct _1b72774ab_AbsTime;


struct _1b72774ab_Time;


struct _1b72774ab_Duration;


struct _1e86b150c_IndexRangeIterGen;


struct _1e86b150c_MapRangeIterGen;


struct _1ce385d22_MatchCase;


struct _1ce385d22_LitExpr;


struct _1ce385d22_UnsafeExpr;


struct _1ce385d22_IdentExpr;


struct _1ce385d22_UnaryExpr;


struct _1ce385d22_VariadicExpr;


struct _1ce385d22_NsSelectionExpr;


struct _1ce385d22_SubIdentExpr;


struct _1ce385d22_BinopExpr;


struct _1ce385d22_FieldExprPair;


struct _1ce385d22_BraceLit;


struct _1ce385d22_KeyValPair;


struct _1ce385d22_SliceExpr;


struct _1ce385d22_IndexingExpr;


struct _1b65a085c_DynamicTypeAnnotation;


struct _1b65a085c_StructLitChecker;


struct _1ce385d22_SlicingExpr;


struct _1ce385d22_TernaryExpr;


struct _1ce385d22_LabelSt;


struct _1ce385d22_FallSt;


struct _1ce385d22_AssignSt;


struct _1ce385d22_RetSt;


struct _1ce385d22_Iter;


struct _1ce385d22_WhileKind;


struct _1ce385d22_RangeKind;


struct _1b65a085c_AssignTypeChecker;


struct _1b65a085c_FnCallArgChecker;


struct _1b65a085c_RetTypeChecker;


struct _1ce385d22_GenericDecl;


struct _1ce385d22_GotoSt;


struct _1b66db129_BinopSolver;


struct _1b6703d45_TypeAlias;


struct _1ce385d22_AssignLeft;


struct _1ce385d22_Comment;


struct _1ce385d22_ParamDecl;


struct _1ce385d22_FnDecl;


struct _1ce385d22_VarDecl;


struct _1b6703d45_TypeChecker;


struct _1cdd79d22_IR;


struct _1ce385d22_BreakSt;


struct _1ce385d22_ContSt;


struct _1b61e873b_ScopeLabel;


struct _1ce385d22_If;


struct _1ce385d22_Else;


struct _1ce385d22_Directive;


struct _1ce385d22_TypeAliasDecl;


struct _1ce385d22_Case;


struct _1ce385d22_UseDecl;


struct _1ce385d22_EnumItemDecl;


struct _1ce385d22_EnumDecl;


struct _1ce385d22_FieldDecl;


struct _1ce385d22_StructDecl;


struct _1ce385d22_TraitDecl;


struct _1ce385d22_Impl;


struct _1ce385d22_Expr;


struct _1ce385d22_TypeDecl;


struct _1ce6015a9_AssignInfo;


struct _1ce385d22_IdentTypeDecl;


struct _1ce385eed_Field;


struct _1ce385eed_Struct;


struct _1ce385d22_FnCallExpr;


struct _1b6069348_Param;


struct _1b6069348_Fn;


struct _1ce385d22_Node;


struct _1ce50a46e_Pass;


struct _1b61d7d79_Trait;


struct _1b61d7c58_EnumItem;


struct _1b61d7c58_Enum;


struct _1b623bb7a_ImportInfo;


struct _1b61ddc92_Impl;


struct _1b637edab_Var;


struct _1b65a085c_TypeCompatibilityChecker;

struct _1b623bb7a_Importer {
	virtual ~_1b623bb7a_Importer(void) {}

	virtual jule::Ref<_1b623bb7a_ImportInfo> _method_get_import(jule::Str _1633_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ref<_1ce2b7acd_Ast>>,jule::Slice<_1e7690a81_Log>> _method_import_package(jule::Str _2037_path) { return {}; }
	virtual void _method_imported(jule::Ref<_1b623bb7a_ImportInfo>) {}
};

struct _1b6703d45_Kind {
	virtual ~_1b6703d45_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ref<_1b6703d45_TypeKind> _4721_other) { return {}; }
};

struct _1b6b746d3_Lookup {
	virtual ~_1b6b746d3_Lookup(void) {}

	virtual jule::Ref<_1b623bb7a_ImportInfo> _method_find_package(jule::Str _935_ident) { return {}; }
	virtual jule::Ref<_1b623bb7a_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)> _1337_selector) { return {}; }
	virtual jule::Ref<_1b637edab_Var> _method_find_var(jule::Str _1731_ident,jule::Bool _1743_cpp_linked) { return {}; }
	virtual jule::Ref<_1b6703d45_TypeAlias> _method_find_type_alias(jule::Str _2138_ident,jule::Bool _2150_cpp_linked) { return {}; }
	virtual jule::Ref<_1ce385eed_Struct> _method_find_struct(jule::Str _2534_ident,jule::Bool _2546_cpp_linked) { return {}; }
	virtual jule::Ref<_1b6069348_Fn> _method_find_fn(jule::Str _2930_ident,jule::Bool _2942_cpp_linked) { return {}; }
	virtual jule::Ref<_1b61d7d79_Trait> _method_find_trait(jule::Str _3333_ident) { return {}; }
	virtual jule::Ref<_1b61d7c58_Enum> _method_find_enum(jule::Str _3732_ident) { return {}; }
};

struct _1e86b150c_RangeIterGen {
	virtual ~_1e86b150c_RangeIterGen(void) {}

	virtual jule::Str _method_gen(void) { return {}; }
};


struct _1e7673dc7_AnsiEscape {
	

	_1e7673dc7_AnsiEscape(void) = default;

	static inline void _static_method_reset(void);


	static inline void _static_method_print(jule::Str,jule::Str);


	inline bool operator==(const _1e7673dc7_AnsiEscape &_Src) const { return true; }

	inline bool operator!=(const _1e7673dc7_AnsiEscape &_Src) const { return !this->operator==(_Src); }
};


struct _1e7673dc7_Logger {
	

	_1e7673dc7_Logger(void) = default;

	static inline void _static_method_log_flat(_1e7690a81_Log&);


	static inline void _static_method_log_error(_1e7690a81_Log&);


	static inline void _static_method_log(_1e7690a81_Log&);


	static inline void _static_method_print_logs(jule::Slice<_1e7690a81_Log>&);


	inline bool operator==(const _1e7673dc7_Logger &_Src) const { return true; }

	inline bool operator!=(const _1e7673dc7_Logger &_Src) const { return !this->operator==(_Src); }
};


struct _1e777b83c_LazyBuff {
	jule::Str _field_path{jule::Str()};
	jule::Slice<jule::U8> _field_buff{jule::Slice<jule::U8>()};
	jule::Int _field_w{jule::Int()};
	jule::Str _field_vol_and_path{jule::Str()};
	jule::Int _field_vol_len{jule::Int()};


	_1e777b83c_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_1e777b83c_LazyBuff(void) = default;

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(const _1e777b83c_LazyBuff &_Src) const {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	inline bool operator!=(const _1e777b83c_LazyBuff &_Src) const { return !this->operator==(_Src); }
};


struct _1e7690a81_Log {
	jule::Int _field_kind{0LLU};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_text{jule::Str()};
	jule::Str _field_line{jule::Str()};
	jule::Str _field_suggestion{jule::Str()};


	_1e7690a81_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_1e7690a81_Log(void) = default;

	inline bool operator==(const _1e7690a81_Log &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text &&
			this->_field_line == _Src._field_line &&
			this->_field_suggestion == _Src._field_suggestion;
	}

	inline bool operator!=(const _1e7690a81_Log &_Src) const { return !this->operator==(_Src); }
};


struct _1ce43d858_bits_error: public jule::Error {
	jule::Str _field_message{jule::Str()};


	_1ce43d858_bits_error(jule::Str __param_message): _field_message(__param_message) {}

	

	_1ce43d858_bits_error(void) = default;

	inline jule::Str _method_error(void);


	inline bool operator==(const _1ce43d858_bits_error &_Src) const {
		return 
			this->_field_message == _Src._field_message;
	}

	inline bool operator!=(const _1ce43d858_bits_error &_Src) const { return !this->operator==(_Src); }
};


struct _1e770c537_FloatInfo {
	jule::Uint _field_mantbits{jule::Uint()};
	jule::Uint _field_expbits{jule::Uint()};
	jule::Int _field_bias{jule::Int()};


	_1e770c537_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_1e770c537_FloatInfo(void) = default;

	inline bool operator==(const _1e770c537_FloatInfo &_Src) const {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	inline bool operator!=(const _1e770c537_FloatInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1e770c537_DecimalSlice {
	jule::Slice<jule::U8> _field_d{jule::Slice<jule::U8>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};


	_1e770c537_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_1e770c537_DecimalSlice(void) = default;

	inline bool operator==(const _1e770c537_DecimalSlice &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	inline bool operator!=(const _1e770c537_DecimalSlice &_Src) const { return !this->operator==(_Src); }
};


struct _1e878448c_LeftCheat {
	jule::Int _field_delta{jule::Int()};
	jule::Str _field_cutoff{jule::Str()};


	_1e878448c_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_1e878448c_LeftCheat(void) = default;

	inline bool operator==(const _1e878448c_LeftCheat &_Src) const {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	inline bool operator!=(const _1e878448c_LeftCheat &_Src) const { return !this->operator==(_Src); }
};


struct _1e878448c_Decimal {
	jule::Array<jule::U8,800> _field_d{jule::Array<jule::U8,800>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};
	jule::Bool _field_trunc{jule::Bool()};


	_1e878448c_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_1e878448c_Decimal(void) = default;

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_1e770c537_FloatInfo&);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(const _1e878448c_Decimal &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	inline bool operator!=(const _1e878448c_Decimal &_Src) const { return !this->operator==(_Src); }
};


struct _1ce3851c8_DirEntry {
	jule::Str _field_name{jule::Str()};
	jule::Ref<_1ce48210a_Status> _field_stat{jule::Ref<_1ce48210a_Status>()};


	_1ce3851c8_DirEntry(jule::Str __param_name, jule::Ref<_1ce48210a_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_1ce3851c8_DirEntry(void) = default;

	inline bool operator==(const _1ce3851c8_DirEntry &_Src) const {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	inline bool operator!=(const _1ce3851c8_DirEntry &_Src) const { return !this->operator==(_Src); }
};


struct _1ce2b21b0_File {
	jule::Uintptr _field_handle{jule::Uintptr()};


	_1ce2b21b0_File(jule::Uintptr __param_handle): _field_handle(__param_handle) {}

	

	_1ce2b21b0_File(void) = default;

	inline std::tuple<jule::Int,jule::Int> _method_write(jule::Slice<jule::U8>);


	inline std::tuple<jule::Int,jule::Int> _method_read(jule::Slice<jule::U8>);


	static inline jule::Ref<_1ce2b21b0_File> _static_method_new(jule::Uintptr);


	inline std::tuple<jule::I64,jule::Int> _method_seek(jule::I64,jule::Int);


	inline jule::Int _method_close(void);


	inline bool operator==(const _1ce2b21b0_File &_Src) const {
		return 
			this->_field_handle == _Src._field_handle;
	}

	inline bool operator!=(const _1ce2b21b0_File &_Src) const { return !this->operator==(_Src); }
};


struct _1ce48210a_Status {
	jule::Uint _field_mode{jule::Uint()};
	jule::Uint _field_size{jule::Uint()};


	_1ce48210a_Status(jule::Uint __param_mode, jule::Uint __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_1ce48210a_Status(void) = default;

	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	inline bool operator==(const _1ce48210a_Status &_Src) const {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1ce48210a_Status &_Src) const { return !this->operator==(_Src); }
};


struct _1b5a4a7db_FoldPair {
	jule::U16 _field_from{jule::U16()};
	jule::U16 _field_to{jule::U16()};


	_1b5a4a7db_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_1b5a4a7db_FoldPair(void) = default;

	inline bool operator==(const _1b5a4a7db_FoldPair &_Src) const {
		return 
			this->_field_from == _Src._field_from &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1b5a4a7db_FoldPair &_Src) const { return !this->operator==(_Src); }
};


struct _1b5a4a7db_CaseRange {
	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::Array<jule::I32,3> _field_delta{jule::Array<jule::I32,3>()};


	_1b5a4a7db_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_1b5a4a7db_CaseRange(void) = default;

	inline bool operator==(const _1b5a4a7db_CaseRange &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_delta == _Src._field_delta;
	}

	inline bool operator!=(const _1b5a4a7db_CaseRange &_Src) const { return !this->operator==(_Src); }
};


struct _1b5a4a7db_Range16 {
	jule::U16 _field_lo{jule::U16()};
	jule::U16 _field_hi{jule::U16()};
	jule::U16 _field_stride{jule::U16()};


	_1b5a4a7db_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1b5a4a7db_Range16(void) = default;

	inline bool operator==(const _1b5a4a7db_Range16 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _1b5a4a7db_Range16 &_Src) const { return !this->operator==(_Src); }
};


struct _1b5a4a7db_Range32 {
	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::U32 _field_stride{jule::U32()};


	_1b5a4a7db_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1b5a4a7db_Range32(void) = default;

	inline bool operator==(const _1b5a4a7db_Range32 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _1b5a4a7db_Range32 &_Src) const { return !this->operator==(_Src); }
};


struct _1b5a4a7db_RangeTable {
	jule::Slice<_1b5a4a7db_Range16> _field_r16{jule::Slice<_1b5a4a7db_Range16>()};
	jule::Slice<_1b5a4a7db_Range32> _field_r32{jule::Slice<_1b5a4a7db_Range32>()};
	jule::Int _field_latin_offset{jule::Int()};


	_1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16> __param_r16, jule::Slice<_1b5a4a7db_Range32> __param_r32, jule::Int __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_1b5a4a7db_RangeTable(void) = default;

	inline bool operator==(const _1b5a4a7db_RangeTable &_Src) const {
		return 
			this->_field_r16 == _Src._field_r16 &&
			this->_field_r32 == _Src._field_r32 &&
			this->_field_latin_offset == _Src._field_latin_offset;
	}

	inline bool operator!=(const _1b5a4a7db_RangeTable &_Src) const { return !this->operator==(_Src); }
};


struct _1ce629071_accept_range {
	jule::U8 _field_lo{jule::U8()};
	jule::U8 _field_hi{jule::U8()};


	_1ce629071_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_1ce629071_accept_range(void) = default;

	inline bool operator==(const _1ce629071_accept_range &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	inline bool operator!=(const _1ce629071_accept_range &_Src) const { return !this->operator==(_Src); }
};


struct _1ce35e3a0_Token {
	jule::Ref<_1ce4aae47_File> _field_file{jule::Ref<_1ce4aae47_File>()};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_kind{jule::Str()};
	jule::Uint _field_id{0LLU};


	_1ce35e3a0_Token(jule::Ref<_1ce4aae47_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1ce35e3a0_Token(void) = default;

	inline jule::Int _method_prec(void);


	inline bool operator==(const _1ce35e3a0_Token &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _1ce35e3a0_Token &_Src) const { return !this->operator==(_Src); }
};


struct _1ce4aae47_File {
	jule::Slice<jule::U8> _field_data{jule::Slice<jule::U8>()};
	jule::Str _field__path{jule::Str()};
	jule::Slice<_1ce35e3a0_Token> _field__tokens{jule::Slice<_1ce35e3a0_Token>()};


	_1ce4aae47_File(jule::Slice<jule::U8> __param_data, jule::Str __param__path, jule::Slice<_1ce35e3a0_Token> __param__tokens): _field_data(__param_data), _field__path(__param__path), _field__tokens(__param__tokens) {}

	

	_1ce4aae47_File(void) = default;

	inline jule::Bool _method_is_ok(void);


	inline void _method_fill(jule::Slice<jule::U8>);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline jule::Slice<_1ce35e3a0_Token> _method_tokens(void);


	inline jule::Str _method_get_row(jule::Int);


	inline bool operator==(const _1ce4aae47_File &_Src) const {
		return 
			this->_field_data == _Src._field_data &&
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	inline bool operator!=(const _1ce4aae47_File &_Src) const { return !this->operator==(_Src); }
};


struct _1ce494282_KindPair {
	jule::Str _field_kind{jule::Str("::", 2)};
	jule::Uint _field_id{0LLU};


	_1ce494282_KindPair(jule::Str __param_kind, jule::Uint __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1ce494282_KindPair(void) = default;

	inline bool operator==(const _1ce494282_KindPair &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _1ce494282_KindPair &_Src) const { return !this->operator==(_Src); }
};


struct _1ce494282_Lex {
	jule::Slice<_1ce35e3a0_Token> _field_tokens{jule::Slice<_1ce35e3a0_Token>()};
	jule::Ref<_1ce4aae47_File> _field_file{jule::Ref<_1ce4aae47_File>()};
	jule::Int _field_pos{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Int _field_row{jule::Int()};
	jule::Slice<_1e7690a81_Log> _field_errors{jule::Slice<_1e7690a81_Log>()};


	_1ce494282_Lex(jule::Slice<_1ce35e3a0_Token> __param_tokens, jule::Ref<_1ce4aae47_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_1e7690a81_Log> __param_errors): _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_1ce494282_Lex(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_1ce35e3a0_Token&,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>&);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_1ce35e3a0_Token&);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>&);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>&);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>&,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>&);


	inline jule::Str _method_lex_str(void);


	inline jule::Bool _method_is_first_token_of_line(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>&,jule::Str,jule::Uint,_1ce35e3a0_Token&);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_1ce35e3a0_Token&);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>&,_1ce35e3a0_Token&);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>&,_1ce35e3a0_Token&);


	inline _1ce35e3a0_Token _method_token(void);


	inline bool operator==(const _1ce494282_Lex &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1ce494282_Lex &_Src) const { return !this->operator==(_Src); }
};


struct _1ce2b7acd_Ast {
	jule::Ref<_1ce4aae47_File> _field_file{jule::Ref<_1ce4aae47_File>()};
	jule::Slice<jule::Ref<_1ce385d22_Directive>> _field_top_directives{jule::Slice<jule::Ref<_1ce385d22_Directive>>()};
	jule::Slice<jule::Ref<_1ce385d22_UseDecl>> _field_use_decls{jule::Slice<jule::Ref<_1ce385d22_UseDecl>>()};
	jule::Slice<jule::Ref<_1ce385d22_Impl>> _field_impls{jule::Slice<jule::Ref<_1ce385d22_Impl>>()};
	jule::Slice<jule::Ref<_1ce385d22_Comment>> _field_comments{jule::Slice<jule::Ref<_1ce385d22_Comment>>()};
	jule::Slice<_1ce385d22_Node> _field_decls{jule::Slice<_1ce385d22_Node>()};


	_1ce2b7acd_Ast(jule::Ref<_1ce4aae47_File> __param_file, jule::Slice<jule::Ref<_1ce385d22_Directive>> __param_top_directives, jule::Slice<jule::Ref<_1ce385d22_UseDecl>> __param_use_decls, jule::Slice<jule::Ref<_1ce385d22_Impl>> __param_impls, jule::Slice<jule::Ref<_1ce385d22_Comment>> __param_comments, jule::Slice<_1ce385d22_Node> __param_decls): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_impls(__param_impls), _field_comments(__param_comments), _field_decls(__param_decls) {}

	

	_1ce2b7acd_Ast(void) = default;

	inline bool operator==(const _1ce2b7acd_Ast &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	inline bool operator!=(const _1ce2b7acd_Ast &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_CommentGroup {
	jule::Slice<jule::Ref<_1ce385d22_Comment>> _field_comments{jule::Slice<jule::Ref<_1ce385d22_Comment>>()};


	_1ce385d22_CommentGroup(jule::Slice<jule::Ref<_1ce385d22_Comment>> __param_comments): _field_comments(__param_comments) {}

	

	_1ce385d22_CommentGroup(void) = default;

	inline bool operator==(const _1ce385d22_CommentGroup &_Src) const {
		return 
			this->_field_comments == _Src._field_comments;
	}

	inline bool operator!=(const _1ce385d22_CommentGroup &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_NamespaceTypeDecl {
	jule::Slice<_1ce35e3a0_Token> _field_idents{jule::Slice<_1ce35e3a0_Token>()};
	jule::Ref<_1ce385d22_IdentTypeDecl> _field_kind{jule::Ref<_1ce385d22_IdentTypeDecl>()};


	_1ce385d22_NamespaceTypeDecl(jule::Slice<_1ce35e3a0_Token> __param_idents, jule::Ref<_1ce385d22_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_1ce385d22_NamespaceTypeDecl(void) = default;

	inline bool operator==(const _1ce385d22_NamespaceTypeDecl &_Src) const {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ce385d22_NamespaceTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_RefTypeDecl {
	jule::Ref<_1ce385d22_TypeDecl> _field_elem{jule::Ref<_1ce385d22_TypeDecl>()};


	_1ce385d22_RefTypeDecl(jule::Ref<_1ce385d22_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1ce385d22_RefTypeDecl(void) = default;

	inline bool operator==(const _1ce385d22_RefTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1ce385d22_RefTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_SlcTypeDecl {
	jule::Ref<_1ce385d22_TypeDecl> _field_elem{jule::Ref<_1ce385d22_TypeDecl>()};


	_1ce385d22_SlcTypeDecl(jule::Ref<_1ce385d22_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1ce385d22_SlcTypeDecl(void) = default;

	inline bool operator==(const _1ce385d22_SlcTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1ce385d22_SlcTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_TupleTypeDecl {
	jule::Slice<jule::Ref<_1ce385d22_TypeDecl>> _field_types{jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>()};


	_1ce385d22_TupleTypeDecl(jule::Slice<jule::Ref<_1ce385d22_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_1ce385d22_TupleTypeDecl(void) = default;

	inline bool operator==(const _1ce385d22_TupleTypeDecl &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1ce385d22_TupleTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_PtrTypeDecl {
	jule::Ref<_1ce385d22_TypeDecl> _field_elem{jule::Ref<_1ce385d22_TypeDecl>()};


	_1ce385d22_PtrTypeDecl(jule::Ref<_1ce385d22_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1ce385d22_PtrTypeDecl(void) = default;

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1ce385d22_PtrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1ce385d22_PtrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_ArrTypeDecl {
	jule::Ref<_1ce385d22_TypeDecl> _field_elem{jule::Ref<_1ce385d22_TypeDecl>()};
	jule::Ref<_1ce385d22_Expr> _field_size{jule::Ref<_1ce385d22_Expr>()};


	_1ce385d22_ArrTypeDecl(jule::Ref<_1ce385d22_TypeDecl> __param_elem, jule::Ref<_1ce385d22_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_1ce385d22_ArrTypeDecl(void) = default;

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(const _1ce385d22_ArrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1ce385d22_ArrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_MapTypeDecl {
	jule::Ref<_1ce385d22_TypeDecl> _field_key{jule::Ref<_1ce385d22_TypeDecl>()};
	jule::Ref<_1ce385d22_TypeDecl> _field_val{jule::Ref<_1ce385d22_TypeDecl>()};


	_1ce385d22_MapTypeDecl(jule::Ref<_1ce385d22_TypeDecl> __param_key, jule::Ref<_1ce385d22_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1ce385d22_MapTypeDecl(void) = default;

	inline bool operator==(const _1ce385d22_MapTypeDecl &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1ce385d22_MapTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_RetTypeDecl {
	jule::Ref<_1ce385d22_TypeDecl> _field_kind{jule::Ref<_1ce385d22_TypeDecl>()};
	jule::Slice<_1ce35e3a0_Token> _field_idents{jule::Slice<_1ce35e3a0_Token>()};


	_1ce385d22_RetTypeDecl(jule::Ref<_1ce385d22_TypeDecl> __param_kind, jule::Slice<_1ce35e3a0_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1ce385d22_RetTypeDecl(void) = default;

	inline bool operator==(const _1ce385d22_RetTypeDecl &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1ce385d22_RetTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_TupleExpr {
	jule::Slice<jule::Ref<_1ce385d22_Expr>> _field_expr{jule::Slice<jule::Ref<_1ce385d22_Expr>>()};


	_1ce385d22_TupleExpr(jule::Slice<jule::Ref<_1ce385d22_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_1ce385d22_TupleExpr(void) = default;

	inline bool operator==(const _1ce385d22_TupleExpr &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ce385d22_TupleExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_CastExpr {
	jule::Ref<_1ce385d22_TypeDecl> _field_kind{jule::Ref<_1ce385d22_TypeDecl>()};
	jule::Any _field_expr{jule::Any()};


	_1ce385d22_CastExpr(jule::Ref<_1ce385d22_TypeDecl> __param_kind, jule::Any __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1ce385d22_CastExpr(void) = default;

	inline bool operator==(const _1ce385d22_CastExpr &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ce385d22_CastExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_StructLit {
	jule::Ref<_1ce385d22_TypeDecl> _field_kind{jule::Ref<_1ce385d22_TypeDecl>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1ce385d22_StructLit(jule::Ref<_1ce385d22_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs): _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_1ce385d22_StructLit(void) = default;

	inline bool operator==(const _1ce385d22_StructLit &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1ce385d22_StructLit &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_ScopeTree {
	jule::Ref<_1ce385d22_ScopeTree> _field_parent{jule::Ref<_1ce385d22_ScopeTree>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_1ce385d22_ScopeTree(jule::Ref<_1ce385d22_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1ce385d22_ScopeTree(void) = default;

	inline bool operator==(const _1ce385d22_ScopeTree &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1ce385d22_ScopeTree &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_Conditional {
	jule::Ref<_1ce385d22_If> _field_head{jule::Ref<_1ce385d22_If>()};
	jule::Slice<jule::Ref<_1ce385d22_If>> _field_tail{jule::Slice<jule::Ref<_1ce385d22_If>>()};
	jule::Ref<_1ce385d22_Else> _field_default{jule::Ref<_1ce385d22_Else>()};


	_1ce385d22_Conditional(jule::Ref<_1ce385d22_If> __param_head, jule::Slice<jule::Ref<_1ce385d22_If>> __param_tail, jule::Ref<_1ce385d22_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_1ce385d22_Conditional(void) = default;

	inline bool operator==(const _1ce385d22_Conditional &_Src) const {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1ce385d22_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1ce38611e_FileInfo {
	jule::Ref<_1ce2b7acd_Ast> _field_ast{jule::Ref<_1ce2b7acd_Ast>()};
	jule::Slice<_1e7690a81_Log> _field_errors{jule::Slice<_1e7690a81_Log>()};


	_1ce38611e_FileInfo(jule::Ref<_1ce2b7acd_Ast> __param_ast, jule::Slice<_1e7690a81_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_1ce38611e_FileInfo(void) = default;

	inline bool operator==(const _1ce38611e_FileInfo &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1ce38611e_FileInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1ce38611e_PackageInfo {
	jule::Slice<jule::Ref<_1ce38611e_FileInfo>> _field_files{jule::Slice<jule::Ref<_1ce38611e_FileInfo>>()};


	_1ce38611e_PackageInfo(jule::Slice<jule::Ref<_1ce38611e_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_1ce38611e_PackageInfo(void) = default;

	inline bool operator==(const _1ce38611e_PackageInfo &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1ce38611e_PackageInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1ce557587_Stmt {
	jule::Slice<_1ce35e3a0_Token> _field_tokens{jule::Slice<_1ce35e3a0_Token>()};
	jule::Bool _field_terminated{jule::Bool()};


	_1ce557587_Stmt(jule::Slice<_1ce35e3a0_Token> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_1ce557587_Stmt(void) = default;

	inline bool operator==(const _1ce557587_Stmt &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	inline bool operator!=(const _1ce557587_Stmt &_Src) const { return !this->operator==(_Src); }
};


struct _1ce557587_ScopeParser {
	jule::Ref<_1b5c910d6_Parser> _field_p{jule::Ref<_1b5c910d6_Parser>()};
	jule::Ref<_1ce385d22_ScopeTree> _field_s{jule::Ref<_1ce385d22_ScopeTree>()};
	jule::Slice<jule::Ref<_1ce557587_Stmt>> _field_stms{jule::Slice<jule::Ref<_1ce557587_Stmt>>()};
	jule::Int _field_pos{jule::Int()};


	_1ce557587_ScopeParser(jule::Ref<_1b5c910d6_Parser> __param_p, jule::Ref<_1ce385d22_ScopeTree> __param_s, jule::Slice<jule::Ref<_1ce557587_Stmt>> __param_stms, jule::Int __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stms(__param_stms), _field_pos(__param_pos) {}

	

	_1ce557587_ScopeParser(void) = default;

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_1ce35e3a0_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_insert_as_next(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce557587_Stmt> _method_next(void);


	inline jule::Ref<_1ce385d22_ScopeTree> _method_build_scope(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Any _method_build_var_st(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Any _method_build_ret_st(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ref<_1ce557587_Stmt>&);


	inline jule::Ref<_1ce385d22_WhileKind> _method_build_while_iter_kind(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Slice<jule::Slice<_1ce35e3a0_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_VarDecl> _method_build_range_kind_key(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Slice<jule::Ref<_1ce385d22_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_1ce35e3a0_Token>>&);


	inline void _method_setup_range_kind_keys_plain(jule::Ref<_1ce385d22_RangeKind>&,jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_setup_range_kind_keys_explicit(jule::Ref<_1ce385d22_RangeKind>&,jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_setup_range_kind_keys(jule::Ref<_1ce385d22_RangeKind>&,jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_RangeKind> _method_build_range_iter_kind(jule::Slice<_1ce35e3a0_Token>&,jule::Slice<_1ce35e3a0_Token>&,_1ce35e3a0_Token&);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_1ce35e3a0_Token>&,_1ce35e3a0_Token&);


	inline jule::Any _method_build_common_iter(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ref<_1ce557587_Stmt>&);


	inline jule::Any _method_build_break_st(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Any _method_build_cont_st(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_If> _method_build_if(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_Else> _method_build_else(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Any _method_build_comment_st(_1ce35e3a0_Token&);


	inline jule::Any _method_build_call_st(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Any _method_build_co_call_st(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Any _method_build_fall_st(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_push_case_expr(jule::Slice<_1ce35e3a0_Token>,_1ce35e3a0_Token,jule::Bool,jule::Slice<jule::Ref<_1ce385d22_Expr>>&);


	inline jule::Slice<jule::Ref<_1ce385d22_Expr>> _method_build_case_exprs(jule::Slice<_1ce35e3a0_Token>&,jule::Bool);


	inline jule::Ref<_1ce385d22_ScopeTree> _method_build_case_scope(jule::Slice<_1ce35e3a0_Token>&);


	inline std::tuple<jule::Ref<_1ce385d22_Case>,jule::Bool> _method_build_case(jule::Slice<_1ce35e3a0_Token>&,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ref<_1ce385d22_Case>>,jule::Ref<_1ce385d22_Else>> _method_build_cases(jule::Slice<_1ce35e3a0_Token>,jule::Bool);


	inline jule::Ref<_1ce385d22_MatchCase> _method_build_match_case(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_ScopeTree> _method_build_scope_st(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_LabelSt> _method_build_label_st(jule::Slice<_1ce35e3a0_Token>&);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce6015a9_AssignInfo> _method_build_assign_info(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_AssignLeft> _method_build_assign_l(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Slice<jule::Ref<_1ce385d22_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_1ce35e3a0_Token>>&);


	inline std::tuple<jule::Ref<_1ce385d22_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_1ce35e3a0_Token>&);


	inline std::tuple<jule::Ref<_1ce385d22_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_1ce35e3a0_Token>);


	inline std::tuple<jule::Ref<_1ce385d22_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Any _method_build_st(jule::Ref<_1ce557587_Stmt>&);


	inline void _method_build(jule::Slice<_1ce35e3a0_Token>&,jule::Ref<_1ce385d22_ScopeTree>&);


	inline bool operator==(const _1ce557587_ScopeParser &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stms == _Src._field_stms &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1ce557587_ScopeParser &_Src) const { return !this->operator==(_Src); }
};


struct _1ce5ee178_CallData {
	jule::Slice<_1ce35e3a0_Token> _field_expr_tokens{jule::Slice<_1ce35e3a0_Token>()};
	jule::Slice<_1ce35e3a0_Token> _field_args_tokens{jule::Slice<_1ce35e3a0_Token>()};
	jule::Slice<_1ce35e3a0_Token> _field_generics_tokens{jule::Slice<_1ce35e3a0_Token>()};


	_1ce5ee178_CallData(jule::Slice<_1ce35e3a0_Token> __param_expr_tokens, jule::Slice<_1ce35e3a0_Token> __param_args_tokens, jule::Slice<_1ce35e3a0_Token> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_1ce5ee178_CallData(void) = default;

	inline bool operator==(const _1ce5ee178_CallData &_Src) const {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	inline bool operator!=(const _1ce5ee178_CallData &_Src) const { return !this->operator==(_Src); }
};


struct _1ce5ee178_Precedencer {
	jule::Slice<jule::Slice<jule::Any>> _field_pairs{jule::Slice<jule::Slice<jule::Any>>()};


	_1ce5ee178_Precedencer(jule::Slice<jule::Slice<jule::Any>> __param_pairs): _field_pairs(__param_pairs) {}

	

	_1ce5ee178_Precedencer(void) = default;

	inline void _method_set(jule::Int,jule::Any);


	inline jule::Any _method_get_lower(void);


	inline bool operator==(const _1ce5ee178_Precedencer &_Src) const {
		return 
			this->_field_pairs == _Src._field_pairs;
	}

	inline bool operator!=(const _1ce5ee178_Precedencer &_Src) const { return !this->operator==(_Src); }
};


struct _1ce5ee178_ExprBuilder {
	jule::Ref<_1b5c910d6_Parser> _field_p{jule::Ref<_1b5c910d6_Parser>()};


	_1ce5ee178_ExprBuilder(jule::Ref<_1b5c910d6_Parser> __param_p): _field_p(__param_p) {}

	

	_1ce5ee178_ExprBuilder(void) = default;

	inline void _method_push_err(_1ce35e3a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1ce385d22_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_1ce35e3a0_Token>>&);


	inline jule::Ref<_1ce385d22_LitExpr> _method_build_lit(_1ce35e3a0_Token);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_primitive_type(_1ce35e3a0_Token&);


	inline jule::Any _method_build_single(_1ce35e3a0_Token);


	inline jule::Ref<_1ce385d22_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_UnaryExpr> _method_build_unary(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_type(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Any _method_build_sub_ident(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_VariadicExpr> _method_build_variadic(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_CastExpr> _method_try_build_cast(jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_push_arg(jule::Slice<jule::Ref<_1ce385d22_Expr>>&,jule::Slice<_1ce35e3a0_Token>,_1ce35e3a0_Token);


	inline jule::Slice<jule::Ref<_1ce385d22_Expr>> _method_build_args(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Slice<jule::Ref<_1ce385d22_TypeDecl>> _method_build_call_generics(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_FnCallExpr> _method_build_fn_call(_1ce35e3a0_Token&,jule::Ref<_1ce5ee178_CallData>&);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_FnDecl> _method_build_anon_fn(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Any _method_build_unsafe(jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_push_range_lit_part(jule::Slice<_1ce35e3a0_Token>,_1ce35e3a0_Token,jule::Slice<jule::Slice<_1ce35e3a0_Token>>&);


	inline jule::Slice<jule::Slice<_1ce35e3a0_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_StructLit> _method_build_typed_struct_literal(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_BraceLit> _method_build_brace_lit(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Any _method_build_brace_range(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Slice<jule::Slice<_1ce35e3a0_Token>> _method_get_enumerable_parts(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_SliceExpr> _method_build_slice(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_IndexingExpr> _method_build_indexing(jule::Slice<_1ce35e3a0_Token>,jule::Slice<_1ce35e3a0_Token>,_1ce35e3a0_Token);


	inline jule::Ref<_1ce385d22_SlicingExpr> _method_build_slicing(jule::Slice<_1ce35e3a0_Token>&,jule::Slice<_1ce35e3a0_Token>&,jule::Int&,_1ce35e3a0_Token&);


	inline jule::Any _method_build_bracket_range(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Any _method_build_ternary(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Any _method_build_data(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_BinopExpr> _method_build_binop(jule::Slice<_1ce35e3a0_Token>&,jule::Int);


	inline jule::Any _method_build(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Any _method_build_kind(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_Expr> _method_build_from_tokens(jule::Slice<_1ce35e3a0_Token>);


	inline bool operator==(const _1ce5ee178_ExprBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p;
	}

	inline bool operator!=(const _1ce5ee178_ExprBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1b5c910d6_Parser {
	jule::Ref<_1b5c910d6_Parser> self{};

	jule::Ref<_1ce2b7acd_Ast> _field_ast{jule::Ref<_1ce2b7acd_Ast>()};
	jule::Slice<jule::Ref<_1ce385d22_Directive>> _field_directives{jule::Slice<jule::Ref<_1ce385d22_Directive>>()};
	jule::Ref<_1ce385d22_CommentGroup> _field_comment_group{jule::Ref<_1ce385d22_CommentGroup>()};
	jule::Slice<_1e7690a81_Log> _field_errors{jule::Slice<_1e7690a81_Log>()};


	_1b5c910d6_Parser(jule::Ref<_1ce2b7acd_Ast> __param_ast, jule::Slice<jule::Ref<_1ce385d22_Directive>> __param_directives, jule::Ref<_1ce385d22_CommentGroup> __param_comment_group, jule::Slice<_1e7690a81_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_comment_group(__param_comment_group), _field_errors(__param_errors) {
		this->self = jule::Ref<_1b5c910d6_Parser>::make(this, nullptr);

	}

	~_1b5c910d6_Parser(void) { this->self.ref = nullptr; }

	_1b5c910d6_Parser(void) { this->self = jule::Ref<_1b5c910d6_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_1ce35e3a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1ce385d22_Expr> _method_build_expr(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_Directive> _method_get_directive(jule::Ref<_1ce385d22_Comment>);


	inline void _method_push_directive(jule::Ref<_1ce385d22_Comment>&);


	inline void _method_process_comment(jule::Ref<_1ce385d22_Comment>&);


	inline jule::Ref<_1ce385d22_ScopeTree> _method_build_scope(jule::Slice<_1ce35e3a0_Token>&);


	inline std::tuple<jule::Ref<_1ce385d22_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_1ce35e3a0_Token>&,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ref<_1ce385d22_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_1ce35e3a0_Token>&,jule::Int*,jule::Bool);


	inline jule::Ref<_1ce385d22_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_build_var_type_and_expr(jule::Ref<_1ce385d22_VarDecl>&,jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_build_var_common(jule::Ref<_1ce385d22_VarDecl>&,jule::Slice<_1ce35e3a0_Token>);


	inline void _method_build_var_begin(jule::Ref<_1ce385d22_VarDecl>&,jule::Ref<jule::Int>,jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_VarDecl> _method_build_var(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_GenericDecl> _method_build_generic(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> _method_build_generics(jule::Slice<_1ce35e3a0_Token>&,_1ce35e3a0_Token&);


	inline jule::Ref<_1ce385d22_ParamDecl> _method_build_self_param(jule::Slice<_1ce35e3a0_Token>);


	inline void _method_param_type_begin(jule::Ref<_1ce385d22_ParamDecl>&,jule::Int&,jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_build_param_type(jule::Ref<_1ce385d22_ParamDecl>&,jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_param_body_id(jule::Ref<_1ce385d22_ParamDecl>,_1ce35e3a0_Token);


	inline void _method_build_param_body(jule::Ref<_1ce385d22_ParamDecl>&,jule::Ref<jule::Int>,jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_ParamDecl> _method_build_param(jule::Slice<_1ce35e3a0_Token>);


	inline void _method_check_params(jule::Slice<jule::Ref<_1ce385d22_ParamDecl>>&);


	inline jule::Slice<jule::Ref<_1ce385d22_ParamDecl>> _method_build_params(jule::Slice<_1ce35e3a0_Token>&,jule::Bool);


	inline std::tuple<jule::Ref<_1ce385d22_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_1ce35e3a0_Token>&,jule::Int&);


	inline std::tuple<jule::Ref<_1ce385d22_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_1ce35e3a0_Token>&,jule::Int&);


	inline jule::Ref<_1ce385d22_FnDecl> _method_build_fn_prototype(jule::Slice<_1ce35e3a0_Token>&,jule::Int&,jule::Bool);


	inline jule::Ref<_1ce385d22_FnDecl> _method_build_fn(jule::Slice<_1ce35e3a0_Token>&,jule::Bool,jule::Bool);


	inline jule::Slice<_1ce35e3a0_Token> _method_get_use_decl_selectors(jule::Slice<_1ce35e3a0_Token>);


	inline void _method_build_cpp_use_decl(jule::Ref<_1ce385d22_UseDecl>&,jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_build_std_use_decl(jule::Ref<_1ce385d22_UseDecl>&,jule::Slice<_1ce35e3a0_Token>);


	inline void _method_build_ident_use_decl(jule::Ref<_1ce385d22_UseDecl>&,jule::Slice<_1ce35e3a0_Token>);


	inline void _method_parse_use_decl(jule::Ref<_1ce385d22_UseDecl>&,jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_UseDecl> _method_build_use_decl(jule::Slice<_1ce35e3a0_Token>,jule::Bool);


	inline jule::Ref<_1ce385d22_Expr> _method_build_enum_item_expr(jule::Ref<jule::Int>,jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Slice<jule::Ref<_1ce385d22_EnumItemDecl>> _method_build_enum_items(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_EnumDecl> _method_build_enum_decl(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_FieldDecl> _method_build_field(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Slice<jule::Ref<_1ce385d22_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_StructDecl> _method_build_struct_decl(jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_check_method_receiver(jule::Ref<_1ce385d22_FnDecl>&);


	inline jule::Slice<jule::Ref<_1ce385d22_FnDecl>> _method_build_trait_methods(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_TraitDecl> _method_build_trait_decl(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_FnDecl> _method_build_cpp_link_fn(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_VarDecl> _method_build_cpp_link_var(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_StructDecl> _method_build_cpp_link_struct(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Ref<_1ce385d22_UseDecl> _method_build_cpp_link_use(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_FnDecl> _method_get_method(jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_parse_impl_body(jule::Ref<_1ce385d22_Impl>&,jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_Impl> _method_build_impl(jule::Slice<_1ce35e3a0_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_check_comment_group(_1ce385d22_Node&);


	inline void _method_check_directive(_1ce385d22_Node&);


	inline void _method_apply_meta(_1ce385d22_Node&,jule::Bool);


	inline void _method_check_use_decl(_1ce385d22_Node&);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_1ce35e3a0_Token>);


	inline _1ce385d22_Node _method_parse_node(jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_append_node(jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_remove_range(jule::Int,jule::Str,jule::Slice<_1ce35e3a0_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_wrong_order_close_err(_1ce35e3a0_Token&,jule::Slice<_1ce35e3a0_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_range_close(_1ce35e3a0_Token,jule::Str,jule::Slice<_1ce35e3a0_Token>&,jule::Slice<jule::Int>&);


	inline void _method_check_ranges(jule::Slice<_1ce35e3a0_Token>&);


	inline void _method_parse(jule::Ref<_1ce4aae47_File>&);


	inline bool operator==(const _1b5c910d6_Parser &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1b5c910d6_Parser &_Src) const { return !this->operator==(_Src); }
};


struct _1b5d8e899_TypeBuilder {
	jule::Ref<_1b5c910d6_Parser> _field_p{jule::Ref<_1b5c910d6_Parser>()};
	jule::Slice<_1ce35e3a0_Token> _field_tokens{jule::Slice<_1ce35e3a0_Token>()};
	jule::Int* _field_i{nullptr};
	jule::Bool _field_err{jule::Bool()};


	_1b5d8e899_TypeBuilder(jule::Ref<_1b5c910d6_Parser> __param_p, jule::Slice<_1ce35e3a0_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_1b5d8e899_TypeBuilder(void) = default;

	inline void _method_push_err(_1ce35e3a0_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_prim(void);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ref<_1ce385d22_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_1ce35e3a0_Token>> _method_ident_generics(void);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_ident(void);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_fn(void);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_ptr(void);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_ref(void);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_op(void);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_slc(void);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_arr(void);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_map(jule::Int,jule::Slice<_1ce35e3a0_Token>&);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_build_enumerable(void);


	inline jule::Ref<_1ce385d22_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ref<_1ce385d22_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(const _1b5d8e899_TypeBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _1b5d8e899_TypeBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1b6d4076c_Const {
	jule::Any _field_data{jule::Any()};


	_1b6d4076c_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_1b6d4076c_Const(void) = default;

	static inline jule::Ref<_1b6d4076c_Const> _static_method_new_i64(jule::I64);


	static inline jule::Ref<_1b6d4076c_Const> _static_method_new_u64(jule::U64);


	static inline jule::Ref<_1b6d4076c_Const> _static_method_new_bool(jule::Bool);


	static inline jule::Ref<_1b6d4076c_Const> _static_method_new_str(jule::Str);


	static inline jule::Ref<_1b6d4076c_Const> _static_method_new_f64(jule::F64);


	static inline jule::Ref<_1b6d4076c_Const> _static_method_new_nil(void);


	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_1b6d4076c_Const);


	inline jule::Bool _method_and(_1b6d4076c_Const);


	inline jule::Bool _method_or(_1b6d4076c_Const);


	inline jule::Bool _method_eqs(_1b6d4076c_Const);


	inline jule::Bool _method_lt(_1b6d4076c_Const);


	inline jule::Bool _method_gt(_1b6d4076c_Const);


	inline jule::Bool _method_add(_1b6d4076c_Const);


	inline jule::Bool _method_sub(_1b6d4076c_Const);


	inline jule::Bool _method_mul(_1b6d4076c_Const);


	inline jule::Bool _method_div(_1b6d4076c_Const);


	inline jule::Bool _method_mod(_1b6d4076c_Const);


	inline jule::Bool _method_bitwise_and(_1b6d4076c_Const);


	inline jule::Bool _method_bitwise_or(_1b6d4076c_Const);


	inline jule::Bool _method_xor(_1b6d4076c_Const);


	inline jule::Bool _method_lshift(_1b6d4076c_Const);


	inline jule::Bool _method_rshift(_1b6d4076c_Const);


	inline bool operator==(const _1b6d4076c_Const &_Src) const {
		return 
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1b6d4076c_Const &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385eed_FieldIns {
	jule::Ref<_1ce385eed_Field> _field_decl{jule::Ref<_1ce385eed_Field>()};
	jule::Ref<_1b6703d45_TypeKind> _field_kind{jule::Ref<_1b6703d45_TypeKind>()};


	_1ce385eed_FieldIns(jule::Ref<_1ce385eed_Field> __param_decl, jule::Ref<_1b6703d45_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1ce385eed_FieldIns(void) = default;

	inline bool operator==(const _1ce385eed_FieldIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ce385eed_FieldIns &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385eed_StructIns: public _1b6703d45_Kind {
	jule::Bool _field_checked{jule::Bool()};
	jule::Ref<_1ce385eed_Struct> _field_decl{jule::Ref<_1ce385eed_Struct>()};
	jule::Slice<jule::Ref<_1b6703d45_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1b6703d45_TypeKind>>()};
	jule::Slice<jule::Ref<_1ce385eed_FieldIns>> _field_fields{jule::Slice<jule::Ref<_1ce385eed_FieldIns>>()};
	jule::Slice<jule::Ref<_1b6069348_Fn>> _field_methods{jule::Slice<jule::Ref<_1b6069348_Fn>>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Ref<_1ce50a46e_ReferenceStack> _field_references{jule::Ref<_1ce50a46e_ReferenceStack>()};


	_1ce385eed_StructIns(jule::Bool __param_checked, jule::Ref<_1ce385eed_Struct> __param_decl, jule::Slice<jule::Ref<_1b6703d45_TypeKind>> __param_generics, jule::Slice<jule::Ref<_1ce385eed_FieldIns>> __param_fields, jule::Slice<jule::Ref<_1b6069348_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ref<_1ce50a46e_ReferenceStack> __param_references): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references) {}

	

	_1ce385eed_StructIns(void) = default;

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b6703d45_TypeKind>);


	inline jule::Bool _method_same(jule::Ref<_1ce385eed_StructIns>);


	inline jule::Ref<_1b6069348_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_1ce385eed_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(const _1ce385eed_StructIns &_Src) const {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_references == _Src._field_references;
	}

	inline bool operator!=(const _1ce385eed_StructIns &_Src) const { return !this->operator==(_Src); }
};


struct _1b6069348_RetType {
	jule::Ref<_1b6703d45_TypeSymbol> _field_kind{jule::Ref<_1b6703d45_TypeSymbol>()};
	jule::Slice<_1ce35e3a0_Token> _field_idents{jule::Slice<_1ce35e3a0_Token>()};


	_1b6069348_RetType(jule::Ref<_1b6703d45_TypeSymbol> __param_kind, jule::Slice<_1ce35e3a0_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1b6069348_RetType(void) = default;

	inline bool operator==(const _1b6069348_RetType &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1b6069348_RetType &_Src) const { return !this->operator==(_Src); }
};


struct _1b6069348_ParamIns {
	jule::Ref<_1b6069348_Param> _field_decl{jule::Ref<_1b6069348_Param>()};
	jule::Ref<_1b6703d45_TypeKind> _field_kind{jule::Ref<_1b6703d45_TypeKind>()};


	_1b6069348_ParamIns(jule::Ref<_1b6069348_Param> __param_decl, jule::Ref<_1b6703d45_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1b6069348_ParamIns(void) = default;

	inline jule::Str _method_to_str(void);


	inline bool operator==(const _1b6069348_ParamIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b6069348_ParamIns &_Src) const { return !this->operator==(_Src); }
};


struct _1b6069348_FnIns: public _1b6703d45_Kind {
	jule::Ref<_1ce385eed_StructIns> _field_owner{jule::Ref<_1ce385eed_StructIns>()};
	jule::Ref<_1b6069348_Fn> _field_decl{jule::Ref<_1b6069348_Fn>()};
	jule::Slice<jule::Ref<_1b6703d45_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1b6703d45_TypeKind>>()};
	jule::Slice<jule::Ref<_1b6069348_ParamIns>> _field_params{jule::Slice<jule::Ref<_1b6069348_ParamIns>>()};
	jule::Ref<_1b6703d45_TypeKind> _field_result{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Ref<_1b61e873b_Scope> _field_scope{jule::Ref<_1b61e873b_Scope>()};
	jule::Ref<_1ce50a46e_ReferenceStack> _field_references{jule::Ref<_1ce50a46e_ReferenceStack>()};
	jule::Ref<_1ce50a46e_ReferenceStack> _field_refers{jule::Ref<_1ce50a46e_ReferenceStack>()};
	jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)> _field_caller{jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>()};
	jule::Bool _field_reloaded{jule::Bool()};
	jule::Bool _field_anon{jule::Bool()};


	_1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns> __param_owner, jule::Ref<_1b6069348_Fn> __param_decl, jule::Slice<jule::Ref<_1b6703d45_TypeKind>> __param_generics, jule::Slice<jule::Ref<_1b6069348_ParamIns>> __param_params, jule::Ref<_1b6703d45_TypeKind> __param_result, jule::Ref<_1b61e873b_Scope> __param_scope, jule::Ref<_1ce50a46e_ReferenceStack> __param_references, jule::Ref<_1ce50a46e_ReferenceStack> __param_refers, jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)> __param_caller, jule::Bool __param_reloaded, jule::Bool __param_anon): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_refers(__param_refers), _field_caller(__param_caller), _field_reloaded(__param_reloaded), _field_anon(__param_anon) {}

	

	_1b6069348_FnIns(void) = default;

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b6703d45_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_same(jule::Ref<_1b6069348_FnIns>);


	inline jule::Str _method_get_kind_str(jule::Bool);


	inline bool operator==(const _1b6069348_FnIns &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_references == _Src._field_references &&
			this->_field_refers == _Src._field_refers &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded &&
			this->_field_anon == _Src._field_anon;
	}

	inline bool operator!=(const _1b6069348_FnIns &_Src) const { return !this->operator==(_Src); }
};


struct _1ce50a46e_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer{jule::Slice<jule::Any>()};


	_1ce50a46e_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_1ce50a46e_ReferenceStack(void) = default;

	static inline jule::Ref<_1ce50a46e_ReferenceStack> _static_method_new(void);


	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline jule::Bool _method_exist_0(jule::Ref<_1b637edab_Var>);
	inline jule::Bool _method_exist_1(jule::Ref<_1b6069348_FnIns>);
	inline jule::Bool _method_exist_2(jule::Ref<_1ce385eed_StructIns>);


	inline bool operator==(const _1ce50a46e_ReferenceStack &_Src) const {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	inline bool operator!=(const _1ce50a46e_ReferenceStack &_Src) const { return !this->operator==(_Src); }
};


struct _1ce50a46e_SymbolBuilder {
	jule::Ref<_1ce50a46e_SymbolBuilder> self{};

	jule::Ref<_1ce50a46e_SymbolBuilder> _field_owner{jule::Ref<_1ce50a46e_SymbolBuilder>()};
	jule::Trait<_1b623bb7a_Importer> _field_importer{jule::Trait<_1b623bb7a_Importer>()};
	jule::Slice<_1e7690a81_Log> _field_errors{jule::Slice<_1e7690a81_Log>()};
	jule::Ref<_1ce2b7acd_Ast> _field_ast{jule::Ref<_1ce2b7acd_Ast>()};
	jule::Ref<_1b66b3a3b_SymbolTable> _field_table{jule::Ref<_1b66b3a3b_SymbolTable>()};


	_1ce50a46e_SymbolBuilder(jule::Ref<_1ce50a46e_SymbolBuilder> __param_owner, jule::Trait<_1b623bb7a_Importer> __param_importer, jule::Slice<_1e7690a81_Log> __param_errors, jule::Ref<_1ce2b7acd_Ast> __param_ast, jule::Ref<_1b66b3a3b_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {
		this->self = jule::Ref<_1ce50a46e_SymbolBuilder>::make(this, nullptr);

	}

	~_1ce50a46e_SymbolBuilder(void) { this->self.ref = nullptr; }

	_1ce50a46e_SymbolBuilder(void) { this->self = jule::Ref<_1ce50a46e_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ref<_1ce50a46e_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_1ce35e3a0_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_text(_1ce35e3a0_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ref<_1ce385d22_UseDecl>&);


	inline jule::Ref<_1b623bb7a_ImportInfo> _method_build_cpp_header_import(jule::Ref<_1ce385d22_UseDecl>&);


	inline jule::Ref<_1b623bb7a_ImportInfo> _method_build_std_import(jule::Ref<_1ce385d22_UseDecl>&);


	inline jule::Ref<_1b623bb7a_ImportInfo> _method_build_ident_import(jule::Ref<_1ce385d22_UseDecl>&);


	inline jule::Ref<_1b623bb7a_ImportInfo> _method_build_import(jule::Ref<_1ce385d22_UseDecl>&);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ref<_1b623bb7a_ImportInfo>&);


	inline void _method_impl_import_selections(jule::Ref<_1b623bb7a_ImportInfo>&,jule::Ref<_1ce385d22_UseDecl>&);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cycle_error(jule::Ref<_1ce50a46e_SymbolBuilder>&,jule::Str,jule::Str&);


	inline void _method_push_cross_cycle_error(jule::Ref<_1ce50a46e_SymbolBuilder>&,jule::Ref<_1b623bb7a_ImportInfo>&,_1ce35e3a0_Token&);


	inline jule::Bool _method_check_import_cycles(jule::Ref<_1b623bb7a_ImportInfo>,jule::Ref<_1ce385d22_UseDecl>&);


	inline jule::Bool _method_import_package(jule::Ref<_1b623bb7a_ImportInfo>&,jule::Ref<_1ce385d22_UseDecl>&);


	inline jule::Ref<_1b623bb7a_ImportInfo> _method_import_use_decl(jule::Ref<_1ce385d22_UseDecl>&);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_1ce385d22_Node&);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ref<_1ce385d22_Directive>&);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(const _1ce50a46e_SymbolBuilder &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	inline bool operator!=(const _1ce50a46e_SymbolBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_Scope {
	jule::Ref<_1b61e873b_Scope> _field_parent{jule::Ref<_1b61e873b_Scope>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_1b61e873b_Scope(jule::Ref<_1b61e873b_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1b61e873b_Scope(void) = default;

	inline bool operator==(const _1b61e873b_Scope &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1b61e873b_Scope &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_If {
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1b61e873b_Scope> _field_scope{jule::Ref<_1b61e873b_Scope>()};


	_1b61e873b_If(jule::Any __param_expr, jule::Ref<_1b61e873b_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1b61e873b_If(void) = default;

	inline bool operator==(const _1b61e873b_If &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1b61e873b_If &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_Else {
	jule::Ref<_1b61e873b_Scope> _field_scope{jule::Ref<_1b61e873b_Scope>()};


	_1b61e873b_Else(jule::Ref<_1b61e873b_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1b61e873b_Else(void) = default;

	inline bool operator==(const _1b61e873b_Else &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1b61e873b_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_Conditional {
	jule::Slice<jule::Ref<_1b61e873b_If>> _field_elifs{jule::Slice<jule::Ref<_1b61e873b_If>>()};
	jule::Ref<_1b61e873b_Else> _field_default{jule::Ref<_1b61e873b_Else>()};


	_1b61e873b_Conditional(jule::Slice<jule::Ref<_1b61e873b_If>> __param_elifs, jule::Ref<_1b61e873b_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_1b61e873b_Conditional(void) = default;

	inline bool operator==(const _1b61e873b_Conditional &_Src) const {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1b61e873b_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_InfIter {
	jule::Ref<_1b61e873b_Scope> _field_scope{jule::Ref<_1b61e873b_Scope>()};


	_1b61e873b_InfIter(jule::Ref<_1b61e873b_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1b61e873b_InfIter(void) = default;

	inline bool operator==(const _1b61e873b_InfIter &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1b61e873b_InfIter &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_WhileIter {
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_next{jule::Any()};
	jule::Ref<_1b61e873b_Scope> _field_scope{jule::Ref<_1b61e873b_Scope>()};


	_1b61e873b_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ref<_1b61e873b_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_1b61e873b_WhileIter(void) = default;

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1b61e873b_WhileIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1b61e873b_WhileIter &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_RangeIter {
	jule::Ref<_1b66db129_Data> _field_expr{jule::Ref<_1b66db129_Data>()};
	jule::Ref<_1b61e873b_Scope> _field_scope{jule::Ref<_1b61e873b_Scope>()};
	jule::Ref<_1b637edab_Var> _field_key_a{jule::Ref<_1b637edab_Var>()};
	jule::Ref<_1b637edab_Var> _field_key_b{jule::Ref<_1b637edab_Var>()};


	_1b61e873b_RangeIter(jule::Ref<_1b66db129_Data> __param_expr, jule::Ref<_1b61e873b_Scope> __param_scope, jule::Ref<_1b637edab_Var> __param_key_a, jule::Ref<_1b637edab_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1b61e873b_RangeIter(void) = default;

	inline bool operator==(const _1b61e873b_RangeIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1b61e873b_RangeIter &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_ContSt {
	jule::Uintptr _field_it{jule::Uintptr()};


	_1b61e873b_ContSt(jule::Uintptr __param_it): _field_it(__param_it) {}

	

	_1b61e873b_ContSt(void) = default;

	inline bool operator==(const _1b61e873b_ContSt &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _1b61e873b_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_BreakSt {
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_mtch{jule::Uintptr()};


	_1b61e873b_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_1b61e873b_BreakSt(void) = default;

	inline bool operator==(const _1b61e873b_BreakSt &_Src) const {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	inline bool operator!=(const _1b61e873b_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_Label {
	jule::Str _field_ident{jule::Str()};


	_1b61e873b_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1b61e873b_Label(void) = default;

	inline bool operator==(const _1b61e873b_Label &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b61e873b_Label &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_GotoSt {
	jule::Str _field_ident{jule::Str()};


	_1b61e873b_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1b61e873b_GotoSt(void) = default;

	inline bool operator==(const _1b61e873b_GotoSt &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b61e873b_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_Postfix {
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1b61e873b_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1b61e873b_Postfix(void) = default;

	inline bool operator==(const _1b61e873b_Postfix &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1b61e873b_Postfix &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_Assign {
	jule::Any _field_l{jule::Any()};
	jule::Any _field_r{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1b61e873b_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1b61e873b_Assign(void) = default;

	inline bool operator==(const _1b61e873b_Assign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1b61e873b_Assign &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_MultiAssign {
	jule::Slice<jule::Any> _field_l{jule::Slice<jule::Any>()};
	jule::Any _field_r{jule::Any()};


	_1b61e873b_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_1b61e873b_MultiAssign(void) = default;

	inline bool operator==(const _1b61e873b_MultiAssign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	inline bool operator!=(const _1b61e873b_MultiAssign &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_Match {
	jule::Ref<_1b66db129_Data> _field_expr{jule::Ref<_1b66db129_Data>()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Slice<jule::Ref<_1b61e873b_Case>> _field_cases{jule::Slice<jule::Ref<_1b61e873b_Case>>()};
	jule::Ref<_1b61e873b_Case> _field_default{jule::Ref<_1b61e873b_Case>()};


	_1b61e873b_Match(jule::Ref<_1b66db129_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ref<_1b61e873b_Case>> __param_cases, jule::Ref<_1b61e873b_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1b61e873b_Match(void) = default;

	inline jule::Bool _method_is_generic_type_match(void);


	inline bool operator==(const _1b61e873b_Match &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1b61e873b_Match &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_Case {
	jule::Ref<_1b61e873b_Match> _field_owner{jule::Ref<_1b61e873b_Match>()};
	jule::Ref<_1b61e873b_Scope> _field_scope{jule::Ref<_1b61e873b_Scope>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};
	jule::Ref<_1b61e873b_Case> _field_next{jule::Ref<_1b61e873b_Case>()};


	_1b61e873b_Case(jule::Ref<_1b61e873b_Match> __param_owner, jule::Ref<_1b61e873b_Scope> __param_scope, jule::Slice<jule::Any> __param_exprs, jule::Ref<_1b61e873b_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_1b61e873b_Case(void) = default;

	inline jule::Bool _method_is_default(void);


	inline bool operator==(const _1b61e873b_Case &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	inline bool operator!=(const _1b61e873b_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_FallSt {
	jule::Uintptr _field_dest_case{jule::Uintptr()};


	_1b61e873b_FallSt(jule::Uintptr __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_1b61e873b_FallSt(void) = default;

	inline bool operator==(const _1b61e873b_FallSt &_Src) const {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	inline bool operator!=(const _1b61e873b_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_RetSt {
	jule::Slice<jule::Ref<_1b637edab_Var>> _field_vars{jule::Slice<jule::Ref<_1b637edab_Var>>()};
	jule::Any _field_expr{jule::Any()};


	_1b61e873b_RetSt(jule::Slice<jule::Ref<_1b637edab_Var>> __param_vars, jule::Any __param_expr): _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_1b61e873b_RetSt(void) = default;

	inline bool operator==(const _1b61e873b_RetSt &_Src) const {
		return 
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61e873b_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_Recover {
	jule::Ref<_1b6069348_FnIns> _field_handler{jule::Ref<_1b6069348_FnIns>()};
	jule::Any _field_handler_expr{jule::Any()};
	jule::Ref<_1b61e873b_Scope> _field_scope{jule::Ref<_1b61e873b_Scope>()};
	jule::Ref<_1b6069348_FnIns> _field_scope_owner{jule::Ref<_1b6069348_FnIns>()};


	_1b61e873b_Recover(jule::Ref<_1b6069348_FnIns> __param_handler, jule::Any __param_handler_expr, jule::Ref<_1b61e873b_Scope> __param_scope, jule::Ref<_1b6069348_FnIns> __param_scope_owner): _field_handler(__param_handler), _field_handler_expr(__param_handler_expr), _field_scope(__param_scope), _field_scope_owner(__param_scope_owner) {}

	

	_1b61e873b_Recover(void) = default;

	inline bool operator==(const _1b61e873b_Recover &_Src) const {
		return 
			this->_field_handler == _Src._field_handler &&
			this->_field_handler_expr == _Src._field_handler_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_scope_owner == _Src._field_scope_owner;
	}

	inline bool operator!=(const _1b61e873b_Recover &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_ScopeGoto {
	jule::Ref<_1ce385d22_GotoSt> _field_gt{jule::Ref<_1ce385d22_GotoSt>()};
	jule::Ref<_1b61e873b_ScopeChecker> _field_scope{jule::Ref<_1b61e873b_ScopeChecker>()};
	jule::Int _field_pos{jule::Int()};


	_1b61e873b_ScopeGoto(jule::Ref<_1ce385d22_GotoSt> __param_gt, jule::Ref<_1b61e873b_ScopeChecker> __param_scope, jule::Int __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_1b61e873b_ScopeGoto(void) = default;

	inline bool operator==(const _1b61e873b_ScopeGoto &_Src) const {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1b61e873b_ScopeGoto &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_ScopeChecker: public _1b6b746d3_Lookup {
	jule::Ref<_1b61e873b_ScopeChecker> self{};

	jule::Ref<_1b622b76e_Sema> _field_s{jule::Ref<_1b622b76e_Sema>()};
	jule::Ref<_1b6069348_FnIns> _field_owner{jule::Ref<_1b6069348_FnIns>()};
	jule::Ref<_1b61e873b_ScopeChecker> _field_parent{jule::Ref<_1b61e873b_ScopeChecker>()};
	jule::Int _field_child_index{jule::Int()};
	jule::Ref<_1b66b3a3b_SymbolTable> _field_table{jule::Ref<_1b66b3a3b_SymbolTable>()};
	jule::Ref<_1b61e873b_Scope> _field_scope{jule::Ref<_1b61e873b_Scope>()};
	jule::Ref<_1ce385d22_ScopeTree> _field_tree{jule::Ref<_1ce385d22_ScopeTree>()};
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_cse{jule::Uintptr()};
	jule::Ref<jule::Slice<jule::Ref<_1b61e873b_ScopeLabel>>> _field_labels{jule::Ref<jule::Slice<jule::Ref<_1b61e873b_ScopeLabel>>>()};
	jule::Ref<jule::Slice<jule::Ref<_1b61e873b_ScopeGoto>>> _field_gotos{jule::Ref<jule::Slice<jule::Ref<_1b61e873b_ScopeGoto>>>()};
	jule::Int _field_i{jule::Int()};


	_1b61e873b_ScopeChecker(jule::Ref<_1b622b76e_Sema> __param_s, jule::Ref<_1b6069348_FnIns> __param_owner, jule::Ref<_1b61e873b_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ref<_1b66b3a3b_SymbolTable> __param_table, jule::Ref<_1b61e873b_Scope> __param_scope, jule::Ref<_1ce385d22_ScopeTree> __param_tree, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ref<jule::Slice<jule::Ref<_1b61e873b_ScopeLabel>>> __param_labels, jule::Ref<jule::Slice<jule::Ref<_1b61e873b_ScopeGoto>>> __param_gotos, jule::Int __param_i): _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {
		this->self = jule::Ref<_1b61e873b_ScopeChecker>::make(this, nullptr);

	}

	~_1b61e873b_ScopeChecker(void) { this->self.ref = nullptr; }

	_1b61e873b_ScopeChecker(void) { this->self = jule::Ref<_1b61e873b_ScopeChecker>::make(this, nullptr); }

	inline jule::Ref<_1b623bb7a_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1b623bb7a_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)>);


	inline jule::Ref<_1b637edab_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1b6703d45_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1ce385eed_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1b6069348_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1b61d7d79_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1b61d7c58_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline jule::Ref<_1b61e873b_ScopeChecker> _method_get_root(void);


	inline jule::Ref<_1b61e873b_Label> _method_find_label(jule::Str);


	inline jule::Ref<_1b61e873b_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ref<_1b61e873b_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ref<_1ce385d22_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ref<_1ce385d22_TypeAliasDecl>);


	inline jule::Ref<_1b61e873b_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ref<_1ce385d22_ScopeTree>,jule::Ref<_1b61e873b_Scope>,jule::Ref<_1b61e873b_ScopeChecker>);


	inline jule::Ref<_1b61e873b_Scope> _method_check_child_sc(jule::Ref<_1ce385d22_ScopeTree>,jule::Ref<_1b61e873b_ScopeChecker>);


	inline jule::Ref<_1b61e873b_Scope> _method_check_child(jule::Ref<_1ce385d22_ScopeTree>);


	inline void _method_check_anon_scope(jule::Ref<_1ce385d22_ScopeTree>);


	inline jule::Bool _method_try_call_recover(jule::Ref<_1b66db129_Data>);


	inline void _method_check_expr(jule::Ref<_1ce385d22_Expr>);


	inline jule::Ref<_1b61e873b_If> _method_check_if(jule::Ref<_1ce385d22_If>);


	inline jule::Ref<_1b61e873b_Else> _method_check_else(jule::Ref<_1ce385d22_Else>);


	inline void _method_check_conditional(jule::Ref<_1ce385d22_Conditional>);


	inline jule::Ref<_1b61e873b_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ref<_1ce385d22_ScopeTree>,jule::Ref<_1b61e873b_ScopeChecker>);


	inline jule::Ref<_1b61e873b_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ref<_1ce385d22_ScopeTree>);


	inline void _method_check_inf_iter(jule::Ref<_1ce385d22_Iter>);


	inline void _method_check_while_iter(jule::Ref<_1ce385d22_Iter>);


	inline void _method_check_range_iter(jule::Ref<_1ce385d22_Iter>);


	inline void _method_check_iter(jule::Ref<_1ce385d22_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ref<_1b61e873b_ContSt> _method_check_cont_valid_scope(jule::Ref<_1ce385d22_ContSt>);


	inline void _method_check_cont(jule::Ref<_1ce385d22_ContSt>);


	inline void _method_check_label(jule::Ref<_1ce385d22_LabelSt>);


	inline void _method_push_goto(jule::Ref<_1ce385d22_GotoSt>);


	inline void _method_check_postfix(jule::Ref<_1ce385d22_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline void _method_check_single_assign(jule::Ref<_1ce385d22_AssignSt>);


	inline void _method___process_end_part_of_multi_assign(jule::Ref<_1b61e873b_MultiAssign>,jule::Ref<_1ce385d22_AssignSt>,jule::Ref<_1ce385d22_AssignLeft>,jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>);


	inline void _method_check_ret_multi_assign(jule::Ref<_1ce385d22_AssignSt>);


	inline void _method_check_multi_assign(jule::Ref<_1ce385d22_AssignSt>);


	inline void _method_check_assign_st(jule::Ref<_1ce385d22_AssignSt>);


	inline jule::Ref<_1b61e873b_Scope> _method_check_case_scope(jule::Ref<_1b61e873b_Case>,jule::Ref<_1ce385d22_ScopeTree>);


	inline jule::Ref<_1b61e873b_Case> _method_check_case(jule::Ref<_1b61e873b_Match>,jule::Int,jule::Ref<_1ce385d22_Case>,jule::Ref<_1b66db129_Data>);


	inline void _method_check_cases(jule::Ref<_1ce385d22_MatchCase>,jule::Ref<_1b61e873b_Match>,jule::Ref<_1b66db129_Data>);


	inline jule::Ref<_1b61e873b_Case> _method_check_default(jule::Ref<_1b61e873b_Match>,jule::Ref<_1ce385d22_Else>);


	inline void _method_push_type_match(jule::Ref<_1b61e873b_Match>);


	inline void _method_check_type_match(jule::Ref<_1ce385d22_MatchCase>);


	inline void _method_check_common_match(jule::Ref<_1ce385d22_MatchCase>);


	inline void _method_check_match(jule::Ref<_1ce385d22_MatchCase>);


	inline void _method_check_fall(jule::Ref<_1ce385d22_FallSt>);


	inline jule::Ref<_1b61e873b_BreakSt> _method_check_break_with_label(jule::Ref<_1ce385d22_BreakSt>);


	inline jule::Ref<_1b61e873b_BreakSt> _method_check_plain_break(jule::Ref<_1ce385d22_BreakSt>);


	inline void _method_check_break(jule::Ref<_1ce385d22_BreakSt>);


	inline void _method_check_ret(jule::Ref<_1ce385d22_RetSt>);


	inline void _method_check_node(jule::Any);


	inline void _method_check_tree(void);


	inline void _method_check_same_scope_goto(jule::Ref<_1b61e873b_ScopeGoto>,jule::Ref<_1b61e873b_ScopeLabel>);


	inline jule::Bool _method_check_label_parents(jule::Ref<_1b61e873b_ScopeGoto>,jule::Ref<_1b61e873b_ScopeLabel>);


	inline void _method_check_goto_scope(jule::Ref<_1b61e873b_ScopeGoto>,jule::Ref<_1b61e873b_ScopeLabel>);


	inline void _method_check_diff_scope_goto(jule::Ref<_1b61e873b_ScopeGoto>,jule::Ref<_1b61e873b_ScopeLabel>);


	inline void _method_check_goto(jule::Ref<_1b61e873b_ScopeGoto>,jule::Ref<_1b61e873b_ScopeLabel>);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ref<_1ce385d22_ScopeTree>,jule::Ref<_1b61e873b_Scope>);


	inline jule::Ref<_1b61e873b_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(const _1b61e873b_ScopeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1b61e873b_ScopeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_BinopExprModel {
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1b61decc6_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1b61decc6_BinopExprModel(void) = default;

	inline bool operator==(const _1b61decc6_BinopExprModel &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1b61decc6_BinopExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_UnaryExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1b61decc6_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1b61decc6_UnaryExprModel(void) = default;

	inline bool operator==(const _1b61decc6_UnaryExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1b61decc6_UnaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_GetRefPtrExprModel {
	jule::Any _field_expr{jule::Any()};


	_1b61decc6_GetRefPtrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1b61decc6_GetRefPtrExprModel(void) = default;

	inline bool operator==(const _1b61decc6_GetRefPtrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61decc6_GetRefPtrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_StructArgExprModel {
	jule::Ref<_1ce385eed_FieldIns> _field_field{jule::Ref<_1ce385eed_FieldIns>()};
	jule::Any _field_expr{jule::Any()};


	_1b61decc6_StructArgExprModel(jule::Ref<_1ce385eed_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1b61decc6_StructArgExprModel(void) = default;

	inline bool operator==(const _1b61decc6_StructArgExprModel &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61decc6_StructArgExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_StructLitExprModel {
	jule::Ref<_1ce385eed_StructIns> _field_strct{jule::Ref<_1ce385eed_StructIns>()};
	jule::Slice<jule::Ref<_1b61decc6_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_1b61decc6_StructArgExprModel>>()};


	_1b61decc6_StructLitExprModel(jule::Ref<_1ce385eed_StructIns> __param_strct, jule::Slice<jule::Ref<_1b61decc6_StructArgExprModel>> __param_args): _field_strct(__param_strct), _field_args(__param_args) {}

	

	_1b61decc6_StructLitExprModel(void) = default;

	inline bool operator==(const _1b61decc6_StructLitExprModel &_Src) const {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1b61decc6_StructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_AllocStructLitExprModel {
	jule::Ref<_1b61decc6_StructLitExprModel> _field_lit{jule::Ref<_1b61decc6_StructLitExprModel>()};


	_1b61decc6_AllocStructLitExprModel(jule::Ref<_1b61decc6_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_1b61decc6_AllocStructLitExprModel(void) = default;

	inline bool operator==(const _1b61decc6_AllocStructLitExprModel &_Src) const {
		return 
			this->_field_lit == _Src._field_lit;
	}

	inline bool operator!=(const _1b61decc6_AllocStructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_CastingExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1b6703d45_TypeKind> _field_kind{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Ref<_1b6703d45_TypeKind> _field_expr_kind{jule::Ref<_1b6703d45_TypeKind>()};


	_1b61decc6_CastingExprModel(jule::Any __param_expr, jule::Ref<_1b6703d45_TypeKind> __param_kind, jule::Ref<_1b6703d45_TypeKind> __param_expr_kind): _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_1b61decc6_CastingExprModel(void) = default;

	inline bool operator==(const _1b61decc6_CastingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	inline bool operator!=(const _1b61decc6_CastingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_FnCallExprModel {
	jule::Ref<_1b6069348_FnIns> _field_func{jule::Ref<_1b6069348_FnIns>()};
	jule::Bool _field_is_co{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	jule::Slice<jule::Any> _field_args{jule::Slice<jule::Any>()};


	_1b61decc6_FnCallExprModel(jule::Ref<_1b6069348_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args): _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args) {}

	

	_1b61decc6_FnCallExprModel(void) = default;

	inline bool operator==(const _1b61decc6_FnCallExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1b61decc6_FnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_SliceExprModel {
	jule::Ref<_1b6703d45_TypeKind> _field_elem_kind{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1b61decc6_SliceExprModel(jule::Ref<_1b6703d45_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_1b61decc6_SliceExprModel(void) = default;

	inline bool operator==(const _1b61decc6_SliceExprModel &_Src) const {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1b61decc6_SliceExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_IndexigExprModel {
	jule::Ref<_1b66db129_Data> _field_expr{jule::Ref<_1b66db129_Data>()};
	jule::Ref<_1b66db129_Data> _field_index{jule::Ref<_1b66db129_Data>()};


	_1b61decc6_IndexigExprModel(jule::Ref<_1b66db129_Data> __param_expr, jule::Ref<_1b66db129_Data> __param_index): _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1b61decc6_IndexigExprModel(void) = default;

	inline bool operator==(const _1b61decc6_IndexigExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1b61decc6_IndexigExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_AnonFnExprModel {
	jule::Ref<_1b6069348_FnIns> _field_func{jule::Ref<_1b6069348_FnIns>()};
	jule::Bool _field_global{jule::Bool()};


	_1b61decc6_AnonFnExprModel(jule::Ref<_1b6069348_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_1b61decc6_AnonFnExprModel(void) = default;

	inline bool operator==(const _1b61decc6_AnonFnExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	inline bool operator!=(const _1b61decc6_AnonFnExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_KeyValPairExprModel {
	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};


	_1b61decc6_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1b61decc6_KeyValPairExprModel(void) = default;

	inline bool operator==(const _1b61decc6_KeyValPairExprModel &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1b61decc6_KeyValPairExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_MapExprModel {
	jule::Ref<_1b6703d45_TypeKind> _field_key_kind{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Ref<_1b6703d45_TypeKind> _field_val_kind{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Slice<jule::Ref<_1b61decc6_KeyValPairExprModel>> _field_entries{jule::Slice<jule::Ref<_1b61decc6_KeyValPairExprModel>>()};


	_1b61decc6_MapExprModel(jule::Ref<_1b6703d45_TypeKind> __param_key_kind, jule::Ref<_1b6703d45_TypeKind> __param_val_kind, jule::Slice<jule::Ref<_1b61decc6_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_1b61decc6_MapExprModel(void) = default;

	inline bool operator==(const _1b61decc6_MapExprModel &_Src) const {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	inline bool operator!=(const _1b61decc6_MapExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_SlicingExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};


	_1b61decc6_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1b61decc6_SlicingExprModel(void) = default;

	inline bool operator==(const _1b61decc6_SlicingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1b61decc6_SlicingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_TraitSubIdentExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1b61decc6_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident): _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1b61decc6_TraitSubIdentExprModel(void) = default;

	inline bool operator==(const _1b61decc6_TraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b61decc6_TraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_StructSubIdentExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1b6703d45_TypeKind> _field_expr_kind{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Ref<_1b6069348_FnIns> _field_method{jule::Ref<_1b6069348_FnIns>()};
	jule::Ref<_1ce385eed_FieldIns> _field_field{jule::Ref<_1ce385eed_FieldIns>()};


	_1b61decc6_StructSubIdentExprModel(jule::Any __param_expr, jule::Ref<_1b6703d45_TypeKind> __param_expr_kind, jule::Ref<_1b6069348_FnIns> __param_method, jule::Ref<_1ce385eed_FieldIns> __param_field): _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_1b61decc6_StructSubIdentExprModel(void) = default;

	inline bool operator==(const _1b61decc6_StructSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	inline bool operator!=(const _1b61decc6_StructSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_StructStaticIdentExprModel {
	jule::Ref<_1ce385eed_StructIns> _field_structure{jule::Ref<_1ce385eed_StructIns>()};
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1b6069348_FnIns> _field_method{jule::Ref<_1b6069348_FnIns>()};


	_1b61decc6_StructStaticIdentExprModel(jule::Ref<_1ce385eed_StructIns> __param_structure, jule::Any __param_expr, jule::Ref<_1b6069348_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_1b61decc6_StructStaticIdentExprModel(void) = default;

	inline bool operator==(const _1b61decc6_StructStaticIdentExprModel &_Src) const {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	inline bool operator!=(const _1b61decc6_StructStaticIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_ArrayExprModel {
	jule::Ref<_1b6703d45_Arr> _field_kind{jule::Ref<_1b6703d45_Arr>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1b61decc6_ArrayExprModel(jule::Ref<_1b6703d45_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_1b61decc6_ArrayExprModel(void) = default;

	inline bool operator==(const _1b61decc6_ArrayExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1b61decc6_ArrayExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_CommonIdentExprModel {
	jule::Str _field_ident{jule::Str()};


	_1b61decc6_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1b61decc6_CommonIdentExprModel(void) = default;

	inline bool operator==(const _1b61decc6_CommonIdentExprModel &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b61decc6_CommonIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_CommonSubIdentExprModel {
	jule::Ref<_1b6703d45_TypeKind> _field_expr_kind{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1b61decc6_CommonSubIdentExprModel(jule::Ref<_1b6703d45_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1b61decc6_CommonSubIdentExprModel(void) = default;

	inline bool operator==(const _1b61decc6_CommonSubIdentExprModel &_Src) const {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b61decc6_CommonSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_TupleExprModel {
	jule::Slice<jule::Ref<_1b66db129_Data>> _field_datas{jule::Slice<jule::Ref<_1b66db129_Data>>()};


	_1b61decc6_TupleExprModel(jule::Slice<jule::Ref<_1b66db129_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_1b61decc6_TupleExprModel(void) = default;

	inline bool operator==(const _1b61decc6_TupleExprModel &_Src) const {
		return 
			this->_field_datas == _Src._field_datas;
	}

	inline bool operator!=(const _1b61decc6_TupleExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_BuiltinOutCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_1b61decc6_BuiltinOutCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1b61decc6_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(const _1b61decc6_BuiltinOutCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61decc6_BuiltinOutCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_BuiltinOutlnCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_1b61decc6_BuiltinOutlnCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1b61decc6_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(const _1b61decc6_BuiltinOutlnCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61decc6_BuiltinOutlnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_BuiltinCloneCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_1b61decc6_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1b61decc6_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(const _1b61decc6_BuiltinCloneCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61decc6_BuiltinCloneCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_BuiltinNewCallExprModel {
	jule::Ref<_1b6703d45_TypeKind> _field_kind{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Any _field_init{jule::Any()};


	_1b61decc6_BuiltinNewCallExprModel(jule::Ref<_1b6703d45_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_1b61decc6_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(const _1b61decc6_BuiltinNewCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	inline bool operator!=(const _1b61decc6_BuiltinNewCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_BuiltinRealCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_1b61decc6_BuiltinRealCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1b61decc6_BuiltinRealCallExprModel(void) = default;

	inline bool operator==(const _1b61decc6_BuiltinRealCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61decc6_BuiltinRealCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_BuiltinDropCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_1b61decc6_BuiltinDropCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1b61decc6_BuiltinDropCallExprModel(void) = default;

	inline bool operator==(const _1b61decc6_BuiltinDropCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61decc6_BuiltinDropCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_BuiltinPanicCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_1b61decc6_BuiltinPanicCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1b61decc6_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(const _1b61decc6_BuiltinPanicCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61decc6_BuiltinPanicCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_BuiltinMakeCallExprModel {
	jule::Ref<_1b6703d45_TypeKind> _field_kind{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Any _field_len{jule::Any()};
	jule::Any _field_cap{jule::Any()};


	_1b61decc6_BuiltinMakeCallExprModel(jule::Ref<_1b6703d45_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_1b61decc6_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(const _1b61decc6_BuiltinMakeCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	inline bool operator!=(const _1b61decc6_BuiltinMakeCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_BuiltinAppendCallExprModel {
	jule::Any _field_dest{jule::Any()};
	jule::Any _field_elements{jule::Any()};


	_1b61decc6_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_1b61decc6_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(const _1b61decc6_BuiltinAppendCallExprModel &_Src) const {
		return 
			this->_field_dest == _Src._field_dest &&
			this->_field_elements == _Src._field_elements;
	}

	inline bool operator!=(const _1b61decc6_BuiltinAppendCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_BuiltinErrorTraitSubIdentExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1b61decc6_BuiltinErrorTraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident): _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1b61decc6_BuiltinErrorTraitSubIdentExprModel(void) = default;

	inline bool operator==(const _1b61decc6_BuiltinErrorTraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b61decc6_BuiltinErrorTraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_SizeofExprModel {
	jule::Any _field_expr{jule::Any()};


	_1b61decc6_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1b61decc6_SizeofExprModel(void) = default;

	inline bool operator==(const _1b61decc6_SizeofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61decc6_SizeofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_AlignofExprModel {
	jule::Any _field_expr{jule::Any()};


	_1b61decc6_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1b61decc6_AlignofExprModel(void) = default;

	inline bool operator==(const _1b61decc6_AlignofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61decc6_AlignofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_RuneExprModel {
	jule::I32 _field_code{jule::I32()};


	_1b61decc6_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_1b61decc6_RuneExprModel(void) = default;

	inline bool operator==(const _1b61decc6_RuneExprModel &_Src) const {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _1b61decc6_RuneExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_ExplicitDerefExprModel {
	jule::Any _field_expr{jule::Any()};


	_1b61decc6_ExplicitDerefExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1b61decc6_ExplicitDerefExprModel(void) = default;

	inline bool operator==(const _1b61decc6_ExplicitDerefExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61decc6_ExplicitDerefExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_IntegratedToStrExprModel {
	jule::Any _field_expr{jule::Any()};


	_1b61decc6_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1b61decc6_IntegratedToStrExprModel(void) = default;

	inline bool operator==(const _1b61decc6_IntegratedToStrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61decc6_IntegratedToStrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61decc6_TernaryExprModel {
	jule::Any _field_condition{jule::Any()};
	jule::Any _field_true_expr{jule::Any()};
	jule::Any _field_false_expr{jule::Any()};


	_1b61decc6_TernaryExprModel(jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_1b61decc6_TernaryExprModel(void) = default;

	inline bool operator==(const _1b61decc6_TernaryExprModel &_Src) const {
		return 
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _1b61decc6_TernaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b623bb7a_Package: public _1b6b746d3_Lookup {
	jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>> _field_files{jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>()};


	_1b623bb7a_Package(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_1b623bb7a_Package(void) = default;

	inline jule::Ref<_1b623bb7a_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1b623bb7a_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)>);


	inline jule::Ref<_1b637edab_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1b6703d45_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1ce385eed_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1b6069348_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1b61d7d79_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1b61d7c58_Enum> _method_find_enum(jule::Str);


	inline bool operator==(const _1b623bb7a_Package &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1b623bb7a_Package &_Src) const { return !this->operator==(_Src); }
};


struct _1b622b76e_Sema: public _1b6b746d3_Lookup {
	jule::Ref<_1b622b76e_Sema> self{};

	jule::Slice<_1e7690a81_Log> _field_errors{jule::Slice<_1e7690a81_Log>()};
	jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>> _field_files{jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>()};
	jule::Ref<_1b66b3a3b_SymbolTable> _field_file{jule::Ref<_1b66b3a3b_SymbolTable>()};
	jule::Int _field_flags{0LL};


	_1b622b76e_Sema(jule::Slice<_1e7690a81_Log> __param_errors, jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>> __param_files, jule::Ref<_1b66b3a3b_SymbolTable> __param_file, jule::Int __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {
		this->self = jule::Ref<_1b622b76e_Sema>::make(this, nullptr);

	}

	~_1b622b76e_Sema(void) { this->self.ref = nullptr; }

	_1b622b76e_Sema(void) { this->self = jule::Ref<_1b622b76e_Sema>::make(this, nullptr); }

	inline jule::Ref<_1b623bb7a_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1b623bb7a_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)>);


	inline jule::Ref<_1b637edab_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1b6703d45_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1ce385eed_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1b6069348_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1b61d7d79_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1b61d7c58_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_flag(jule::Int);


	inline void _method_set_current_file(jule::Ref<_1b66b3a3b_SymbolTable>);


	inline void _method_push_err(_1ce35e3a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_1ce35e3a0_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_1ce35e3a0_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline jule::Any _method_get_import_def(jule::Str,jule::Ref<_1b623bb7a_ImportInfo>&);


	inline void _method_check_import_selections(jule::Ref<_1b623bb7a_ImportInfo>&);


	inline jule::Bool _method_is_use_alias_duplication(jule::Ref<_1b623bb7a_ImportInfo>&);


	inline jule::Bool _method_check_import(jule::Ref<_1b623bb7a_ImportInfo>&);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ref<_1b6703d45_TypeSymbol>&,jule::Trait<_1b6b746d3_Lookup>,jule::Ref<_1b6703d45_Referencer>);


	inline jule::Bool _method_check_type(jule::Ref<_1b6703d45_TypeSymbol>&,jule::Trait<_1b6b746d3_Lookup>);


	inline jule::Ref<_1b6703d45_TypeKind> _method_build_type_with_generics(jule::Ref<_1ce385d22_TypeDecl>&,jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>);


	inline jule::Ref<_1b6703d45_TypeKind> _method_build_type(jule::Ref<_1ce385d22_TypeDecl>&);


	inline jule::Ref<_1b66db129_Eval> _method_evalpd(jule::Trait<_1b6b746d3_Lookup>,jule::Ref<_1b6703d45_TypeKind>,jule::Ref<_1b637edab_Var>);


	inline jule::Ref<_1b66db129_Eval> _method_evalp(jule::Trait<_1b6b746d3_Lookup>,jule::Ref<_1b6703d45_TypeKind>);


	inline jule::Ref<_1b66db129_Eval> _method_eval(jule::Trait<_1b6b746d3_Lookup>);


	inline void _method_check_assign_type(jule::Bool,jule::Ref<_1b6703d45_TypeKind>&,jule::Ref<_1b66db129_Data>&,_1ce35e3a0_Token,jule::Bool);


	inline jule::Bool _method_check_type_compatibility(jule::Ref<_1b6703d45_TypeKind>&,jule::Ref<_1b6703d45_TypeKind>&,_1ce35e3a0_Token&,jule::Bool);


	inline jule::Ref<_1b6703d45_TypeKind> _method_build_non_generic_type_kind(jule::Ref<_1ce385d22_TypeDecl>&,jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>&);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ref<_1b6069348_FnIns>&);


	inline jule::Ref<_1b6069348_FnIns> _method_get_trait_check_fn_kind(jule::Ref<_1b6069348_Fn>&);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ref<_1b6069348_FnIns>&);


	inline void _method_check_ref_validity_for_init_expr(jule::Bool,jule::Ref<_1b66db129_Data>&,_1ce35e3a0_Token&);


	inline void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ref<_1b6703d45_TypeKind>&,jule::Ref<_1b66db129_Data>&,_1ce35e3a0_Token&);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ref<_1b6703d45_TypeAlias>&,jule::Trait<_1b6b746d3_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ref<_1b6703d45_TypeAlias>&,jule::Trait<_1b6b746d3_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ref<_1b6703d45_TypeAlias>&);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ref<_1b61d7c58_Enum>);


	inline void _method_check_enum_items_str(jule::Ref<_1b61d7c58_Enum>&);


	inline void _method_check_enum_items_int(jule::Ref<_1b61d7c58_Enum>&);


	inline void _method_check_enum_decl(jule::Ref<_1b61d7c58_Enum>&);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>&);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ref<_1b6069348_Fn>&);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ref<_1b6069348_Fn>&);


	inline jule::Bool _method_check_fn_decl_types(jule::Ref<_1b6069348_Fn>&);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ref<_1b6069348_Fn>&);


	inline void _method_check_trait_decl_method(jule::Ref<_1b6069348_Fn>&);


	inline void _method_check_trait_decl_methods(jule::Ref<_1b61d7d79_Trait>&);


	inline void _method_check_trait_decl(jule::Ref<_1b61d7d79_Trait>&);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ref<_1b61d7d79_Trait>&,jule::Ref<_1b61ddc92_Impl>&);


	inline jule::Bool _method_impl_to_struct(jule::Ref<_1ce385eed_Struct>&,jule::Ref<_1b61ddc92_Impl>&);


	inline void _method_impl_trait(jule::Ref<_1b61ddc92_Impl>&);


	inline void _method_impl_struct(jule::Ref<_1b61ddc92_Impl>&);


	inline void _method_impl_impl(jule::Ref<_1b61ddc92_Impl>&);


	inline void _method_check_var_decl(jule::Ref<_1b637edab_Var>&,jule::Trait<_1b6b746d3_Lookup>);


	inline void _method_check_global_var_decl(jule::Ref<_1b637edab_Var>&);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ref<_1ce385eed_Struct>&,jule::Ref<_1b61d7d79_Trait>&);


	inline jule::Bool _method_check_struct_impls(jule::Ref<_1ce385eed_Struct>&);


	inline jule::Bool _method_check_struct_fields(jule::Ref<_1ce385eed_Struct>&);


	inline jule::Bool _method_check_struct_decl_methods(jule::Ref<_1ce385eed_Struct>&);


	inline void _method_check_struct_decl(jule::Ref<_1ce385eed_Struct>&);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ref<_1b6069348_Fn>&);


	inline jule::Bool _method_check_fn_decls(void);


	inline jule::Bool _method_check_directive_pass(_1ce50a46e_Pass&);


	inline jule::Bool _method_check_passes(void);


	inline void _method_push_cycle_error(jule::Ref<_1ce385eed_Struct>&,jule::Ref<_1ce385eed_Struct>&,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_1ce385eed_Struct>&,jule::Ref<_1ce385eed_Struct>&,jule::Str&);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ref<_1ce385eed_Struct>&,jule::Ref<_1b6703d45_TypeKind>&);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ref<_1ce385eed_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ref<_1ce385eed_Struct>&);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_type_inference(jule::Ref<_1b66db129_Data>&,_1ce35e3a0_Token&);


	inline void _method_check_var(jule::Ref<_1b637edab_Var>&);


	inline void _method_check_type_var(jule::Ref<_1b637edab_Var>&,jule::Trait<_1b6b746d3_Lookup>);


	inline void _method_check_global_types(void);


	inline void _method_check_type_method(jule::Ref<_1ce385eed_StructIns>&,jule::Ref<_1b6069348_Fn>&);


	inline void _method_check_type_struct(jule::Ref<_1ce385eed_Struct>&);


	inline void _method_check_struct_types(void);


	inline void _method_check_rets(jule::Ref<_1b6069348_FnIns>&);


	inline void _method_check_fn_ins_sc(jule::Ref<_1b6069348_FnIns>&,jule::Ref<_1b61e873b_ScopeChecker>&);


	inline void _method_check_fn_ins(jule::Ref<_1b6069348_FnIns>&);


	inline void _method_check_type_fn(jule::Ref<_1b6069348_Fn>&);


	inline void _method_precheck_type_fn(jule::Ref<_1b6069348_Fn>&);


	inline jule::Bool _method_precheck_fn_types(void);


	inline jule::Bool _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>&);


	inline bool operator==(const _1b622b76e_Sema &_Src) const {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file &&
			this->_field_flags == _Src._field_flags;
	}

	inline bool operator!=(const _1b622b76e_Sema &_Src) const { return !this->operator==(_Src); }
};


struct _1b65a085c_RangeChecker {
	jule::Ref<_1b61e873b_ScopeChecker> _field_sc{jule::Ref<_1b61e873b_ScopeChecker>()};
	jule::Ref<_1ce385d22_RangeKind> _field_rang{jule::Ref<_1ce385d22_RangeKind>()};
	jule::Ref<_1b61e873b_RangeIter> _field_kind{jule::Ref<_1b61e873b_RangeIter>()};
	jule::Ref<_1b66db129_Data> _field_d{jule::Ref<_1b66db129_Data>()};


	_1b65a085c_RangeChecker(jule::Ref<_1b61e873b_ScopeChecker> __param_sc, jule::Ref<_1ce385d22_RangeKind> __param_rang, jule::Ref<_1b61e873b_RangeIter> __param_kind, jule::Ref<_1b66db129_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_1b65a085c_RangeChecker(void) = default;

	inline jule::Ref<_1b637edab_Var> _method_build_var(jule::Ref<_1ce385d22_VarDecl>&);


	inline void _method_set_size_key(void);


	inline void _method_check_range_expr_validity(jule::Ref<_1b66db129_Data>&,jule::Ref<_1b637edab_Var>&,jule::Ref<_1b6703d45_TypeKind>&);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1b65a085c_RangeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _1b65a085c_RangeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1b66b3a3b_SymbolTable: public _1b6b746d3_Lookup {
	jule::Ref<_1ce4aae47_File> _field_file{jule::Ref<_1ce4aae47_File>()};
	jule::Slice<_1ce50a46e_Pass> _field_passes{jule::Slice<_1ce50a46e_Pass>()};
	jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>> _field_imports{jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>>()};
	jule::Slice<jule::Ref<_1b637edab_Var>> _field_vars{jule::Slice<jule::Ref<_1b637edab_Var>>()};
	jule::Slice<jule::Ref<_1b6703d45_TypeAlias>> _field_type_aliases{jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>()};
	jule::Slice<jule::Ref<_1ce385eed_Struct>> _field_structs{jule::Slice<jule::Ref<_1ce385eed_Struct>>()};
	jule::Slice<jule::Ref<_1b6069348_Fn>> _field_funcs{jule::Slice<jule::Ref<_1b6069348_Fn>>()};
	jule::Slice<jule::Ref<_1b61d7d79_Trait>> _field_traits{jule::Slice<jule::Ref<_1b61d7d79_Trait>>()};
	jule::Slice<jule::Ref<_1b61d7c58_Enum>> _field_enums{jule::Slice<jule::Ref<_1b61d7c58_Enum>>()};
	jule::Slice<jule::Ref<_1b61ddc92_Impl>> _field_impls{jule::Slice<jule::Ref<_1b61ddc92_Impl>>()};


	_1b66b3a3b_SymbolTable(jule::Ref<_1ce4aae47_File> __param_file, jule::Slice<_1ce50a46e_Pass> __param_passes, jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>> __param_imports, jule::Slice<jule::Ref<_1b637edab_Var>> __param_vars, jule::Slice<jule::Ref<_1b6703d45_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ref<_1ce385eed_Struct>> __param_structs, jule::Slice<jule::Ref<_1b6069348_Fn>> __param_funcs, jule::Slice<jule::Ref<_1b61d7d79_Trait>> __param_traits, jule::Slice<jule::Ref<_1b61d7c58_Enum>> __param_enums, jule::Slice<jule::Ref<_1b61ddc92_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_1b66b3a3b_SymbolTable(void) = default;

	inline jule::Ref<_1b623bb7a_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1b623bb7a_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)>);


	inline jule::Ref<_1b637edab_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1b6703d45_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1ce385eed_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1b6069348_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1b61d7d79_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1b61d7c58_Enum> _method_find_enum(jule::Str);


	inline jule::Ref<_1b637edab_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ref<_1b6703d45_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(const _1b66b3a3b_SymbolTable &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	inline bool operator!=(const _1b66b3a3b_SymbolTable &_Src) const { return !this->operator==(_Src); }
};


struct _1b66db129_Data {
	jule::Ref<_1b6703d45_TypeKind> _field_kind{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Ref<_1b6703d45_TypeKind> _field_cast_kind{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Bool _field_lvalue{jule::Bool()};
	jule::Bool _field_variadiced{jule::Bool()};
	jule::Bool _field_is_rune{jule::Bool()};
	jule::Any _field_model{jule::Any()};
	jule::Bool _field_decl{jule::Bool()};
	jule::Ref<_1b6d4076c_Const> _field_constant{jule::Ref<_1b6d4076c_Const>()};


	_1b66db129_Data(jule::Ref<_1b6703d45_TypeKind> __param_kind, jule::Ref<_1b6703d45_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_variadiced, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ref<_1b6d4076c_Const> __param_constant): _field_kind(__param_kind), _field_cast_kind(__param_cast_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_variadiced(__param_variadiced), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_1b66db129_Data(void) = default;

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline bool operator==(const _1b66db129_Data &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_variadiced == _Src._field_variadiced &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	inline bool operator!=(const _1b66db129_Data &_Src) const { return !this->operator==(_Src); }
};


struct _1b66db129_Value {
	jule::Ref<_1ce385d22_Expr> _field_expr{jule::Ref<_1ce385d22_Expr>()};
	jule::Ref<_1b66db129_Data> _field_data{jule::Ref<_1b66db129_Data>()};


	_1b66db129_Value(jule::Ref<_1ce385d22_Expr> __param_expr, jule::Ref<_1b66db129_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_1b66db129_Value(void) = default;

	inline bool operator==(const _1b66db129_Value &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1b66db129_Value &_Src) const { return !this->operator==(_Src); }
};


struct _1b66db129_Eval {
	jule::Ref<_1b66db129_Eval> self{};

	jule::Ref<_1b622b76e_Sema> _field_s{jule::Ref<_1b622b76e_Sema>()};
	jule::Trait<_1b6b746d3_Lookup> _field_lookup{jule::Trait<_1b6b746d3_Lookup>()};
	jule::Ref<_1b6703d45_TypeKind> _field_prefix{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Ref<_1b637edab_Var> _field_owner{jule::Ref<_1b637edab_Var>()};


	_1b66db129_Eval(jule::Ref<_1b622b76e_Sema> __param_s, jule::Trait<_1b6b746d3_Lookup> __param_lookup, jule::Ref<_1b6703d45_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Ref<_1b637edab_Var> __param_owner): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_owner(__param_owner) {
		this->self = jule::Ref<_1b66db129_Eval>::make(this, nullptr);

	}

	~_1b66db129_Eval(void) { this->self.ref = nullptr; }

	_1b66db129_Eval(void) { this->self = jule::Ref<_1b66db129_Eval>::make(this, nullptr); }

	inline void _method_push_err(_1ce35e3a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline jule::Ref<_1b66db129_Data> _method_lit_nil(void);


	inline jule::Ref<_1b66db129_Data> _method_lit_str(jule::Ref<_1ce385d22_LitExpr>);


	inline jule::Ref<_1b66db129_Data> _method_lit_bool(jule::Ref<_1ce385d22_LitExpr>);


	inline jule::Ref<_1b66db129_Data> _method_lit_rune(jule::Ref<_1ce385d22_LitExpr>);


	inline jule::Ref<_1b66db129_Data> _method_lit_float(jule::Ref<_1ce385d22_LitExpr>);


	inline jule::Ref<_1b66db129_Data> _method_lit_int(jule::Ref<_1ce385d22_LitExpr>);


	inline jule::Ref<_1b66db129_Data> _method_lit_num(jule::Ref<_1ce385d22_LitExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_lit(jule::Ref<_1ce385d22_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ref<_1ce50a46e_ReferenceStack>);


	inline void _method_push_reference_to_fn(jule::Ref<_1b6069348_FnIns>);


	inline void _method_push_reference_to_var(jule::Ref<_1b637edab_Var>);


	inline void _method_push_reference_to_struct(jule::Ref<_1ce385eed_StructIns>);


	inline jule::Ref<_1b66db129_Data> _method___eval_enum(jule::Ref<_1b61d7c58_Enum>);


	inline jule::Ref<_1b66db129_Data> _method_eval_enum(jule::Ref<_1b61d7c58_Enum>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method___eval_struct(jule::Ref<_1ce385eed_StructIns>);


	inline jule::Ref<_1b66db129_Data> _method_eval_struct(jule::Ref<_1ce385eed_StructIns>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_fn_ins(jule::Ref<_1b6069348_FnIns>);


	inline jule::Ref<_1b66db129_Data> _method_eval_fn(jule::Ref<_1b6069348_Fn>,_1ce35e3a0_Token);


	inline void _method_push_illegal_cycle_error(jule::Ref<_1b637edab_Var>,jule::Ref<_1b637edab_Var>,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_1b637edab_Var>,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_1b637edab_Var>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_var(jule::Ref<_1b637edab_Var>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_type_alias(jule::Ref<_1b6703d45_TypeAlias>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_def(jule::Any,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_ident(jule::Ref<_1ce385d22_IdentExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_unary_minus(jule::Ref<_1b66db129_Data>);


	inline jule::Ref<_1b66db129_Data> _method_eval_unary_plus(jule::Ref<_1b66db129_Data>);


	inline jule::Ref<_1b66db129_Data> _method_eval_unary_caret(jule::Ref<_1b66db129_Data>);


	inline jule::Ref<_1b66db129_Data> _method_eval_unary_excl(jule::Ref<_1b66db129_Data>);


	inline jule::Ref<_1b66db129_Data> _method_eval_unary_star(jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_unary_amper(jule::Ref<_1b66db129_Data>);


	inline jule::Ref<_1b66db129_Data> _method_eval_unary_type_decl(jule::Ref<_1b66db129_Data>,jule::Ref<_1ce385d22_UnaryExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_unary(jule::Ref<_1ce385d22_UnaryExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_variadic(jule::Ref<_1ce385d22_VariadicExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_unsafe(jule::Ref<_1ce385d22_UnsafeExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_arr(jule::Ref<_1ce385d22_SliceExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_exp_slc(jule::Ref<_1ce385d22_SliceExpr>,jule::Ref<_1b6703d45_TypeKind>);


	inline jule::Ref<_1b66db129_Data> _method_eval_slice_expr(jule::Ref<_1ce385d22_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline void _method_indexing_ptr(jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>,jule::Ref<_1ce385d22_IndexingExpr>);


	inline void _method_indexing_arr(jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>,jule::Ref<_1ce385d22_IndexingExpr>);


	inline void _method_indexing_slc(jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>,jule::Ref<_1ce385d22_IndexingExpr>);


	inline void _method_indexing_map(jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>,jule::Ref<_1ce385d22_IndexingExpr>);


	inline void _method_indexing_str(jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>,jule::Ref<_1ce385d22_IndexingExpr>);


	inline void _method_to_indexing(jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>,jule::Ref<_1ce385d22_IndexingExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_ident_decl_from_indexing(jule::Ref<_1ce385d22_IndexingExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_indexing(jule::Ref<_1ce385d22_IndexingExpr>);


	inline std::tuple<jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>> _method_eval_slicing_exprs(jule::Ref<_1ce385d22_SlicingExpr>);


	inline void _method_slicing_arr(jule::Ref<_1b66db129_Data>);


	inline void _method_slicing_slc(jule::Ref<_1b66db129_Data>);


	inline void _method_slicing_str(jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>);


	inline void _method_check_slicing(jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>,jule::Ref<_1ce385d22_SlicingExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_slicing(jule::Ref<_1ce385d22_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ref<_1b6703d45_TypeKind>,jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline void _method_cast_struct(jule::Ref<_1b6703d45_TypeKind>,jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline void _method_cast_ref(jule::Ref<_1b6703d45_TypeKind>,jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline void _method_cast_slc(jule::Ref<_1b6703d45_TypeKind>,jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline void _method_cast_str(jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline void _method_cast_int(jule::Ref<_1b6703d45_TypeKind>,jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline void _method_cast_num(jule::Ref<_1b6703d45_TypeKind>,jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline void _method_cast_prim(jule::Ref<_1b6703d45_TypeKind>,jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline void _method_cast_constant(jule::Ref<_1b6703d45_TypeKind>&,jule::Ref<_1b66db129_Data>&);


	inline jule::Ref<_1b66db129_Data> _method_eval_cast_by_type_n_data(jule::Ref<_1b6703d45_TypeKind>,jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_cast(jule::Ref<_1ce385d22_CastExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_ns_selection(jule::Ref<_1ce385d22_NsSelectionExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_struct_lit_explicit(jule::Ref<_1ce385eed_StructIns>,jule::Slice<jule::Any>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_struct_lit(jule::Ref<_1ce385d22_StructLit>);


	inline jule::Ref<_1b66db129_Data> _method_eval_type(jule::Ref<_1ce385d22_TypeDecl>);


	inline jule::Ref<_1b66db129_Data> _method_call_type_fn(jule::Ref<_1ce385d22_FnCallExpr>,jule::Ref<_1b66db129_Data>);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ref<_1b6069348_FnIns>,jule::Ref<_1ce385d22_FnCallExpr>);


	inline jule::Ref<_1b66db129_Data> _method_call_builtin_fn(jule::Ref<_1ce385d22_FnCallExpr>,jule::Ref<_1b66db129_Data>);


	inline void _method_check_fn_of_concurrent_call(jule::Ref<_1b6069348_FnIns>&,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_call_fn(jule::Ref<_1ce385d22_FnCallExpr>,jule::Ref<_1b66db129_Data>);


	inline jule::Ref<_1b66db129_Data> _method_eval_fn_call(jule::Ref<_1ce385d22_FnCallExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_enum_static(jule::Ref<_1b61d7c58_Enum>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_struct_static(jule::Ref<_1ce385eed_StructIns>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_trait_sub_ident(jule::Ref<_1b66db129_Data>,jule::Ref<_1b61d7d79_Trait>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_struct_sub_ident(jule::Ref<_1b66db129_Data>,jule::Ref<_1ce385eed_StructIns>,jule::Ref<_1ce385d22_SubIdentExpr>,jule::Bool);


	inline jule::Ref<_1b66db129_Data> _method_eval_slice_sub_ident(jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_array_sub_ident(jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_map_sub_ident(jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_str_sub_ident(jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_int_type_static(_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_uint_type_static(_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_i8_type_static(_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_i16_type_static(_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_i32_type_static(_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_i64_type_static(_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_u8_type_static(_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_u16_type_static(_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_u32_type_static(_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_u64_type_static(_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_f32_type_tatic(_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_f64_type_static(_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_prim_static(jule::Str,_1ce35e3a0_Token);


	inline jule::Ref<_1b66db129_Data> _method_eval_type_static(jule::Ref<_1b66db129_Data>,jule::Ref<_1ce385d22_SubIdentExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_obj_sub_ident(jule::Ref<_1b66db129_Data>,jule::Ref<_1ce385d22_SubIdentExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_sub_ident(jule::Ref<_1ce385d22_SubIdentExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_tuple(jule::Ref<_1ce385d22_TupleExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_map(jule::Ref<_1b6703d45_Map>,jule::Ref<_1ce385d22_BraceLit>);


	inline jule::Ref<_1b66db129_Data> _method_eval_brace_lit(jule::Ref<_1ce385d22_BraceLit>);


	inline jule::Ref<_1b66db129_Data> _method_eval_anon_fn(jule::Ref<_1ce385d22_FnDecl>);


	inline jule::Ref<_1b66db129_Data> _method_eval_binop(jule::Ref<_1ce385d22_BinopExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_ternary(jule::Ref<_1ce385d22_TernaryExpr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ref<_1b66db129_Data> _method_eval(jule::Ref<_1ce385d22_Expr>);


	inline jule::Ref<_1b66db129_Data> _method_eval_expr(jule::Ref<_1ce385d22_Expr>);


	inline bool operator==(const _1b66db129_Eval &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_owner == _Src._field_owner;
	}

	inline bool operator!=(const _1b66db129_Eval &_Src) const { return !this->operator==(_Src); }
};


struct _1b6703d45_TypeKind: public _1b6703d45_Kind {
	jule::Ref<_1b6703d45_TypeKind> self{};

	jule::Str _field_cpp_ident{jule::Str()};
	jule::Bool _field_generic{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Trait<_1b6703d45_Kind> _field_kind{jule::Trait<_1b6703d45_Kind>()};


	_1b6703d45_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_1b6703d45_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {
		this->self = jule::Ref<_1b6703d45_TypeKind>::make(this, nullptr);

	}

	~_1b6703d45_TypeKind(void) { this->self.ref = nullptr; }

	_1b6703d45_TypeKind(void) { this->self = jule::Ref<_1b6703d45_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b6703d45_TypeKind>);


	inline jule::Ref<_1b6703d45_TypeKind> _method_clone(void);


	inline jule::Bool _method_cpp_linked(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_void(void);


	inline jule::Bool _method_lvalue(void);


	inline jule::Bool _method_mutable(void);


	inline jule::Bool _method_nil_compatible(void);


	inline jule::Bool _method_supports_cloning(void);


	inline jule::Bool _method_variadicable(void);


	inline jule::Ref<_1b6703d45_Prim> _method_prim(void);


	inline jule::Ref<_1b6703d45_Ref> _method_ref(void);


	inline jule::Ref<_1b6703d45_Ptr> _method_ptr(void);


	inline jule::Ref<_1b61d7c58_Enum> _method_enm(void);


	inline jule::Ref<_1b6703d45_Arr> _method_arr(void);


	inline jule::Ref<_1b6703d45_Slc> _method_slc(void);


	inline jule::Ref<_1b6069348_FnIns> _method_fnc(void);


	inline jule::Ref<_1ce385eed_StructIns> _method_strct(void);


	inline jule::Ref<_1b61d7d79_Trait> _method_trt(void);


	inline jule::Ref<_1b6703d45_Map> _method_map(void);


	inline jule::Ref<_1b6703d45_Tuple> _method_tup(void);


	inline bool operator==(const _1b6703d45_TypeKind &_Src) const {
		return 
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_generic == _Src._field_generic &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b6703d45_TypeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1b6703d45_TypeSymbol {
	jule::Ref<_1ce385d22_TypeDecl> _field_decl{jule::Ref<_1ce385d22_TypeDecl>()};
	jule::Ref<_1b6703d45_TypeKind> _field_kind{jule::Ref<_1b6703d45_TypeKind>()};


	_1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl> __param_decl, jule::Ref<_1b6703d45_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1b6703d45_TypeSymbol(void) = default;

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(const _1b6703d45_TypeSymbol &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b6703d45_TypeSymbol &_Src) const { return !this->operator==(_Src); }
};


struct _1b6703d45_Prim: public _1b6703d45_Kind {
	jule::Str _field_kind{jule::Str()};


	_1b6703d45_Prim(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_1b6703d45_Prim(void) = default;

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b6703d45_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(const _1b6703d45_Prim &_Src) const {
		return 
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b6703d45_Prim &_Src) const { return !this->operator==(_Src); }
};


struct _1b6703d45_Ref: public _1b6703d45_Kind {
	jule::Ref<_1b6703d45_TypeKind> _field_elem{jule::Ref<_1b6703d45_TypeKind>()};


	_1b6703d45_Ref(jule::Ref<_1b6703d45_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1b6703d45_Ref(void) = default;

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b6703d45_TypeKind>);


	inline bool operator==(const _1b6703d45_Ref &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1b6703d45_Ref &_Src) const { return !this->operator==(_Src); }
};


struct _1b6703d45_Slc: public _1b6703d45_Kind {
	jule::Ref<_1b6703d45_TypeKind> _field_elem{jule::Ref<_1b6703d45_TypeKind>()};


	_1b6703d45_Slc(jule::Ref<_1b6703d45_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1b6703d45_Slc(void) = default;

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b6703d45_TypeKind>);


	inline bool operator==(const _1b6703d45_Slc &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1b6703d45_Slc &_Src) const { return !this->operator==(_Src); }
};


struct _1b6703d45_Tuple: public _1b6703d45_Kind {
	jule::Slice<jule::Ref<_1b6703d45_TypeKind>> _field_types{jule::Slice<jule::Ref<_1b6703d45_TypeKind>>()};


	_1b6703d45_Tuple(jule::Slice<jule::Ref<_1b6703d45_TypeKind>> __param_types): _field_types(__param_types) {}

	

	_1b6703d45_Tuple(void) = default;

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b6703d45_TypeKind>);


	inline bool operator==(const _1b6703d45_Tuple &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1b6703d45_Tuple &_Src) const { return !this->operator==(_Src); }
};


struct _1b6703d45_Map: public _1b6703d45_Kind {
	jule::Ref<_1b6703d45_TypeKind> _field_key{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Ref<_1b6703d45_TypeKind> _field_val{jule::Ref<_1b6703d45_TypeKind>()};


	_1b6703d45_Map(jule::Ref<_1b6703d45_TypeKind> __param_key, jule::Ref<_1b6703d45_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1b6703d45_Map(void) = default;

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b6703d45_TypeKind>);


	inline bool operator==(const _1b6703d45_Map &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1b6703d45_Map &_Src) const { return !this->operator==(_Src); }
};


struct _1b6703d45_Arr: public _1b6703d45_Kind {
	jule::Bool _field_auto{jule::Bool()};
	jule::Int _field_n{jule::Int()};
	jule::Ref<_1b6703d45_TypeKind> _field_elem{jule::Ref<_1b6703d45_TypeKind>()};


	_1b6703d45_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ref<_1b6703d45_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {}

	

	_1b6703d45_Arr(void) = default;

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b6703d45_TypeKind>);


	inline bool operator==(const _1b6703d45_Arr &_Src) const {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1b6703d45_Arr &_Src) const { return !this->operator==(_Src); }
};


struct _1b6703d45_Ptr: public _1b6703d45_Kind {
	jule::Ref<_1b6703d45_TypeKind> _field_elem{jule::Ref<_1b6703d45_TypeKind>()};


	_1b6703d45_Ptr(jule::Ref<_1b6703d45_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1b6703d45_Ptr(void) = default;

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b6703d45_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1b6703d45_Ptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1b6703d45_Ptr &_Src) const { return !this->operator==(_Src); }
};


struct _1b6703d45_Referencer {
	jule::Str _field_ident{jule::Str()};
	jule::Any _field_owner{jule::Any()};
	jule::Slice<jule::Any>* _field_refs{nullptr};


	_1b6703d45_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_1b6703d45_Referencer(void) = default;

	inline bool operator==(const _1b6703d45_Referencer &_Src) const {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	inline bool operator!=(const _1b6703d45_Referencer &_Src) const { return !this->operator==(_Src); }
};


struct _1ce135770_PlainImporter: public _1b623bb7a_Importer {
	jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>> _field_all_packages{jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>>()};


	_1ce135770_PlainImporter(jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>> __param_all_packages): _field_all_packages(__param_all_packages) {}

	

	_1ce135770_PlainImporter(void) = default;

	inline jule::Ref<_1b623bb7a_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ref<_1ce2b7acd_Ast>>,jule::Slice<_1e7690a81_Log>> _method_import_package(jule::Str);


	inline void _method_imported(jule::Ref<_1b623bb7a_ImportInfo>);


	inline bool operator==(const _1ce135770_PlainImporter &_Src) const {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	inline bool operator!=(const _1ce135770_PlainImporter &_Src) const { return !this->operator==(_Src); }
};


struct _1cde30c0d_OrderedDefines {
	jule::Slice<jule::Ref<_1ce385eed_Struct>> _field_structs{jule::Slice<jule::Ref<_1ce385eed_Struct>>()};
	jule::Slice<jule::Ref<_1b637edab_Var>> _field_globals{jule::Slice<jule::Ref<_1b637edab_Var>>()};


	_1cde30c0d_OrderedDefines(jule::Slice<jule::Ref<_1ce385eed_Struct>> __param_structs, jule::Slice<jule::Ref<_1b637edab_Var>> __param_globals): _field_structs(__param_structs), _field_globals(__param_globals) {}

	

	_1cde30c0d_OrderedDefines(void) = default;

	inline bool operator==(const _1cde30c0d_OrderedDefines &_Src) const {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	inline bool operator!=(const _1cde30c0d_OrderedDefines &_Src) const { return !this->operator==(_Src); }
};


struct _1cde30c0d_DefineOrderer {
	

	_1cde30c0d_DefineOrderer(void) = default;

	static inline jule::Bool _static_method_is_common_ordered_0(jule::Slice<jule::Ref<_1b637edab_Var>>&,jule::Ref<_1b637edab_Var>);
	static inline jule::Bool _static_method_is_common_ordered_1(jule::Slice<jule::Ref<_1ce385eed_Struct>>&,jule::Ref<_1ce385eed_Struct>);


	static inline void _static_method_order_common_0(jule::Slice<jule::Ref<_1b637edab_Var>>&);
	static inline void _static_method_order_common_1(jule::Slice<jule::Ref<_1ce385eed_Struct>>&);


	static inline void _static_method_order_variables(jule::Slice<jule::Ref<_1b637edab_Var>>&);


	static inline void _static_method_order_structures(jule::Slice<jule::Ref<_1ce385eed_Struct>>&);


	inline bool operator==(const _1cde30c0d_DefineOrderer &_Src) const { return true; }

	inline bool operator!=(const _1cde30c0d_DefineOrderer &_Src) const { return !this->operator==(_Src); }
};


struct _1cdd24409_ScopeDeadCode {
	jule::Ref<_1cdd24409_ScopeDeadCode> self{};

	jule::Ref<_1cdd24409_ScopeDeadCode> _field_parent{jule::Ref<_1cdd24409_ScopeDeadCode>()};
	jule::Ref<_1b61e873b_Scope> _field_s{jule::Ref<_1b61e873b_Scope>()};
	jule::Slice<jule::Any>* _field_stmts{nullptr};
	jule::Int _field_i{jule::Int()};


	_1cdd24409_ScopeDeadCode(jule::Ref<_1cdd24409_ScopeDeadCode> __param_parent, jule::Ref<_1b61e873b_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::Int __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {
		this->self = jule::Ref<_1cdd24409_ScopeDeadCode>::make(this, nullptr);

	}

	~_1cdd24409_ScopeDeadCode(void) { this->self.ref = nullptr; }

	_1cdd24409_ScopeDeadCode(void) { this->self = jule::Ref<_1cdd24409_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ref<_1b61e873b_Scope>&);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(const _1cdd24409_ScopeDeadCode &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1cdd24409_ScopeDeadCode &_Src) const { return !this->operator==(_Src); }
};


struct _1b72774ab_AbsTime {
	jule::Uint _field_day{jule::Uint()};
	jule::Uint _field_week_day{jule::Uint()};
	jule::Uint _field_year_day{jule::Uint()};
	jule::Uint _field_month{jule::Uint()};
	jule::Uint _field_year{jule::Uint()};
	jule::Uint _field_second{jule::Uint()};
	jule::Uint _field_minute{jule::Uint()};
	jule::Uint _field_hour{jule::Uint()};


	_1b72774ab_AbsTime(jule::Uint __param_day, jule::Uint __param_week_day, jule::Uint __param_year_day, jule::Uint __param_month, jule::Uint __param_year, jule::Uint __param_second, jule::Uint __param_minute, jule::Uint __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_1b72774ab_AbsTime(void) = default;

	inline jule::U64 _method_unix(void);


	inline bool operator==(const _1b72774ab_AbsTime &_Src) const {
		return 
			this->_field_day == _Src._field_day &&
			this->_field_week_day == _Src._field_week_day &&
			this->_field_year_day == _Src._field_year_day &&
			this->_field_month == _Src._field_month &&
			this->_field_year == _Src._field_year &&
			this->_field_second == _Src._field_second &&
			this->_field_minute == _Src._field_minute &&
			this->_field_hour == _Src._field_hour;
	}

	inline bool operator!=(const _1b72774ab_AbsTime &_Src) const { return !this->operator==(_Src); }
};


struct _1b72774ab_Time {
	jule::U64 _field_sec{jule::U64()};


	_1b72774ab_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_1b72774ab_Time(void) = default;

	static inline _1b72774ab_Time _static_method_unix(jule::U64);


	static inline _1b72774ab_Time _static_method_now(void);


	inline jule::U64 _method_unix(void);


	inline jule::Uint _method_day(void);


	inline jule::Uint _method_month(void);


	inline jule::Uint _method_year(void);


	inline jule::Uint _method_second(void);


	inline jule::Uint _method_minute(void);


	inline jule::Uint _method_hour(void);


	inline _1b72774ab_AbsTime _method_abs(void);


	inline bool operator==(const _1b72774ab_Time &_Src) const {
		return 
			this->_field_sec == _Src._field_sec;
	}

	inline bool operator!=(const _1b72774ab_Time &_Src) const { return !this->operator==(_Src); }
};


struct _1b72774ab_Duration {
	

	_1b72774ab_Duration(void) = default;

	static inline jule::I64 _static_method_nanoseconds(jule::I64);


	static inline jule::I64 _static_method_microseconds(jule::I64);


	static inline jule::I64 _static_method_milliseconds(jule::I64);


	static inline jule::I64 _static_method_seconds(jule::I64);


	static inline jule::I64 _static_method_minutes(jule::I64);


	static inline jule::I64 _static_method_hours(jule::I64);


	inline bool operator==(const _1b72774ab_Duration &_Src) const { return true; }

	inline bool operator!=(const _1b72774ab_Duration &_Src) const { return !this->operator==(_Src); }
};


struct _1e86b150c_IndexRangeIterGen: public _1e86b150c_RangeIterGen {
	jule::Ref<_1b61e873b_RangeIter> _field_it{jule::Ref<_1b61e873b_RangeIter>()};


	_1e86b150c_IndexRangeIterGen(jule::Ref<_1b61e873b_RangeIter> __param_it): _field_it(__param_it) {}

	

	_1e86b150c_IndexRangeIterGen(void) = default;

	inline jule::Str _method_gen(void);


	inline bool operator==(const _1e86b150c_IndexRangeIterGen &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _1e86b150c_IndexRangeIterGen &_Src) const { return !this->operator==(_Src); }
};


struct _1e86b150c_MapRangeIterGen: public _1e86b150c_RangeIterGen {
	jule::Ref<_1b61e873b_RangeIter> _field_it{jule::Ref<_1b61e873b_RangeIter>()};


	_1e86b150c_MapRangeIterGen(jule::Ref<_1b61e873b_RangeIter> __param_it): _field_it(__param_it) {}

	

	_1e86b150c_MapRangeIterGen(void) = default;

	inline jule::Str _method_gen(void);


	inline bool operator==(const _1e86b150c_MapRangeIterGen &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _1e86b150c_MapRangeIterGen &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_MatchCase {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Ref<_1ce385d22_Expr> _field_expr{jule::Ref<_1ce385d22_Expr>()};
	jule::Slice<jule::Ref<_1ce385d22_Case>> _field_cases{jule::Slice<jule::Ref<_1ce385d22_Case>>()};
	jule::Ref<_1ce385d22_Else> _field_default{jule::Ref<_1ce385d22_Else>()};


	_1ce385d22_MatchCase(_1ce35e3a0_Token __param_token, jule::Bool __param_type_match, jule::Ref<_1ce385d22_Expr> __param_expr, jule::Slice<jule::Ref<_1ce385d22_Case>> __param_cases, jule::Ref<_1ce385d22_Else> __param_default): _field_token(__param_token), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1ce385d22_MatchCase(void) = default;

	inline bool operator==(const _1ce385d22_MatchCase &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1ce385d22_MatchCase &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_LitExpr {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_value{jule::Str()};


	_1ce385d22_LitExpr(_1ce35e3a0_Token __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_1ce385d22_LitExpr(void) = default;

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(const _1ce385d22_LitExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1ce385d22_LitExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_UnsafeExpr {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Any _field_expr{jule::Any()};


	_1ce385d22_UnsafeExpr(_1ce35e3a0_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1ce385d22_UnsafeExpr(void) = default;

	inline bool operator==(const _1ce385d22_UnsafeExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ce385d22_UnsafeExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_IdentExpr {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};


	_1ce385d22_IdentExpr(_1ce35e3a0_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_1ce385d22_IdentExpr(void) = default;

	inline jule::Bool _method_is_self(void);


	inline bool operator==(const _1ce385d22_IdentExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	inline bool operator!=(const _1ce385d22_IdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_UnaryExpr {
	_1ce35e3a0_Token _field_op{_1ce35e3a0_Token()};
	jule::Any _field_expr{jule::Any()};


	_1ce385d22_UnaryExpr(_1ce35e3a0_Token __param_op, jule::Any __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_1ce385d22_UnaryExpr(void) = default;

	inline bool operator==(const _1ce385d22_UnaryExpr &_Src) const {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ce385d22_UnaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_VariadicExpr {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Any _field_expr{jule::Any()};


	_1ce385d22_VariadicExpr(_1ce35e3a0_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1ce385d22_VariadicExpr(void) = default;

	inline bool operator==(const _1ce385d22_VariadicExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ce385d22_VariadicExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_NsSelectionExpr {
	jule::Slice<_1ce35e3a0_Token> _field_ns{jule::Slice<_1ce35e3a0_Token>()};
	_1ce35e3a0_Token _field_ident{_1ce35e3a0_Token()};


	_1ce385d22_NsSelectionExpr(jule::Slice<_1ce35e3a0_Token> __param_ns, _1ce35e3a0_Token __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_1ce385d22_NsSelectionExpr(void) = default;

	inline bool operator==(const _1ce385d22_NsSelectionExpr &_Src) const {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ce385d22_NsSelectionExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_SubIdentExpr {
	jule::Bool _field_is_self{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	_1ce35e3a0_Token _field_ident{_1ce35e3a0_Token()};


	_1ce385d22_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _1ce35e3a0_Token __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1ce385d22_SubIdentExpr(void) = default;

	inline bool operator==(const _1ce385d22_SubIdentExpr &_Src) const {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ce385d22_SubIdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_BinopExpr {
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	_1ce35e3a0_Token _field_op{_1ce35e3a0_Token()};


	_1ce385d22_BinopExpr(jule::Any __param_left, jule::Any __param_right, _1ce35e3a0_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1ce385d22_BinopExpr(void) = default;

	inline bool operator==(const _1ce385d22_BinopExpr &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1ce385d22_BinopExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_FieldExprPair {
	_1ce35e3a0_Token _field_field{_1ce35e3a0_Token()};
	jule::Any _field_expr{jule::Any()};


	_1ce385d22_FieldExprPair(_1ce35e3a0_Token __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1ce385d22_FieldExprPair(void) = default;

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(const _1ce385d22_FieldExprPair &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ce385d22_FieldExprPair &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_BraceLit {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1ce385d22_BraceLit(_1ce35e3a0_Token __param_token, jule::Slice<jule::Any> __param_exprs): _field_token(__param_token), _field_exprs(__param_exprs) {}

	

	_1ce385d22_BraceLit(void) = default;

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1ce385d22_BraceLit &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1ce385d22_BraceLit &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_KeyValPair {
	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};
	_1ce35e3a0_Token _field_colon{_1ce35e3a0_Token()};


	_1ce385d22_KeyValPair(jule::Any __param_key, jule::Any __param_val, _1ce35e3a0_Token __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_1ce385d22_KeyValPair(void) = default;

	inline bool operator==(const _1ce385d22_KeyValPair &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	inline bool operator!=(const _1ce385d22_KeyValPair &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_SliceExpr {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1ce385d22_SliceExpr(_1ce35e3a0_Token __param_token, jule::Slice<jule::Any> __param_elems): _field_token(__param_token), _field_elems(__param_elems) {}

	

	_1ce385d22_SliceExpr(void) = default;

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1ce385d22_SliceExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1ce385d22_SliceExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_IndexingExpr {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_1ce385d22_IndexingExpr(_1ce35e3a0_Token __param_token, jule::Any __param_expr, jule::Any __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1ce385d22_IndexingExpr(void) = default;

	inline bool operator==(const _1ce385d22_IndexingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1ce385d22_IndexingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b65a085c_DynamicTypeAnnotation {
	jule::Ref<_1b66db129_Eval> _field_e{jule::Ref<_1b66db129_Eval>()};
	jule::Ref<_1b6069348_FnIns> _field_f{jule::Ref<_1b6069348_FnIns>()};
	jule::Ref<_1b6069348_ParamIns> _field_p{jule::Ref<_1b6069348_ParamIns>()};
	jule::Ref<_1b66db129_Data> _field_a{jule::Ref<_1b66db129_Data>()};
	_1ce35e3a0_Token _field_error_token{_1ce35e3a0_Token()};
	_1b6703d45_TypeKind** _field_k{nullptr};


	_1b65a085c_DynamicTypeAnnotation(jule::Ref<_1b66db129_Eval> __param_e, jule::Ref<_1b6069348_FnIns> __param_f, jule::Ref<_1b6069348_ParamIns> __param_p, jule::Ref<_1b66db129_Data> __param_a, _1ce35e3a0_Token __param_error_token, _1b6703d45_TypeKind** __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_1b65a085c_DynamicTypeAnnotation(void) = default;

	inline void _method_push_generic(jule::Ref<_1b6703d45_TypeKind>&,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ref<_1b6703d45_TypeKind>&);


	inline jule::Bool _method_annotate_slc(jule::Ref<_1b6703d45_TypeKind>&);


	inline jule::Bool _method_check_map_key(_1b6703d45_TypeKind**,jule::Ref<_1b6703d45_TypeKind>&);


	inline jule::Bool _method_annotate_map(jule::Ref<_1b6703d45_TypeKind>&);


	inline jule::Bool _method_annotate_fn(jule::Ref<_1b6703d45_TypeKind>&);


	inline jule::Bool _method_annotate_ptr(jule::Ref<_1b6703d45_TypeKind>&);


	inline jule::Bool _method_annotate_ref(jule::Ref<_1b6703d45_TypeKind>&);


	inline jule::Bool _method_annotate_any(jule::Ref<_1b6703d45_TypeKind>&);


	inline jule::Bool _method_annotate_kind(jule::Ref<_1b6703d45_TypeKind>&);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(const _1b65a085c_DynamicTypeAnnotation &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	inline bool operator!=(const _1b65a085c_DynamicTypeAnnotation &_Src) const { return !this->operator==(_Src); }
};


struct _1b65a085c_StructLitChecker {
	jule::Ref<_1b66db129_Eval> _field_e{jule::Ref<_1b66db129_Eval>()};
	_1ce35e3a0_Token _field_error_token{_1ce35e3a0_Token()};
	jule::Ref<_1ce385eed_StructIns> _field_s{jule::Ref<_1ce385eed_StructIns>()};
	jule::Slice<jule::Ref<_1b61decc6_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_1b61decc6_StructArgExprModel>>()};


	_1b65a085c_StructLitChecker(jule::Ref<_1b66db129_Eval> __param_e, _1ce35e3a0_Token __param_error_token, jule::Ref<_1ce385eed_StructIns> __param_s, jule::Slice<jule::Ref<_1b61decc6_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_1b65a085c_StructLitChecker(void) = default;

	inline void _method_push_err(_1ce35e3a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ref<_1ce385eed_FieldIns>&,jule::Ref<_1b66db129_Data>&,_1ce35e3a0_Token&);


	inline void _method_check_pair(jule::Ref<_1ce385d22_FieldExprPair>&,jule::Slice<jule::Any>&);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>&);


	inline void _method_check(jule::Slice<jule::Any>&);


	inline bool operator==(const _1b65a085c_StructLitChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1b65a085c_StructLitChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_SlicingExpr {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_start{jule::Any()};
	jule::Any _field_to{jule::Any()};


	_1ce385d22_SlicingExpr(_1ce35e3a0_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to): _field_token(__param_token), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_1ce385d22_SlicingExpr(void) = default;

	inline bool operator==(const _1ce385d22_SlicingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1ce385d22_SlicingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_TernaryExpr {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Any _field_condition{jule::Any()};
	jule::Any _field_true_expr{jule::Any()};
	jule::Any _field_false_expr{jule::Any()};


	_1ce385d22_TernaryExpr(_1ce35e3a0_Token __param_token, jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_token(__param_token), _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_1ce385d22_TernaryExpr(void) = default;

	inline bool operator==(const _1ce385d22_TernaryExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _1ce385d22_TernaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_LabelSt {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};


	_1ce385d22_LabelSt(_1ce35e3a0_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1ce385d22_LabelSt(void) = default;

	inline bool operator==(const _1ce385d22_LabelSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ce385d22_LabelSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_FallSt {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};


	_1ce385d22_FallSt(_1ce35e3a0_Token __param_token): _field_token(__param_token) {}

	

	_1ce385d22_FallSt(void) = default;

	inline bool operator==(const _1ce385d22_FallSt &_Src) const {
		return 
			this->_field_token == _Src._field_token;
	}

	inline bool operator!=(const _1ce385d22_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_AssignSt {
	jule::Bool _field_declarative{jule::Bool()};
	_1ce35e3a0_Token _field_setter{_1ce35e3a0_Token()};
	jule::Slice<jule::Ref<_1ce385d22_AssignLeft>> _field_left{jule::Slice<jule::Ref<_1ce385d22_AssignLeft>>()};
	jule::Ref<_1ce385d22_Expr> _field_right{jule::Ref<_1ce385d22_Expr>()};


	_1ce385d22_AssignSt(jule::Bool __param_declarative, _1ce35e3a0_Token __param_setter, jule::Slice<jule::Ref<_1ce385d22_AssignLeft>> __param_left, jule::Ref<_1ce385d22_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_1ce385d22_AssignSt(void) = default;

	inline bool operator==(const _1ce385d22_AssignSt &_Src) const {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1ce385d22_AssignSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_RetSt {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Ref<_1ce385d22_Expr> _field_expr{jule::Ref<_1ce385d22_Expr>()};


	_1ce385d22_RetSt(_1ce35e3a0_Token __param_token, jule::Ref<_1ce385d22_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1ce385d22_RetSt(void) = default;

	inline bool operator==(const _1ce385d22_RetSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ce385d22_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_Iter {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Any _field_kind{jule::Any()};
	jule::Ref<_1ce385d22_ScopeTree> _field_scope{jule::Ref<_1ce385d22_ScopeTree>()};


	_1ce385d22_Iter(_1ce35e3a0_Token __param_token, jule::Any __param_kind, jule::Ref<_1ce385d22_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_1ce385d22_Iter(void) = default;

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(const _1ce385d22_Iter &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1ce385d22_Iter &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_WhileKind {
	jule::Ref<_1ce385d22_Expr> _field_expr{jule::Ref<_1ce385d22_Expr>()};
	jule::Any _field_next{jule::Any()};
	_1ce35e3a0_Token _field_next_token{_1ce35e3a0_Token()};


	_1ce385d22_WhileKind(jule::Ref<_1ce385d22_Expr> __param_expr, jule::Any __param_next, _1ce35e3a0_Token __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_1ce385d22_WhileKind(void) = default;

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1ce385d22_WhileKind &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	inline bool operator!=(const _1ce385d22_WhileKind &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_RangeKind {
	_1ce35e3a0_Token _field_in_token{_1ce35e3a0_Token()};
	jule::Ref<_1ce385d22_Expr> _field_expr{jule::Ref<_1ce385d22_Expr>()};
	jule::Ref<_1ce385d22_VarDecl> _field_key_a{jule::Ref<_1ce385d22_VarDecl>()};
	jule::Ref<_1ce385d22_VarDecl> _field_key_b{jule::Ref<_1ce385d22_VarDecl>()};


	_1ce385d22_RangeKind(_1ce35e3a0_Token __param_in_token, jule::Ref<_1ce385d22_Expr> __param_expr, jule::Ref<_1ce385d22_VarDecl> __param_key_a, jule::Ref<_1ce385d22_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1ce385d22_RangeKind(void) = default;

	inline bool operator==(const _1ce385d22_RangeKind &_Src) const {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1ce385d22_RangeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1b65a085c_AssignTypeChecker {
	jule::Ref<_1b622b76e_Sema> _field_s{jule::Ref<_1b622b76e_Sema>()};
	jule::Ref<_1b6703d45_TypeKind> _field_dest{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Ref<_1b66db129_Data> _field_d{jule::Ref<_1b66db129_Data>()};
	_1ce35e3a0_Token _field_error_token{_1ce35e3a0_Token()};
	jule::Bool _field_deref{jule::Bool()};


	_1b65a085c_AssignTypeChecker(jule::Ref<_1b622b76e_Sema> __param_s, jule::Ref<_1b6703d45_TypeKind> __param_dest, jule::Ref<_1b66db129_Data> __param_d, _1ce35e3a0_Token __param_error_token, jule::Bool __param_deref): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token), _field_deref(__param_deref) {}

	

	_1b65a085c_AssignTypeChecker(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1b65a085c_AssignTypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_deref == _Src._field_deref;
	}

	inline bool operator!=(const _1b65a085c_AssignTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1b65a085c_FnCallArgChecker {
	jule::Ref<_1b66db129_Eval> _field_e{jule::Ref<_1b66db129_Eval>()};
	jule::Slice<jule::Ref<_1ce385d22_Expr>> _field_args{jule::Slice<jule::Ref<_1ce385d22_Expr>>()};
	_1ce35e3a0_Token _field_error_token{_1ce35e3a0_Token()};
	jule::Ref<_1b6069348_FnIns> _field_f{jule::Ref<_1b6069348_FnIns>()};
	jule::Bool _field_dynamic_annotation{jule::Bool()};
	jule::Slice<jule::Any> _field_arg_models{jule::Slice<jule::Any>()};


	_1b65a085c_FnCallArgChecker(jule::Ref<_1b66db129_Eval> __param_e, jule::Slice<jule::Ref<_1ce385d22_Expr>> __param_args, _1ce35e3a0_Token __param_error_token, jule::Ref<_1b6069348_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_1b65a085c_FnCallArgChecker(void) = default;

	inline void _method_push_err_token(_1ce35e3a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ref<_1b6069348_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ref<_1b6069348_ParamIns>>&);


	inline jule::Bool _method_check_arg(jule::Ref<_1b6069348_ParamIns>&,jule::Ref<_1b66db129_Data>&,_1ce35e3a0_Token&);


	inline jule::Bool _method_push(jule::Ref<_1b6069348_ParamIns>&,jule::Ref<_1ce385d22_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ref<_1b6069348_ParamIns>&,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ref<_1b6069348_ParamIns>>&);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1b65a085c_FnCallArgChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	inline bool operator!=(const _1b65a085c_FnCallArgChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1b65a085c_RetTypeChecker {
	jule::Ref<_1b61e873b_ScopeChecker> _field_sc{jule::Ref<_1b61e873b_ScopeChecker>()};
	jule::Ref<_1b6069348_FnIns> _field_f{jule::Ref<_1b6069348_FnIns>()};
	jule::Slice<jule::Ref<_1b6703d45_TypeKind>> _field_types{jule::Slice<jule::Ref<_1b6703d45_TypeKind>>()};
	jule::Slice<jule::Ref<_1ce385d22_Expr>> _field_exprs{jule::Slice<jule::Ref<_1ce385d22_Expr>>()};
	jule::Slice<jule::Ref<_1b637edab_Var>> _field_vars{jule::Slice<jule::Ref<_1b637edab_Var>>()};
	_1ce35e3a0_Token _field_error_token{_1ce35e3a0_Token()};
	jule::Any _field_model{jule::Any()};


	_1b65a085c_RetTypeChecker(jule::Ref<_1b61e873b_ScopeChecker> __param_sc, jule::Ref<_1b6069348_FnIns> __param_f, jule::Slice<jule::Ref<_1b6703d45_TypeKind>> __param_types, jule::Slice<jule::Ref<_1ce385d22_Expr>> __param_exprs, jule::Slice<jule::Ref<_1b637edab_Var>> __param_vars, _1ce35e3a0_Token __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_1b65a085c_RetTypeChecker(void) = default;

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ref<_1ce385d22_Expr>&);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ref<_1ce385d22_Expr>&);


	inline bool operator==(const _1b65a085c_RetTypeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_model == _Src._field_model;
	}

	inline bool operator!=(const _1b65a085c_RetTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_GenericDecl {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};


	_1ce385d22_GenericDecl(_1ce35e3a0_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1ce385d22_GenericDecl(void) = default;

	inline bool operator==(const _1ce385d22_GenericDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ce385d22_GenericDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_GotoSt {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	_1ce35e3a0_Token _field_label{_1ce35e3a0_Token()};


	_1ce385d22_GotoSt(_1ce35e3a0_Token __param_token, _1ce35e3a0_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1ce385d22_GotoSt(void) = default;

	inline bool operator==(const _1ce385d22_GotoSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1ce385d22_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b66db129_BinopSolver {
	jule::Ref<_1b66db129_Eval> _field_e{jule::Ref<_1b66db129_Eval>()};
	jule::Ref<_1b66db129_Data> _field_l{jule::Ref<_1b66db129_Data>()};
	jule::Ref<_1b66db129_Data> _field_r{jule::Ref<_1b66db129_Data>()};
	_1ce35e3a0_Token _field_op{_1ce35e3a0_Token()};


	_1b66db129_BinopSolver(jule::Ref<_1b66db129_Eval> __param_e, jule::Ref<_1b66db129_Data> __param_l, jule::Ref<_1b66db129_Data> __param_r, _1ce35e3a0_Token __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1b66db129_BinopSolver(void) = default;

	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_nil(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_enum(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_ptr(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_arr(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_slc(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_fn(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_struct(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_trait(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_any(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_bool(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_check_mod_data(jule::Ref<_1b66db129_Data>);


	inline void _method_mod(void);


	inline jule::Bool _method_numbers_are_compatibile(jule::Str&,jule::Str&);


	inline jule::Ref<_1b66db129_Data> _method_eval_float(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_unsig_int(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_sig_int(void);


	inline jule::Ref<_1b66db129_Data> _method_eval_prim(void);


	inline jule::Ref<_1b66db129_Data> _method_eval(void);


	inline void _method_solve_const(jule::Ref<_1b66db129_Data>);


	inline void _method_post_const(jule::Ref<_1b66db129_Data>);


	inline void _method_prepare_data(jule::Ref<_1b66db129_Data>);


	inline void _method_prepare_eval(void);


	inline void _method_check_data(jule::Ref<_1b66db129_Data>);


	inline void _method_check_datas(void);


	inline jule::Ref<_1b66db129_Data> _method_solve_explicit(jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>);


	inline jule::Ref<_1b66db129_Data> _method_solve(jule::Ref<_1ce385d22_BinopExpr>);


	inline bool operator==(const _1b66db129_BinopSolver &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1b66db129_BinopSolver &_Src) const { return !this->operator==(_Src); }
};


struct _1b6703d45_TypeAlias {
	jule::Ref<_1ce385d22_ScopeTree> _field_scope{jule::Ref<_1ce385d22_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_generic{jule::Bool()};
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1b6703d45_TypeSymbol> _field_kind{jule::Ref<_1b6703d45_TypeSymbol>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Any> _field_refers{jule::Slice<jule::Any>()};


	_1b6703d45_TypeAlias(jule::Ref<_1ce385d22_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, _1ce35e3a0_Token __param_token, jule::Str __param_ident, jule::Ref<_1b6703d45_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc(__param_doc), _field_refers(__param_refers) {}

	

	_1b6703d45_TypeAlias(void) = default;

	inline bool operator==(const _1b6703d45_TypeAlias &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_generic == _Src._field_generic &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	inline bool operator!=(const _1b6703d45_TypeAlias &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_AssignLeft {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1ce385d22_Expr> _field_expr{jule::Ref<_1ce385d22_Expr>()};


	_1ce385d22_AssignLeft(_1ce35e3a0_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ref<_1ce385d22_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1ce385d22_AssignLeft(void) = default;

	inline bool operator==(const _1ce385d22_AssignLeft &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ce385d22_AssignLeft &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_Comment {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_text{jule::Str()};


	_1ce385d22_Comment(_1ce35e3a0_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1ce385d22_Comment(void) = default;

	inline jule::Bool _method_is_directive(void);


	inline bool operator==(const _1ce385d22_Comment &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1ce385d22_Comment &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_ParamDecl {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1ce385d22_TypeDecl> _field_kind{jule::Ref<_1ce385d22_TypeDecl>()};
	jule::Str _field_ident{jule::Str()};


	_1ce385d22_ParamDecl(_1ce35e3a0_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1ce385d22_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1ce385d22_ParamDecl(void) = default;

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1ce385d22_ParamDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ce385d22_ParamDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_FnDecl {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1ce385d22_Directive>> _field_directives{jule::Slice<jule::Ref<_1ce385d22_Directive>>()};
	jule::Ref<_1ce385d22_CommentGroup> _field_doc_comments{jule::Ref<_1ce385d22_CommentGroup>()};
	jule::Ref<_1ce385d22_ScopeTree> _field_scope{jule::Ref<_1ce385d22_ScopeTree>()};
	jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>()};
	jule::Ref<_1ce385d22_RetTypeDecl> _field_result{jule::Ref<_1ce385d22_RetTypeDecl>()};
	jule::Slice<jule::Ref<_1ce385d22_ParamDecl>> _field_params{jule::Slice<jule::Ref<_1ce385d22_ParamDecl>>()};


	_1ce385d22_FnDecl(_1ce35e3a0_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1ce385d22_Directive>> __param_directives, jule::Ref<_1ce385d22_CommentGroup> __param_doc_comments, jule::Ref<_1ce385d22_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> __param_generics, jule::Ref<_1ce385d22_RetTypeDecl> __param_result, jule::Slice<jule::Ref<_1ce385d22_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_1ce385d22_FnDecl(void) = default;

	inline jule::Bool _method_is_anon(void);


	inline bool operator==(const _1ce385d22_FnDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	inline bool operator!=(const _1ce385d22_FnDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_VarDecl {
	jule::Ref<_1ce385d22_ScopeTree> _field_scope{jule::Ref<_1ce385d22_ScopeTree>()};
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Slice<jule::Ref<_1ce385d22_Directive>> _field_directives{jule::Slice<jule::Ref<_1ce385d22_Directive>>()};
	jule::Ref<_1ce385d22_CommentGroup> _field_doc_comments{jule::Ref<_1ce385d22_CommentGroup>()};
	jule::Ref<_1ce385d22_TypeDecl> _field_kind{jule::Ref<_1ce385d22_TypeDecl>()};
	jule::Ref<_1ce385d22_Expr> _field_expr{jule::Ref<_1ce385d22_Expr>()};


	_1ce385d22_VarDecl(jule::Ref<_1ce385d22_ScopeTree> __param_scope, _1ce35e3a0_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ref<_1ce385d22_Directive>> __param_directives, jule::Ref<_1ce385d22_CommentGroup> __param_doc_comments, jule::Ref<_1ce385d22_TypeDecl> __param_kind, jule::Ref<_1ce385d22_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1ce385d22_VarDecl(void) = default;

	inline bool operator==(const _1ce385d22_VarDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ce385d22_VarDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b6703d45_TypeChecker {
	jule::Ref<_1b622b76e_Sema> _field_s{jule::Ref<_1b622b76e_Sema>()};
	jule::Trait<_1b6b746d3_Lookup> _field_lookup{jule::Trait<_1b6b746d3_Lookup>()};
	jule::Ref<_1b6703d45_Referencer> _field_referencer{jule::Ref<_1b6703d45_Referencer>()};
	_1ce35e3a0_Token _field_error_token{_1ce35e3a0_Token()};
	jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> _field_ignore_generics{jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>()};
	jule::Slice<jule::Ref<_1b6703d45_TypeAlias>> _field_use_generics{jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>()};
	jule::Bool _field_not_plain{jule::Bool()};


	_1b6703d45_TypeChecker(jule::Ref<_1b622b76e_Sema> __param_s, jule::Trait<_1b6b746d3_Lookup> __param_lookup, jule::Ref<_1b6703d45_Referencer> __param_referencer, _1ce35e3a0_Token __param_error_token, jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ref<_1b6703d45_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain) {}

	

	_1b6703d45_TypeChecker(void) = default;

	inline void _method_push_err(_1ce35e3a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1b6703d45_Prim> _method_build_prim(jule::Ref<_1ce385d22_IdentTypeDecl>&);


	inline void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	inline jule::Bool _method_are_equals_cross_cycle_data_0(jule::Any,jule::Any);
	inline jule::Bool _method_are_equals_cross_cycle_data_1(jule::Any,jule::Any);


	inline jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_1ce385d22_IdentTypeDecl>&,jule::Any);


	inline jule::Trait<_1b6703d45_Kind> _method_from_type_alias(jule::Ref<_1ce385d22_IdentTypeDecl>&,jule::Ref<_1b6703d45_TypeAlias>&);


	inline jule::Ref<_1b61d7c58_Enum> _method_from_enum(jule::Ref<_1ce385d22_IdentTypeDecl>&,jule::Ref<_1b61d7c58_Enum>&);


	inline jule::Bool _method_check_struct_ins(jule::Ref<_1ce385eed_StructIns>&,_1ce35e3a0_Token&);


	inline void _method_append_used_struct_reference(jule::Ref<_1ce385eed_Struct>&);


	inline jule::Ref<_1ce385eed_StructIns> _method_from_struct(jule::Ref<_1ce385d22_IdentTypeDecl>&,jule::Ref<_1ce385eed_Struct>&);


	inline jule::Trait<_1b6703d45_Kind> _method_get_def(jule::Ref<_1ce385d22_IdentTypeDecl>&);


	inline jule::Trait<_1b6703d45_Kind> _method_build_ident(jule::Ref<_1ce385d22_IdentTypeDecl>);


	inline jule::Ref<_1b6703d45_Ref> _method_build_ref_from_type(jule::Ref<_1b6703d45_TypeKind>&);


	inline jule::Ref<_1b6703d45_Ref> _method_build_ref(jule::Ref<_1ce385d22_RefTypeDecl>);


	inline jule::Ref<_1b6703d45_Ptr> _method_build_ptr_from_type(jule::Ref<_1b6703d45_TypeKind>&);


	inline jule::Ref<_1b6703d45_Ptr> _method_build_ptr(jule::Ref<_1ce385d22_PtrTypeDecl>);


	inline jule::Ref<_1b6703d45_Slc> _method_build_slc(jule::Ref<_1ce385d22_SlcTypeDecl>);


	inline jule::Ref<_1b6703d45_Arr> _method_build_arr(jule::Ref<_1ce385d22_ArrTypeDecl>);


	inline jule::Ref<_1b6703d45_Map> _method_build_map(jule::Ref<_1ce385d22_MapTypeDecl>);


	inline jule::Ref<_1b6703d45_Tuple> _method_build_tuple(jule::Ref<_1ce385d22_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ref<_1b6069348_FnIns>&);


	inline jule::Ref<_1b6069348_FnIns> _method_build_fn(jule::Ref<_1ce385d22_FnDecl>);


	inline jule::Trait<_1b6703d45_Kind> _method_build_by_namespace(jule::Ref<_1ce385d22_NamespaceTypeDecl>);


	inline jule::Ref<_1b6703d45_TypeKind> _method_build(jule::Any&);


	inline jule::Ref<_1b6703d45_TypeKind> _method_check_decl(jule::Ref<_1ce385d22_TypeDecl>&);


	inline void _method_check(jule::Ref<_1b6703d45_TypeSymbol>&);


	inline bool operator==(const _1b6703d45_TypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	inline bool operator!=(const _1b6703d45_TypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1cdd79d22_IR {
	jule::Slice<jule::Str> _field_passes{jule::Slice<jule::Str>()};
	jule::Ref<_1b623bb7a_Package> _field_main{jule::Ref<_1b623bb7a_Package>()};
	jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>> _field_used{jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>>()};
	_1cde30c0d_OrderedDefines _field_ordered{_1cde30c0d_OrderedDefines()};


	_1cdd79d22_IR(jule::Slice<jule::Str> __param_passes, jule::Ref<_1b623bb7a_Package> __param_main, jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>> __param_used, _1cde30c0d_OrderedDefines __param_ordered): _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_1cdd79d22_IR(void) = default;

	static inline std::tuple<jule::Ref<_1cdd79d22_IR>,jule::Slice<_1e7690a81_Log>> _static_method_build(jule::Str,jule::Int);


	inline void _method_append_structs(jule::Ref<_1b623bb7a_Package>&,jule::Slice<jule::Ref<_1ce385eed_Struct>>&);


	inline jule::Slice<jule::Ref<_1ce385eed_Struct>> _method_get_all_structures(void);


	inline void _method_append_vars(jule::Ref<_1b623bb7a_Package>&,jule::Slice<jule::Ref<_1b637edab_Var>>&);


	inline jule::Slice<jule::Ref<_1b637edab_Var>> _method_get_all_variables(void);


	inline void _method_order(void);


	inline bool operator==(const _1cdd79d22_IR &_Src) const {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used &&
			this->_field_ordered == _Src._field_ordered;
	}

	inline bool operator!=(const _1cdd79d22_IR &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_BreakSt {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	_1ce35e3a0_Token _field_label{_1ce35e3a0_Token()};


	_1ce385d22_BreakSt(_1ce35e3a0_Token __param_token, _1ce35e3a0_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1ce385d22_BreakSt(void) = default;

	inline bool operator==(const _1ce385d22_BreakSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1ce385d22_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_ContSt {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	_1ce35e3a0_Token _field_label{_1ce35e3a0_Token()};


	_1ce385d22_ContSt(_1ce35e3a0_Token __param_token, _1ce35e3a0_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1ce385d22_ContSt(void) = default;

	inline bool operator==(const _1ce385d22_ContSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1ce385d22_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b61e873b_ScopeLabel {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Ref<_1b61e873b_Label> _field_label{jule::Ref<_1b61e873b_Label>()};
	jule::Int _field_pos{jule::Int()};
	jule::Ref<_1b61e873b_ScopeChecker> _field_scope{jule::Ref<_1b61e873b_ScopeChecker>()};
	jule::Bool _field_used{jule::Bool()};


	_1b61e873b_ScopeLabel(_1ce35e3a0_Token __param_token, jule::Ref<_1b61e873b_Label> __param_label, jule::Int __param_pos, jule::Ref<_1b61e873b_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_1b61e873b_ScopeLabel(void) = default;

	inline bool operator==(const _1b61e873b_ScopeLabel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _1b61e873b_ScopeLabel &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_If {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Ref<_1ce385d22_Expr> _field_expr{jule::Ref<_1ce385d22_Expr>()};
	jule::Ref<_1ce385d22_ScopeTree> _field_scope{jule::Ref<_1ce385d22_ScopeTree>()};


	_1ce385d22_If(_1ce35e3a0_Token __param_token, jule::Ref<_1ce385d22_Expr> __param_expr, jule::Ref<_1ce385d22_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1ce385d22_If(void) = default;

	inline bool operator==(const _1ce385d22_If &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1ce385d22_If &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_Else {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Ref<_1ce385d22_ScopeTree> _field_scope{jule::Ref<_1ce385d22_ScopeTree>()};


	_1ce385d22_Else(_1ce35e3a0_Token __param_token, jule::Ref<_1ce385d22_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_1ce385d22_Else(void) = default;

	inline bool operator==(const _1ce385d22_Else &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1ce385d22_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_Directive {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_tag{jule::Str()};
	jule::Slice<jule::Str> _field_args{jule::Slice<jule::Str>()};


	_1ce385d22_Directive(_1ce35e3a0_Token __param_token, jule::Str __param_tag, jule::Slice<jule::Str> __param_args): _field_token(__param_token), _field_tag(__param_tag), _field_args(__param_args) {}

	

	_1ce385d22_Directive(void) = default;

	inline bool operator==(const _1ce385d22_Directive &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1ce385d22_Directive &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_TypeAliasDecl {
	jule::Ref<_1ce385d22_ScopeTree> _field_scope{jule::Ref<_1ce385d22_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1ce385d22_TypeDecl> _field_kind{jule::Ref<_1ce385d22_TypeDecl>()};
	jule::Ref<_1ce385d22_CommentGroup> _field_doc_comments{jule::Ref<_1ce385d22_CommentGroup>()};


	_1ce385d22_TypeAliasDecl(jule::Ref<_1ce385d22_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _1ce35e3a0_Token __param_token, jule::Str __param_ident, jule::Ref<_1ce385d22_TypeDecl> __param_kind, jule::Ref<_1ce385d22_CommentGroup> __param_doc_comments): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc_comments(__param_doc_comments) {}

	

	_1ce385d22_TypeAliasDecl(void) = default;

	inline bool operator==(const _1ce385d22_TypeAliasDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1ce385d22_TypeAliasDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_Case {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Ref<_1ce385d22_ScopeTree> _field_scope{jule::Ref<_1ce385d22_ScopeTree>()};
	jule::Slice<jule::Ref<_1ce385d22_Expr>> _field_exprs{jule::Slice<jule::Ref<_1ce385d22_Expr>>()};


	_1ce385d22_Case(_1ce35e3a0_Token __param_token, jule::Ref<_1ce385d22_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1ce385d22_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_1ce385d22_Case(void) = default;

	inline bool operator==(const _1ce385d22_Case &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1ce385d22_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_UseDecl {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_full{jule::Bool()};
	jule::Slice<_1ce35e3a0_Token> _field_selected{jule::Slice<_1ce35e3a0_Token>()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};


	_1ce385d22_UseDecl(_1ce35e3a0_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_1ce35e3a0_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_1ce385d22_UseDecl(void) = default;

	inline bool operator==(const _1ce385d22_UseDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_alias == _Src._field_alias &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	inline bool operator!=(const _1ce385d22_UseDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_EnumItemDecl {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1ce385d22_Expr> _field_expr{jule::Ref<_1ce385d22_Expr>()};


	_1ce385d22_EnumItemDecl(_1ce35e3a0_Token __param_token, jule::Str __param_ident, jule::Ref<_1ce385d22_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1ce385d22_EnumItemDecl(void) = default;

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1ce385d22_EnumItemDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ce385d22_EnumItemDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_EnumDecl {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1ce385d22_TypeDecl> _field_kind{jule::Ref<_1ce385d22_TypeDecl>()};
	jule::Slice<jule::Ref<_1ce385d22_EnumItemDecl>> _field_items{jule::Slice<jule::Ref<_1ce385d22_EnumItemDecl>>()};
	jule::Ref<_1ce385d22_CommentGroup> _field_doc_comments{jule::Ref<_1ce385d22_CommentGroup>()};


	_1ce385d22_EnumDecl(_1ce35e3a0_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1ce385d22_TypeDecl> __param_kind, jule::Slice<jule::Ref<_1ce385d22_EnumItemDecl>> __param_items, jule::Ref<_1ce385d22_CommentGroup> __param_doc_comments): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc_comments(__param_doc_comments) {}

	

	_1ce385d22_EnumDecl(void) = default;

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(const _1ce385d22_EnumDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1ce385d22_EnumDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_FieldDecl {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1ce385d22_TypeDecl> _field_kind{jule::Ref<_1ce385d22_TypeDecl>()};


	_1ce385d22_FieldDecl(_1ce35e3a0_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1ce385d22_TypeDecl> __param_kind): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {}

	

	_1ce385d22_FieldDecl(void) = default;

	inline bool operator==(const _1ce385d22_FieldDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ce385d22_FieldDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_StructDecl {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1ce385d22_FieldDecl>> _field_fields{jule::Slice<jule::Ref<_1ce385d22_FieldDecl>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1ce385d22_Directive>> _field_directives{jule::Slice<jule::Ref<_1ce385d22_Directive>>()};
	jule::Ref<_1ce385d22_CommentGroup> _field_doc_comments{jule::Ref<_1ce385d22_CommentGroup>()};
	jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>()};


	_1ce385d22_StructDecl(_1ce35e3a0_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_1ce385d22_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1ce385d22_Directive>> __param_directives, jule::Ref<_1ce385d22_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_generics(__param_generics) {}

	

	_1ce385d22_StructDecl(void) = default;

	inline bool operator==(const _1ce385d22_StructDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1ce385d22_StructDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_TraitDecl {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Ref<_1ce385d22_CommentGroup> _field_doc_comments{jule::Ref<_1ce385d22_CommentGroup>()};
	jule::Slice<jule::Ref<_1ce385d22_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1ce385d22_FnDecl>>()};


	_1ce385d22_TraitDecl(_1ce35e3a0_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ref<_1ce385d22_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1ce385d22_FnDecl>> __param_methods): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_doc_comments(__param_doc_comments), _field_methods(__param_methods) {}

	

	_1ce385d22_TraitDecl(void) = default;

	inline bool operator==(const _1ce385d22_TraitDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1ce385d22_TraitDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_Impl {
	_1ce35e3a0_Token _field_base{_1ce35e3a0_Token()};
	_1ce35e3a0_Token _field_dest{_1ce35e3a0_Token()};
	jule::Slice<jule::Ref<_1ce385d22_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1ce385d22_FnDecl>>()};
	jule::Slice<jule::Ref<_1ce385d22_VarDecl>> _field_statics{jule::Slice<jule::Ref<_1ce385d22_VarDecl>>()};


	_1ce385d22_Impl(_1ce35e3a0_Token __param_base, _1ce35e3a0_Token __param_dest, jule::Slice<jule::Ref<_1ce385d22_FnDecl>> __param_methods, jule::Slice<jule::Ref<_1ce385d22_VarDecl>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1ce385d22_Impl(void) = default;

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1ce385d22_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	inline bool operator!=(const _1ce385d22_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_Expr {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Any _field_kind{jule::Any()};


	_1ce385d22_Expr(_1ce35e3a0_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1ce385d22_Expr(void) = default;

	inline jule::Bool _method_is_fn_call(void);


	inline bool operator==(const _1ce385d22_Expr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ce385d22_Expr &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_TypeDecl {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Any _field_kind{jule::Any()};


	_1ce385d22_TypeDecl(_1ce35e3a0_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1ce385d22_TypeDecl(void) = default;

	inline bool operator==(const _1ce385d22_TypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ce385d22_TypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce6015a9_AssignInfo {
	jule::Slice<_1ce35e3a0_Token> _field_l{jule::Slice<_1ce35e3a0_Token>()};
	jule::Slice<_1ce35e3a0_Token> _field_r{jule::Slice<_1ce35e3a0_Token>()};
	_1ce35e3a0_Token _field_setter{_1ce35e3a0_Token()};
	jule::Bool _field_ok{jule::Bool()};


	_1ce6015a9_AssignInfo(jule::Slice<_1ce35e3a0_Token> __param_l, jule::Slice<_1ce35e3a0_Token> __param_r, _1ce35e3a0_Token __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_1ce6015a9_AssignInfo(void) = default;

	inline bool operator==(const _1ce6015a9_AssignInfo &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	inline bool operator!=(const _1ce6015a9_AssignInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_IdentTypeDecl {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1ce385d22_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>()};


	_1ce385d22_IdentTypeDecl(_1ce35e3a0_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1ce385d22_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_1ce385d22_IdentTypeDecl(void) = default;

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(const _1ce385d22_IdentTypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1ce385d22_IdentTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385eed_Field {
	jule::Ref<_1ce385eed_Field> self{};

	jule::Ref<_1ce385eed_Struct> _field_owner{jule::Ref<_1ce385eed_Struct>()};
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1b6703d45_TypeSymbol> _field_kind{jule::Ref<_1b6703d45_TypeSymbol>()};


	_1ce385eed_Field(jule::Ref<_1ce385eed_Struct> __param_owner, _1ce35e3a0_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1b6703d45_TypeSymbol> __param_kind): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {
		this->self = jule::Ref<_1ce385eed_Field>::make(this, nullptr);

	}

	~_1ce385eed_Field(void) { this->self.ref = nullptr; }

	_1ce385eed_Field(void) { this->self = jule::Ref<_1ce385eed_Field>::make(this, nullptr); }

	inline jule::Ref<_1ce385eed_FieldIns> _method_instance(void);


	inline bool operator==(const _1ce385eed_Field &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ce385eed_Field &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385eed_Struct {
	jule::Ref<_1ce385eed_Struct> self{};

	jule::Ref<_1b622b76e_Sema> _field_sema{jule::Ref<_1b622b76e_Sema>()};
	jule::Slice<jule::Ref<_1ce385eed_Struct>> _field_depends{jule::Slice<jule::Ref<_1ce385eed_Struct>>()};
	jule::Slice<jule::Ref<_1ce385eed_Struct>> _field_uses{jule::Slice<jule::Ref<_1ce385eed_Struct>>()};
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1ce385eed_Field>> _field_fields{jule::Slice<jule::Ref<_1ce385eed_Field>>()};
	jule::Slice<jule::Ref<_1b6069348_Fn>> _field_methods{jule::Slice<jule::Ref<_1b6069348_Fn>>()};
	jule::Slice<jule::Ref<_1b637edab_Var>> _field_statics{jule::Slice<jule::Ref<_1b637edab_Var>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1ce385d22_Directive>> _field_directives{jule::Slice<jule::Ref<_1ce385d22_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>()};
	jule::Slice<jule::Ref<_1b61d7d79_Trait>> _field_implements{jule::Slice<jule::Ref<_1b61d7d79_Trait>>()};
	jule::Slice<jule::Ref<_1ce385eed_StructIns>> _field_instances{jule::Slice<jule::Ref<_1ce385eed_StructIns>>()};


	_1ce385eed_Struct(jule::Ref<_1b622b76e_Sema> __param_sema, jule::Slice<jule::Ref<_1ce385eed_Struct>> __param_depends, jule::Slice<jule::Ref<_1ce385eed_Struct>> __param_uses, _1ce35e3a0_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_1ce385eed_Field>> __param_fields, jule::Slice<jule::Ref<_1b6069348_Fn>> __param_methods, jule::Slice<jule::Ref<_1b637edab_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1ce385d22_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> __param_generics, jule::Slice<jule::Ref<_1b61d7d79_Trait>> __param_implements, jule::Slice<jule::Ref<_1ce385eed_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc(__param_doc), _field_generics(__param_generics), _field_implements(__param_implements), _field_instances(__param_instances) {
		this->self = jule::Ref<_1ce385eed_Struct>::make(this, nullptr);

	}

	~_1ce385eed_Struct(void) { this->self.ref = nullptr; }

	_1ce385eed_Struct(void) { this->self = jule::Ref<_1ce385eed_Struct>::make(this, nullptr); }

	inline jule::Ref<_1ce385eed_StructIns> _method_instance(void);


	inline jule::Ref<_1ce385eed_StructIns> _method_append_instance(jule::Ref<_1ce385eed_StructIns>&);


	inline jule::Ref<_1b6069348_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_1b637edab_Var> _method_find_static(jule::Str);


	inline jule::Ref<_1ce385eed_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ref<_1b61d7d79_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ref<_1ce385eed_Struct>);


	inline jule::Bool _method_has_ref_accessible(void);


	inline bool operator==(const _1ce385eed_Struct &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _1ce385eed_Struct &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_FnCallExpr {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Ref<_1ce385d22_Expr> _field_expr{jule::Ref<_1ce385d22_Expr>()};
	jule::Slice<jule::Ref<_1ce385d22_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>()};
	jule::Slice<jule::Ref<_1ce385d22_Expr>> _field_args{jule::Slice<jule::Ref<_1ce385d22_Expr>>()};
	jule::Bool _field_concurrent{jule::Bool()};


	_1ce385d22_FnCallExpr(_1ce35e3a0_Token __param_token, jule::Ref<_1ce385d22_Expr> __param_expr, jule::Slice<jule::Ref<_1ce385d22_TypeDecl>> __param_generics, jule::Slice<jule::Ref<_1ce385d22_Expr>> __param_args, jule::Bool __param_concurrent): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_concurrent(__param_concurrent) {}

	

	_1ce385d22_FnCallExpr(void) = default;

	inline bool operator==(const _1ce385d22_FnCallExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_concurrent == _Src._field_concurrent;
	}

	inline bool operator!=(const _1ce385d22_FnCallExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b6069348_Param {
	jule::Ref<_1b6069348_Param> self{};

	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1b6703d45_TypeSymbol> _field_kind{jule::Ref<_1b6703d45_TypeSymbol>()};
	jule::Str _field_ident{jule::Str()};


	_1b6069348_Param(_1ce35e3a0_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1b6703d45_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {
		this->self = jule::Ref<_1b6069348_Param>::make(this, nullptr);

	}

	~_1b6069348_Param(void) { this->self.ref = nullptr; }

	_1b6069348_Param(void) { this->self = jule::Ref<_1b6069348_Param>::make(this, nullptr); }

	inline jule::Ref<_1b6069348_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1b6069348_Param &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b6069348_Param &_Src) const { return !this->operator==(_Src); }
};


struct _1b6069348_Fn {
	jule::Ref<_1b6069348_Fn> self{};

	jule::Ref<_1b622b76e_Sema> _field_sema{jule::Ref<_1b622b76e_Sema>()};
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1ce385d22_Directive>> _field_directives{jule::Slice<jule::Ref<_1ce385d22_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1ce385d22_ScopeTree> _field_scope{jule::Ref<_1ce385d22_ScopeTree>()};
	jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>()};
	jule::Ref<_1b6069348_RetType> _field_result{jule::Ref<_1b6069348_RetType>()};
	jule::Slice<jule::Ref<_1b6069348_Param>> _field_params{jule::Slice<jule::Ref<_1b6069348_Param>>()};
	jule::Ref<_1ce385eed_Struct> _field_owner{jule::Ref<_1ce385eed_Struct>()};
	jule::Slice<jule::Ref<_1b6069348_FnIns>> _field_instances{jule::Slice<jule::Ref<_1b6069348_FnIns>>()};


	_1b6069348_Fn(jule::Ref<_1b622b76e_Sema> __param_sema, _1ce35e3a0_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1ce385d22_Directive>> __param_directives, jule::Str __param_doc, jule::Ref<_1ce385d22_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> __param_generics, jule::Ref<_1b6069348_RetType> __param_result, jule::Slice<jule::Ref<_1b6069348_Param>> __param_params, jule::Ref<_1ce385eed_Struct> __param_owner, jule::Slice<jule::Ref<_1b6069348_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc(__param_doc), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {
		this->self = jule::Ref<_1b6069348_Fn>::make(this, nullptr);

	}

	~_1b6069348_Fn(void) { this->self.ref = nullptr; }

	_1b6069348_Fn(void) { this->self = jule::Ref<_1b6069348_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ref<_1b6069348_FnIns> _method_instance_force(void);


	inline jule::Ref<_1b6069348_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ref<_1b6069348_FnIns>&);


	inline bool operator==(const _1b6069348_Fn &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _1b6069348_Fn &_Src) const { return !this->operator==(_Src); }
};


struct _1ce385d22_Node {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Any _field_data{jule::Any()};


	_1ce385d22_Node(_1ce35e3a0_Token __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_1ce385d22_Node(void) = default;

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(const _1ce385d22_Node &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1ce385d22_Node &_Src) const { return !this->operator==(_Src); }
};


struct _1ce50a46e_Pass {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_text{jule::Str()};


	_1ce50a46e_Pass(_1ce35e3a0_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1ce50a46e_Pass(void) = default;

	inline bool operator==(const _1ce50a46e_Pass &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1ce50a46e_Pass &_Src) const { return !this->operator==(_Src); }
};


struct _1b61d7d79_Trait: public _1b6703d45_Kind {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_1b6069348_Fn>> _field_methods{jule::Slice<jule::Ref<_1b6069348_Fn>>()};
	jule::Slice<jule::Ref<_1ce385eed_Struct>> _field_implemented{jule::Slice<jule::Ref<_1ce385eed_Struct>>()};


	_1b61d7d79_Trait(_1ce35e3a0_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_doc, jule::Slice<jule::Ref<_1b6069348_Fn>> __param_methods, jule::Slice<jule::Ref<_1ce385eed_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_doc(__param_doc), _field_methods(__param_methods), _field_implemented(__param_implemented) {}

	

	_1b61d7d79_Trait(void) = default;

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b6703d45_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ref<_1b6069348_Fn> _method_find_method(jule::Str);


	inline bool operator==(const _1b61d7d79_Trait &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	inline bool operator!=(const _1b61d7d79_Trait &_Src) const { return !this->operator==(_Src); }
};


struct _1b61d7c58_EnumItem {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1b66db129_Value> _field_value{jule::Ref<_1b66db129_Value>()};


	_1b61d7c58_EnumItem(_1ce35e3a0_Token __param_token, jule::Str __param_ident, jule::Ref<_1b66db129_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_1b61d7c58_EnumItem(void) = default;

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1b61d7c58_EnumItem &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1b61d7c58_EnumItem &_Src) const { return !this->operator==(_Src); }
};


struct _1b61d7c58_Enum: public _1b6703d45_Kind {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1b6703d45_TypeSymbol> _field_kind{jule::Ref<_1b6703d45_TypeSymbol>()};
	jule::Slice<jule::Ref<_1b61d7c58_EnumItem>> _field_items{jule::Slice<jule::Ref<_1b61d7c58_EnumItem>>()};
	jule::Str _field_doc{jule::Str()};


	_1b61d7c58_Enum(_1ce35e3a0_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1b6703d45_TypeSymbol> __param_kind, jule::Slice<jule::Ref<_1b61d7c58_EnumItem>> __param_items, jule::Str __param_doc): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc(__param_doc) {}

	

	_1b61d7c58_Enum(void) = default;

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b6703d45_TypeKind>);


	inline jule::Ref<_1b61d7c58_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(const _1b61d7c58_Enum &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	inline bool operator!=(const _1b61d7c58_Enum &_Src) const { return !this->operator==(_Src); }
};


struct _1b623bb7a_ImportInfo: public _1b6b746d3_Lookup {
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_ident{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_duplicate{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};
	jule::Bool _field_import_all{jule::Bool()};
	jule::Slice<_1ce35e3a0_Token> _field_selected{jule::Slice<_1ce35e3a0_Token>()};
	jule::Ref<_1b623bb7a_Package> _field_package{jule::Ref<_1b623bb7a_Package>()};


	_1b623bb7a_ImportInfo(_1ce35e3a0_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_1ce35e3a0_Token> __param_selected, jule::Ref<_1b623bb7a_Package> __param_package): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package) {}

	

	_1b623bb7a_ImportInfo(void) = default;

	inline jule::Ref<_1b623bb7a_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1b623bb7a_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)>);


	inline jule::Ref<_1b637edab_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1b6703d45_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1ce385eed_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1b6069348_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1b61d7d79_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1b61d7c58_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline bool operator==(const _1b623bb7a_ImportInfo &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_alias == _Src._field_alias &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	inline bool operator!=(const _1b623bb7a_ImportInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ddc92_Impl {
	_1ce35e3a0_Token _field_base{_1ce35e3a0_Token()};
	_1ce35e3a0_Token _field_dest{_1ce35e3a0_Token()};
	jule::Slice<jule::Ref<_1b6069348_Fn>> _field_methods{jule::Slice<jule::Ref<_1b6069348_Fn>>()};
	jule::Slice<jule::Ref<_1b637edab_Var>> _field_statics{jule::Slice<jule::Ref<_1b637edab_Var>>()};


	_1b61ddc92_Impl(_1ce35e3a0_Token __param_base, _1ce35e3a0_Token __param_dest, jule::Slice<jule::Ref<_1b6069348_Fn>> __param_methods, jule::Slice<jule::Ref<_1b637edab_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1b61ddc92_Impl(void) = default;

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1b61ddc92_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	inline bool operator!=(const _1b61ddc92_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1b637edab_Var {
	jule::Ref<_1b61e873b_Scope> _field_scope{jule::Ref<_1b61e873b_Scope>()};
	_1ce35e3a0_Token _field_token{_1ce35e3a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1b6703d45_TypeSymbol> _field_kind{jule::Ref<_1b6703d45_TypeSymbol>()};
	jule::Ref<_1b66db129_Value> _field_value{jule::Ref<_1b66db129_Value>()};
	jule::Ref<_1ce50a46e_ReferenceStack> _field_references{jule::Ref<_1ce50a46e_ReferenceStack>()};
	jule::Slice<jule::Ref<_1ce385d22_Directive>> _field_directives{jule::Slice<jule::Ref<_1ce385d22_Directive>>()};
	jule::Slice<jule::Ref<_1b637edab_Var>> _field_depends{jule::Slice<jule::Ref<_1b637edab_Var>>()};


	_1b637edab_Var(jule::Ref<_1b61e873b_Scope> __param_scope, _1ce35e3a0_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ref<_1b6703d45_TypeSymbol> __param_kind, jule::Ref<_1b66db129_Value> __param_value, jule::Ref<_1ce50a46e_ReferenceStack> __param_references, jule::Slice<jule::Ref<_1ce385d22_Directive>> __param_directives, jule::Slice<jule::Ref<_1b637edab_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_doc(__param_doc), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_depends(__param_depends) {}

	

	_1b637edab_Var(void) = default;

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_type_inferred(void);


	inline bool operator==(const _1b637edab_Var &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_directives == _Src._field_directives &&
			this->_field_depends == _Src._field_depends;
	}

	inline bool operator!=(const _1b637edab_Var &_Src) const { return !this->operator==(_Src); }
};


struct _1b65a085c_TypeCompatibilityChecker {
	jule::Ref<_1b622b76e_Sema> _field_s{jule::Ref<_1b622b76e_Sema>()};
	jule::Ref<_1b6703d45_TypeKind> _field_dest{jule::Ref<_1b6703d45_TypeKind>()};
	jule::Ref<_1b6703d45_TypeKind> _field_src{jule::Ref<_1b6703d45_TypeKind>()};
	_1ce35e3a0_Token _field_error_token{_1ce35e3a0_Token()};
	jule::Bool _field_ignore_any{jule::Bool()};
	jule::Bool _field_deref{jule::Bool()};
	jule::Bool _field_sub_check{jule::Bool()};


	_1b65a085c_TypeCompatibilityChecker(jule::Ref<_1b622b76e_Sema> __param_s, jule::Ref<_1b6703d45_TypeKind> __param_dest, jule::Ref<_1b6703d45_TypeKind> __param_src, _1ce35e3a0_Token __param_error_token, jule::Bool __param_ignore_any, jule::Bool __param_deref, jule::Bool __param_sub_check): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token), _field_ignore_any(__param_ignore_any), _field_deref(__param_deref), _field_sub_check(__param_sub_check) {}

	

	_1b65a085c_TypeCompatibilityChecker(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ref(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_slc(void);


	inline jule::Bool _method_check_arr(void);


	inline jule::Bool _method_check_map(void);


	inline jule::Bool _method_check_struct(void);


	inline jule::Bool _method_check_fn(void);


	inline jule::Bool _method_check_enum(void);


	inline jule::Bool _method_check_prim(void);


	inline jule::Bool _method_check_cpp_linked(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1b65a085c_TypeCompatibilityChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_any == _Src._field_ignore_any &&
			this->_field_deref == _Src._field_deref &&
			this->_field_sub_check == _Src._field_sub_check;
	}

	inline bool operator!=(const _1b65a085c_TypeCompatibilityChecker &_Src) const { return !this->operator==(_Src); }
};


inline jule::Bool _1e788ad47_is_surrogate(jule::I32);
inline jule::I32 _1e788ad47_decode_rune(jule::I32,jule::I32);
inline std::tuple<jule::I32,jule::I32> _1e788ad47_encode_rune(jule::I32);
inline jule::Slice<jule::U16> _1e788ad47_encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _1e788ad47_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _1e788ad47_append_rune(jule::Slice<jule::U16>,jule::I32);
inline void* _1e78444c6_malloc(jule::Uint);
inline void* _1e78444c6_calloc(jule::Uint,jule::Uint);
inline void* _1e78444c6_realloc(void*,jule::Uint);
inline void _1e78444c6_free(void*);
inline jule::Str _1e784454d_type_id(jule::Any);
inline jule::Slice<jule::U16> _1e7872438_utf16_from_str(jule::Str);
inline jule::Str _1e7872438_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _1e7872438_u16_ptr_to_str(jule::U16*);
inline jule::Str _1e7872438_byte_ptr_to_str(jule::U8*);
inline jule::Int _1e787bc7d_puts(jule::Str);
inline jule::Int _1e77d0b7c_get_last_errno(void);
inline jule::Int _1e77e85e0_stat(jule::U8*,struct stat*);
inline jule::Int _1e77e85e0_open(jule::U8*,jule::Int,jule::Int);
inline jule::U8* _1e77e85e0_getcwd(jule::U8*,jule::Uint);
inline DIR* _1e77e85e0_opendir(jule::U8*);
inline struct dirent* _1e77e85e0_readdir(DIR*);
inline jule::Int _1e77e85e0_closedir(DIR*);
inline jule::Int _1e77e85e0_chdir(jule::U8*);
inline jule::Int _1e77e85e0_remove(jule::U8*);
inline jule::Int _1e77e85e0_mkdir(jule::U8*,jule::Int);
inline jule::Int _1e77e85e0_rmdir(jule::U8*);
inline jule::Int _1e77e85e0_unlink(jule::U8*);
inline jule::I64 _1e780dda8_seek(jule::Int,jule::I64,jule::Int);
inline jule::Int _1e780dda8_read(jule::Int,void*,jule::Uint);
inline jule::Int _1e780dda8_close(jule::Int);
inline jule::Int _1e780dda8_write(jule::Int,void*,jule::Uint);
inline void _1e780dda8_exit(jule::Int);
inline jule::Int _1e77d0d03_get_last_os_error(void);
inline jule::Slice<jule::Str> _1e77d0a39_args(void);
inline jule::Slice<jule::Str> _1e77d0a39_env(void);
inline std::tuple<jule::Str,jule::Int> _1e77d0a39_working_dir(void);
inline jule::Int _1e77d0a39_set_working_dir(jule::Str);
inline std::tuple<jule::Str,jule::Int> _1e77e263e___getwd(void);
inline jule::Int _1e77e263e___chdir(jule::Str);
inline jule::Str _1e777b83c_clean(jule::Str);
inline jule::Str _1e777b83c_to_slash(jule::Str);
inline jule::Str _1e777b83c_from_slash(jule::Str);
inline jule::Str _1e777b83c_join(jule::Slice<jule::Str>);
inline jule::Str _1e777b83c_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1e777b83c_abs(jule::Str);
inline jule::Str _1e777b83c_base(jule::Str);
inline jule::Str _1e777b83c_dir(jule::Str);
inline jule::Str _1e777b83c_volume_name(jule::Str);
inline jule::Bool _1e7772c62_is_path_sep(jule::U8);
inline jule::Bool _1e7772c62_is_abs(jule::Str);
inline jule::Int _1e7772c62_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1e7772c62___abs(jule::Str);
inline jule::Str _1e7772c62_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _1e7772c62___join(jule::Slice<jule::Str>);
inline void _1e77a41e4_exit(jule::Int);
inline jule::Str _1e77a41e4_executable(void);
inline jule::Bool _1e7691048_is_std_header_path(jule::Str);
inline jule::Bool _1e7691048_is_valid_header_ext(jule::Str);
inline jule::Bool _1e7691048_is_valid_cpp_ext(jule::Str);
inline jule::Str _1e7690a81_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1e7690a81_arg_to_str(jule::Any);
inline jule::Int _1e7690a81_find_next_fmt(jule::Str);
inline jule::Str _1e7690a81_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1e768bede_is_top_directive(jule::Str);
inline jule::Bool _1e7731968_is_windows(jule::Str);
inline jule::Bool _1e7731968_is_darwin(jule::Str);
inline jule::Bool _1e7731968_is_linux(jule::Str);
inline jule::Bool _1e7731968_is_i386(jule::Str);
inline jule::Bool _1e7731968_is_amd64(jule::Str);
inline jule::Bool _1e7731968_is_arm64(jule::Str);
inline jule::Bool _1e7731968_is_unix(jule::Str);
inline jule::Bool _1e7731968_is_32bit(jule::Str);
inline jule::Bool _1e7731968_is_64bit(jule::Str);
inline void _1e77372ed_exit_err(jule::Str);
inline void _1e77372ed_init(void);
inline jule::Bool _1e774a8d8_is_jule(jule::Str);
inline jule::Int _1ce399a6c_leading_zeros(jule::Uint);
inline jule::Int _1ce399a6c_leading_zeros8(jule::U8);
inline jule::Int _1ce399a6c_leading_zeros16(jule::U16);
inline jule::Int _1ce399a6c_leading_zeros32(jule::U32);
inline jule::Int _1ce399a6c_leading_zeros64(jule::U64);
inline jule::Int _1ce399a6c_trailing_zeros(jule::Uint);
inline jule::Int _1ce399a6c_trailing_zeros8(jule::U8);
inline jule::Int _1ce399a6c_trailing_zeros16(jule::U16);
inline jule::Int _1ce399a6c_trailing_zeros32(jule::U32);
inline jule::Int _1ce399a6c_trailing_zeros64(jule::U64);
inline jule::Int _1ce399a6c_ones_count(jule::Uint);
inline jule::Int _1ce399a6c_ones_count8(jule::U8);
inline jule::Int _1ce399a6c_ones_count16(jule::U16);
inline jule::Int _1ce399a6c_ones_count32(jule::U32);
inline jule::Int _1ce399a6c_ones_count64(jule::U64);
inline jule::Uint _1ce399a6c_rotate_left(jule::Uint,jule::Int);
inline jule::U8 _1ce399a6c_rotate_left8(jule::U8,jule::Int);
inline jule::U16 _1ce399a6c_rotate_left16(jule::U16,jule::Int);
inline jule::U32 _1ce399a6c_rotate_left32(jule::U32,jule::Int);
inline jule::U64 _1ce399a6c_rotate_left64(jule::U64,jule::Int);
inline jule::Uint _1ce399a6c_reverse(jule::Uint);
inline jule::U8 _1ce399a6c_reverse8(jule::U8);
inline jule::U16 _1ce399a6c_reverse16(jule::U16);
inline jule::U32 _1ce399a6c_reverse32(jule::U32);
inline jule::U64 _1ce399a6c_reverse64(jule::U64);
inline jule::Uint _1ce399a6c_reverse_bytes(jule::Uint);
inline jule::U16 _1ce399a6c_reverse_bytes16(jule::U16);
inline jule::U32 _1ce399a6c_reverse_bytes32(jule::U32);
inline jule::U64 _1ce399a6c_reverse_bytes64(jule::U64);
inline jule::Int _1ce399a6c_len(jule::Uint);
inline jule::Int _1ce399a6c_len8(jule::U8);
inline jule::Int _1ce399a6c_len16(jule::U16);
inline jule::Int _1ce399a6c_len32(jule::U32);
inline jule::Int _1ce399a6c_len64(jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1ce399a6c_add(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1ce399a6c_add32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1ce399a6c_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1ce399a6c_sub(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1ce399a6c_sub32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1ce399a6c_sub64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1ce399a6c_mul(jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1ce399a6c_mul32(jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1ce399a6c_mul64(jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1ce399a6c_div(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1ce399a6c_div32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1ce399a6c_div64(jule::U64,jule::U64,jule::U64);
inline jule::Uint _1ce399a6c_rem(jule::Uint,jule::Uint,jule::Uint);
inline jule::U32 _1ce399a6c_rem32(jule::U32,jule::U32,jule::U32);
inline jule::U64 _1ce399a6c_rem64(jule::U64,jule::U64,jule::U64);
inline jule::F64 _1cdceb645_atanh(jule::F64);
inline jule::U32 _1cdceb9db_f32_bits(jule::F32);
inline jule::F32 _1cdceb9db_f32_from_bits(jule::U32);
inline jule::U64 _1cdceb9db_f64_bits(jule::F64);
inline jule::F64 _1cdceb9db_f64_from_bits(jule::U64);
inline jule::F64 _1cdd1c545_cos(jule::F64);
inline jule::F64 _1cdd1c545_sin(jule::F64);
inline jule::F64 _1cdd0066b_tan(jule::F64);
inline jule::F64 _1cdd58949_mod(jule::F64,jule::F64);
inline std::tuple<jule::F64,jule::Int> _1cdd6801e_frexp(jule::F64);
inline jule::F32 _1cdd74976_nextafter32(jule::F32,jule::F32);
inline jule::F64 _1cdd74976_nextafter(jule::F64,jule::F64);
inline jule::F64 _1cdd70301_copysign(jule::F64,jule::F64);
inline std::tuple<jule::U64,jule::F64> _1cdd733c0_trig_reduce(jule::F64);
inline jule::F64 _1cdd944ce_atan2(jule::F64,jule::F64);
inline jule::F64 _1cdd93ea1_floor(jule::F64);
inline jule::F64 _1cdd93ea1_ceil(jule::F64);
inline jule::F64 _1cdd93ea1_trunc(jule::F64);
inline jule::F64 _1cdd93ea1_round(jule::F64);
inline jule::F64 _1cdd93ea1_round_even(jule::F64);
inline jule::F64 _1cddd8b83_nan(void);
inline jule::Bool _1cddd8b83_is_nan(jule::F64);
inline jule::F64 _1cddd8b83_inf(jule::Int);
inline jule::Bool _1cddd8b83_is_inf(jule::F64,jule::Int);
inline std::tuple<jule::F64,jule::Int> _1cddd8b83_normalize(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1cddc17d6_sincos(jule::F64);
inline jule::F64 _1cdde6014_dim(jule::F64,jule::F64);
inline jule::F64 _1cdde6014_max(jule::F64,jule::F64);
inline jule::F64 _1cdde6014_min(jule::F64,jule::F64);
inline jule::F64 _1cddda0b3_log(jule::F64);
inline jule::F64 _1cde4a73e_expm1(jule::F64);
inline jule::F64 _1cddeab62_abs(jule::F64);
inline jule::F64 _1cddeabd9_j1(jule::F64);
inline jule::F64 _1cddeabd9_y1(jule::F64);
inline jule::F64 _1cddeabd9_pone(jule::F64);
inline jule::F64 _1cddeabd9_qone(jule::F64);
inline jule::U64 _1cdee28c4_zero(jule::U64);
inline jule::U64 _1cdee28c4_nonzero(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1cdee28c4_shl(jule::U64,jule::U64,jule::Uint);
inline std::tuple<jule::U64,jule::U64> _1cdee28c4_shr(jule::U64,jule::U64,jule::Uint);
inline std::tuple<jule::U64,jule::U64> _1cdee28c4_shrcompress(jule::U64,jule::U64,jule::Uint);
inline jule::I32 _1cdee28c4_lz(jule::U64,jule::U64);
inline std::tuple<jule::U32,jule::I32,jule::U64> _1cdee28c4_split(jule::U64);
inline jule::F64 _1cdee28c4_fma(jule::F64,jule::F64,jule::F64);
inline std::tuple<jule::F64,jule::F64> _1cdee74cd_modf(jule::F64);
inline jule::F64 _1ce02c5ac_log10(jule::F64);
inline jule::F64 _1ce02c5ac_log2(jule::F64);
inline jule::F64 _1ce03e206_hypot(jule::F64,jule::F64);
inline jule::F64 _1ce04ca0b_j0(jule::F64);
inline jule::F64 _1ce04ca0b_y0(jule::F64);
inline jule::F64 _1ce04ca0b_pzero(jule::F64);
inline jule::F64 _1ce04ca0b_qzero(jule::F64);
inline jule::F64 _1ce0a3226_ldexp(jule::F64,jule::Int);
inline jule::Bool _1ce0be9a1_signbit(jule::F64);
inline jule::F64 _1ce0a44be_sinh(jule::F64);
inline jule::F64 _1ce0a44be_cosh(jule::F64);
inline std::tuple<jule::F64,jule::Int> _1ce0d9449_lgamma(jule::F64);
inline jule::F64 _1ce0d9449_sin_pi(jule::F64);
inline jule::F64 _1ce133d67_acosh(jule::F64);
inline jule::F64 _1ce141539_tanh(jule::F64);
inline jule::F64 _1ce150e0b_cbrt(jule::F64);
inline jule::F64 _1ce14d414_pow(jule::F64,jule::F64);
inline jule::Bool _1ce14d414_is_odd_int(jule::F64);
inline jule::F64 _1ce1555b4_exp(jule::F64);
inline jule::F64 _1ce1555b4_exp2(jule::F64);
inline jule::F64 _1ce1555b4_expmulti(jule::F64,jule::F64,jule::Int);
inline jule::F64 _1ce16c048_log1p(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1ce171aec_stirling(jule::F64);
inline jule::F64 _1ce171aec_gamma(jule::F64);
inline jule::Bool _1ce171aec_is_neg_int(jule::F64);
inline jule::F64 _1ce2185ab_erfinv(jule::F64);
inline jule::F64 _1ce2185ab_erfcinv(jule::F64);
inline jule::F64 _1ce25e7cd_erf(jule::F64);
inline jule::F64 _1ce25e7cd_erfc(jule::F64);
inline jule::F64 _1ce1c518e_pow10(jule::Int);
inline jule::F64 _1ce260108_sqrt(jule::F64);
inline jule::F64 _1ce2b9c89_logb(jule::F64);
inline jule::Int _1ce2b9c89_ilogb(jule::F64);
inline jule::Int _1ce2b9c89__ilogb(jule::F64);
inline jule::F64 _1ce26114d_jn(jule::Int,jule::F64);
inline jule::F64 _1ce26114d_yn(jule::Int,jule::F64);
inline jule::F64 _1ce2b1ec3_remainder(jule::F64,jule::F64);
inline jule::F64 _1ce3402c6_xatan(jule::F64);
inline jule::F64 _1ce3402c6_satan(jule::F64);
inline jule::F64 _1ce3402c6_atan(jule::F64);
inline jule::F64 _1ce2dda05_asin(jule::F64);
inline jule::F64 _1ce2dda05_acos(jule::F64);
inline jule::F64 _1ce35d9cb_asinh(jule::F64);
inline std::tuple<jule::Bool,jule::Int> _1e76e9e3c_conv_bool(jule::Str);
inline jule::Str _1e76e9e3c_fmt_bool(jule::Bool);
inline jule::Str _1e770c537_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _1e770c537_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _1e770c537_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1e770c537_FloatInfo&);
inline jule::Slice<jule::U8> _1e770c537_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_1e770c537_DecimalSlice,jule::Int,jule::U8);
inline void _1e770c537_round_shortest(_1e878448c_Decimal&,jule::U64,jule::Int,_1e770c537_FloatInfo&);
inline jule::Slice<jule::U8> _1e770c537_fmt_e(jule::Slice<jule::U8>,jule::Bool,_1e770c537_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _1e770c537_fmt_f(jule::Slice<jule::U8>,jule::Bool,_1e770c537_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _1e770c537_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_1e770c537_FloatInfo&);
inline jule::Slice<jule::U8> _1e770c537_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1e770c537_FloatInfo&);
inline jule::Int _1e770c537_min(jule::Int,jule::Int);
inline jule::Int _1e770c537_max(jule::Int,jule::Int);
inline jule::U8 _1e7717cd4_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _1e7717cd4_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _1e7717cd4_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _1e7716530_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e7716530_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _1e857a7c2_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _1e857a7c2_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1e857a7c2_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1e857a7c2_atof64_exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Bool> _1e857a7c2_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e857a7c2_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _1e857a7c2_atof_hex(jule::Str,_1e770c537_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _1e857a7c2_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1e857a7c2_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1e857a7c2_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _1e857a7c2_parse_float(jule::Str,jule::Int);
inline void _1e86eaaa7_ryu_ftoa_fixed32(_1e770c537_DecimalSlice&,jule::U32,jule::Int,jule::Int);
inline void _1e86eaaa7_ryu_ftoa_fixed64(_1e770c537_DecimalSlice&,jule::U64,jule::Int,jule::Int);
inline void _1e86eaaa7_format_decimal(_1e770c537_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _1e86eaaa7_ryu_ftoa_shortest(_1e770c537_DecimalSlice&,jule::U64,jule::Int,_1e770c537_FloatInfo&);
inline jule::Int _1e86eaaa7_mul_by_log2_log10(jule::Int);
inline jule::Int _1e86eaaa7_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1e86eaaa7_compute_bounds(jule::U64,jule::Int,_1e770c537_FloatInfo&);
inline void _1e86eaaa7_ryu_digits(_1e770c537_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _1e86eaaa7_ryu_digits32(_1e770c537_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _1e86eaaa7_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _1e86eaaa7_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _1e86eaaa7_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _1e86eaaa7_divmod1e9(jule::U64);
inline jule::Int _1e878448c_digit_zero(jule::Slice<jule::U8>);
inline void _1e878448c_trim(_1e878448c_Decimal&);
inline void _1e878448c_right_shift(_1e878448c_Decimal&,jule::Uint);
inline jule::Bool _1e878448c_prefix_is_less_than(jule::Slice<jule::U8>,jule::Str);
inline void _1e878448c_left_shift(_1e878448c_Decimal&,jule::Uint);
inline jule::Bool _1e878448c_should_round_up(_1e878448c_Decimal&,jule::Int);
inline jule::Str _1e86edbba_fmt_uint(jule::U64,jule::Int);
inline jule::Str _1e86edbba_fmt_int(jule::I64,jule::Int);
inline jule::Str _1e86edbba_itoa(jule::Int);
inline jule::Str _1e86edbba_small(jule::Int);
inline jule::Bool _1e86edbba_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e86edbba_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline void _1ce1465e9_push_opt_level(jule::Int);
inline jule::Bool _1ce1465e9_is_opt_enabled(jule::Str);
inline jule::Int _1ce2b75e4_get_last_fs_error(void);
inline std::tuple<jule::Ref<_1ce2b21b0_File>,jule::Int> _1ce3432b8_open(jule::Str,jule::Int,jule::Int);
inline jule::Int _1ce3432b8_remove_file(jule::Str);
inline std::tuple<jule::Ref<_1ce48210a_Status>,jule::Int> _1ce4735e6_stat(jule::Str);
inline std::tuple<jule::Slice<jule::U8>,jule::Int> _1ce2b21b0_read_file(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_1ce3851c8_DirEntry>>,jule::Int> _1ce4a45b1_read_dir(jule::Str);
inline jule::Int _1ce4a45b1_create_dir(jule::Str);
inline jule::Int _1ce4a45b1_remove_dir(jule::Str);
inline jule::Bool _1ce55e54a_is_graphic(jule::I32);
inline jule::Bool _1ce55e54a_is_in(jule::I32,jule::Slice<jule::Ref<_1b5a4a7db_RangeTable>>);
inline jule::Bool _1ce55e54a_is_letter(jule::I32);
inline jule::Bool _1ce55e54a_is_number(jule::I32);
inline jule::Bool _1ce55e54a_is_punct(jule::I32);
inline jule::Bool _1ce55e54a_is_space(jule::I32);
inline jule::Bool _1b5a49554_is_digit(jule::I32);
inline std::tuple<jule::I32,jule::Bool> _1b5a4a7db___to(jule::Int,jule::I32,jule::Slice<_1b5a4a7db_CaseRange>);
inline jule::I32 _1b5a4a7db_to(jule::Int,jule::I32);
inline jule::I32 _1b5a4a7db_to_upper(jule::I32);
inline jule::I32 _1b5a4a7db_to_lower(jule::I32);
inline jule::Bool _1b5a4a7db_is16(jule::Slice<_1b5a4a7db_Range16>,jule::U16);
inline jule::Bool _1b5a4a7db_is32(jule::Slice<_1b5a4a7db_Range32>,jule::U32);
inline jule::Bool _1b5a4a7db_is(jule::Ref<_1b5a4a7db_RangeTable>,jule::I32);
inline jule::Bool _1b5a4a7db_is_excluding_latin(jule::Ref<_1b5a4a7db_RangeTable>,jule::I32);
inline jule::Bool _1b5a4a7db_is_upper(jule::I32);
inline jule::Bool _1b5a4a7db_is_lower(jule::I32);
inline jule::Bool _1ce629071_full_rune(jule::Slice<jule::U8>);
inline jule::Bool _1ce629071_full_rune_str(jule::Str);
inline std::tuple<jule::I32,jule::Int> _1ce629071_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _1ce629071_decode_rune_str(jule::Str);
inline std::tuple<jule::I32,jule::Int> _1ce629071_decode_last_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _1ce629071_decode_last_rune_str(jule::Str);
inline jule::Int _1ce629071_rune_len(jule::I32);
inline jule::Int _1ce629071_encode_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1ce629071_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1ce629071_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::Int _1ce629071_rune_count(jule::Slice<jule::U8>);
inline jule::Int _1ce629071_rune_count_str(jule::Str);
inline jule::Bool _1ce629071_rune_start(jule::U8);
inline jule::Bool _1ce629071_valid(jule::Slice<jule::U8>);
inline jule::Bool _1ce629071_valid_str(jule::Str);
inline jule::Bool _1ce629071_valid_rune(jule::I32);
inline jule::Bool _1ce35e3a0_is_unary_op(jule::Str);
inline jule::Bool _1ce35e3a0_is_bin_op(jule::Str);
inline jule::Bool _1ce35e3a0_is_weak_op(jule::Str);
inline jule::Bool _1ce35e3a0_is_str(jule::Str);
inline jule::Bool _1ce35e3a0_is_raw_str(jule::Str);
inline jule::Bool _1ce35e3a0_is_rune(jule::Str);
inline jule::Bool _1ce35e3a0_is_nil(jule::Str);
inline jule::Bool _1ce35e3a0_is_bool(jule::Str);
inline jule::Bool _1ce35e3a0_contains_any(jule::Str,jule::Str);
inline jule::Bool _1ce35e3a0_is_float(jule::Str);
inline jule::Bool _1ce35e3a0_is_num(jule::Str);
inline jule::Bool _1ce35e3a0_is_lit(jule::Str);
inline jule::Bool _1ce35e3a0_is_ignore_ident(jule::Str);
inline jule::Bool _1ce35e3a0_is_anon_ident(jule::Str);
inline jule::Bool _1ce35e3a0_is_punct(jule::I32);
inline jule::Bool _1ce35e3a0_is_space(jule::I32);
inline jule::Bool _1ce35e3a0_is_letter(jule::I32);
inline jule::Bool _1ce35e3a0_is_ident_rune(jule::Str);
inline jule::Bool _1ce35e3a0_is_decimal(jule::U8);
inline jule::Bool _1ce35e3a0_is_binary(jule::U8);
inline jule::Bool _1ce35e3a0_is_octal(jule::U8);
inline jule::Bool _1ce35e3a0_is_hex(jule::U8);
inline jule::Bool _1ce35e3a0_is_assign(jule::Uint);
inline jule::Bool _1ce35e3a0_is_postfix_op(jule::Str);
inline jule::Bool _1ce35e3a0_is_assign_op(jule::Str);
inline jule::Ref<_1ce4aae47_File> _1ce4aae47_new_file_set(jule::Str);
inline _1e7690a81_Log _1ce494282_make_err(jule::Int,jule::Int,jule::Ref<_1ce4aae47_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ce494282_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
inline jule::Str _1ce494282_float_fmt_e(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1ce494282_float_fmt_p(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1ce494282_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1ce494282_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1ce494282_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1ce494282_float_num(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1ce494282_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1ce494282_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1ce494282_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _1ce494282_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _1ce494282_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _1ce494282_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _1ce494282_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1ce494282_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1ce494282_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1ce494282_hex_escape(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1ce494282_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1ce494282_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1ce494282_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1ce494282_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_1e7690a81_Log> _1ce494282_lex(jule::Ref<_1ce4aae47_File>);
inline jule::Ref<_1ce38611e_FileInfo> _1ce38611e_parse_file(jule::Ref<_1ce4aae47_File>);
inline jule::Ref<_1ce38611e_PackageInfo> _1ce38611e_parse_package(jule::Slice<jule::Ref<_1ce4aae47_File>>);
inline std::tuple<jule::Ref<_1ce2b7acd_Ast>,jule::Slice<_1e7690a81_Log>> _1ce38611e_parse_fileset(jule::Ref<_1ce4aae47_File>);
inline jule::Ref<_1ce385d22_ScopeTree> _1ce557587_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1ce557587_is_st(_1ce35e3a0_Token,_1ce35e3a0_Token);
inline jule::Bool _1ce557587_prev_is_incomplete_binary_expr(jule::Slice<_1ce35e3a0_Token>&,jule::Int&);
inline std::tuple<jule::Int,jule::Bool> _1ce557587_next_st_pos(jule::Slice<_1ce35e3a0_Token>&,jule::Int);
inline std::tuple<jule::Slice<_1ce35e3a0_Token>,jule::Bool> _1ce557587_skip_st(jule::Int&,jule::Slice<_1ce35e3a0_Token>);
inline jule::Slice<jule::Ref<_1ce557587_Stmt>> _1ce557587_split_stms(jule::Slice<_1ce35e3a0_Token>&);
inline jule::Slice<_1ce35e3a0_Token> _1ce5ee178_is_fn_call(jule::Slice<_1ce35e3a0_Token>&);
inline jule::Ref<_1ce5ee178_CallData> _1ce5ee178_get_call_data(jule::Slice<_1ce35e3a0_Token>&);
inline jule::Slice<_1ce35e3a0_Token> _1ce5ee178_get_block_expr(jule::Slice<_1ce35e3a0_Token>&);
inline std::tuple<jule::Slice<_1ce35e3a0_Token>,jule::Slice<_1ce35e3a0_Token>> _1ce5ee178_split_colon(jule::Slice<_1ce35e3a0_Token>&);
inline jule::Slice<_1ce35e3a0_Token> _1ce5ee178_eliminate_comments(jule::Slice<_1ce35e3a0_Token>&);
inline jule::Int _1ce5ee178_find_lowest_prec_op(jule::Slice<_1ce35e3a0_Token>&);
inline jule::Ref<_1ce385d22_IdentExpr> _1ce5ee178_build_ident_expr(_1ce35e3a0_Token&);
inline std::tuple<jule::Slice<_1ce35e3a0_Token>,jule::Int> _1ce5ee178_get_range_expr_tokens(jule::Slice<_1ce35e3a0_Token>&);
inline jule::Bool _1ce6015a9_check_assign_tokens(jule::Slice<_1ce35e3a0_Token>&);
inline _1e7690a81_Log _1b5c910d6_make_err(jule::Int,jule::Int,jule::Ref<_1ce4aae47_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_1ce35e3a0_Token> _1b5c910d6_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_1ce35e3a0_Token>&);
inline std::tuple<jule::Slice<_1ce35e3a0_Token>,jule::Slice<_1ce35e3a0_Token>> _1b5c910d6_range_last(jule::Slice<_1ce35e3a0_Token>&);
inline std::tuple<jule::Slice<jule::Slice<_1ce35e3a0_Token>>,jule::Slice<_1e7690a81_Log>> _1b5c910d6_parts(jule::Slice<_1ce35e3a0_Token>&,jule::Uint,jule::Bool);
inline jule::Str _1b5c910d6_get_close_kind_of_brace(jule::Str);
inline _1e7690a81_Log _1b5c910d6_compiler_err(_1ce35e3a0_Token&,jule::Str&,jule::Slice<jule::Any>);
inline void _1b5c910d6_push_suggestion(_1e7690a81_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ref<_1ce385d22_Comment> _1b5c910d6_build_comment(_1ce35e3a0_Token&);
inline jule::Str _1b5c910d6_tokstoa(jule::Slice<_1ce35e3a0_Token>&);
inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_build_void_type(void);
inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_build_prim_type(_1ce35e3a0_Token);
inline std::tuple<jule::Slice<_1ce35e3a0_Token>,jule::Int> _1b5d8e899_split_map_range(jule::Slice<_1ce35e3a0_Token>&,jule::Int&);
inline void _1b6d4076c_lshift_unsig(_1b6d4076c_Const&,_1b6d4076c_Const&);
inline void _1b6d4076c_rshift_unsig(_1b6d4076c_Const&,_1b6d4076c_Const&);
inline jule::Bool _1b6d438d5_check_bit(jule::Str,jule::Int,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>);
inline jule::Str _1b6d438d5_real_kind_of(jule::Str);
inline jule::Int _1b6d438d5_bitsize_of(jule::Str);
inline jule::Str _1b6d438d5_int_from_bits(jule::U64);
inline jule::Str _1b6d438d5_uint_from_bits(jule::U64);
inline jule::Str _1b6d438d5_float_from_bits(jule::U64);
inline jule::Bool _1b6d438d5_check_bit_int(jule::Str,jule::Int);
inline jule::Bool _1b6d438d5_check_bit_uint(jule::Str,jule::Int);
inline jule::Bool _1b6d438d5_check_bit_float(jule::Str,jule::Int);
inline jule::U64 _1b6d438d5_bitsize_of_float(jule::F64);
inline jule::U64 _1b6d438d5_bitsize_of_int(jule::I64);
inline jule::U64 _1b6d438d5_bitsize_of_uint(jule::U64);
inline jule::F64 _1b6d47d3a_min(jule::Str);
inline jule::F64 _1b6d47d3a_max(jule::Str);
inline jule::Bool _1b6d578d8_is_i8_compatible(jule::Str);
inline jule::Bool _1b6d578d8_is_i16_compatible(jule::Str);
inline jule::Bool _1b6d578d8_is_i32_compatible(jule::Str);
inline jule::Bool _1b6d578d8_is_i64_compatible(jule::Str);
inline jule::Bool _1b6d578d8_is_u8_compatible(jule::Str);
inline jule::Bool _1b6d578d8_is_u16_compatible(jule::Str);
inline jule::Bool _1b6d578d8_is_u32_compatible(jule::Str);
inline jule::Bool _1b6d578d8_is_u64_compatible(jule::Str);
inline jule::Bool _1b6d578d8_is_f32_compatible(jule::Str);
inline jule::Bool _1b6d578d8_is_f64_compatible(jule::Str);
inline jule::Bool _1b6d578d8_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _1b6d578d8_is_i16_greater(jule::Str);
inline jule::Bool _1b6d578d8_is_i32_greater(jule::Str);
inline jule::Bool _1b6d578d8_is_i64_greater(jule::Str);
inline jule::Bool _1b6d578d8_is_u8_greater(jule::Str);
inline jule::Bool _1b6d578d8_is_u16_greater(jule::Str);
inline jule::Bool _1b6d578d8_is_u32_greater(jule::Str);
inline jule::Bool _1b6d578d8_is_u64_greater(jule::Str);
inline jule::Bool _1b6d578d8_is_f32_greater(jule::Str);
inline jule::Bool _1b6d578d8_is_f64_greater(jule::Str);
inline jule::Bool _1b6d578d8_is_greater(jule::Str,jule::Str);
inline jule::Bool _1b6e2b4c3_is_sig_int(jule::Str);
inline jule::Bool _1b6e2b4c3_is_unsig_int(jule::Str);
inline jule::Bool _1b6e2b4c3_is_int(jule::Str);
inline jule::Bool _1b6e2b4c3_is_float(jule::Str);
inline jule::Bool _1b6e2b4c3_is_num(jule::Str);
inline jule::Bool _1b6e2b4c3_is_sig_num(jule::Str);
inline jule::Bool _1b6e98d37_is_ascii(jule::I32);
inline jule::I32 _1b6e98d37_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1b6e98d37_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1b6e98d37_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1b6e98d37_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1b6e98d37_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Slice<jule::U8> _1b6e98d37_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Bool _1b6069348_kind_uses_generics(jule::Ref<_1b6703d45_TypeKind>,jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>&);
inline jule::Bool _1b6069348_parameter_uses_generics(jule::Ref<_1b6069348_Param>&,jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>&);
inline jule::Str _1ce50a46e_str_repeat(jule::Str,jule::Int);
inline jule::Str _1ce50a46e_build_doc(jule::Ref<_1ce385d22_CommentGroup>);
inline jule::Ref<_1b6703d45_TypeSymbol> _1ce50a46e_build_type(jule::Ref<_1ce385d22_TypeDecl>);
inline jule::Ref<_1b66db129_Value> _1ce50a46e_build_expr(jule::Ref<_1ce385d22_Expr>);
inline jule::Ref<_1b6703d45_TypeAlias> _1ce50a46e_build_type_alias(jule::Ref<_1ce385d22_TypeAliasDecl>);
inline jule::Ref<_1ce385eed_Field> _1ce50a46e_build_field(jule::Ref<_1ce385d22_FieldDecl>);
inline jule::Slice<jule::Ref<_1ce385eed_Field>> _1ce50a46e_build_fields(jule::Slice<jule::Ref<_1ce385d22_FieldDecl>>&);
inline jule::Ref<_1ce385eed_Struct> _1ce50a46e_build_struct(jule::Ref<_1ce385d22_StructDecl>);
inline jule::Ref<_1b6069348_Param> _1ce50a46e_build_param(jule::Ref<_1ce385d22_ParamDecl>);
inline jule::Slice<jule::Ref<_1b6069348_Param>> _1ce50a46e_build_params(jule::Slice<jule::Ref<_1ce385d22_ParamDecl>>&);
inline jule::Ref<_1b6069348_RetType> _1ce50a46e_build_ret_type(jule::Ref<_1ce385d22_RetTypeDecl>);
inline jule::Ref<_1b6069348_Fn> _1ce50a46e_build_fn(jule::Ref<_1ce385d22_FnDecl>);
inline jule::Slice<jule::Ref<_1b6069348_Fn>> _1ce50a46e_build_methods(jule::Slice<jule::Ref<_1ce385d22_FnDecl>>&);
inline jule::Ref<_1b61d7d79_Trait> _1ce50a46e_build_trait(jule::Ref<_1ce385d22_TraitDecl>);
inline jule::Ref<_1b61d7c58_EnumItem> _1ce50a46e_build_enum_item(jule::Ref<_1ce385d22_EnumItemDecl>);
inline jule::Slice<jule::Ref<_1b61d7c58_EnumItem>> _1ce50a46e_build_enum_items(jule::Slice<jule::Ref<_1ce385d22_EnumItemDecl>>&);
inline jule::Ref<_1b61d7c58_Enum> _1ce50a46e_build_enum(jule::Ref<_1ce385d22_EnumDecl>);
inline jule::Ref<_1b637edab_Var> _1ce50a46e_build_var(jule::Ref<_1ce385d22_VarDecl>);
inline jule::Slice<jule::Ref<_1b637edab_Var>> _1ce50a46e_build_vars(jule::Slice<jule::Ref<_1ce385d22_VarDecl>>);
inline jule::Ref<_1b61ddc92_Impl> _1ce50a46e_build_impl(jule::Ref<_1ce385d22_Impl>);
inline jule::Ref<_1b61e873b_ScopeChecker> _1b61e873b_new_scope_checker_base(jule::Ref<_1b622b76e_Sema>,jule::Ref<_1b6069348_FnIns>);
inline jule::Ref<_1b61e873b_ScopeChecker> _1b61e873b_new_scope_checker(jule::Ref<_1b622b76e_Sema>,jule::Ref<_1b6069348_FnIns>);
inline jule::Ref<_1b61e873b_ScopeLabel> _1b61e873b_find_label_parent(jule::Str,jule::Ref<_1b61e873b_ScopeChecker>);
inline jule::Int _1b61e873b_count_match_type(jule::Ref<_1b61e873b_Match>,jule::Ref<_1b6703d45_TypeKind>);
inline jule::Slice<jule::Ref<_1b66db129_Data>> _1b61e873b_get_datas_from_tuple_data(jule::Ref<_1b66db129_Data>);
inline jule::Slice<jule::Any> _1b61e873b_get_expr_models(jule::Any);
inline jule::Bool _1b61e873b_check_mut(jule::Ref<_1b622b76e_Sema>,jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);
inline jule::Bool _1b61e873b_check_assign(jule::Ref<_1b622b76e_Sema>,jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>,_1ce35e3a0_Token);
inline jule::Bool _1b61e873b_is_valid_ast_st_for_next_st(jule::Any);
inline jule::Bool _1b61e873b_is_valid_st_for_next_st(jule::Any);
inline jule::Bool _1b61e873b_st_is_def(jule::Any);
inline jule::Ref<_1b637edab_Var> _1b623bb7a_find_var_in_package(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ref<_1b6703d45_TypeAlias> _1b623bb7a_find_type_alias_in_package(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ref<_1ce385eed_Struct> _1b623bb7a_find_struct_in_package(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ref<_1b6069348_Fn> _1b623bb7a_find_fn_in_package(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ref<_1b61d7d79_Trait> _1b623bb7a_find_trait_in_package(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>&,jule::Str);
inline jule::Ref<_1b61d7c58_Enum> _1b623bb7a_find_enum_in_package(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>&,jule::Str);
inline jule::Bool _1b622b76e_is_valid_model_for_ref(jule::Any);
inline _1e7690a81_Log _1b622b76e_compiler_err(_1ce35e3a0_Token&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1b622b76e_imp_is_lookupable(jule::Ref<_1b623bb7a_ImportInfo>&,jule::Str);
inline jule::Slice<jule::Ref<_1b637edab_Var>> _1b622b76e_build_ret_vars(jule::Ref<_1b6069348_FnIns>&);
inline jule::Slice<jule::Ref<_1b637edab_Var>> _1b622b76e_build_param_vars(jule::Ref<_1b6069348_FnIns>&);
inline jule::Slice<jule::Ref<_1b6703d45_TypeAlias>> _1b622b76e_build_generic_type_aliases(jule::Ref<_1b6069348_FnIns>&);
inline jule::Ref<_1b66b3a3b_SymbolTable> _1b622b76e_find_file(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>&,jule::Ref<_1ce4aae47_File>&);
inline std::tuple<jule::Bool,jule::Bool> _1b622b76e_conditional_has_ret(jule::Ref<_1b61e873b_Conditional>);
inline jule::Bool _1b622b76e_match_has_ret(jule::Ref<_1b61e873b_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1b622b76e___has_ret(jule::Ref<_1b61e873b_Scope>);
inline jule::Bool _1b622b76e_has_ret(jule::Ref<_1b61e873b_Scope>);
inline void _1b622b76e_push_suggestion(_1e7690a81_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ref<_1b6703d45_TypeKind>> _1b65a085c_get_fn_result_types(jule::Ref<_1b6069348_FnIns>&);
inline jule::Bool _1b65a085c_trait_has_reference_receiver(jule::Ref<_1b61d7d79_Trait>&);
inline jule::Bool _1b65a085c_float_assignable(jule::Str,jule::Ref<_1b66db129_Data>&);
inline jule::Bool _1b65a085c_sig_assignable(jule::Str,jule::Ref<_1b66db129_Data>&);
inline jule::Bool _1b65a085c_unsig_assignable(jule::Str,jule::Ref<_1b66db129_Data>&);
inline jule::Bool _1b65a085c_int_assignable(jule::Str,jule::Ref<_1b66db129_Data>&);
inline jule::Any _1b66db129_find_builtins_import(jule::Str,jule::Ref<_1b623bb7a_ImportInfo>);
inline jule::Any _1b66db129_find_builtins_sema(jule::Str,jule::Ref<_1b622b76e_Sema>);
inline jule::Bool _1b66db129_is_ok_for_shifting(jule::Ref<_1b66db129_Data>);
inline jule::Bool _1b66db129_is_instanced_struct(jule::Ref<_1ce385eed_StructIns>);
inline jule::Bool _1b66db129_is_ptr_arithmetic_compatible_int(jule::Ref<_1b66db129_Data>&);
inline void _1b66db129_normalize_bitsize(jule::Ref<_1b66db129_Data>);
inline void _1b66db129_normalize_type(jule::Ref<_1b66db129_Data>);
inline void _1b66db129_apply_cast_kind_model(jule::Ref<_1b66db129_Data>);
inline void _1b66db129_apply_cast_kind(jule::Ref<_1b66db129_Data>);
inline jule::Ref<_1b66db129_Data> _1b66db129_build_void_data(void);
inline jule::Str _1b66db129_kind_by_bitsize(jule::Any);
inline jule::Str _1b66db129_check_data_for_integer_indexing(jule::Ref<_1b66db129_Data>);
inline jule::Bool _1b6703d45_can_get_ptr(jule::Ref<_1b66db129_Data>&);
inline jule::Bool _1b6703d45_is_valid_for_ref_type(jule::Ref<_1b6703d45_TypeKind>&);
inline jule::Bool _1b6703d45_is_valid_for_ref(jule::Ref<_1b6703d45_TypeKind>&);
inline jule::Str _1b6703d45_build_link_path_by_tokens(jule::Slice<_1ce35e3a0_Token>&);
inline jule::Ref<_1b6703d45_Prim> _1b6703d45_build_prim_type(jule::Str);
inline jule::Ref<_1ce385eed_Struct> _1b6703d45_get_struct_from_kind(jule::Ref<_1b6703d45_TypeKind>);
inline jule::Bool _1b6703d45_is_prim(jule::Str);
inline std::tuple<jule::Ref<_1b66b3a3b_SymbolTable>,jule::Slice<_1e7690a81_Log>> _1b6b73ea7_build_symbols(jule::Ref<_1ce2b7acd_Ast>&,jule::Trait<_1b623bb7a_Importer>&,jule::Ref<_1ce50a46e_SymbolBuilder>);
inline std::tuple<jule::Ref<_1b623bb7a_Package>,jule::Slice<_1e7690a81_Log>> _1b6b73ea7___analyze_package(jule::Slice<jule::Ref<_1ce2b7acd_Ast>>&,jule::Trait<_1b623bb7a_Importer>&,jule::Int&);
inline std::tuple<jule::Ref<_1b623bb7a_Package>,jule::Slice<_1e7690a81_Log>> _1b6b73ea7_analyze_package(jule::Slice<jule::Ref<_1ce2b7acd_Ast>>,jule::Trait<_1b623bb7a_Importer>,jule::Int);
inline std::tuple<jule::Ref<_1b66b3a3b_SymbolTable>,jule::Slice<_1e7690a81_Log>> _1b6b73ea7_analyze_file(jule::Ref<_1ce2b7acd_Ast>,jule::Trait<_1b623bb7a_Importer>,jule::Int);
inline void _1b6c3ed86_init(void);
inline jule::Ref<_1b6069348_FnIns> _1b6c3ed86_find_builtin_fn(jule::Str);
inline jule::Ref<_1b6703d45_TypeAlias> _1b6c3ed86_find_builtin_type_alias(jule::Str);
inline jule::Ref<_1b61d7d79_Trait> _1b6c3ed86_find_builtin_trait(jule::Str);
inline jule::Any _1b6c3ed86_find_builtin_def(jule::Str);
inline jule::Any _1b6c3ed86_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1b6c3ed86_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1b6c3ed86_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_common_plain(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_common(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_common_mut(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_out(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_outln(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_new(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_real(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_drop(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_panic(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_make(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_append(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_copy(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_recover(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_clone(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_std_mem_size_of(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_std_mem_align_of(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_std_jule_integrated_to_str(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1cde55d87_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1cde55d87_check_arch(jule::Str);
inline jule::Bool _1cde55d87_is_pass_file_annotation(jule::Str);
inline jule::Bool _1cde5645e_eval_directive_ident(jule::Str);
inline jule::Bool _1cde5645e_eval_directive_part(jule::Str);
inline jule::Slice<jule::Str> _1cde5645e_split_operans(jule::Str,jule::Str);
inline jule::Bool _1cde5645e_eval_directive_expr(jule::Str);
inline void _1cde565e6_set_os_flags(void);
inline void _1cde565e6_set_arch_flags(void);
inline void _1cde565e6_init_flags(void);
inline void _1ce135770_exit_err(jule::Str);
inline jule::Slice<jule::U8> _1ce135770_read_buff(jule::Str);
inline _1e7690a81_Log _1ce135770_flat_compiler_err(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_1ce3851c8_DirEntry>>,jule::Str> _1ce135770_read_package_dirents(jule::Str);
inline jule::Str _1ce135770_concat_all_parts(jule::Slice<jule::Str>);
inline jule::Bool _1ce135770_is_pass_build_directives(jule::Ref<_1ce2b7acd_Ast>&);
inline void _1cdd79d22_push_passes(jule::Ref<_1b623bb7a_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1cdd79d22_get_all_unique_passes(jule::Ref<_1b623bb7a_Package>&,jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>>);
inline jule::Bool _1e86aa7c0_is_exist_0(jule::Slice<jule::Any>,jule::Ref<_1b6069348_FnIns>);
inline jule::Bool _1e86aa7c0_is_exist_1(jule::Slice<jule::Any>,jule::Ref<_1b637edab_Var>);
inline jule::Bool _1e86aa7c0_is_exist_2(jule::Slice<jule::Any>,jule::Ref<_1ce385eed_StructIns>);
inline jule::Bool _1e86aa7c0_is_exist_3(jule::Slice<jule::Any>,jule::Ref<_1b61d7d79_Trait>);
inline jule::Bool _1e86aa7c0_is_exist_ref(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _1e86aa7c0_is_dead(jule::Any);
inline void _1e86aa7c0_drop_ref(jule::Slice<jule::Any>&,jule::Int);
inline jule::Bool _1e86aa7c0_is_all_references_are_dead_0(jule::Ref<_1ce50a46e_ReferenceStack>);
inline jule::Bool _1e86aa7c0_is_all_references_are_dead_1(jule::Ref<_1ce50a46e_ReferenceStack>);
inline jule::Bool _1e86aa7c0_is_all_references_are_dead_2(jule::Ref<_1ce50a46e_ReferenceStack>);
inline jule::Bool _1e86aa7c0_is_fn_dead(jule::Ref<_1b6069348_FnIns>);
inline jule::Bool _1e86aa7c0_is_var_dead(jule::Ref<_1b637edab_Var>);
inline jule::Bool _1e86aa7c0_kind_is_dead(jule::Ref<_1b6703d45_TypeKind>);
inline jule::Bool _1e86aa7c0_is_any_generic_is_dead(jule::Slice<jule::Ref<_1b6703d45_TypeKind>>&);
inline jule::Bool _1e86aa7c0_is_struct_dead(jule::Ref<_1ce385eed_StructIns>);
inline jule::Bool _1e86aa7c0_is_trait_dead(jule::Ref<_1b61d7d79_Trait>);
inline void _1e86aa7c0_eliminate_dead_functions(jule::Slice<jule::Ref<_1b6069348_Fn>>&);
inline void _1e86aa7c0_eliminate_dead_globals(jule::Ref<_1b623bb7a_Package>&);
inline void _1e86aa7c0_eliminate_dead_functions_package(jule::Ref<_1b623bb7a_Package>&);
inline void _1e86aa7c0_eliminate_dead_structs(jule::Ref<_1b623bb7a_Package>&);
inline void _1e86aa7c0_eliminate_dead_traits(jule::Ref<_1b623bb7a_Package>&);
inline void _1e86aa7c0_catch_alive_init(jule::Ref<_1b623bb7a_Package>&);
inline void _1e86aa7c0_eliminate_package(jule::Ref<_1b623bb7a_Package>&);
inline void _1e86aa7c0_eliminate(jule::Ref<_1cdd79d22_IR>&);
inline void _1cdd24409_eliminate_dead_code_of_scope(jule::Ref<_1b61e873b_Scope>);
inline jule::U64 _1b72774ab_unix(void);
inline jule::U64 _1b72774ab_unix_year_to_seconds(jule::Uint,jule::Bool&);
inline jule::U64 _1b72774ab_unix_month_to_seconds(jule::Uint,jule::Bool);
inline jule::Str _1e86b150c_gen_if(jule::Ref<_1b61e873b_If>);
inline jule::Str _1e86b150c_gen_conditional(jule::Ref<_1b61e873b_Conditional>);
inline jule::Str _1e86b150c_gen_inf_iter(jule::Ref<_1b61e873b_InfIter>);
inline jule::Str _1e86b150c_gen_while_iter(jule::Ref<_1b61e873b_WhileIter>);
inline jule::Trait<_1e86b150c_RangeIterGen> _1e86b150c_get_range_generator(jule::Ref<_1b61e873b_RangeIter>);
inline jule::Str _1e86b150c_gen_range_iter(jule::Ref<_1b61e873b_RangeIter>);
inline jule::Str _1e86b150c_gen_cont(jule::Ref<_1b61e873b_ContSt>);
inline jule::Str _1e86b150c_gen_label(jule::Ref<_1b61e873b_Label>);
inline jule::Str _1e86b150c_gen_goto(jule::Ref<_1b61e873b_GotoSt>);
inline jule::Str _1e86b150c_gen_postfix(jule::Ref<_1b61e873b_Postfix>);
inline jule::Str _1e86b150c_gen_div_by_zero_assign(jule::Ref<_1b61e873b_Assign>);
inline jule::Str _1e86b150c_gen_assign(jule::Ref<_1b61e873b_Assign>);
inline jule::Str _1e86b150c_gen_multi_assign(jule::Ref<_1b61e873b_MultiAssign>);
inline jule::Str _1e86b150c_gen_case(jule::Ref<_1b61e873b_Match>,jule::Ref<_1b61e873b_Case>);
inline jule::Str _1e86b150c_gen_match(jule::Ref<_1b61e873b_Match>);
inline jule::Str _1e86b150c_gen_fall_st(jule::Ref<_1b61e873b_FallSt>);
inline jule::Str _1e86b150c_gen_break_st(jule::Ref<_1b61e873b_BreakSt>);
inline jule::Str _1e86b150c_gen_ret_vars(jule::Ref<_1b61e873b_RetSt>);
inline jule::Str _1e86b150c_gen_ret_expr_tuple(jule::Ref<_1b61e873b_RetSt>);
inline jule::Str _1e86b150c_gen_ret_expr(jule::Ref<_1b61e873b_RetSt>);
inline jule::Str _1e86b150c_gen_ret_st(jule::Ref<_1b61e873b_RetSt>);
inline jule::Str _1e86b150c_gen_ret_st_with_defaults(jule::Ref<_1b6703d45_TypeKind>);
inline jule::Str _1e86b150c_gen_recover(jule::Ref<_1b61e873b_Recover>);
inline jule::Str _1e86b150c_gen_data_expr(jule::Ref<_1b66db129_Data>);
inline jule::Str _1e86b150c_gen_scope_var(jule::Ref<_1b637edab_Var>);
inline jule::Str _1e86b150c_gen_st(jule::Any);
inline jule::Str _1e86b150c_gen_scope(jule::Ref<_1b61e873b_Scope>);
inline jule::Str _1e86b150c_gen_fn_scope(jule::Ref<_1b6069348_FnIns>);
inline jule::Str _1e86b150c_gen_method_scope(jule::Ref<_1b6069348_FnIns>);
inline jule::Str _1e86ed47d_concat_all_parts(jule::Slice<jule::Str>);
inline jule::Str _1e86ed47d_get_accessor(jule::Ref<_1b6703d45_TypeKind>&);
inline jule::Str _1e86ed47d_decompose_common_esq(jule::U8);
inline jule::Str _1e86ed47d_sbtoa(jule::U8);
inline jule::Str _1e86ed47d_get_str_model(jule::Ref<_1b6d4076c_Const>&);
inline jule::Str _1e86ed47d_get_bool_model(jule::Ref<_1b6d4076c_Const>&);
inline jule::Str _1e86ed47d_get_nil_model(void);
inline jule::Str _1e86ed47d_gen_float_special_cases(jule::F64&);
inline jule::Str _1e86ed47d_ftoa(jule::F64,jule::Int);
inline jule::Str _1e86ed47d_get_f32_model(jule::Ref<_1b6d4076c_Const>&);
inline jule::Str _1e86ed47d_get_f64_model(jule::Ref<_1b6d4076c_Const>&);
inline jule::Str _1e86ed47d_get_float_model(jule::Ref<_1b66db129_Data>&);
inline jule::Str _1e86ed47d_i64toa(jule::I64);
inline jule::Str _1e86ed47d_get_i64_model(jule::Ref<_1b6d4076c_Const>&);
inline jule::Str _1e86ed47d_u64toa(jule::U64);
inline jule::Str _1e86ed47d_get_u64_model(jule::Ref<_1b6d4076c_Const>);
inline jule::Str _1e86ed47d_gen_const_expr(jule::Ref<_1b66db129_Data>);
inline jule::Str _1e86ed47d_gen_const_expr_model(jule::Ref<_1b6d4076c_Const>);
inline jule::Str _1e86ed47d_gen_div_by_zero_binop_expr_model(jule::Str,jule::Any,jule::Any);
inline jule::Str _1e86ed47d_gen_binop_expr_model(jule::Ref<_1b61decc6_BinopExprModel>);
inline jule::Str _1e86ed47d_gen_var_expr_model(jule::Ref<_1b637edab_Var>);
inline jule::Str _1e86ed47d_gen_struct_expr_model(jule::Ref<_1ce385eed_Struct>);
inline jule::Str _1e86ed47d_gen_struct_ins_expr_model(jule::Ref<_1ce385eed_StructIns>);
inline jule::Str _1e86ed47d_gen_unary_expr_model(jule::Ref<_1b61decc6_UnaryExprModel>);
inline jule::Str _1e86ed47d_gen_get_ref_ptr_expr_model(jule::Ref<_1b61decc6_GetRefPtrExprModel>);
inline jule::Str _1e86ed47d_gen_cpp_struct_lit_expr_model(jule::Ref<_1b61decc6_StructLitExprModel>);
inline jule::Str _1e86ed47d_gen_struct_lit_expr_model(jule::Ref<_1b61decc6_StructLitExprModel>);
inline jule::Str _1e86ed47d_gen_alloc_struct_lit_expr_model(jule::Ref<_1b61decc6_AllocStructLitExprModel>);
inline jule::Str _1e86ed47d_gen_casting_expr_model(jule::Ref<_1b61decc6_CastingExprModel>);
inline jule::Str _1e86ed47d_gen_arg_expr_models(jule::Slice<jule::Any>);
inline jule::Str _1e86ed47d_gen_expr_model_for_call(jule::Any);
inline jule::Str _1e86ed47d_gen_fn_call_expr_model(jule::Ref<_1b61decc6_FnCallExprModel>);
inline jule::Str _1e86ed47d_gen_slice_expr_model(jule::Ref<_1b61decc6_SliceExprModel>);
inline jule::Str _1e86ed47d_gen_indexing_expr_model(jule::Ref<_1b61decc6_IndexigExprModel>);
inline jule::Str _1e86ed47d_gen_anon_fn_expr_model(jule::Ref<_1b61decc6_AnonFnExprModel>);
inline jule::Str _1e86ed47d_gen_map_expr_model(jule::Ref<_1b61decc6_MapExprModel>);
inline jule::Str _1e86ed47d_gen_slicing_expr_model(jule::Ref<_1b61decc6_SlicingExprModel>);
inline jule::Str _1e86ed47d_gen_trait_sub_ident_expr_model(jule::Ref<_1b61decc6_TraitSubIdentExprModel>);
inline jule::Str _1e86ed47d_gen_struct_sub_ident_expr_model(jule::Ref<_1b61decc6_StructSubIdentExprModel>);
inline jule::Str _1e86ed47d_gen_common_ident_expr_model(jule::Ref<_1b61decc6_CommonIdentExprModel>);
inline jule::Str _1e86ed47d_gen_common_sub_ident_expr_model(jule::Ref<_1b61decc6_CommonSubIdentExprModel>);
inline jule::Str _1e86ed47d_gen_array_expr_model(jule::Ref<_1b61decc6_ArrayExprModel>);
inline jule::Str _1e86ed47d_gen_fn_ins_expr_model_common(jule::Ref<_1b6069348_FnIns>);
inline jule::Str _1e86ed47d_gen_fn_ins_expr_model(jule::Ref<_1b6069348_FnIns>);
inline jule::Str _1e86ed47d_gen_tuple_expr_model(jule::Ref<_1b61decc6_TupleExprModel>);
inline jule::Str _1e86ed47d_gen_builtin_new_call_expr_model(jule::Ref<_1b61decc6_BuiltinNewCallExprModel>);
inline jule::Str _1e86ed47d_gen_builtin_out_call_expr_model(jule::Ref<_1b61decc6_BuiltinOutCallExprModel>);
inline jule::Str _1e86ed47d_gen_builtin_outln_call_expr_model(jule::Ref<_1b61decc6_BuiltinOutlnCallExprModel>);
inline jule::Str _1e86ed47d_gen_builtin_real_call_expr_model(jule::Ref<_1b61decc6_BuiltinRealCallExprModel>);
inline jule::Str _1e86ed47d_gen_builtin_drop_call_expr_model(jule::Ref<_1b61decc6_BuiltinDropCallExprModel>);
inline jule::Str _1e86ed47d_gen_builtin_panic_call_expr_model(jule::Ref<_1b61decc6_BuiltinPanicCallExprModel>);
inline jule::Str _1e86ed47d_gen_builtin_make_call_expr_model(jule::Ref<_1b61decc6_BuiltinMakeCallExprModel>);
inline jule::Str _1e86ed47d_gen_builtin_append_call_expr_model_assign_opt(jule::Bool,jule::Str&,jule::Ref<_1b6703d45_TypeKind>&,jule::Ref<_1b61decc6_SliceExprModel>&,jule::Ref<_1b61decc6_BuiltinAppendCallExprModel>&);
inline std::tuple<jule::Str,jule::Bool> _1e86ed47d_gen_builtin_append_call_expr_model_assign(jule::Any,jule::Ref<_1b61decc6_BuiltinAppendCallExprModel>);
inline jule::Str _1e86ed47d_gen_builtin_append_call_expr_model(jule::Ref<_1b61decc6_BuiltinAppendCallExprModel>);
inline jule::Str _1e86ed47d_gen_builtin_clone_call_expr_model(jule::Ref<_1b61decc6_BuiltinCloneCallExprModel>);
inline jule::Str _1e86ed47d_gen_sizeof_expr_model(jule::Ref<_1b61decc6_SizeofExprModel>);
inline jule::Str _1e86ed47d_gen_alignof_expr_model(jule::Ref<_1b61decc6_AlignofExprModel>);
inline jule::Str _1e86ed47d_gen_rune_expr_model(jule::Ref<_1b61decc6_RuneExprModel>);
inline jule::Str _1e86ed47d_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_1b61decc6_BuiltinErrorTraitSubIdentExprModel>);
inline jule::Str _1e86ed47d_gen_explicit_deref_expr_model(jule::Ref<_1b61decc6_ExplicitDerefExprModel>);
inline jule::Str _1e86ed47d_gen_struct_static_ident_expr_model(jule::Ref<_1b61decc6_StructStaticIdentExprModel>);
inline jule::Str _1e86ed47d_gen_integrated_to_str_expr_model(jule::Ref<_1b61decc6_IntegratedToStrExprModel>);
inline jule::Str _1e86ed47d_gen_ternary_expr_model(jule::Ref<_1b61decc6_TernaryExprModel>);
inline jule::Str _1e86ed47d_gen_expr_model(jule::Any);
inline jule::Str _1e86ed47d_gen_expr(jule::Any);
inline jule::Str _1e86ed47d_gen_val(jule::Ref<_1b66db129_Value>);
inline jule::Str _1e86ed47d_get_init_expr(jule::Ref<_1b6703d45_TypeKind>);
inline jule::Str _1b67334b2_get_derive_fn_decl_clone(jule::Ref<_1ce385eed_Struct>&);
inline jule::Str _1b67334b2_get_derive_fn_def_clone(jule::Ref<_1ce385eed_Struct>&);
inline jule::Str _1b710bbe2_as_ident(jule::Str);
inline jule::Str _1b710bbe2_as_jt(jule::Str);
inline jule::Str _1b710bbe2_get_addr_as_ident(jule::Uintptr);
inline jule::Str _1b710bbe2_as_out_ident(jule::Str,jule::Uintptr);
inline jule::Str _1b710bbe2_as_local_ident(jule::Int,jule::Int,jule::Str);
inline jule::Str _1b710bbe2_fn_out_ident(jule::Ref<_1b6069348_Fn>&);
inline jule::Str _1b710bbe2_fn_ins_out_ident(jule::Ref<_1b6069348_FnIns>&);
inline jule::Str _1b710bbe2_trait_out_ident(jule::Ref<_1b61d7d79_Trait>);
inline jule::Str _1b710bbe2_param_out_ident(jule::Ref<_1b6069348_Param>&);
inline jule::Str _1b710bbe2_struct_out_ident(jule::Ref<_1ce385eed_Struct>&);
inline jule::Str _1b710bbe2_struct_ins_out_ident(jule::Ref<_1ce385eed_StructIns>&);
inline jule::Str _1b710bbe2_field_out_ident(jule::Ref<_1ce385eed_Field>&);
inline jule::Str _1b710bbe2_var_out_ident(jule::Ref<_1b637edab_Var>);
inline jule::Str _1b710bbe2_iter_end_label_ident(jule::Uintptr);
inline jule::Str _1b710bbe2_iter_next_label_ident(jule::Uintptr);
inline jule::Str _1b710bbe2_label_ident(jule::Str);
inline jule::Str _1b710bbe2_match_end_label_ident(jule::Uintptr);
inline jule::Str _1b710bbe2_case_begin_label_ident(jule::Uintptr);
inline jule::Str _1b710bbe2_case_end_label_ident(jule::Uintptr);
inline jule::Bool _1b7110850_any_equals_0(jule::Ref<_1b637edab_Var>&,jule::Any&);
inline jule::Bool _1b7110850_any_equals_1(jule::Ref<_1ce385eed_FieldIns>&,jule::Any&);
inline jule::Ref<_1ce385d22_Directive> _1b7110850_find_directive(jule::Slice<jule::Ref<_1ce385d22_Directive>>&,jule::Str);
inline jule::Bool _1b7110850_has_directive(jule::Slice<jule::Ref<_1ce385d22_Directive>>&,jule::Str);
inline jule::Str _1b7110850_gen_prim_kind(jule::Ref<_1b6703d45_Prim>);
inline jule::Str _1b7110850_gen_tuple_kind(jule::Ref<_1b6703d45_Tuple>);
inline jule::Str _1b7110850_as_ref_kind(jule::Str);
inline jule::Str _1b7110850_gen_ref_kind(jule::Ref<_1b6703d45_Ref>);
inline jule::Str _1b7110850_gen_ptr_kind(jule::Ref<_1b6703d45_Ptr>);
inline jule::Str _1b7110850_gen_enum_kind(jule::Ref<_1b61d7c58_Enum>);
inline jule::Str _1b7110850_as_slice_kind(jule::Ref<_1b6703d45_TypeKind>);
inline jule::Str _1b7110850_gen_slice_kind(jule::Ref<_1b6703d45_Slc>);
inline jule::Str _1b7110850_gen_map_kind(jule::Ref<_1b6703d45_Map>);
inline jule::Str _1b7110850_gen_trait_kind_from_ident(jule::Str);
inline jule::Str _1b7110850_gen_trait_kind(jule::Ref<_1b61d7d79_Trait>);
inline jule::Str _1b7110850_gen_struct_kind(jule::Ref<_1ce385eed_Struct>);
inline jule::Str _1b7110850_gen_struct_kind_ins(jule::Ref<_1ce385eed_StructIns>);
inline jule::Str _1b7110850_gen_array_kind(jule::Ref<_1b6703d45_Arr>);
inline jule::Str _1b7110850_gen_fn_anon_decl(jule::Ref<_1b6069348_FnIns>);
inline jule::Str _1b7110850_gen_fn_kind(jule::Ref<_1b6069348_FnIns>);
inline jule::Str _1b7110850_gen_type_kind(jule::Ref<_1b6703d45_TypeKind>);
inline void _1b710e497_add_indent(void);
inline void _1b710e497_done_indent(void);
inline jule::Str _1b710e497_indent(void);
inline jule::Bool _1b710e497_is_cpp_header_file(jule::Str);
inline jule::Str _1b710e497_gen_links(jule::Ref<_1cdd79d22_IR>&);
inline jule::Str _1b710e497_gen_fn_result(jule::Ref<_1b6069348_Fn>&);
inline jule::Str _1b710e497_gen_fn_ins_result(jule::Ref<_1b6069348_FnIns>&);
inline jule::Str _1b710e497_gen_param_prototype(jule::Ref<_1b6069348_Param>&);
inline jule::Str _1b710e497_gen_param_ins(jule::Ref<_1b6069348_ParamIns>&);
inline jule::Str _1b710e497_gen_param_ins_prototype(jule::Ref<_1b6069348_ParamIns>&);
inline jule::Str _1b710e497_gen_param(jule::Ref<_1b6069348_Param>&);
inline jule::Str _1b710e497_gen_params(jule::Slice<jule::Ref<_1b6069348_Param>>&);
inline jule::Str _1b710e497_gen_params_ins(jule::Slice<jule::Ref<_1b6069348_ParamIns>>&);
inline jule::Str _1b710e497_gen_params_prototypes(jule::Slice<jule::Ref<_1b6069348_ParamIns>>&);
inline jule::Str _1b710e497_gen_trait(jule::Ref<_1b61d7d79_Trait>&);
inline jule::Str _1b710e497_gen_traits_tbl(jule::Ref<_1b66b3a3b_SymbolTable>&);
inline jule::Str _1b710e497_gen_traits_pkg(jule::Ref<_1b623bb7a_Package>&);
inline jule::Str _1b710e497_gen_traits(jule::Ref<_1cdd79d22_IR>&);
inline jule::Str _1b710e497_gen_trait_prototype(jule::Ref<_1b61d7d79_Trait>&);
inline jule::Str _1b710e497_gen_trait_prototypes(jule::Ref<_1b623bb7a_Package>&);
inline jule::Str _1b710e497_gen_struct_plain_prototype(jule::Ref<_1ce385eed_Struct>&);
inline jule::Str _1b710e497_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_1ce385eed_Struct>>&);
inline jule::Str _1b710e497_gen_struct_traits(jule::Ref<_1ce385eed_Struct>&);
inline jule::Str _1b710e497_gen_field_decl(jule::Ref<_1ce385eed_FieldIns>&);
inline jule::Str _1b710e497_gen_struct_self_field_type_kind(jule::Ref<_1ce385eed_StructIns>&);
inline jule::Str _1b710e497_gen_struct_self_field(jule::Ref<_1ce385eed_StructIns>&);
inline jule::Str _1b710e497_gen_struct_self_field_init_st(jule::Ref<_1ce385eed_StructIns>&);
inline jule::Str _1b710e497_gen_struct_constructor(jule::Ref<_1ce385eed_StructIns>&);
inline jule::Str _1b710e497_gen_struct_destructor(jule::Ref<_1ce385eed_StructIns>&);
inline jule::Str _1b710e497_gen_struct_operators(jule::Ref<_1ce385eed_StructIns>&);
inline jule::Str _1b710e497_gen_struct_derive_defs_prototypes(jule::Ref<_1ce385eed_StructIns>&);
inline jule::Str _1b710e497_gen_struct_ins_prototype(jule::Ref<_1ce385eed_StructIns>&);
inline jule::Str _1b710e497_gen_struct_prototype(jule::Ref<_1ce385eed_Struct>&);
inline jule::Str _1b710e497_gen_struct_prototypes(jule::Slice<jule::Ref<_1ce385eed_Struct>>&);
inline jule::Str _1b710e497_gen_fn_decl_head(jule::Ref<_1b6069348_FnIns>&,jule::Bool);
inline jule::Str _1b710e497_gen_fn_prototype(jule::Ref<_1b6069348_Fn>&,jule::Bool);
inline jule::Str _1b710e497_gen_fn_prototypes(jule::Ref<_1b623bb7a_Package>&);
inline jule::Str _1b710e497_gen_prototypes(jule::Ref<_1cdd79d22_IR>&);
inline jule::Str _1b710e497_gen_var_init_expr(jule::Ref<_1b637edab_Var>&,jule::Str);
inline jule::Str _1b710e497_gen_var(jule::Ref<_1b637edab_Var>);
inline jule::Str _1b710e497_gen_globals(jule::Slice<jule::Ref<_1b637edab_Var>>&);
inline jule::Str _1b710e497_gen_fn(jule::Ref<_1b6069348_Fn>&);
inline jule::Str _1b710e497_gen_pkg_fns(jule::Ref<_1b623bb7a_Package>&);
inline jule::Str _1b710e497_gen_struct_method_defs(jule::Ref<_1ce385eed_StructIns>&);
inline jule::Str _1b710e497_gen_struct_ostream(jule::Ref<_1ce385eed_StructIns>&);
inline jule::Str _1b710e497_gen_struct_derive_defs(jule::Ref<_1ce385eed_StructIns>&);
inline jule::Str _1b710e497_gen_struct_ins(jule::Ref<_1ce385eed_StructIns>&);
inline jule::Str _1b710e497_gen_struct(jule::Ref<_1ce385eed_Struct>&);
inline jule::Str _1b710e497_gen_structs(jule::Slice<jule::Ref<_1ce385eed_Struct>>&);
inline jule::Str _1b710e497_gen_fns(jule::Ref<_1cdd79d22_IR>&);
inline void _1b710e497_push_init(jule::Ref<_1b623bb7a_Package>&,jule::Str&);
inline jule::Str _1b710e497_gen_init_caller(jule::Ref<_1cdd79d22_IR>&);
inline void _1b710e497_append_standard(jule::Str&,jule::Str,jule::Str);
inline jule::Str _1b710e497_gen(jule::Ref<_1cdd79d22_IR>&);
inline jule::Str _1e765896c_str_repeat(jule::Str,jule::Int);
inline void _1e765896c_print_error_message(jule::Str);
inline void _1e765896c_help(jule::Slice<jule::Str>&);
inline void _1e765896c_version(jule::Slice<jule::Str>&);
inline void _1e765896c_tool_distos(void);
inline void _1e765896c_tool_distarch(void);
inline void _1e765896c_tool(jule::Slice<jule::Str>&);
inline void _1e765896c_julenv(void);
inline jule::Bool _1e765896c_process_command(jule::Slice<jule::Str>&);
inline void _1e765896c_exit_err(jule::Str);
void entry_point(void);
inline void _1e76772a4___init_common(void);
inline void _1e768e156_init(void);
inline jule::Int _1e768a251_system(jule::Str);
inline std::tuple<jule::Str,jule::Str> _1e768a251_get_option(jule::Slice<jule::Str>&,jule::Int&);
inline jule::Str _1e768a251_get_option_value(jule::Slice<jule::Str>&,jule::Int&);
inline void _1e768a251_parse_out_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _1e768a251_parse_opt_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _1e768a251_check_target_arch(jule::Str);
inline void _1e768a251_check_target_os(jule::Str);
inline void _1e768a251_parse_target_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _1e768a251_parse_compiler_option(jule::Slice<jule::Str>&,jule::Int&);
inline jule::Str _1e768a251_parse_options(jule::Slice<jule::Str>&);
inline void _1e768a251_write_output(jule::Str,jule::Str);
inline void _1e768a251_clear_objects(void);
inline void _1e768a251_compile_ir(jule::Str,jule::Str);
inline void _1e768a251_do_spell(jule::Str,jule::Str,jule::Str);
inline void _1e768a251_check_mode(void);
inline void _1e768a251_check_compiler(void);
inline void _1e768a251_set(void);
inline jule::Bool _1e768a251_is_cpp_source_file(jule::Str);
inline std::tuple<jule::Str,jule::Str> _1e768a251_gen_compile_cmd(jule::Str,jule::Ref<_1cdd79d22_IR>&);
inline jule::Str _1e768a251_get_compile_path(void);
inline void _1e768a251_apply_target_independent_optimizations(jule::Ref<_1cdd79d22_IR>&);
inline void _1e768a251_compile_command(jule::Slice<jule::Str>&);


static jule::Str _1e768a251_COMPILER = jule::Str("", 0);
static jule::Str _1e768a251_COMPILER_PATH = jule::Str("", 0);
static jule::Str _1e768a251_OUT_DIR = jule::Str("dist", 4);
static jule::Int _1e768a251_MODE = 0LLU;
static jule::Str _1e768a251_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Str _1e768a251_OUT = jule::Str("", 0);
static jule::Str _1e768a251_CPP_STD = jule::Str("c++17", 5);
static jule::Int _1e768a251_SEMA_FLAGS = 0LL;
static jule::Uintptr _1e77e85e0_STDIN = 0LLU;
static jule::Uintptr _1e77e85e0_STDOUT = 1LLU;
static jule::Uintptr _1e77e85e0_STDERR = 2LLU;
static jule::Array<jule::Str,4> _1e7691048_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _1e7691048_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _1e7691048_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Array<jule::Str,6> _1e768bede_DIRECTIVES = jule::Array<jule::Str,6>({jule::Str("cdef", 4),jule::Str("typedef", 7),jule::Str("derive", 6),jule::Str("pass", 4),jule::Str("build", 5),jule::Str("namespace", 9)});
static jule::Array<jule::Str,3> _1e7731968_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,3> _1e7731968_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _1e77372ed_PATH_STDLIB = jule::Str("", 0);
static jule::Str _1e77372ed_PATH_EXEC = jule::Str("", 0);
static jule::Str _1e77372ed_PATH_WD = jule::Str("", 0);
static jule::Str _1e77372ed_PATH_API = jule::Str("", 0);
static jule::Array<jule::U8,32> _1ce399a6c_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _1ce399a6c_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static jule::Trait<jule::Error> _1ce43d858_OVERFLOW_ERROR = jule::new_struct<_1ce43d858_bits_error>(new( std::nothrow ) _1ce43d858_bits_error(jule::Str("integer overflow", 16)));
static jule::Trait<jule::Error> _1ce43d858_DIVIDE_ERROR = jule::new_struct<_1ce43d858_bits_error>(new( std::nothrow ) _1ce43d858_bits_error(jule::Str("integer divide by zero", 22)));
static jule::Array<jule::F64,6> _1cdd1c545__SIN = jule::Array<jule::F64,6>({0.00000000015896230157654656,-0.000000025050747762857807,0.0000027557313621385722,-0.0001984126982958954,0.008333333333322118,-0.1666666666666663});
static jule::Array<jule::F64,6> _1cdd1c545__COS = jule::Array<jule::F64,6>({-0.000000000011358536521387682,0.000000002087570084197473,-0.0000002755731417929674,0.000024801587288851704,-0.0013888888888873056,0.041666666666666595});
static jule::Array<jule::F64,3> _1cdd0066b__TAN_P = jule::Array<jule::F64,3>({-13093.693918138379,1153516.6483858742,-17956525.197648488});
static jule::Array<jule::F64,5> _1cdd0066b__TAN_Q = jule::Array<jule::F64,5>({1LL,13681.296347069296,-1320892.3444021097,25008380.18233579,-53869575.592945464});
static jule::Array<jule::U64,20> _1cdd733c0_M_PI4 = jule::Array<jule::U64,20>({1LLU,5040379952546458195LLU,17892431488136887169LLU,13169980181085364355LLU,18204331823439776451LLU,7946843935494350272LLU,905889640498799673LLU,18175356263134875261LLU,15061281708168349961LLU,15220161563773041794LLU,8296664548579374057LLU,4109744767560208502LLU,4607516669194743839LLU,16023283104648321598LLU,15739233654134936430LLU,11424645774684705882LLU,16883842788696515318LLU,8795094592981902804LLU,15561835991111744016LLU,12395701187267450711LLU});
static jule::Array<jule::F64,6> _1cddeabd9_P_1R8 = jule::Array<jule::F64,6>({0LL,0.11718749999998865,13.239480659307358,412.05185430737856,3874.7453891396053,7914.479540318917});
static jule::Array<jule::F64,5> _1cddeabd9_P_1S8 = jule::Array<jule::F64,5>({114.20737037567841,3650.9308342085346,36956.206026903346,97602.79359349508,30804.27206278888});
static jule::Array<jule::F64,6> _1cddeabd9_P_1R5 = jule::Array<jule::F64,6>({0.000000000013199051955624352,0.1171874931906141,6.802751278684329,108.30818299018911,517.6361395331998,528.7152013633375});
static jule::Array<jule::F64,5> _1cddeabd9_P_1S5 = jule::Array<jule::F64,5>({59.28059872211313,991.4014187336144,5353.26695291488,7844.690317495512,1504.0468881036106});
static jule::Array<jule::F64,6> _1cddeabd9_P_1R3 = jule::Array<jule::F64,6>({0.000000003025039161373736,0.11718686556725359,3.9329775003331564,35.11940355916369,91.05501107507813,48.55906851973649});
static jule::Array<jule::F64,5> _1cddeabd9_P_1S3 = jule::Array<jule::F64,5>({34.79130950012515,336.76245874782575,1046.8713997577513,890.8113463982564,103.78793243963928});
static jule::Array<jule::F64,6> _1cddeabd9_P_1R2 = jule::Array<jule::F64,6>({0.00000010771083010687374,0.11717621946268335,2.368514966676088,12.242610914826123,17.693971127168773,5.073523125888185});
static jule::Array<jule::F64,5> _1cddeabd9_P_1S2 = jule::Array<jule::F64,5>({21.43648593638214,125.29022716840275,232.2764690571628,117.6793732871471,8.364638933716183});
static jule::Array<jule::F64,6> _1cddeabd9_Q_1R8 = jule::Array<jule::F64,6>({0LL,-0.10253906249999271,-16.271753454459,-759.6017225139501,-11849.806670242959,-48438.512428575035});
static jule::Array<jule::F64,6> _1cddeabd9_Q_1S8 = jule::Array<jule::F64,6>({161.3953697007229,7825.385999233485,133875.33628724958,719657.7236832409,666601.2326177764,-294490.26430383464});
static jule::Array<jule::F64,6> _1cddeabd9_Q_1R5 = jule::Array<jule::F64,6>({-0.00000000002089799311417641,-0.10253905024137543,-8.05644828123936,-183.66960747488838,-1373.1937606550816,-2612.4444045321566});
static jule::Array<jule::F64,6> _1cddeabd9_Q_1S5 = jule::Array<jule::F64,6>({81.27655013843358,1991.7987346048596,17468.48519249089,49851.42709103523,27948.075163891812,-4719.183547951285});
static jule::Array<jule::F64,6> _1cddeabd9_Q_1R3 = jule::Array<jule::F64,6>({-0.000000005078312264617666,-0.10253782982083709,-4.610115811394734,-57.847221656278364,-228.2445407376317,-219.21012847890933});
static jule::Array<jule::F64,6> _1cddeabd9_Q_1S3 = jule::Array<jule::F64,6>({47.66515503237295,673.8651126766997,3380.1528667952634,5547.729097207228,1903.119193388108,-135.20119144430734});
static jule::Array<jule::F64,6> _1cddeabd9_Q_1R2 = jule::Array<jule::F64,6>({-0.00000017838172751095887,-0.10251704260798555,-2.7522056827818746,-19.663616264370372,-42.32531333728305,-21.371921170370406});
static jule::Array<jule::F64,6> _1cddeabd9_Q_1S2 = jule::Array<jule::F64,6>({29.533362906052385,252.98154998219053,757.5028348686454,739.3932053204672,155.94900333666612,-4.959498988226282});
static jule::Array<jule::F64,6> _1ce04ca0b_P_0R8 = jule::Array<jule::F64,6>({0LL,-0.07031249999999004,-8.081670412753498,-257.06310567970485,-2485.216410094288,-5253.043804907295});
static jule::Array<jule::F64,5> _1ce04ca0b_P_0S8 = jule::Array<jule::F64,5>({116.53436461966818,3833.7447536412183,40597.857264847255,116752.97256437592,47627.728414673096});
static jule::Array<jule::F64,6> _1ce04ca0b_P_0R5 = jule::Array<jule::F64,6>({-0.00000000001141254646918945,-0.07031249408735993,-4.159610644705878,-67.67476522651673,-331.23129964917297,-346.4333883656049});
static jule::Array<jule::F64,5> _1ce04ca0b_P_0S5 = jule::Array<jule::F64,5>({60.753938269230034,1051.2523059570458,5978.970943338558,9625.445143577745,2406.058159229391});
static jule::Array<jule::F64,6> _1ce04ca0b_P_0R3 = jule::Array<jule::F64,6>({-0.000000002547046017719519,-0.07031196163814817,-2.409032215495296,-21.96597747348831,-58.07917047017376,-31.44794705948885});
static jule::Array<jule::F64,5> _1ce04ca0b_P_0S3 = jule::Array<jule::F64,5>({35.85603380552097,361.51398305030386,1193.6078379211153,1127.9967985690741,173.58093081333575});
static jule::Array<jule::F64,6> _1ce04ca0b_P_0R2 = jule::Array<jule::F64,6>({-0.00000008875343330325264,-0.07030309954836247,-1.4507384678095299,-7.635696138235278,-11.193166886035675,-3.2336457935133534});
static jule::Array<jule::F64,5> _1ce04ca0b_P_0S2 = jule::Array<jule::F64,5>({22.22029975320888,136.2067942182152,270.4702786580835,153.87539420832033,14.65761769482562});
static jule::Array<jule::F64,6> _1ce04ca0b_Q_0R8 = jule::Array<jule::F64,6>({0LL,0.0732421874999935,11.76820646822527,557.6733802564019,8859.197207564686,37014.62677768878});
static jule::Array<jule::F64,6> _1ce04ca0b_Q_0S8 = jule::Array<jule::F64,6>({163.77602689568982,8098.344946564498,142538.29141912048,803309.2571195144,840501.5798190605,-343899.2935378666});
static jule::Array<jule::F64,6> _1ce04ca0b_Q_0R5 = jule::Array<jule::F64,6>({0.000000000018408596359451553,0.07324217666126848,5.8356350896205695,135.11157728644983,1027.243765961641,1989.9778586460538});
static jule::Array<jule::F64,6> _1ce04ca0b_Q_0S5 = jule::Array<jule::F64,6>({82.77661022365378,2077.81416421393,18847.28877857181,56751.11228949473,35976.75384251145,-5354.342756019448});
static jule::Array<jule::F64,6> _1ce04ca0b_Q_0R3 = jule::Array<jule::F64,6>({0.000000004377410140897386,0.07324111800429114,3.344231375161707,42.621844074541265,170.8080913405656,166.73394869665117});
static jule::Array<jule::F64,6> _1ce04ca0b_Q_0S3 = jule::Array<jule::F64,6>({48.75887297245872,709.689221056606,3704.1482262011136,6460.425167525689,2516.3336892036896,-149.2474518361564});
static jule::Array<jule::F64,6> _1ce04ca0b_Q_0R2 = jule::Array<jule::F64,6>({0.00000015044444488698327,0.07322342659630793,1.99819174093816,14.495602934788574,31.666231750478154,16.252707571092927});
static jule::Array<jule::F64,6> _1ce04ca0b_Q_0S2 = jule::Array<jule::F64,6>({30.36558483552192,269.34811860804984,844.7837575953201,882.9358451124886,212.66638851179883,-5.3109549388266695});
static jule::Array<jule::F64,12> _1ce0d9449__LGAM_A = jule::Array<jule::F64,12>({0.07721566490153287,0.3224670334241136,0.06735230105312927,0.020580808432516733,0.007385550860814029,0.0028905138367341563,0.0011927076318336207,0.0005100697921535113,0.00022086279071390839,0.00010801156724758394,0.000025214456545125733,0.000044864094961891516});
static jule::Array<jule::F64,7> _1ce0d9449__LGAM_R = jule::Array<jule::F64,7>({1LL,1.3920053346762105,0.7219355475671381,0.17193386563280308,0.01864591917156529,0.0007779424963818936,0.000007326684307446256});
static jule::Array<jule::F64,7> _1ce0d9449__LGAM_S = jule::Array<jule::F64,7>({-0.07721566490153287,0.21498241596060885,0.325778796408931,0.14635047265246445,0.02664227030336386,0.0018402845140733772,0.00003194753265841009});
static jule::Array<jule::F64,15> _1ce0d9449__LGAM_T = jule::Array<jule::F64,15>({0.48383612272381005,-0.1475877229945939,0.06462494023913339,-0.032788541075985965,0.01797067508118204,-0.010314224129834144,0.006100538702462913,-0.0036845201678113826,0.0022596478090061247,-0.0014034646998923284,0.000881081882437654,-0.0005385953053567405,0.00031563207090362595,-0.00031275416837512086,0.0003355291926355191});
static jule::Array<jule::F64,6> _1ce0d9449__LGAM_U = jule::Array<jule::F64,6>({-0.07721566490153287,0.6328270640250934,1.4549225013723477,0.9777175279633727,0.22896372806469245,0.013381091853678766});
static jule::Array<jule::F64,6> _1ce0d9449__LGAM_V = jule::Array<jule::F64,6>({1LL,2.4559779371304113,2.128489763798934,0.7692851504566728,0.10422264559336913,0.003217092422824239});
static jule::Array<jule::F64,7> _1ce0d9449__LGAM_W = jule::Array<jule::F64,7>({0.4189385332046727,0.08333333333333297,-0.0027777777772877554,0.0007936505586430196,-0.00059518755745034,0.0008363399189962821,-0.0016309293409657527});
static jule::Array<jule::F64,3> _1ce141539_TANH_P = jule::Array<jule::F64,3>({-0.9643991794250523,-99.28772310019185,-1614.6876844170845});
static jule::Array<jule::F64,3> _1ce141539_TANH_Q = jule::Array<jule::F64,3>({112.81167849163293,2235.4883906010045,4844.063053251255});
static jule::Array<jule::F64,7> _1ce171aec__GAM_P = jule::Array<jule::F64,7>({0.00016011952247675185,0.0011913514700658638,0.010421379756176158,0.04763678004571372,0.20744822764843598,0.4942148268014971,1LL});
static jule::Array<jule::F64,8> _1ce171aec__GAM_Q = jule::Array<jule::F64,8>({-0.000023158187332412014,0.0005396055804933034,-0.004456419138517973,0.011813978522206043,0.035823639860549865,-0.23459179571824335,0.0714304917030273,1LL});
static jule::Array<jule::F64,5> _1ce171aec__GAM_S = jule::Array<jule::F64,5>({0.0007873113957930937,-0.00022954996161337813,-0.0026813261780578124,0.0034722222160545866,0.08333333333334822});
static jule::Array<jule::F64,32> _1ce1c518e_POW10_TAB = jule::Array<jule::F64,32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0,100000000000000000000000.0,1000000000000000000000000.0,10000000000000000000000000.0,100000000000000000000000000.0,1000000000000000000000000000.0,10000000000000000000000000000.0,100000000000000000000000000000.0,1000000000000000000000000000000.0,10000000000000000000000000000000.0});
static jule::Array<jule::F64,10> _1ce1c518e_POW10_POSTAB32 = jule::Array<jule::F64,10>({1LL,100000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0});
static jule::Array<jule::F64,11> _1ce1c518e_POW10_NEGTAB32 = jule::Array<jule::F64,11>({1LL,0.00000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001});
static _1e770c537_FloatInfo _1e770c537_F32_INFO = _1e770c537_FloatInfo(23LLU,8LLU,-127LL);
static _1e770c537_FloatInfo _1e770c537_F64_INFO = _1e770c537_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _1e7716530_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _1e857a7c2_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _1e857a7c2_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
static jule::Slice<jule::F32> _1e857a7c2_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
static jule::Array<jule::U64,20> _1e86eaaa7_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_1e878448c_LeftCheat> _1e878448c_LEFTCHEATS = jule::Slice<_1e878448c_LeftCheat>({_1e878448c_LeftCheat(0LL,jule::Str("", 0)),_1e878448c_LeftCheat(1LL,jule::Str("5", 1)),_1e878448c_LeftCheat(1LL,jule::Str("25", 2)),_1e878448c_LeftCheat(1LL,jule::Str("125", 3)),_1e878448c_LeftCheat(2LL,jule::Str("625", 3)),_1e878448c_LeftCheat(2LL,jule::Str("3125", 4)),_1e878448c_LeftCheat(2LL,jule::Str("15625", 5)),_1e878448c_LeftCheat(3LL,jule::Str("78125", 5)),_1e878448c_LeftCheat(3LL,jule::Str("390625", 6)),_1e878448c_LeftCheat(3LL,jule::Str("1953125", 7)),_1e878448c_LeftCheat(4LL,jule::Str("9765625", 7)),_1e878448c_LeftCheat(4LL,jule::Str("48828125", 8)),_1e878448c_LeftCheat(4LL,jule::Str("244140625", 9)),_1e878448c_LeftCheat(4LL,jule::Str("1220703125", 10)),_1e878448c_LeftCheat(5LL,jule::Str("6103515625", 10)),_1e878448c_LeftCheat(5LL,jule::Str("30517578125", 11)),_1e878448c_LeftCheat(5LL,jule::Str("152587890625", 12)),_1e878448c_LeftCheat(6LL,jule::Str("762939453125", 12)),_1e878448c_LeftCheat(6LL,jule::Str("3814697265625", 13)),_1e878448c_LeftCheat(6LL,jule::Str("19073486328125", 14)),_1e878448c_LeftCheat(7LL,jule::Str("95367431640625", 14)),_1e878448c_LeftCheat(7LL,jule::Str("476837158203125", 15)),_1e878448c_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_1e878448c_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_1e878448c_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_1e878448c_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_1e878448c_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_1e878448c_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_1e878448c_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_1e878448c_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_1e878448c_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_1e878448c_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_1e878448c_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_1e878448c_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_1e878448c_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_1e878448c_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_1e878448c_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_1e878448c_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_1e878448c_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_1e878448c_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_1e878448c_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_1e878448c_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_1e878448c_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_1e878448c_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_1e878448c_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_1e878448c_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_1e878448c_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_1e878448c_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_1e878448c_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_1e878448c_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_1e878448c_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_1e878448c_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_1e878448c_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_1e878448c_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_1e878448c_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_1e878448c_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_1e878448c_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_1e878448c_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_1e878448c_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_1e878448c_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_1e878448c_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Slice<jule::Str> _1ce1465e9_OPTIMIZATIONS = nullptr;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__C = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(0LLU,31LLU,1LLU),_1b5a4a7db_Range16(127LLU,159LLU,1LLU),_1b5a4a7db_Range16(173LLU,1536LLU,1363LLU),_1b5a4a7db_Range16(1537LLU,1541LLU,1LLU),_1b5a4a7db_Range16(1564LLU,1757LLU,193LLU),_1b5a4a7db_Range16(1807LLU,2192LLU,385LLU),_1b5a4a7db_Range16(2193LLU,2274LLU,81LLU),_1b5a4a7db_Range16(6158LLU,8203LLU,2045LLU),_1b5a4a7db_Range16(8204LLU,8207LLU,1LLU),_1b5a4a7db_Range16(8234LLU,8238LLU,1LLU),_1b5a4a7db_Range16(8288LLU,8292LLU,1LLU),_1b5a4a7db_Range16(8294LLU,8303LLU,1LLU),_1b5a4a7db_Range16(55296LLU,63743LLU,1LLU),_1b5a4a7db_Range16(65279LLU,65529LLU,250LLU),_1b5a4a7db_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69821LLU,69837LLU,16LLU),_1b5a4a7db_Range32(78896LLU,78911LLU,1LLU),_1b5a4a7db_Range32(113824LLU,113827LLU,1LLU),_1b5a4a7db_Range32(119155LLU,119162LLU,1LLU),_1b5a4a7db_Range32(917505LLU,917536LLU,31LLU),_1b5a4a7db_Range32(917537LLU,917631LLU,1LLU),_1b5a4a7db_Range32(983040LLU,1048573LLU,1LLU),_1b5a4a7db_Range32(1048576LLU,1114109LLU,1LLU)}),2LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(0LLU,31LLU,1LLU),_1b5a4a7db_Range16(127LLU,159LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),2LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CF = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(173LLU,1536LLU,1363LLU),_1b5a4a7db_Range16(1537LLU,1541LLU,1LLU),_1b5a4a7db_Range16(1564LLU,1757LLU,193LLU),_1b5a4a7db_Range16(1807LLU,2192LLU,385LLU),_1b5a4a7db_Range16(2193LLU,2274LLU,81LLU),_1b5a4a7db_Range16(6158LLU,8203LLU,2045LLU),_1b5a4a7db_Range16(8204LLU,8207LLU,1LLU),_1b5a4a7db_Range16(8234LLU,8238LLU,1LLU),_1b5a4a7db_Range16(8288LLU,8292LLU,1LLU),_1b5a4a7db_Range16(8294LLU,8303LLU,1LLU),_1b5a4a7db_Range16(65279LLU,65529LLU,250LLU),_1b5a4a7db_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69821LLU,69837LLU,16LLU),_1b5a4a7db_Range32(78896LLU,78911LLU,1LLU),_1b5a4a7db_Range32(113824LLU,113827LLU,1LLU),_1b5a4a7db_Range32(119155LLU,119162LLU,1LLU),_1b5a4a7db_Range32(917505LLU,917536LLU,31LLU),_1b5a4a7db_Range32(917537LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(57344LLU,63743LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(983040LLU,1048573LLU,1LLU),_1b5a4a7db_Range32(1048576LLU,1114109LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CS = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(55296LLU,57343LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__L = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(65LLU,90LLU,1LLU),_1b5a4a7db_Range16(97LLU,122LLU,1LLU),_1b5a4a7db_Range16(170LLU,181LLU,11LLU),_1b5a4a7db_Range16(186LLU,192LLU,6LLU),_1b5a4a7db_Range16(193LLU,214LLU,1LLU),_1b5a4a7db_Range16(216LLU,246LLU,1LLU),_1b5a4a7db_Range16(248LLU,705LLU,1LLU),_1b5a4a7db_Range16(710LLU,721LLU,1LLU),_1b5a4a7db_Range16(736LLU,740LLU,1LLU),_1b5a4a7db_Range16(748LLU,750LLU,2LLU),_1b5a4a7db_Range16(880LLU,884LLU,1LLU),_1b5a4a7db_Range16(886LLU,887LLU,1LLU),_1b5a4a7db_Range16(890LLU,893LLU,1LLU),_1b5a4a7db_Range16(895LLU,902LLU,7LLU),_1b5a4a7db_Range16(904LLU,906LLU,1LLU),_1b5a4a7db_Range16(908LLU,910LLU,2LLU),_1b5a4a7db_Range16(911LLU,929LLU,1LLU),_1b5a4a7db_Range16(931LLU,1013LLU,1LLU),_1b5a4a7db_Range16(1015LLU,1153LLU,1LLU),_1b5a4a7db_Range16(1162LLU,1327LLU,1LLU),_1b5a4a7db_Range16(1329LLU,1366LLU,1LLU),_1b5a4a7db_Range16(1369LLU,1376LLU,7LLU),_1b5a4a7db_Range16(1377LLU,1416LLU,1LLU),_1b5a4a7db_Range16(1488LLU,1514LLU,1LLU),_1b5a4a7db_Range16(1519LLU,1522LLU,1LLU),_1b5a4a7db_Range16(1568LLU,1610LLU,1LLU),_1b5a4a7db_Range16(1646LLU,1647LLU,1LLU),_1b5a4a7db_Range16(1649LLU,1747LLU,1LLU),_1b5a4a7db_Range16(1749LLU,1765LLU,16LLU),_1b5a4a7db_Range16(1766LLU,1774LLU,8LLU),_1b5a4a7db_Range16(1775LLU,1786LLU,11LLU),_1b5a4a7db_Range16(1787LLU,1788LLU,1LLU),_1b5a4a7db_Range16(1791LLU,1808LLU,17LLU),_1b5a4a7db_Range16(1810LLU,1839LLU,1LLU),_1b5a4a7db_Range16(1869LLU,1957LLU,1LLU),_1b5a4a7db_Range16(1969LLU,1994LLU,25LLU),_1b5a4a7db_Range16(1995LLU,2026LLU,1LLU),_1b5a4a7db_Range16(2036LLU,2037LLU,1LLU),_1b5a4a7db_Range16(2042LLU,2048LLU,6LLU),_1b5a4a7db_Range16(2049LLU,2069LLU,1LLU),_1b5a4a7db_Range16(2074LLU,2084LLU,10LLU),_1b5a4a7db_Range16(2088LLU,2112LLU,24LLU),_1b5a4a7db_Range16(2113LLU,2136LLU,1LLU),_1b5a4a7db_Range16(2144LLU,2154LLU,1LLU),_1b5a4a7db_Range16(2160LLU,2183LLU,1LLU),_1b5a4a7db_Range16(2185LLU,2190LLU,1LLU),_1b5a4a7db_Range16(2208LLU,2249LLU,1LLU),_1b5a4a7db_Range16(2308LLU,2361LLU,1LLU),_1b5a4a7db_Range16(2365LLU,2384LLU,19LLU),_1b5a4a7db_Range16(2392LLU,2401LLU,1LLU),_1b5a4a7db_Range16(2417LLU,2432LLU,1LLU),_1b5a4a7db_Range16(2437LLU,2444LLU,1LLU),_1b5a4a7db_Range16(2447LLU,2448LLU,1LLU),_1b5a4a7db_Range16(2451LLU,2472LLU,1LLU),_1b5a4a7db_Range16(2474LLU,2480LLU,1LLU),_1b5a4a7db_Range16(2482LLU,2486LLU,4LLU),_1b5a4a7db_Range16(2487LLU,2489LLU,1LLU),_1b5a4a7db_Range16(2493LLU,2510LLU,17LLU),_1b5a4a7db_Range16(2524LLU,2525LLU,1LLU),_1b5a4a7db_Range16(2527LLU,2529LLU,1LLU),_1b5a4a7db_Range16(2544LLU,2545LLU,1LLU),_1b5a4a7db_Range16(2556LLU,2565LLU,9LLU),_1b5a4a7db_Range16(2566LLU,2570LLU,1LLU),_1b5a4a7db_Range16(2575LLU,2576LLU,1LLU),_1b5a4a7db_Range16(2579LLU,2600LLU,1LLU),_1b5a4a7db_Range16(2602LLU,2608LLU,1LLU),_1b5a4a7db_Range16(2610LLU,2611LLU,1LLU),_1b5a4a7db_Range16(2613LLU,2614LLU,1LLU),_1b5a4a7db_Range16(2616LLU,2617LLU,1LLU),_1b5a4a7db_Range16(2649LLU,2652LLU,1LLU),_1b5a4a7db_Range16(2654LLU,2674LLU,20LLU),_1b5a4a7db_Range16(2675LLU,2676LLU,1LLU),_1b5a4a7db_Range16(2693LLU,2701LLU,1LLU),_1b5a4a7db_Range16(2703LLU,2705LLU,1LLU),_1b5a4a7db_Range16(2707LLU,2728LLU,1LLU),_1b5a4a7db_Range16(2730LLU,2736LLU,1LLU),_1b5a4a7db_Range16(2738LLU,2739LLU,1LLU),_1b5a4a7db_Range16(2741LLU,2745LLU,1LLU),_1b5a4a7db_Range16(2749LLU,2768LLU,19LLU),_1b5a4a7db_Range16(2784LLU,2785LLU,1LLU),_1b5a4a7db_Range16(2809LLU,2821LLU,12LLU),_1b5a4a7db_Range16(2822LLU,2828LLU,1LLU),_1b5a4a7db_Range16(2831LLU,2832LLU,1LLU),_1b5a4a7db_Range16(2835LLU,2856LLU,1LLU),_1b5a4a7db_Range16(2858LLU,2864LLU,1LLU),_1b5a4a7db_Range16(2866LLU,2867LLU,1LLU),_1b5a4a7db_Range16(2869LLU,2873LLU,1LLU),_1b5a4a7db_Range16(2877LLU,2908LLU,31LLU),_1b5a4a7db_Range16(2909LLU,2911LLU,2LLU),_1b5a4a7db_Range16(2912LLU,2913LLU,1LLU),_1b5a4a7db_Range16(2929LLU,2947LLU,18LLU),_1b5a4a7db_Range16(2949LLU,2954LLU,1LLU),_1b5a4a7db_Range16(2958LLU,2960LLU,1LLU),_1b5a4a7db_Range16(2962LLU,2965LLU,1LLU),_1b5a4a7db_Range16(2969LLU,2970LLU,1LLU),_1b5a4a7db_Range16(2972LLU,2974LLU,2LLU),_1b5a4a7db_Range16(2975LLU,2979LLU,4LLU),_1b5a4a7db_Range16(2980LLU,2984LLU,4LLU),_1b5a4a7db_Range16(2985LLU,2986LLU,1LLU),_1b5a4a7db_Range16(2990LLU,3001LLU,1LLU),_1b5a4a7db_Range16(3024LLU,3077LLU,53LLU),_1b5a4a7db_Range16(3078LLU,3084LLU,1LLU),_1b5a4a7db_Range16(3086LLU,3088LLU,1LLU),_1b5a4a7db_Range16(3090LLU,3112LLU,1LLU),_1b5a4a7db_Range16(3114LLU,3129LLU,1LLU),_1b5a4a7db_Range16(3133LLU,3160LLU,27LLU),_1b5a4a7db_Range16(3161LLU,3162LLU,1LLU),_1b5a4a7db_Range16(3165LLU,3168LLU,3LLU),_1b5a4a7db_Range16(3169LLU,3200LLU,31LLU),_1b5a4a7db_Range16(3205LLU,3212LLU,1LLU),_1b5a4a7db_Range16(3214LLU,3216LLU,1LLU),_1b5a4a7db_Range16(3218LLU,3240LLU,1LLU),_1b5a4a7db_Range16(3242LLU,3251LLU,1LLU),_1b5a4a7db_Range16(3253LLU,3257LLU,1LLU),_1b5a4a7db_Range16(3261LLU,3293LLU,32LLU),_1b5a4a7db_Range16(3294LLU,3296LLU,2LLU),_1b5a4a7db_Range16(3297LLU,3313LLU,16LLU),_1b5a4a7db_Range16(3314LLU,3332LLU,18LLU),_1b5a4a7db_Range16(3333LLU,3340LLU,1LLU),_1b5a4a7db_Range16(3342LLU,3344LLU,1LLU),_1b5a4a7db_Range16(3346LLU,3386LLU,1LLU),_1b5a4a7db_Range16(3389LLU,3406LLU,17LLU),_1b5a4a7db_Range16(3412LLU,3414LLU,1LLU),_1b5a4a7db_Range16(3423LLU,3425LLU,1LLU),_1b5a4a7db_Range16(3450LLU,3455LLU,1LLU),_1b5a4a7db_Range16(3461LLU,3478LLU,1LLU),_1b5a4a7db_Range16(3482LLU,3505LLU,1LLU),_1b5a4a7db_Range16(3507LLU,3515LLU,1LLU),_1b5a4a7db_Range16(3517LLU,3520LLU,3LLU),_1b5a4a7db_Range16(3521LLU,3526LLU,1LLU),_1b5a4a7db_Range16(3585LLU,3632LLU,1LLU),_1b5a4a7db_Range16(3634LLU,3635LLU,1LLU),_1b5a4a7db_Range16(3648LLU,3654LLU,1LLU),_1b5a4a7db_Range16(3713LLU,3714LLU,1LLU),_1b5a4a7db_Range16(3716LLU,3718LLU,2LLU),_1b5a4a7db_Range16(3719LLU,3722LLU,1LLU),_1b5a4a7db_Range16(3724LLU,3747LLU,1LLU),_1b5a4a7db_Range16(3749LLU,3751LLU,2LLU),_1b5a4a7db_Range16(3752LLU,3760LLU,1LLU),_1b5a4a7db_Range16(3762LLU,3763LLU,1LLU),_1b5a4a7db_Range16(3773LLU,3776LLU,3LLU),_1b5a4a7db_Range16(3777LLU,3780LLU,1LLU),_1b5a4a7db_Range16(3782LLU,3804LLU,22LLU),_1b5a4a7db_Range16(3805LLU,3807LLU,1LLU),_1b5a4a7db_Range16(3840LLU,3904LLU,64LLU),_1b5a4a7db_Range16(3905LLU,3911LLU,1LLU),_1b5a4a7db_Range16(3913LLU,3948LLU,1LLU),_1b5a4a7db_Range16(3976LLU,3980LLU,1LLU),_1b5a4a7db_Range16(4096LLU,4138LLU,1LLU),_1b5a4a7db_Range16(4159LLU,4176LLU,17LLU),_1b5a4a7db_Range16(4177LLU,4181LLU,1LLU),_1b5a4a7db_Range16(4186LLU,4189LLU,1LLU),_1b5a4a7db_Range16(4193LLU,4197LLU,4LLU),_1b5a4a7db_Range16(4198LLU,4206LLU,8LLU),_1b5a4a7db_Range16(4207LLU,4208LLU,1LLU),_1b5a4a7db_Range16(4213LLU,4225LLU,1LLU),_1b5a4a7db_Range16(4238LLU,4256LLU,18LLU),_1b5a4a7db_Range16(4257LLU,4293LLU,1LLU),_1b5a4a7db_Range16(4295LLU,4301LLU,6LLU),_1b5a4a7db_Range16(4304LLU,4346LLU,1LLU),_1b5a4a7db_Range16(4348LLU,4680LLU,1LLU),_1b5a4a7db_Range16(4682LLU,4685LLU,1LLU),_1b5a4a7db_Range16(4688LLU,4694LLU,1LLU),_1b5a4a7db_Range16(4696LLU,4698LLU,2LLU),_1b5a4a7db_Range16(4699LLU,4701LLU,1LLU),_1b5a4a7db_Range16(4704LLU,4744LLU,1LLU),_1b5a4a7db_Range16(4746LLU,4749LLU,1LLU),_1b5a4a7db_Range16(4752LLU,4784LLU,1LLU),_1b5a4a7db_Range16(4786LLU,4789LLU,1LLU),_1b5a4a7db_Range16(4792LLU,4798LLU,1LLU),_1b5a4a7db_Range16(4800LLU,4802LLU,2LLU),_1b5a4a7db_Range16(4803LLU,4805LLU,1LLU),_1b5a4a7db_Range16(4808LLU,4822LLU,1LLU),_1b5a4a7db_Range16(4824LLU,4880LLU,1LLU),_1b5a4a7db_Range16(4882LLU,4885LLU,1LLU),_1b5a4a7db_Range16(4888LLU,4954LLU,1LLU),_1b5a4a7db_Range16(4992LLU,5007LLU,1LLU),_1b5a4a7db_Range16(5024LLU,5109LLU,1LLU),_1b5a4a7db_Range16(5112LLU,5117LLU,1LLU),_1b5a4a7db_Range16(5121LLU,5740LLU,1LLU),_1b5a4a7db_Range16(5743LLU,5759LLU,1LLU),_1b5a4a7db_Range16(5761LLU,5786LLU,1LLU),_1b5a4a7db_Range16(5792LLU,5866LLU,1LLU),_1b5a4a7db_Range16(5873LLU,5880LLU,1LLU),_1b5a4a7db_Range16(5888LLU,5905LLU,1LLU),_1b5a4a7db_Range16(5919LLU,5937LLU,1LLU),_1b5a4a7db_Range16(5952LLU,5969LLU,1LLU),_1b5a4a7db_Range16(5984LLU,5996LLU,1LLU),_1b5a4a7db_Range16(5998LLU,6000LLU,1LLU),_1b5a4a7db_Range16(6016LLU,6067LLU,1LLU),_1b5a4a7db_Range16(6103LLU,6108LLU,5LLU),_1b5a4a7db_Range16(6176LLU,6264LLU,1LLU),_1b5a4a7db_Range16(6272LLU,6276LLU,1LLU),_1b5a4a7db_Range16(6279LLU,6312LLU,1LLU),_1b5a4a7db_Range16(6314LLU,6320LLU,6LLU),_1b5a4a7db_Range16(6321LLU,6389LLU,1LLU),_1b5a4a7db_Range16(6400LLU,6430LLU,1LLU),_1b5a4a7db_Range16(6480LLU,6509LLU,1LLU),_1b5a4a7db_Range16(6512LLU,6516LLU,1LLU),_1b5a4a7db_Range16(6528LLU,6571LLU,1LLU),_1b5a4a7db_Range16(6576LLU,6601LLU,1LLU),_1b5a4a7db_Range16(6656LLU,6678LLU,1LLU),_1b5a4a7db_Range16(6688LLU,6740LLU,1LLU),_1b5a4a7db_Range16(6823LLU,6917LLU,94LLU),_1b5a4a7db_Range16(6918LLU,6963LLU,1LLU),_1b5a4a7db_Range16(6981LLU,6988LLU,1LLU),_1b5a4a7db_Range16(7043LLU,7072LLU,1LLU),_1b5a4a7db_Range16(7086LLU,7087LLU,1LLU),_1b5a4a7db_Range16(7098LLU,7141LLU,1LLU),_1b5a4a7db_Range16(7168LLU,7203LLU,1LLU),_1b5a4a7db_Range16(7245LLU,7247LLU,1LLU),_1b5a4a7db_Range16(7258LLU,7293LLU,1LLU),_1b5a4a7db_Range16(7296LLU,7304LLU,1LLU),_1b5a4a7db_Range16(7312LLU,7354LLU,1LLU),_1b5a4a7db_Range16(7357LLU,7359LLU,1LLU),_1b5a4a7db_Range16(7401LLU,7404LLU,1LLU),_1b5a4a7db_Range16(7406LLU,7411LLU,1LLU),_1b5a4a7db_Range16(7413LLU,7414LLU,1LLU),_1b5a4a7db_Range16(7418LLU,7424LLU,6LLU),_1b5a4a7db_Range16(7425LLU,7615LLU,1LLU),_1b5a4a7db_Range16(7680LLU,7957LLU,1LLU),_1b5a4a7db_Range16(7960LLU,7965LLU,1LLU),_1b5a4a7db_Range16(7968LLU,8005LLU,1LLU),_1b5a4a7db_Range16(8008LLU,8013LLU,1LLU),_1b5a4a7db_Range16(8016LLU,8023LLU,1LLU),_1b5a4a7db_Range16(8025LLU,8031LLU,2LLU),_1b5a4a7db_Range16(8032LLU,8061LLU,1LLU),_1b5a4a7db_Range16(8064LLU,8116LLU,1LLU),_1b5a4a7db_Range16(8118LLU,8124LLU,1LLU),_1b5a4a7db_Range16(8126LLU,8130LLU,4LLU),_1b5a4a7db_Range16(8131LLU,8132LLU,1LLU),_1b5a4a7db_Range16(8134LLU,8140LLU,1LLU),_1b5a4a7db_Range16(8144LLU,8147LLU,1LLU),_1b5a4a7db_Range16(8150LLU,8155LLU,1LLU),_1b5a4a7db_Range16(8160LLU,8172LLU,1LLU),_1b5a4a7db_Range16(8178LLU,8180LLU,1LLU),_1b5a4a7db_Range16(8182LLU,8188LLU,1LLU),_1b5a4a7db_Range16(8305LLU,8319LLU,14LLU),_1b5a4a7db_Range16(8336LLU,8348LLU,1LLU),_1b5a4a7db_Range16(8450LLU,8455LLU,5LLU),_1b5a4a7db_Range16(8458LLU,8467LLU,1LLU),_1b5a4a7db_Range16(8469LLU,8473LLU,4LLU),_1b5a4a7db_Range16(8474LLU,8477LLU,1LLU),_1b5a4a7db_Range16(8484LLU,8490LLU,2LLU),_1b5a4a7db_Range16(8491LLU,8493LLU,1LLU),_1b5a4a7db_Range16(8495LLU,8505LLU,1LLU),_1b5a4a7db_Range16(8508LLU,8511LLU,1LLU),_1b5a4a7db_Range16(8517LLU,8521LLU,1LLU),_1b5a4a7db_Range16(8526LLU,8579LLU,53LLU),_1b5a4a7db_Range16(8580LLU,11264LLU,2684LLU),_1b5a4a7db_Range16(11265LLU,11492LLU,1LLU),_1b5a4a7db_Range16(11499LLU,11502LLU,1LLU),_1b5a4a7db_Range16(11506LLU,11507LLU,1LLU),_1b5a4a7db_Range16(11520LLU,11557LLU,1LLU),_1b5a4a7db_Range16(11559LLU,11565LLU,6LLU),_1b5a4a7db_Range16(11568LLU,11623LLU,1LLU),_1b5a4a7db_Range16(11631LLU,11648LLU,17LLU),_1b5a4a7db_Range16(11649LLU,11670LLU,1LLU),_1b5a4a7db_Range16(11680LLU,11686LLU,1LLU),_1b5a4a7db_Range16(11688LLU,11694LLU,1LLU),_1b5a4a7db_Range16(11696LLU,11702LLU,1LLU),_1b5a4a7db_Range16(11704LLU,11710LLU,1LLU),_1b5a4a7db_Range16(11712LLU,11718LLU,1LLU),_1b5a4a7db_Range16(11720LLU,11726LLU,1LLU),_1b5a4a7db_Range16(11728LLU,11734LLU,1LLU),_1b5a4a7db_Range16(11736LLU,11742LLU,1LLU),_1b5a4a7db_Range16(11823LLU,12293LLU,470LLU),_1b5a4a7db_Range16(12294LLU,12337LLU,43LLU),_1b5a4a7db_Range16(12338LLU,12341LLU,1LLU),_1b5a4a7db_Range16(12347LLU,12348LLU,1LLU),_1b5a4a7db_Range16(12353LLU,12438LLU,1LLU),_1b5a4a7db_Range16(12445LLU,12447LLU,1LLU),_1b5a4a7db_Range16(12449LLU,12538LLU,1LLU),_1b5a4a7db_Range16(12540LLU,12543LLU,1LLU),_1b5a4a7db_Range16(12549LLU,12591LLU,1LLU),_1b5a4a7db_Range16(12593LLU,12686LLU,1LLU),_1b5a4a7db_Range16(12704LLU,12735LLU,1LLU),_1b5a4a7db_Range16(12784LLU,12799LLU,1LLU),_1b5a4a7db_Range16(13312LLU,19903LLU,1LLU),_1b5a4a7db_Range16(19968LLU,42124LLU,1LLU),_1b5a4a7db_Range16(42192LLU,42237LLU,1LLU),_1b5a4a7db_Range16(42240LLU,42508LLU,1LLU),_1b5a4a7db_Range16(42512LLU,42527LLU,1LLU),_1b5a4a7db_Range16(42538LLU,42539LLU,1LLU),_1b5a4a7db_Range16(42560LLU,42606LLU,1LLU),_1b5a4a7db_Range16(42623LLU,42653LLU,1LLU),_1b5a4a7db_Range16(42656LLU,42725LLU,1LLU),_1b5a4a7db_Range16(42775LLU,42783LLU,1LLU),_1b5a4a7db_Range16(42786LLU,42888LLU,1LLU),_1b5a4a7db_Range16(42891LLU,42954LLU,1LLU),_1b5a4a7db_Range16(42960LLU,42961LLU,1LLU),_1b5a4a7db_Range16(42963LLU,42965LLU,2LLU),_1b5a4a7db_Range16(42966LLU,42969LLU,1LLU),_1b5a4a7db_Range16(42994LLU,43009LLU,1LLU),_1b5a4a7db_Range16(43011LLU,43013LLU,1LLU),_1b5a4a7db_Range16(43015LLU,43018LLU,1LLU),_1b5a4a7db_Range16(43020LLU,43042LLU,1LLU),_1b5a4a7db_Range16(43072LLU,43123LLU,1LLU),_1b5a4a7db_Range16(43138LLU,43187LLU,1LLU),_1b5a4a7db_Range16(43250LLU,43255LLU,1LLU),_1b5a4a7db_Range16(43259LLU,43261LLU,2LLU),_1b5a4a7db_Range16(43262LLU,43274LLU,12LLU),_1b5a4a7db_Range16(43275LLU,43301LLU,1LLU),_1b5a4a7db_Range16(43312LLU,43334LLU,1LLU),_1b5a4a7db_Range16(43360LLU,43388LLU,1LLU),_1b5a4a7db_Range16(43396LLU,43442LLU,1LLU),_1b5a4a7db_Range16(43471LLU,43488LLU,17LLU),_1b5a4a7db_Range16(43489LLU,43492LLU,1LLU),_1b5a4a7db_Range16(43494LLU,43503LLU,1LLU),_1b5a4a7db_Range16(43514LLU,43518LLU,1LLU),_1b5a4a7db_Range16(43520LLU,43560LLU,1LLU),_1b5a4a7db_Range16(43584LLU,43586LLU,1LLU),_1b5a4a7db_Range16(43588LLU,43595LLU,1LLU),_1b5a4a7db_Range16(43616LLU,43638LLU,1LLU),_1b5a4a7db_Range16(43642LLU,43646LLU,4LLU),_1b5a4a7db_Range16(43647LLU,43695LLU,1LLU),_1b5a4a7db_Range16(43697LLU,43701LLU,4LLU),_1b5a4a7db_Range16(43702LLU,43705LLU,3LLU),_1b5a4a7db_Range16(43706LLU,43709LLU,1LLU),_1b5a4a7db_Range16(43712LLU,43714LLU,2LLU),_1b5a4a7db_Range16(43739LLU,43741LLU,1LLU),_1b5a4a7db_Range16(43744LLU,43754LLU,1LLU),_1b5a4a7db_Range16(43762LLU,43764LLU,1LLU),_1b5a4a7db_Range16(43777LLU,43782LLU,1LLU),_1b5a4a7db_Range16(43785LLU,43790LLU,1LLU),_1b5a4a7db_Range16(43793LLU,43798LLU,1LLU),_1b5a4a7db_Range16(43808LLU,43814LLU,1LLU),_1b5a4a7db_Range16(43816LLU,43822LLU,1LLU),_1b5a4a7db_Range16(43824LLU,43866LLU,1LLU),_1b5a4a7db_Range16(43868LLU,43881LLU,1LLU),_1b5a4a7db_Range16(43888LLU,44002LLU,1LLU),_1b5a4a7db_Range16(44032LLU,55203LLU,1LLU),_1b5a4a7db_Range16(55216LLU,55238LLU,1LLU),_1b5a4a7db_Range16(55243LLU,55291LLU,1LLU),_1b5a4a7db_Range16(63744LLU,64109LLU,1LLU),_1b5a4a7db_Range16(64112LLU,64217LLU,1LLU),_1b5a4a7db_Range16(64256LLU,64262LLU,1LLU),_1b5a4a7db_Range16(64275LLU,64279LLU,1LLU),_1b5a4a7db_Range16(64285LLU,64287LLU,2LLU),_1b5a4a7db_Range16(64288LLU,64296LLU,1LLU),_1b5a4a7db_Range16(64298LLU,64310LLU,1LLU),_1b5a4a7db_Range16(64312LLU,64316LLU,1LLU),_1b5a4a7db_Range16(64318LLU,64320LLU,2LLU),_1b5a4a7db_Range16(64321LLU,64323LLU,2LLU),_1b5a4a7db_Range16(64324LLU,64326LLU,2LLU),_1b5a4a7db_Range16(64327LLU,64433LLU,1LLU),_1b5a4a7db_Range16(64467LLU,64829LLU,1LLU),_1b5a4a7db_Range16(64848LLU,64911LLU,1LLU),_1b5a4a7db_Range16(64914LLU,64967LLU,1LLU),_1b5a4a7db_Range16(65008LLU,65019LLU,1LLU),_1b5a4a7db_Range16(65136LLU,65140LLU,1LLU),_1b5a4a7db_Range16(65142LLU,65276LLU,1LLU),_1b5a4a7db_Range16(65313LLU,65338LLU,1LLU),_1b5a4a7db_Range16(65345LLU,65370LLU,1LLU),_1b5a4a7db_Range16(65382LLU,65470LLU,1LLU),_1b5a4a7db_Range16(65474LLU,65479LLU,1LLU),_1b5a4a7db_Range16(65482LLU,65487LLU,1LLU),_1b5a4a7db_Range16(65490LLU,65495LLU,1LLU),_1b5a4a7db_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(65536LLU,65547LLU,1LLU),_1b5a4a7db_Range32(65549LLU,65574LLU,1LLU),_1b5a4a7db_Range32(65576LLU,65594LLU,1LLU),_1b5a4a7db_Range32(65596LLU,65597LLU,1LLU),_1b5a4a7db_Range32(65599LLU,65613LLU,1LLU),_1b5a4a7db_Range32(65616LLU,65629LLU,1LLU),_1b5a4a7db_Range32(65664LLU,65786LLU,1LLU),_1b5a4a7db_Range32(66176LLU,66204LLU,1LLU),_1b5a4a7db_Range32(66208LLU,66256LLU,1LLU),_1b5a4a7db_Range32(66304LLU,66335LLU,1LLU),_1b5a4a7db_Range32(66349LLU,66368LLU,1LLU),_1b5a4a7db_Range32(66370LLU,66377LLU,1LLU),_1b5a4a7db_Range32(66384LLU,66421LLU,1LLU),_1b5a4a7db_Range32(66432LLU,66461LLU,1LLU),_1b5a4a7db_Range32(66464LLU,66499LLU,1LLU),_1b5a4a7db_Range32(66504LLU,66511LLU,1LLU),_1b5a4a7db_Range32(66560LLU,66717LLU,1LLU),_1b5a4a7db_Range32(66736LLU,66771LLU,1LLU),_1b5a4a7db_Range32(66776LLU,66811LLU,1LLU),_1b5a4a7db_Range32(66816LLU,66855LLU,1LLU),_1b5a4a7db_Range32(66864LLU,66915LLU,1LLU),_1b5a4a7db_Range32(66928LLU,66938LLU,1LLU),_1b5a4a7db_Range32(66940LLU,66954LLU,1LLU),_1b5a4a7db_Range32(66956LLU,66962LLU,1LLU),_1b5a4a7db_Range32(66964LLU,66965LLU,1LLU),_1b5a4a7db_Range32(66967LLU,66977LLU,1LLU),_1b5a4a7db_Range32(66979LLU,66993LLU,1LLU),_1b5a4a7db_Range32(66995LLU,67001LLU,1LLU),_1b5a4a7db_Range32(67003LLU,67004LLU,1LLU),_1b5a4a7db_Range32(67072LLU,67382LLU,1LLU),_1b5a4a7db_Range32(67392LLU,67413LLU,1LLU),_1b5a4a7db_Range32(67424LLU,67431LLU,1LLU),_1b5a4a7db_Range32(67456LLU,67461LLU,1LLU),_1b5a4a7db_Range32(67463LLU,67504LLU,1LLU),_1b5a4a7db_Range32(67506LLU,67514LLU,1LLU),_1b5a4a7db_Range32(67584LLU,67589LLU,1LLU),_1b5a4a7db_Range32(67592LLU,67594LLU,2LLU),_1b5a4a7db_Range32(67595LLU,67637LLU,1LLU),_1b5a4a7db_Range32(67639LLU,67640LLU,1LLU),_1b5a4a7db_Range32(67644LLU,67647LLU,3LLU),_1b5a4a7db_Range32(67648LLU,67669LLU,1LLU),_1b5a4a7db_Range32(67680LLU,67702LLU,1LLU),_1b5a4a7db_Range32(67712LLU,67742LLU,1LLU),_1b5a4a7db_Range32(67808LLU,67826LLU,1LLU),_1b5a4a7db_Range32(67828LLU,67829LLU,1LLU),_1b5a4a7db_Range32(67840LLU,67861LLU,1LLU),_1b5a4a7db_Range32(67872LLU,67897LLU,1LLU),_1b5a4a7db_Range32(67968LLU,68023LLU,1LLU),_1b5a4a7db_Range32(68030LLU,68031LLU,1LLU),_1b5a4a7db_Range32(68096LLU,68112LLU,16LLU),_1b5a4a7db_Range32(68113LLU,68115LLU,1LLU),_1b5a4a7db_Range32(68117LLU,68119LLU,1LLU),_1b5a4a7db_Range32(68121LLU,68149LLU,1LLU),_1b5a4a7db_Range32(68192LLU,68220LLU,1LLU),_1b5a4a7db_Range32(68224LLU,68252LLU,1LLU),_1b5a4a7db_Range32(68288LLU,68295LLU,1LLU),_1b5a4a7db_Range32(68297LLU,68324LLU,1LLU),_1b5a4a7db_Range32(68352LLU,68405LLU,1LLU),_1b5a4a7db_Range32(68416LLU,68437LLU,1LLU),_1b5a4a7db_Range32(68448LLU,68466LLU,1LLU),_1b5a4a7db_Range32(68480LLU,68497LLU,1LLU),_1b5a4a7db_Range32(68608LLU,68680LLU,1LLU),_1b5a4a7db_Range32(68736LLU,68786LLU,1LLU),_1b5a4a7db_Range32(68800LLU,68850LLU,1LLU),_1b5a4a7db_Range32(68864LLU,68899LLU,1LLU),_1b5a4a7db_Range32(69248LLU,69289LLU,1LLU),_1b5a4a7db_Range32(69296LLU,69297LLU,1LLU),_1b5a4a7db_Range32(69376LLU,69404LLU,1LLU),_1b5a4a7db_Range32(69415LLU,69424LLU,9LLU),_1b5a4a7db_Range32(69425LLU,69445LLU,1LLU),_1b5a4a7db_Range32(69488LLU,69505LLU,1LLU),_1b5a4a7db_Range32(69552LLU,69572LLU,1LLU),_1b5a4a7db_Range32(69600LLU,69622LLU,1LLU),_1b5a4a7db_Range32(69635LLU,69687LLU,1LLU),_1b5a4a7db_Range32(69745LLU,69746LLU,1LLU),_1b5a4a7db_Range32(69749LLU,69763LLU,14LLU),_1b5a4a7db_Range32(69764LLU,69807LLU,1LLU),_1b5a4a7db_Range32(69840LLU,69864LLU,1LLU),_1b5a4a7db_Range32(69891LLU,69926LLU,1LLU),_1b5a4a7db_Range32(69956LLU,69959LLU,3LLU),_1b5a4a7db_Range32(69968LLU,70002LLU,1LLU),_1b5a4a7db_Range32(70006LLU,70019LLU,13LLU),_1b5a4a7db_Range32(70020LLU,70066LLU,1LLU),_1b5a4a7db_Range32(70081LLU,70084LLU,1LLU),_1b5a4a7db_Range32(70106LLU,70108LLU,2LLU),_1b5a4a7db_Range32(70144LLU,70161LLU,1LLU),_1b5a4a7db_Range32(70163LLU,70187LLU,1LLU),_1b5a4a7db_Range32(70207LLU,70208LLU,1LLU),_1b5a4a7db_Range32(70272LLU,70278LLU,1LLU),_1b5a4a7db_Range32(70280LLU,70282LLU,2LLU),_1b5a4a7db_Range32(70283LLU,70285LLU,1LLU),_1b5a4a7db_Range32(70287LLU,70301LLU,1LLU),_1b5a4a7db_Range32(70303LLU,70312LLU,1LLU),_1b5a4a7db_Range32(70320LLU,70366LLU,1LLU),_1b5a4a7db_Range32(70405LLU,70412LLU,1LLU),_1b5a4a7db_Range32(70415LLU,70416LLU,1LLU),_1b5a4a7db_Range32(70419LLU,70440LLU,1LLU),_1b5a4a7db_Range32(70442LLU,70448LLU,1LLU),_1b5a4a7db_Range32(70450LLU,70451LLU,1LLU),_1b5a4a7db_Range32(70453LLU,70457LLU,1LLU),_1b5a4a7db_Range32(70461LLU,70480LLU,19LLU),_1b5a4a7db_Range32(70493LLU,70497LLU,1LLU),_1b5a4a7db_Range32(70656LLU,70708LLU,1LLU),_1b5a4a7db_Range32(70727LLU,70730LLU,1LLU),_1b5a4a7db_Range32(70751LLU,70753LLU,1LLU),_1b5a4a7db_Range32(70784LLU,70831LLU,1LLU),_1b5a4a7db_Range32(70852LLU,70853LLU,1LLU),_1b5a4a7db_Range32(70855LLU,71040LLU,185LLU),_1b5a4a7db_Range32(71041LLU,71086LLU,1LLU),_1b5a4a7db_Range32(71128LLU,71131LLU,1LLU),_1b5a4a7db_Range32(71168LLU,71215LLU,1LLU),_1b5a4a7db_Range32(71236LLU,71296LLU,60LLU),_1b5a4a7db_Range32(71297LLU,71338LLU,1LLU),_1b5a4a7db_Range32(71352LLU,71424LLU,72LLU),_1b5a4a7db_Range32(71425LLU,71450LLU,1LLU),_1b5a4a7db_Range32(71488LLU,71494LLU,1LLU),_1b5a4a7db_Range32(71680LLU,71723LLU,1LLU),_1b5a4a7db_Range32(71840LLU,71903LLU,1LLU),_1b5a4a7db_Range32(71935LLU,71942LLU,1LLU),_1b5a4a7db_Range32(71945LLU,71948LLU,3LLU),_1b5a4a7db_Range32(71949LLU,71955LLU,1LLU),_1b5a4a7db_Range32(71957LLU,71958LLU,1LLU),_1b5a4a7db_Range32(71960LLU,71983LLU,1LLU),_1b5a4a7db_Range32(71999LLU,72001LLU,2LLU),_1b5a4a7db_Range32(72096LLU,72103LLU,1LLU),_1b5a4a7db_Range32(72106LLU,72144LLU,1LLU),_1b5a4a7db_Range32(72161LLU,72163LLU,2LLU),_1b5a4a7db_Range32(72192LLU,72203LLU,11LLU),_1b5a4a7db_Range32(72204LLU,72242LLU,1LLU),_1b5a4a7db_Range32(72250LLU,72272LLU,22LLU),_1b5a4a7db_Range32(72284LLU,72329LLU,1LLU),_1b5a4a7db_Range32(72349LLU,72368LLU,19LLU),_1b5a4a7db_Range32(72369LLU,72440LLU,1LLU),_1b5a4a7db_Range32(72704LLU,72712LLU,1LLU),_1b5a4a7db_Range32(72714LLU,72750LLU,1LLU),_1b5a4a7db_Range32(72768LLU,72818LLU,50LLU),_1b5a4a7db_Range32(72819LLU,72847LLU,1LLU),_1b5a4a7db_Range32(72960LLU,72966LLU,1LLU),_1b5a4a7db_Range32(72968LLU,72969LLU,1LLU),_1b5a4a7db_Range32(72971LLU,73008LLU,1LLU),_1b5a4a7db_Range32(73030LLU,73056LLU,26LLU),_1b5a4a7db_Range32(73057LLU,73061LLU,1LLU),_1b5a4a7db_Range32(73063LLU,73064LLU,1LLU),_1b5a4a7db_Range32(73066LLU,73097LLU,1LLU),_1b5a4a7db_Range32(73112LLU,73440LLU,328LLU),_1b5a4a7db_Range32(73441LLU,73458LLU,1LLU),_1b5a4a7db_Range32(73474LLU,73476LLU,2LLU),_1b5a4a7db_Range32(73477LLU,73488LLU,1LLU),_1b5a4a7db_Range32(73490LLU,73523LLU,1LLU),_1b5a4a7db_Range32(73648LLU,73728LLU,80LLU),_1b5a4a7db_Range32(73729LLU,74649LLU,1LLU),_1b5a4a7db_Range32(74880LLU,75075LLU,1LLU),_1b5a4a7db_Range32(77712LLU,77808LLU,1LLU),_1b5a4a7db_Range32(77824LLU,78895LLU,1LLU),_1b5a4a7db_Range32(78913LLU,78918LLU,1LLU),_1b5a4a7db_Range32(82944LLU,83526LLU,1LLU),_1b5a4a7db_Range32(92160LLU,92728LLU,1LLU),_1b5a4a7db_Range32(92736LLU,92766LLU,1LLU),_1b5a4a7db_Range32(92784LLU,92862LLU,1LLU),_1b5a4a7db_Range32(92880LLU,92909LLU,1LLU),_1b5a4a7db_Range32(92928LLU,92975LLU,1LLU),_1b5a4a7db_Range32(92992LLU,92995LLU,1LLU),_1b5a4a7db_Range32(93027LLU,93047LLU,1LLU),_1b5a4a7db_Range32(93053LLU,93071LLU,1LLU),_1b5a4a7db_Range32(93760LLU,93823LLU,1LLU),_1b5a4a7db_Range32(93952LLU,94026LLU,1LLU),_1b5a4a7db_Range32(94032LLU,94099LLU,67LLU),_1b5a4a7db_Range32(94100LLU,94111LLU,1LLU),_1b5a4a7db_Range32(94176LLU,94177LLU,1LLU),_1b5a4a7db_Range32(94179LLU,94208LLU,29LLU),_1b5a4a7db_Range32(94209LLU,100343LLU,1LLU),_1b5a4a7db_Range32(100352LLU,101589LLU,1LLU),_1b5a4a7db_Range32(101632LLU,101640LLU,1LLU),_1b5a4a7db_Range32(110576LLU,110579LLU,1LLU),_1b5a4a7db_Range32(110581LLU,110587LLU,1LLU),_1b5a4a7db_Range32(110589LLU,110590LLU,1LLU),_1b5a4a7db_Range32(110592LLU,110882LLU,1LLU),_1b5a4a7db_Range32(110898LLU,110928LLU,30LLU),_1b5a4a7db_Range32(110929LLU,110930LLU,1LLU),_1b5a4a7db_Range32(110933LLU,110948LLU,15LLU),_1b5a4a7db_Range32(110949LLU,110951LLU,1LLU),_1b5a4a7db_Range32(110960LLU,111355LLU,1LLU),_1b5a4a7db_Range32(113664LLU,113770LLU,1LLU),_1b5a4a7db_Range32(113776LLU,113788LLU,1LLU),_1b5a4a7db_Range32(113792LLU,113800LLU,1LLU),_1b5a4a7db_Range32(113808LLU,113817LLU,1LLU),_1b5a4a7db_Range32(119808LLU,119892LLU,1LLU),_1b5a4a7db_Range32(119894LLU,119964LLU,1LLU),_1b5a4a7db_Range32(119966LLU,119967LLU,1LLU),_1b5a4a7db_Range32(119970LLU,119973LLU,3LLU),_1b5a4a7db_Range32(119974LLU,119977LLU,3LLU),_1b5a4a7db_Range32(119978LLU,119980LLU,1LLU),_1b5a4a7db_Range32(119982LLU,119993LLU,1LLU),_1b5a4a7db_Range32(119995LLU,119997LLU,2LLU),_1b5a4a7db_Range32(119998LLU,120003LLU,1LLU),_1b5a4a7db_Range32(120005LLU,120069LLU,1LLU),_1b5a4a7db_Range32(120071LLU,120074LLU,1LLU),_1b5a4a7db_Range32(120077LLU,120084LLU,1LLU),_1b5a4a7db_Range32(120086LLU,120092LLU,1LLU),_1b5a4a7db_Range32(120094LLU,120121LLU,1LLU),_1b5a4a7db_Range32(120123LLU,120126LLU,1LLU),_1b5a4a7db_Range32(120128LLU,120132LLU,1LLU),_1b5a4a7db_Range32(120134LLU,120138LLU,4LLU),_1b5a4a7db_Range32(120139LLU,120144LLU,1LLU),_1b5a4a7db_Range32(120146LLU,120485LLU,1LLU),_1b5a4a7db_Range32(120488LLU,120512LLU,1LLU),_1b5a4a7db_Range32(120514LLU,120538LLU,1LLU),_1b5a4a7db_Range32(120540LLU,120570LLU,1LLU),_1b5a4a7db_Range32(120572LLU,120596LLU,1LLU),_1b5a4a7db_Range32(120598LLU,120628LLU,1LLU),_1b5a4a7db_Range32(120630LLU,120654LLU,1LLU),_1b5a4a7db_Range32(120656LLU,120686LLU,1LLU),_1b5a4a7db_Range32(120688LLU,120712LLU,1LLU),_1b5a4a7db_Range32(120714LLU,120744LLU,1LLU),_1b5a4a7db_Range32(120746LLU,120770LLU,1LLU),_1b5a4a7db_Range32(120772LLU,120779LLU,1LLU),_1b5a4a7db_Range32(122624LLU,122654LLU,1LLU),_1b5a4a7db_Range32(122661LLU,122666LLU,1LLU),_1b5a4a7db_Range32(122928LLU,122989LLU,1LLU),_1b5a4a7db_Range32(123136LLU,123180LLU,1LLU),_1b5a4a7db_Range32(123191LLU,123197LLU,1LLU),_1b5a4a7db_Range32(123214LLU,123536LLU,322LLU),_1b5a4a7db_Range32(123537LLU,123565LLU,1LLU),_1b5a4a7db_Range32(123584LLU,123627LLU,1LLU),_1b5a4a7db_Range32(124112LLU,124139LLU,1LLU),_1b5a4a7db_Range32(124896LLU,124902LLU,1LLU),_1b5a4a7db_Range32(124904LLU,124907LLU,1LLU),_1b5a4a7db_Range32(124909LLU,124910LLU,1LLU),_1b5a4a7db_Range32(124912LLU,124926LLU,1LLU),_1b5a4a7db_Range32(124928LLU,125124LLU,1LLU),_1b5a4a7db_Range32(125184LLU,125251LLU,1LLU),_1b5a4a7db_Range32(125259LLU,126464LLU,1205LLU),_1b5a4a7db_Range32(126465LLU,126467LLU,1LLU),_1b5a4a7db_Range32(126469LLU,126495LLU,1LLU),_1b5a4a7db_Range32(126497LLU,126498LLU,1LLU),_1b5a4a7db_Range32(126500LLU,126503LLU,3LLU),_1b5a4a7db_Range32(126505LLU,126514LLU,1LLU),_1b5a4a7db_Range32(126516LLU,126519LLU,1LLU),_1b5a4a7db_Range32(126521LLU,126523LLU,2LLU),_1b5a4a7db_Range32(126530LLU,126535LLU,5LLU),_1b5a4a7db_Range32(126537LLU,126541LLU,2LLU),_1b5a4a7db_Range32(126542LLU,126543LLU,1LLU),_1b5a4a7db_Range32(126545LLU,126546LLU,1LLU),_1b5a4a7db_Range32(126548LLU,126551LLU,3LLU),_1b5a4a7db_Range32(126553LLU,126561LLU,2LLU),_1b5a4a7db_Range32(126562LLU,126564LLU,2LLU),_1b5a4a7db_Range32(126567LLU,126570LLU,1LLU),_1b5a4a7db_Range32(126572LLU,126578LLU,1LLU),_1b5a4a7db_Range32(126580LLU,126583LLU,1LLU),_1b5a4a7db_Range32(126585LLU,126588LLU,1LLU),_1b5a4a7db_Range32(126590LLU,126592LLU,2LLU),_1b5a4a7db_Range32(126593LLU,126601LLU,1LLU),_1b5a4a7db_Range32(126603LLU,126619LLU,1LLU),_1b5a4a7db_Range32(126625LLU,126627LLU,1LLU),_1b5a4a7db_Range32(126629LLU,126633LLU,1LLU),_1b5a4a7db_Range32(126635LLU,126651LLU,1LLU),_1b5a4a7db_Range32(131072LLU,173791LLU,1LLU),_1b5a4a7db_Range32(173824LLU,177977LLU,1LLU),_1b5a4a7db_Range32(177984LLU,178205LLU,1LLU),_1b5a4a7db_Range32(178208LLU,183969LLU,1LLU),_1b5a4a7db_Range32(183984LLU,191456LLU,1LLU),_1b5a4a7db_Range32(194560LLU,195101LLU,1LLU),_1b5a4a7db_Range32(196608LLU,201546LLU,1LLU),_1b5a4a7db_Range32(201552LLU,205743LLU,1LLU)}),6LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LL = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(97LLU,122LLU,1LLU),_1b5a4a7db_Range16(181LLU,223LLU,42LLU),_1b5a4a7db_Range16(224LLU,246LLU,1LLU),_1b5a4a7db_Range16(248LLU,255LLU,1LLU),_1b5a4a7db_Range16(257LLU,311LLU,2LLU),_1b5a4a7db_Range16(312LLU,328LLU,2LLU),_1b5a4a7db_Range16(329LLU,375LLU,2LLU),_1b5a4a7db_Range16(378LLU,382LLU,2LLU),_1b5a4a7db_Range16(383LLU,384LLU,1LLU),_1b5a4a7db_Range16(387LLU,389LLU,2LLU),_1b5a4a7db_Range16(392LLU,396LLU,4LLU),_1b5a4a7db_Range16(397LLU,402LLU,5LLU),_1b5a4a7db_Range16(405LLU,409LLU,4LLU),_1b5a4a7db_Range16(410LLU,411LLU,1LLU),_1b5a4a7db_Range16(414LLU,417LLU,3LLU),_1b5a4a7db_Range16(419LLU,421LLU,2LLU),_1b5a4a7db_Range16(424LLU,426LLU,2LLU),_1b5a4a7db_Range16(427LLU,429LLU,2LLU),_1b5a4a7db_Range16(432LLU,436LLU,4LLU),_1b5a4a7db_Range16(438LLU,441LLU,3LLU),_1b5a4a7db_Range16(442LLU,445LLU,3LLU),_1b5a4a7db_Range16(446LLU,447LLU,1LLU),_1b5a4a7db_Range16(454LLU,460LLU,3LLU),_1b5a4a7db_Range16(462LLU,476LLU,2LLU),_1b5a4a7db_Range16(477LLU,495LLU,2LLU),_1b5a4a7db_Range16(496LLU,499LLU,3LLU),_1b5a4a7db_Range16(501LLU,505LLU,4LLU),_1b5a4a7db_Range16(507LLU,563LLU,2LLU),_1b5a4a7db_Range16(564LLU,569LLU,1LLU),_1b5a4a7db_Range16(572LLU,575LLU,3LLU),_1b5a4a7db_Range16(576LLU,578LLU,2LLU),_1b5a4a7db_Range16(583LLU,591LLU,2LLU),_1b5a4a7db_Range16(592LLU,659LLU,1LLU),_1b5a4a7db_Range16(661LLU,687LLU,1LLU),_1b5a4a7db_Range16(881LLU,883LLU,2LLU),_1b5a4a7db_Range16(887LLU,891LLU,4LLU),_1b5a4a7db_Range16(892LLU,893LLU,1LLU),_1b5a4a7db_Range16(912LLU,940LLU,28LLU),_1b5a4a7db_Range16(941LLU,974LLU,1LLU),_1b5a4a7db_Range16(976LLU,977LLU,1LLU),_1b5a4a7db_Range16(981LLU,983LLU,1LLU),_1b5a4a7db_Range16(985LLU,1007LLU,2LLU),_1b5a4a7db_Range16(1008LLU,1011LLU,1LLU),_1b5a4a7db_Range16(1013LLU,1019LLU,3LLU),_1b5a4a7db_Range16(1020LLU,1072LLU,52LLU),_1b5a4a7db_Range16(1073LLU,1119LLU,1LLU),_1b5a4a7db_Range16(1121LLU,1153LLU,2LLU),_1b5a4a7db_Range16(1163LLU,1215LLU,2LLU),_1b5a4a7db_Range16(1218LLU,1230LLU,2LLU),_1b5a4a7db_Range16(1231LLU,1327LLU,2LLU),_1b5a4a7db_Range16(1376LLU,1416LLU,1LLU),_1b5a4a7db_Range16(4304LLU,4346LLU,1LLU),_1b5a4a7db_Range16(4349LLU,4351LLU,1LLU),_1b5a4a7db_Range16(5112LLU,5117LLU,1LLU),_1b5a4a7db_Range16(7296LLU,7304LLU,1LLU),_1b5a4a7db_Range16(7424LLU,7467LLU,1LLU),_1b5a4a7db_Range16(7531LLU,7543LLU,1LLU),_1b5a4a7db_Range16(7545LLU,7578LLU,1LLU),_1b5a4a7db_Range16(7681LLU,7829LLU,2LLU),_1b5a4a7db_Range16(7830LLU,7837LLU,1LLU),_1b5a4a7db_Range16(7839LLU,7935LLU,2LLU),_1b5a4a7db_Range16(7936LLU,7943LLU,1LLU),_1b5a4a7db_Range16(7952LLU,7957LLU,1LLU),_1b5a4a7db_Range16(7968LLU,7975LLU,1LLU),_1b5a4a7db_Range16(7984LLU,7991LLU,1LLU),_1b5a4a7db_Range16(8000LLU,8005LLU,1LLU),_1b5a4a7db_Range16(8016LLU,8023LLU,1LLU),_1b5a4a7db_Range16(8032LLU,8039LLU,1LLU),_1b5a4a7db_Range16(8048LLU,8061LLU,1LLU),_1b5a4a7db_Range16(8064LLU,8071LLU,1LLU),_1b5a4a7db_Range16(8080LLU,8087LLU,1LLU),_1b5a4a7db_Range16(8096LLU,8103LLU,1LLU),_1b5a4a7db_Range16(8112LLU,8116LLU,1LLU),_1b5a4a7db_Range16(8118LLU,8119LLU,1LLU),_1b5a4a7db_Range16(8126LLU,8130LLU,4LLU),_1b5a4a7db_Range16(8131LLU,8132LLU,1LLU),_1b5a4a7db_Range16(8134LLU,8135LLU,1LLU),_1b5a4a7db_Range16(8144LLU,8147LLU,1LLU),_1b5a4a7db_Range16(8150LLU,8151LLU,1LLU),_1b5a4a7db_Range16(8160LLU,8167LLU,1LLU),_1b5a4a7db_Range16(8178LLU,8180LLU,1LLU),_1b5a4a7db_Range16(8182LLU,8183LLU,1LLU),_1b5a4a7db_Range16(8458LLU,8462LLU,4LLU),_1b5a4a7db_Range16(8463LLU,8467LLU,4LLU),_1b5a4a7db_Range16(8495LLU,8505LLU,5LLU),_1b5a4a7db_Range16(8508LLU,8509LLU,1LLU),_1b5a4a7db_Range16(8518LLU,8521LLU,1LLU),_1b5a4a7db_Range16(8526LLU,8580LLU,54LLU),_1b5a4a7db_Range16(11312LLU,11359LLU,1LLU),_1b5a4a7db_Range16(11361LLU,11365LLU,4LLU),_1b5a4a7db_Range16(11366LLU,11372LLU,2LLU),_1b5a4a7db_Range16(11377LLU,11379LLU,2LLU),_1b5a4a7db_Range16(11380LLU,11382LLU,2LLU),_1b5a4a7db_Range16(11383LLU,11387LLU,1LLU),_1b5a4a7db_Range16(11393LLU,11491LLU,2LLU),_1b5a4a7db_Range16(11492LLU,11500LLU,8LLU),_1b5a4a7db_Range16(11502LLU,11507LLU,5LLU),_1b5a4a7db_Range16(11520LLU,11557LLU,1LLU),_1b5a4a7db_Range16(11559LLU,11565LLU,6LLU),_1b5a4a7db_Range16(42561LLU,42605LLU,2LLU),_1b5a4a7db_Range16(42625LLU,42651LLU,2LLU),_1b5a4a7db_Range16(42787LLU,42799LLU,2LLU),_1b5a4a7db_Range16(42800LLU,42801LLU,1LLU),_1b5a4a7db_Range16(42803LLU,42865LLU,2LLU),_1b5a4a7db_Range16(42866LLU,42872LLU,1LLU),_1b5a4a7db_Range16(42874LLU,42876LLU,2LLU),_1b5a4a7db_Range16(42879LLU,42887LLU,2LLU),_1b5a4a7db_Range16(42892LLU,42894LLU,2LLU),_1b5a4a7db_Range16(42897LLU,42899LLU,2LLU),_1b5a4a7db_Range16(42900LLU,42901LLU,1LLU),_1b5a4a7db_Range16(42903LLU,42921LLU,2LLU),_1b5a4a7db_Range16(42927LLU,42933LLU,6LLU),_1b5a4a7db_Range16(42935LLU,42947LLU,2LLU),_1b5a4a7db_Range16(42952LLU,42954LLU,2LLU),_1b5a4a7db_Range16(42961LLU,42969LLU,2LLU),_1b5a4a7db_Range16(42998LLU,43002LLU,4LLU),_1b5a4a7db_Range16(43824LLU,43866LLU,1LLU),_1b5a4a7db_Range16(43872LLU,43880LLU,1LLU),_1b5a4a7db_Range16(43888LLU,43967LLU,1LLU),_1b5a4a7db_Range16(64256LLU,64262LLU,1LLU),_1b5a4a7db_Range16(64275LLU,64279LLU,1LLU),_1b5a4a7db_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66600LLU,66639LLU,1LLU),_1b5a4a7db_Range32(66776LLU,66811LLU,1LLU),_1b5a4a7db_Range32(66967LLU,66977LLU,1LLU),_1b5a4a7db_Range32(66979LLU,66993LLU,1LLU),_1b5a4a7db_Range32(66995LLU,67001LLU,1LLU),_1b5a4a7db_Range32(67003LLU,67004LLU,1LLU),_1b5a4a7db_Range32(68800LLU,68850LLU,1LLU),_1b5a4a7db_Range32(71872LLU,71903LLU,1LLU),_1b5a4a7db_Range32(93792LLU,93823LLU,1LLU),_1b5a4a7db_Range32(119834LLU,119859LLU,1LLU),_1b5a4a7db_Range32(119886LLU,119892LLU,1LLU),_1b5a4a7db_Range32(119894LLU,119911LLU,1LLU),_1b5a4a7db_Range32(119938LLU,119963LLU,1LLU),_1b5a4a7db_Range32(119990LLU,119993LLU,1LLU),_1b5a4a7db_Range32(119995LLU,119997LLU,2LLU),_1b5a4a7db_Range32(119998LLU,120003LLU,1LLU),_1b5a4a7db_Range32(120005LLU,120015LLU,1LLU),_1b5a4a7db_Range32(120042LLU,120067LLU,1LLU),_1b5a4a7db_Range32(120094LLU,120119LLU,1LLU),_1b5a4a7db_Range32(120146LLU,120171LLU,1LLU),_1b5a4a7db_Range32(120198LLU,120223LLU,1LLU),_1b5a4a7db_Range32(120250LLU,120275LLU,1LLU),_1b5a4a7db_Range32(120302LLU,120327LLU,1LLU),_1b5a4a7db_Range32(120354LLU,120379LLU,1LLU),_1b5a4a7db_Range32(120406LLU,120431LLU,1LLU),_1b5a4a7db_Range32(120458LLU,120485LLU,1LLU),_1b5a4a7db_Range32(120514LLU,120538LLU,1LLU),_1b5a4a7db_Range32(120540LLU,120545LLU,1LLU),_1b5a4a7db_Range32(120572LLU,120596LLU,1LLU),_1b5a4a7db_Range32(120598LLU,120603LLU,1LLU),_1b5a4a7db_Range32(120630LLU,120654LLU,1LLU),_1b5a4a7db_Range32(120656LLU,120661LLU,1LLU),_1b5a4a7db_Range32(120688LLU,120712LLU,1LLU),_1b5a4a7db_Range32(120714LLU,120719LLU,1LLU),_1b5a4a7db_Range32(120746LLU,120770LLU,1LLU),_1b5a4a7db_Range32(120772LLU,120777LLU,1LLU),_1b5a4a7db_Range32(120779LLU,122624LLU,1845LLU),_1b5a4a7db_Range32(122625LLU,122633LLU,1LLU),_1b5a4a7db_Range32(122635LLU,122654LLU,1LLU),_1b5a4a7db_Range32(122661LLU,122666LLU,1LLU),_1b5a4a7db_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LM = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(688LLU,705LLU,1LLU),_1b5a4a7db_Range16(710LLU,721LLU,1LLU),_1b5a4a7db_Range16(736LLU,740LLU,1LLU),_1b5a4a7db_Range16(748LLU,750LLU,2LLU),_1b5a4a7db_Range16(884LLU,890LLU,6LLU),_1b5a4a7db_Range16(1369LLU,1600LLU,231LLU),_1b5a4a7db_Range16(1765LLU,1766LLU,1LLU),_1b5a4a7db_Range16(2036LLU,2037LLU,1LLU),_1b5a4a7db_Range16(2042LLU,2074LLU,32LLU),_1b5a4a7db_Range16(2084LLU,2088LLU,4LLU),_1b5a4a7db_Range16(2249LLU,2417LLU,168LLU),_1b5a4a7db_Range16(3654LLU,3782LLU,128LLU),_1b5a4a7db_Range16(4348LLU,6103LLU,1755LLU),_1b5a4a7db_Range16(6211LLU,6823LLU,612LLU),_1b5a4a7db_Range16(7288LLU,7293LLU,1LLU),_1b5a4a7db_Range16(7468LLU,7530LLU,1LLU),_1b5a4a7db_Range16(7544LLU,7579LLU,35LLU),_1b5a4a7db_Range16(7580LLU,7615LLU,1LLU),_1b5a4a7db_Range16(8305LLU,8319LLU,14LLU),_1b5a4a7db_Range16(8336LLU,8348LLU,1LLU),_1b5a4a7db_Range16(11388LLU,11389LLU,1LLU),_1b5a4a7db_Range16(11631LLU,11823LLU,192LLU),_1b5a4a7db_Range16(12293LLU,12337LLU,44LLU),_1b5a4a7db_Range16(12338LLU,12341LLU,1LLU),_1b5a4a7db_Range16(12347LLU,12445LLU,98LLU),_1b5a4a7db_Range16(12446LLU,12540LLU,94LLU),_1b5a4a7db_Range16(12541LLU,12542LLU,1LLU),_1b5a4a7db_Range16(40981LLU,42232LLU,1251LLU),_1b5a4a7db_Range16(42233LLU,42237LLU,1LLU),_1b5a4a7db_Range16(42508LLU,42623LLU,115LLU),_1b5a4a7db_Range16(42652LLU,42653LLU,1LLU),_1b5a4a7db_Range16(42775LLU,42783LLU,1LLU),_1b5a4a7db_Range16(42864LLU,42888LLU,24LLU),_1b5a4a7db_Range16(42994LLU,42996LLU,1LLU),_1b5a4a7db_Range16(43000LLU,43001LLU,1LLU),_1b5a4a7db_Range16(43471LLU,43494LLU,23LLU),_1b5a4a7db_Range16(43632LLU,43741LLU,109LLU),_1b5a4a7db_Range16(43763LLU,43764LLU,1LLU),_1b5a4a7db_Range16(43868LLU,43871LLU,1LLU),_1b5a4a7db_Range16(43881LLU,65392LLU,21511LLU),_1b5a4a7db_Range16(65438LLU,65439LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(67456LLU,67461LLU,1LLU),_1b5a4a7db_Range32(67463LLU,67504LLU,1LLU),_1b5a4a7db_Range32(67506LLU,67514LLU,1LLU),_1b5a4a7db_Range32(92992LLU,92995LLU,1LLU),_1b5a4a7db_Range32(94099LLU,94111LLU,1LLU),_1b5a4a7db_Range32(94176LLU,94177LLU,1LLU),_1b5a4a7db_Range32(94179LLU,110576LLU,16397LLU),_1b5a4a7db_Range32(110577LLU,110579LLU,1LLU),_1b5a4a7db_Range32(110581LLU,110587LLU,1LLU),_1b5a4a7db_Range32(110589LLU,110590LLU,1LLU),_1b5a4a7db_Range32(122928LLU,122989LLU,1LLU),_1b5a4a7db_Range32(123191LLU,123197LLU,1LLU),_1b5a4a7db_Range32(124139LLU,125259LLU,1120LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(170LLU,186LLU,16LLU),_1b5a4a7db_Range16(443LLU,448LLU,5LLU),_1b5a4a7db_Range16(449LLU,451LLU,1LLU),_1b5a4a7db_Range16(660LLU,1488LLU,828LLU),_1b5a4a7db_Range16(1489LLU,1514LLU,1LLU),_1b5a4a7db_Range16(1519LLU,1522LLU,1LLU),_1b5a4a7db_Range16(1568LLU,1599LLU,1LLU),_1b5a4a7db_Range16(1601LLU,1610LLU,1LLU),_1b5a4a7db_Range16(1646LLU,1647LLU,1LLU),_1b5a4a7db_Range16(1649LLU,1747LLU,1LLU),_1b5a4a7db_Range16(1749LLU,1774LLU,25LLU),_1b5a4a7db_Range16(1775LLU,1786LLU,11LLU),_1b5a4a7db_Range16(1787LLU,1788LLU,1LLU),_1b5a4a7db_Range16(1791LLU,1808LLU,17LLU),_1b5a4a7db_Range16(1810LLU,1839LLU,1LLU),_1b5a4a7db_Range16(1869LLU,1957LLU,1LLU),_1b5a4a7db_Range16(1969LLU,1994LLU,25LLU),_1b5a4a7db_Range16(1995LLU,2026LLU,1LLU),_1b5a4a7db_Range16(2048LLU,2069LLU,1LLU),_1b5a4a7db_Range16(2112LLU,2136LLU,1LLU),_1b5a4a7db_Range16(2144LLU,2154LLU,1LLU),_1b5a4a7db_Range16(2160LLU,2183LLU,1LLU),_1b5a4a7db_Range16(2185LLU,2190LLU,1LLU),_1b5a4a7db_Range16(2208LLU,2248LLU,1LLU),_1b5a4a7db_Range16(2308LLU,2361LLU,1LLU),_1b5a4a7db_Range16(2365LLU,2384LLU,19LLU),_1b5a4a7db_Range16(2392LLU,2401LLU,1LLU),_1b5a4a7db_Range16(2418LLU,2432LLU,1LLU),_1b5a4a7db_Range16(2437LLU,2444LLU,1LLU),_1b5a4a7db_Range16(2447LLU,2448LLU,1LLU),_1b5a4a7db_Range16(2451LLU,2472LLU,1LLU),_1b5a4a7db_Range16(2474LLU,2480LLU,1LLU),_1b5a4a7db_Range16(2482LLU,2486LLU,4LLU),_1b5a4a7db_Range16(2487LLU,2489LLU,1LLU),_1b5a4a7db_Range16(2493LLU,2510LLU,17LLU),_1b5a4a7db_Range16(2524LLU,2525LLU,1LLU),_1b5a4a7db_Range16(2527LLU,2529LLU,1LLU),_1b5a4a7db_Range16(2544LLU,2545LLU,1LLU),_1b5a4a7db_Range16(2556LLU,2565LLU,9LLU),_1b5a4a7db_Range16(2566LLU,2570LLU,1LLU),_1b5a4a7db_Range16(2575LLU,2576LLU,1LLU),_1b5a4a7db_Range16(2579LLU,2600LLU,1LLU),_1b5a4a7db_Range16(2602LLU,2608LLU,1LLU),_1b5a4a7db_Range16(2610LLU,2611LLU,1LLU),_1b5a4a7db_Range16(2613LLU,2614LLU,1LLU),_1b5a4a7db_Range16(2616LLU,2617LLU,1LLU),_1b5a4a7db_Range16(2649LLU,2652LLU,1LLU),_1b5a4a7db_Range16(2654LLU,2674LLU,20LLU),_1b5a4a7db_Range16(2675LLU,2676LLU,1LLU),_1b5a4a7db_Range16(2693LLU,2701LLU,1LLU),_1b5a4a7db_Range16(2703LLU,2705LLU,1LLU),_1b5a4a7db_Range16(2707LLU,2728LLU,1LLU),_1b5a4a7db_Range16(2730LLU,2736LLU,1LLU),_1b5a4a7db_Range16(2738LLU,2739LLU,1LLU),_1b5a4a7db_Range16(2741LLU,2745LLU,1LLU),_1b5a4a7db_Range16(2749LLU,2768LLU,19LLU),_1b5a4a7db_Range16(2784LLU,2785LLU,1LLU),_1b5a4a7db_Range16(2809LLU,2821LLU,12LLU),_1b5a4a7db_Range16(2822LLU,2828LLU,1LLU),_1b5a4a7db_Range16(2831LLU,2832LLU,1LLU),_1b5a4a7db_Range16(2835LLU,2856LLU,1LLU),_1b5a4a7db_Range16(2858LLU,2864LLU,1LLU),_1b5a4a7db_Range16(2866LLU,2867LLU,1LLU),_1b5a4a7db_Range16(2869LLU,2873LLU,1LLU),_1b5a4a7db_Range16(2877LLU,2908LLU,31LLU),_1b5a4a7db_Range16(2909LLU,2911LLU,2LLU),_1b5a4a7db_Range16(2912LLU,2913LLU,1LLU),_1b5a4a7db_Range16(2929LLU,2947LLU,18LLU),_1b5a4a7db_Range16(2949LLU,2954LLU,1LLU),_1b5a4a7db_Range16(2958LLU,2960LLU,1LLU),_1b5a4a7db_Range16(2962LLU,2965LLU,1LLU),_1b5a4a7db_Range16(2969LLU,2970LLU,1LLU),_1b5a4a7db_Range16(2972LLU,2974LLU,2LLU),_1b5a4a7db_Range16(2975LLU,2979LLU,4LLU),_1b5a4a7db_Range16(2980LLU,2984LLU,4LLU),_1b5a4a7db_Range16(2985LLU,2986LLU,1LLU),_1b5a4a7db_Range16(2990LLU,3001LLU,1LLU),_1b5a4a7db_Range16(3024LLU,3077LLU,53LLU),_1b5a4a7db_Range16(3078LLU,3084LLU,1LLU),_1b5a4a7db_Range16(3086LLU,3088LLU,1LLU),_1b5a4a7db_Range16(3090LLU,3112LLU,1LLU),_1b5a4a7db_Range16(3114LLU,3129LLU,1LLU),_1b5a4a7db_Range16(3133LLU,3160LLU,27LLU),_1b5a4a7db_Range16(3161LLU,3162LLU,1LLU),_1b5a4a7db_Range16(3165LLU,3168LLU,3LLU),_1b5a4a7db_Range16(3169LLU,3200LLU,31LLU),_1b5a4a7db_Range16(3205LLU,3212LLU,1LLU),_1b5a4a7db_Range16(3214LLU,3216LLU,1LLU),_1b5a4a7db_Range16(3218LLU,3240LLU,1LLU),_1b5a4a7db_Range16(3242LLU,3251LLU,1LLU),_1b5a4a7db_Range16(3253LLU,3257LLU,1LLU),_1b5a4a7db_Range16(3261LLU,3293LLU,32LLU),_1b5a4a7db_Range16(3294LLU,3296LLU,2LLU),_1b5a4a7db_Range16(3297LLU,3313LLU,16LLU),_1b5a4a7db_Range16(3314LLU,3332LLU,18LLU),_1b5a4a7db_Range16(3333LLU,3340LLU,1LLU),_1b5a4a7db_Range16(3342LLU,3344LLU,1LLU),_1b5a4a7db_Range16(3346LLU,3386LLU,1LLU),_1b5a4a7db_Range16(3389LLU,3406LLU,17LLU),_1b5a4a7db_Range16(3412LLU,3414LLU,1LLU),_1b5a4a7db_Range16(3423LLU,3425LLU,1LLU),_1b5a4a7db_Range16(3450LLU,3455LLU,1LLU),_1b5a4a7db_Range16(3461LLU,3478LLU,1LLU),_1b5a4a7db_Range16(3482LLU,3505LLU,1LLU),_1b5a4a7db_Range16(3507LLU,3515LLU,1LLU),_1b5a4a7db_Range16(3517LLU,3520LLU,3LLU),_1b5a4a7db_Range16(3521LLU,3526LLU,1LLU),_1b5a4a7db_Range16(3585LLU,3632LLU,1LLU),_1b5a4a7db_Range16(3634LLU,3635LLU,1LLU),_1b5a4a7db_Range16(3648LLU,3653LLU,1LLU),_1b5a4a7db_Range16(3713LLU,3714LLU,1LLU),_1b5a4a7db_Range16(3716LLU,3718LLU,2LLU),_1b5a4a7db_Range16(3719LLU,3722LLU,1LLU),_1b5a4a7db_Range16(3724LLU,3747LLU,1LLU),_1b5a4a7db_Range16(3749LLU,3751LLU,2LLU),_1b5a4a7db_Range16(3752LLU,3760LLU,1LLU),_1b5a4a7db_Range16(3762LLU,3763LLU,1LLU),_1b5a4a7db_Range16(3773LLU,3776LLU,3LLU),_1b5a4a7db_Range16(3777LLU,3780LLU,1LLU),_1b5a4a7db_Range16(3804LLU,3807LLU,1LLU),_1b5a4a7db_Range16(3840LLU,3904LLU,64LLU),_1b5a4a7db_Range16(3905LLU,3911LLU,1LLU),_1b5a4a7db_Range16(3913LLU,3948LLU,1LLU),_1b5a4a7db_Range16(3976LLU,3980LLU,1LLU),_1b5a4a7db_Range16(4096LLU,4138LLU,1LLU),_1b5a4a7db_Range16(4159LLU,4176LLU,17LLU),_1b5a4a7db_Range16(4177LLU,4181LLU,1LLU),_1b5a4a7db_Range16(4186LLU,4189LLU,1LLU),_1b5a4a7db_Range16(4193LLU,4197LLU,4LLU),_1b5a4a7db_Range16(4198LLU,4206LLU,8LLU),_1b5a4a7db_Range16(4207LLU,4208LLU,1LLU),_1b5a4a7db_Range16(4213LLU,4225LLU,1LLU),_1b5a4a7db_Range16(4238LLU,4352LLU,114LLU),_1b5a4a7db_Range16(4353LLU,4680LLU,1LLU),_1b5a4a7db_Range16(4682LLU,4685LLU,1LLU),_1b5a4a7db_Range16(4688LLU,4694LLU,1LLU),_1b5a4a7db_Range16(4696LLU,4698LLU,2LLU),_1b5a4a7db_Range16(4699LLU,4701LLU,1LLU),_1b5a4a7db_Range16(4704LLU,4744LLU,1LLU),_1b5a4a7db_Range16(4746LLU,4749LLU,1LLU),_1b5a4a7db_Range16(4752LLU,4784LLU,1LLU),_1b5a4a7db_Range16(4786LLU,4789LLU,1LLU),_1b5a4a7db_Range16(4792LLU,4798LLU,1LLU),_1b5a4a7db_Range16(4800LLU,4802LLU,2LLU),_1b5a4a7db_Range16(4803LLU,4805LLU,1LLU),_1b5a4a7db_Range16(4808LLU,4822LLU,1LLU),_1b5a4a7db_Range16(4824LLU,4880LLU,1LLU),_1b5a4a7db_Range16(4882LLU,4885LLU,1LLU),_1b5a4a7db_Range16(4888LLU,4954LLU,1LLU),_1b5a4a7db_Range16(4992LLU,5007LLU,1LLU),_1b5a4a7db_Range16(5121LLU,5740LLU,1LLU),_1b5a4a7db_Range16(5743LLU,5759LLU,1LLU),_1b5a4a7db_Range16(5761LLU,5786LLU,1LLU),_1b5a4a7db_Range16(5792LLU,5866LLU,1LLU),_1b5a4a7db_Range16(5873LLU,5880LLU,1LLU),_1b5a4a7db_Range16(5888LLU,5905LLU,1LLU),_1b5a4a7db_Range16(5919LLU,5937LLU,1LLU),_1b5a4a7db_Range16(5952LLU,5969LLU,1LLU),_1b5a4a7db_Range16(5984LLU,5996LLU,1LLU),_1b5a4a7db_Range16(5998LLU,6000LLU,1LLU),_1b5a4a7db_Range16(6016LLU,6067LLU,1LLU),_1b5a4a7db_Range16(6108LLU,6176LLU,68LLU),_1b5a4a7db_Range16(6177LLU,6210LLU,1LLU),_1b5a4a7db_Range16(6212LLU,6264LLU,1LLU),_1b5a4a7db_Range16(6272LLU,6276LLU,1LLU),_1b5a4a7db_Range16(6279LLU,6312LLU,1LLU),_1b5a4a7db_Range16(6314LLU,6320LLU,6LLU),_1b5a4a7db_Range16(6321LLU,6389LLU,1LLU),_1b5a4a7db_Range16(6400LLU,6430LLU,1LLU),_1b5a4a7db_Range16(6480LLU,6509LLU,1LLU),_1b5a4a7db_Range16(6512LLU,6516LLU,1LLU),_1b5a4a7db_Range16(6528LLU,6571LLU,1LLU),_1b5a4a7db_Range16(6576LLU,6601LLU,1LLU),_1b5a4a7db_Range16(6656LLU,6678LLU,1LLU),_1b5a4a7db_Range16(6688LLU,6740LLU,1LLU),_1b5a4a7db_Range16(6917LLU,6963LLU,1LLU),_1b5a4a7db_Range16(6981LLU,6988LLU,1LLU),_1b5a4a7db_Range16(7043LLU,7072LLU,1LLU),_1b5a4a7db_Range16(7086LLU,7087LLU,1LLU),_1b5a4a7db_Range16(7098LLU,7141LLU,1LLU),_1b5a4a7db_Range16(7168LLU,7203LLU,1LLU),_1b5a4a7db_Range16(7245LLU,7247LLU,1LLU),_1b5a4a7db_Range16(7258LLU,7287LLU,1LLU),_1b5a4a7db_Range16(7401LLU,7404LLU,1LLU),_1b5a4a7db_Range16(7406LLU,7411LLU,1LLU),_1b5a4a7db_Range16(7413LLU,7414LLU,1LLU),_1b5a4a7db_Range16(7418LLU,8501LLU,1083LLU),_1b5a4a7db_Range16(8502LLU,8504LLU,1LLU),_1b5a4a7db_Range16(11568LLU,11623LLU,1LLU),_1b5a4a7db_Range16(11648LLU,11670LLU,1LLU),_1b5a4a7db_Range16(11680LLU,11686LLU,1LLU),_1b5a4a7db_Range16(11688LLU,11694LLU,1LLU),_1b5a4a7db_Range16(11696LLU,11702LLU,1LLU),_1b5a4a7db_Range16(11704LLU,11710LLU,1LLU),_1b5a4a7db_Range16(11712LLU,11718LLU,1LLU),_1b5a4a7db_Range16(11720LLU,11726LLU,1LLU),_1b5a4a7db_Range16(11728LLU,11734LLU,1LLU),_1b5a4a7db_Range16(11736LLU,11742LLU,1LLU),_1b5a4a7db_Range16(12294LLU,12348LLU,54LLU),_1b5a4a7db_Range16(12353LLU,12438LLU,1LLU),_1b5a4a7db_Range16(12447LLU,12449LLU,2LLU),_1b5a4a7db_Range16(12450LLU,12538LLU,1LLU),_1b5a4a7db_Range16(12543LLU,12549LLU,6LLU),_1b5a4a7db_Range16(12550LLU,12591LLU,1LLU),_1b5a4a7db_Range16(12593LLU,12686LLU,1LLU),_1b5a4a7db_Range16(12704LLU,12735LLU,1LLU),_1b5a4a7db_Range16(12784LLU,12799LLU,1LLU),_1b5a4a7db_Range16(13312LLU,19903LLU,1LLU),_1b5a4a7db_Range16(19968LLU,40980LLU,1LLU),_1b5a4a7db_Range16(40982LLU,42124LLU,1LLU),_1b5a4a7db_Range16(42192LLU,42231LLU,1LLU),_1b5a4a7db_Range16(42240LLU,42507LLU,1LLU),_1b5a4a7db_Range16(42512LLU,42527LLU,1LLU),_1b5a4a7db_Range16(42538LLU,42539LLU,1LLU),_1b5a4a7db_Range16(42606LLU,42656LLU,50LLU),_1b5a4a7db_Range16(42657LLU,42725LLU,1LLU),_1b5a4a7db_Range16(42895LLU,42999LLU,104LLU),_1b5a4a7db_Range16(43003LLU,43009LLU,1LLU),_1b5a4a7db_Range16(43011LLU,43013LLU,1LLU),_1b5a4a7db_Range16(43015LLU,43018LLU,1LLU),_1b5a4a7db_Range16(43020LLU,43042LLU,1LLU),_1b5a4a7db_Range16(43072LLU,43123LLU,1LLU),_1b5a4a7db_Range16(43138LLU,43187LLU,1LLU),_1b5a4a7db_Range16(43250LLU,43255LLU,1LLU),_1b5a4a7db_Range16(43259LLU,43261LLU,2LLU),_1b5a4a7db_Range16(43262LLU,43274LLU,12LLU),_1b5a4a7db_Range16(43275LLU,43301LLU,1LLU),_1b5a4a7db_Range16(43312LLU,43334LLU,1LLU),_1b5a4a7db_Range16(43360LLU,43388LLU,1LLU),_1b5a4a7db_Range16(43396LLU,43442LLU,1LLU),_1b5a4a7db_Range16(43488LLU,43492LLU,1LLU),_1b5a4a7db_Range16(43495LLU,43503LLU,1LLU),_1b5a4a7db_Range16(43514LLU,43518LLU,1LLU),_1b5a4a7db_Range16(43520LLU,43560LLU,1LLU),_1b5a4a7db_Range16(43584LLU,43586LLU,1LLU),_1b5a4a7db_Range16(43588LLU,43595LLU,1LLU),_1b5a4a7db_Range16(43616LLU,43631LLU,1LLU),_1b5a4a7db_Range16(43633LLU,43638LLU,1LLU),_1b5a4a7db_Range16(43642LLU,43646LLU,4LLU),_1b5a4a7db_Range16(43647LLU,43695LLU,1LLU),_1b5a4a7db_Range16(43697LLU,43701LLU,4LLU),_1b5a4a7db_Range16(43702LLU,43705LLU,3LLU),_1b5a4a7db_Range16(43706LLU,43709LLU,1LLU),_1b5a4a7db_Range16(43712LLU,43714LLU,2LLU),_1b5a4a7db_Range16(43739LLU,43740LLU,1LLU),_1b5a4a7db_Range16(43744LLU,43754LLU,1LLU),_1b5a4a7db_Range16(43762LLU,43777LLU,15LLU),_1b5a4a7db_Range16(43778LLU,43782LLU,1LLU),_1b5a4a7db_Range16(43785LLU,43790LLU,1LLU),_1b5a4a7db_Range16(43793LLU,43798LLU,1LLU),_1b5a4a7db_Range16(43808LLU,43814LLU,1LLU),_1b5a4a7db_Range16(43816LLU,43822LLU,1LLU),_1b5a4a7db_Range16(43968LLU,44002LLU,1LLU),_1b5a4a7db_Range16(44032LLU,55203LLU,1LLU),_1b5a4a7db_Range16(55216LLU,55238LLU,1LLU),_1b5a4a7db_Range16(55243LLU,55291LLU,1LLU),_1b5a4a7db_Range16(63744LLU,64109LLU,1LLU),_1b5a4a7db_Range16(64112LLU,64217LLU,1LLU),_1b5a4a7db_Range16(64285LLU,64287LLU,2LLU),_1b5a4a7db_Range16(64288LLU,64296LLU,1LLU),_1b5a4a7db_Range16(64298LLU,64310LLU,1LLU),_1b5a4a7db_Range16(64312LLU,64316LLU,1LLU),_1b5a4a7db_Range16(64318LLU,64320LLU,2LLU),_1b5a4a7db_Range16(64321LLU,64323LLU,2LLU),_1b5a4a7db_Range16(64324LLU,64326LLU,2LLU),_1b5a4a7db_Range16(64327LLU,64433LLU,1LLU),_1b5a4a7db_Range16(64467LLU,64829LLU,1LLU),_1b5a4a7db_Range16(64848LLU,64911LLU,1LLU),_1b5a4a7db_Range16(64914LLU,64967LLU,1LLU),_1b5a4a7db_Range16(65008LLU,65019LLU,1LLU),_1b5a4a7db_Range16(65136LLU,65140LLU,1LLU),_1b5a4a7db_Range16(65142LLU,65276LLU,1LLU),_1b5a4a7db_Range16(65382LLU,65391LLU,1LLU),_1b5a4a7db_Range16(65393LLU,65437LLU,1LLU),_1b5a4a7db_Range16(65440LLU,65470LLU,1LLU),_1b5a4a7db_Range16(65474LLU,65479LLU,1LLU),_1b5a4a7db_Range16(65482LLU,65487LLU,1LLU),_1b5a4a7db_Range16(65490LLU,65495LLU,1LLU),_1b5a4a7db_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(65536LLU,65547LLU,1LLU),_1b5a4a7db_Range32(65549LLU,65574LLU,1LLU),_1b5a4a7db_Range32(65576LLU,65594LLU,1LLU),_1b5a4a7db_Range32(65596LLU,65597LLU,1LLU),_1b5a4a7db_Range32(65599LLU,65613LLU,1LLU),_1b5a4a7db_Range32(65616LLU,65629LLU,1LLU),_1b5a4a7db_Range32(65664LLU,65786LLU,1LLU),_1b5a4a7db_Range32(66176LLU,66204LLU,1LLU),_1b5a4a7db_Range32(66208LLU,66256LLU,1LLU),_1b5a4a7db_Range32(66304LLU,66335LLU,1LLU),_1b5a4a7db_Range32(66349LLU,66368LLU,1LLU),_1b5a4a7db_Range32(66370LLU,66377LLU,1LLU),_1b5a4a7db_Range32(66384LLU,66421LLU,1LLU),_1b5a4a7db_Range32(66432LLU,66461LLU,1LLU),_1b5a4a7db_Range32(66464LLU,66499LLU,1LLU),_1b5a4a7db_Range32(66504LLU,66511LLU,1LLU),_1b5a4a7db_Range32(66640LLU,66717LLU,1LLU),_1b5a4a7db_Range32(66816LLU,66855LLU,1LLU),_1b5a4a7db_Range32(66864LLU,66915LLU,1LLU),_1b5a4a7db_Range32(67072LLU,67382LLU,1LLU),_1b5a4a7db_Range32(67392LLU,67413LLU,1LLU),_1b5a4a7db_Range32(67424LLU,67431LLU,1LLU),_1b5a4a7db_Range32(67584LLU,67589LLU,1LLU),_1b5a4a7db_Range32(67592LLU,67594LLU,2LLU),_1b5a4a7db_Range32(67595LLU,67637LLU,1LLU),_1b5a4a7db_Range32(67639LLU,67640LLU,1LLU),_1b5a4a7db_Range32(67644LLU,67647LLU,3LLU),_1b5a4a7db_Range32(67648LLU,67669LLU,1LLU),_1b5a4a7db_Range32(67680LLU,67702LLU,1LLU),_1b5a4a7db_Range32(67712LLU,67742LLU,1LLU),_1b5a4a7db_Range32(67808LLU,67826LLU,1LLU),_1b5a4a7db_Range32(67828LLU,67829LLU,1LLU),_1b5a4a7db_Range32(67840LLU,67861LLU,1LLU),_1b5a4a7db_Range32(67872LLU,67897LLU,1LLU),_1b5a4a7db_Range32(67968LLU,68023LLU,1LLU),_1b5a4a7db_Range32(68030LLU,68031LLU,1LLU),_1b5a4a7db_Range32(68096LLU,68112LLU,16LLU),_1b5a4a7db_Range32(68113LLU,68115LLU,1LLU),_1b5a4a7db_Range32(68117LLU,68119LLU,1LLU),_1b5a4a7db_Range32(68121LLU,68149LLU,1LLU),_1b5a4a7db_Range32(68192LLU,68220LLU,1LLU),_1b5a4a7db_Range32(68224LLU,68252LLU,1LLU),_1b5a4a7db_Range32(68288LLU,68295LLU,1LLU),_1b5a4a7db_Range32(68297LLU,68324LLU,1LLU),_1b5a4a7db_Range32(68352LLU,68405LLU,1LLU),_1b5a4a7db_Range32(68416LLU,68437LLU,1LLU),_1b5a4a7db_Range32(68448LLU,68466LLU,1LLU),_1b5a4a7db_Range32(68480LLU,68497LLU,1LLU),_1b5a4a7db_Range32(68608LLU,68680LLU,1LLU),_1b5a4a7db_Range32(68864LLU,68899LLU,1LLU),_1b5a4a7db_Range32(69248LLU,69289LLU,1LLU),_1b5a4a7db_Range32(69296LLU,69297LLU,1LLU),_1b5a4a7db_Range32(69376LLU,69404LLU,1LLU),_1b5a4a7db_Range32(69415LLU,69424LLU,9LLU),_1b5a4a7db_Range32(69425LLU,69445LLU,1LLU),_1b5a4a7db_Range32(69488LLU,69505LLU,1LLU),_1b5a4a7db_Range32(69552LLU,69572LLU,1LLU),_1b5a4a7db_Range32(69600LLU,69622LLU,1LLU),_1b5a4a7db_Range32(69635LLU,69687LLU,1LLU),_1b5a4a7db_Range32(69745LLU,69746LLU,1LLU),_1b5a4a7db_Range32(69749LLU,69763LLU,14LLU),_1b5a4a7db_Range32(69764LLU,69807LLU,1LLU),_1b5a4a7db_Range32(69840LLU,69864LLU,1LLU),_1b5a4a7db_Range32(69891LLU,69926LLU,1LLU),_1b5a4a7db_Range32(69956LLU,69959LLU,3LLU),_1b5a4a7db_Range32(69968LLU,70002LLU,1LLU),_1b5a4a7db_Range32(70006LLU,70019LLU,13LLU),_1b5a4a7db_Range32(70020LLU,70066LLU,1LLU),_1b5a4a7db_Range32(70081LLU,70084LLU,1LLU),_1b5a4a7db_Range32(70106LLU,70108LLU,2LLU),_1b5a4a7db_Range32(70144LLU,70161LLU,1LLU),_1b5a4a7db_Range32(70163LLU,70187LLU,1LLU),_1b5a4a7db_Range32(70207LLU,70208LLU,1LLU),_1b5a4a7db_Range32(70272LLU,70278LLU,1LLU),_1b5a4a7db_Range32(70280LLU,70282LLU,2LLU),_1b5a4a7db_Range32(70283LLU,70285LLU,1LLU),_1b5a4a7db_Range32(70287LLU,70301LLU,1LLU),_1b5a4a7db_Range32(70303LLU,70312LLU,1LLU),_1b5a4a7db_Range32(70320LLU,70366LLU,1LLU),_1b5a4a7db_Range32(70405LLU,70412LLU,1LLU),_1b5a4a7db_Range32(70415LLU,70416LLU,1LLU),_1b5a4a7db_Range32(70419LLU,70440LLU,1LLU),_1b5a4a7db_Range32(70442LLU,70448LLU,1LLU),_1b5a4a7db_Range32(70450LLU,70451LLU,1LLU),_1b5a4a7db_Range32(70453LLU,70457LLU,1LLU),_1b5a4a7db_Range32(70461LLU,70480LLU,19LLU),_1b5a4a7db_Range32(70493LLU,70497LLU,1LLU),_1b5a4a7db_Range32(70656LLU,70708LLU,1LLU),_1b5a4a7db_Range32(70727LLU,70730LLU,1LLU),_1b5a4a7db_Range32(70751LLU,70753LLU,1LLU),_1b5a4a7db_Range32(70784LLU,70831LLU,1LLU),_1b5a4a7db_Range32(70852LLU,70853LLU,1LLU),_1b5a4a7db_Range32(70855LLU,71040LLU,185LLU),_1b5a4a7db_Range32(71041LLU,71086LLU,1LLU),_1b5a4a7db_Range32(71128LLU,71131LLU,1LLU),_1b5a4a7db_Range32(71168LLU,71215LLU,1LLU),_1b5a4a7db_Range32(71236LLU,71296LLU,60LLU),_1b5a4a7db_Range32(71297LLU,71338LLU,1LLU),_1b5a4a7db_Range32(71352LLU,71424LLU,72LLU),_1b5a4a7db_Range32(71425LLU,71450LLU,1LLU),_1b5a4a7db_Range32(71488LLU,71494LLU,1LLU),_1b5a4a7db_Range32(71680LLU,71723LLU,1LLU),_1b5a4a7db_Range32(71935LLU,71942LLU,1LLU),_1b5a4a7db_Range32(71945LLU,71948LLU,3LLU),_1b5a4a7db_Range32(71949LLU,71955LLU,1LLU),_1b5a4a7db_Range32(71957LLU,71958LLU,1LLU),_1b5a4a7db_Range32(71960LLU,71983LLU,1LLU),_1b5a4a7db_Range32(71999LLU,72001LLU,2LLU),_1b5a4a7db_Range32(72096LLU,72103LLU,1LLU),_1b5a4a7db_Range32(72106LLU,72144LLU,1LLU),_1b5a4a7db_Range32(72161LLU,72163LLU,2LLU),_1b5a4a7db_Range32(72192LLU,72203LLU,11LLU),_1b5a4a7db_Range32(72204LLU,72242LLU,1LLU),_1b5a4a7db_Range32(72250LLU,72272LLU,22LLU),_1b5a4a7db_Range32(72284LLU,72329LLU,1LLU),_1b5a4a7db_Range32(72349LLU,72368LLU,19LLU),_1b5a4a7db_Range32(72369LLU,72440LLU,1LLU),_1b5a4a7db_Range32(72704LLU,72712LLU,1LLU),_1b5a4a7db_Range32(72714LLU,72750LLU,1LLU),_1b5a4a7db_Range32(72768LLU,72818LLU,50LLU),_1b5a4a7db_Range32(72819LLU,72847LLU,1LLU),_1b5a4a7db_Range32(72960LLU,72966LLU,1LLU),_1b5a4a7db_Range32(72968LLU,72969LLU,1LLU),_1b5a4a7db_Range32(72971LLU,73008LLU,1LLU),_1b5a4a7db_Range32(73030LLU,73056LLU,26LLU),_1b5a4a7db_Range32(73057LLU,73061LLU,1LLU),_1b5a4a7db_Range32(73063LLU,73064LLU,1LLU),_1b5a4a7db_Range32(73066LLU,73097LLU,1LLU),_1b5a4a7db_Range32(73112LLU,73440LLU,328LLU),_1b5a4a7db_Range32(73441LLU,73458LLU,1LLU),_1b5a4a7db_Range32(73474LLU,73476LLU,2LLU),_1b5a4a7db_Range32(73477LLU,73488LLU,1LLU),_1b5a4a7db_Range32(73490LLU,73523LLU,1LLU),_1b5a4a7db_Range32(73648LLU,73728LLU,80LLU),_1b5a4a7db_Range32(73729LLU,74649LLU,1LLU),_1b5a4a7db_Range32(74880LLU,75075LLU,1LLU),_1b5a4a7db_Range32(77712LLU,77808LLU,1LLU),_1b5a4a7db_Range32(77824LLU,78895LLU,1LLU),_1b5a4a7db_Range32(78913LLU,78918LLU,1LLU),_1b5a4a7db_Range32(82944LLU,83526LLU,1LLU),_1b5a4a7db_Range32(92160LLU,92728LLU,1LLU),_1b5a4a7db_Range32(92736LLU,92766LLU,1LLU),_1b5a4a7db_Range32(92784LLU,92862LLU,1LLU),_1b5a4a7db_Range32(92880LLU,92909LLU,1LLU),_1b5a4a7db_Range32(92928LLU,92975LLU,1LLU),_1b5a4a7db_Range32(93027LLU,93047LLU,1LLU),_1b5a4a7db_Range32(93053LLU,93071LLU,1LLU),_1b5a4a7db_Range32(93952LLU,94026LLU,1LLU),_1b5a4a7db_Range32(94032LLU,94208LLU,176LLU),_1b5a4a7db_Range32(94209LLU,100343LLU,1LLU),_1b5a4a7db_Range32(100352LLU,101589LLU,1LLU),_1b5a4a7db_Range32(101632LLU,101640LLU,1LLU),_1b5a4a7db_Range32(110592LLU,110882LLU,1LLU),_1b5a4a7db_Range32(110898LLU,110928LLU,30LLU),_1b5a4a7db_Range32(110929LLU,110930LLU,1LLU),_1b5a4a7db_Range32(110933LLU,110948LLU,15LLU),_1b5a4a7db_Range32(110949LLU,110951LLU,1LLU),_1b5a4a7db_Range32(110960LLU,111355LLU,1LLU),_1b5a4a7db_Range32(113664LLU,113770LLU,1LLU),_1b5a4a7db_Range32(113776LLU,113788LLU,1LLU),_1b5a4a7db_Range32(113792LLU,113800LLU,1LLU),_1b5a4a7db_Range32(113808LLU,113817LLU,1LLU),_1b5a4a7db_Range32(122634LLU,123136LLU,502LLU),_1b5a4a7db_Range32(123137LLU,123180LLU,1LLU),_1b5a4a7db_Range32(123214LLU,123536LLU,322LLU),_1b5a4a7db_Range32(123537LLU,123565LLU,1LLU),_1b5a4a7db_Range32(123584LLU,123627LLU,1LLU),_1b5a4a7db_Range32(124112LLU,124138LLU,1LLU),_1b5a4a7db_Range32(124896LLU,124902LLU,1LLU),_1b5a4a7db_Range32(124904LLU,124907LLU,1LLU),_1b5a4a7db_Range32(124909LLU,124910LLU,1LLU),_1b5a4a7db_Range32(124912LLU,124926LLU,1LLU),_1b5a4a7db_Range32(124928LLU,125124LLU,1LLU),_1b5a4a7db_Range32(126464LLU,126467LLU,1LLU),_1b5a4a7db_Range32(126469LLU,126495LLU,1LLU),_1b5a4a7db_Range32(126497LLU,126498LLU,1LLU),_1b5a4a7db_Range32(126500LLU,126503LLU,3LLU),_1b5a4a7db_Range32(126505LLU,126514LLU,1LLU),_1b5a4a7db_Range32(126516LLU,126519LLU,1LLU),_1b5a4a7db_Range32(126521LLU,126523LLU,2LLU),_1b5a4a7db_Range32(126530LLU,126535LLU,5LLU),_1b5a4a7db_Range32(126537LLU,126541LLU,2LLU),_1b5a4a7db_Range32(126542LLU,126543LLU,1LLU),_1b5a4a7db_Range32(126545LLU,126546LLU,1LLU),_1b5a4a7db_Range32(126548LLU,126551LLU,3LLU),_1b5a4a7db_Range32(126553LLU,126561LLU,2LLU),_1b5a4a7db_Range32(126562LLU,126564LLU,2LLU),_1b5a4a7db_Range32(126567LLU,126570LLU,1LLU),_1b5a4a7db_Range32(126572LLU,126578LLU,1LLU),_1b5a4a7db_Range32(126580LLU,126583LLU,1LLU),_1b5a4a7db_Range32(126585LLU,126588LLU,1LLU),_1b5a4a7db_Range32(126590LLU,126592LLU,2LLU),_1b5a4a7db_Range32(126593LLU,126601LLU,1LLU),_1b5a4a7db_Range32(126603LLU,126619LLU,1LLU),_1b5a4a7db_Range32(126625LLU,126627LLU,1LLU),_1b5a4a7db_Range32(126629LLU,126633LLU,1LLU),_1b5a4a7db_Range32(126635LLU,126651LLU,1LLU),_1b5a4a7db_Range32(131072LLU,173791LLU,1LLU),_1b5a4a7db_Range32(173824LLU,177977LLU,1LLU),_1b5a4a7db_Range32(177984LLU,178205LLU,1LLU),_1b5a4a7db_Range32(178208LLU,183969LLU,1LLU),_1b5a4a7db_Range32(183984LLU,191456LLU,1LLU),_1b5a4a7db_Range32(194560LLU,195101LLU,1LLU),_1b5a4a7db_Range32(196608LLU,201546LLU,1LLU),_1b5a4a7db_Range32(201552LLU,205743LLU,1LLU)}),1LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LT = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(453LLU,459LLU,3LLU),_1b5a4a7db_Range16(498LLU,8072LLU,7574LLU),_1b5a4a7db_Range16(8073LLU,8079LLU,1LLU),_1b5a4a7db_Range16(8088LLU,8095LLU,1LLU),_1b5a4a7db_Range16(8104LLU,8111LLU,1LLU),_1b5a4a7db_Range16(8124LLU,8140LLU,16LLU),_1b5a4a7db_Range16(8188LLU,8188LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LU = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(65LLU,90LLU,1LLU),_1b5a4a7db_Range16(192LLU,214LLU,1LLU),_1b5a4a7db_Range16(216LLU,222LLU,1LLU),_1b5a4a7db_Range16(256LLU,310LLU,2LLU),_1b5a4a7db_Range16(313LLU,327LLU,2LLU),_1b5a4a7db_Range16(330LLU,376LLU,2LLU),_1b5a4a7db_Range16(377LLU,381LLU,2LLU),_1b5a4a7db_Range16(385LLU,386LLU,1LLU),_1b5a4a7db_Range16(388LLU,390LLU,2LLU),_1b5a4a7db_Range16(391LLU,393LLU,2LLU),_1b5a4a7db_Range16(394LLU,395LLU,1LLU),_1b5a4a7db_Range16(398LLU,401LLU,1LLU),_1b5a4a7db_Range16(403LLU,404LLU,1LLU),_1b5a4a7db_Range16(406LLU,408LLU,1LLU),_1b5a4a7db_Range16(412LLU,413LLU,1LLU),_1b5a4a7db_Range16(415LLU,416LLU,1LLU),_1b5a4a7db_Range16(418LLU,422LLU,2LLU),_1b5a4a7db_Range16(423LLU,425LLU,2LLU),_1b5a4a7db_Range16(428LLU,430LLU,2LLU),_1b5a4a7db_Range16(431LLU,433LLU,2LLU),_1b5a4a7db_Range16(434LLU,435LLU,1LLU),_1b5a4a7db_Range16(437LLU,439LLU,2LLU),_1b5a4a7db_Range16(440LLU,444LLU,4LLU),_1b5a4a7db_Range16(452LLU,461LLU,3LLU),_1b5a4a7db_Range16(463LLU,475LLU,2LLU),_1b5a4a7db_Range16(478LLU,494LLU,2LLU),_1b5a4a7db_Range16(497LLU,500LLU,3LLU),_1b5a4a7db_Range16(502LLU,504LLU,1LLU),_1b5a4a7db_Range16(506LLU,562LLU,2LLU),_1b5a4a7db_Range16(570LLU,571LLU,1LLU),_1b5a4a7db_Range16(573LLU,574LLU,1LLU),_1b5a4a7db_Range16(577LLU,579LLU,2LLU),_1b5a4a7db_Range16(580LLU,582LLU,1LLU),_1b5a4a7db_Range16(584LLU,590LLU,2LLU),_1b5a4a7db_Range16(880LLU,882LLU,2LLU),_1b5a4a7db_Range16(886LLU,895LLU,9LLU),_1b5a4a7db_Range16(902LLU,904LLU,2LLU),_1b5a4a7db_Range16(905LLU,906LLU,1LLU),_1b5a4a7db_Range16(908LLU,910LLU,2LLU),_1b5a4a7db_Range16(911LLU,913LLU,2LLU),_1b5a4a7db_Range16(914LLU,929LLU,1LLU),_1b5a4a7db_Range16(931LLU,939LLU,1LLU),_1b5a4a7db_Range16(975LLU,978LLU,3LLU),_1b5a4a7db_Range16(979LLU,980LLU,1LLU),_1b5a4a7db_Range16(984LLU,1006LLU,2LLU),_1b5a4a7db_Range16(1012LLU,1015LLU,3LLU),_1b5a4a7db_Range16(1017LLU,1018LLU,1LLU),_1b5a4a7db_Range16(1021LLU,1071LLU,1LLU),_1b5a4a7db_Range16(1120LLU,1152LLU,2LLU),_1b5a4a7db_Range16(1162LLU,1216LLU,2LLU),_1b5a4a7db_Range16(1217LLU,1229LLU,2LLU),_1b5a4a7db_Range16(1232LLU,1326LLU,2LLU),_1b5a4a7db_Range16(1329LLU,1366LLU,1LLU),_1b5a4a7db_Range16(4256LLU,4293LLU,1LLU),_1b5a4a7db_Range16(4295LLU,4301LLU,6LLU),_1b5a4a7db_Range16(5024LLU,5109LLU,1LLU),_1b5a4a7db_Range16(7312LLU,7354LLU,1LLU),_1b5a4a7db_Range16(7357LLU,7359LLU,1LLU),_1b5a4a7db_Range16(7680LLU,7828LLU,2LLU),_1b5a4a7db_Range16(7838LLU,7934LLU,2LLU),_1b5a4a7db_Range16(7944LLU,7951LLU,1LLU),_1b5a4a7db_Range16(7960LLU,7965LLU,1LLU),_1b5a4a7db_Range16(7976LLU,7983LLU,1LLU),_1b5a4a7db_Range16(7992LLU,7999LLU,1LLU),_1b5a4a7db_Range16(8008LLU,8013LLU,1LLU),_1b5a4a7db_Range16(8025LLU,8031LLU,2LLU),_1b5a4a7db_Range16(8040LLU,8047LLU,1LLU),_1b5a4a7db_Range16(8120LLU,8123LLU,1LLU),_1b5a4a7db_Range16(8136LLU,8139LLU,1LLU),_1b5a4a7db_Range16(8152LLU,8155LLU,1LLU),_1b5a4a7db_Range16(8168LLU,8172LLU,1LLU),_1b5a4a7db_Range16(8184LLU,8187LLU,1LLU),_1b5a4a7db_Range16(8450LLU,8455LLU,5LLU),_1b5a4a7db_Range16(8459LLU,8461LLU,1LLU),_1b5a4a7db_Range16(8464LLU,8466LLU,1LLU),_1b5a4a7db_Range16(8469LLU,8473LLU,4LLU),_1b5a4a7db_Range16(8474LLU,8477LLU,1LLU),_1b5a4a7db_Range16(8484LLU,8490LLU,2LLU),_1b5a4a7db_Range16(8491LLU,8493LLU,1LLU),_1b5a4a7db_Range16(8496LLU,8499LLU,1LLU),_1b5a4a7db_Range16(8510LLU,8511LLU,1LLU),_1b5a4a7db_Range16(8517LLU,8579LLU,62LLU),_1b5a4a7db_Range16(11264LLU,11311LLU,1LLU),_1b5a4a7db_Range16(11360LLU,11362LLU,2LLU),_1b5a4a7db_Range16(11363LLU,11364LLU,1LLU),_1b5a4a7db_Range16(11367LLU,11373LLU,2LLU),_1b5a4a7db_Range16(11374LLU,11376LLU,1LLU),_1b5a4a7db_Range16(11378LLU,11381LLU,3LLU),_1b5a4a7db_Range16(11390LLU,11392LLU,1LLU),_1b5a4a7db_Range16(11394LLU,11490LLU,2LLU),_1b5a4a7db_Range16(11499LLU,11501LLU,2LLU),_1b5a4a7db_Range16(11506LLU,42560LLU,31054LLU),_1b5a4a7db_Range16(42562LLU,42604LLU,2LLU),_1b5a4a7db_Range16(42624LLU,42650LLU,2LLU),_1b5a4a7db_Range16(42786LLU,42798LLU,2LLU),_1b5a4a7db_Range16(42802LLU,42862LLU,2LLU),_1b5a4a7db_Range16(42873LLU,42877LLU,2LLU),_1b5a4a7db_Range16(42878LLU,42886LLU,2LLU),_1b5a4a7db_Range16(42891LLU,42893LLU,2LLU),_1b5a4a7db_Range16(42896LLU,42898LLU,2LLU),_1b5a4a7db_Range16(42902LLU,42922LLU,2LLU),_1b5a4a7db_Range16(42923LLU,42926LLU,1LLU),_1b5a4a7db_Range16(42928LLU,42932LLU,1LLU),_1b5a4a7db_Range16(42934LLU,42948LLU,2LLU),_1b5a4a7db_Range16(42949LLU,42951LLU,1LLU),_1b5a4a7db_Range16(42953LLU,42960LLU,7LLU),_1b5a4a7db_Range16(42966LLU,42968LLU,2LLU),_1b5a4a7db_Range16(42997LLU,65313LLU,22316LLU),_1b5a4a7db_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66560LLU,66599LLU,1LLU),_1b5a4a7db_Range32(66736LLU,66771LLU,1LLU),_1b5a4a7db_Range32(66928LLU,66938LLU,1LLU),_1b5a4a7db_Range32(66940LLU,66954LLU,1LLU),_1b5a4a7db_Range32(66956LLU,66962LLU,1LLU),_1b5a4a7db_Range32(66964LLU,66965LLU,1LLU),_1b5a4a7db_Range32(68736LLU,68786LLU,1LLU),_1b5a4a7db_Range32(71840LLU,71871LLU,1LLU),_1b5a4a7db_Range32(93760LLU,93791LLU,1LLU),_1b5a4a7db_Range32(119808LLU,119833LLU,1LLU),_1b5a4a7db_Range32(119860LLU,119885LLU,1LLU),_1b5a4a7db_Range32(119912LLU,119937LLU,1LLU),_1b5a4a7db_Range32(119964LLU,119966LLU,2LLU),_1b5a4a7db_Range32(119967LLU,119973LLU,3LLU),_1b5a4a7db_Range32(119974LLU,119977LLU,3LLU),_1b5a4a7db_Range32(119978LLU,119980LLU,1LLU),_1b5a4a7db_Range32(119982LLU,119989LLU,1LLU),_1b5a4a7db_Range32(120016LLU,120041LLU,1LLU),_1b5a4a7db_Range32(120068LLU,120069LLU,1LLU),_1b5a4a7db_Range32(120071LLU,120074LLU,1LLU),_1b5a4a7db_Range32(120077LLU,120084LLU,1LLU),_1b5a4a7db_Range32(120086LLU,120092LLU,1LLU),_1b5a4a7db_Range32(120120LLU,120121LLU,1LLU),_1b5a4a7db_Range32(120123LLU,120126LLU,1LLU),_1b5a4a7db_Range32(120128LLU,120132LLU,1LLU),_1b5a4a7db_Range32(120134LLU,120138LLU,4LLU),_1b5a4a7db_Range32(120139LLU,120144LLU,1LLU),_1b5a4a7db_Range32(120172LLU,120197LLU,1LLU),_1b5a4a7db_Range32(120224LLU,120249LLU,1LLU),_1b5a4a7db_Range32(120276LLU,120301LLU,1LLU),_1b5a4a7db_Range32(120328LLU,120353LLU,1LLU),_1b5a4a7db_Range32(120380LLU,120405LLU,1LLU),_1b5a4a7db_Range32(120432LLU,120457LLU,1LLU),_1b5a4a7db_Range32(120488LLU,120512LLU,1LLU),_1b5a4a7db_Range32(120546LLU,120570LLU,1LLU),_1b5a4a7db_Range32(120604LLU,120628LLU,1LLU),_1b5a4a7db_Range32(120662LLU,120686LLU,1LLU),_1b5a4a7db_Range32(120720LLU,120744LLU,1LLU),_1b5a4a7db_Range32(120778LLU,125184LLU,4406LLU),_1b5a4a7db_Range32(125185LLU,125217LLU,1LLU)}),3LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__M = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(768LLU,879LLU,1LLU),_1b5a4a7db_Range16(1155LLU,1161LLU,1LLU),_1b5a4a7db_Range16(1425LLU,1469LLU,1LLU),_1b5a4a7db_Range16(1471LLU,1473LLU,2LLU),_1b5a4a7db_Range16(1474LLU,1476LLU,2LLU),_1b5a4a7db_Range16(1477LLU,1479LLU,2LLU),_1b5a4a7db_Range16(1552LLU,1562LLU,1LLU),_1b5a4a7db_Range16(1611LLU,1631LLU,1LLU),_1b5a4a7db_Range16(1648LLU,1750LLU,102LLU),_1b5a4a7db_Range16(1751LLU,1756LLU,1LLU),_1b5a4a7db_Range16(1759LLU,1764LLU,1LLU),_1b5a4a7db_Range16(1767LLU,1768LLU,1LLU),_1b5a4a7db_Range16(1770LLU,1773LLU,1LLU),_1b5a4a7db_Range16(1809LLU,1840LLU,31LLU),_1b5a4a7db_Range16(1841LLU,1866LLU,1LLU),_1b5a4a7db_Range16(1958LLU,1968LLU,1LLU),_1b5a4a7db_Range16(2027LLU,2035LLU,1LLU),_1b5a4a7db_Range16(2045LLU,2070LLU,25LLU),_1b5a4a7db_Range16(2071LLU,2073LLU,1LLU),_1b5a4a7db_Range16(2075LLU,2083LLU,1LLU),_1b5a4a7db_Range16(2085LLU,2087LLU,1LLU),_1b5a4a7db_Range16(2089LLU,2093LLU,1LLU),_1b5a4a7db_Range16(2137LLU,2139LLU,1LLU),_1b5a4a7db_Range16(2200LLU,2207LLU,1LLU),_1b5a4a7db_Range16(2250LLU,2273LLU,1LLU),_1b5a4a7db_Range16(2275LLU,2307LLU,1LLU),_1b5a4a7db_Range16(2362LLU,2364LLU,1LLU),_1b5a4a7db_Range16(2366LLU,2383LLU,1LLU),_1b5a4a7db_Range16(2385LLU,2391LLU,1LLU),_1b5a4a7db_Range16(2402LLU,2403LLU,1LLU),_1b5a4a7db_Range16(2433LLU,2435LLU,1LLU),_1b5a4a7db_Range16(2492LLU,2494LLU,2LLU),_1b5a4a7db_Range16(2495LLU,2500LLU,1LLU),_1b5a4a7db_Range16(2503LLU,2504LLU,1LLU),_1b5a4a7db_Range16(2507LLU,2509LLU,1LLU),_1b5a4a7db_Range16(2519LLU,2530LLU,11LLU),_1b5a4a7db_Range16(2531LLU,2558LLU,27LLU),_1b5a4a7db_Range16(2561LLU,2563LLU,1LLU),_1b5a4a7db_Range16(2620LLU,2622LLU,2LLU),_1b5a4a7db_Range16(2623LLU,2626LLU,1LLU),_1b5a4a7db_Range16(2631LLU,2632LLU,1LLU),_1b5a4a7db_Range16(2635LLU,2637LLU,1LLU),_1b5a4a7db_Range16(2641LLU,2672LLU,31LLU),_1b5a4a7db_Range16(2673LLU,2677LLU,4LLU),_1b5a4a7db_Range16(2689LLU,2691LLU,1LLU),_1b5a4a7db_Range16(2748LLU,2750LLU,2LLU),_1b5a4a7db_Range16(2751LLU,2757LLU,1LLU),_1b5a4a7db_Range16(2759LLU,2761LLU,1LLU),_1b5a4a7db_Range16(2763LLU,2765LLU,1LLU),_1b5a4a7db_Range16(2786LLU,2787LLU,1LLU),_1b5a4a7db_Range16(2810LLU,2815LLU,1LLU),_1b5a4a7db_Range16(2817LLU,2819LLU,1LLU),_1b5a4a7db_Range16(2876LLU,2878LLU,2LLU),_1b5a4a7db_Range16(2879LLU,2884LLU,1LLU),_1b5a4a7db_Range16(2887LLU,2888LLU,1LLU),_1b5a4a7db_Range16(2891LLU,2893LLU,1LLU),_1b5a4a7db_Range16(2901LLU,2903LLU,1LLU),_1b5a4a7db_Range16(2914LLU,2915LLU,1LLU),_1b5a4a7db_Range16(2946LLU,3006LLU,60LLU),_1b5a4a7db_Range16(3007LLU,3010LLU,1LLU),_1b5a4a7db_Range16(3014LLU,3016LLU,1LLU),_1b5a4a7db_Range16(3018LLU,3021LLU,1LLU),_1b5a4a7db_Range16(3031LLU,3072LLU,41LLU),_1b5a4a7db_Range16(3073LLU,3076LLU,1LLU),_1b5a4a7db_Range16(3132LLU,3134LLU,2LLU),_1b5a4a7db_Range16(3135LLU,3140LLU,1LLU),_1b5a4a7db_Range16(3142LLU,3144LLU,1LLU),_1b5a4a7db_Range16(3146LLU,3149LLU,1LLU),_1b5a4a7db_Range16(3157LLU,3158LLU,1LLU),_1b5a4a7db_Range16(3170LLU,3171LLU,1LLU),_1b5a4a7db_Range16(3201LLU,3203LLU,1LLU),_1b5a4a7db_Range16(3260LLU,3262LLU,2LLU),_1b5a4a7db_Range16(3263LLU,3268LLU,1LLU),_1b5a4a7db_Range16(3270LLU,3272LLU,1LLU),_1b5a4a7db_Range16(3274LLU,3277LLU,1LLU),_1b5a4a7db_Range16(3285LLU,3286LLU,1LLU),_1b5a4a7db_Range16(3298LLU,3299LLU,1LLU),_1b5a4a7db_Range16(3315LLU,3328LLU,13LLU),_1b5a4a7db_Range16(3329LLU,3331LLU,1LLU),_1b5a4a7db_Range16(3387LLU,3388LLU,1LLU),_1b5a4a7db_Range16(3390LLU,3396LLU,1LLU),_1b5a4a7db_Range16(3398LLU,3400LLU,1LLU),_1b5a4a7db_Range16(3402LLU,3405LLU,1LLU),_1b5a4a7db_Range16(3415LLU,3426LLU,11LLU),_1b5a4a7db_Range16(3427LLU,3457LLU,30LLU),_1b5a4a7db_Range16(3458LLU,3459LLU,1LLU),_1b5a4a7db_Range16(3530LLU,3535LLU,5LLU),_1b5a4a7db_Range16(3536LLU,3540LLU,1LLU),_1b5a4a7db_Range16(3542LLU,3544LLU,2LLU),_1b5a4a7db_Range16(3545LLU,3551LLU,1LLU),_1b5a4a7db_Range16(3570LLU,3571LLU,1LLU),_1b5a4a7db_Range16(3633LLU,3636LLU,3LLU),_1b5a4a7db_Range16(3637LLU,3642LLU,1LLU),_1b5a4a7db_Range16(3655LLU,3662LLU,1LLU),_1b5a4a7db_Range16(3761LLU,3764LLU,3LLU),_1b5a4a7db_Range16(3765LLU,3772LLU,1LLU),_1b5a4a7db_Range16(3784LLU,3790LLU,1LLU),_1b5a4a7db_Range16(3864LLU,3865LLU,1LLU),_1b5a4a7db_Range16(3893LLU,3897LLU,2LLU),_1b5a4a7db_Range16(3902LLU,3903LLU,1LLU),_1b5a4a7db_Range16(3953LLU,3972LLU,1LLU),_1b5a4a7db_Range16(3974LLU,3975LLU,1LLU),_1b5a4a7db_Range16(3981LLU,3991LLU,1LLU),_1b5a4a7db_Range16(3993LLU,4028LLU,1LLU),_1b5a4a7db_Range16(4038LLU,4139LLU,101LLU),_1b5a4a7db_Range16(4140LLU,4158LLU,1LLU),_1b5a4a7db_Range16(4182LLU,4185LLU,1LLU),_1b5a4a7db_Range16(4190LLU,4192LLU,1LLU),_1b5a4a7db_Range16(4194LLU,4196LLU,1LLU),_1b5a4a7db_Range16(4199LLU,4205LLU,1LLU),_1b5a4a7db_Range16(4209LLU,4212LLU,1LLU),_1b5a4a7db_Range16(4226LLU,4237LLU,1LLU),_1b5a4a7db_Range16(4239LLU,4250LLU,11LLU),_1b5a4a7db_Range16(4251LLU,4253LLU,1LLU),_1b5a4a7db_Range16(4957LLU,4959LLU,1LLU),_1b5a4a7db_Range16(5906LLU,5909LLU,1LLU),_1b5a4a7db_Range16(5938LLU,5940LLU,1LLU),_1b5a4a7db_Range16(5970LLU,5971LLU,1LLU),_1b5a4a7db_Range16(6002LLU,6003LLU,1LLU),_1b5a4a7db_Range16(6068LLU,6099LLU,1LLU),_1b5a4a7db_Range16(6109LLU,6155LLU,46LLU),_1b5a4a7db_Range16(6156LLU,6157LLU,1LLU),_1b5a4a7db_Range16(6159LLU,6277LLU,118LLU),_1b5a4a7db_Range16(6278LLU,6313LLU,35LLU),_1b5a4a7db_Range16(6432LLU,6443LLU,1LLU),_1b5a4a7db_Range16(6448LLU,6459LLU,1LLU),_1b5a4a7db_Range16(6679LLU,6683LLU,1LLU),_1b5a4a7db_Range16(6741LLU,6750LLU,1LLU),_1b5a4a7db_Range16(6752LLU,6780LLU,1LLU),_1b5a4a7db_Range16(6783LLU,6832LLU,49LLU),_1b5a4a7db_Range16(6833LLU,6862LLU,1LLU),_1b5a4a7db_Range16(6912LLU,6916LLU,1LLU),_1b5a4a7db_Range16(6964LLU,6980LLU,1LLU),_1b5a4a7db_Range16(7019LLU,7027LLU,1LLU),_1b5a4a7db_Range16(7040LLU,7042LLU,1LLU),_1b5a4a7db_Range16(7073LLU,7085LLU,1LLU),_1b5a4a7db_Range16(7142LLU,7155LLU,1LLU),_1b5a4a7db_Range16(7204LLU,7223LLU,1LLU),_1b5a4a7db_Range16(7376LLU,7378LLU,1LLU),_1b5a4a7db_Range16(7380LLU,7400LLU,1LLU),_1b5a4a7db_Range16(7405LLU,7412LLU,7LLU),_1b5a4a7db_Range16(7415LLU,7417LLU,1LLU),_1b5a4a7db_Range16(7616LLU,7679LLU,1LLU),_1b5a4a7db_Range16(8400LLU,8432LLU,1LLU),_1b5a4a7db_Range16(11503LLU,11505LLU,1LLU),_1b5a4a7db_Range16(11647LLU,11744LLU,97LLU),_1b5a4a7db_Range16(11745LLU,11775LLU,1LLU),_1b5a4a7db_Range16(12330LLU,12335LLU,1LLU),_1b5a4a7db_Range16(12441LLU,12442LLU,1LLU),_1b5a4a7db_Range16(42607LLU,42610LLU,1LLU),_1b5a4a7db_Range16(42612LLU,42621LLU,1LLU),_1b5a4a7db_Range16(42654LLU,42655LLU,1LLU),_1b5a4a7db_Range16(42736LLU,42737LLU,1LLU),_1b5a4a7db_Range16(43010LLU,43014LLU,4LLU),_1b5a4a7db_Range16(43019LLU,43043LLU,24LLU),_1b5a4a7db_Range16(43044LLU,43047LLU,1LLU),_1b5a4a7db_Range16(43052LLU,43136LLU,84LLU),_1b5a4a7db_Range16(43137LLU,43188LLU,51LLU),_1b5a4a7db_Range16(43189LLU,43205LLU,1LLU),_1b5a4a7db_Range16(43232LLU,43249LLU,1LLU),_1b5a4a7db_Range16(43263LLU,43302LLU,39LLU),_1b5a4a7db_Range16(43303LLU,43309LLU,1LLU),_1b5a4a7db_Range16(43335LLU,43347LLU,1LLU),_1b5a4a7db_Range16(43392LLU,43395LLU,1LLU),_1b5a4a7db_Range16(43443LLU,43456LLU,1LLU),_1b5a4a7db_Range16(43493LLU,43561LLU,68LLU),_1b5a4a7db_Range16(43562LLU,43574LLU,1LLU),_1b5a4a7db_Range16(43587LLU,43596LLU,9LLU),_1b5a4a7db_Range16(43597LLU,43643LLU,46LLU),_1b5a4a7db_Range16(43644LLU,43645LLU,1LLU),_1b5a4a7db_Range16(43696LLU,43698LLU,2LLU),_1b5a4a7db_Range16(43699LLU,43700LLU,1LLU),_1b5a4a7db_Range16(43703LLU,43704LLU,1LLU),_1b5a4a7db_Range16(43710LLU,43711LLU,1LLU),_1b5a4a7db_Range16(43713LLU,43755LLU,42LLU),_1b5a4a7db_Range16(43756LLU,43759LLU,1LLU),_1b5a4a7db_Range16(43765LLU,43766LLU,1LLU),_1b5a4a7db_Range16(44003LLU,44010LLU,1LLU),_1b5a4a7db_Range16(44012LLU,44013LLU,1LLU),_1b5a4a7db_Range16(64286LLU,65024LLU,738LLU),_1b5a4a7db_Range16(65025LLU,65039LLU,1LLU),_1b5a4a7db_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66045LLU,66272LLU,227LLU),_1b5a4a7db_Range32(66422LLU,66426LLU,1LLU),_1b5a4a7db_Range32(68097LLU,68099LLU,1LLU),_1b5a4a7db_Range32(68101LLU,68102LLU,1LLU),_1b5a4a7db_Range32(68108LLU,68111LLU,1LLU),_1b5a4a7db_Range32(68152LLU,68154LLU,1LLU),_1b5a4a7db_Range32(68159LLU,68325LLU,166LLU),_1b5a4a7db_Range32(68326LLU,68900LLU,574LLU),_1b5a4a7db_Range32(68901LLU,68903LLU,1LLU),_1b5a4a7db_Range32(69291LLU,69292LLU,1LLU),_1b5a4a7db_Range32(69373LLU,69375LLU,1LLU),_1b5a4a7db_Range32(69446LLU,69456LLU,1LLU),_1b5a4a7db_Range32(69506LLU,69509LLU,1LLU),_1b5a4a7db_Range32(69632LLU,69634LLU,1LLU),_1b5a4a7db_Range32(69688LLU,69702LLU,1LLU),_1b5a4a7db_Range32(69744LLU,69747LLU,3LLU),_1b5a4a7db_Range32(69748LLU,69759LLU,11LLU),_1b5a4a7db_Range32(69760LLU,69762LLU,1LLU),_1b5a4a7db_Range32(69808LLU,69818LLU,1LLU),_1b5a4a7db_Range32(69826LLU,69888LLU,62LLU),_1b5a4a7db_Range32(69889LLU,69890LLU,1LLU),_1b5a4a7db_Range32(69927LLU,69940LLU,1LLU),_1b5a4a7db_Range32(69957LLU,69958LLU,1LLU),_1b5a4a7db_Range32(70003LLU,70016LLU,13LLU),_1b5a4a7db_Range32(70017LLU,70018LLU,1LLU),_1b5a4a7db_Range32(70067LLU,70080LLU,1LLU),_1b5a4a7db_Range32(70089LLU,70092LLU,1LLU),_1b5a4a7db_Range32(70094LLU,70095LLU,1LLU),_1b5a4a7db_Range32(70188LLU,70199LLU,1LLU),_1b5a4a7db_Range32(70206LLU,70209LLU,3LLU),_1b5a4a7db_Range32(70367LLU,70378LLU,1LLU),_1b5a4a7db_Range32(70400LLU,70403LLU,1LLU),_1b5a4a7db_Range32(70459LLU,70460LLU,1LLU),_1b5a4a7db_Range32(70462LLU,70468LLU,1LLU),_1b5a4a7db_Range32(70471LLU,70472LLU,1LLU),_1b5a4a7db_Range32(70475LLU,70477LLU,1LLU),_1b5a4a7db_Range32(70487LLU,70498LLU,11LLU),_1b5a4a7db_Range32(70499LLU,70502LLU,3LLU),_1b5a4a7db_Range32(70503LLU,70508LLU,1LLU),_1b5a4a7db_Range32(70512LLU,70516LLU,1LLU),_1b5a4a7db_Range32(70709LLU,70726LLU,1LLU),_1b5a4a7db_Range32(70750LLU,70832LLU,82LLU),_1b5a4a7db_Range32(70833LLU,70851LLU,1LLU),_1b5a4a7db_Range32(71087LLU,71093LLU,1LLU),_1b5a4a7db_Range32(71096LLU,71104LLU,1LLU),_1b5a4a7db_Range32(71132LLU,71133LLU,1LLU),_1b5a4a7db_Range32(71216LLU,71232LLU,1LLU),_1b5a4a7db_Range32(71339LLU,71351LLU,1LLU),_1b5a4a7db_Range32(71453LLU,71467LLU,1LLU),_1b5a4a7db_Range32(71724LLU,71738LLU,1LLU),_1b5a4a7db_Range32(71984LLU,71989LLU,1LLU),_1b5a4a7db_Range32(71991LLU,71992LLU,1LLU),_1b5a4a7db_Range32(71995LLU,71998LLU,1LLU),_1b5a4a7db_Range32(72000LLU,72002LLU,2LLU),_1b5a4a7db_Range32(72003LLU,72145LLU,142LLU),_1b5a4a7db_Range32(72146LLU,72151LLU,1LLU),_1b5a4a7db_Range32(72154LLU,72160LLU,1LLU),_1b5a4a7db_Range32(72164LLU,72193LLU,29LLU),_1b5a4a7db_Range32(72194LLU,72202LLU,1LLU),_1b5a4a7db_Range32(72243LLU,72249LLU,1LLU),_1b5a4a7db_Range32(72251LLU,72254LLU,1LLU),_1b5a4a7db_Range32(72263LLU,72273LLU,10LLU),_1b5a4a7db_Range32(72274LLU,72283LLU,1LLU),_1b5a4a7db_Range32(72330LLU,72345LLU,1LLU),_1b5a4a7db_Range32(72751LLU,72758LLU,1LLU),_1b5a4a7db_Range32(72760LLU,72767LLU,1LLU),_1b5a4a7db_Range32(72850LLU,72871LLU,1LLU),_1b5a4a7db_Range32(72873LLU,72886LLU,1LLU),_1b5a4a7db_Range32(73009LLU,73014LLU,1LLU),_1b5a4a7db_Range32(73018LLU,73020LLU,2LLU),_1b5a4a7db_Range32(73021LLU,73023LLU,2LLU),_1b5a4a7db_Range32(73024LLU,73029LLU,1LLU),_1b5a4a7db_Range32(73031LLU,73098LLU,67LLU),_1b5a4a7db_Range32(73099LLU,73102LLU,1LLU),_1b5a4a7db_Range32(73104LLU,73105LLU,1LLU),_1b5a4a7db_Range32(73107LLU,73111LLU,1LLU),_1b5a4a7db_Range32(73459LLU,73462LLU,1LLU),_1b5a4a7db_Range32(73472LLU,73473LLU,1LLU),_1b5a4a7db_Range32(73475LLU,73524LLU,49LLU),_1b5a4a7db_Range32(73525LLU,73530LLU,1LLU),_1b5a4a7db_Range32(73534LLU,73538LLU,1LLU),_1b5a4a7db_Range32(78912LLU,78919LLU,7LLU),_1b5a4a7db_Range32(78920LLU,78933LLU,1LLU),_1b5a4a7db_Range32(92912LLU,92916LLU,1LLU),_1b5a4a7db_Range32(92976LLU,92982LLU,1LLU),_1b5a4a7db_Range32(94031LLU,94033LLU,2LLU),_1b5a4a7db_Range32(94034LLU,94087LLU,1LLU),_1b5a4a7db_Range32(94095LLU,94098LLU,1LLU),_1b5a4a7db_Range32(94180LLU,94192LLU,12LLU),_1b5a4a7db_Range32(94193LLU,113821LLU,19628LLU),_1b5a4a7db_Range32(113822LLU,118528LLU,4706LLU),_1b5a4a7db_Range32(118529LLU,118573LLU,1LLU),_1b5a4a7db_Range32(118576LLU,118598LLU,1LLU),_1b5a4a7db_Range32(119141LLU,119145LLU,1LLU),_1b5a4a7db_Range32(119149LLU,119154LLU,1LLU),_1b5a4a7db_Range32(119163LLU,119170LLU,1LLU),_1b5a4a7db_Range32(119173LLU,119179LLU,1LLU),_1b5a4a7db_Range32(119210LLU,119213LLU,1LLU),_1b5a4a7db_Range32(119362LLU,119364LLU,1LLU),_1b5a4a7db_Range32(121344LLU,121398LLU,1LLU),_1b5a4a7db_Range32(121403LLU,121452LLU,1LLU),_1b5a4a7db_Range32(121461LLU,121476LLU,15LLU),_1b5a4a7db_Range32(121499LLU,121503LLU,1LLU),_1b5a4a7db_Range32(121505LLU,121519LLU,1LLU),_1b5a4a7db_Range32(122880LLU,122886LLU,1LLU),_1b5a4a7db_Range32(122888LLU,122904LLU,1LLU),_1b5a4a7db_Range32(122907LLU,122913LLU,1LLU),_1b5a4a7db_Range32(122915LLU,122916LLU,1LLU),_1b5a4a7db_Range32(122918LLU,122922LLU,1LLU),_1b5a4a7db_Range32(123023LLU,123184LLU,161LLU),_1b5a4a7db_Range32(123185LLU,123190LLU,1LLU),_1b5a4a7db_Range32(123566LLU,123628LLU,62LLU),_1b5a4a7db_Range32(123629LLU,123631LLU,1LLU),_1b5a4a7db_Range32(124140LLU,124143LLU,1LLU),_1b5a4a7db_Range32(125136LLU,125142LLU,1LLU),_1b5a4a7db_Range32(125252LLU,125258LLU,1LLU),_1b5a4a7db_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(2307LLU,2363LLU,56LLU),_1b5a4a7db_Range16(2366LLU,2368LLU,1LLU),_1b5a4a7db_Range16(2377LLU,2380LLU,1LLU),_1b5a4a7db_Range16(2382LLU,2383LLU,1LLU),_1b5a4a7db_Range16(2434LLU,2435LLU,1LLU),_1b5a4a7db_Range16(2494LLU,2496LLU,1LLU),_1b5a4a7db_Range16(2503LLU,2504LLU,1LLU),_1b5a4a7db_Range16(2507LLU,2508LLU,1LLU),_1b5a4a7db_Range16(2519LLU,2563LLU,44LLU),_1b5a4a7db_Range16(2622LLU,2624LLU,1LLU),_1b5a4a7db_Range16(2691LLU,2750LLU,59LLU),_1b5a4a7db_Range16(2751LLU,2752LLU,1LLU),_1b5a4a7db_Range16(2761LLU,2763LLU,2LLU),_1b5a4a7db_Range16(2764LLU,2818LLU,54LLU),_1b5a4a7db_Range16(2819LLU,2878LLU,59LLU),_1b5a4a7db_Range16(2880LLU,2887LLU,7LLU),_1b5a4a7db_Range16(2888LLU,2891LLU,3LLU),_1b5a4a7db_Range16(2892LLU,2903LLU,11LLU),_1b5a4a7db_Range16(3006LLU,3007LLU,1LLU),_1b5a4a7db_Range16(3009LLU,3010LLU,1LLU),_1b5a4a7db_Range16(3014LLU,3016LLU,1LLU),_1b5a4a7db_Range16(3018LLU,3020LLU,1LLU),_1b5a4a7db_Range16(3031LLU,3073LLU,42LLU),_1b5a4a7db_Range16(3074LLU,3075LLU,1LLU),_1b5a4a7db_Range16(3137LLU,3140LLU,1LLU),_1b5a4a7db_Range16(3202LLU,3203LLU,1LLU),_1b5a4a7db_Range16(3262LLU,3264LLU,2LLU),_1b5a4a7db_Range16(3265LLU,3268LLU,1LLU),_1b5a4a7db_Range16(3271LLU,3272LLU,1LLU),_1b5a4a7db_Range16(3274LLU,3275LLU,1LLU),_1b5a4a7db_Range16(3285LLU,3286LLU,1LLU),_1b5a4a7db_Range16(3315LLU,3330LLU,15LLU),_1b5a4a7db_Range16(3331LLU,3390LLU,59LLU),_1b5a4a7db_Range16(3391LLU,3392LLU,1LLU),_1b5a4a7db_Range16(3398LLU,3400LLU,1LLU),_1b5a4a7db_Range16(3402LLU,3404LLU,1LLU),_1b5a4a7db_Range16(3415LLU,3458LLU,43LLU),_1b5a4a7db_Range16(3459LLU,3535LLU,76LLU),_1b5a4a7db_Range16(3536LLU,3537LLU,1LLU),_1b5a4a7db_Range16(3544LLU,3551LLU,1LLU),_1b5a4a7db_Range16(3570LLU,3571LLU,1LLU),_1b5a4a7db_Range16(3902LLU,3903LLU,1LLU),_1b5a4a7db_Range16(3967LLU,4139LLU,172LLU),_1b5a4a7db_Range16(4140LLU,4145LLU,5LLU),_1b5a4a7db_Range16(4152LLU,4155LLU,3LLU),_1b5a4a7db_Range16(4156LLU,4182LLU,26LLU),_1b5a4a7db_Range16(4183LLU,4194LLU,11LLU),_1b5a4a7db_Range16(4195LLU,4196LLU,1LLU),_1b5a4a7db_Range16(4199LLU,4205LLU,1LLU),_1b5a4a7db_Range16(4227LLU,4228LLU,1LLU),_1b5a4a7db_Range16(4231LLU,4236LLU,1LLU),_1b5a4a7db_Range16(4239LLU,4250LLU,11LLU),_1b5a4a7db_Range16(4251LLU,4252LLU,1LLU),_1b5a4a7db_Range16(5909LLU,5940LLU,31LLU),_1b5a4a7db_Range16(6070LLU,6078LLU,8LLU),_1b5a4a7db_Range16(6079LLU,6085LLU,1LLU),_1b5a4a7db_Range16(6087LLU,6088LLU,1LLU),_1b5a4a7db_Range16(6435LLU,6438LLU,1LLU),_1b5a4a7db_Range16(6441LLU,6443LLU,1LLU),_1b5a4a7db_Range16(6448LLU,6449LLU,1LLU),_1b5a4a7db_Range16(6451LLU,6456LLU,1LLU),_1b5a4a7db_Range16(6681LLU,6682LLU,1LLU),_1b5a4a7db_Range16(6741LLU,6743LLU,2LLU),_1b5a4a7db_Range16(6753LLU,6755LLU,2LLU),_1b5a4a7db_Range16(6756LLU,6765LLU,9LLU),_1b5a4a7db_Range16(6766LLU,6770LLU,1LLU),_1b5a4a7db_Range16(6916LLU,6965LLU,49LLU),_1b5a4a7db_Range16(6971LLU,6973LLU,2LLU),_1b5a4a7db_Range16(6974LLU,6977LLU,1LLU),_1b5a4a7db_Range16(6979LLU,6980LLU,1LLU),_1b5a4a7db_Range16(7042LLU,7073LLU,31LLU),_1b5a4a7db_Range16(7078LLU,7079LLU,1LLU),_1b5a4a7db_Range16(7082LLU,7143LLU,61LLU),_1b5a4a7db_Range16(7146LLU,7148LLU,1LLU),_1b5a4a7db_Range16(7150LLU,7154LLU,4LLU),_1b5a4a7db_Range16(7155LLU,7204LLU,49LLU),_1b5a4a7db_Range16(7205LLU,7211LLU,1LLU),_1b5a4a7db_Range16(7220LLU,7221LLU,1LLU),_1b5a4a7db_Range16(7393LLU,7415LLU,22LLU),_1b5a4a7db_Range16(12334LLU,12335LLU,1LLU),_1b5a4a7db_Range16(43043LLU,43044LLU,1LLU),_1b5a4a7db_Range16(43047LLU,43136LLU,89LLU),_1b5a4a7db_Range16(43137LLU,43188LLU,51LLU),_1b5a4a7db_Range16(43189LLU,43203LLU,1LLU),_1b5a4a7db_Range16(43346LLU,43347LLU,1LLU),_1b5a4a7db_Range16(43395LLU,43444LLU,49LLU),_1b5a4a7db_Range16(43445LLU,43450LLU,5LLU),_1b5a4a7db_Range16(43451LLU,43454LLU,3LLU),_1b5a4a7db_Range16(43455LLU,43456LLU,1LLU),_1b5a4a7db_Range16(43567LLU,43568LLU,1LLU),_1b5a4a7db_Range16(43571LLU,43572LLU,1LLU),_1b5a4a7db_Range16(43597LLU,43643LLU,46LLU),_1b5a4a7db_Range16(43645LLU,43755LLU,110LLU),_1b5a4a7db_Range16(43758LLU,43759LLU,1LLU),_1b5a4a7db_Range16(43765LLU,44003LLU,238LLU),_1b5a4a7db_Range16(44004LLU,44006LLU,2LLU),_1b5a4a7db_Range16(44007LLU,44009LLU,2LLU),_1b5a4a7db_Range16(44010LLU,44012LLU,2LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69632LLU,69634LLU,2LLU),_1b5a4a7db_Range32(69762LLU,69808LLU,46LLU),_1b5a4a7db_Range32(69809LLU,69810LLU,1LLU),_1b5a4a7db_Range32(69815LLU,69816LLU,1LLU),_1b5a4a7db_Range32(69932LLU,69957LLU,25LLU),_1b5a4a7db_Range32(69958LLU,70018LLU,60LLU),_1b5a4a7db_Range32(70067LLU,70069LLU,1LLU),_1b5a4a7db_Range32(70079LLU,70080LLU,1LLU),_1b5a4a7db_Range32(70094LLU,70188LLU,94LLU),_1b5a4a7db_Range32(70189LLU,70190LLU,1LLU),_1b5a4a7db_Range32(70194LLU,70195LLU,1LLU),_1b5a4a7db_Range32(70197LLU,70368LLU,171LLU),_1b5a4a7db_Range32(70369LLU,70370LLU,1LLU),_1b5a4a7db_Range32(70402LLU,70403LLU,1LLU),_1b5a4a7db_Range32(70462LLU,70463LLU,1LLU),_1b5a4a7db_Range32(70465LLU,70468LLU,1LLU),_1b5a4a7db_Range32(70471LLU,70472LLU,1LLU),_1b5a4a7db_Range32(70475LLU,70477LLU,1LLU),_1b5a4a7db_Range32(70487LLU,70498LLU,11LLU),_1b5a4a7db_Range32(70499LLU,70709LLU,210LLU),_1b5a4a7db_Range32(70710LLU,70711LLU,1LLU),_1b5a4a7db_Range32(70720LLU,70721LLU,1LLU),_1b5a4a7db_Range32(70725LLU,70832LLU,107LLU),_1b5a4a7db_Range32(70833LLU,70834LLU,1LLU),_1b5a4a7db_Range32(70841LLU,70843LLU,2LLU),_1b5a4a7db_Range32(70844LLU,70846LLU,1LLU),_1b5a4a7db_Range32(70849LLU,71087LLU,238LLU),_1b5a4a7db_Range32(71088LLU,71089LLU,1LLU),_1b5a4a7db_Range32(71096LLU,71099LLU,1LLU),_1b5a4a7db_Range32(71102LLU,71216LLU,114LLU),_1b5a4a7db_Range32(71217LLU,71218LLU,1LLU),_1b5a4a7db_Range32(71227LLU,71228LLU,1LLU),_1b5a4a7db_Range32(71230LLU,71340LLU,110LLU),_1b5a4a7db_Range32(71342LLU,71343LLU,1LLU),_1b5a4a7db_Range32(71350LLU,71456LLU,106LLU),_1b5a4a7db_Range32(71457LLU,71462LLU,5LLU),_1b5a4a7db_Range32(71724LLU,71726LLU,1LLU),_1b5a4a7db_Range32(71736LLU,71984LLU,248LLU),_1b5a4a7db_Range32(71985LLU,71989LLU,1LLU),_1b5a4a7db_Range32(71991LLU,71992LLU,1LLU),_1b5a4a7db_Range32(71997LLU,72000LLU,3LLU),_1b5a4a7db_Range32(72002LLU,72145LLU,143LLU),_1b5a4a7db_Range32(72146LLU,72147LLU,1LLU),_1b5a4a7db_Range32(72156LLU,72159LLU,1LLU),_1b5a4a7db_Range32(72164LLU,72249LLU,85LLU),_1b5a4a7db_Range32(72279LLU,72280LLU,1LLU),_1b5a4a7db_Range32(72343LLU,72751LLU,408LLU),_1b5a4a7db_Range32(72766LLU,72873LLU,107LLU),_1b5a4a7db_Range32(72881LLU,72884LLU,3LLU),_1b5a4a7db_Range32(73098LLU,73102LLU,1LLU),_1b5a4a7db_Range32(73107LLU,73108LLU,1LLU),_1b5a4a7db_Range32(73110LLU,73461LLU,351LLU),_1b5a4a7db_Range32(73462LLU,73475LLU,13LLU),_1b5a4a7db_Range32(73524LLU,73525LLU,1LLU),_1b5a4a7db_Range32(73534LLU,73535LLU,1LLU),_1b5a4a7db_Range32(73537LLU,94033LLU,20496LLU),_1b5a4a7db_Range32(94034LLU,94087LLU,1LLU),_1b5a4a7db_Range32(94192LLU,94193LLU,1LLU),_1b5a4a7db_Range32(119141LLU,119142LLU,1LLU),_1b5a4a7db_Range32(119149LLU,119154LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ME = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(1160LLU,1161LLU,1LLU),_1b5a4a7db_Range16(6846LLU,8413LLU,1567LLU),_1b5a4a7db_Range16(8414LLU,8416LLU,1LLU),_1b5a4a7db_Range16(8418LLU,8420LLU,1LLU),_1b5a4a7db_Range16(42608LLU,42610LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(768LLU,879LLU,1LLU),_1b5a4a7db_Range16(1155LLU,1159LLU,1LLU),_1b5a4a7db_Range16(1425LLU,1469LLU,1LLU),_1b5a4a7db_Range16(1471LLU,1473LLU,2LLU),_1b5a4a7db_Range16(1474LLU,1476LLU,2LLU),_1b5a4a7db_Range16(1477LLU,1479LLU,2LLU),_1b5a4a7db_Range16(1552LLU,1562LLU,1LLU),_1b5a4a7db_Range16(1611LLU,1631LLU,1LLU),_1b5a4a7db_Range16(1648LLU,1750LLU,102LLU),_1b5a4a7db_Range16(1751LLU,1756LLU,1LLU),_1b5a4a7db_Range16(1759LLU,1764LLU,1LLU),_1b5a4a7db_Range16(1767LLU,1768LLU,1LLU),_1b5a4a7db_Range16(1770LLU,1773LLU,1LLU),_1b5a4a7db_Range16(1809LLU,1840LLU,31LLU),_1b5a4a7db_Range16(1841LLU,1866LLU,1LLU),_1b5a4a7db_Range16(1958LLU,1968LLU,1LLU),_1b5a4a7db_Range16(2027LLU,2035LLU,1LLU),_1b5a4a7db_Range16(2045LLU,2070LLU,25LLU),_1b5a4a7db_Range16(2071LLU,2073LLU,1LLU),_1b5a4a7db_Range16(2075LLU,2083LLU,1LLU),_1b5a4a7db_Range16(2085LLU,2087LLU,1LLU),_1b5a4a7db_Range16(2089LLU,2093LLU,1LLU),_1b5a4a7db_Range16(2137LLU,2139LLU,1LLU),_1b5a4a7db_Range16(2200LLU,2207LLU,1LLU),_1b5a4a7db_Range16(2250LLU,2273LLU,1LLU),_1b5a4a7db_Range16(2275LLU,2306LLU,1LLU),_1b5a4a7db_Range16(2362LLU,2364LLU,2LLU),_1b5a4a7db_Range16(2369LLU,2376LLU,1LLU),_1b5a4a7db_Range16(2381LLU,2385LLU,4LLU),_1b5a4a7db_Range16(2386LLU,2391LLU,1LLU),_1b5a4a7db_Range16(2402LLU,2403LLU,1LLU),_1b5a4a7db_Range16(2433LLU,2492LLU,59LLU),_1b5a4a7db_Range16(2497LLU,2500LLU,1LLU),_1b5a4a7db_Range16(2509LLU,2530LLU,21LLU),_1b5a4a7db_Range16(2531LLU,2558LLU,27LLU),_1b5a4a7db_Range16(2561LLU,2562LLU,1LLU),_1b5a4a7db_Range16(2620LLU,2625LLU,5LLU),_1b5a4a7db_Range16(2626LLU,2631LLU,5LLU),_1b5a4a7db_Range16(2632LLU,2635LLU,3LLU),_1b5a4a7db_Range16(2636LLU,2637LLU,1LLU),_1b5a4a7db_Range16(2641LLU,2672LLU,31LLU),_1b5a4a7db_Range16(2673LLU,2677LLU,4LLU),_1b5a4a7db_Range16(2689LLU,2690LLU,1LLU),_1b5a4a7db_Range16(2748LLU,2753LLU,5LLU),_1b5a4a7db_Range16(2754LLU,2757LLU,1LLU),_1b5a4a7db_Range16(2759LLU,2760LLU,1LLU),_1b5a4a7db_Range16(2765LLU,2786LLU,21LLU),_1b5a4a7db_Range16(2787LLU,2810LLU,23LLU),_1b5a4a7db_Range16(2811LLU,2815LLU,1LLU),_1b5a4a7db_Range16(2817LLU,2876LLU,59LLU),_1b5a4a7db_Range16(2879LLU,2881LLU,2LLU),_1b5a4a7db_Range16(2882LLU,2884LLU,1LLU),_1b5a4a7db_Range16(2893LLU,2901LLU,8LLU),_1b5a4a7db_Range16(2902LLU,2914LLU,12LLU),_1b5a4a7db_Range16(2915LLU,2946LLU,31LLU),_1b5a4a7db_Range16(3008LLU,3021LLU,13LLU),_1b5a4a7db_Range16(3072LLU,3076LLU,4LLU),_1b5a4a7db_Range16(3132LLU,3134LLU,2LLU),_1b5a4a7db_Range16(3135LLU,3136LLU,1LLU),_1b5a4a7db_Range16(3142LLU,3144LLU,1LLU),_1b5a4a7db_Range16(3146LLU,3149LLU,1LLU),_1b5a4a7db_Range16(3157LLU,3158LLU,1LLU),_1b5a4a7db_Range16(3170LLU,3171LLU,1LLU),_1b5a4a7db_Range16(3201LLU,3260LLU,59LLU),_1b5a4a7db_Range16(3263LLU,3270LLU,7LLU),_1b5a4a7db_Range16(3276LLU,3277LLU,1LLU),_1b5a4a7db_Range16(3298LLU,3299LLU,1LLU),_1b5a4a7db_Range16(3328LLU,3329LLU,1LLU),_1b5a4a7db_Range16(3387LLU,3388LLU,1LLU),_1b5a4a7db_Range16(3393LLU,3396LLU,1LLU),_1b5a4a7db_Range16(3405LLU,3426LLU,21LLU),_1b5a4a7db_Range16(3427LLU,3457LLU,30LLU),_1b5a4a7db_Range16(3530LLU,3538LLU,8LLU),_1b5a4a7db_Range16(3539LLU,3540LLU,1LLU),_1b5a4a7db_Range16(3542LLU,3633LLU,91LLU),_1b5a4a7db_Range16(3636LLU,3642LLU,1LLU),_1b5a4a7db_Range16(3655LLU,3662LLU,1LLU),_1b5a4a7db_Range16(3761LLU,3764LLU,3LLU),_1b5a4a7db_Range16(3765LLU,3772LLU,1LLU),_1b5a4a7db_Range16(3784LLU,3790LLU,1LLU),_1b5a4a7db_Range16(3864LLU,3865LLU,1LLU),_1b5a4a7db_Range16(3893LLU,3897LLU,2LLU),_1b5a4a7db_Range16(3953LLU,3966LLU,1LLU),_1b5a4a7db_Range16(3968LLU,3972LLU,1LLU),_1b5a4a7db_Range16(3974LLU,3975LLU,1LLU),_1b5a4a7db_Range16(3981LLU,3991LLU,1LLU),_1b5a4a7db_Range16(3993LLU,4028LLU,1LLU),_1b5a4a7db_Range16(4038LLU,4141LLU,103LLU),_1b5a4a7db_Range16(4142LLU,4144LLU,1LLU),_1b5a4a7db_Range16(4146LLU,4151LLU,1LLU),_1b5a4a7db_Range16(4153LLU,4154LLU,1LLU),_1b5a4a7db_Range16(4157LLU,4158LLU,1LLU),_1b5a4a7db_Range16(4184LLU,4185LLU,1LLU),_1b5a4a7db_Range16(4190LLU,4192LLU,1LLU),_1b5a4a7db_Range16(4209LLU,4212LLU,1LLU),_1b5a4a7db_Range16(4226LLU,4229LLU,3LLU),_1b5a4a7db_Range16(4230LLU,4237LLU,7LLU),_1b5a4a7db_Range16(4253LLU,4957LLU,704LLU),_1b5a4a7db_Range16(4958LLU,4959LLU,1LLU),_1b5a4a7db_Range16(5906LLU,5908LLU,1LLU),_1b5a4a7db_Range16(5938LLU,5939LLU,1LLU),_1b5a4a7db_Range16(5970LLU,5971LLU,1LLU),_1b5a4a7db_Range16(6002LLU,6003LLU,1LLU),_1b5a4a7db_Range16(6068LLU,6069LLU,1LLU),_1b5a4a7db_Range16(6071LLU,6077LLU,1LLU),_1b5a4a7db_Range16(6086LLU,6089LLU,3LLU),_1b5a4a7db_Range16(6090LLU,6099LLU,1LLU),_1b5a4a7db_Range16(6109LLU,6155LLU,46LLU),_1b5a4a7db_Range16(6156LLU,6157LLU,1LLU),_1b5a4a7db_Range16(6159LLU,6277LLU,118LLU),_1b5a4a7db_Range16(6278LLU,6313LLU,35LLU),_1b5a4a7db_Range16(6432LLU,6434LLU,1LLU),_1b5a4a7db_Range16(6439LLU,6440LLU,1LLU),_1b5a4a7db_Range16(6450LLU,6457LLU,7LLU),_1b5a4a7db_Range16(6458LLU,6459LLU,1LLU),_1b5a4a7db_Range16(6679LLU,6680LLU,1LLU),_1b5a4a7db_Range16(6683LLU,6742LLU,59LLU),_1b5a4a7db_Range16(6744LLU,6750LLU,1LLU),_1b5a4a7db_Range16(6752LLU,6754LLU,2LLU),_1b5a4a7db_Range16(6757LLU,6764LLU,1LLU),_1b5a4a7db_Range16(6771LLU,6780LLU,1LLU),_1b5a4a7db_Range16(6783LLU,6832LLU,49LLU),_1b5a4a7db_Range16(6833LLU,6845LLU,1LLU),_1b5a4a7db_Range16(6847LLU,6862LLU,1LLU),_1b5a4a7db_Range16(6912LLU,6915LLU,1LLU),_1b5a4a7db_Range16(6964LLU,6966LLU,2LLU),_1b5a4a7db_Range16(6967LLU,6970LLU,1LLU),_1b5a4a7db_Range16(6972LLU,6978LLU,6LLU),_1b5a4a7db_Range16(7019LLU,7027LLU,1LLU),_1b5a4a7db_Range16(7040LLU,7041LLU,1LLU),_1b5a4a7db_Range16(7074LLU,7077LLU,1LLU),_1b5a4a7db_Range16(7080LLU,7081LLU,1LLU),_1b5a4a7db_Range16(7083LLU,7085LLU,1LLU),_1b5a4a7db_Range16(7142LLU,7144LLU,2LLU),_1b5a4a7db_Range16(7145LLU,7149LLU,4LLU),_1b5a4a7db_Range16(7151LLU,7153LLU,1LLU),_1b5a4a7db_Range16(7212LLU,7219LLU,1LLU),_1b5a4a7db_Range16(7222LLU,7223LLU,1LLU),_1b5a4a7db_Range16(7376LLU,7378LLU,1LLU),_1b5a4a7db_Range16(7380LLU,7392LLU,1LLU),_1b5a4a7db_Range16(7394LLU,7400LLU,1LLU),_1b5a4a7db_Range16(7405LLU,7412LLU,7LLU),_1b5a4a7db_Range16(7416LLU,7417LLU,1LLU),_1b5a4a7db_Range16(7616LLU,7679LLU,1LLU),_1b5a4a7db_Range16(8400LLU,8412LLU,1LLU),_1b5a4a7db_Range16(8417LLU,8421LLU,4LLU),_1b5a4a7db_Range16(8422LLU,8432LLU,1LLU),_1b5a4a7db_Range16(11503LLU,11505LLU,1LLU),_1b5a4a7db_Range16(11647LLU,11744LLU,97LLU),_1b5a4a7db_Range16(11745LLU,11775LLU,1LLU),_1b5a4a7db_Range16(12330LLU,12333LLU,1LLU),_1b5a4a7db_Range16(12441LLU,12442LLU,1LLU),_1b5a4a7db_Range16(42607LLU,42612LLU,5LLU),_1b5a4a7db_Range16(42613LLU,42621LLU,1LLU),_1b5a4a7db_Range16(42654LLU,42655LLU,1LLU),_1b5a4a7db_Range16(42736LLU,42737LLU,1LLU),_1b5a4a7db_Range16(43010LLU,43014LLU,4LLU),_1b5a4a7db_Range16(43019LLU,43045LLU,26LLU),_1b5a4a7db_Range16(43046LLU,43052LLU,6LLU),_1b5a4a7db_Range16(43204LLU,43205LLU,1LLU),_1b5a4a7db_Range16(43232LLU,43249LLU,1LLU),_1b5a4a7db_Range16(43263LLU,43302LLU,39LLU),_1b5a4a7db_Range16(43303LLU,43309LLU,1LLU),_1b5a4a7db_Range16(43335LLU,43345LLU,1LLU),_1b5a4a7db_Range16(43392LLU,43394LLU,1LLU),_1b5a4a7db_Range16(43443LLU,43446LLU,3LLU),_1b5a4a7db_Range16(43447LLU,43449LLU,1LLU),_1b5a4a7db_Range16(43452LLU,43453LLU,1LLU),_1b5a4a7db_Range16(43493LLU,43561LLU,68LLU),_1b5a4a7db_Range16(43562LLU,43566LLU,1LLU),_1b5a4a7db_Range16(43569LLU,43570LLU,1LLU),_1b5a4a7db_Range16(43573LLU,43574LLU,1LLU),_1b5a4a7db_Range16(43587LLU,43596LLU,9LLU),_1b5a4a7db_Range16(43644LLU,43696LLU,52LLU),_1b5a4a7db_Range16(43698LLU,43700LLU,1LLU),_1b5a4a7db_Range16(43703LLU,43704LLU,1LLU),_1b5a4a7db_Range16(43710LLU,43711LLU,1LLU),_1b5a4a7db_Range16(43713LLU,43756LLU,43LLU),_1b5a4a7db_Range16(43757LLU,43766LLU,9LLU),_1b5a4a7db_Range16(44005LLU,44008LLU,3LLU),_1b5a4a7db_Range16(44013LLU,64286LLU,20273LLU),_1b5a4a7db_Range16(65024LLU,65039LLU,1LLU),_1b5a4a7db_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66045LLU,66272LLU,227LLU),_1b5a4a7db_Range32(66422LLU,66426LLU,1LLU),_1b5a4a7db_Range32(68097LLU,68099LLU,1LLU),_1b5a4a7db_Range32(68101LLU,68102LLU,1LLU),_1b5a4a7db_Range32(68108LLU,68111LLU,1LLU),_1b5a4a7db_Range32(68152LLU,68154LLU,1LLU),_1b5a4a7db_Range32(68159LLU,68325LLU,166LLU),_1b5a4a7db_Range32(68326LLU,68900LLU,574LLU),_1b5a4a7db_Range32(68901LLU,68903LLU,1LLU),_1b5a4a7db_Range32(69291LLU,69292LLU,1LLU),_1b5a4a7db_Range32(69373LLU,69375LLU,1LLU),_1b5a4a7db_Range32(69446LLU,69456LLU,1LLU),_1b5a4a7db_Range32(69506LLU,69509LLU,1LLU),_1b5a4a7db_Range32(69633LLU,69688LLU,55LLU),_1b5a4a7db_Range32(69689LLU,69702LLU,1LLU),_1b5a4a7db_Range32(69744LLU,69747LLU,3LLU),_1b5a4a7db_Range32(69748LLU,69759LLU,11LLU),_1b5a4a7db_Range32(69760LLU,69761LLU,1LLU),_1b5a4a7db_Range32(69811LLU,69814LLU,1LLU),_1b5a4a7db_Range32(69817LLU,69818LLU,1LLU),_1b5a4a7db_Range32(69826LLU,69888LLU,62LLU),_1b5a4a7db_Range32(69889LLU,69890LLU,1LLU),_1b5a4a7db_Range32(69927LLU,69931LLU,1LLU),_1b5a4a7db_Range32(69933LLU,69940LLU,1LLU),_1b5a4a7db_Range32(70003LLU,70016LLU,13LLU),_1b5a4a7db_Range32(70017LLU,70070LLU,53LLU),_1b5a4a7db_Range32(70071LLU,70078LLU,1LLU),_1b5a4a7db_Range32(70089LLU,70092LLU,1LLU),_1b5a4a7db_Range32(70095LLU,70191LLU,96LLU),_1b5a4a7db_Range32(70192LLU,70193LLU,1LLU),_1b5a4a7db_Range32(70196LLU,70198LLU,2LLU),_1b5a4a7db_Range32(70199LLU,70206LLU,7LLU),_1b5a4a7db_Range32(70209LLU,70367LLU,158LLU),_1b5a4a7db_Range32(70371LLU,70378LLU,1LLU),_1b5a4a7db_Range32(70400LLU,70401LLU,1LLU),_1b5a4a7db_Range32(70459LLU,70460LLU,1LLU),_1b5a4a7db_Range32(70464LLU,70502LLU,38LLU),_1b5a4a7db_Range32(70503LLU,70508LLU,1LLU),_1b5a4a7db_Range32(70512LLU,70516LLU,1LLU),_1b5a4a7db_Range32(70712LLU,70719LLU,1LLU),_1b5a4a7db_Range32(70722LLU,70724LLU,1LLU),_1b5a4a7db_Range32(70726LLU,70750LLU,24LLU),_1b5a4a7db_Range32(70835LLU,70840LLU,1LLU),_1b5a4a7db_Range32(70842LLU,70847LLU,5LLU),_1b5a4a7db_Range32(70848LLU,70850LLU,2LLU),_1b5a4a7db_Range32(70851LLU,71090LLU,239LLU),_1b5a4a7db_Range32(71091LLU,71093LLU,1LLU),_1b5a4a7db_Range32(71100LLU,71101LLU,1LLU),_1b5a4a7db_Range32(71103LLU,71104LLU,1LLU),_1b5a4a7db_Range32(71132LLU,71133LLU,1LLU),_1b5a4a7db_Range32(71219LLU,71226LLU,1LLU),_1b5a4a7db_Range32(71229LLU,71231LLU,2LLU),_1b5a4a7db_Range32(71232LLU,71339LLU,107LLU),_1b5a4a7db_Range32(71341LLU,71344LLU,3LLU),_1b5a4a7db_Range32(71345LLU,71349LLU,1LLU),_1b5a4a7db_Range32(71351LLU,71453LLU,102LLU),_1b5a4a7db_Range32(71454LLU,71455LLU,1LLU),_1b5a4a7db_Range32(71458LLU,71461LLU,1LLU),_1b5a4a7db_Range32(71463LLU,71467LLU,1LLU),_1b5a4a7db_Range32(71727LLU,71735LLU,1LLU),_1b5a4a7db_Range32(71737LLU,71738LLU,1LLU),_1b5a4a7db_Range32(71995LLU,71996LLU,1LLU),_1b5a4a7db_Range32(71998LLU,72003LLU,5LLU),_1b5a4a7db_Range32(72148LLU,72151LLU,1LLU),_1b5a4a7db_Range32(72154LLU,72155LLU,1LLU),_1b5a4a7db_Range32(72160LLU,72193LLU,33LLU),_1b5a4a7db_Range32(72194LLU,72202LLU,1LLU),_1b5a4a7db_Range32(72243LLU,72248LLU,1LLU),_1b5a4a7db_Range32(72251LLU,72254LLU,1LLU),_1b5a4a7db_Range32(72263LLU,72273LLU,10LLU),_1b5a4a7db_Range32(72274LLU,72278LLU,1LLU),_1b5a4a7db_Range32(72281LLU,72283LLU,1LLU),_1b5a4a7db_Range32(72330LLU,72342LLU,1LLU),_1b5a4a7db_Range32(72344LLU,72345LLU,1LLU),_1b5a4a7db_Range32(72752LLU,72758LLU,1LLU),_1b5a4a7db_Range32(72760LLU,72765LLU,1LLU),_1b5a4a7db_Range32(72767LLU,72850LLU,83LLU),_1b5a4a7db_Range32(72851LLU,72871LLU,1LLU),_1b5a4a7db_Range32(72874LLU,72880LLU,1LLU),_1b5a4a7db_Range32(72882LLU,72883LLU,1LLU),_1b5a4a7db_Range32(72885LLU,72886LLU,1LLU),_1b5a4a7db_Range32(73009LLU,73014LLU,1LLU),_1b5a4a7db_Range32(73018LLU,73020LLU,2LLU),_1b5a4a7db_Range32(73021LLU,73023LLU,2LLU),_1b5a4a7db_Range32(73024LLU,73029LLU,1LLU),_1b5a4a7db_Range32(73031LLU,73104LLU,73LLU),_1b5a4a7db_Range32(73105LLU,73109LLU,4LLU),_1b5a4a7db_Range32(73111LLU,73459LLU,348LLU),_1b5a4a7db_Range32(73460LLU,73472LLU,12LLU),_1b5a4a7db_Range32(73473LLU,73526LLU,53LLU),_1b5a4a7db_Range32(73527LLU,73530LLU,1LLU),_1b5a4a7db_Range32(73536LLU,73538LLU,2LLU),_1b5a4a7db_Range32(78912LLU,78919LLU,7LLU),_1b5a4a7db_Range32(78920LLU,78933LLU,1LLU),_1b5a4a7db_Range32(92912LLU,92916LLU,1LLU),_1b5a4a7db_Range32(92976LLU,92982LLU,1LLU),_1b5a4a7db_Range32(94031LLU,94095LLU,64LLU),_1b5a4a7db_Range32(94096LLU,94098LLU,1LLU),_1b5a4a7db_Range32(94180LLU,113821LLU,19641LLU),_1b5a4a7db_Range32(113822LLU,118528LLU,4706LLU),_1b5a4a7db_Range32(118529LLU,118573LLU,1LLU),_1b5a4a7db_Range32(118576LLU,118598LLU,1LLU),_1b5a4a7db_Range32(119143LLU,119145LLU,1LLU),_1b5a4a7db_Range32(119163LLU,119170LLU,1LLU),_1b5a4a7db_Range32(119173LLU,119179LLU,1LLU),_1b5a4a7db_Range32(119210LLU,119213LLU,1LLU),_1b5a4a7db_Range32(119362LLU,119364LLU,1LLU),_1b5a4a7db_Range32(121344LLU,121398LLU,1LLU),_1b5a4a7db_Range32(121403LLU,121452LLU,1LLU),_1b5a4a7db_Range32(121461LLU,121476LLU,15LLU),_1b5a4a7db_Range32(121499LLU,121503LLU,1LLU),_1b5a4a7db_Range32(121505LLU,121519LLU,1LLU),_1b5a4a7db_Range32(122880LLU,122886LLU,1LLU),_1b5a4a7db_Range32(122888LLU,122904LLU,1LLU),_1b5a4a7db_Range32(122907LLU,122913LLU,1LLU),_1b5a4a7db_Range32(122915LLU,122916LLU,1LLU),_1b5a4a7db_Range32(122918LLU,122922LLU,1LLU),_1b5a4a7db_Range32(123023LLU,123184LLU,161LLU),_1b5a4a7db_Range32(123185LLU,123190LLU,1LLU),_1b5a4a7db_Range32(123566LLU,123628LLU,62LLU),_1b5a4a7db_Range32(123629LLU,123631LLU,1LLU),_1b5a4a7db_Range32(124140LLU,124143LLU,1LLU),_1b5a4a7db_Range32(125136LLU,125142LLU,1LLU),_1b5a4a7db_Range32(125252LLU,125258LLU,1LLU),_1b5a4a7db_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__N = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(48LLU,57LLU,1LLU),_1b5a4a7db_Range16(178LLU,179LLU,1LLU),_1b5a4a7db_Range16(185LLU,188LLU,3LLU),_1b5a4a7db_Range16(189LLU,190LLU,1LLU),_1b5a4a7db_Range16(1632LLU,1641LLU,1LLU),_1b5a4a7db_Range16(1776LLU,1785LLU,1LLU),_1b5a4a7db_Range16(1984LLU,1993LLU,1LLU),_1b5a4a7db_Range16(2406LLU,2415LLU,1LLU),_1b5a4a7db_Range16(2534LLU,2543LLU,1LLU),_1b5a4a7db_Range16(2548LLU,2553LLU,1LLU),_1b5a4a7db_Range16(2662LLU,2671LLU,1LLU),_1b5a4a7db_Range16(2790LLU,2799LLU,1LLU),_1b5a4a7db_Range16(2918LLU,2927LLU,1LLU),_1b5a4a7db_Range16(2930LLU,2935LLU,1LLU),_1b5a4a7db_Range16(3046LLU,3058LLU,1LLU),_1b5a4a7db_Range16(3174LLU,3183LLU,1LLU),_1b5a4a7db_Range16(3192LLU,3198LLU,1LLU),_1b5a4a7db_Range16(3302LLU,3311LLU,1LLU),_1b5a4a7db_Range16(3416LLU,3422LLU,1LLU),_1b5a4a7db_Range16(3430LLU,3448LLU,1LLU),_1b5a4a7db_Range16(3558LLU,3567LLU,1LLU),_1b5a4a7db_Range16(3664LLU,3673LLU,1LLU),_1b5a4a7db_Range16(3792LLU,3801LLU,1LLU),_1b5a4a7db_Range16(3872LLU,3891LLU,1LLU),_1b5a4a7db_Range16(4160LLU,4169LLU,1LLU),_1b5a4a7db_Range16(4240LLU,4249LLU,1LLU),_1b5a4a7db_Range16(4969LLU,4988LLU,1LLU),_1b5a4a7db_Range16(5870LLU,5872LLU,1LLU),_1b5a4a7db_Range16(6112LLU,6121LLU,1LLU),_1b5a4a7db_Range16(6128LLU,6137LLU,1LLU),_1b5a4a7db_Range16(6160LLU,6169LLU,1LLU),_1b5a4a7db_Range16(6470LLU,6479LLU,1LLU),_1b5a4a7db_Range16(6608LLU,6618LLU,1LLU),_1b5a4a7db_Range16(6784LLU,6793LLU,1LLU),_1b5a4a7db_Range16(6800LLU,6809LLU,1LLU),_1b5a4a7db_Range16(6992LLU,7001LLU,1LLU),_1b5a4a7db_Range16(7088LLU,7097LLU,1LLU),_1b5a4a7db_Range16(7232LLU,7241LLU,1LLU),_1b5a4a7db_Range16(7248LLU,7257LLU,1LLU),_1b5a4a7db_Range16(8304LLU,8308LLU,4LLU),_1b5a4a7db_Range16(8309LLU,8313LLU,1LLU),_1b5a4a7db_Range16(8320LLU,8329LLU,1LLU),_1b5a4a7db_Range16(8528LLU,8578LLU,1LLU),_1b5a4a7db_Range16(8581LLU,8585LLU,1LLU),_1b5a4a7db_Range16(9312LLU,9371LLU,1LLU),_1b5a4a7db_Range16(9450LLU,9471LLU,1LLU),_1b5a4a7db_Range16(10102LLU,10131LLU,1LLU),_1b5a4a7db_Range16(11517LLU,12295LLU,778LLU),_1b5a4a7db_Range16(12321LLU,12329LLU,1LLU),_1b5a4a7db_Range16(12344LLU,12346LLU,1LLU),_1b5a4a7db_Range16(12690LLU,12693LLU,1LLU),_1b5a4a7db_Range16(12832LLU,12841LLU,1LLU),_1b5a4a7db_Range16(12872LLU,12879LLU,1LLU),_1b5a4a7db_Range16(12881LLU,12895LLU,1LLU),_1b5a4a7db_Range16(12928LLU,12937LLU,1LLU),_1b5a4a7db_Range16(12977LLU,12991LLU,1LLU),_1b5a4a7db_Range16(42528LLU,42537LLU,1LLU),_1b5a4a7db_Range16(42726LLU,42735LLU,1LLU),_1b5a4a7db_Range16(43056LLU,43061LLU,1LLU),_1b5a4a7db_Range16(43216LLU,43225LLU,1LLU),_1b5a4a7db_Range16(43264LLU,43273LLU,1LLU),_1b5a4a7db_Range16(43472LLU,43481LLU,1LLU),_1b5a4a7db_Range16(43504LLU,43513LLU,1LLU),_1b5a4a7db_Range16(43600LLU,43609LLU,1LLU),_1b5a4a7db_Range16(44016LLU,44025LLU,1LLU),_1b5a4a7db_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(65799LLU,65843LLU,1LLU),_1b5a4a7db_Range32(65856LLU,65912LLU,1LLU),_1b5a4a7db_Range32(65930LLU,65931LLU,1LLU),_1b5a4a7db_Range32(66273LLU,66299LLU,1LLU),_1b5a4a7db_Range32(66336LLU,66339LLU,1LLU),_1b5a4a7db_Range32(66369LLU,66378LLU,9LLU),_1b5a4a7db_Range32(66513LLU,66517LLU,1LLU),_1b5a4a7db_Range32(66720LLU,66729LLU,1LLU),_1b5a4a7db_Range32(67672LLU,67679LLU,1LLU),_1b5a4a7db_Range32(67705LLU,67711LLU,1LLU),_1b5a4a7db_Range32(67751LLU,67759LLU,1LLU),_1b5a4a7db_Range32(67835LLU,67839LLU,1LLU),_1b5a4a7db_Range32(67862LLU,67867LLU,1LLU),_1b5a4a7db_Range32(68028LLU,68029LLU,1LLU),_1b5a4a7db_Range32(68032LLU,68047LLU,1LLU),_1b5a4a7db_Range32(68050LLU,68095LLU,1LLU),_1b5a4a7db_Range32(68160LLU,68168LLU,1LLU),_1b5a4a7db_Range32(68221LLU,68222LLU,1LLU),_1b5a4a7db_Range32(68253LLU,68255LLU,1LLU),_1b5a4a7db_Range32(68331LLU,68335LLU,1LLU),_1b5a4a7db_Range32(68440LLU,68447LLU,1LLU),_1b5a4a7db_Range32(68472LLU,68479LLU,1LLU),_1b5a4a7db_Range32(68521LLU,68527LLU,1LLU),_1b5a4a7db_Range32(68858LLU,68863LLU,1LLU),_1b5a4a7db_Range32(68912LLU,68921LLU,1LLU),_1b5a4a7db_Range32(69216LLU,69246LLU,1LLU),_1b5a4a7db_Range32(69405LLU,69414LLU,1LLU),_1b5a4a7db_Range32(69457LLU,69460LLU,1LLU),_1b5a4a7db_Range32(69573LLU,69579LLU,1LLU),_1b5a4a7db_Range32(69714LLU,69743LLU,1LLU),_1b5a4a7db_Range32(69872LLU,69881LLU,1LLU),_1b5a4a7db_Range32(69942LLU,69951LLU,1LLU),_1b5a4a7db_Range32(70096LLU,70105LLU,1LLU),_1b5a4a7db_Range32(70113LLU,70132LLU,1LLU),_1b5a4a7db_Range32(70384LLU,70393LLU,1LLU),_1b5a4a7db_Range32(70736LLU,70745LLU,1LLU),_1b5a4a7db_Range32(70864LLU,70873LLU,1LLU),_1b5a4a7db_Range32(71248LLU,71257LLU,1LLU),_1b5a4a7db_Range32(71360LLU,71369LLU,1LLU),_1b5a4a7db_Range32(71472LLU,71483LLU,1LLU),_1b5a4a7db_Range32(71904LLU,71922LLU,1LLU),_1b5a4a7db_Range32(72016LLU,72025LLU,1LLU),_1b5a4a7db_Range32(72784LLU,72812LLU,1LLU),_1b5a4a7db_Range32(73040LLU,73049LLU,1LLU),_1b5a4a7db_Range32(73120LLU,73129LLU,1LLU),_1b5a4a7db_Range32(73552LLU,73561LLU,1LLU),_1b5a4a7db_Range32(73664LLU,73684LLU,1LLU),_1b5a4a7db_Range32(74752LLU,74862LLU,1LLU),_1b5a4a7db_Range32(92768LLU,92777LLU,1LLU),_1b5a4a7db_Range32(92864LLU,92873LLU,1LLU),_1b5a4a7db_Range32(93008LLU,93017LLU,1LLU),_1b5a4a7db_Range32(93019LLU,93025LLU,1LLU),_1b5a4a7db_Range32(93824LLU,93846LLU,1LLU),_1b5a4a7db_Range32(119488LLU,119507LLU,1LLU),_1b5a4a7db_Range32(119520LLU,119539LLU,1LLU),_1b5a4a7db_Range32(119648LLU,119672LLU,1LLU),_1b5a4a7db_Range32(120782LLU,120831LLU,1LLU),_1b5a4a7db_Range32(123200LLU,123209LLU,1LLU),_1b5a4a7db_Range32(123632LLU,123641LLU,1LLU),_1b5a4a7db_Range32(124144LLU,124153LLU,1LLU),_1b5a4a7db_Range32(125127LLU,125135LLU,1LLU),_1b5a4a7db_Range32(125264LLU,125273LLU,1LLU),_1b5a4a7db_Range32(126065LLU,126123LLU,1LLU),_1b5a4a7db_Range32(126125LLU,126127LLU,1LLU),_1b5a4a7db_Range32(126129LLU,126132LLU,1LLU),_1b5a4a7db_Range32(126209LLU,126253LLU,1LLU),_1b5a4a7db_Range32(126255LLU,126269LLU,1LLU),_1b5a4a7db_Range32(127232LLU,127244LLU,1LLU),_1b5a4a7db_Range32(130032LLU,130041LLU,1LLU)}),4LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ND = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(48LLU,57LLU,1LLU),_1b5a4a7db_Range16(1632LLU,1641LLU,1LLU),_1b5a4a7db_Range16(1776LLU,1785LLU,1LLU),_1b5a4a7db_Range16(1984LLU,1993LLU,1LLU),_1b5a4a7db_Range16(2406LLU,2415LLU,1LLU),_1b5a4a7db_Range16(2534LLU,2543LLU,1LLU),_1b5a4a7db_Range16(2662LLU,2671LLU,1LLU),_1b5a4a7db_Range16(2790LLU,2799LLU,1LLU),_1b5a4a7db_Range16(2918LLU,2927LLU,1LLU),_1b5a4a7db_Range16(3046LLU,3055LLU,1LLU),_1b5a4a7db_Range16(3174LLU,3183LLU,1LLU),_1b5a4a7db_Range16(3302LLU,3311LLU,1LLU),_1b5a4a7db_Range16(3430LLU,3439LLU,1LLU),_1b5a4a7db_Range16(3558LLU,3567LLU,1LLU),_1b5a4a7db_Range16(3664LLU,3673LLU,1LLU),_1b5a4a7db_Range16(3792LLU,3801LLU,1LLU),_1b5a4a7db_Range16(3872LLU,3881LLU,1LLU),_1b5a4a7db_Range16(4160LLU,4169LLU,1LLU),_1b5a4a7db_Range16(4240LLU,4249LLU,1LLU),_1b5a4a7db_Range16(6112LLU,6121LLU,1LLU),_1b5a4a7db_Range16(6160LLU,6169LLU,1LLU),_1b5a4a7db_Range16(6470LLU,6479LLU,1LLU),_1b5a4a7db_Range16(6608LLU,6617LLU,1LLU),_1b5a4a7db_Range16(6784LLU,6793LLU,1LLU),_1b5a4a7db_Range16(6800LLU,6809LLU,1LLU),_1b5a4a7db_Range16(6992LLU,7001LLU,1LLU),_1b5a4a7db_Range16(7088LLU,7097LLU,1LLU),_1b5a4a7db_Range16(7232LLU,7241LLU,1LLU),_1b5a4a7db_Range16(7248LLU,7257LLU,1LLU),_1b5a4a7db_Range16(42528LLU,42537LLU,1LLU),_1b5a4a7db_Range16(43216LLU,43225LLU,1LLU),_1b5a4a7db_Range16(43264LLU,43273LLU,1LLU),_1b5a4a7db_Range16(43472LLU,43481LLU,1LLU),_1b5a4a7db_Range16(43504LLU,43513LLU,1LLU),_1b5a4a7db_Range16(43600LLU,43609LLU,1LLU),_1b5a4a7db_Range16(44016LLU,44025LLU,1LLU),_1b5a4a7db_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66720LLU,66729LLU,1LLU),_1b5a4a7db_Range32(68912LLU,68921LLU,1LLU),_1b5a4a7db_Range32(69734LLU,69743LLU,1LLU),_1b5a4a7db_Range32(69872LLU,69881LLU,1LLU),_1b5a4a7db_Range32(69942LLU,69951LLU,1LLU),_1b5a4a7db_Range32(70096LLU,70105LLU,1LLU),_1b5a4a7db_Range32(70384LLU,70393LLU,1LLU),_1b5a4a7db_Range32(70736LLU,70745LLU,1LLU),_1b5a4a7db_Range32(70864LLU,70873LLU,1LLU),_1b5a4a7db_Range32(71248LLU,71257LLU,1LLU),_1b5a4a7db_Range32(71360LLU,71369LLU,1LLU),_1b5a4a7db_Range32(71472LLU,71481LLU,1LLU),_1b5a4a7db_Range32(71904LLU,71913LLU,1LLU),_1b5a4a7db_Range32(72016LLU,72025LLU,1LLU),_1b5a4a7db_Range32(72784LLU,72793LLU,1LLU),_1b5a4a7db_Range32(73040LLU,73049LLU,1LLU),_1b5a4a7db_Range32(73120LLU,73129LLU,1LLU),_1b5a4a7db_Range32(73552LLU,73561LLU,1LLU),_1b5a4a7db_Range32(92768LLU,92777LLU,1LLU),_1b5a4a7db_Range32(92864LLU,92873LLU,1LLU),_1b5a4a7db_Range32(93008LLU,93017LLU,1LLU),_1b5a4a7db_Range32(120782LLU,120831LLU,1LLU),_1b5a4a7db_Range32(123200LLU,123209LLU,1LLU),_1b5a4a7db_Range32(123632LLU,123641LLU,1LLU),_1b5a4a7db_Range32(124144LLU,124153LLU,1LLU),_1b5a4a7db_Range32(125264LLU,125273LLU,1LLU),_1b5a4a7db_Range32(130032LLU,130041LLU,1LLU)}),1LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__NL = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(5870LLU,5872LLU,1LLU),_1b5a4a7db_Range16(8544LLU,8578LLU,1LLU),_1b5a4a7db_Range16(8581LLU,8584LLU,1LLU),_1b5a4a7db_Range16(12295LLU,12321LLU,26LLU),_1b5a4a7db_Range16(12322LLU,12329LLU,1LLU),_1b5a4a7db_Range16(12344LLU,12346LLU,1LLU),_1b5a4a7db_Range16(42726LLU,42735LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(65856LLU,65908LLU,1LLU),_1b5a4a7db_Range32(66369LLU,66378LLU,9LLU),_1b5a4a7db_Range32(66513LLU,66517LLU,1LLU),_1b5a4a7db_Range32(74752LLU,74862LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__NO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(178LLU,179LLU,1LLU),_1b5a4a7db_Range16(185LLU,188LLU,3LLU),_1b5a4a7db_Range16(189LLU,190LLU,1LLU),_1b5a4a7db_Range16(2548LLU,2553LLU,1LLU),_1b5a4a7db_Range16(2930LLU,2935LLU,1LLU),_1b5a4a7db_Range16(3056LLU,3058LLU,1LLU),_1b5a4a7db_Range16(3192LLU,3198LLU,1LLU),_1b5a4a7db_Range16(3416LLU,3422LLU,1LLU),_1b5a4a7db_Range16(3440LLU,3448LLU,1LLU),_1b5a4a7db_Range16(3882LLU,3891LLU,1LLU),_1b5a4a7db_Range16(4969LLU,4988LLU,1LLU),_1b5a4a7db_Range16(6128LLU,6137LLU,1LLU),_1b5a4a7db_Range16(6618LLU,8304LLU,1686LLU),_1b5a4a7db_Range16(8308LLU,8313LLU,1LLU),_1b5a4a7db_Range16(8320LLU,8329LLU,1LLU),_1b5a4a7db_Range16(8528LLU,8543LLU,1LLU),_1b5a4a7db_Range16(8585LLU,9312LLU,727LLU),_1b5a4a7db_Range16(9313LLU,9371LLU,1LLU),_1b5a4a7db_Range16(9450LLU,9471LLU,1LLU),_1b5a4a7db_Range16(10102LLU,10131LLU,1LLU),_1b5a4a7db_Range16(11517LLU,12690LLU,1173LLU),_1b5a4a7db_Range16(12691LLU,12693LLU,1LLU),_1b5a4a7db_Range16(12832LLU,12841LLU,1LLU),_1b5a4a7db_Range16(12872LLU,12879LLU,1LLU),_1b5a4a7db_Range16(12881LLU,12895LLU,1LLU),_1b5a4a7db_Range16(12928LLU,12937LLU,1LLU),_1b5a4a7db_Range16(12977LLU,12991LLU,1LLU),_1b5a4a7db_Range16(43056LLU,43061LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(65799LLU,65843LLU,1LLU),_1b5a4a7db_Range32(65909LLU,65912LLU,1LLU),_1b5a4a7db_Range32(65930LLU,65931LLU,1LLU),_1b5a4a7db_Range32(66273LLU,66299LLU,1LLU),_1b5a4a7db_Range32(66336LLU,66339LLU,1LLU),_1b5a4a7db_Range32(67672LLU,67679LLU,1LLU),_1b5a4a7db_Range32(67705LLU,67711LLU,1LLU),_1b5a4a7db_Range32(67751LLU,67759LLU,1LLU),_1b5a4a7db_Range32(67835LLU,67839LLU,1LLU),_1b5a4a7db_Range32(67862LLU,67867LLU,1LLU),_1b5a4a7db_Range32(68028LLU,68029LLU,1LLU),_1b5a4a7db_Range32(68032LLU,68047LLU,1LLU),_1b5a4a7db_Range32(68050LLU,68095LLU,1LLU),_1b5a4a7db_Range32(68160LLU,68168LLU,1LLU),_1b5a4a7db_Range32(68221LLU,68222LLU,1LLU),_1b5a4a7db_Range32(68253LLU,68255LLU,1LLU),_1b5a4a7db_Range32(68331LLU,68335LLU,1LLU),_1b5a4a7db_Range32(68440LLU,68447LLU,1LLU),_1b5a4a7db_Range32(68472LLU,68479LLU,1LLU),_1b5a4a7db_Range32(68521LLU,68527LLU,1LLU),_1b5a4a7db_Range32(68858LLU,68863LLU,1LLU),_1b5a4a7db_Range32(69216LLU,69246LLU,1LLU),_1b5a4a7db_Range32(69405LLU,69414LLU,1LLU),_1b5a4a7db_Range32(69457LLU,69460LLU,1LLU),_1b5a4a7db_Range32(69573LLU,69579LLU,1LLU),_1b5a4a7db_Range32(69714LLU,69733LLU,1LLU),_1b5a4a7db_Range32(70113LLU,70132LLU,1LLU),_1b5a4a7db_Range32(71482LLU,71483LLU,1LLU),_1b5a4a7db_Range32(71914LLU,71922LLU,1LLU),_1b5a4a7db_Range32(72794LLU,72812LLU,1LLU),_1b5a4a7db_Range32(73664LLU,73684LLU,1LLU),_1b5a4a7db_Range32(93019LLU,93025LLU,1LLU),_1b5a4a7db_Range32(93824LLU,93846LLU,1LLU),_1b5a4a7db_Range32(119488LLU,119507LLU,1LLU),_1b5a4a7db_Range32(119520LLU,119539LLU,1LLU),_1b5a4a7db_Range32(119648LLU,119672LLU,1LLU),_1b5a4a7db_Range32(125127LLU,125135LLU,1LLU),_1b5a4a7db_Range32(126065LLU,126123LLU,1LLU),_1b5a4a7db_Range32(126125LLU,126127LLU,1LLU),_1b5a4a7db_Range32(126129LLU,126132LLU,1LLU),_1b5a4a7db_Range32(126209LLU,126253LLU,1LLU),_1b5a4a7db_Range32(126255LLU,126269LLU,1LLU),_1b5a4a7db_Range32(127232LLU,127244LLU,1LLU)}),3LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__P = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(33LLU,35LLU,1LLU),_1b5a4a7db_Range16(37LLU,42LLU,1LLU),_1b5a4a7db_Range16(44LLU,47LLU,1LLU),_1b5a4a7db_Range16(58LLU,59LLU,1LLU),_1b5a4a7db_Range16(63LLU,64LLU,1LLU),_1b5a4a7db_Range16(91LLU,93LLU,1LLU),_1b5a4a7db_Range16(95LLU,123LLU,28LLU),_1b5a4a7db_Range16(125LLU,161LLU,36LLU),_1b5a4a7db_Range16(167LLU,171LLU,4LLU),_1b5a4a7db_Range16(182LLU,183LLU,1LLU),_1b5a4a7db_Range16(187LLU,191LLU,4LLU),_1b5a4a7db_Range16(894LLU,903LLU,9LLU),_1b5a4a7db_Range16(1370LLU,1375LLU,1LLU),_1b5a4a7db_Range16(1417LLU,1418LLU,1LLU),_1b5a4a7db_Range16(1470LLU,1472LLU,2LLU),_1b5a4a7db_Range16(1475LLU,1478LLU,3LLU),_1b5a4a7db_Range16(1523LLU,1524LLU,1LLU),_1b5a4a7db_Range16(1545LLU,1546LLU,1LLU),_1b5a4a7db_Range16(1548LLU,1549LLU,1LLU),_1b5a4a7db_Range16(1563LLU,1565LLU,2LLU),_1b5a4a7db_Range16(1566LLU,1567LLU,1LLU),_1b5a4a7db_Range16(1642LLU,1645LLU,1LLU),_1b5a4a7db_Range16(1748LLU,1792LLU,44LLU),_1b5a4a7db_Range16(1793LLU,1805LLU,1LLU),_1b5a4a7db_Range16(2039LLU,2041LLU,1LLU),_1b5a4a7db_Range16(2096LLU,2110LLU,1LLU),_1b5a4a7db_Range16(2142LLU,2404LLU,262LLU),_1b5a4a7db_Range16(2405LLU,2416LLU,11LLU),_1b5a4a7db_Range16(2557LLU,2678LLU,121LLU),_1b5a4a7db_Range16(2800LLU,3191LLU,391LLU),_1b5a4a7db_Range16(3204LLU,3572LLU,368LLU),_1b5a4a7db_Range16(3663LLU,3674LLU,11LLU),_1b5a4a7db_Range16(3675LLU,3844LLU,169LLU),_1b5a4a7db_Range16(3845LLU,3858LLU,1LLU),_1b5a4a7db_Range16(3860LLU,3898LLU,38LLU),_1b5a4a7db_Range16(3899LLU,3901LLU,1LLU),_1b5a4a7db_Range16(3973LLU,4048LLU,75LLU),_1b5a4a7db_Range16(4049LLU,4052LLU,1LLU),_1b5a4a7db_Range16(4057LLU,4058LLU,1LLU),_1b5a4a7db_Range16(4170LLU,4175LLU,1LLU),_1b5a4a7db_Range16(4347LLU,4960LLU,613LLU),_1b5a4a7db_Range16(4961LLU,4968LLU,1LLU),_1b5a4a7db_Range16(5120LLU,5742LLU,622LLU),_1b5a4a7db_Range16(5787LLU,5788LLU,1LLU),_1b5a4a7db_Range16(5867LLU,5869LLU,1LLU),_1b5a4a7db_Range16(5941LLU,5942LLU,1LLU),_1b5a4a7db_Range16(6100LLU,6102LLU,1LLU),_1b5a4a7db_Range16(6104LLU,6106LLU,1LLU),_1b5a4a7db_Range16(6144LLU,6154LLU,1LLU),_1b5a4a7db_Range16(6468LLU,6469LLU,1LLU),_1b5a4a7db_Range16(6686LLU,6687LLU,1LLU),_1b5a4a7db_Range16(6816LLU,6822LLU,1LLU),_1b5a4a7db_Range16(6824LLU,6829LLU,1LLU),_1b5a4a7db_Range16(7002LLU,7008LLU,1LLU),_1b5a4a7db_Range16(7037LLU,7038LLU,1LLU),_1b5a4a7db_Range16(7164LLU,7167LLU,1LLU),_1b5a4a7db_Range16(7227LLU,7231LLU,1LLU),_1b5a4a7db_Range16(7294LLU,7295LLU,1LLU),_1b5a4a7db_Range16(7360LLU,7367LLU,1LLU),_1b5a4a7db_Range16(7379LLU,8208LLU,829LLU),_1b5a4a7db_Range16(8209LLU,8231LLU,1LLU),_1b5a4a7db_Range16(8240LLU,8259LLU,1LLU),_1b5a4a7db_Range16(8261LLU,8273LLU,1LLU),_1b5a4a7db_Range16(8275LLU,8286LLU,1LLU),_1b5a4a7db_Range16(8317LLU,8318LLU,1LLU),_1b5a4a7db_Range16(8333LLU,8334LLU,1LLU),_1b5a4a7db_Range16(8968LLU,8971LLU,1LLU),_1b5a4a7db_Range16(9001LLU,9002LLU,1LLU),_1b5a4a7db_Range16(10088LLU,10101LLU,1LLU),_1b5a4a7db_Range16(10181LLU,10182LLU,1LLU),_1b5a4a7db_Range16(10214LLU,10223LLU,1LLU),_1b5a4a7db_Range16(10627LLU,10648LLU,1LLU),_1b5a4a7db_Range16(10712LLU,10715LLU,1LLU),_1b5a4a7db_Range16(10748LLU,10749LLU,1LLU),_1b5a4a7db_Range16(11513LLU,11516LLU,1LLU),_1b5a4a7db_Range16(11518LLU,11519LLU,1LLU),_1b5a4a7db_Range16(11632LLU,11776LLU,144LLU),_1b5a4a7db_Range16(11777LLU,11822LLU,1LLU),_1b5a4a7db_Range16(11824LLU,11855LLU,1LLU),_1b5a4a7db_Range16(11858LLU,11869LLU,1LLU),_1b5a4a7db_Range16(12289LLU,12291LLU,1LLU),_1b5a4a7db_Range16(12296LLU,12305LLU,1LLU),_1b5a4a7db_Range16(12308LLU,12319LLU,1LLU),_1b5a4a7db_Range16(12336LLU,12349LLU,13LLU),_1b5a4a7db_Range16(12448LLU,12539LLU,91LLU),_1b5a4a7db_Range16(42238LLU,42239LLU,1LLU),_1b5a4a7db_Range16(42509LLU,42511LLU,1LLU),_1b5a4a7db_Range16(42611LLU,42622LLU,11LLU),_1b5a4a7db_Range16(42738LLU,42743LLU,1LLU),_1b5a4a7db_Range16(43124LLU,43127LLU,1LLU),_1b5a4a7db_Range16(43214LLU,43215LLU,1LLU),_1b5a4a7db_Range16(43256LLU,43258LLU,1LLU),_1b5a4a7db_Range16(43260LLU,43310LLU,50LLU),_1b5a4a7db_Range16(43311LLU,43359LLU,48LLU),_1b5a4a7db_Range16(43457LLU,43469LLU,1LLU),_1b5a4a7db_Range16(43486LLU,43487LLU,1LLU),_1b5a4a7db_Range16(43612LLU,43615LLU,1LLU),_1b5a4a7db_Range16(43742LLU,43743LLU,1LLU),_1b5a4a7db_Range16(43760LLU,43761LLU,1LLU),_1b5a4a7db_Range16(44011LLU,64830LLU,20819LLU),_1b5a4a7db_Range16(64831LLU,65040LLU,209LLU),_1b5a4a7db_Range16(65041LLU,65049LLU,1LLU),_1b5a4a7db_Range16(65072LLU,65106LLU,1LLU),_1b5a4a7db_Range16(65108LLU,65121LLU,1LLU),_1b5a4a7db_Range16(65123LLU,65128LLU,5LLU),_1b5a4a7db_Range16(65130LLU,65131LLU,1LLU),_1b5a4a7db_Range16(65281LLU,65283LLU,1LLU),_1b5a4a7db_Range16(65285LLU,65290LLU,1LLU),_1b5a4a7db_Range16(65292LLU,65295LLU,1LLU),_1b5a4a7db_Range16(65306LLU,65307LLU,1LLU),_1b5a4a7db_Range16(65311LLU,65312LLU,1LLU),_1b5a4a7db_Range16(65339LLU,65341LLU,1LLU),_1b5a4a7db_Range16(65343LLU,65371LLU,28LLU),_1b5a4a7db_Range16(65373LLU,65375LLU,2LLU),_1b5a4a7db_Range16(65376LLU,65381LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(65792LLU,65794LLU,1LLU),_1b5a4a7db_Range32(66463LLU,66512LLU,49LLU),_1b5a4a7db_Range32(66927LLU,67671LLU,744LLU),_1b5a4a7db_Range32(67871LLU,67903LLU,32LLU),_1b5a4a7db_Range32(68176LLU,68184LLU,1LLU),_1b5a4a7db_Range32(68223LLU,68336LLU,113LLU),_1b5a4a7db_Range32(68337LLU,68342LLU,1LLU),_1b5a4a7db_Range32(68409LLU,68415LLU,1LLU),_1b5a4a7db_Range32(68505LLU,68508LLU,1LLU),_1b5a4a7db_Range32(69293LLU,69461LLU,168LLU),_1b5a4a7db_Range32(69462LLU,69465LLU,1LLU),_1b5a4a7db_Range32(69510LLU,69513LLU,1LLU),_1b5a4a7db_Range32(69703LLU,69709LLU,1LLU),_1b5a4a7db_Range32(69819LLU,69820LLU,1LLU),_1b5a4a7db_Range32(69822LLU,69825LLU,1LLU),_1b5a4a7db_Range32(69952LLU,69955LLU,1LLU),_1b5a4a7db_Range32(70004LLU,70005LLU,1LLU),_1b5a4a7db_Range32(70085LLU,70088LLU,1LLU),_1b5a4a7db_Range32(70093LLU,70107LLU,14LLU),_1b5a4a7db_Range32(70109LLU,70111LLU,1LLU),_1b5a4a7db_Range32(70200LLU,70205LLU,1LLU),_1b5a4a7db_Range32(70313LLU,70731LLU,418LLU),_1b5a4a7db_Range32(70732LLU,70735LLU,1LLU),_1b5a4a7db_Range32(70746LLU,70747LLU,1LLU),_1b5a4a7db_Range32(70749LLU,70854LLU,105LLU),_1b5a4a7db_Range32(71105LLU,71127LLU,1LLU),_1b5a4a7db_Range32(71233LLU,71235LLU,1LLU),_1b5a4a7db_Range32(71264LLU,71276LLU,1LLU),_1b5a4a7db_Range32(71353LLU,71484LLU,131LLU),_1b5a4a7db_Range32(71485LLU,71486LLU,1LLU),_1b5a4a7db_Range32(71739LLU,72004LLU,265LLU),_1b5a4a7db_Range32(72005LLU,72006LLU,1LLU),_1b5a4a7db_Range32(72162LLU,72255LLU,93LLU),_1b5a4a7db_Range32(72256LLU,72262LLU,1LLU),_1b5a4a7db_Range32(72346LLU,72348LLU,1LLU),_1b5a4a7db_Range32(72350LLU,72354LLU,1LLU),_1b5a4a7db_Range32(72448LLU,72457LLU,1LLU),_1b5a4a7db_Range32(72769LLU,72773LLU,1LLU),_1b5a4a7db_Range32(72816LLU,72817LLU,1LLU),_1b5a4a7db_Range32(73463LLU,73464LLU,1LLU),_1b5a4a7db_Range32(73539LLU,73551LLU,1LLU),_1b5a4a7db_Range32(73727LLU,74864LLU,1137LLU),_1b5a4a7db_Range32(74865LLU,74868LLU,1LLU),_1b5a4a7db_Range32(77809LLU,77810LLU,1LLU),_1b5a4a7db_Range32(92782LLU,92783LLU,1LLU),_1b5a4a7db_Range32(92917LLU,92983LLU,66LLU),_1b5a4a7db_Range32(92984LLU,92987LLU,1LLU),_1b5a4a7db_Range32(92996LLU,93847LLU,851LLU),_1b5a4a7db_Range32(93848LLU,93850LLU,1LLU),_1b5a4a7db_Range32(94178LLU,113823LLU,19645LLU),_1b5a4a7db_Range32(121479LLU,121483LLU,1LLU),_1b5a4a7db_Range32(125278LLU,125279LLU,1LLU)}),11LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(95LLU,8255LLU,8160LLU),_1b5a4a7db_Range16(8256LLU,8276LLU,20LLU),_1b5a4a7db_Range16(65075LLU,65076LLU,1LLU),_1b5a4a7db_Range16(65101LLU,65103LLU,1LLU),_1b5a4a7db_Range16(65343LLU,65343LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PD = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(45LLU,1418LLU,1373LLU),_1b5a4a7db_Range16(1470LLU,5120LLU,3650LLU),_1b5a4a7db_Range16(6150LLU,8208LLU,2058LLU),_1b5a4a7db_Range16(8209LLU,8213LLU,1LLU),_1b5a4a7db_Range16(11799LLU,11802LLU,3LLU),_1b5a4a7db_Range16(11834LLU,11835LLU,1LLU),_1b5a4a7db_Range16(11840LLU,11869LLU,29LLU),_1b5a4a7db_Range16(12316LLU,12336LLU,20LLU),_1b5a4a7db_Range16(12448LLU,65073LLU,52625LLU),_1b5a4a7db_Range16(65074LLU,65112LLU,38LLU),_1b5a4a7db_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(41LLU,93LLU,52LLU),_1b5a4a7db_Range16(125LLU,3899LLU,3774LLU),_1b5a4a7db_Range16(3901LLU,5788LLU,1887LLU),_1b5a4a7db_Range16(8262LLU,8318LLU,56LLU),_1b5a4a7db_Range16(8334LLU,8969LLU,635LLU),_1b5a4a7db_Range16(8971LLU,9002LLU,31LLU),_1b5a4a7db_Range16(10089LLU,10101LLU,2LLU),_1b5a4a7db_Range16(10182LLU,10215LLU,33LLU),_1b5a4a7db_Range16(10217LLU,10223LLU,2LLU),_1b5a4a7db_Range16(10628LLU,10648LLU,2LLU),_1b5a4a7db_Range16(10713LLU,10715LLU,2LLU),_1b5a4a7db_Range16(10749LLU,11811LLU,1062LLU),_1b5a4a7db_Range16(11813LLU,11817LLU,2LLU),_1b5a4a7db_Range16(11862LLU,11868LLU,2LLU),_1b5a4a7db_Range16(12297LLU,12305LLU,2LLU),_1b5a4a7db_Range16(12309LLU,12315LLU,2LLU),_1b5a4a7db_Range16(12318LLU,12319LLU,1LLU),_1b5a4a7db_Range16(64830LLU,65048LLU,218LLU),_1b5a4a7db_Range16(65078LLU,65092LLU,2LLU),_1b5a4a7db_Range16(65096LLU,65114LLU,18LLU),_1b5a4a7db_Range16(65116LLU,65118LLU,2LLU),_1b5a4a7db_Range16(65289LLU,65341LLU,52LLU),_1b5a4a7db_Range16(65373LLU,65379LLU,3LLU)}),jule::Slice<_1b5a4a7db_Range32>(),1LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PF = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(187LLU,8217LLU,8030LLU),_1b5a4a7db_Range16(8221LLU,8250LLU,29LLU),_1b5a4a7db_Range16(11779LLU,11781LLU,2LLU),_1b5a4a7db_Range16(11786LLU,11789LLU,3LLU),_1b5a4a7db_Range16(11805LLU,11809LLU,4LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(171LLU,8216LLU,8045LLU),_1b5a4a7db_Range16(8219LLU,8220LLU,1LLU),_1b5a4a7db_Range16(8223LLU,8249LLU,26LLU),_1b5a4a7db_Range16(11778LLU,11780LLU,2LLU),_1b5a4a7db_Range16(11785LLU,11788LLU,3LLU),_1b5a4a7db_Range16(11804LLU,11808LLU,4LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(33LLU,35LLU,1LLU),_1b5a4a7db_Range16(37LLU,39LLU,1LLU),_1b5a4a7db_Range16(42LLU,46LLU,2LLU),_1b5a4a7db_Range16(47LLU,58LLU,11LLU),_1b5a4a7db_Range16(59LLU,63LLU,4LLU),_1b5a4a7db_Range16(64LLU,92LLU,28LLU),_1b5a4a7db_Range16(161LLU,167LLU,6LLU),_1b5a4a7db_Range16(182LLU,183LLU,1LLU),_1b5a4a7db_Range16(191LLU,894LLU,703LLU),_1b5a4a7db_Range16(903LLU,1370LLU,467LLU),_1b5a4a7db_Range16(1371LLU,1375LLU,1LLU),_1b5a4a7db_Range16(1417LLU,1472LLU,55LLU),_1b5a4a7db_Range16(1475LLU,1478LLU,3LLU),_1b5a4a7db_Range16(1523LLU,1524LLU,1LLU),_1b5a4a7db_Range16(1545LLU,1546LLU,1LLU),_1b5a4a7db_Range16(1548LLU,1549LLU,1LLU),_1b5a4a7db_Range16(1563LLU,1565LLU,2LLU),_1b5a4a7db_Range16(1566LLU,1567LLU,1LLU),_1b5a4a7db_Range16(1642LLU,1645LLU,1LLU),_1b5a4a7db_Range16(1748LLU,1792LLU,44LLU),_1b5a4a7db_Range16(1793LLU,1805LLU,1LLU),_1b5a4a7db_Range16(2039LLU,2041LLU,1LLU),_1b5a4a7db_Range16(2096LLU,2110LLU,1LLU),_1b5a4a7db_Range16(2142LLU,2404LLU,262LLU),_1b5a4a7db_Range16(2405LLU,2416LLU,11LLU),_1b5a4a7db_Range16(2557LLU,2678LLU,121LLU),_1b5a4a7db_Range16(2800LLU,3191LLU,391LLU),_1b5a4a7db_Range16(3204LLU,3572LLU,368LLU),_1b5a4a7db_Range16(3663LLU,3674LLU,11LLU),_1b5a4a7db_Range16(3675LLU,3844LLU,169LLU),_1b5a4a7db_Range16(3845LLU,3858LLU,1LLU),_1b5a4a7db_Range16(3860LLU,3973LLU,113LLU),_1b5a4a7db_Range16(4048LLU,4052LLU,1LLU),_1b5a4a7db_Range16(4057LLU,4058LLU,1LLU),_1b5a4a7db_Range16(4170LLU,4175LLU,1LLU),_1b5a4a7db_Range16(4347LLU,4960LLU,613LLU),_1b5a4a7db_Range16(4961LLU,4968LLU,1LLU),_1b5a4a7db_Range16(5742LLU,5867LLU,125LLU),_1b5a4a7db_Range16(5868LLU,5869LLU,1LLU),_1b5a4a7db_Range16(5941LLU,5942LLU,1LLU),_1b5a4a7db_Range16(6100LLU,6102LLU,1LLU),_1b5a4a7db_Range16(6104LLU,6106LLU,1LLU),_1b5a4a7db_Range16(6144LLU,6149LLU,1LLU),_1b5a4a7db_Range16(6151LLU,6154LLU,1LLU),_1b5a4a7db_Range16(6468LLU,6469LLU,1LLU),_1b5a4a7db_Range16(6686LLU,6687LLU,1LLU),_1b5a4a7db_Range16(6816LLU,6822LLU,1LLU),_1b5a4a7db_Range16(6824LLU,6829LLU,1LLU),_1b5a4a7db_Range16(7002LLU,7008LLU,1LLU),_1b5a4a7db_Range16(7037LLU,7038LLU,1LLU),_1b5a4a7db_Range16(7164LLU,7167LLU,1LLU),_1b5a4a7db_Range16(7227LLU,7231LLU,1LLU),_1b5a4a7db_Range16(7294LLU,7295LLU,1LLU),_1b5a4a7db_Range16(7360LLU,7367LLU,1LLU),_1b5a4a7db_Range16(7379LLU,8214LLU,835LLU),_1b5a4a7db_Range16(8215LLU,8224LLU,9LLU),_1b5a4a7db_Range16(8225LLU,8231LLU,1LLU),_1b5a4a7db_Range16(8240LLU,8248LLU,1LLU),_1b5a4a7db_Range16(8251LLU,8254LLU,1LLU),_1b5a4a7db_Range16(8257LLU,8259LLU,1LLU),_1b5a4a7db_Range16(8263LLU,8273LLU,1LLU),_1b5a4a7db_Range16(8275LLU,8277LLU,2LLU),_1b5a4a7db_Range16(8278LLU,8286LLU,1LLU),_1b5a4a7db_Range16(11513LLU,11516LLU,1LLU),_1b5a4a7db_Range16(11518LLU,11519LLU,1LLU),_1b5a4a7db_Range16(11632LLU,11776LLU,144LLU),_1b5a4a7db_Range16(11777LLU,11782LLU,5LLU),_1b5a4a7db_Range16(11783LLU,11784LLU,1LLU),_1b5a4a7db_Range16(11787LLU,11790LLU,3LLU),_1b5a4a7db_Range16(11791LLU,11798LLU,1LLU),_1b5a4a7db_Range16(11800LLU,11801LLU,1LLU),_1b5a4a7db_Range16(11803LLU,11806LLU,3LLU),_1b5a4a7db_Range16(11807LLU,11818LLU,11LLU),_1b5a4a7db_Range16(11819LLU,11822LLU,1LLU),_1b5a4a7db_Range16(11824LLU,11833LLU,1LLU),_1b5a4a7db_Range16(11836LLU,11839LLU,1LLU),_1b5a4a7db_Range16(11841LLU,11843LLU,2LLU),_1b5a4a7db_Range16(11844LLU,11855LLU,1LLU),_1b5a4a7db_Range16(11858LLU,11860LLU,1LLU),_1b5a4a7db_Range16(12289LLU,12291LLU,1LLU),_1b5a4a7db_Range16(12349LLU,12539LLU,190LLU),_1b5a4a7db_Range16(42238LLU,42239LLU,1LLU),_1b5a4a7db_Range16(42509LLU,42511LLU,1LLU),_1b5a4a7db_Range16(42611LLU,42622LLU,11LLU),_1b5a4a7db_Range16(42738LLU,42743LLU,1LLU),_1b5a4a7db_Range16(43124LLU,43127LLU,1LLU),_1b5a4a7db_Range16(43214LLU,43215LLU,1LLU),_1b5a4a7db_Range16(43256LLU,43258LLU,1LLU),_1b5a4a7db_Range16(43260LLU,43310LLU,50LLU),_1b5a4a7db_Range16(43311LLU,43359LLU,48LLU),_1b5a4a7db_Range16(43457LLU,43469LLU,1LLU),_1b5a4a7db_Range16(43486LLU,43487LLU,1LLU),_1b5a4a7db_Range16(43612LLU,43615LLU,1LLU),_1b5a4a7db_Range16(43742LLU,43743LLU,1LLU),_1b5a4a7db_Range16(43760LLU,43761LLU,1LLU),_1b5a4a7db_Range16(44011LLU,65040LLU,21029LLU),_1b5a4a7db_Range16(65041LLU,65046LLU,1LLU),_1b5a4a7db_Range16(65049LLU,65072LLU,23LLU),_1b5a4a7db_Range16(65093LLU,65094LLU,1LLU),_1b5a4a7db_Range16(65097LLU,65100LLU,1LLU),_1b5a4a7db_Range16(65104LLU,65106LLU,1LLU),_1b5a4a7db_Range16(65108LLU,65111LLU,1LLU),_1b5a4a7db_Range16(65119LLU,65121LLU,1LLU),_1b5a4a7db_Range16(65128LLU,65130LLU,2LLU),_1b5a4a7db_Range16(65131LLU,65281LLU,150LLU),_1b5a4a7db_Range16(65282LLU,65283LLU,1LLU),_1b5a4a7db_Range16(65285LLU,65287LLU,1LLU),_1b5a4a7db_Range16(65290LLU,65294LLU,2LLU),_1b5a4a7db_Range16(65295LLU,65306LLU,11LLU),_1b5a4a7db_Range16(65307LLU,65311LLU,4LLU),_1b5a4a7db_Range16(65312LLU,65340LLU,28LLU),_1b5a4a7db_Range16(65377LLU,65380LLU,3LLU),_1b5a4a7db_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(65792LLU,65794LLU,1LLU),_1b5a4a7db_Range32(66463LLU,66512LLU,49LLU),_1b5a4a7db_Range32(66927LLU,67671LLU,744LLU),_1b5a4a7db_Range32(67871LLU,67903LLU,32LLU),_1b5a4a7db_Range32(68176LLU,68184LLU,1LLU),_1b5a4a7db_Range32(68223LLU,68336LLU,113LLU),_1b5a4a7db_Range32(68337LLU,68342LLU,1LLU),_1b5a4a7db_Range32(68409LLU,68415LLU,1LLU),_1b5a4a7db_Range32(68505LLU,68508LLU,1LLU),_1b5a4a7db_Range32(69461LLU,69465LLU,1LLU),_1b5a4a7db_Range32(69510LLU,69513LLU,1LLU),_1b5a4a7db_Range32(69703LLU,69709LLU,1LLU),_1b5a4a7db_Range32(69819LLU,69820LLU,1LLU),_1b5a4a7db_Range32(69822LLU,69825LLU,1LLU),_1b5a4a7db_Range32(69952LLU,69955LLU,1LLU),_1b5a4a7db_Range32(70004LLU,70005LLU,1LLU),_1b5a4a7db_Range32(70085LLU,70088LLU,1LLU),_1b5a4a7db_Range32(70093LLU,70107LLU,14LLU),_1b5a4a7db_Range32(70109LLU,70111LLU,1LLU),_1b5a4a7db_Range32(70200LLU,70205LLU,1LLU),_1b5a4a7db_Range32(70313LLU,70731LLU,418LLU),_1b5a4a7db_Range32(70732LLU,70735LLU,1LLU),_1b5a4a7db_Range32(70746LLU,70747LLU,1LLU),_1b5a4a7db_Range32(70749LLU,70854LLU,105LLU),_1b5a4a7db_Range32(71105LLU,71127LLU,1LLU),_1b5a4a7db_Range32(71233LLU,71235LLU,1LLU),_1b5a4a7db_Range32(71264LLU,71276LLU,1LLU),_1b5a4a7db_Range32(71353LLU,71484LLU,131LLU),_1b5a4a7db_Range32(71485LLU,71486LLU,1LLU),_1b5a4a7db_Range32(71739LLU,72004LLU,265LLU),_1b5a4a7db_Range32(72005LLU,72006LLU,1LLU),_1b5a4a7db_Range32(72162LLU,72255LLU,93LLU),_1b5a4a7db_Range32(72256LLU,72262LLU,1LLU),_1b5a4a7db_Range32(72346LLU,72348LLU,1LLU),_1b5a4a7db_Range32(72350LLU,72354LLU,1LLU),_1b5a4a7db_Range32(72448LLU,72457LLU,1LLU),_1b5a4a7db_Range32(72769LLU,72773LLU,1LLU),_1b5a4a7db_Range32(72816LLU,72817LLU,1LLU),_1b5a4a7db_Range32(73463LLU,73464LLU,1LLU),_1b5a4a7db_Range32(73539LLU,73551LLU,1LLU),_1b5a4a7db_Range32(73727LLU,74864LLU,1137LLU),_1b5a4a7db_Range32(74865LLU,74868LLU,1LLU),_1b5a4a7db_Range32(77809LLU,77810LLU,1LLU),_1b5a4a7db_Range32(92782LLU,92783LLU,1LLU),_1b5a4a7db_Range32(92917LLU,92983LLU,66LLU),_1b5a4a7db_Range32(92984LLU,92987LLU,1LLU),_1b5a4a7db_Range32(92996LLU,93847LLU,851LLU),_1b5a4a7db_Range32(93848LLU,93850LLU,1LLU),_1b5a4a7db_Range32(94178LLU,113823LLU,19645LLU),_1b5a4a7db_Range32(121479LLU,121483LLU,1LLU),_1b5a4a7db_Range32(125278LLU,125279LLU,1LLU)}),8LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PS = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(40LLU,91LLU,51LLU),_1b5a4a7db_Range16(123LLU,3898LLU,3775LLU),_1b5a4a7db_Range16(3900LLU,5787LLU,1887LLU),_1b5a4a7db_Range16(8218LLU,8222LLU,4LLU),_1b5a4a7db_Range16(8261LLU,8317LLU,56LLU),_1b5a4a7db_Range16(8333LLU,8968LLU,635LLU),_1b5a4a7db_Range16(8970LLU,9001LLU,31LLU),_1b5a4a7db_Range16(10088LLU,10100LLU,2LLU),_1b5a4a7db_Range16(10181LLU,10214LLU,33LLU),_1b5a4a7db_Range16(10216LLU,10222LLU,2LLU),_1b5a4a7db_Range16(10627LLU,10647LLU,2LLU),_1b5a4a7db_Range16(10712LLU,10714LLU,2LLU),_1b5a4a7db_Range16(10748LLU,11810LLU,1062LLU),_1b5a4a7db_Range16(11812LLU,11816LLU,2LLU),_1b5a4a7db_Range16(11842LLU,11861LLU,19LLU),_1b5a4a7db_Range16(11863LLU,11867LLU,2LLU),_1b5a4a7db_Range16(12296LLU,12304LLU,2LLU),_1b5a4a7db_Range16(12308LLU,12314LLU,2LLU),_1b5a4a7db_Range16(12317LLU,64831LLU,52514LLU),_1b5a4a7db_Range16(65047LLU,65077LLU,30LLU),_1b5a4a7db_Range16(65079LLU,65091LLU,2LLU),_1b5a4a7db_Range16(65095LLU,65113LLU,18LLU),_1b5a4a7db_Range16(65115LLU,65117LLU,2LLU),_1b5a4a7db_Range16(65288LLU,65339LLU,51LLU),_1b5a4a7db_Range16(65371LLU,65375LLU,4LLU),_1b5a4a7db_Range16(65378LLU,65378LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),1LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__S = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(36LLU,43LLU,7LLU),_1b5a4a7db_Range16(60LLU,62LLU,1LLU),_1b5a4a7db_Range16(94LLU,96LLU,2LLU),_1b5a4a7db_Range16(124LLU,126LLU,2LLU),_1b5a4a7db_Range16(162LLU,166LLU,1LLU),_1b5a4a7db_Range16(168LLU,169LLU,1LLU),_1b5a4a7db_Range16(172LLU,174LLU,2LLU),_1b5a4a7db_Range16(175LLU,177LLU,1LLU),_1b5a4a7db_Range16(180LLU,184LLU,4LLU),_1b5a4a7db_Range16(215LLU,247LLU,32LLU),_1b5a4a7db_Range16(706LLU,709LLU,1LLU),_1b5a4a7db_Range16(722LLU,735LLU,1LLU),_1b5a4a7db_Range16(741LLU,747LLU,1LLU),_1b5a4a7db_Range16(749LLU,751LLU,2LLU),_1b5a4a7db_Range16(752LLU,767LLU,1LLU),_1b5a4a7db_Range16(885LLU,900LLU,15LLU),_1b5a4a7db_Range16(901LLU,1014LLU,113LLU),_1b5a4a7db_Range16(1154LLU,1421LLU,267LLU),_1b5a4a7db_Range16(1422LLU,1423LLU,1LLU),_1b5a4a7db_Range16(1542LLU,1544LLU,1LLU),_1b5a4a7db_Range16(1547LLU,1550LLU,3LLU),_1b5a4a7db_Range16(1551LLU,1758LLU,207LLU),_1b5a4a7db_Range16(1769LLU,1789LLU,20LLU),_1b5a4a7db_Range16(1790LLU,2038LLU,248LLU),_1b5a4a7db_Range16(2046LLU,2047LLU,1LLU),_1b5a4a7db_Range16(2184LLU,2546LLU,362LLU),_1b5a4a7db_Range16(2547LLU,2554LLU,7LLU),_1b5a4a7db_Range16(2555LLU,2801LLU,246LLU),_1b5a4a7db_Range16(2928LLU,3059LLU,131LLU),_1b5a4a7db_Range16(3060LLU,3066LLU,1LLU),_1b5a4a7db_Range16(3199LLU,3407LLU,208LLU),_1b5a4a7db_Range16(3449LLU,3647LLU,198LLU),_1b5a4a7db_Range16(3841LLU,3843LLU,1LLU),_1b5a4a7db_Range16(3859LLU,3861LLU,2LLU),_1b5a4a7db_Range16(3862LLU,3863LLU,1LLU),_1b5a4a7db_Range16(3866LLU,3871LLU,1LLU),_1b5a4a7db_Range16(3892LLU,3896LLU,2LLU),_1b5a4a7db_Range16(4030LLU,4037LLU,1LLU),_1b5a4a7db_Range16(4039LLU,4044LLU,1LLU),_1b5a4a7db_Range16(4046LLU,4047LLU,1LLU),_1b5a4a7db_Range16(4053LLU,4056LLU,1LLU),_1b5a4a7db_Range16(4254LLU,4255LLU,1LLU),_1b5a4a7db_Range16(5008LLU,5017LLU,1LLU),_1b5a4a7db_Range16(5741LLU,6107LLU,366LLU),_1b5a4a7db_Range16(6464LLU,6622LLU,158LLU),_1b5a4a7db_Range16(6623LLU,6655LLU,1LLU),_1b5a4a7db_Range16(7009LLU,7018LLU,1LLU),_1b5a4a7db_Range16(7028LLU,7036LLU,1LLU),_1b5a4a7db_Range16(8125LLU,8127LLU,2LLU),_1b5a4a7db_Range16(8128LLU,8129LLU,1LLU),_1b5a4a7db_Range16(8141LLU,8143LLU,1LLU),_1b5a4a7db_Range16(8157LLU,8159LLU,1LLU),_1b5a4a7db_Range16(8173LLU,8175LLU,1LLU),_1b5a4a7db_Range16(8189LLU,8190LLU,1LLU),_1b5a4a7db_Range16(8260LLU,8274LLU,14LLU),_1b5a4a7db_Range16(8314LLU,8316LLU,1LLU),_1b5a4a7db_Range16(8330LLU,8332LLU,1LLU),_1b5a4a7db_Range16(8352LLU,8384LLU,1LLU),_1b5a4a7db_Range16(8448LLU,8449LLU,1LLU),_1b5a4a7db_Range16(8451LLU,8454LLU,1LLU),_1b5a4a7db_Range16(8456LLU,8457LLU,1LLU),_1b5a4a7db_Range16(8468LLU,8470LLU,2LLU),_1b5a4a7db_Range16(8471LLU,8472LLU,1LLU),_1b5a4a7db_Range16(8478LLU,8483LLU,1LLU),_1b5a4a7db_Range16(8485LLU,8489LLU,2LLU),_1b5a4a7db_Range16(8494LLU,8506LLU,12LLU),_1b5a4a7db_Range16(8507LLU,8512LLU,5LLU),_1b5a4a7db_Range16(8513LLU,8516LLU,1LLU),_1b5a4a7db_Range16(8522LLU,8525LLU,1LLU),_1b5a4a7db_Range16(8527LLU,8586LLU,59LLU),_1b5a4a7db_Range16(8587LLU,8592LLU,5LLU),_1b5a4a7db_Range16(8593LLU,8967LLU,1LLU),_1b5a4a7db_Range16(8972LLU,9000LLU,1LLU),_1b5a4a7db_Range16(9003LLU,9254LLU,1LLU),_1b5a4a7db_Range16(9280LLU,9290LLU,1LLU),_1b5a4a7db_Range16(9372LLU,9449LLU,1LLU),_1b5a4a7db_Range16(9472LLU,10087LLU,1LLU),_1b5a4a7db_Range16(10132LLU,10180LLU,1LLU),_1b5a4a7db_Range16(10183LLU,10213LLU,1LLU),_1b5a4a7db_Range16(10224LLU,10626LLU,1LLU),_1b5a4a7db_Range16(10649LLU,10711LLU,1LLU),_1b5a4a7db_Range16(10716LLU,10747LLU,1LLU),_1b5a4a7db_Range16(10750LLU,11123LLU,1LLU),_1b5a4a7db_Range16(11126LLU,11157LLU,1LLU),_1b5a4a7db_Range16(11159LLU,11263LLU,1LLU),_1b5a4a7db_Range16(11493LLU,11498LLU,1LLU),_1b5a4a7db_Range16(11856LLU,11857LLU,1LLU),_1b5a4a7db_Range16(11904LLU,11929LLU,1LLU),_1b5a4a7db_Range16(11931LLU,12019LLU,1LLU),_1b5a4a7db_Range16(12032LLU,12245LLU,1LLU),_1b5a4a7db_Range16(12272LLU,12283LLU,1LLU),_1b5a4a7db_Range16(12292LLU,12306LLU,14LLU),_1b5a4a7db_Range16(12307LLU,12320LLU,13LLU),_1b5a4a7db_Range16(12342LLU,12343LLU,1LLU),_1b5a4a7db_Range16(12350LLU,12351LLU,1LLU),_1b5a4a7db_Range16(12443LLU,12444LLU,1LLU),_1b5a4a7db_Range16(12688LLU,12689LLU,1LLU),_1b5a4a7db_Range16(12694LLU,12703LLU,1LLU),_1b5a4a7db_Range16(12736LLU,12771LLU,1LLU),_1b5a4a7db_Range16(12800LLU,12830LLU,1LLU),_1b5a4a7db_Range16(12842LLU,12871LLU,1LLU),_1b5a4a7db_Range16(12880LLU,12896LLU,16LLU),_1b5a4a7db_Range16(12897LLU,12927LLU,1LLU),_1b5a4a7db_Range16(12938LLU,12976LLU,1LLU),_1b5a4a7db_Range16(12992LLU,13311LLU,1LLU),_1b5a4a7db_Range16(19904LLU,19967LLU,1LLU),_1b5a4a7db_Range16(42128LLU,42182LLU,1LLU),_1b5a4a7db_Range16(42752LLU,42774LLU,1LLU),_1b5a4a7db_Range16(42784LLU,42785LLU,1LLU),_1b5a4a7db_Range16(42889LLU,42890LLU,1LLU),_1b5a4a7db_Range16(43048LLU,43051LLU,1LLU),_1b5a4a7db_Range16(43062LLU,43065LLU,1LLU),_1b5a4a7db_Range16(43639LLU,43641LLU,1LLU),_1b5a4a7db_Range16(43867LLU,43882LLU,15LLU),_1b5a4a7db_Range16(43883LLU,64297LLU,20414LLU),_1b5a4a7db_Range16(64434LLU,64450LLU,1LLU),_1b5a4a7db_Range16(64832LLU,64847LLU,1LLU),_1b5a4a7db_Range16(64975LLU,65020LLU,45LLU),_1b5a4a7db_Range16(65021LLU,65023LLU,1LLU),_1b5a4a7db_Range16(65122LLU,65124LLU,2LLU),_1b5a4a7db_Range16(65125LLU,65126LLU,1LLU),_1b5a4a7db_Range16(65129LLU,65284LLU,155LLU),_1b5a4a7db_Range16(65291LLU,65308LLU,17LLU),_1b5a4a7db_Range16(65309LLU,65310LLU,1LLU),_1b5a4a7db_Range16(65342LLU,65344LLU,2LLU),_1b5a4a7db_Range16(65372LLU,65374LLU,2LLU),_1b5a4a7db_Range16(65504LLU,65510LLU,1LLU),_1b5a4a7db_Range16(65512LLU,65518LLU,1LLU),_1b5a4a7db_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(65847LLU,65855LLU,1LLU),_1b5a4a7db_Range32(65913LLU,65929LLU,1LLU),_1b5a4a7db_Range32(65932LLU,65934LLU,1LLU),_1b5a4a7db_Range32(65936LLU,65948LLU,1LLU),_1b5a4a7db_Range32(65952LLU,66000LLU,48LLU),_1b5a4a7db_Range32(66001LLU,66044LLU,1LLU),_1b5a4a7db_Range32(67703LLU,67704LLU,1LLU),_1b5a4a7db_Range32(68296LLU,71487LLU,3191LLU),_1b5a4a7db_Range32(73685LLU,73713LLU,1LLU),_1b5a4a7db_Range32(92988LLU,92991LLU,1LLU),_1b5a4a7db_Range32(92997LLU,113820LLU,20823LLU),_1b5a4a7db_Range32(118608LLU,118723LLU,1LLU),_1b5a4a7db_Range32(118784LLU,119029LLU,1LLU),_1b5a4a7db_Range32(119040LLU,119078LLU,1LLU),_1b5a4a7db_Range32(119081LLU,119140LLU,1LLU),_1b5a4a7db_Range32(119146LLU,119148LLU,1LLU),_1b5a4a7db_Range32(119171LLU,119172LLU,1LLU),_1b5a4a7db_Range32(119180LLU,119209LLU,1LLU),_1b5a4a7db_Range32(119214LLU,119274LLU,1LLU),_1b5a4a7db_Range32(119296LLU,119361LLU,1LLU),_1b5a4a7db_Range32(119365LLU,119552LLU,187LLU),_1b5a4a7db_Range32(119553LLU,119638LLU,1LLU),_1b5a4a7db_Range32(120513LLU,120539LLU,26LLU),_1b5a4a7db_Range32(120571LLU,120597LLU,26LLU),_1b5a4a7db_Range32(120629LLU,120655LLU,26LLU),_1b5a4a7db_Range32(120687LLU,120713LLU,26LLU),_1b5a4a7db_Range32(120745LLU,120771LLU,26LLU),_1b5a4a7db_Range32(120832LLU,121343LLU,1LLU),_1b5a4a7db_Range32(121399LLU,121402LLU,1LLU),_1b5a4a7db_Range32(121453LLU,121460LLU,1LLU),_1b5a4a7db_Range32(121462LLU,121475LLU,1LLU),_1b5a4a7db_Range32(121477LLU,121478LLU,1LLU),_1b5a4a7db_Range32(123215LLU,123647LLU,432LLU),_1b5a4a7db_Range32(126124LLU,126128LLU,4LLU),_1b5a4a7db_Range32(126254LLU,126704LLU,450LLU),_1b5a4a7db_Range32(126705LLU,126976LLU,271LLU),_1b5a4a7db_Range32(126977LLU,127019LLU,1LLU),_1b5a4a7db_Range32(127024LLU,127123LLU,1LLU),_1b5a4a7db_Range32(127136LLU,127150LLU,1LLU),_1b5a4a7db_Range32(127153LLU,127167LLU,1LLU),_1b5a4a7db_Range32(127169LLU,127183LLU,1LLU),_1b5a4a7db_Range32(127185LLU,127221LLU,1LLU),_1b5a4a7db_Range32(127245LLU,127405LLU,1LLU),_1b5a4a7db_Range32(127462LLU,127490LLU,1LLU),_1b5a4a7db_Range32(127504LLU,127547LLU,1LLU),_1b5a4a7db_Range32(127552LLU,127560LLU,1LLU),_1b5a4a7db_Range32(127568LLU,127569LLU,1LLU),_1b5a4a7db_Range32(127584LLU,127589LLU,1LLU),_1b5a4a7db_Range32(127744LLU,128727LLU,1LLU),_1b5a4a7db_Range32(128732LLU,128748LLU,1LLU),_1b5a4a7db_Range32(128752LLU,128764LLU,1LLU),_1b5a4a7db_Range32(128768LLU,128886LLU,1LLU),_1b5a4a7db_Range32(128891LLU,128985LLU,1LLU),_1b5a4a7db_Range32(128992LLU,129003LLU,1LLU),_1b5a4a7db_Range32(129008LLU,129024LLU,16LLU),_1b5a4a7db_Range32(129025LLU,129035LLU,1LLU),_1b5a4a7db_Range32(129040LLU,129095LLU,1LLU),_1b5a4a7db_Range32(129104LLU,129113LLU,1LLU),_1b5a4a7db_Range32(129120LLU,129159LLU,1LLU),_1b5a4a7db_Range32(129168LLU,129197LLU,1LLU),_1b5a4a7db_Range32(129200LLU,129201LLU,1LLU),_1b5a4a7db_Range32(129280LLU,129619LLU,1LLU),_1b5a4a7db_Range32(129632LLU,129645LLU,1LLU),_1b5a4a7db_Range32(129648LLU,129660LLU,1LLU),_1b5a4a7db_Range32(129664LLU,129672LLU,1LLU),_1b5a4a7db_Range32(129680LLU,129725LLU,1LLU),_1b5a4a7db_Range32(129727LLU,129733LLU,1LLU),_1b5a4a7db_Range32(129742LLU,129755LLU,1LLU),_1b5a4a7db_Range32(129760LLU,129768LLU,1LLU),_1b5a4a7db_Range32(129776LLU,129784LLU,1LLU),_1b5a4a7db_Range32(129792LLU,129938LLU,1LLU),_1b5a4a7db_Range32(129940LLU,129994LLU,1LLU)}),10LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(36LLU,162LLU,126LLU),_1b5a4a7db_Range16(163LLU,165LLU,1LLU),_1b5a4a7db_Range16(1423LLU,1547LLU,124LLU),_1b5a4a7db_Range16(2046LLU,2047LLU,1LLU),_1b5a4a7db_Range16(2546LLU,2547LLU,1LLU),_1b5a4a7db_Range16(2555LLU,2801LLU,246LLU),_1b5a4a7db_Range16(3065LLU,3647LLU,582LLU),_1b5a4a7db_Range16(6107LLU,8352LLU,2245LLU),_1b5a4a7db_Range16(8353LLU,8384LLU,1LLU),_1b5a4a7db_Range16(43064LLU,65020LLU,21956LLU),_1b5a4a7db_Range16(65129LLU,65284LLU,155LLU),_1b5a4a7db_Range16(65504LLU,65505LLU,1LLU),_1b5a4a7db_Range16(65509LLU,65510LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(73693LLU,73696LLU,1LLU),_1b5a4a7db_Range32(123647LLU,126128LLU,2481LLU)}),2LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SK = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(94LLU,96LLU,2LLU),_1b5a4a7db_Range16(168LLU,175LLU,7LLU),_1b5a4a7db_Range16(180LLU,184LLU,4LLU),_1b5a4a7db_Range16(706LLU,709LLU,1LLU),_1b5a4a7db_Range16(722LLU,735LLU,1LLU),_1b5a4a7db_Range16(741LLU,747LLU,1LLU),_1b5a4a7db_Range16(749LLU,751LLU,2LLU),_1b5a4a7db_Range16(752LLU,767LLU,1LLU),_1b5a4a7db_Range16(885LLU,900LLU,15LLU),_1b5a4a7db_Range16(901LLU,2184LLU,1283LLU),_1b5a4a7db_Range16(8125LLU,8127LLU,2LLU),_1b5a4a7db_Range16(8128LLU,8129LLU,1LLU),_1b5a4a7db_Range16(8141LLU,8143LLU,1LLU),_1b5a4a7db_Range16(8157LLU,8159LLU,1LLU),_1b5a4a7db_Range16(8173LLU,8175LLU,1LLU),_1b5a4a7db_Range16(8189LLU,8190LLU,1LLU),_1b5a4a7db_Range16(12443LLU,12444LLU,1LLU),_1b5a4a7db_Range16(42752LLU,42774LLU,1LLU),_1b5a4a7db_Range16(42784LLU,42785LLU,1LLU),_1b5a4a7db_Range16(42889LLU,42890LLU,1LLU),_1b5a4a7db_Range16(43867LLU,43882LLU,15LLU),_1b5a4a7db_Range16(43883LLU,64434LLU,20551LLU),_1b5a4a7db_Range16(64435LLU,64450LLU,1LLU),_1b5a4a7db_Range16(65342LLU,65344LLU,2LLU),_1b5a4a7db_Range16(65507LLU,65507LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(127995LLU,127999LLU,1LLU)}),3LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SM = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(43LLU,60LLU,17LLU),_1b5a4a7db_Range16(61LLU,62LLU,1LLU),_1b5a4a7db_Range16(124LLU,126LLU,2LLU),_1b5a4a7db_Range16(172LLU,177LLU,5LLU),_1b5a4a7db_Range16(215LLU,247LLU,32LLU),_1b5a4a7db_Range16(1014LLU,1542LLU,528LLU),_1b5a4a7db_Range16(1543LLU,1544LLU,1LLU),_1b5a4a7db_Range16(8260LLU,8274LLU,14LLU),_1b5a4a7db_Range16(8314LLU,8316LLU,1LLU),_1b5a4a7db_Range16(8330LLU,8332LLU,1LLU),_1b5a4a7db_Range16(8472LLU,8512LLU,40LLU),_1b5a4a7db_Range16(8513LLU,8516LLU,1LLU),_1b5a4a7db_Range16(8523LLU,8592LLU,69LLU),_1b5a4a7db_Range16(8593LLU,8596LLU,1LLU),_1b5a4a7db_Range16(8602LLU,8603LLU,1LLU),_1b5a4a7db_Range16(8608LLU,8614LLU,3LLU),_1b5a4a7db_Range16(8622LLU,8654LLU,32LLU),_1b5a4a7db_Range16(8655LLU,8658LLU,3LLU),_1b5a4a7db_Range16(8660LLU,8692LLU,32LLU),_1b5a4a7db_Range16(8693LLU,8959LLU,1LLU),_1b5a4a7db_Range16(8992LLU,8993LLU,1LLU),_1b5a4a7db_Range16(9084LLU,9115LLU,31LLU),_1b5a4a7db_Range16(9116LLU,9139LLU,1LLU),_1b5a4a7db_Range16(9180LLU,9185LLU,1LLU),_1b5a4a7db_Range16(9655LLU,9665LLU,10LLU),_1b5a4a7db_Range16(9720LLU,9727LLU,1LLU),_1b5a4a7db_Range16(9839LLU,10176LLU,337LLU),_1b5a4a7db_Range16(10177LLU,10180LLU,1LLU),_1b5a4a7db_Range16(10183LLU,10213LLU,1LLU),_1b5a4a7db_Range16(10224LLU,10239LLU,1LLU),_1b5a4a7db_Range16(10496LLU,10626LLU,1LLU),_1b5a4a7db_Range16(10649LLU,10711LLU,1LLU),_1b5a4a7db_Range16(10716LLU,10747LLU,1LLU),_1b5a4a7db_Range16(10750LLU,11007LLU,1LLU),_1b5a4a7db_Range16(11056LLU,11076LLU,1LLU),_1b5a4a7db_Range16(11079LLU,11084LLU,1LLU),_1b5a4a7db_Range16(64297LLU,65122LLU,825LLU),_1b5a4a7db_Range16(65124LLU,65126LLU,1LLU),_1b5a4a7db_Range16(65291LLU,65308LLU,17LLU),_1b5a4a7db_Range16(65309LLU,65310LLU,1LLU),_1b5a4a7db_Range16(65372LLU,65374LLU,2LLU),_1b5a4a7db_Range16(65506LLU,65513LLU,7LLU),_1b5a4a7db_Range16(65514LLU,65516LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(120513LLU,120539LLU,26LLU),_1b5a4a7db_Range32(120571LLU,120597LLU,26LLU),_1b5a4a7db_Range32(120629LLU,120655LLU,26LLU),_1b5a4a7db_Range32(120687LLU,120713LLU,26LLU),_1b5a4a7db_Range32(120745LLU,120771LLU,26LLU),_1b5a4a7db_Range32(126704LLU,126705LLU,1LLU)}),5LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(166LLU,169LLU,3LLU),_1b5a4a7db_Range16(174LLU,176LLU,2LLU),_1b5a4a7db_Range16(1154LLU,1421LLU,267LLU),_1b5a4a7db_Range16(1422LLU,1550LLU,128LLU),_1b5a4a7db_Range16(1551LLU,1758LLU,207LLU),_1b5a4a7db_Range16(1769LLU,1789LLU,20LLU),_1b5a4a7db_Range16(1790LLU,2038LLU,248LLU),_1b5a4a7db_Range16(2554LLU,2928LLU,374LLU),_1b5a4a7db_Range16(3059LLU,3064LLU,1LLU),_1b5a4a7db_Range16(3066LLU,3199LLU,133LLU),_1b5a4a7db_Range16(3407LLU,3449LLU,42LLU),_1b5a4a7db_Range16(3841LLU,3843LLU,1LLU),_1b5a4a7db_Range16(3859LLU,3861LLU,2LLU),_1b5a4a7db_Range16(3862LLU,3863LLU,1LLU),_1b5a4a7db_Range16(3866LLU,3871LLU,1LLU),_1b5a4a7db_Range16(3892LLU,3896LLU,2LLU),_1b5a4a7db_Range16(4030LLU,4037LLU,1LLU),_1b5a4a7db_Range16(4039LLU,4044LLU,1LLU),_1b5a4a7db_Range16(4046LLU,4047LLU,1LLU),_1b5a4a7db_Range16(4053LLU,4056LLU,1LLU),_1b5a4a7db_Range16(4254LLU,4255LLU,1LLU),_1b5a4a7db_Range16(5008LLU,5017LLU,1LLU),_1b5a4a7db_Range16(5741LLU,6464LLU,723LLU),_1b5a4a7db_Range16(6622LLU,6655LLU,1LLU),_1b5a4a7db_Range16(7009LLU,7018LLU,1LLU),_1b5a4a7db_Range16(7028LLU,7036LLU,1LLU),_1b5a4a7db_Range16(8448LLU,8449LLU,1LLU),_1b5a4a7db_Range16(8451LLU,8454LLU,1LLU),_1b5a4a7db_Range16(8456LLU,8457LLU,1LLU),_1b5a4a7db_Range16(8468LLU,8470LLU,2LLU),_1b5a4a7db_Range16(8471LLU,8478LLU,7LLU),_1b5a4a7db_Range16(8479LLU,8483LLU,1LLU),_1b5a4a7db_Range16(8485LLU,8489LLU,2LLU),_1b5a4a7db_Range16(8494LLU,8506LLU,12LLU),_1b5a4a7db_Range16(8507LLU,8522LLU,15LLU),_1b5a4a7db_Range16(8524LLU,8525LLU,1LLU),_1b5a4a7db_Range16(8527LLU,8586LLU,59LLU),_1b5a4a7db_Range16(8587LLU,8597LLU,10LLU),_1b5a4a7db_Range16(8598LLU,8601LLU,1LLU),_1b5a4a7db_Range16(8604LLU,8607LLU,1LLU),_1b5a4a7db_Range16(8609LLU,8610LLU,1LLU),_1b5a4a7db_Range16(8612LLU,8613LLU,1LLU),_1b5a4a7db_Range16(8615LLU,8621LLU,1LLU),_1b5a4a7db_Range16(8623LLU,8653LLU,1LLU),_1b5a4a7db_Range16(8656LLU,8657LLU,1LLU),_1b5a4a7db_Range16(8659LLU,8661LLU,2LLU),_1b5a4a7db_Range16(8662LLU,8691LLU,1LLU),_1b5a4a7db_Range16(8960LLU,8967LLU,1LLU),_1b5a4a7db_Range16(8972LLU,8991LLU,1LLU),_1b5a4a7db_Range16(8994LLU,9000LLU,1LLU),_1b5a4a7db_Range16(9003LLU,9083LLU,1LLU),_1b5a4a7db_Range16(9085LLU,9114LLU,1LLU),_1b5a4a7db_Range16(9140LLU,9179LLU,1LLU),_1b5a4a7db_Range16(9186LLU,9254LLU,1LLU),_1b5a4a7db_Range16(9280LLU,9290LLU,1LLU),_1b5a4a7db_Range16(9372LLU,9449LLU,1LLU),_1b5a4a7db_Range16(9472LLU,9654LLU,1LLU),_1b5a4a7db_Range16(9656LLU,9664LLU,1LLU),_1b5a4a7db_Range16(9666LLU,9719LLU,1LLU),_1b5a4a7db_Range16(9728LLU,9838LLU,1LLU),_1b5a4a7db_Range16(9840LLU,10087LLU,1LLU),_1b5a4a7db_Range16(10132LLU,10175LLU,1LLU),_1b5a4a7db_Range16(10240LLU,10495LLU,1LLU),_1b5a4a7db_Range16(11008LLU,11055LLU,1LLU),_1b5a4a7db_Range16(11077LLU,11078LLU,1LLU),_1b5a4a7db_Range16(11085LLU,11123LLU,1LLU),_1b5a4a7db_Range16(11126LLU,11157LLU,1LLU),_1b5a4a7db_Range16(11159LLU,11263LLU,1LLU),_1b5a4a7db_Range16(11493LLU,11498LLU,1LLU),_1b5a4a7db_Range16(11856LLU,11857LLU,1LLU),_1b5a4a7db_Range16(11904LLU,11929LLU,1LLU),_1b5a4a7db_Range16(11931LLU,12019LLU,1LLU),_1b5a4a7db_Range16(12032LLU,12245LLU,1LLU),_1b5a4a7db_Range16(12272LLU,12283LLU,1LLU),_1b5a4a7db_Range16(12292LLU,12306LLU,14LLU),_1b5a4a7db_Range16(12307LLU,12320LLU,13LLU),_1b5a4a7db_Range16(12342LLU,12343LLU,1LLU),_1b5a4a7db_Range16(12350LLU,12351LLU,1LLU),_1b5a4a7db_Range16(12688LLU,12689LLU,1LLU),_1b5a4a7db_Range16(12694LLU,12703LLU,1LLU),_1b5a4a7db_Range16(12736LLU,12771LLU,1LLU),_1b5a4a7db_Range16(12800LLU,12830LLU,1LLU),_1b5a4a7db_Range16(12842LLU,12871LLU,1LLU),_1b5a4a7db_Range16(12880LLU,12896LLU,16LLU),_1b5a4a7db_Range16(12897LLU,12927LLU,1LLU),_1b5a4a7db_Range16(12938LLU,12976LLU,1LLU),_1b5a4a7db_Range16(12992LLU,13311LLU,1LLU),_1b5a4a7db_Range16(19904LLU,19967LLU,1LLU),_1b5a4a7db_Range16(42128LLU,42182LLU,1LLU),_1b5a4a7db_Range16(43048LLU,43051LLU,1LLU),_1b5a4a7db_Range16(43062LLU,43063LLU,1LLU),_1b5a4a7db_Range16(43065LLU,43639LLU,574LLU),_1b5a4a7db_Range16(43640LLU,43641LLU,1LLU),_1b5a4a7db_Range16(64832LLU,64847LLU,1LLU),_1b5a4a7db_Range16(64975LLU,65021LLU,46LLU),_1b5a4a7db_Range16(65022LLU,65023LLU,1LLU),_1b5a4a7db_Range16(65508LLU,65512LLU,4LLU),_1b5a4a7db_Range16(65517LLU,65518LLU,1LLU),_1b5a4a7db_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(65847LLU,65855LLU,1LLU),_1b5a4a7db_Range32(65913LLU,65929LLU,1LLU),_1b5a4a7db_Range32(65932LLU,65934LLU,1LLU),_1b5a4a7db_Range32(65936LLU,65948LLU,1LLU),_1b5a4a7db_Range32(65952LLU,66000LLU,48LLU),_1b5a4a7db_Range32(66001LLU,66044LLU,1LLU),_1b5a4a7db_Range32(67703LLU,67704LLU,1LLU),_1b5a4a7db_Range32(68296LLU,71487LLU,3191LLU),_1b5a4a7db_Range32(73685LLU,73692LLU,1LLU),_1b5a4a7db_Range32(73697LLU,73713LLU,1LLU),_1b5a4a7db_Range32(92988LLU,92991LLU,1LLU),_1b5a4a7db_Range32(92997LLU,113820LLU,20823LLU),_1b5a4a7db_Range32(118608LLU,118723LLU,1LLU),_1b5a4a7db_Range32(118784LLU,119029LLU,1LLU),_1b5a4a7db_Range32(119040LLU,119078LLU,1LLU),_1b5a4a7db_Range32(119081LLU,119140LLU,1LLU),_1b5a4a7db_Range32(119146LLU,119148LLU,1LLU),_1b5a4a7db_Range32(119171LLU,119172LLU,1LLU),_1b5a4a7db_Range32(119180LLU,119209LLU,1LLU),_1b5a4a7db_Range32(119214LLU,119274LLU,1LLU),_1b5a4a7db_Range32(119296LLU,119361LLU,1LLU),_1b5a4a7db_Range32(119365LLU,119552LLU,187LLU),_1b5a4a7db_Range32(119553LLU,119638LLU,1LLU),_1b5a4a7db_Range32(120832LLU,121343LLU,1LLU),_1b5a4a7db_Range32(121399LLU,121402LLU,1LLU),_1b5a4a7db_Range32(121453LLU,121460LLU,1LLU),_1b5a4a7db_Range32(121462LLU,121475LLU,1LLU),_1b5a4a7db_Range32(121477LLU,121478LLU,1LLU),_1b5a4a7db_Range32(123215LLU,126124LLU,2909LLU),_1b5a4a7db_Range32(126254LLU,126976LLU,722LLU),_1b5a4a7db_Range32(126977LLU,127019LLU,1LLU),_1b5a4a7db_Range32(127024LLU,127123LLU,1LLU),_1b5a4a7db_Range32(127136LLU,127150LLU,1LLU),_1b5a4a7db_Range32(127153LLU,127167LLU,1LLU),_1b5a4a7db_Range32(127169LLU,127183LLU,1LLU),_1b5a4a7db_Range32(127185LLU,127221LLU,1LLU),_1b5a4a7db_Range32(127245LLU,127405LLU,1LLU),_1b5a4a7db_Range32(127462LLU,127490LLU,1LLU),_1b5a4a7db_Range32(127504LLU,127547LLU,1LLU),_1b5a4a7db_Range32(127552LLU,127560LLU,1LLU),_1b5a4a7db_Range32(127568LLU,127569LLU,1LLU),_1b5a4a7db_Range32(127584LLU,127589LLU,1LLU),_1b5a4a7db_Range32(127744LLU,127994LLU,1LLU),_1b5a4a7db_Range32(128000LLU,128727LLU,1LLU),_1b5a4a7db_Range32(128732LLU,128748LLU,1LLU),_1b5a4a7db_Range32(128752LLU,128764LLU,1LLU),_1b5a4a7db_Range32(128768LLU,128886LLU,1LLU),_1b5a4a7db_Range32(128891LLU,128985LLU,1LLU),_1b5a4a7db_Range32(128992LLU,129003LLU,1LLU),_1b5a4a7db_Range32(129008LLU,129024LLU,16LLU),_1b5a4a7db_Range32(129025LLU,129035LLU,1LLU),_1b5a4a7db_Range32(129040LLU,129095LLU,1LLU),_1b5a4a7db_Range32(129104LLU,129113LLU,1LLU),_1b5a4a7db_Range32(129120LLU,129159LLU,1LLU),_1b5a4a7db_Range32(129168LLU,129197LLU,1LLU),_1b5a4a7db_Range32(129200LLU,129201LLU,1LLU),_1b5a4a7db_Range32(129280LLU,129619LLU,1LLU),_1b5a4a7db_Range32(129632LLU,129645LLU,1LLU),_1b5a4a7db_Range32(129648LLU,129660LLU,1LLU),_1b5a4a7db_Range32(129664LLU,129672LLU,1LLU),_1b5a4a7db_Range32(129680LLU,129725LLU,1LLU),_1b5a4a7db_Range32(129727LLU,129733LLU,1LLU),_1b5a4a7db_Range32(129742LLU,129755LLU,1LLU),_1b5a4a7db_Range32(129760LLU,129768LLU,1LLU),_1b5a4a7db_Range32(129776LLU,129784LLU,1LLU),_1b5a4a7db_Range32(129792LLU,129938LLU,1LLU),_1b5a4a7db_Range32(129940LLU,129994LLU,1LLU)}),2LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__Z = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(32LLU,160LLU,128LLU),_1b5a4a7db_Range16(5760LLU,8192LLU,2432LLU),_1b5a4a7db_Range16(8193LLU,8202LLU,1LLU),_1b5a4a7db_Range16(8232LLU,8233LLU,1LLU),_1b5a4a7db_Range16(8239LLU,8287LLU,48LLU),_1b5a4a7db_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),1LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ZL = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(8232LLU,8232LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ZP = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(8233LLU,8233LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ZS = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(32LLU,160LLU,128LLU),_1b5a4a7db_Range16(5760LLU,8192LLU,2432LLU),_1b5a4a7db_Range16(8193LLU,8202LLU,1LLU),_1b5a4a7db_Range16(8239LLU,8287LLU,48LLU),_1b5a4a7db_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),1LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ADLAM = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(125184LLU,125259LLU,1LLU),_1b5a4a7db_Range32(125264LLU,125273LLU,1LLU),_1b5a4a7db_Range32(125278LLU,125279LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__AHOM = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(71424LLU,71450LLU,1LLU),_1b5a4a7db_Range32(71453LLU,71467LLU,1LLU),_1b5a4a7db_Range32(71472LLU,71494LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ANATOLIAN_HIEROGLYPHS = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(82944LLU,83526LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ARABIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(1536LLU,1540LLU,1LLU),_1b5a4a7db_Range16(1542LLU,1547LLU,1LLU),_1b5a4a7db_Range16(1549LLU,1562LLU,1LLU),_1b5a4a7db_Range16(1564LLU,1566LLU,1LLU),_1b5a4a7db_Range16(1568LLU,1599LLU,1LLU),_1b5a4a7db_Range16(1601LLU,1610LLU,1LLU),_1b5a4a7db_Range16(1622LLU,1647LLU,1LLU),_1b5a4a7db_Range16(1649LLU,1756LLU,1LLU),_1b5a4a7db_Range16(1758LLU,1791LLU,1LLU),_1b5a4a7db_Range16(1872LLU,1919LLU,1LLU),_1b5a4a7db_Range16(2160LLU,2190LLU,1LLU),_1b5a4a7db_Range16(2192LLU,2193LLU,1LLU),_1b5a4a7db_Range16(2200LLU,2273LLU,1LLU),_1b5a4a7db_Range16(2275LLU,2303LLU,1LLU),_1b5a4a7db_Range16(64336LLU,64450LLU,1LLU),_1b5a4a7db_Range16(64467LLU,64829LLU,1LLU),_1b5a4a7db_Range16(64832LLU,64911LLU,1LLU),_1b5a4a7db_Range16(64914LLU,64967LLU,1LLU),_1b5a4a7db_Range16(64975LLU,65008LLU,33LLU),_1b5a4a7db_Range16(65009LLU,65023LLU,1LLU),_1b5a4a7db_Range16(65136LLU,65140LLU,1LLU),_1b5a4a7db_Range16(65142LLU,65276LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69216LLU,69246LLU,1LLU),_1b5a4a7db_Range32(69373LLU,69375LLU,1LLU),_1b5a4a7db_Range32(126464LLU,126467LLU,1LLU),_1b5a4a7db_Range32(126469LLU,126495LLU,1LLU),_1b5a4a7db_Range32(126497LLU,126498LLU,1LLU),_1b5a4a7db_Range32(126500LLU,126503LLU,3LLU),_1b5a4a7db_Range32(126505LLU,126514LLU,1LLU),_1b5a4a7db_Range32(126516LLU,126519LLU,1LLU),_1b5a4a7db_Range32(126521LLU,126523LLU,2LLU),_1b5a4a7db_Range32(126530LLU,126535LLU,5LLU),_1b5a4a7db_Range32(126537LLU,126541LLU,2LLU),_1b5a4a7db_Range32(126542LLU,126543LLU,1LLU),_1b5a4a7db_Range32(126545LLU,126546LLU,1LLU),_1b5a4a7db_Range32(126548LLU,126551LLU,3LLU),_1b5a4a7db_Range32(126553LLU,126561LLU,2LLU),_1b5a4a7db_Range32(126562LLU,126564LLU,2LLU),_1b5a4a7db_Range32(126567LLU,126570LLU,1LLU),_1b5a4a7db_Range32(126572LLU,126578LLU,1LLU),_1b5a4a7db_Range32(126580LLU,126583LLU,1LLU),_1b5a4a7db_Range32(126585LLU,126588LLU,1LLU),_1b5a4a7db_Range32(126590LLU,126592LLU,2LLU),_1b5a4a7db_Range32(126593LLU,126601LLU,1LLU),_1b5a4a7db_Range32(126603LLU,126619LLU,1LLU),_1b5a4a7db_Range32(126625LLU,126627LLU,1LLU),_1b5a4a7db_Range32(126629LLU,126633LLU,1LLU),_1b5a4a7db_Range32(126635LLU,126651LLU,1LLU),_1b5a4a7db_Range32(126704LLU,126705LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ARMENIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(1329LLU,1366LLU,1LLU),_1b5a4a7db_Range16(1369LLU,1418LLU,1LLU),_1b5a4a7db_Range16(1421LLU,1423LLU,1LLU),_1b5a4a7db_Range16(64275LLU,64279LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__AVESTAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(68352LLU,68405LLU,1LLU),_1b5a4a7db_Range32(68409LLU,68415LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__BALINESE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(6912LLU,6988LLU,1LLU),_1b5a4a7db_Range16(6992LLU,7038LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__BAMUM = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(42656LLU,42743LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(92160LLU,92728LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__BASSA_VAH = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(92880LLU,92909LLU,1LLU),_1b5a4a7db_Range32(92912LLU,92917LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__BATAK = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(7104LLU,7155LLU,1LLU),_1b5a4a7db_Range16(7164LLU,7167LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__BENGALI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(2432LLU,2435LLU,1LLU),_1b5a4a7db_Range16(2437LLU,2444LLU,1LLU),_1b5a4a7db_Range16(2447LLU,2448LLU,1LLU),_1b5a4a7db_Range16(2451LLU,2472LLU,1LLU),_1b5a4a7db_Range16(2474LLU,2480LLU,1LLU),_1b5a4a7db_Range16(2482LLU,2486LLU,4LLU),_1b5a4a7db_Range16(2487LLU,2489LLU,1LLU),_1b5a4a7db_Range16(2492LLU,2500LLU,1LLU),_1b5a4a7db_Range16(2503LLU,2504LLU,1LLU),_1b5a4a7db_Range16(2507LLU,2510LLU,1LLU),_1b5a4a7db_Range16(2519LLU,2524LLU,5LLU),_1b5a4a7db_Range16(2525LLU,2527LLU,2LLU),_1b5a4a7db_Range16(2528LLU,2531LLU,1LLU),_1b5a4a7db_Range16(2534LLU,2558LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__BHAIKSUKI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(72704LLU,72712LLU,1LLU),_1b5a4a7db_Range32(72714LLU,72758LLU,1LLU),_1b5a4a7db_Range32(72760LLU,72773LLU,1LLU),_1b5a4a7db_Range32(72784LLU,72812LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__BOPOMOFO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(746LLU,747LLU,1LLU),_1b5a4a7db_Range16(12549LLU,12591LLU,1LLU),_1b5a4a7db_Range16(12704LLU,12735LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__BRAHMI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69632LLU,69709LLU,1LLU),_1b5a4a7db_Range32(69714LLU,69749LLU,1LLU),_1b5a4a7db_Range32(69759LLU,69759LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__BRAILLE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(10240LLU,10495LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__BUGINESE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(6656LLU,6683LLU,1LLU),_1b5a4a7db_Range16(6686LLU,6687LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__BUHID = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(5952LLU,5971LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CANADIAN_ABORIGINAL = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(5120LLU,5759LLU,1LLU),_1b5a4a7db_Range16(6320LLU,6389LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(72368LLU,72383LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CARIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66208LLU,66256LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CAUCASIAN_ALBANIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66864LLU,66915LLU,1LLU),_1b5a4a7db_Range32(66927LLU,66927LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CHAKMA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69888LLU,69940LLU,1LLU),_1b5a4a7db_Range32(69942LLU,69959LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CHAM = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(43520LLU,43574LLU,1LLU),_1b5a4a7db_Range16(43584LLU,43597LLU,1LLU),_1b5a4a7db_Range16(43600LLU,43609LLU,1LLU),_1b5a4a7db_Range16(43612LLU,43615LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CHEROKEE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(5024LLU,5109LLU,1LLU),_1b5a4a7db_Range16(5112LLU,5117LLU,1LLU),_1b5a4a7db_Range16(43888LLU,43967LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CHORASMIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69552LLU,69579LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__COMMON = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(0LLU,64LLU,1LLU),_1b5a4a7db_Range16(91LLU,96LLU,1LLU),_1b5a4a7db_Range16(123LLU,169LLU,1LLU),_1b5a4a7db_Range16(171LLU,185LLU,1LLU),_1b5a4a7db_Range16(187LLU,191LLU,1LLU),_1b5a4a7db_Range16(215LLU,247LLU,32LLU),_1b5a4a7db_Range16(697LLU,735LLU,1LLU),_1b5a4a7db_Range16(741LLU,745LLU,1LLU),_1b5a4a7db_Range16(748LLU,767LLU,1LLU),_1b5a4a7db_Range16(884LLU,894LLU,10LLU),_1b5a4a7db_Range16(901LLU,903LLU,2LLU),_1b5a4a7db_Range16(1541LLU,1548LLU,7LLU),_1b5a4a7db_Range16(1563LLU,1567LLU,4LLU),_1b5a4a7db_Range16(1600LLU,1757LLU,157LLU),_1b5a4a7db_Range16(2274LLU,2404LLU,130LLU),_1b5a4a7db_Range16(2405LLU,3647LLU,1242LLU),_1b5a4a7db_Range16(4053LLU,4056LLU,1LLU),_1b5a4a7db_Range16(4347LLU,5867LLU,1520LLU),_1b5a4a7db_Range16(5868LLU,5869LLU,1LLU),_1b5a4a7db_Range16(5941LLU,5942LLU,1LLU),_1b5a4a7db_Range16(6146LLU,6147LLU,1LLU),_1b5a4a7db_Range16(6149LLU,7379LLU,1230LLU),_1b5a4a7db_Range16(7393LLU,7401LLU,8LLU),_1b5a4a7db_Range16(7402LLU,7404LLU,1LLU),_1b5a4a7db_Range16(7406LLU,7411LLU,1LLU),_1b5a4a7db_Range16(7413LLU,7415LLU,1LLU),_1b5a4a7db_Range16(7418LLU,8192LLU,774LLU),_1b5a4a7db_Range16(8193LLU,8203LLU,1LLU),_1b5a4a7db_Range16(8206LLU,8292LLU,1LLU),_1b5a4a7db_Range16(8294LLU,8304LLU,1LLU),_1b5a4a7db_Range16(8308LLU,8318LLU,1LLU),_1b5a4a7db_Range16(8320LLU,8334LLU,1LLU),_1b5a4a7db_Range16(8352LLU,8384LLU,1LLU),_1b5a4a7db_Range16(8448LLU,8485LLU,1LLU),_1b5a4a7db_Range16(8487LLU,8489LLU,1LLU),_1b5a4a7db_Range16(8492LLU,8497LLU,1LLU),_1b5a4a7db_Range16(8499LLU,8525LLU,1LLU),_1b5a4a7db_Range16(8527LLU,8543LLU,1LLU),_1b5a4a7db_Range16(8585LLU,8587LLU,1LLU),_1b5a4a7db_Range16(8592LLU,9254LLU,1LLU),_1b5a4a7db_Range16(9280LLU,9290LLU,1LLU),_1b5a4a7db_Range16(9312LLU,10239LLU,1LLU),_1b5a4a7db_Range16(10496LLU,11123LLU,1LLU),_1b5a4a7db_Range16(11126LLU,11157LLU,1LLU),_1b5a4a7db_Range16(11159LLU,11263LLU,1LLU),_1b5a4a7db_Range16(11776LLU,11869LLU,1LLU),_1b5a4a7db_Range16(12272LLU,12283LLU,1LLU),_1b5a4a7db_Range16(12288LLU,12292LLU,1LLU),_1b5a4a7db_Range16(12294LLU,12296LLU,2LLU),_1b5a4a7db_Range16(12297LLU,12320LLU,1LLU),_1b5a4a7db_Range16(12336LLU,12343LLU,1LLU),_1b5a4a7db_Range16(12348LLU,12351LLU,1LLU),_1b5a4a7db_Range16(12443LLU,12444LLU,1LLU),_1b5a4a7db_Range16(12448LLU,12539LLU,91LLU),_1b5a4a7db_Range16(12540LLU,12688LLU,148LLU),_1b5a4a7db_Range16(12689LLU,12703LLU,1LLU),_1b5a4a7db_Range16(12736LLU,12771LLU,1LLU),_1b5a4a7db_Range16(12832LLU,12895LLU,1LLU),_1b5a4a7db_Range16(12927LLU,13007LLU,1LLU),_1b5a4a7db_Range16(13055LLU,13144LLU,89LLU),_1b5a4a7db_Range16(13145LLU,13311LLU,1LLU),_1b5a4a7db_Range16(19904LLU,19967LLU,1LLU),_1b5a4a7db_Range16(42752LLU,42785LLU,1LLU),_1b5a4a7db_Range16(42888LLU,42890LLU,1LLU),_1b5a4a7db_Range16(43056LLU,43065LLU,1LLU),_1b5a4a7db_Range16(43310LLU,43471LLU,161LLU),_1b5a4a7db_Range16(43867LLU,43882LLU,15LLU),_1b5a4a7db_Range16(43883LLU,64830LLU,20947LLU),_1b5a4a7db_Range16(64831LLU,65040LLU,209LLU),_1b5a4a7db_Range16(65041LLU,65049LLU,1LLU),_1b5a4a7db_Range16(65072LLU,65106LLU,1LLU),_1b5a4a7db_Range16(65108LLU,65126LLU,1LLU),_1b5a4a7db_Range16(65128LLU,65131LLU,1LLU),_1b5a4a7db_Range16(65279LLU,65281LLU,2LLU),_1b5a4a7db_Range16(65282LLU,65312LLU,1LLU),_1b5a4a7db_Range16(65339LLU,65344LLU,1LLU),_1b5a4a7db_Range16(65371LLU,65381LLU,1LLU),_1b5a4a7db_Range16(65392LLU,65438LLU,46LLU),_1b5a4a7db_Range16(65439LLU,65504LLU,65LLU),_1b5a4a7db_Range16(65505LLU,65510LLU,1LLU),_1b5a4a7db_Range16(65512LLU,65518LLU,1LLU),_1b5a4a7db_Range16(65529LLU,65533LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(65792LLU,65794LLU,1LLU),_1b5a4a7db_Range32(65799LLU,65843LLU,1LLU),_1b5a4a7db_Range32(65847LLU,65855LLU,1LLU),_1b5a4a7db_Range32(65936LLU,65948LLU,1LLU),_1b5a4a7db_Range32(66000LLU,66044LLU,1LLU),_1b5a4a7db_Range32(66273LLU,66299LLU,1LLU),_1b5a4a7db_Range32(113824LLU,113827LLU,1LLU),_1b5a4a7db_Range32(118608LLU,118723LLU,1LLU),_1b5a4a7db_Range32(118784LLU,119029LLU,1LLU),_1b5a4a7db_Range32(119040LLU,119078LLU,1LLU),_1b5a4a7db_Range32(119081LLU,119142LLU,1LLU),_1b5a4a7db_Range32(119146LLU,119162LLU,1LLU),_1b5a4a7db_Range32(119171LLU,119172LLU,1LLU),_1b5a4a7db_Range32(119180LLU,119209LLU,1LLU),_1b5a4a7db_Range32(119214LLU,119274LLU,1LLU),_1b5a4a7db_Range32(119488LLU,119507LLU,1LLU),_1b5a4a7db_Range32(119520LLU,119539LLU,1LLU),_1b5a4a7db_Range32(119552LLU,119638LLU,1LLU),_1b5a4a7db_Range32(119648LLU,119672LLU,1LLU),_1b5a4a7db_Range32(119808LLU,119892LLU,1LLU),_1b5a4a7db_Range32(119894LLU,119964LLU,1LLU),_1b5a4a7db_Range32(119966LLU,119967LLU,1LLU),_1b5a4a7db_Range32(119970LLU,119973LLU,3LLU),_1b5a4a7db_Range32(119974LLU,119977LLU,3LLU),_1b5a4a7db_Range32(119978LLU,119980LLU,1LLU),_1b5a4a7db_Range32(119982LLU,119993LLU,1LLU),_1b5a4a7db_Range32(119995LLU,119997LLU,2LLU),_1b5a4a7db_Range32(119998LLU,120003LLU,1LLU),_1b5a4a7db_Range32(120005LLU,120069LLU,1LLU),_1b5a4a7db_Range32(120071LLU,120074LLU,1LLU),_1b5a4a7db_Range32(120077LLU,120084LLU,1LLU),_1b5a4a7db_Range32(120086LLU,120092LLU,1LLU),_1b5a4a7db_Range32(120094LLU,120121LLU,1LLU),_1b5a4a7db_Range32(120123LLU,120126LLU,1LLU),_1b5a4a7db_Range32(120128LLU,120132LLU,1LLU),_1b5a4a7db_Range32(120134LLU,120138LLU,4LLU),_1b5a4a7db_Range32(120139LLU,120144LLU,1LLU),_1b5a4a7db_Range32(120146LLU,120485LLU,1LLU),_1b5a4a7db_Range32(120488LLU,120779LLU,1LLU),_1b5a4a7db_Range32(120782LLU,120831LLU,1LLU),_1b5a4a7db_Range32(126065LLU,126132LLU,1LLU),_1b5a4a7db_Range32(126209LLU,126269LLU,1LLU),_1b5a4a7db_Range32(126976LLU,127019LLU,1LLU),_1b5a4a7db_Range32(127024LLU,127123LLU,1LLU),_1b5a4a7db_Range32(127136LLU,127150LLU,1LLU),_1b5a4a7db_Range32(127153LLU,127167LLU,1LLU),_1b5a4a7db_Range32(127169LLU,127183LLU,1LLU),_1b5a4a7db_Range32(127185LLU,127221LLU,1LLU),_1b5a4a7db_Range32(127232LLU,127405LLU,1LLU),_1b5a4a7db_Range32(127462LLU,127487LLU,1LLU),_1b5a4a7db_Range32(127489LLU,127490LLU,1LLU),_1b5a4a7db_Range32(127504LLU,127547LLU,1LLU),_1b5a4a7db_Range32(127552LLU,127560LLU,1LLU),_1b5a4a7db_Range32(127568LLU,127569LLU,1LLU),_1b5a4a7db_Range32(127584LLU,127589LLU,1LLU),_1b5a4a7db_Range32(127744LLU,128727LLU,1LLU),_1b5a4a7db_Range32(128732LLU,128748LLU,1LLU),_1b5a4a7db_Range32(128752LLU,128764LLU,1LLU),_1b5a4a7db_Range32(128768LLU,128886LLU,1LLU),_1b5a4a7db_Range32(128891LLU,128985LLU,1LLU),_1b5a4a7db_Range32(128992LLU,129003LLU,1LLU),_1b5a4a7db_Range32(129008LLU,129024LLU,16LLU),_1b5a4a7db_Range32(129025LLU,129035LLU,1LLU),_1b5a4a7db_Range32(129040LLU,129095LLU,1LLU),_1b5a4a7db_Range32(129104LLU,129113LLU,1LLU),_1b5a4a7db_Range32(129120LLU,129159LLU,1LLU),_1b5a4a7db_Range32(129168LLU,129197LLU,1LLU),_1b5a4a7db_Range32(129200LLU,129201LLU,1LLU),_1b5a4a7db_Range32(129280LLU,129619LLU,1LLU),_1b5a4a7db_Range32(129632LLU,129645LLU,1LLU),_1b5a4a7db_Range32(129648LLU,129660LLU,1LLU),_1b5a4a7db_Range32(129664LLU,129672LLU,1LLU),_1b5a4a7db_Range32(129680LLU,129725LLU,1LLU),_1b5a4a7db_Range32(129727LLU,129733LLU,1LLU),_1b5a4a7db_Range32(129742LLU,129755LLU,1LLU),_1b5a4a7db_Range32(129760LLU,129768LLU,1LLU),_1b5a4a7db_Range32(129776LLU,129784LLU,1LLU),_1b5a4a7db_Range32(129792LLU,129938LLU,1LLU),_1b5a4a7db_Range32(129940LLU,129994LLU,1LLU),_1b5a4a7db_Range32(130032LLU,130041LLU,1LLU),_1b5a4a7db_Range32(917505LLU,917536LLU,31LLU),_1b5a4a7db_Range32(917537LLU,917631LLU,1LLU)}),6LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__COPTIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(994LLU,1007LLU,1LLU),_1b5a4a7db_Range16(11392LLU,11507LLU,1LLU),_1b5a4a7db_Range16(11513LLU,11519LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CUNEIFORM = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(73728LLU,74649LLU,1LLU),_1b5a4a7db_Range32(74752LLU,74862LLU,1LLU),_1b5a4a7db_Range32(74864LLU,74868LLU,1LLU),_1b5a4a7db_Range32(74880LLU,75075LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CYPRIOT = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(67584LLU,67589LLU,1LLU),_1b5a4a7db_Range32(67592LLU,67594LLU,2LLU),_1b5a4a7db_Range32(67595LLU,67637LLU,1LLU),_1b5a4a7db_Range32(67639LLU,67640LLU,1LLU),_1b5a4a7db_Range32(67644LLU,67647LLU,3LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CYPRO_MINOAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(77712LLU,77810LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__CYRILLIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(1024LLU,1156LLU,1LLU),_1b5a4a7db_Range16(1159LLU,1327LLU,1LLU),_1b5a4a7db_Range16(7296LLU,7304LLU,1LLU),_1b5a4a7db_Range16(7467LLU,7544LLU,77LLU),_1b5a4a7db_Range16(11744LLU,11775LLU,1LLU),_1b5a4a7db_Range16(42560LLU,42655LLU,1LLU),_1b5a4a7db_Range16(65070LLU,65071LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(122928LLU,122989LLU,1LLU),_1b5a4a7db_Range32(123023LLU,123023LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__DESERET = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66560LLU,66639LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__DEVANAGARI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(2304LLU,2384LLU,1LLU),_1b5a4a7db_Range16(2389LLU,2403LLU,1LLU),_1b5a4a7db_Range16(2406LLU,2431LLU,1LLU),_1b5a4a7db_Range16(43232LLU,43263LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(72448LLU,72457LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__DIVES_AKURU = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(71936LLU,71942LLU,1LLU),_1b5a4a7db_Range32(71945LLU,71948LLU,3LLU),_1b5a4a7db_Range32(71949LLU,71955LLU,1LLU),_1b5a4a7db_Range32(71957LLU,71958LLU,1LLU),_1b5a4a7db_Range32(71960LLU,71989LLU,1LLU),_1b5a4a7db_Range32(71991LLU,71992LLU,1LLU),_1b5a4a7db_Range32(71995LLU,72006LLU,1LLU),_1b5a4a7db_Range32(72016LLU,72025LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__DOGRA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(71680LLU,71739LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__DUPLOYAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(113664LLU,113770LLU,1LLU),_1b5a4a7db_Range32(113776LLU,113788LLU,1LLU),_1b5a4a7db_Range32(113792LLU,113800LLU,1LLU),_1b5a4a7db_Range32(113808LLU,113817LLU,1LLU),_1b5a4a7db_Range32(113820LLU,113823LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__EGYPTIAN_HIEROGLYPHS = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(77824LLU,78933LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ELBASAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66816LLU,66855LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ELYMAIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69600LLU,69622LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ETHIOPIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(4608LLU,4680LLU,1LLU),_1b5a4a7db_Range16(4682LLU,4685LLU,1LLU),_1b5a4a7db_Range16(4688LLU,4694LLU,1LLU),_1b5a4a7db_Range16(4696LLU,4698LLU,2LLU),_1b5a4a7db_Range16(4699LLU,4701LLU,1LLU),_1b5a4a7db_Range16(4704LLU,4744LLU,1LLU),_1b5a4a7db_Range16(4746LLU,4749LLU,1LLU),_1b5a4a7db_Range16(4752LLU,4784LLU,1LLU),_1b5a4a7db_Range16(4786LLU,4789LLU,1LLU),_1b5a4a7db_Range16(4792LLU,4798LLU,1LLU),_1b5a4a7db_Range16(4800LLU,4802LLU,2LLU),_1b5a4a7db_Range16(4803LLU,4805LLU,1LLU),_1b5a4a7db_Range16(4808LLU,4822LLU,1LLU),_1b5a4a7db_Range16(4824LLU,4880LLU,1LLU),_1b5a4a7db_Range16(4882LLU,4885LLU,1LLU),_1b5a4a7db_Range16(4888LLU,4954LLU,1LLU),_1b5a4a7db_Range16(4957LLU,4988LLU,1LLU),_1b5a4a7db_Range16(4992LLU,5017LLU,1LLU),_1b5a4a7db_Range16(11648LLU,11670LLU,1LLU),_1b5a4a7db_Range16(11680LLU,11686LLU,1LLU),_1b5a4a7db_Range16(11688LLU,11694LLU,1LLU),_1b5a4a7db_Range16(11696LLU,11702LLU,1LLU),_1b5a4a7db_Range16(11704LLU,11710LLU,1LLU),_1b5a4a7db_Range16(11712LLU,11718LLU,1LLU),_1b5a4a7db_Range16(11720LLU,11726LLU,1LLU),_1b5a4a7db_Range16(11728LLU,11734LLU,1LLU),_1b5a4a7db_Range16(11736LLU,11742LLU,1LLU),_1b5a4a7db_Range16(43777LLU,43782LLU,1LLU),_1b5a4a7db_Range16(43785LLU,43790LLU,1LLU),_1b5a4a7db_Range16(43793LLU,43798LLU,1LLU),_1b5a4a7db_Range16(43808LLU,43814LLU,1LLU),_1b5a4a7db_Range16(43816LLU,43822LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(124896LLU,124902LLU,1LLU),_1b5a4a7db_Range32(124904LLU,124907LLU,1LLU),_1b5a4a7db_Range32(124909LLU,124910LLU,1LLU),_1b5a4a7db_Range32(124912LLU,124926LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__GEORGIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(4256LLU,4293LLU,1LLU),_1b5a4a7db_Range16(4295LLU,4301LLU,6LLU),_1b5a4a7db_Range16(4304LLU,4346LLU,1LLU),_1b5a4a7db_Range16(4348LLU,4351LLU,1LLU),_1b5a4a7db_Range16(7312LLU,7354LLU,1LLU),_1b5a4a7db_Range16(7357LLU,7359LLU,1LLU),_1b5a4a7db_Range16(11520LLU,11557LLU,1LLU),_1b5a4a7db_Range16(11559LLU,11565LLU,6LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__GLAGOLITIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(11264LLU,11359LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(122880LLU,122886LLU,1LLU),_1b5a4a7db_Range32(122888LLU,122904LLU,1LLU),_1b5a4a7db_Range32(122907LLU,122913LLU,1LLU),_1b5a4a7db_Range32(122915LLU,122916LLU,1LLU),_1b5a4a7db_Range32(122918LLU,122922LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__GOTHIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66352LLU,66378LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__GRANTHA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(70400LLU,70403LLU,1LLU),_1b5a4a7db_Range32(70405LLU,70412LLU,1LLU),_1b5a4a7db_Range32(70415LLU,70416LLU,1LLU),_1b5a4a7db_Range32(70419LLU,70440LLU,1LLU),_1b5a4a7db_Range32(70442LLU,70448LLU,1LLU),_1b5a4a7db_Range32(70450LLU,70451LLU,1LLU),_1b5a4a7db_Range32(70453LLU,70457LLU,1LLU),_1b5a4a7db_Range32(70460LLU,70468LLU,1LLU),_1b5a4a7db_Range32(70471LLU,70472LLU,1LLU),_1b5a4a7db_Range32(70475LLU,70477LLU,1LLU),_1b5a4a7db_Range32(70480LLU,70487LLU,7LLU),_1b5a4a7db_Range32(70493LLU,70499LLU,1LLU),_1b5a4a7db_Range32(70502LLU,70508LLU,1LLU),_1b5a4a7db_Range32(70512LLU,70516LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__GREEK = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(880LLU,883LLU,1LLU),_1b5a4a7db_Range16(885LLU,887LLU,1LLU),_1b5a4a7db_Range16(890LLU,893LLU,1LLU),_1b5a4a7db_Range16(895LLU,900LLU,5LLU),_1b5a4a7db_Range16(902LLU,904LLU,2LLU),_1b5a4a7db_Range16(905LLU,906LLU,1LLU),_1b5a4a7db_Range16(908LLU,910LLU,2LLU),_1b5a4a7db_Range16(911LLU,929LLU,1LLU),_1b5a4a7db_Range16(931LLU,993LLU,1LLU),_1b5a4a7db_Range16(1008LLU,1023LLU,1LLU),_1b5a4a7db_Range16(7462LLU,7466LLU,1LLU),_1b5a4a7db_Range16(7517LLU,7521LLU,1LLU),_1b5a4a7db_Range16(7526LLU,7530LLU,1LLU),_1b5a4a7db_Range16(7615LLU,7936LLU,321LLU),_1b5a4a7db_Range16(7937LLU,7957LLU,1LLU),_1b5a4a7db_Range16(7960LLU,7965LLU,1LLU),_1b5a4a7db_Range16(7968LLU,8005LLU,1LLU),_1b5a4a7db_Range16(8008LLU,8013LLU,1LLU),_1b5a4a7db_Range16(8016LLU,8023LLU,1LLU),_1b5a4a7db_Range16(8025LLU,8031LLU,2LLU),_1b5a4a7db_Range16(8032LLU,8061LLU,1LLU),_1b5a4a7db_Range16(8064LLU,8116LLU,1LLU),_1b5a4a7db_Range16(8118LLU,8132LLU,1LLU),_1b5a4a7db_Range16(8134LLU,8147LLU,1LLU),_1b5a4a7db_Range16(8150LLU,8155LLU,1LLU),_1b5a4a7db_Range16(8157LLU,8175LLU,1LLU),_1b5a4a7db_Range16(8178LLU,8180LLU,1LLU),_1b5a4a7db_Range16(8182LLU,8190LLU,1LLU),_1b5a4a7db_Range16(8486LLU,43877LLU,35391LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(65856LLU,65934LLU,1LLU),_1b5a4a7db_Range32(65952LLU,119296LLU,53344LLU),_1b5a4a7db_Range32(119297LLU,119365LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__GUJARATI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(2689LLU,2691LLU,1LLU),_1b5a4a7db_Range16(2693LLU,2701LLU,1LLU),_1b5a4a7db_Range16(2703LLU,2705LLU,1LLU),_1b5a4a7db_Range16(2707LLU,2728LLU,1LLU),_1b5a4a7db_Range16(2730LLU,2736LLU,1LLU),_1b5a4a7db_Range16(2738LLU,2739LLU,1LLU),_1b5a4a7db_Range16(2741LLU,2745LLU,1LLU),_1b5a4a7db_Range16(2748LLU,2757LLU,1LLU),_1b5a4a7db_Range16(2759LLU,2761LLU,1LLU),_1b5a4a7db_Range16(2763LLU,2765LLU,1LLU),_1b5a4a7db_Range16(2768LLU,2784LLU,16LLU),_1b5a4a7db_Range16(2785LLU,2787LLU,1LLU),_1b5a4a7db_Range16(2790LLU,2801LLU,1LLU),_1b5a4a7db_Range16(2809LLU,2815LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__GUNJALA_GONDI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(73056LLU,73061LLU,1LLU),_1b5a4a7db_Range32(73063LLU,73064LLU,1LLU),_1b5a4a7db_Range32(73066LLU,73102LLU,1LLU),_1b5a4a7db_Range32(73104LLU,73105LLU,1LLU),_1b5a4a7db_Range32(73107LLU,73112LLU,1LLU),_1b5a4a7db_Range32(73120LLU,73129LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__GURMUKHI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(2561LLU,2563LLU,1LLU),_1b5a4a7db_Range16(2565LLU,2570LLU,1LLU),_1b5a4a7db_Range16(2575LLU,2576LLU,1LLU),_1b5a4a7db_Range16(2579LLU,2600LLU,1LLU),_1b5a4a7db_Range16(2602LLU,2608LLU,1LLU),_1b5a4a7db_Range16(2610LLU,2611LLU,1LLU),_1b5a4a7db_Range16(2613LLU,2614LLU,1LLU),_1b5a4a7db_Range16(2616LLU,2617LLU,1LLU),_1b5a4a7db_Range16(2620LLU,2622LLU,2LLU),_1b5a4a7db_Range16(2623LLU,2626LLU,1LLU),_1b5a4a7db_Range16(2631LLU,2632LLU,1LLU),_1b5a4a7db_Range16(2635LLU,2637LLU,1LLU),_1b5a4a7db_Range16(2641LLU,2649LLU,8LLU),_1b5a4a7db_Range16(2650LLU,2652LLU,1LLU),_1b5a4a7db_Range16(2654LLU,2662LLU,8LLU),_1b5a4a7db_Range16(2663LLU,2678LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__HAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(11904LLU,11929LLU,1LLU),_1b5a4a7db_Range16(11931LLU,12019LLU,1LLU),_1b5a4a7db_Range16(12032LLU,12245LLU,1LLU),_1b5a4a7db_Range16(12293LLU,12295LLU,2LLU),_1b5a4a7db_Range16(12321LLU,12329LLU,1LLU),_1b5a4a7db_Range16(12344LLU,12347LLU,1LLU),_1b5a4a7db_Range16(13312LLU,19903LLU,1LLU),_1b5a4a7db_Range16(19968LLU,40959LLU,1LLU),_1b5a4a7db_Range16(63744LLU,64109LLU,1LLU),_1b5a4a7db_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(94178LLU,94179LLU,1LLU),_1b5a4a7db_Range32(94192LLU,94193LLU,1LLU),_1b5a4a7db_Range32(131072LLU,173791LLU,1LLU),_1b5a4a7db_Range32(173824LLU,177977LLU,1LLU),_1b5a4a7db_Range32(177984LLU,178205LLU,1LLU),_1b5a4a7db_Range32(178208LLU,183969LLU,1LLU),_1b5a4a7db_Range32(183984LLU,191456LLU,1LLU),_1b5a4a7db_Range32(194560LLU,195101LLU,1LLU),_1b5a4a7db_Range32(196608LLU,201546LLU,1LLU),_1b5a4a7db_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__HANGUL = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(4352LLU,4607LLU,1LLU),_1b5a4a7db_Range16(12334LLU,12335LLU,1LLU),_1b5a4a7db_Range16(12593LLU,12686LLU,1LLU),_1b5a4a7db_Range16(12800LLU,12830LLU,1LLU),_1b5a4a7db_Range16(12896LLU,12926LLU,1LLU),_1b5a4a7db_Range16(43360LLU,43388LLU,1LLU),_1b5a4a7db_Range16(44032LLU,55203LLU,1LLU),_1b5a4a7db_Range16(55216LLU,55238LLU,1LLU),_1b5a4a7db_Range16(55243LLU,55291LLU,1LLU),_1b5a4a7db_Range16(65440LLU,65470LLU,1LLU),_1b5a4a7db_Range16(65474LLU,65479LLU,1LLU),_1b5a4a7db_Range16(65482LLU,65487LLU,1LLU),_1b5a4a7db_Range16(65490LLU,65495LLU,1LLU),_1b5a4a7db_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__HANIFI_ROHINGYA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(68864LLU,68903LLU,1LLU),_1b5a4a7db_Range32(68912LLU,68921LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__HANUNOO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(5920LLU,5940LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__HATRAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(67808LLU,67826LLU,1LLU),_1b5a4a7db_Range32(67828LLU,67829LLU,1LLU),_1b5a4a7db_Range32(67835LLU,67839LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__HEBREW = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(1425LLU,1479LLU,1LLU),_1b5a4a7db_Range16(1488LLU,1514LLU,1LLU),_1b5a4a7db_Range16(1519LLU,1524LLU,1LLU),_1b5a4a7db_Range16(64285LLU,64310LLU,1LLU),_1b5a4a7db_Range16(64312LLU,64316LLU,1LLU),_1b5a4a7db_Range16(64318LLU,64320LLU,2LLU),_1b5a4a7db_Range16(64321LLU,64323LLU,2LLU),_1b5a4a7db_Range16(64324LLU,64326LLU,2LLU),_1b5a4a7db_Range16(64327LLU,64335LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__HIRAGANA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(12353LLU,12438LLU,1LLU),_1b5a4a7db_Range16(12445LLU,12447LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(110593LLU,110879LLU,1LLU),_1b5a4a7db_Range32(110898LLU,110928LLU,30LLU),_1b5a4a7db_Range32(110929LLU,110930LLU,1LLU),_1b5a4a7db_Range32(127488LLU,127488LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__IMPERIAL_ARAMAIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(67648LLU,67669LLU,1LLU),_1b5a4a7db_Range32(67671LLU,67679LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__INHERITED = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(768LLU,879LLU,1LLU),_1b5a4a7db_Range16(1157LLU,1158LLU,1LLU),_1b5a4a7db_Range16(1611LLU,1621LLU,1LLU),_1b5a4a7db_Range16(1648LLU,2385LLU,737LLU),_1b5a4a7db_Range16(2386LLU,2388LLU,1LLU),_1b5a4a7db_Range16(6832LLU,6862LLU,1LLU),_1b5a4a7db_Range16(7376LLU,7378LLU,1LLU),_1b5a4a7db_Range16(7380LLU,7392LLU,1LLU),_1b5a4a7db_Range16(7394LLU,7400LLU,1LLU),_1b5a4a7db_Range16(7405LLU,7412LLU,7LLU),_1b5a4a7db_Range16(7416LLU,7417LLU,1LLU),_1b5a4a7db_Range16(7616LLU,7679LLU,1LLU),_1b5a4a7db_Range16(8204LLU,8205LLU,1LLU),_1b5a4a7db_Range16(8400LLU,8432LLU,1LLU),_1b5a4a7db_Range16(12330LLU,12333LLU,1LLU),_1b5a4a7db_Range16(12441LLU,12442LLU,1LLU),_1b5a4a7db_Range16(65024LLU,65039LLU,1LLU),_1b5a4a7db_Range16(65056LLU,65069LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66045LLU,66272LLU,227LLU),_1b5a4a7db_Range32(70459LLU,118528LLU,48069LLU),_1b5a4a7db_Range32(118529LLU,118573LLU,1LLU),_1b5a4a7db_Range32(118576LLU,118598LLU,1LLU),_1b5a4a7db_Range32(119143LLU,119145LLU,1LLU),_1b5a4a7db_Range32(119163LLU,119170LLU,1LLU),_1b5a4a7db_Range32(119173LLU,119179LLU,1LLU),_1b5a4a7db_Range32(119210LLU,119213LLU,1LLU),_1b5a4a7db_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__INSCRIPTIONAL_PAHLAVI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(68448LLU,68466LLU,1LLU),_1b5a4a7db_Range32(68472LLU,68479LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__INSCRIPTIONAL_PARTHIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(68416LLU,68437LLU,1LLU),_1b5a4a7db_Range32(68440LLU,68447LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__JAVANESE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(43392LLU,43469LLU,1LLU),_1b5a4a7db_Range16(43472LLU,43481LLU,1LLU),_1b5a4a7db_Range16(43486LLU,43487LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__KAITHI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69760LLU,69826LLU,1LLU),_1b5a4a7db_Range32(69837LLU,69837LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__KANNADA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(3200LLU,3212LLU,1LLU),_1b5a4a7db_Range16(3214LLU,3216LLU,1LLU),_1b5a4a7db_Range16(3218LLU,3240LLU,1LLU),_1b5a4a7db_Range16(3242LLU,3251LLU,1LLU),_1b5a4a7db_Range16(3253LLU,3257LLU,1LLU),_1b5a4a7db_Range16(3260LLU,3268LLU,1LLU),_1b5a4a7db_Range16(3270LLU,3272LLU,1LLU),_1b5a4a7db_Range16(3274LLU,3277LLU,1LLU),_1b5a4a7db_Range16(3285LLU,3286LLU,1LLU),_1b5a4a7db_Range16(3293LLU,3294LLU,1LLU),_1b5a4a7db_Range16(3296LLU,3299LLU,1LLU),_1b5a4a7db_Range16(3302LLU,3311LLU,1LLU),_1b5a4a7db_Range16(3313LLU,3315LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__KATAKANA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(12449LLU,12538LLU,1LLU),_1b5a4a7db_Range16(12541LLU,12543LLU,1LLU),_1b5a4a7db_Range16(12784LLU,12799LLU,1LLU),_1b5a4a7db_Range16(13008LLU,13054LLU,1LLU),_1b5a4a7db_Range16(13056LLU,13143LLU,1LLU),_1b5a4a7db_Range16(65382LLU,65391LLU,1LLU),_1b5a4a7db_Range16(65393LLU,65437LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(110576LLU,110579LLU,1LLU),_1b5a4a7db_Range32(110581LLU,110587LLU,1LLU),_1b5a4a7db_Range32(110589LLU,110590LLU,1LLU),_1b5a4a7db_Range32(110592LLU,110880LLU,288LLU),_1b5a4a7db_Range32(110881LLU,110882LLU,1LLU),_1b5a4a7db_Range32(110933LLU,110948LLU,15LLU),_1b5a4a7db_Range32(110949LLU,110951LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__KAWI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(73472LLU,73488LLU,1LLU),_1b5a4a7db_Range32(73490LLU,73530LLU,1LLU),_1b5a4a7db_Range32(73534LLU,73561LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__KAYAH_LI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(43264LLU,43309LLU,1LLU),_1b5a4a7db_Range16(43311LLU,43311LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__KHAROSHTHI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(68096LLU,68099LLU,1LLU),_1b5a4a7db_Range32(68101LLU,68102LLU,1LLU),_1b5a4a7db_Range32(68108LLU,68115LLU,1LLU),_1b5a4a7db_Range32(68117LLU,68119LLU,1LLU),_1b5a4a7db_Range32(68121LLU,68149LLU,1LLU),_1b5a4a7db_Range32(68152LLU,68154LLU,1LLU),_1b5a4a7db_Range32(68159LLU,68168LLU,1LLU),_1b5a4a7db_Range32(68176LLU,68184LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__KHITAN_SMALL_SCRIPT = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(94180LLU,101120LLU,6940LLU),_1b5a4a7db_Range32(101121LLU,101589LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__KHMER = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(6016LLU,6109LLU,1LLU),_1b5a4a7db_Range16(6112LLU,6121LLU,1LLU),_1b5a4a7db_Range16(6128LLU,6137LLU,1LLU),_1b5a4a7db_Range16(6624LLU,6655LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__KHOJKI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(70144LLU,70161LLU,1LLU),_1b5a4a7db_Range32(70163LLU,70209LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__KHUDAWADI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(70320LLU,70378LLU,1LLU),_1b5a4a7db_Range32(70384LLU,70393LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LAO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(3713LLU,3714LLU,1LLU),_1b5a4a7db_Range16(3716LLU,3718LLU,2LLU),_1b5a4a7db_Range16(3719LLU,3722LLU,1LLU),_1b5a4a7db_Range16(3724LLU,3747LLU,1LLU),_1b5a4a7db_Range16(3749LLU,3751LLU,2LLU),_1b5a4a7db_Range16(3752LLU,3773LLU,1LLU),_1b5a4a7db_Range16(3776LLU,3780LLU,1LLU),_1b5a4a7db_Range16(3782LLU,3784LLU,2LLU),_1b5a4a7db_Range16(3785LLU,3790LLU,1LLU),_1b5a4a7db_Range16(3792LLU,3801LLU,1LLU),_1b5a4a7db_Range16(3804LLU,3807LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LATIN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(65LLU,90LLU,1LLU),_1b5a4a7db_Range16(97LLU,122LLU,1LLU),_1b5a4a7db_Range16(170LLU,186LLU,16LLU),_1b5a4a7db_Range16(192LLU,214LLU,1LLU),_1b5a4a7db_Range16(216LLU,246LLU,1LLU),_1b5a4a7db_Range16(248LLU,696LLU,1LLU),_1b5a4a7db_Range16(736LLU,740LLU,1LLU),_1b5a4a7db_Range16(7424LLU,7461LLU,1LLU),_1b5a4a7db_Range16(7468LLU,7516LLU,1LLU),_1b5a4a7db_Range16(7522LLU,7525LLU,1LLU),_1b5a4a7db_Range16(7531LLU,7543LLU,1LLU),_1b5a4a7db_Range16(7545LLU,7614LLU,1LLU),_1b5a4a7db_Range16(7680LLU,7935LLU,1LLU),_1b5a4a7db_Range16(8305LLU,8319LLU,14LLU),_1b5a4a7db_Range16(8336LLU,8348LLU,1LLU),_1b5a4a7db_Range16(8490LLU,8491LLU,1LLU),_1b5a4a7db_Range16(8498LLU,8526LLU,28LLU),_1b5a4a7db_Range16(8544LLU,8584LLU,1LLU),_1b5a4a7db_Range16(11360LLU,11391LLU,1LLU),_1b5a4a7db_Range16(42786LLU,42887LLU,1LLU),_1b5a4a7db_Range16(42891LLU,42954LLU,1LLU),_1b5a4a7db_Range16(42960LLU,42961LLU,1LLU),_1b5a4a7db_Range16(42963LLU,42965LLU,2LLU),_1b5a4a7db_Range16(42966LLU,42969LLU,1LLU),_1b5a4a7db_Range16(42994LLU,43007LLU,1LLU),_1b5a4a7db_Range16(43824LLU,43866LLU,1LLU),_1b5a4a7db_Range16(43868LLU,43876LLU,1LLU),_1b5a4a7db_Range16(43878LLU,43881LLU,1LLU),_1b5a4a7db_Range16(64256LLU,64262LLU,1LLU),_1b5a4a7db_Range16(65313LLU,65338LLU,1LLU),_1b5a4a7db_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(67456LLU,67461LLU,1LLU),_1b5a4a7db_Range32(67463LLU,67504LLU,1LLU),_1b5a4a7db_Range32(67506LLU,67514LLU,1LLU),_1b5a4a7db_Range32(122624LLU,122654LLU,1LLU),_1b5a4a7db_Range32(122661LLU,122666LLU,1LLU)}),5LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LEPCHA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(7168LLU,7223LLU,1LLU),_1b5a4a7db_Range16(7227LLU,7241LLU,1LLU),_1b5a4a7db_Range16(7245LLU,7247LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LIMBU = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(6400LLU,6430LLU,1LLU),_1b5a4a7db_Range16(6432LLU,6443LLU,1LLU),_1b5a4a7db_Range16(6448LLU,6459LLU,1LLU),_1b5a4a7db_Range16(6464LLU,6468LLU,4LLU),_1b5a4a7db_Range16(6469LLU,6479LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LINEAR_A = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(67072LLU,67382LLU,1LLU),_1b5a4a7db_Range32(67392LLU,67413LLU,1LLU),_1b5a4a7db_Range32(67424LLU,67431LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LINEAR_B = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(65536LLU,65547LLU,1LLU),_1b5a4a7db_Range32(65549LLU,65574LLU,1LLU),_1b5a4a7db_Range32(65576LLU,65594LLU,1LLU),_1b5a4a7db_Range32(65596LLU,65597LLU,1LLU),_1b5a4a7db_Range32(65599LLU,65613LLU,1LLU),_1b5a4a7db_Range32(65616LLU,65629LLU,1LLU),_1b5a4a7db_Range32(65664LLU,65786LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LISU = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(42192LLU,42239LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(73648LLU,73648LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LYCIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66176LLU,66204LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LYDIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(67872LLU,67897LLU,1LLU),_1b5a4a7db_Range32(67903LLU,67903LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MAHAJANI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69968LLU,70006LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MAKASAR = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(73440LLU,73464LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MALAYALAM = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(3328LLU,3340LLU,1LLU),_1b5a4a7db_Range16(3342LLU,3344LLU,1LLU),_1b5a4a7db_Range16(3346LLU,3396LLU,1LLU),_1b5a4a7db_Range16(3398LLU,3400LLU,1LLU),_1b5a4a7db_Range16(3402LLU,3407LLU,1LLU),_1b5a4a7db_Range16(3412LLU,3427LLU,1LLU),_1b5a4a7db_Range16(3430LLU,3455LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MANDAIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(2112LLU,2139LLU,1LLU),_1b5a4a7db_Range16(2142LLU,2142LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MANICHAEAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(68288LLU,68326LLU,1LLU),_1b5a4a7db_Range32(68331LLU,68342LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MARCHEN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(72816LLU,72847LLU,1LLU),_1b5a4a7db_Range32(72850LLU,72871LLU,1LLU),_1b5a4a7db_Range32(72873LLU,72886LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MASARAM_GONDI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(72960LLU,72966LLU,1LLU),_1b5a4a7db_Range32(72968LLU,72969LLU,1LLU),_1b5a4a7db_Range32(72971LLU,73014LLU,1LLU),_1b5a4a7db_Range32(73018LLU,73020LLU,2LLU),_1b5a4a7db_Range32(73021LLU,73023LLU,2LLU),_1b5a4a7db_Range32(73024LLU,73031LLU,1LLU),_1b5a4a7db_Range32(73040LLU,73049LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MEDEFAIDRIN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(93760LLU,93850LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MEETEI_MAYEK = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(43744LLU,43766LLU,1LLU),_1b5a4a7db_Range16(43968LLU,44013LLU,1LLU),_1b5a4a7db_Range16(44016LLU,44025LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MENDE_KIKAKUI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(124928LLU,125124LLU,1LLU),_1b5a4a7db_Range32(125127LLU,125142LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MEROITIC_CURSIVE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(68000LLU,68023LLU,1LLU),_1b5a4a7db_Range32(68028LLU,68047LLU,1LLU),_1b5a4a7db_Range32(68050LLU,68095LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MEROITIC_HIEROGLYPHS = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(67968LLU,67999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MIAO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(93952LLU,94026LLU,1LLU),_1b5a4a7db_Range32(94031LLU,94087LLU,1LLU),_1b5a4a7db_Range32(94095LLU,94111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MODI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(71168LLU,71236LLU,1LLU),_1b5a4a7db_Range32(71248LLU,71257LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MONGOLIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(6144LLU,6145LLU,1LLU),_1b5a4a7db_Range16(6148LLU,6150LLU,2LLU),_1b5a4a7db_Range16(6151LLU,6169LLU,1LLU),_1b5a4a7db_Range16(6176LLU,6264LLU,1LLU),_1b5a4a7db_Range16(6272LLU,6314LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(71264LLU,71276LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MRO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(92736LLU,92766LLU,1LLU),_1b5a4a7db_Range32(92768LLU,92777LLU,1LLU),_1b5a4a7db_Range32(92782LLU,92783LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MULTANI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(70272LLU,70278LLU,1LLU),_1b5a4a7db_Range32(70280LLU,70282LLU,2LLU),_1b5a4a7db_Range32(70283LLU,70285LLU,1LLU),_1b5a4a7db_Range32(70287LLU,70301LLU,1LLU),_1b5a4a7db_Range32(70303LLU,70313LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__MYANMAR = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(4096LLU,4255LLU,1LLU),_1b5a4a7db_Range16(43488LLU,43518LLU,1LLU),_1b5a4a7db_Range16(43616LLU,43647LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__NABATAEAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(67712LLU,67742LLU,1LLU),_1b5a4a7db_Range32(67751LLU,67759LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__NAG_MUNDARI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(124112LLU,124153LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__NANDINAGARI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(72096LLU,72103LLU,1LLU),_1b5a4a7db_Range32(72106LLU,72151LLU,1LLU),_1b5a4a7db_Range32(72154LLU,72164LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__NEW_TAI_LUE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(6528LLU,6571LLU,1LLU),_1b5a4a7db_Range16(6576LLU,6601LLU,1LLU),_1b5a4a7db_Range16(6608LLU,6618LLU,1LLU),_1b5a4a7db_Range16(6622LLU,6623LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__NEWA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(70656LLU,70747LLU,1LLU),_1b5a4a7db_Range32(70749LLU,70753LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__NKO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(1984LLU,2042LLU,1LLU),_1b5a4a7db_Range16(2045LLU,2047LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__NUSHU = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(94177LLU,110960LLU,16783LLU),_1b5a4a7db_Range32(110961LLU,111355LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__NYIAKENG_PUACHUE_HMONG = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(123136LLU,123180LLU,1LLU),_1b5a4a7db_Range32(123184LLU,123197LLU,1LLU),_1b5a4a7db_Range32(123200LLU,123209LLU,1LLU),_1b5a4a7db_Range32(123214LLU,123215LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OGHAM = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(5760LLU,5788LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OL_CHIKI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(7248LLU,7295LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OLD_HUNGARIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(68736LLU,68786LLU,1LLU),_1b5a4a7db_Range32(68800LLU,68850LLU,1LLU),_1b5a4a7db_Range32(68858LLU,68863LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OLD_ITALIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66304LLU,66339LLU,1LLU),_1b5a4a7db_Range32(66349LLU,66351LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OLD_NORTH_ARABIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(68224LLU,68255LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OLD_PERMIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66384LLU,66426LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OLD_PERSIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66464LLU,66499LLU,1LLU),_1b5a4a7db_Range32(66504LLU,66517LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OLD_SOGDIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69376LLU,69415LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OLD_SOUTH_ARABIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(68192LLU,68223LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OLD_TURKIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(68608LLU,68680LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OLD_UYGHUR = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69488LLU,69513LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ORIYA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(2817LLU,2819LLU,1LLU),_1b5a4a7db_Range16(2821LLU,2828LLU,1LLU),_1b5a4a7db_Range16(2831LLU,2832LLU,1LLU),_1b5a4a7db_Range16(2835LLU,2856LLU,1LLU),_1b5a4a7db_Range16(2858LLU,2864LLU,1LLU),_1b5a4a7db_Range16(2866LLU,2867LLU,1LLU),_1b5a4a7db_Range16(2869LLU,2873LLU,1LLU),_1b5a4a7db_Range16(2876LLU,2884LLU,1LLU),_1b5a4a7db_Range16(2887LLU,2888LLU,1LLU),_1b5a4a7db_Range16(2891LLU,2893LLU,1LLU),_1b5a4a7db_Range16(2901LLU,2903LLU,1LLU),_1b5a4a7db_Range16(2908LLU,2909LLU,1LLU),_1b5a4a7db_Range16(2911LLU,2915LLU,1LLU),_1b5a4a7db_Range16(2918LLU,2935LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OSAGE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66736LLU,66771LLU,1LLU),_1b5a4a7db_Range32(66776LLU,66811LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OSMANYA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66688LLU,66717LLU,1LLU),_1b5a4a7db_Range32(66720LLU,66729LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PAHAWH_HMONG = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(92928LLU,92997LLU,1LLU),_1b5a4a7db_Range32(93008LLU,93017LLU,1LLU),_1b5a4a7db_Range32(93019LLU,93025LLU,1LLU),_1b5a4a7db_Range32(93027LLU,93047LLU,1LLU),_1b5a4a7db_Range32(93053LLU,93071LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PALMYRENE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(67680LLU,67711LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PAU_CIN_HAU = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(72384LLU,72440LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PHAGS_PA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(43072LLU,43127LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PHOENICIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(67840LLU,67867LLU,1LLU),_1b5a4a7db_Range32(67871LLU,67871LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PSALTER_PAHLAVI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(68480LLU,68497LLU,1LLU),_1b5a4a7db_Range32(68505LLU,68508LLU,1LLU),_1b5a4a7db_Range32(68521LLU,68527LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__REJANG = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(43312LLU,43347LLU,1LLU),_1b5a4a7db_Range16(43359LLU,43359LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__RUNIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(5792LLU,5866LLU,1LLU),_1b5a4a7db_Range16(5870LLU,5880LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SAMARITAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(2048LLU,2093LLU,1LLU),_1b5a4a7db_Range16(2096LLU,2110LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SAURASHTRA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(43136LLU,43205LLU,1LLU),_1b5a4a7db_Range16(43214LLU,43225LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SHARADA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(70016LLU,70111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SHAVIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66640LLU,66687LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SIDDHAM = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(71040LLU,71093LLU,1LLU),_1b5a4a7db_Range32(71096LLU,71133LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SIGN_WRITING = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(120832LLU,121483LLU,1LLU),_1b5a4a7db_Range32(121499LLU,121503LLU,1LLU),_1b5a4a7db_Range32(121505LLU,121519LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SINHALA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(3457LLU,3459LLU,1LLU),_1b5a4a7db_Range16(3461LLU,3478LLU,1LLU),_1b5a4a7db_Range16(3482LLU,3505LLU,1LLU),_1b5a4a7db_Range16(3507LLU,3515LLU,1LLU),_1b5a4a7db_Range16(3517LLU,3520LLU,3LLU),_1b5a4a7db_Range16(3521LLU,3526LLU,1LLU),_1b5a4a7db_Range16(3530LLU,3535LLU,5LLU),_1b5a4a7db_Range16(3536LLU,3540LLU,1LLU),_1b5a4a7db_Range16(3542LLU,3544LLU,2LLU),_1b5a4a7db_Range16(3545LLU,3551LLU,1LLU),_1b5a4a7db_Range16(3558LLU,3567LLU,1LLU),_1b5a4a7db_Range16(3570LLU,3572LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(70113LLU,70132LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SOGDIAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69424LLU,69465LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SORA_SOMPENG = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69840LLU,69864LLU,1LLU),_1b5a4a7db_Range32(69872LLU,69881LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SOYOMBO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(72272LLU,72354LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SUNDANESE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(7040LLU,7103LLU,1LLU),_1b5a4a7db_Range16(7360LLU,7367LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SYLOTI_NAGRI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(43008LLU,43052LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SYRIAC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(1792LLU,1805LLU,1LLU),_1b5a4a7db_Range16(1807LLU,1866LLU,1LLU),_1b5a4a7db_Range16(1869LLU,1871LLU,1LLU),_1b5a4a7db_Range16(2144LLU,2154LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TAGALOG = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(5888LLU,5909LLU,1LLU),_1b5a4a7db_Range16(5919LLU,5919LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TAGBANWA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(5984LLU,5996LLU,1LLU),_1b5a4a7db_Range16(5998LLU,6000LLU,1LLU),_1b5a4a7db_Range16(6002LLU,6003LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TAI_LE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(6480LLU,6509LLU,1LLU),_1b5a4a7db_Range16(6512LLU,6516LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TAI_THAM = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(6688LLU,6750LLU,1LLU),_1b5a4a7db_Range16(6752LLU,6780LLU,1LLU),_1b5a4a7db_Range16(6783LLU,6793LLU,1LLU),_1b5a4a7db_Range16(6800LLU,6809LLU,1LLU),_1b5a4a7db_Range16(6816LLU,6829LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TAI_VIET = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(43648LLU,43714LLU,1LLU),_1b5a4a7db_Range16(43739LLU,43743LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TAKRI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(71296LLU,71353LLU,1LLU),_1b5a4a7db_Range32(71360LLU,71369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TAMIL = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(2946LLU,2947LLU,1LLU),_1b5a4a7db_Range16(2949LLU,2954LLU,1LLU),_1b5a4a7db_Range16(2958LLU,2960LLU,1LLU),_1b5a4a7db_Range16(2962LLU,2965LLU,1LLU),_1b5a4a7db_Range16(2969LLU,2970LLU,1LLU),_1b5a4a7db_Range16(2972LLU,2974LLU,2LLU),_1b5a4a7db_Range16(2975LLU,2979LLU,4LLU),_1b5a4a7db_Range16(2980LLU,2984LLU,4LLU),_1b5a4a7db_Range16(2985LLU,2986LLU,1LLU),_1b5a4a7db_Range16(2990LLU,3001LLU,1LLU),_1b5a4a7db_Range16(3006LLU,3010LLU,1LLU),_1b5a4a7db_Range16(3014LLU,3016LLU,1LLU),_1b5a4a7db_Range16(3018LLU,3021LLU,1LLU),_1b5a4a7db_Range16(3024LLU,3031LLU,7LLU),_1b5a4a7db_Range16(3046LLU,3066LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(73664LLU,73713LLU,1LLU),_1b5a4a7db_Range32(73727LLU,73727LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TANGSA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(92784LLU,92862LLU,1LLU),_1b5a4a7db_Range32(92864LLU,92873LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TANGUT = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(94176LLU,94208LLU,32LLU),_1b5a4a7db_Range32(94209LLU,100343LLU,1LLU),_1b5a4a7db_Range32(100352LLU,101119LLU,1LLU),_1b5a4a7db_Range32(101632LLU,101640LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TELUGU = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(3072LLU,3084LLU,1LLU),_1b5a4a7db_Range16(3086LLU,3088LLU,1LLU),_1b5a4a7db_Range16(3090LLU,3112LLU,1LLU),_1b5a4a7db_Range16(3114LLU,3129LLU,1LLU),_1b5a4a7db_Range16(3132LLU,3140LLU,1LLU),_1b5a4a7db_Range16(3142LLU,3144LLU,1LLU),_1b5a4a7db_Range16(3146LLU,3149LLU,1LLU),_1b5a4a7db_Range16(3157LLU,3158LLU,1LLU),_1b5a4a7db_Range16(3160LLU,3162LLU,1LLU),_1b5a4a7db_Range16(3165LLU,3168LLU,3LLU),_1b5a4a7db_Range16(3169LLU,3171LLU,1LLU),_1b5a4a7db_Range16(3174LLU,3183LLU,1LLU),_1b5a4a7db_Range16(3191LLU,3199LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__THAANA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(1920LLU,1969LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__THAI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(3585LLU,3642LLU,1LLU),_1b5a4a7db_Range16(3648LLU,3675LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TIBETAN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(3840LLU,3911LLU,1LLU),_1b5a4a7db_Range16(3913LLU,3948LLU,1LLU),_1b5a4a7db_Range16(3953LLU,3991LLU,1LLU),_1b5a4a7db_Range16(3993LLU,4028LLU,1LLU),_1b5a4a7db_Range16(4030LLU,4044LLU,1LLU),_1b5a4a7db_Range16(4046LLU,4052LLU,1LLU),_1b5a4a7db_Range16(4057LLU,4058LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TIFINAGH = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(11568LLU,11623LLU,1LLU),_1b5a4a7db_Range16(11631LLU,11632LLU,1LLU),_1b5a4a7db_Range16(11647LLU,11647LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TIRHUTA = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(70784LLU,70855LLU,1LLU),_1b5a4a7db_Range32(70864LLU,70873LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TOTO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(123536LLU,123566LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__UGARITIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66432LLU,66461LLU,1LLU),_1b5a4a7db_Range32(66463LLU,66463LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__VAI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(42240LLU,42539LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__VITHKUQI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66928LLU,66938LLU,1LLU),_1b5a4a7db_Range32(66940LLU,66954LLU,1LLU),_1b5a4a7db_Range32(66956LLU,66962LLU,1LLU),_1b5a4a7db_Range32(66964LLU,66965LLU,1LLU),_1b5a4a7db_Range32(66967LLU,66977LLU,1LLU),_1b5a4a7db_Range32(66979LLU,66993LLU,1LLU),_1b5a4a7db_Range32(66995LLU,67001LLU,1LLU),_1b5a4a7db_Range32(67003LLU,67004LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__WANCHO = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(123584LLU,123641LLU,1LLU),_1b5a4a7db_Range32(123647LLU,123647LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__WARANG_CITI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(71840LLU,71922LLU,1LLU),_1b5a4a7db_Range32(71935LLU,71935LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__YEZIDI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69248LLU,69289LLU,1LLU),_1b5a4a7db_Range32(69291LLU,69293LLU,1LLU),_1b5a4a7db_Range32(69296LLU,69297LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__YI = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(40960LLU,42124LLU,1LLU),_1b5a4a7db_Range16(42128LLU,42182LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ZANABAZAR_SQUARE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(72192LLU,72263LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__ASCII_HEX_DIGIT = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(48LLU,57LLU,1LLU),_1b5a4a7db_Range16(65LLU,70LLU,1LLU),_1b5a4a7db_Range16(97LLU,102LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),3LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__BIDI_CONTROL = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(1564LLU,8206LLU,6642LLU),_1b5a4a7db_Range16(8207LLU,8234LLU,27LLU),_1b5a4a7db_Range16(8235LLU,8238LLU,1LLU),_1b5a4a7db_Range16(8294LLU,8297LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__DASH = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(45LLU,1418LLU,1373LLU),_1b5a4a7db_Range16(1470LLU,5120LLU,3650LLU),_1b5a4a7db_Range16(6150LLU,8208LLU,2058LLU),_1b5a4a7db_Range16(8209LLU,8213LLU,1LLU),_1b5a4a7db_Range16(8275LLU,8315LLU,40LLU),_1b5a4a7db_Range16(8331LLU,8722LLU,391LLU),_1b5a4a7db_Range16(11799LLU,11802LLU,3LLU),_1b5a4a7db_Range16(11834LLU,11835LLU,1LLU),_1b5a4a7db_Range16(11840LLU,11869LLU,29LLU),_1b5a4a7db_Range16(12316LLU,12336LLU,20LLU),_1b5a4a7db_Range16(12448LLU,65073LLU,52625LLU),_1b5a4a7db_Range16(65074LLU,65112LLU,38LLU),_1b5a4a7db_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__DEPRECATED = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(329LLU,1651LLU,1322LLU),_1b5a4a7db_Range16(3959LLU,3961LLU,2LLU),_1b5a4a7db_Range16(6051LLU,6052LLU,1LLU),_1b5a4a7db_Range16(8298LLU,8303LLU,1LLU),_1b5a4a7db_Range16(9001LLU,9002LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(917505LLU,917505LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__DIACRITIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(94LLU,96LLU,2LLU),_1b5a4a7db_Range16(168LLU,175LLU,7LLU),_1b5a4a7db_Range16(180LLU,183LLU,3LLU),_1b5a4a7db_Range16(184LLU,688LLU,504LLU),_1b5a4a7db_Range16(689LLU,846LLU,1LLU),_1b5a4a7db_Range16(848LLU,855LLU,1LLU),_1b5a4a7db_Range16(861LLU,866LLU,1LLU),_1b5a4a7db_Range16(884LLU,885LLU,1LLU),_1b5a4a7db_Range16(890LLU,900LLU,10LLU),_1b5a4a7db_Range16(901LLU,1155LLU,254LLU),_1b5a4a7db_Range16(1156LLU,1159LLU,1LLU),_1b5a4a7db_Range16(1369LLU,1425LLU,56LLU),_1b5a4a7db_Range16(1426LLU,1441LLU,1LLU),_1b5a4a7db_Range16(1443LLU,1469LLU,1LLU),_1b5a4a7db_Range16(1471LLU,1473LLU,2LLU),_1b5a4a7db_Range16(1474LLU,1476LLU,2LLU),_1b5a4a7db_Range16(1611LLU,1618LLU,1LLU),_1b5a4a7db_Range16(1623LLU,1624LLU,1LLU),_1b5a4a7db_Range16(1759LLU,1760LLU,1LLU),_1b5a4a7db_Range16(1765LLU,1766LLU,1LLU),_1b5a4a7db_Range16(1770LLU,1772LLU,1LLU),_1b5a4a7db_Range16(1840LLU,1866LLU,1LLU),_1b5a4a7db_Range16(1958LLU,1968LLU,1LLU),_1b5a4a7db_Range16(2027LLU,2037LLU,1LLU),_1b5a4a7db_Range16(2072LLU,2073LLU,1LLU),_1b5a4a7db_Range16(2200LLU,2207LLU,1LLU),_1b5a4a7db_Range16(2249LLU,2258LLU,1LLU),_1b5a4a7db_Range16(2275LLU,2302LLU,1LLU),_1b5a4a7db_Range16(2364LLU,2381LLU,17LLU),_1b5a4a7db_Range16(2385LLU,2388LLU,1LLU),_1b5a4a7db_Range16(2417LLU,2492LLU,75LLU),_1b5a4a7db_Range16(2509LLU,2620LLU,111LLU),_1b5a4a7db_Range16(2637LLU,2748LLU,111LLU),_1b5a4a7db_Range16(2765LLU,2813LLU,48LLU),_1b5a4a7db_Range16(2814LLU,2815LLU,1LLU),_1b5a4a7db_Range16(2876LLU,2893LLU,17LLU),_1b5a4a7db_Range16(2901LLU,3021LLU,120LLU),_1b5a4a7db_Range16(3132LLU,3149LLU,17LLU),_1b5a4a7db_Range16(3260LLU,3277LLU,17LLU),_1b5a4a7db_Range16(3387LLU,3388LLU,1LLU),_1b5a4a7db_Range16(3405LLU,3655LLU,125LLU),_1b5a4a7db_Range16(3656LLU,3660LLU,1LLU),_1b5a4a7db_Range16(3662LLU,3770LLU,108LLU),_1b5a4a7db_Range16(3784LLU,3788LLU,1LLU),_1b5a4a7db_Range16(3864LLU,3865LLU,1LLU),_1b5a4a7db_Range16(3893LLU,3897LLU,2LLU),_1b5a4a7db_Range16(3902LLU,3903LLU,1LLU),_1b5a4a7db_Range16(3970LLU,3972LLU,1LLU),_1b5a4a7db_Range16(3974LLU,3975LLU,1LLU),_1b5a4a7db_Range16(4038LLU,4151LLU,113LLU),_1b5a4a7db_Range16(4153LLU,4154LLU,1LLU),_1b5a4a7db_Range16(4195LLU,4196LLU,1LLU),_1b5a4a7db_Range16(4201LLU,4205LLU,1LLU),_1b5a4a7db_Range16(4231LLU,4237LLU,1LLU),_1b5a4a7db_Range16(4239LLU,4250LLU,11LLU),_1b5a4a7db_Range16(4251LLU,4957LLU,706LLU),_1b5a4a7db_Range16(4958LLU,4959LLU,1LLU),_1b5a4a7db_Range16(5908LLU,5909LLU,1LLU),_1b5a4a7db_Range16(6089LLU,6099LLU,1LLU),_1b5a4a7db_Range16(6109LLU,6457LLU,348LLU),_1b5a4a7db_Range16(6458LLU,6459LLU,1LLU),_1b5a4a7db_Range16(6773LLU,6780LLU,1LLU),_1b5a4a7db_Range16(6783LLU,6832LLU,49LLU),_1b5a4a7db_Range16(6833LLU,6846LLU,1LLU),_1b5a4a7db_Range16(6849LLU,6859LLU,1LLU),_1b5a4a7db_Range16(6964LLU,6980LLU,16LLU),_1b5a4a7db_Range16(7019LLU,7027LLU,1LLU),_1b5a4a7db_Range16(7082LLU,7083LLU,1LLU),_1b5a4a7db_Range16(7222LLU,7223LLU,1LLU),_1b5a4a7db_Range16(7288LLU,7293LLU,1LLU),_1b5a4a7db_Range16(7376LLU,7400LLU,1LLU),_1b5a4a7db_Range16(7405LLU,7412LLU,7LLU),_1b5a4a7db_Range16(7415LLU,7417LLU,1LLU),_1b5a4a7db_Range16(7468LLU,7530LLU,1LLU),_1b5a4a7db_Range16(7620LLU,7631LLU,1LLU),_1b5a4a7db_Range16(7669LLU,7679LLU,1LLU),_1b5a4a7db_Range16(8125LLU,8127LLU,2LLU),_1b5a4a7db_Range16(8128LLU,8129LLU,1LLU),_1b5a4a7db_Range16(8141LLU,8143LLU,1LLU),_1b5a4a7db_Range16(8157LLU,8159LLU,1LLU),_1b5a4a7db_Range16(8173LLU,8175LLU,1LLU),_1b5a4a7db_Range16(8189LLU,8190LLU,1LLU),_1b5a4a7db_Range16(11503LLU,11505LLU,1LLU),_1b5a4a7db_Range16(11823LLU,12330LLU,507LLU),_1b5a4a7db_Range16(12331LLU,12335LLU,1LLU),_1b5a4a7db_Range16(12441LLU,12444LLU,1LLU),_1b5a4a7db_Range16(12540LLU,42607LLU,30067LLU),_1b5a4a7db_Range16(42620LLU,42621LLU,1LLU),_1b5a4a7db_Range16(42623LLU,42652LLU,29LLU),_1b5a4a7db_Range16(42653LLU,42736LLU,83LLU),_1b5a4a7db_Range16(42737LLU,42752LLU,15LLU),_1b5a4a7db_Range16(42753LLU,42785LLU,1LLU),_1b5a4a7db_Range16(42888LLU,42890LLU,1LLU),_1b5a4a7db_Range16(43000LLU,43001LLU,1LLU),_1b5a4a7db_Range16(43204LLU,43232LLU,28LLU),_1b5a4a7db_Range16(43233LLU,43249LLU,1LLU),_1b5a4a7db_Range16(43307LLU,43310LLU,1LLU),_1b5a4a7db_Range16(43347LLU,43443LLU,96LLU),_1b5a4a7db_Range16(43456LLU,43493LLU,37LLU),_1b5a4a7db_Range16(43643LLU,43645LLU,1LLU),_1b5a4a7db_Range16(43711LLU,43714LLU,1LLU),_1b5a4a7db_Range16(43766LLU,43867LLU,101LLU),_1b5a4a7db_Range16(43868LLU,43871LLU,1LLU),_1b5a4a7db_Range16(43881LLU,43883LLU,1LLU),_1b5a4a7db_Range16(44012LLU,44013LLU,1LLU),_1b5a4a7db_Range16(64286LLU,65056LLU,770LLU),_1b5a4a7db_Range16(65057LLU,65071LLU,1LLU),_1b5a4a7db_Range16(65342LLU,65344LLU,2LLU),_1b5a4a7db_Range16(65392LLU,65438LLU,46LLU),_1b5a4a7db_Range16(65439LLU,65507LLU,68LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66272LLU,67456LLU,1184LLU),_1b5a4a7db_Range32(67457LLU,67461LLU,1LLU),_1b5a4a7db_Range32(67463LLU,67504LLU,1LLU),_1b5a4a7db_Range32(67506LLU,67514LLU,1LLU),_1b5a4a7db_Range32(68325LLU,68326LLU,1LLU),_1b5a4a7db_Range32(68898LLU,68903LLU,1LLU),_1b5a4a7db_Range32(69373LLU,69375LLU,1LLU),_1b5a4a7db_Range32(69446LLU,69456LLU,1LLU),_1b5a4a7db_Range32(69506LLU,69509LLU,1LLU),_1b5a4a7db_Range32(69702LLU,69744LLU,42LLU),_1b5a4a7db_Range32(69817LLU,69818LLU,1LLU),_1b5a4a7db_Range32(69939LLU,69940LLU,1LLU),_1b5a4a7db_Range32(70003LLU,70080LLU,77LLU),_1b5a4a7db_Range32(70090LLU,70092LLU,1LLU),_1b5a4a7db_Range32(70197LLU,70198LLU,1LLU),_1b5a4a7db_Range32(70377LLU,70378LLU,1LLU),_1b5a4a7db_Range32(70460LLU,70477LLU,17LLU),_1b5a4a7db_Range32(70502LLU,70508LLU,1LLU),_1b5a4a7db_Range32(70512LLU,70516LLU,1LLU),_1b5a4a7db_Range32(70722LLU,70726LLU,4LLU),_1b5a4a7db_Range32(70850LLU,70851LLU,1LLU),_1b5a4a7db_Range32(71103LLU,71104LLU,1LLU),_1b5a4a7db_Range32(71231LLU,71350LLU,119LLU),_1b5a4a7db_Range32(71351LLU,71467LLU,116LLU),_1b5a4a7db_Range32(71737LLU,71738LLU,1LLU),_1b5a4a7db_Range32(71997LLU,71998LLU,1LLU),_1b5a4a7db_Range32(72003LLU,72160LLU,157LLU),_1b5a4a7db_Range32(72244LLU,72263LLU,19LLU),_1b5a4a7db_Range32(72345LLU,72767LLU,422LLU),_1b5a4a7db_Range32(73026LLU,73028LLU,2LLU),_1b5a4a7db_Range32(73029LLU,73111LLU,82LLU),_1b5a4a7db_Range32(78919LLU,78933LLU,1LLU),_1b5a4a7db_Range32(92912LLU,92916LLU,1LLU),_1b5a4a7db_Range32(92976LLU,92982LLU,1LLU),_1b5a4a7db_Range32(94095LLU,94111LLU,1LLU),_1b5a4a7db_Range32(94192LLU,94193LLU,1LLU),_1b5a4a7db_Range32(110576LLU,110579LLU,1LLU),_1b5a4a7db_Range32(110581LLU,110587LLU,1LLU),_1b5a4a7db_Range32(110589LLU,110590LLU,1LLU),_1b5a4a7db_Range32(118528LLU,118573LLU,1LLU),_1b5a4a7db_Range32(118576LLU,118598LLU,1LLU),_1b5a4a7db_Range32(119143LLU,119145LLU,1LLU),_1b5a4a7db_Range32(119149LLU,119154LLU,1LLU),_1b5a4a7db_Range32(119163LLU,119170LLU,1LLU),_1b5a4a7db_Range32(119173LLU,119179LLU,1LLU),_1b5a4a7db_Range32(119210LLU,119213LLU,1LLU),_1b5a4a7db_Range32(122928LLU,122989LLU,1LLU),_1b5a4a7db_Range32(123184LLU,123190LLU,1LLU),_1b5a4a7db_Range32(123566LLU,123628LLU,62LLU),_1b5a4a7db_Range32(123629LLU,123631LLU,1LLU),_1b5a4a7db_Range32(125136LLU,125142LLU,1LLU),_1b5a4a7db_Range32(125252LLU,125254LLU,1LLU),_1b5a4a7db_Range32(125256LLU,125258LLU,1LLU)}),3LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__EXTENDER = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(183LLU,720LLU,537LLU),_1b5a4a7db_Range16(721LLU,1600LLU,879LLU),_1b5a4a7db_Range16(2042LLU,2901LLU,859LLU),_1b5a4a7db_Range16(3654LLU,3782LLU,128LLU),_1b5a4a7db_Range16(6154LLU,6211LLU,57LLU),_1b5a4a7db_Range16(6823LLU,7222LLU,399LLU),_1b5a4a7db_Range16(7291LLU,12293LLU,5002LLU),_1b5a4a7db_Range16(12337LLU,12341LLU,1LLU),_1b5a4a7db_Range16(12445LLU,12446LLU,1LLU),_1b5a4a7db_Range16(12540LLU,12542LLU,1LLU),_1b5a4a7db_Range16(40981LLU,42508LLU,1527LLU),_1b5a4a7db_Range16(43471LLU,43494LLU,23LLU),_1b5a4a7db_Range16(43632LLU,43741LLU,109LLU),_1b5a4a7db_Range16(43763LLU,43764LLU,1LLU),_1b5a4a7db_Range16(65392LLU,65392LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(67457LLU,67458LLU,1LLU),_1b5a4a7db_Range32(70493LLU,71110LLU,617LLU),_1b5a4a7db_Range32(71111LLU,71112LLU,1LLU),_1b5a4a7db_Range32(72344LLU,92994LLU,20650LLU),_1b5a4a7db_Range32(92995LLU,94176LLU,1181LLU),_1b5a4a7db_Range32(94177LLU,94179LLU,2LLU),_1b5a4a7db_Range32(123196LLU,123197LLU,1LLU),_1b5a4a7db_Range32(125252LLU,125254LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__HEX_DIGIT = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(48LLU,57LLU,1LLU),_1b5a4a7db_Range16(65LLU,70LLU,1LLU),_1b5a4a7db_Range16(97LLU,102LLU,1LLU),_1b5a4a7db_Range16(65296LLU,65305LLU,1LLU),_1b5a4a7db_Range16(65313LLU,65318LLU,1LLU),_1b5a4a7db_Range16(65345LLU,65350LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),3LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__HYPHEN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(45LLU,173LLU,128LLU),_1b5a4a7db_Range16(1418LLU,6150LLU,4732LLU),_1b5a4a7db_Range16(8208LLU,8209LLU,1LLU),_1b5a4a7db_Range16(11799LLU,12539LLU,740LLU),_1b5a4a7db_Range16(65123LLU,65293LLU,170LLU),_1b5a4a7db_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),1LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__IDS_BINARY_OPERATOR = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(12272LLU,12273LLU,1LLU),_1b5a4a7db_Range16(12276LLU,12283LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__IDS_TRINARY_OPERATOR = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(12274LLU,12275LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__IDEOGRAPHIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(12294LLU,12295LLU,1LLU),_1b5a4a7db_Range16(12321LLU,12329LLU,1LLU),_1b5a4a7db_Range16(12344LLU,12346LLU,1LLU),_1b5a4a7db_Range16(13312LLU,19903LLU,1LLU),_1b5a4a7db_Range16(19968LLU,40959LLU,1LLU),_1b5a4a7db_Range16(63744LLU,64109LLU,1LLU),_1b5a4a7db_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(94180LLU,94208LLU,28LLU),_1b5a4a7db_Range32(94209LLU,100343LLU,1LLU),_1b5a4a7db_Range32(100352LLU,101589LLU,1LLU),_1b5a4a7db_Range32(101632LLU,101640LLU,1LLU),_1b5a4a7db_Range32(110960LLU,111355LLU,1LLU),_1b5a4a7db_Range32(131072LLU,173791LLU,1LLU),_1b5a4a7db_Range32(173824LLU,177977LLU,1LLU),_1b5a4a7db_Range32(177984LLU,178205LLU,1LLU),_1b5a4a7db_Range32(178208LLU,183969LLU,1LLU),_1b5a4a7db_Range32(183984LLU,191456LLU,1LLU),_1b5a4a7db_Range32(194560LLU,195101LLU,1LLU),_1b5a4a7db_Range32(196608LLU,201546LLU,1LLU),_1b5a4a7db_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__JOIN_CONTROL = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(8204LLU,8205LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__LOGICAL_ORDER_EXCEPTION = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(3648LLU,3652LLU,1LLU),_1b5a4a7db_Range16(3776LLU,3780LLU,1LLU),_1b5a4a7db_Range16(6581LLU,6583LLU,1LLU),_1b5a4a7db_Range16(6586LLU,43701LLU,37115LLU),_1b5a4a7db_Range16(43702LLU,43705LLU,3LLU),_1b5a4a7db_Range16(43707LLU,43708LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__NONCHARACTER_CODE_POINT = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(64976LLU,65007LLU,1LLU),_1b5a4a7db_Range16(65534LLU,65535LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(131070LLU,131071LLU,1LLU),_1b5a4a7db_Range32(196606LLU,196607LLU,1LLU),_1b5a4a7db_Range32(262142LLU,262143LLU,1LLU),_1b5a4a7db_Range32(327678LLU,327679LLU,1LLU),_1b5a4a7db_Range32(393214LLU,393215LLU,1LLU),_1b5a4a7db_Range32(458750LLU,458751LLU,1LLU),_1b5a4a7db_Range32(524286LLU,524287LLU,1LLU),_1b5a4a7db_Range32(589822LLU,589823LLU,1LLU),_1b5a4a7db_Range32(655358LLU,655359LLU,1LLU),_1b5a4a7db_Range32(720894LLU,720895LLU,1LLU),_1b5a4a7db_Range32(786430LLU,786431LLU,1LLU),_1b5a4a7db_Range32(851966LLU,851967LLU,1LLU),_1b5a4a7db_Range32(917502LLU,917503LLU,1LLU),_1b5a4a7db_Range32(983038LLU,983039LLU,1LLU),_1b5a4a7db_Range32(1048574LLU,1048575LLU,1LLU),_1b5a4a7db_Range32(1114110LLU,1114111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OTHER_ALPHABETIC = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(837LLU,1456LLU,619LLU),_1b5a4a7db_Range16(1457LLU,1469LLU,1LLU),_1b5a4a7db_Range16(1471LLU,1473LLU,2LLU),_1b5a4a7db_Range16(1474LLU,1476LLU,2LLU),_1b5a4a7db_Range16(1477LLU,1479LLU,2LLU),_1b5a4a7db_Range16(1552LLU,1562LLU,1LLU),_1b5a4a7db_Range16(1611LLU,1623LLU,1LLU),_1b5a4a7db_Range16(1625LLU,1631LLU,1LLU),_1b5a4a7db_Range16(1648LLU,1750LLU,102LLU),_1b5a4a7db_Range16(1751LLU,1756LLU,1LLU),_1b5a4a7db_Range16(1761LLU,1764LLU,1LLU),_1b5a4a7db_Range16(1767LLU,1768LLU,1LLU),_1b5a4a7db_Range16(1773LLU,1809LLU,36LLU),_1b5a4a7db_Range16(1840LLU,1855LLU,1LLU),_1b5a4a7db_Range16(1958LLU,1968LLU,1LLU),_1b5a4a7db_Range16(2070LLU,2071LLU,1LLU),_1b5a4a7db_Range16(2075LLU,2083LLU,1LLU),_1b5a4a7db_Range16(2085LLU,2087LLU,1LLU),_1b5a4a7db_Range16(2089LLU,2092LLU,1LLU),_1b5a4a7db_Range16(2260LLU,2271LLU,1LLU),_1b5a4a7db_Range16(2275LLU,2281LLU,1LLU),_1b5a4a7db_Range16(2288LLU,2307LLU,1LLU),_1b5a4a7db_Range16(2362LLU,2363LLU,1LLU),_1b5a4a7db_Range16(2366LLU,2380LLU,1LLU),_1b5a4a7db_Range16(2382LLU,2383LLU,1LLU),_1b5a4a7db_Range16(2389LLU,2391LLU,1LLU),_1b5a4a7db_Range16(2402LLU,2403LLU,1LLU),_1b5a4a7db_Range16(2433LLU,2435LLU,1LLU),_1b5a4a7db_Range16(2494LLU,2500LLU,1LLU),_1b5a4a7db_Range16(2503LLU,2504LLU,1LLU),_1b5a4a7db_Range16(2507LLU,2508LLU,1LLU),_1b5a4a7db_Range16(2519LLU,2530LLU,11LLU),_1b5a4a7db_Range16(2531LLU,2561LLU,30LLU),_1b5a4a7db_Range16(2562LLU,2563LLU,1LLU),_1b5a4a7db_Range16(2622LLU,2626LLU,1LLU),_1b5a4a7db_Range16(2631LLU,2632LLU,1LLU),_1b5a4a7db_Range16(2635LLU,2636LLU,1LLU),_1b5a4a7db_Range16(2641LLU,2672LLU,31LLU),_1b5a4a7db_Range16(2673LLU,2677LLU,4LLU),_1b5a4a7db_Range16(2689LLU,2691LLU,1LLU),_1b5a4a7db_Range16(2750LLU,2757LLU,1LLU),_1b5a4a7db_Range16(2759LLU,2761LLU,1LLU),_1b5a4a7db_Range16(2763LLU,2764LLU,1LLU),_1b5a4a7db_Range16(2786LLU,2787LLU,1LLU),_1b5a4a7db_Range16(2810LLU,2812LLU,1LLU),_1b5a4a7db_Range16(2817LLU,2819LLU,1LLU),_1b5a4a7db_Range16(2878LLU,2884LLU,1LLU),_1b5a4a7db_Range16(2887LLU,2888LLU,1LLU),_1b5a4a7db_Range16(2891LLU,2892LLU,1LLU),_1b5a4a7db_Range16(2902LLU,2903LLU,1LLU),_1b5a4a7db_Range16(2914LLU,2915LLU,1LLU),_1b5a4a7db_Range16(2946LLU,3006LLU,60LLU),_1b5a4a7db_Range16(3007LLU,3010LLU,1LLU),_1b5a4a7db_Range16(3014LLU,3016LLU,1LLU),_1b5a4a7db_Range16(3018LLU,3020LLU,1LLU),_1b5a4a7db_Range16(3031LLU,3072LLU,41LLU),_1b5a4a7db_Range16(3073LLU,3076LLU,1LLU),_1b5a4a7db_Range16(3134LLU,3140LLU,1LLU),_1b5a4a7db_Range16(3142LLU,3144LLU,1LLU),_1b5a4a7db_Range16(3146LLU,3148LLU,1LLU),_1b5a4a7db_Range16(3157LLU,3158LLU,1LLU),_1b5a4a7db_Range16(3170LLU,3171LLU,1LLU),_1b5a4a7db_Range16(3201LLU,3203LLU,1LLU),_1b5a4a7db_Range16(3262LLU,3268LLU,1LLU),_1b5a4a7db_Range16(3270LLU,3272LLU,1LLU),_1b5a4a7db_Range16(3274LLU,3276LLU,1LLU),_1b5a4a7db_Range16(3285LLU,3286LLU,1LLU),_1b5a4a7db_Range16(3298LLU,3299LLU,1LLU),_1b5a4a7db_Range16(3315LLU,3328LLU,13LLU),_1b5a4a7db_Range16(3329LLU,3331LLU,1LLU),_1b5a4a7db_Range16(3390LLU,3396LLU,1LLU),_1b5a4a7db_Range16(3398LLU,3400LLU,1LLU),_1b5a4a7db_Range16(3402LLU,3404LLU,1LLU),_1b5a4a7db_Range16(3415LLU,3426LLU,11LLU),_1b5a4a7db_Range16(3427LLU,3457LLU,30LLU),_1b5a4a7db_Range16(3458LLU,3459LLU,1LLU),_1b5a4a7db_Range16(3535LLU,3540LLU,1LLU),_1b5a4a7db_Range16(3542LLU,3544LLU,2LLU),_1b5a4a7db_Range16(3545LLU,3551LLU,1LLU),_1b5a4a7db_Range16(3570LLU,3571LLU,1LLU),_1b5a4a7db_Range16(3633LLU,3636LLU,3LLU),_1b5a4a7db_Range16(3637LLU,3642LLU,1LLU),_1b5a4a7db_Range16(3661LLU,3761LLU,100LLU),_1b5a4a7db_Range16(3764LLU,3769LLU,1LLU),_1b5a4a7db_Range16(3771LLU,3772LLU,1LLU),_1b5a4a7db_Range16(3789LLU,3953LLU,164LLU),_1b5a4a7db_Range16(3954LLU,3971LLU,1LLU),_1b5a4a7db_Range16(3981LLU,3991LLU,1LLU),_1b5a4a7db_Range16(3993LLU,4028LLU,1LLU),_1b5a4a7db_Range16(4139LLU,4150LLU,1LLU),_1b5a4a7db_Range16(4152LLU,4155LLU,3LLU),_1b5a4a7db_Range16(4156LLU,4158LLU,1LLU),_1b5a4a7db_Range16(4182LLU,4185LLU,1LLU),_1b5a4a7db_Range16(4190LLU,4192LLU,1LLU),_1b5a4a7db_Range16(4194LLU,4196LLU,1LLU),_1b5a4a7db_Range16(4199LLU,4205LLU,1LLU),_1b5a4a7db_Range16(4209LLU,4212LLU,1LLU),_1b5a4a7db_Range16(4226LLU,4237LLU,1LLU),_1b5a4a7db_Range16(4239LLU,4250LLU,11LLU),_1b5a4a7db_Range16(4251LLU,4253LLU,1LLU),_1b5a4a7db_Range16(5906LLU,5907LLU,1LLU),_1b5a4a7db_Range16(5938LLU,5939LLU,1LLU),_1b5a4a7db_Range16(5970LLU,5971LLU,1LLU),_1b5a4a7db_Range16(6002LLU,6003LLU,1LLU),_1b5a4a7db_Range16(6070LLU,6088LLU,1LLU),_1b5a4a7db_Range16(6277LLU,6278LLU,1LLU),_1b5a4a7db_Range16(6313LLU,6432LLU,119LLU),_1b5a4a7db_Range16(6433LLU,6443LLU,1LLU),_1b5a4a7db_Range16(6448LLU,6456LLU,1LLU),_1b5a4a7db_Range16(6679LLU,6683LLU,1LLU),_1b5a4a7db_Range16(6741LLU,6750LLU,1LLU),_1b5a4a7db_Range16(6753LLU,6772LLU,1LLU),_1b5a4a7db_Range16(6847LLU,6848LLU,1LLU),_1b5a4a7db_Range16(6860LLU,6862LLU,1LLU),_1b5a4a7db_Range16(6912LLU,6916LLU,1LLU),_1b5a4a7db_Range16(6965LLU,6979LLU,1LLU),_1b5a4a7db_Range16(7040LLU,7042LLU,1LLU),_1b5a4a7db_Range16(7073LLU,7081LLU,1LLU),_1b5a4a7db_Range16(7084LLU,7085LLU,1LLU),_1b5a4a7db_Range16(7143LLU,7153LLU,1LLU),_1b5a4a7db_Range16(7204LLU,7222LLU,1LLU),_1b5a4a7db_Range16(7655LLU,7668LLU,1LLU),_1b5a4a7db_Range16(9398LLU,9449LLU,1LLU),_1b5a4a7db_Range16(11744LLU,11775LLU,1LLU),_1b5a4a7db_Range16(42612LLU,42619LLU,1LLU),_1b5a4a7db_Range16(42654LLU,42655LLU,1LLU),_1b5a4a7db_Range16(43010LLU,43019LLU,9LLU),_1b5a4a7db_Range16(43043LLU,43047LLU,1LLU),_1b5a4a7db_Range16(43136LLU,43137LLU,1LLU),_1b5a4a7db_Range16(43188LLU,43203LLU,1LLU),_1b5a4a7db_Range16(43205LLU,43263LLU,58LLU),_1b5a4a7db_Range16(43302LLU,43306LLU,1LLU),_1b5a4a7db_Range16(43335LLU,43346LLU,1LLU),_1b5a4a7db_Range16(43392LLU,43395LLU,1LLU),_1b5a4a7db_Range16(43444LLU,43455LLU,1LLU),_1b5a4a7db_Range16(43493LLU,43561LLU,68LLU),_1b5a4a7db_Range16(43562LLU,43574LLU,1LLU),_1b5a4a7db_Range16(43587LLU,43596LLU,9LLU),_1b5a4a7db_Range16(43597LLU,43643LLU,46LLU),_1b5a4a7db_Range16(43644LLU,43645LLU,1LLU),_1b5a4a7db_Range16(43696LLU,43698LLU,2LLU),_1b5a4a7db_Range16(43699LLU,43700LLU,1LLU),_1b5a4a7db_Range16(43703LLU,43704LLU,1LLU),_1b5a4a7db_Range16(43710LLU,43755LLU,45LLU),_1b5a4a7db_Range16(43756LLU,43759LLU,1LLU),_1b5a4a7db_Range16(43765LLU,44003LLU,238LLU),_1b5a4a7db_Range16(44004LLU,44010LLU,1LLU),_1b5a4a7db_Range16(64286LLU,64286LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66422LLU,66426LLU,1LLU),_1b5a4a7db_Range32(68097LLU,68099LLU,1LLU),_1b5a4a7db_Range32(68101LLU,68102LLU,1LLU),_1b5a4a7db_Range32(68108LLU,68111LLU,1LLU),_1b5a4a7db_Range32(68900LLU,68903LLU,1LLU),_1b5a4a7db_Range32(69291LLU,69292LLU,1LLU),_1b5a4a7db_Range32(69632LLU,69634LLU,1LLU),_1b5a4a7db_Range32(69688LLU,69701LLU,1LLU),_1b5a4a7db_Range32(69747LLU,69748LLU,1LLU),_1b5a4a7db_Range32(69760LLU,69762LLU,1LLU),_1b5a4a7db_Range32(69808LLU,69816LLU,1LLU),_1b5a4a7db_Range32(69826LLU,69888LLU,62LLU),_1b5a4a7db_Range32(69889LLU,69890LLU,1LLU),_1b5a4a7db_Range32(69927LLU,69938LLU,1LLU),_1b5a4a7db_Range32(69957LLU,69958LLU,1LLU),_1b5a4a7db_Range32(70016LLU,70018LLU,1LLU),_1b5a4a7db_Range32(70067LLU,70079LLU,1LLU),_1b5a4a7db_Range32(70094LLU,70095LLU,1LLU),_1b5a4a7db_Range32(70188LLU,70196LLU,1LLU),_1b5a4a7db_Range32(70199LLU,70206LLU,7LLU),_1b5a4a7db_Range32(70209LLU,70367LLU,158LLU),_1b5a4a7db_Range32(70368LLU,70376LLU,1LLU),_1b5a4a7db_Range32(70400LLU,70403LLU,1LLU),_1b5a4a7db_Range32(70462LLU,70468LLU,1LLU),_1b5a4a7db_Range32(70471LLU,70472LLU,1LLU),_1b5a4a7db_Range32(70475LLU,70476LLU,1LLU),_1b5a4a7db_Range32(70487LLU,70498LLU,11LLU),_1b5a4a7db_Range32(70499LLU,70709LLU,210LLU),_1b5a4a7db_Range32(70710LLU,70721LLU,1LLU),_1b5a4a7db_Range32(70723LLU,70725LLU,1LLU),_1b5a4a7db_Range32(70832LLU,70849LLU,1LLU),_1b5a4a7db_Range32(71087LLU,71093LLU,1LLU),_1b5a4a7db_Range32(71096LLU,71102LLU,1LLU),_1b5a4a7db_Range32(71132LLU,71133LLU,1LLU),_1b5a4a7db_Range32(71216LLU,71230LLU,1LLU),_1b5a4a7db_Range32(71232LLU,71339LLU,107LLU),_1b5a4a7db_Range32(71340LLU,71349LLU,1LLU),_1b5a4a7db_Range32(71453LLU,71466LLU,1LLU),_1b5a4a7db_Range32(71724LLU,71736LLU,1LLU),_1b5a4a7db_Range32(71984LLU,71989LLU,1LLU),_1b5a4a7db_Range32(71991LLU,71992LLU,1LLU),_1b5a4a7db_Range32(71995LLU,71996LLU,1LLU),_1b5a4a7db_Range32(72000LLU,72002LLU,2LLU),_1b5a4a7db_Range32(72145LLU,72151LLU,1LLU),_1b5a4a7db_Range32(72154LLU,72159LLU,1LLU),_1b5a4a7db_Range32(72164LLU,72193LLU,29LLU),_1b5a4a7db_Range32(72194LLU,72202LLU,1LLU),_1b5a4a7db_Range32(72245LLU,72249LLU,1LLU),_1b5a4a7db_Range32(72251LLU,72254LLU,1LLU),_1b5a4a7db_Range32(72273LLU,72283LLU,1LLU),_1b5a4a7db_Range32(72330LLU,72343LLU,1LLU),_1b5a4a7db_Range32(72751LLU,72758LLU,1LLU),_1b5a4a7db_Range32(72760LLU,72766LLU,1LLU),_1b5a4a7db_Range32(72850LLU,72871LLU,1LLU),_1b5a4a7db_Range32(72873LLU,72886LLU,1LLU),_1b5a4a7db_Range32(73009LLU,73014LLU,1LLU),_1b5a4a7db_Range32(73018LLU,73020LLU,2LLU),_1b5a4a7db_Range32(73021LLU,73023LLU,2LLU),_1b5a4a7db_Range32(73024LLU,73025LLU,1LLU),_1b5a4a7db_Range32(73027LLU,73031LLU,4LLU),_1b5a4a7db_Range32(73098LLU,73102LLU,1LLU),_1b5a4a7db_Range32(73104LLU,73105LLU,1LLU),_1b5a4a7db_Range32(73107LLU,73110LLU,1LLU),_1b5a4a7db_Range32(73459LLU,73462LLU,1LLU),_1b5a4a7db_Range32(73472LLU,73473LLU,1LLU),_1b5a4a7db_Range32(73475LLU,73524LLU,49LLU),_1b5a4a7db_Range32(73525LLU,73530LLU,1LLU),_1b5a4a7db_Range32(73534LLU,73536LLU,1LLU),_1b5a4a7db_Range32(94031LLU,94033LLU,2LLU),_1b5a4a7db_Range32(94034LLU,94087LLU,1LLU),_1b5a4a7db_Range32(94095LLU,94098LLU,1LLU),_1b5a4a7db_Range32(94192LLU,94193LLU,1LLU),_1b5a4a7db_Range32(113822LLU,122880LLU,9058LLU),_1b5a4a7db_Range32(122881LLU,122886LLU,1LLU),_1b5a4a7db_Range32(122888LLU,122904LLU,1LLU),_1b5a4a7db_Range32(122907LLU,122913LLU,1LLU),_1b5a4a7db_Range32(122915LLU,122916LLU,1LLU),_1b5a4a7db_Range32(122918LLU,122922LLU,1LLU),_1b5a4a7db_Range32(123023LLU,125255LLU,2232LLU),_1b5a4a7db_Range32(127280LLU,127305LLU,1LLU),_1b5a4a7db_Range32(127312LLU,127337LLU,1LLU),_1b5a4a7db_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OTHER_DEFAULT_IGNORABLE_CODE_POINT = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(847LLU,4447LLU,3600LLU),_1b5a4a7db_Range16(4448LLU,6068LLU,1620LLU),_1b5a4a7db_Range16(6069LLU,8293LLU,2224LLU),_1b5a4a7db_Range16(12644LLU,65440LLU,52796LLU),_1b5a4a7db_Range16(65520LLU,65528LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(917504LLU,917506LLU,2LLU),_1b5a4a7db_Range32(917507LLU,917535LLU,1LLU),_1b5a4a7db_Range32(917632LLU,917759LLU,1LLU),_1b5a4a7db_Range32(918000LLU,921599LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OTHER_GRAPHEME_EXTEND = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(2494LLU,2519LLU,25LLU),_1b5a4a7db_Range16(2878LLU,2903LLU,25LLU),_1b5a4a7db_Range16(3006LLU,3031LLU,25LLU),_1b5a4a7db_Range16(3266LLU,3285LLU,19LLU),_1b5a4a7db_Range16(3286LLU,3390LLU,104LLU),_1b5a4a7db_Range16(3415LLU,3535LLU,120LLU),_1b5a4a7db_Range16(3551LLU,6965LLU,3414LLU),_1b5a4a7db_Range16(8204LLU,12334LLU,4130LLU),_1b5a4a7db_Range16(12335LLU,65438LLU,53103LLU),_1b5a4a7db_Range16(65439LLU,65439LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(70462LLU,70487LLU,25LLU),_1b5a4a7db_Range32(70832LLU,70845LLU,13LLU),_1b5a4a7db_Range32(71087LLU,71984LLU,897LLU),_1b5a4a7db_Range32(119141LLU,119150LLU,9LLU),_1b5a4a7db_Range32(119151LLU,119154LLU,1LLU),_1b5a4a7db_Range32(917536LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OTHER_ID_CONTINUE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(183LLU,903LLU,720LLU),_1b5a4a7db_Range16(4969LLU,4977LLU,1LLU),_1b5a4a7db_Range16(6618LLU,6618LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OTHER_ID_START = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(6277LLU,6278LLU,1LLU),_1b5a4a7db_Range16(8472LLU,8494LLU,22LLU),_1b5a4a7db_Range16(12443LLU,12444LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OTHER_LOWERCASE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(170LLU,186LLU,16LLU),_1b5a4a7db_Range16(688LLU,696LLU,1LLU),_1b5a4a7db_Range16(704LLU,705LLU,1LLU),_1b5a4a7db_Range16(736LLU,740LLU,1LLU),_1b5a4a7db_Range16(837LLU,890LLU,53LLU),_1b5a4a7db_Range16(4348LLU,7468LLU,3120LLU),_1b5a4a7db_Range16(7469LLU,7530LLU,1LLU),_1b5a4a7db_Range16(7544LLU,7579LLU,35LLU),_1b5a4a7db_Range16(7580LLU,7615LLU,1LLU),_1b5a4a7db_Range16(8305LLU,8319LLU,14LLU),_1b5a4a7db_Range16(8336LLU,8348LLU,1LLU),_1b5a4a7db_Range16(8560LLU,8575LLU,1LLU),_1b5a4a7db_Range16(9424LLU,9449LLU,1LLU),_1b5a4a7db_Range16(11388LLU,11389LLU,1LLU),_1b5a4a7db_Range16(42652LLU,42653LLU,1LLU),_1b5a4a7db_Range16(42864LLU,42994LLU,130LLU),_1b5a4a7db_Range16(42995LLU,42996LLU,1LLU),_1b5a4a7db_Range16(43000LLU,43001LLU,1LLU),_1b5a4a7db_Range16(43868LLU,43871LLU,1LLU),_1b5a4a7db_Range16(43881LLU,43881LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(67456LLU,67459LLU,3LLU),_1b5a4a7db_Range32(67460LLU,67461LLU,1LLU),_1b5a4a7db_Range32(67463LLU,67504LLU,1LLU),_1b5a4a7db_Range32(67506LLU,67514LLU,1LLU),_1b5a4a7db_Range32(122928LLU,122989LLU,1LLU)}),1LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OTHER_MATH = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(94LLU,976LLU,882LLU),_1b5a4a7db_Range16(977LLU,978LLU,1LLU),_1b5a4a7db_Range16(981LLU,1008LLU,27LLU),_1b5a4a7db_Range16(1009LLU,1012LLU,3LLU),_1b5a4a7db_Range16(1013LLU,8214LLU,7201LLU),_1b5a4a7db_Range16(8242LLU,8244LLU,1LLU),_1b5a4a7db_Range16(8256LLU,8289LLU,33LLU),_1b5a4a7db_Range16(8290LLU,8292LLU,1LLU),_1b5a4a7db_Range16(8317LLU,8318LLU,1LLU),_1b5a4a7db_Range16(8333LLU,8334LLU,1LLU),_1b5a4a7db_Range16(8400LLU,8412LLU,1LLU),_1b5a4a7db_Range16(8417LLU,8421LLU,4LLU),_1b5a4a7db_Range16(8422LLU,8427LLU,5LLU),_1b5a4a7db_Range16(8428LLU,8431LLU,1LLU),_1b5a4a7db_Range16(8450LLU,8455LLU,5LLU),_1b5a4a7db_Range16(8458LLU,8467LLU,1LLU),_1b5a4a7db_Range16(8469LLU,8473LLU,4LLU),_1b5a4a7db_Range16(8474LLU,8477LLU,1LLU),_1b5a4a7db_Range16(8484LLU,8488LLU,4LLU),_1b5a4a7db_Range16(8489LLU,8492LLU,3LLU),_1b5a4a7db_Range16(8493LLU,8495LLU,2LLU),_1b5a4a7db_Range16(8496LLU,8497LLU,1LLU),_1b5a4a7db_Range16(8499LLU,8504LLU,1LLU),_1b5a4a7db_Range16(8508LLU,8511LLU,1LLU),_1b5a4a7db_Range16(8517LLU,8521LLU,1LLU),_1b5a4a7db_Range16(8597LLU,8601LLU,1LLU),_1b5a4a7db_Range16(8604LLU,8607LLU,1LLU),_1b5a4a7db_Range16(8609LLU,8610LLU,1LLU),_1b5a4a7db_Range16(8612LLU,8613LLU,1LLU),_1b5a4a7db_Range16(8615LLU,8617LLU,2LLU),_1b5a4a7db_Range16(8618LLU,8621LLU,1LLU),_1b5a4a7db_Range16(8624LLU,8625LLU,1LLU),_1b5a4a7db_Range16(8630LLU,8631LLU,1LLU),_1b5a4a7db_Range16(8636LLU,8653LLU,1LLU),_1b5a4a7db_Range16(8656LLU,8657LLU,1LLU),_1b5a4a7db_Range16(8659LLU,8661LLU,2LLU),_1b5a4a7db_Range16(8662LLU,8667LLU,1LLU),_1b5a4a7db_Range16(8669LLU,8676LLU,7LLU),_1b5a4a7db_Range16(8677LLU,8968LLU,291LLU),_1b5a4a7db_Range16(8969LLU,8971LLU,1LLU),_1b5a4a7db_Range16(9140LLU,9141LLU,1LLU),_1b5a4a7db_Range16(9143LLU,9168LLU,25LLU),_1b5a4a7db_Range16(9186LLU,9632LLU,446LLU),_1b5a4a7db_Range16(9633LLU,9646LLU,13LLU),_1b5a4a7db_Range16(9647LLU,9654LLU,1LLU),_1b5a4a7db_Range16(9660LLU,9664LLU,1LLU),_1b5a4a7db_Range16(9670LLU,9671LLU,1LLU),_1b5a4a7db_Range16(9674LLU,9675LLU,1LLU),_1b5a4a7db_Range16(9679LLU,9683LLU,1LLU),_1b5a4a7db_Range16(9698LLU,9700LLU,2LLU),_1b5a4a7db_Range16(9703LLU,9708LLU,1LLU),_1b5a4a7db_Range16(9733LLU,9734LLU,1LLU),_1b5a4a7db_Range16(9792LLU,9794LLU,2LLU),_1b5a4a7db_Range16(9824LLU,9827LLU,1LLU),_1b5a4a7db_Range16(9837LLU,9838LLU,1LLU),_1b5a4a7db_Range16(10181LLU,10182LLU,1LLU),_1b5a4a7db_Range16(10214LLU,10223LLU,1LLU),_1b5a4a7db_Range16(10627LLU,10648LLU,1LLU),_1b5a4a7db_Range16(10712LLU,10715LLU,1LLU),_1b5a4a7db_Range16(10748LLU,10749LLU,1LLU),_1b5a4a7db_Range16(65121LLU,65123LLU,2LLU),_1b5a4a7db_Range16(65128LLU,65340LLU,212LLU),_1b5a4a7db_Range16(65342LLU,65342LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(119808LLU,119892LLU,1LLU),_1b5a4a7db_Range32(119894LLU,119964LLU,1LLU),_1b5a4a7db_Range32(119966LLU,119967LLU,1LLU),_1b5a4a7db_Range32(119970LLU,119973LLU,3LLU),_1b5a4a7db_Range32(119974LLU,119977LLU,3LLU),_1b5a4a7db_Range32(119978LLU,119980LLU,1LLU),_1b5a4a7db_Range32(119982LLU,119993LLU,1LLU),_1b5a4a7db_Range32(119995LLU,119997LLU,2LLU),_1b5a4a7db_Range32(119998LLU,120003LLU,1LLU),_1b5a4a7db_Range32(120005LLU,120069LLU,1LLU),_1b5a4a7db_Range32(120071LLU,120074LLU,1LLU),_1b5a4a7db_Range32(120077LLU,120084LLU,1LLU),_1b5a4a7db_Range32(120086LLU,120092LLU,1LLU),_1b5a4a7db_Range32(120094LLU,120121LLU,1LLU),_1b5a4a7db_Range32(120123LLU,120126LLU,1LLU),_1b5a4a7db_Range32(120128LLU,120132LLU,1LLU),_1b5a4a7db_Range32(120134LLU,120138LLU,4LLU),_1b5a4a7db_Range32(120139LLU,120144LLU,1LLU),_1b5a4a7db_Range32(120146LLU,120485LLU,1LLU),_1b5a4a7db_Range32(120488LLU,120512LLU,1LLU),_1b5a4a7db_Range32(120514LLU,120538LLU,1LLU),_1b5a4a7db_Range32(120540LLU,120570LLU,1LLU),_1b5a4a7db_Range32(120572LLU,120596LLU,1LLU),_1b5a4a7db_Range32(120598LLU,120628LLU,1LLU),_1b5a4a7db_Range32(120630LLU,120654LLU,1LLU),_1b5a4a7db_Range32(120656LLU,120686LLU,1LLU),_1b5a4a7db_Range32(120688LLU,120712LLU,1LLU),_1b5a4a7db_Range32(120714LLU,120744LLU,1LLU),_1b5a4a7db_Range32(120746LLU,120770LLU,1LLU),_1b5a4a7db_Range32(120772LLU,120779LLU,1LLU),_1b5a4a7db_Range32(120782LLU,120831LLU,1LLU),_1b5a4a7db_Range32(126464LLU,126467LLU,1LLU),_1b5a4a7db_Range32(126469LLU,126495LLU,1LLU),_1b5a4a7db_Range32(126497LLU,126498LLU,1LLU),_1b5a4a7db_Range32(126500LLU,126503LLU,3LLU),_1b5a4a7db_Range32(126505LLU,126514LLU,1LLU),_1b5a4a7db_Range32(126516LLU,126519LLU,1LLU),_1b5a4a7db_Range32(126521LLU,126523LLU,2LLU),_1b5a4a7db_Range32(126530LLU,126535LLU,5LLU),_1b5a4a7db_Range32(126537LLU,126541LLU,2LLU),_1b5a4a7db_Range32(126542LLU,126543LLU,1LLU),_1b5a4a7db_Range32(126545LLU,126546LLU,1LLU),_1b5a4a7db_Range32(126548LLU,126551LLU,3LLU),_1b5a4a7db_Range32(126553LLU,126561LLU,2LLU),_1b5a4a7db_Range32(126562LLU,126564LLU,2LLU),_1b5a4a7db_Range32(126567LLU,126570LLU,1LLU),_1b5a4a7db_Range32(126572LLU,126578LLU,1LLU),_1b5a4a7db_Range32(126580LLU,126583LLU,1LLU),_1b5a4a7db_Range32(126585LLU,126588LLU,1LLU),_1b5a4a7db_Range32(126590LLU,126592LLU,2LLU),_1b5a4a7db_Range32(126593LLU,126601LLU,1LLU),_1b5a4a7db_Range32(126603LLU,126619LLU,1LLU),_1b5a4a7db_Range32(126625LLU,126627LLU,1LLU),_1b5a4a7db_Range32(126629LLU,126633LLU,1LLU),_1b5a4a7db_Range32(126635LLU,126651LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__OTHER_UPPERCASE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(8544LLU,8559LLU,1LLU),_1b5a4a7db_Range16(9398LLU,9423LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(127280LLU,127305LLU,1LLU),_1b5a4a7db_Range32(127312LLU,127337LLU,1LLU),_1b5a4a7db_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PATTERN_SYNTAX = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(33LLU,47LLU,1LLU),_1b5a4a7db_Range16(58LLU,64LLU,1LLU),_1b5a4a7db_Range16(91LLU,94LLU,1LLU),_1b5a4a7db_Range16(96LLU,123LLU,27LLU),_1b5a4a7db_Range16(124LLU,126LLU,1LLU),_1b5a4a7db_Range16(161LLU,167LLU,1LLU),_1b5a4a7db_Range16(169LLU,171LLU,2LLU),_1b5a4a7db_Range16(172LLU,176LLU,2LLU),_1b5a4a7db_Range16(177LLU,187LLU,5LLU),_1b5a4a7db_Range16(191LLU,215LLU,24LLU),_1b5a4a7db_Range16(247LLU,8208LLU,7961LLU),_1b5a4a7db_Range16(8209LLU,8231LLU,1LLU),_1b5a4a7db_Range16(8240LLU,8254LLU,1LLU),_1b5a4a7db_Range16(8257LLU,8275LLU,1LLU),_1b5a4a7db_Range16(8277LLU,8286LLU,1LLU),_1b5a4a7db_Range16(8592LLU,9311LLU,1LLU),_1b5a4a7db_Range16(9472LLU,10101LLU,1LLU),_1b5a4a7db_Range16(10132LLU,11263LLU,1LLU),_1b5a4a7db_Range16(11776LLU,11903LLU,1LLU),_1b5a4a7db_Range16(12289LLU,12291LLU,1LLU),_1b5a4a7db_Range16(12296LLU,12320LLU,1LLU),_1b5a4a7db_Range16(12336LLU,64830LLU,52494LLU),_1b5a4a7db_Range16(64831LLU,65093LLU,262LLU),_1b5a4a7db_Range16(65094LLU,65094LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),10LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PATTERN_WHITE_SPACE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(9LLU,13LLU,1LLU),_1b5a4a7db_Range16(32LLU,133LLU,101LLU),_1b5a4a7db_Range16(8206LLU,8207LLU,1LLU),_1b5a4a7db_Range16(8232LLU,8233LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),2LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__PREPENDED_CONCATENATION_MARK = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(1536LLU,1541LLU,1LLU),_1b5a4a7db_Range16(1757LLU,1807LLU,50LLU),_1b5a4a7db_Range16(2192LLU,2193LLU,1LLU),_1b5a4a7db_Range16(2274LLU,2274LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(69821LLU,69837LLU,16LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__QUOTATION_MARK = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(34LLU,39LLU,5LLU),_1b5a4a7db_Range16(171LLU,187LLU,16LLU),_1b5a4a7db_Range16(8216LLU,8223LLU,1LLU),_1b5a4a7db_Range16(8249LLU,8250LLU,1LLU),_1b5a4a7db_Range16(11842LLU,12300LLU,458LLU),_1b5a4a7db_Range16(12301LLU,12303LLU,1LLU),_1b5a4a7db_Range16(12317LLU,12319LLU,1LLU),_1b5a4a7db_Range16(65089LLU,65092LLU,1LLU),_1b5a4a7db_Range16(65282LLU,65287LLU,5LLU),_1b5a4a7db_Range16(65378LLU,65379LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),2LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__RADICAL = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(11904LLU,11929LLU,1LLU),_1b5a4a7db_Range16(11931LLU,12019LLU,1LLU),_1b5a4a7db_Range16(12032LLU,12245LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__REGIONAL_INDICATOR = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(127462LLU,127487LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SENTENCE_TERMINAL = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(33LLU,46LLU,13LLU),_1b5a4a7db_Range16(63LLU,1417LLU,1354LLU),_1b5a4a7db_Range16(1565LLU,1567LLU,1LLU),_1b5a4a7db_Range16(1748LLU,1792LLU,44LLU),_1b5a4a7db_Range16(1793LLU,1794LLU,1LLU),_1b5a4a7db_Range16(2041LLU,2103LLU,62LLU),_1b5a4a7db_Range16(2105LLU,2109LLU,4LLU),_1b5a4a7db_Range16(2110LLU,2404LLU,294LLU),_1b5a4a7db_Range16(2405LLU,4170LLU,1765LLU),_1b5a4a7db_Range16(4171LLU,4962LLU,791LLU),_1b5a4a7db_Range16(4967LLU,4968LLU,1LLU),_1b5a4a7db_Range16(5742LLU,5941LLU,199LLU),_1b5a4a7db_Range16(5942LLU,6147LLU,205LLU),_1b5a4a7db_Range16(6153LLU,6468LLU,315LLU),_1b5a4a7db_Range16(6469LLU,6824LLU,355LLU),_1b5a4a7db_Range16(6825LLU,6827LLU,1LLU),_1b5a4a7db_Range16(7002LLU,7003LLU,1LLU),_1b5a4a7db_Range16(7006LLU,7007LLU,1LLU),_1b5a4a7db_Range16(7037LLU,7038LLU,1LLU),_1b5a4a7db_Range16(7227LLU,7228LLU,1LLU),_1b5a4a7db_Range16(7294LLU,7295LLU,1LLU),_1b5a4a7db_Range16(8252LLU,8253LLU,1LLU),_1b5a4a7db_Range16(8263LLU,8265LLU,1LLU),_1b5a4a7db_Range16(11822LLU,11836LLU,14LLU),_1b5a4a7db_Range16(11859LLU,11860LLU,1LLU),_1b5a4a7db_Range16(12290LLU,42239LLU,29949LLU),_1b5a4a7db_Range16(42510LLU,42511LLU,1LLU),_1b5a4a7db_Range16(42739LLU,42743LLU,4LLU),_1b5a4a7db_Range16(43126LLU,43127LLU,1LLU),_1b5a4a7db_Range16(43214LLU,43215LLU,1LLU),_1b5a4a7db_Range16(43311LLU,43464LLU,153LLU),_1b5a4a7db_Range16(43465LLU,43613LLU,148LLU),_1b5a4a7db_Range16(43614LLU,43615LLU,1LLU),_1b5a4a7db_Range16(43760LLU,43761LLU,1LLU),_1b5a4a7db_Range16(44011LLU,65106LLU,21095LLU),_1b5a4a7db_Range16(65110LLU,65111LLU,1LLU),_1b5a4a7db_Range16(65281LLU,65294LLU,13LLU),_1b5a4a7db_Range16(65311LLU,65377LLU,66LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(68182LLU,68183LLU,1LLU),_1b5a4a7db_Range32(69461LLU,69465LLU,1LLU),_1b5a4a7db_Range32(69510LLU,69513LLU,1LLU),_1b5a4a7db_Range32(69703LLU,69704LLU,1LLU),_1b5a4a7db_Range32(69822LLU,69825LLU,1LLU),_1b5a4a7db_Range32(69953LLU,69955LLU,1LLU),_1b5a4a7db_Range32(70085LLU,70086LLU,1LLU),_1b5a4a7db_Range32(70093LLU,70110LLU,17LLU),_1b5a4a7db_Range32(70111LLU,70200LLU,89LLU),_1b5a4a7db_Range32(70201LLU,70203LLU,2LLU),_1b5a4a7db_Range32(70204LLU,70313LLU,109LLU),_1b5a4a7db_Range32(70731LLU,70732LLU,1LLU),_1b5a4a7db_Range32(71106LLU,71107LLU,1LLU),_1b5a4a7db_Range32(71113LLU,71127LLU,1LLU),_1b5a4a7db_Range32(71233LLU,71234LLU,1LLU),_1b5a4a7db_Range32(71484LLU,71486LLU,1LLU),_1b5a4a7db_Range32(72004LLU,72006LLU,2LLU),_1b5a4a7db_Range32(72258LLU,72259LLU,1LLU),_1b5a4a7db_Range32(72347LLU,72348LLU,1LLU),_1b5a4a7db_Range32(72769LLU,72770LLU,1LLU),_1b5a4a7db_Range32(73463LLU,73464LLU,1LLU),_1b5a4a7db_Range32(73539LLU,73540LLU,1LLU),_1b5a4a7db_Range32(92782LLU,92783LLU,1LLU),_1b5a4a7db_Range32(92917LLU,92983LLU,66LLU),_1b5a4a7db_Range32(92984LLU,92996LLU,12LLU),_1b5a4a7db_Range32(93848LLU,113823LLU,19975LLU),_1b5a4a7db_Range32(121480LLU,121480LLU,1LLU)}),1LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__SOFT_DOTTED = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(105LLU,106LLU,1LLU),_1b5a4a7db_Range16(303LLU,585LLU,282LLU),_1b5a4a7db_Range16(616LLU,669LLU,53LLU),_1b5a4a7db_Range16(690LLU,1011LLU,321LLU),_1b5a4a7db_Range16(1110LLU,1112LLU,2LLU),_1b5a4a7db_Range16(7522LLU,7574LLU,52LLU),_1b5a4a7db_Range16(7588LLU,7592LLU,4LLU),_1b5a4a7db_Range16(7725LLU,7883LLU,158LLU),_1b5a4a7db_Range16(8305LLU,8520LLU,215LLU),_1b5a4a7db_Range16(8521LLU,11388LLU,2867LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(119842LLU,119843LLU,1LLU),_1b5a4a7db_Range32(119894LLU,119895LLU,1LLU),_1b5a4a7db_Range32(119946LLU,119947LLU,1LLU),_1b5a4a7db_Range32(119998LLU,119999LLU,1LLU),_1b5a4a7db_Range32(120050LLU,120051LLU,1LLU),_1b5a4a7db_Range32(120102LLU,120103LLU,1LLU),_1b5a4a7db_Range32(120154LLU,120155LLU,1LLU),_1b5a4a7db_Range32(120206LLU,120207LLU,1LLU),_1b5a4a7db_Range32(120258LLU,120259LLU,1LLU),_1b5a4a7db_Range32(120310LLU,120311LLU,1LLU),_1b5a4a7db_Range32(120362LLU,120363LLU,1LLU),_1b5a4a7db_Range32(120414LLU,120415LLU,1LLU),_1b5a4a7db_Range32(120466LLU,120467LLU,1LLU),_1b5a4a7db_Range32(122650LLU,122956LLU,306LLU),_1b5a4a7db_Range32(122957LLU,122984LLU,27LLU)}),1LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__TERMINAL_PUNCTUATION = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(33LLU,44LLU,11LLU),_1b5a4a7db_Range16(46LLU,58LLU,12LLU),_1b5a4a7db_Range16(59LLU,63LLU,4LLU),_1b5a4a7db_Range16(894LLU,903LLU,9LLU),_1b5a4a7db_Range16(1417LLU,1475LLU,58LLU),_1b5a4a7db_Range16(1548LLU,1563LLU,15LLU),_1b5a4a7db_Range16(1565LLU,1567LLU,1LLU),_1b5a4a7db_Range16(1748LLU,1792LLU,44LLU),_1b5a4a7db_Range16(1793LLU,1802LLU,1LLU),_1b5a4a7db_Range16(1804LLU,2040LLU,236LLU),_1b5a4a7db_Range16(2041LLU,2096LLU,55LLU),_1b5a4a7db_Range16(2097LLU,2110LLU,1LLU),_1b5a4a7db_Range16(2142LLU,2404LLU,262LLU),_1b5a4a7db_Range16(2405LLU,3674LLU,1269LLU),_1b5a4a7db_Range16(3675LLU,3848LLU,173LLU),_1b5a4a7db_Range16(3853LLU,3858LLU,1LLU),_1b5a4a7db_Range16(4170LLU,4171LLU,1LLU),_1b5a4a7db_Range16(4961LLU,4968LLU,1LLU),_1b5a4a7db_Range16(5742LLU,5867LLU,125LLU),_1b5a4a7db_Range16(5868LLU,5869LLU,1LLU),_1b5a4a7db_Range16(5941LLU,5942LLU,1LLU),_1b5a4a7db_Range16(6100LLU,6102LLU,1LLU),_1b5a4a7db_Range16(6106LLU,6146LLU,40LLU),_1b5a4a7db_Range16(6147LLU,6149LLU,1LLU),_1b5a4a7db_Range16(6152LLU,6153LLU,1LLU),_1b5a4a7db_Range16(6468LLU,6469LLU,1LLU),_1b5a4a7db_Range16(6824LLU,6827LLU,1LLU),_1b5a4a7db_Range16(7002LLU,7003LLU,1LLU),_1b5a4a7db_Range16(7005LLU,7007LLU,1LLU),_1b5a4a7db_Range16(7037LLU,7038LLU,1LLU),_1b5a4a7db_Range16(7227LLU,7231LLU,1LLU),_1b5a4a7db_Range16(7294LLU,7295LLU,1LLU),_1b5a4a7db_Range16(8252LLU,8253LLU,1LLU),_1b5a4a7db_Range16(8263LLU,8265LLU,1LLU),_1b5a4a7db_Range16(11822LLU,11836LLU,14LLU),_1b5a4a7db_Range16(11841LLU,11852LLU,11LLU),_1b5a4a7db_Range16(11854LLU,11855LLU,1LLU),_1b5a4a7db_Range16(11859LLU,11860LLU,1LLU),_1b5a4a7db_Range16(12289LLU,12290LLU,1LLU),_1b5a4a7db_Range16(42238LLU,42239LLU,1LLU),_1b5a4a7db_Range16(42509LLU,42511LLU,1LLU),_1b5a4a7db_Range16(42739LLU,42743LLU,1LLU),_1b5a4a7db_Range16(43126LLU,43127LLU,1LLU),_1b5a4a7db_Range16(43214LLU,43215LLU,1LLU),_1b5a4a7db_Range16(43311LLU,43463LLU,152LLU),_1b5a4a7db_Range16(43464LLU,43465LLU,1LLU),_1b5a4a7db_Range16(43613LLU,43615LLU,1LLU),_1b5a4a7db_Range16(43743LLU,43760LLU,17LLU),_1b5a4a7db_Range16(43761LLU,44011LLU,250LLU),_1b5a4a7db_Range16(65104LLU,65106LLU,1LLU),_1b5a4a7db_Range16(65108LLU,65111LLU,1LLU),_1b5a4a7db_Range16(65281LLU,65292LLU,11LLU),_1b5a4a7db_Range16(65294LLU,65306LLU,12LLU),_1b5a4a7db_Range16(65307LLU,65311LLU,4LLU),_1b5a4a7db_Range16(65377LLU,65380LLU,3LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66463LLU,66512LLU,49LLU),_1b5a4a7db_Range32(67671LLU,67871LLU,200LLU),_1b5a4a7db_Range32(68182LLU,68183LLU,1LLU),_1b5a4a7db_Range32(68336LLU,68341LLU,1LLU),_1b5a4a7db_Range32(68410LLU,68415LLU,1LLU),_1b5a4a7db_Range32(68505LLU,68508LLU,1LLU),_1b5a4a7db_Range32(69461LLU,69465LLU,1LLU),_1b5a4a7db_Range32(69510LLU,69513LLU,1LLU),_1b5a4a7db_Range32(69703LLU,69709LLU,1LLU),_1b5a4a7db_Range32(69822LLU,69825LLU,1LLU),_1b5a4a7db_Range32(69953LLU,69955LLU,1LLU),_1b5a4a7db_Range32(70085LLU,70086LLU,1LLU),_1b5a4a7db_Range32(70093LLU,70110LLU,17LLU),_1b5a4a7db_Range32(70111LLU,70200LLU,89LLU),_1b5a4a7db_Range32(70201LLU,70204LLU,1LLU),_1b5a4a7db_Range32(70313LLU,70731LLU,418LLU),_1b5a4a7db_Range32(70732LLU,70733LLU,1LLU),_1b5a4a7db_Range32(70746LLU,70747LLU,1LLU),_1b5a4a7db_Range32(71106LLU,71109LLU,1LLU),_1b5a4a7db_Range32(71113LLU,71127LLU,1LLU),_1b5a4a7db_Range32(71233LLU,71234LLU,1LLU),_1b5a4a7db_Range32(71484LLU,71486LLU,1LLU),_1b5a4a7db_Range32(72004LLU,72006LLU,2LLU),_1b5a4a7db_Range32(72258LLU,72259LLU,1LLU),_1b5a4a7db_Range32(72347LLU,72348LLU,1LLU),_1b5a4a7db_Range32(72353LLU,72354LLU,1LLU),_1b5a4a7db_Range32(72769LLU,72771LLU,1LLU),_1b5a4a7db_Range32(72817LLU,73463LLU,646LLU),_1b5a4a7db_Range32(73464LLU,73539LLU,75LLU),_1b5a4a7db_Range32(73540LLU,74864LLU,1324LLU),_1b5a4a7db_Range32(74865LLU,74868LLU,1LLU),_1b5a4a7db_Range32(92782LLU,92783LLU,1LLU),_1b5a4a7db_Range32(92917LLU,92983LLU,66LLU),_1b5a4a7db_Range32(92984LLU,92985LLU,1LLU),_1b5a4a7db_Range32(92996LLU,93847LLU,851LLU),_1b5a4a7db_Range32(93848LLU,113823LLU,19975LLU),_1b5a4a7db_Range32(121479LLU,121482LLU,1LLU)}),3LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__UNIFIED_IDEOGRAPH = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(13312LLU,19903LLU,1LLU),_1b5a4a7db_Range16(19968LLU,40959LLU,1LLU),_1b5a4a7db_Range16(64014LLU,64015LLU,1LLU),_1b5a4a7db_Range16(64017LLU,64019LLU,2LLU),_1b5a4a7db_Range16(64020LLU,64031LLU,11LLU),_1b5a4a7db_Range16(64033LLU,64035LLU,2LLU),_1b5a4a7db_Range16(64036LLU,64039LLU,3LLU),_1b5a4a7db_Range16(64040LLU,64041LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(131072LLU,173791LLU,1LLU),_1b5a4a7db_Range32(173824LLU,177977LLU,1LLU),_1b5a4a7db_Range32(177984LLU,178205LLU,1LLU),_1b5a4a7db_Range32(178208LLU,183969LLU,1LLU),_1b5a4a7db_Range32(183984LLU,191456LLU,1LLU),_1b5a4a7db_Range32(196608LLU,201546LLU,1LLU),_1b5a4a7db_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__VARIATION_SELECTOR = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(6155LLU,6157LLU,1LLU),_1b5a4a7db_Range16(6159LLU,65024LLU,58865LLU),_1b5a4a7db_Range16(65025LLU,65039LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e__WHITE_SPACE = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(9LLU,13LLU,1LLU),_1b5a4a7db_Range16(32LLU,133LLU,101LLU),_1b5a4a7db_Range16(160LLU,5760LLU,5600LLU),_1b5a4a7db_Range16(8192LLU,8202LLU,1LLU),_1b5a4a7db_Range16(8232LLU,8233LLU,1LLU),_1b5a4a7db_Range16(8239LLU,8287LLU,48LLU),_1b5a4a7db_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),2LL));
static jule::Array<jule::U16,128> _1ce5b689e_ASCII_FOLD = jule::Array<jule::U16,128>({0LLU,1LLU,2LLU,3LLU,4LLU,5LLU,6LLU,7LLU,8LLU,9LLU,10LLU,11LLU,12LLU,13LLU,14LLU,15LLU,16LLU,17LLU,18LLU,19LLU,20LLU,21LLU,22LLU,23LLU,24LLU,25LLU,26LLU,27LLU,28LLU,29LLU,30LLU,31LLU,32LLU,33LLU,34LLU,35LLU,36LLU,37LLU,38LLU,39LLU,40LLU,41LLU,42LLU,43LLU,44LLU,45LLU,46LLU,47LLU,48LLU,49LLU,50LLU,51LLU,52LLU,53LLU,54LLU,55LLU,56LLU,57LLU,58LLU,59LLU,60LLU,61LLU,62LLU,63LLU,64LLU,97LLU,98LLU,99LLU,100LLU,101LLU,102LLU,103LLU,104LLU,105LLU,106LLU,107LLU,108LLU,109LLU,110LLU,111LLU,112LLU,113LLU,114LLU,115LLU,116LLU,117LLU,118LLU,119LLU,120LLU,121LLU,122LLU,91LLU,92LLU,93LLU,94LLU,95LLU,96LLU,65LLU,66LLU,67LLU,68LLU,69LLU,70LLU,71LLU,72LLU,73LLU,74LLU,8490LLU,76LLU,77LLU,78LLU,79LLU,80LLU,81LLU,82LLU,383LLU,84LLU,85LLU,86LLU,87LLU,88LLU,89LLU,90LLU,123LLU,124LLU,125LLU,126LLU,127LLU});
static jule::Slice<_1b5a4a7db_FoldPair> _1ce5b689e_CASE_ORBIT = jule::Slice<_1b5a4a7db_FoldPair>({_1b5a4a7db_FoldPair(75LLU,107LLU),_1b5a4a7db_FoldPair(83LLU,115LLU),_1b5a4a7db_FoldPair(107LLU,8490LLU),_1b5a4a7db_FoldPair(115LLU,383LLU),_1b5a4a7db_FoldPair(181LLU,924LLU),_1b5a4a7db_FoldPair(197LLU,229LLU),_1b5a4a7db_FoldPair(223LLU,7838LLU),_1b5a4a7db_FoldPair(229LLU,8491LLU),_1b5a4a7db_FoldPair(304LLU,304LLU),_1b5a4a7db_FoldPair(305LLU,305LLU),_1b5a4a7db_FoldPair(383LLU,83LLU),_1b5a4a7db_FoldPair(452LLU,453LLU),_1b5a4a7db_FoldPair(453LLU,454LLU),_1b5a4a7db_FoldPair(454LLU,452LLU),_1b5a4a7db_FoldPair(455LLU,456LLU),_1b5a4a7db_FoldPair(456LLU,457LLU),_1b5a4a7db_FoldPair(457LLU,455LLU),_1b5a4a7db_FoldPair(458LLU,459LLU),_1b5a4a7db_FoldPair(459LLU,460LLU),_1b5a4a7db_FoldPair(460LLU,458LLU),_1b5a4a7db_FoldPair(497LLU,498LLU),_1b5a4a7db_FoldPair(498LLU,499LLU),_1b5a4a7db_FoldPair(499LLU,497LLU),_1b5a4a7db_FoldPair(837LLU,921LLU),_1b5a4a7db_FoldPair(914LLU,946LLU),_1b5a4a7db_FoldPair(917LLU,949LLU),_1b5a4a7db_FoldPair(920LLU,952LLU),_1b5a4a7db_FoldPair(921LLU,953LLU),_1b5a4a7db_FoldPair(922LLU,954LLU),_1b5a4a7db_FoldPair(924LLU,956LLU),_1b5a4a7db_FoldPair(928LLU,960LLU),_1b5a4a7db_FoldPair(929LLU,961LLU),_1b5a4a7db_FoldPair(931LLU,962LLU),_1b5a4a7db_FoldPair(934LLU,966LLU),_1b5a4a7db_FoldPair(937LLU,969LLU),_1b5a4a7db_FoldPair(946LLU,976LLU),_1b5a4a7db_FoldPair(949LLU,1013LLU),_1b5a4a7db_FoldPair(952LLU,977LLU),_1b5a4a7db_FoldPair(953LLU,8126LLU),_1b5a4a7db_FoldPair(954LLU,1008LLU),_1b5a4a7db_FoldPair(956LLU,181LLU),_1b5a4a7db_FoldPair(960LLU,982LLU),_1b5a4a7db_FoldPair(961LLU,1009LLU),_1b5a4a7db_FoldPair(962LLU,963LLU),_1b5a4a7db_FoldPair(963LLU,931LLU),_1b5a4a7db_FoldPair(966LLU,981LLU),_1b5a4a7db_FoldPair(969LLU,8486LLU),_1b5a4a7db_FoldPair(976LLU,914LLU),_1b5a4a7db_FoldPair(977LLU,1012LLU),_1b5a4a7db_FoldPair(981LLU,934LLU),_1b5a4a7db_FoldPair(982LLU,928LLU),_1b5a4a7db_FoldPair(1008LLU,922LLU),_1b5a4a7db_FoldPair(1009LLU,929LLU),_1b5a4a7db_FoldPair(1012LLU,920LLU),_1b5a4a7db_FoldPair(1013LLU,917LLU),_1b5a4a7db_FoldPair(1042LLU,1074LLU),_1b5a4a7db_FoldPair(1044LLU,1076LLU),_1b5a4a7db_FoldPair(1054LLU,1086LLU),_1b5a4a7db_FoldPair(1057LLU,1089LLU),_1b5a4a7db_FoldPair(1058LLU,1090LLU),_1b5a4a7db_FoldPair(1066LLU,1098LLU),_1b5a4a7db_FoldPair(1074LLU,7296LLU),_1b5a4a7db_FoldPair(1076LLU,7297LLU),_1b5a4a7db_FoldPair(1086LLU,7298LLU),_1b5a4a7db_FoldPair(1089LLU,7299LLU),_1b5a4a7db_FoldPair(1090LLU,7300LLU),_1b5a4a7db_FoldPair(1098LLU,7302LLU),_1b5a4a7db_FoldPair(1122LLU,1123LLU),_1b5a4a7db_FoldPair(1123LLU,7303LLU),_1b5a4a7db_FoldPair(7296LLU,1042LLU),_1b5a4a7db_FoldPair(7297LLU,1044LLU),_1b5a4a7db_FoldPair(7298LLU,1054LLU),_1b5a4a7db_FoldPair(7299LLU,1057LLU),_1b5a4a7db_FoldPair(7300LLU,7301LLU),_1b5a4a7db_FoldPair(7301LLU,1058LLU),_1b5a4a7db_FoldPair(7302LLU,1066LLU),_1b5a4a7db_FoldPair(7303LLU,1122LLU),_1b5a4a7db_FoldPair(7304LLU,42570LLU),_1b5a4a7db_FoldPair(7776LLU,7777LLU),_1b5a4a7db_FoldPair(7777LLU,7835LLU),_1b5a4a7db_FoldPair(7835LLU,7776LLU),_1b5a4a7db_FoldPair(7838LLU,223LLU),_1b5a4a7db_FoldPair(8126LLU,837LLU),_1b5a4a7db_FoldPair(8486LLU,937LLU),_1b5a4a7db_FoldPair(8490LLU,75LLU),_1b5a4a7db_FoldPair(8491LLU,197LLU),_1b5a4a7db_FoldPair(42570LLU,42571LLU),_1b5a4a7db_FoldPair(42571LLU,7304LLU)});
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_FOLD_L = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(837LLU,837LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_FOLD_LL = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(65LLU,90LLU,1LLU),_1b5a4a7db_Range16(192LLU,214LLU,1LLU),_1b5a4a7db_Range16(216LLU,222LLU,1LLU),_1b5a4a7db_Range16(256LLU,302LLU,2LLU),_1b5a4a7db_Range16(306LLU,310LLU,2LLU),_1b5a4a7db_Range16(313LLU,327LLU,2LLU),_1b5a4a7db_Range16(330LLU,376LLU,2LLU),_1b5a4a7db_Range16(377LLU,381LLU,2LLU),_1b5a4a7db_Range16(385LLU,386LLU,1LLU),_1b5a4a7db_Range16(388LLU,390LLU,2LLU),_1b5a4a7db_Range16(391LLU,393LLU,2LLU),_1b5a4a7db_Range16(394LLU,395LLU,1LLU),_1b5a4a7db_Range16(398LLU,401LLU,1LLU),_1b5a4a7db_Range16(403LLU,404LLU,1LLU),_1b5a4a7db_Range16(406LLU,408LLU,1LLU),_1b5a4a7db_Range16(412LLU,413LLU,1LLU),_1b5a4a7db_Range16(415LLU,416LLU,1LLU),_1b5a4a7db_Range16(418LLU,422LLU,2LLU),_1b5a4a7db_Range16(423LLU,425LLU,2LLU),_1b5a4a7db_Range16(428LLU,430LLU,2LLU),_1b5a4a7db_Range16(431LLU,433LLU,2LLU),_1b5a4a7db_Range16(434LLU,435LLU,1LLU),_1b5a4a7db_Range16(437LLU,439LLU,2LLU),_1b5a4a7db_Range16(440LLU,444LLU,4LLU),_1b5a4a7db_Range16(452LLU,453LLU,1LLU),_1b5a4a7db_Range16(455LLU,456LLU,1LLU),_1b5a4a7db_Range16(458LLU,459LLU,1LLU),_1b5a4a7db_Range16(461LLU,475LLU,2LLU),_1b5a4a7db_Range16(478LLU,494LLU,2LLU),_1b5a4a7db_Range16(497LLU,498LLU,1LLU),_1b5a4a7db_Range16(500LLU,502LLU,2LLU),_1b5a4a7db_Range16(503LLU,504LLU,1LLU),_1b5a4a7db_Range16(506LLU,562LLU,2LLU),_1b5a4a7db_Range16(570LLU,571LLU,1LLU),_1b5a4a7db_Range16(573LLU,574LLU,1LLU),_1b5a4a7db_Range16(577LLU,579LLU,2LLU),_1b5a4a7db_Range16(580LLU,582LLU,1LLU),_1b5a4a7db_Range16(584LLU,590LLU,2LLU),_1b5a4a7db_Range16(837LLU,880LLU,43LLU),_1b5a4a7db_Range16(882LLU,886LLU,4LLU),_1b5a4a7db_Range16(895LLU,902LLU,7LLU),_1b5a4a7db_Range16(904LLU,906LLU,1LLU),_1b5a4a7db_Range16(908LLU,910LLU,2LLU),_1b5a4a7db_Range16(911LLU,913LLU,2LLU),_1b5a4a7db_Range16(914LLU,929LLU,1LLU),_1b5a4a7db_Range16(931LLU,939LLU,1LLU),_1b5a4a7db_Range16(975LLU,984LLU,9LLU),_1b5a4a7db_Range16(986LLU,1006LLU,2LLU),_1b5a4a7db_Range16(1012LLU,1015LLU,3LLU),_1b5a4a7db_Range16(1017LLU,1018LLU,1LLU),_1b5a4a7db_Range16(1021LLU,1071LLU,1LLU),_1b5a4a7db_Range16(1120LLU,1152LLU,2LLU),_1b5a4a7db_Range16(1162LLU,1216LLU,2LLU),_1b5a4a7db_Range16(1217LLU,1229LLU,2LLU),_1b5a4a7db_Range16(1232LLU,1326LLU,2LLU),_1b5a4a7db_Range16(1329LLU,1366LLU,1LLU),_1b5a4a7db_Range16(4256LLU,4293LLU,1LLU),_1b5a4a7db_Range16(4295LLU,4301LLU,6LLU),_1b5a4a7db_Range16(5024LLU,5109LLU,1LLU),_1b5a4a7db_Range16(7312LLU,7354LLU,1LLU),_1b5a4a7db_Range16(7357LLU,7359LLU,1LLU),_1b5a4a7db_Range16(7680LLU,7828LLU,2LLU),_1b5a4a7db_Range16(7838LLU,7934LLU,2LLU),_1b5a4a7db_Range16(7944LLU,7951LLU,1LLU),_1b5a4a7db_Range16(7960LLU,7965LLU,1LLU),_1b5a4a7db_Range16(7976LLU,7983LLU,1LLU),_1b5a4a7db_Range16(7992LLU,7999LLU,1LLU),_1b5a4a7db_Range16(8008LLU,8013LLU,1LLU),_1b5a4a7db_Range16(8025LLU,8031LLU,2LLU),_1b5a4a7db_Range16(8040LLU,8047LLU,1LLU),_1b5a4a7db_Range16(8072LLU,8079LLU,1LLU),_1b5a4a7db_Range16(8088LLU,8095LLU,1LLU),_1b5a4a7db_Range16(8104LLU,8111LLU,1LLU),_1b5a4a7db_Range16(8120LLU,8124LLU,1LLU),_1b5a4a7db_Range16(8136LLU,8140LLU,1LLU),_1b5a4a7db_Range16(8152LLU,8155LLU,1LLU),_1b5a4a7db_Range16(8168LLU,8172LLU,1LLU),_1b5a4a7db_Range16(8184LLU,8188LLU,1LLU),_1b5a4a7db_Range16(8486LLU,8490LLU,4LLU),_1b5a4a7db_Range16(8491LLU,8498LLU,7LLU),_1b5a4a7db_Range16(8579LLU,11264LLU,2685LLU),_1b5a4a7db_Range16(11265LLU,11311LLU,1LLU),_1b5a4a7db_Range16(11360LLU,11362LLU,2LLU),_1b5a4a7db_Range16(11363LLU,11364LLU,1LLU),_1b5a4a7db_Range16(11367LLU,11373LLU,2LLU),_1b5a4a7db_Range16(11374LLU,11376LLU,1LLU),_1b5a4a7db_Range16(11378LLU,11381LLU,3LLU),_1b5a4a7db_Range16(11390LLU,11392LLU,1LLU),_1b5a4a7db_Range16(11394LLU,11490LLU,2LLU),_1b5a4a7db_Range16(11499LLU,11501LLU,2LLU),_1b5a4a7db_Range16(11506LLU,42560LLU,31054LLU),_1b5a4a7db_Range16(42562LLU,42604LLU,2LLU),_1b5a4a7db_Range16(42624LLU,42650LLU,2LLU),_1b5a4a7db_Range16(42786LLU,42798LLU,2LLU),_1b5a4a7db_Range16(42802LLU,42862LLU,2LLU),_1b5a4a7db_Range16(42873LLU,42877LLU,2LLU),_1b5a4a7db_Range16(42878LLU,42886LLU,2LLU),_1b5a4a7db_Range16(42891LLU,42893LLU,2LLU),_1b5a4a7db_Range16(42896LLU,42898LLU,2LLU),_1b5a4a7db_Range16(42902LLU,42922LLU,2LLU),_1b5a4a7db_Range16(42923LLU,42926LLU,1LLU),_1b5a4a7db_Range16(42928LLU,42932LLU,1LLU),_1b5a4a7db_Range16(42934LLU,42948LLU,2LLU),_1b5a4a7db_Range16(42949LLU,42951LLU,1LLU),_1b5a4a7db_Range16(42953LLU,42960LLU,7LLU),_1b5a4a7db_Range16(42966LLU,42968LLU,2LLU),_1b5a4a7db_Range16(42997LLU,65313LLU,22316LLU),_1b5a4a7db_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66560LLU,66599LLU,1LLU),_1b5a4a7db_Range32(66736LLU,66771LLU,1LLU),_1b5a4a7db_Range32(66928LLU,66938LLU,1LLU),_1b5a4a7db_Range32(66940LLU,66954LLU,1LLU),_1b5a4a7db_Range32(66956LLU,66962LLU,1LLU),_1b5a4a7db_Range32(66964LLU,66965LLU,1LLU),_1b5a4a7db_Range32(68736LLU,68786LLU,1LLU),_1b5a4a7db_Range32(71840LLU,71871LLU,1LLU),_1b5a4a7db_Range32(93760LLU,93791LLU,1LLU),_1b5a4a7db_Range32(125184LLU,125217LLU,1LLU)}),3LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_FOLD_LT = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(452LLU,454LLU,2LLU),_1b5a4a7db_Range16(455LLU,457LLU,2LLU),_1b5a4a7db_Range16(458LLU,460LLU,2LLU),_1b5a4a7db_Range16(497LLU,499LLU,2LLU),_1b5a4a7db_Range16(8064LLU,8071LLU,1LLU),_1b5a4a7db_Range16(8080LLU,8087LLU,1LLU),_1b5a4a7db_Range16(8096LLU,8103LLU,1LLU),_1b5a4a7db_Range16(8115LLU,8131LLU,16LLU),_1b5a4a7db_Range16(8179LLU,8179LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_FOLD_LU = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(97LLU,122LLU,1LLU),_1b5a4a7db_Range16(181LLU,223LLU,42LLU),_1b5a4a7db_Range16(224LLU,246LLU,1LLU),_1b5a4a7db_Range16(248LLU,255LLU,1LLU),_1b5a4a7db_Range16(257LLU,303LLU,2LLU),_1b5a4a7db_Range16(307LLU,311LLU,2LLU),_1b5a4a7db_Range16(314LLU,328LLU,2LLU),_1b5a4a7db_Range16(331LLU,375LLU,2LLU),_1b5a4a7db_Range16(378LLU,382LLU,2LLU),_1b5a4a7db_Range16(383LLU,384LLU,1LLU),_1b5a4a7db_Range16(387LLU,389LLU,2LLU),_1b5a4a7db_Range16(392LLU,396LLU,4LLU),_1b5a4a7db_Range16(402LLU,405LLU,3LLU),_1b5a4a7db_Range16(409LLU,410LLU,1LLU),_1b5a4a7db_Range16(414LLU,417LLU,3LLU),_1b5a4a7db_Range16(419LLU,421LLU,2LLU),_1b5a4a7db_Range16(424LLU,429LLU,5LLU),_1b5a4a7db_Range16(432LLU,436LLU,4LLU),_1b5a4a7db_Range16(438LLU,441LLU,3LLU),_1b5a4a7db_Range16(445LLU,447LLU,2LLU),_1b5a4a7db_Range16(453LLU,454LLU,1LLU),_1b5a4a7db_Range16(456LLU,457LLU,1LLU),_1b5a4a7db_Range16(459LLU,460LLU,1LLU),_1b5a4a7db_Range16(462LLU,476LLU,2LLU),_1b5a4a7db_Range16(477LLU,495LLU,2LLU),_1b5a4a7db_Range16(498LLU,499LLU,1LLU),_1b5a4a7db_Range16(501LLU,505LLU,4LLU),_1b5a4a7db_Range16(507LLU,543LLU,2LLU),_1b5a4a7db_Range16(547LLU,563LLU,2LLU),_1b5a4a7db_Range16(572LLU,575LLU,3LLU),_1b5a4a7db_Range16(576LLU,578LLU,2LLU),_1b5a4a7db_Range16(583LLU,591LLU,2LLU),_1b5a4a7db_Range16(592LLU,596LLU,1LLU),_1b5a4a7db_Range16(598LLU,599LLU,1LLU),_1b5a4a7db_Range16(601LLU,603LLU,2LLU),_1b5a4a7db_Range16(604LLU,608LLU,4LLU),_1b5a4a7db_Range16(609LLU,613LLU,2LLU),_1b5a4a7db_Range16(614LLU,616LLU,2LLU),_1b5a4a7db_Range16(617LLU,620LLU,1LLU),_1b5a4a7db_Range16(623LLU,625LLU,2LLU),_1b5a4a7db_Range16(626LLU,629LLU,3LLU),_1b5a4a7db_Range16(637LLU,640LLU,3LLU),_1b5a4a7db_Range16(642LLU,643LLU,1LLU),_1b5a4a7db_Range16(647LLU,652LLU,1LLU),_1b5a4a7db_Range16(658LLU,669LLU,11LLU),_1b5a4a7db_Range16(670LLU,837LLU,167LLU),_1b5a4a7db_Range16(881LLU,883LLU,2LLU),_1b5a4a7db_Range16(887LLU,891LLU,4LLU),_1b5a4a7db_Range16(892LLU,893LLU,1LLU),_1b5a4a7db_Range16(940LLU,943LLU,1LLU),_1b5a4a7db_Range16(945LLU,974LLU,1LLU),_1b5a4a7db_Range16(976LLU,977LLU,1LLU),_1b5a4a7db_Range16(981LLU,983LLU,1LLU),_1b5a4a7db_Range16(985LLU,1007LLU,2LLU),_1b5a4a7db_Range16(1008LLU,1011LLU,1LLU),_1b5a4a7db_Range16(1013LLU,1019LLU,3LLU),_1b5a4a7db_Range16(1072LLU,1119LLU,1LLU),_1b5a4a7db_Range16(1121LLU,1153LLU,2LLU),_1b5a4a7db_Range16(1163LLU,1215LLU,2LLU),_1b5a4a7db_Range16(1218LLU,1230LLU,2LLU),_1b5a4a7db_Range16(1231LLU,1327LLU,2LLU),_1b5a4a7db_Range16(1377LLU,1414LLU,1LLU),_1b5a4a7db_Range16(4304LLU,4346LLU,1LLU),_1b5a4a7db_Range16(4349LLU,4351LLU,1LLU),_1b5a4a7db_Range16(5112LLU,5117LLU,1LLU),_1b5a4a7db_Range16(7296LLU,7304LLU,1LLU),_1b5a4a7db_Range16(7545LLU,7549LLU,4LLU),_1b5a4a7db_Range16(7566LLU,7681LLU,115LLU),_1b5a4a7db_Range16(7683LLU,7829LLU,2LLU),_1b5a4a7db_Range16(7835LLU,7841LLU,6LLU),_1b5a4a7db_Range16(7843LLU,7935LLU,2LLU),_1b5a4a7db_Range16(7936LLU,7943LLU,1LLU),_1b5a4a7db_Range16(7952LLU,7957LLU,1LLU),_1b5a4a7db_Range16(7968LLU,7975LLU,1LLU),_1b5a4a7db_Range16(7984LLU,7991LLU,1LLU),_1b5a4a7db_Range16(8000LLU,8005LLU,1LLU),_1b5a4a7db_Range16(8017LLU,8023LLU,2LLU),_1b5a4a7db_Range16(8032LLU,8039LLU,1LLU),_1b5a4a7db_Range16(8048LLU,8061LLU,1LLU),_1b5a4a7db_Range16(8112LLU,8113LLU,1LLU),_1b5a4a7db_Range16(8126LLU,8144LLU,18LLU),_1b5a4a7db_Range16(8145LLU,8160LLU,15LLU),_1b5a4a7db_Range16(8161LLU,8165LLU,4LLU),_1b5a4a7db_Range16(8526LLU,8580LLU,54LLU),_1b5a4a7db_Range16(11312LLU,11359LLU,1LLU),_1b5a4a7db_Range16(11361LLU,11365LLU,4LLU),_1b5a4a7db_Range16(11366LLU,11372LLU,2LLU),_1b5a4a7db_Range16(11379LLU,11382LLU,3LLU),_1b5a4a7db_Range16(11393LLU,11491LLU,2LLU),_1b5a4a7db_Range16(11500LLU,11502LLU,2LLU),_1b5a4a7db_Range16(11507LLU,11520LLU,13LLU),_1b5a4a7db_Range16(11521LLU,11557LLU,1LLU),_1b5a4a7db_Range16(11559LLU,11565LLU,6LLU),_1b5a4a7db_Range16(42561LLU,42605LLU,2LLU),_1b5a4a7db_Range16(42625LLU,42651LLU,2LLU),_1b5a4a7db_Range16(42787LLU,42799LLU,2LLU),_1b5a4a7db_Range16(42803LLU,42863LLU,2LLU),_1b5a4a7db_Range16(42874LLU,42876LLU,2LLU),_1b5a4a7db_Range16(42879LLU,42887LLU,2LLU),_1b5a4a7db_Range16(42892LLU,42897LLU,5LLU),_1b5a4a7db_Range16(42899LLU,42900LLU,1LLU),_1b5a4a7db_Range16(42903LLU,42921LLU,2LLU),_1b5a4a7db_Range16(42933LLU,42947LLU,2LLU),_1b5a4a7db_Range16(42952LLU,42954LLU,2LLU),_1b5a4a7db_Range16(42961LLU,42967LLU,6LLU),_1b5a4a7db_Range16(42969LLU,42998LLU,29LLU),_1b5a4a7db_Range16(43859LLU,43888LLU,29LLU),_1b5a4a7db_Range16(43889LLU,43967LLU,1LLU),_1b5a4a7db_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>({_1b5a4a7db_Range32(66600LLU,66639LLU,1LLU),_1b5a4a7db_Range32(66776LLU,66811LLU,1LLU),_1b5a4a7db_Range32(66967LLU,66977LLU,1LLU),_1b5a4a7db_Range32(66979LLU,66993LLU,1LLU),_1b5a4a7db_Range32(66995LLU,67001LLU,1LLU),_1b5a4a7db_Range32(67003LLU,67004LLU,1LLU),_1b5a4a7db_Range32(68800LLU,68850LLU,1LLU),_1b5a4a7db_Range32(71872LLU,71903LLU,1LLU),_1b5a4a7db_Range32(93792LLU,93823LLU,1LLU),_1b5a4a7db_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_FOLD_M = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(921LLU,953LLU,32LLU),_1b5a4a7db_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_FOLD_MN = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(921LLU,953LLU,32LLU),_1b5a4a7db_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_FOLD_COMMON = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(924LLU,956LLU,32LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_FOLD_GREEK = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(181LLU,837LLU,656LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_FOLD_INHERITED = jule::new_struct<_1b5a4a7db_RangeTable>(new( std::nothrow ) _1b5a4a7db_RangeTable(jule::Slice<_1b5a4a7db_Range16>({_1b5a4a7db_Range16(921LLU,953LLU,32LLU),_1b5a4a7db_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1b5a4a7db_Range32>(),jule::Int()));
static jule::Array<jule::I32,33> _1ce35e3a0_PUNCTS = jule::Array<jule::I32,33>({'!','#','$',',','.','\'','\"',':',';','<','>','=','?','-','+','*','(',')','[',']','{','}','%','&','/','\\','@','^','_','`','|','~',166LL});
static jule::Array<jule::I32,5> _1ce35e3a0_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _1ce35e3a0_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,13> _1ce35e3a0_BIN_OPS = jule::Array<jule::Str,13>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("!", 1),jule::Str("&&", 2),jule::Str("||", 2)});
static jule::Array<jule::Str,2> _1ce35e3a0_WEAK_OPS = jule::Array<jule::Str,2>({jule::Str("...", 3),jule::Str(":", 1)});
static jule::Array<jule::Str,2> _1ce35e3a0_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _1ce35e3a0_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_1ce494282_KindPair,46> _1ce494282_KEYWORDS = jule::Array<_1ce494282_KindPair,46>({_1ce494282_KindPair(jule::Str("i8", 2),1LLU),_1ce494282_KindPair(jule::Str("i16", 3),1LLU),_1ce494282_KindPair(jule::Str("i32", 3),1LLU),_1ce494282_KindPair(jule::Str("i64", 3),1LLU),_1ce494282_KindPair(jule::Str("u8", 2),1LLU),_1ce494282_KindPair(jule::Str("u16", 3),1LLU),_1ce494282_KindPair(jule::Str("u32", 3),1LLU),_1ce494282_KindPair(jule::Str("u64", 3),1LLU),_1ce494282_KindPair(jule::Str("f32", 3),1LLU),_1ce494282_KindPair(jule::Str("f64", 3),1LLU),_1ce494282_KindPair(jule::Str("uint", 4),1LLU),_1ce494282_KindPair(jule::Str("int", 3),1LLU),_1ce494282_KindPair(jule::Str("uintptr", 7),1LLU),_1ce494282_KindPair(jule::Str("bool", 4),1LLU),_1ce494282_KindPair(jule::Str("str", 3),1LLU),_1ce494282_KindPair(jule::Str("any", 3),1LLU),_1ce494282_KindPair(jule::Str("true", 4),6LLU),_1ce494282_KindPair(jule::Str("false", 5),6LLU),_1ce494282_KindPair(jule::Str("nil", 3),6LLU),_1ce494282_KindPair(jule::Str("const", 5),9LLU),_1ce494282_KindPair(jule::Str("ret", 3),4LLU),_1ce494282_KindPair(jule::Str("type", 4),10LLU),_1ce494282_KindPair(jule::Str("for", 3),12LLU),_1ce494282_KindPair(jule::Str("break", 5),13LLU),_1ce494282_KindPair(jule::Str("continue", 8),14LLU),_1ce494282_KindPair(jule::Str("in", 2),15LLU),_1ce494282_KindPair(jule::Str("if", 2),16LLU),_1ce494282_KindPair(jule::Str("else", 4),17LLU),_1ce494282_KindPair(jule::Str("use", 3),19LLU),_1ce494282_KindPair(jule::Str("pub", 3),21LLU),_1ce494282_KindPair(jule::Str("goto", 4),22LLU),_1ce494282_KindPair(jule::Str("enum", 4),24LLU),_1ce494282_KindPair(jule::Str("struct", 6),25LLU),_1ce494282_KindPair(jule::Str("co", 2),26LLU),_1ce494282_KindPair(jule::Str("match", 5),27LLU),_1ce494282_KindPair(jule::Str("self", 4),28LLU),_1ce494282_KindPair(jule::Str("trait", 5),29LLU),_1ce494282_KindPair(jule::Str("impl", 4),30LLU),_1ce494282_KindPair(jule::Str("cpp", 3),31LLU),_1ce494282_KindPair(jule::Str("fall", 4),32LLU),_1ce494282_KindPair(jule::Str("fn", 2),33LLU),_1ce494282_KindPair(jule::Str("let", 3),34LLU),_1ce494282_KindPair(jule::Str("unsafe", 6),35LLU),_1ce494282_KindPair(jule::Str("mut", 3),36LLU),_1ce494282_KindPair(jule::Str("defer", 5),37LLU),_1ce494282_KindPair(jule::Str("static", 6),38LLU)});
static jule::Array<_1ce494282_KindPair,38> _1ce494282_BASIC_OPS = jule::Array<_1ce494282_KindPair,38>({_1ce494282_KindPair(jule::Str("::", 2),23LLU),_1ce494282_KindPair(jule::Str(":", 1),11LLU),_1ce494282_KindPair(jule::Str(";", 1),5LLU),_1ce494282_KindPair(jule::Str(",", 1),8LLU),_1ce494282_KindPair(jule::Str("...", 3),7LLU),_1ce494282_KindPair(jule::Str(".", 1),20LLU),_1ce494282_KindPair(jule::Str("+=", 2),7LLU),_1ce494282_KindPair(jule::Str("-=", 2),7LLU),_1ce494282_KindPair(jule::Str("*=", 2),7LLU),_1ce494282_KindPair(jule::Str("/=", 2),7LLU),_1ce494282_KindPair(jule::Str("%=", 2),7LLU),_1ce494282_KindPair(jule::Str("<<=", 3),7LLU),_1ce494282_KindPair(jule::Str(">>=", 3),7LLU),_1ce494282_KindPair(jule::Str("^=", 2),7LLU),_1ce494282_KindPair(jule::Str("&=", 2),7LLU),_1ce494282_KindPair(jule::Str("|=", 2),7LLU),_1ce494282_KindPair(jule::Str("==", 2),7LLU),_1ce494282_KindPair(jule::Str("!=", 2),7LLU),_1ce494282_KindPair(jule::Str(">=", 2),7LLU),_1ce494282_KindPair(jule::Str("<=", 2),7LLU),_1ce494282_KindPair(jule::Str("&&", 2),7LLU),_1ce494282_KindPair(jule::Str("||", 2),7LLU),_1ce494282_KindPair(jule::Str("<<", 2),7LLU),_1ce494282_KindPair(jule::Str(">>", 2),7LLU),_1ce494282_KindPair(jule::Str("++", 2),7LLU),_1ce494282_KindPair(jule::Str("--", 2),7LLU),_1ce494282_KindPair(jule::Str("+", 1),7LLU),_1ce494282_KindPair(jule::Str("-", 1),7LLU),_1ce494282_KindPair(jule::Str("*", 1),7LLU),_1ce494282_KindPair(jule::Str("/", 1),7LLU),_1ce494282_KindPair(jule::Str("%", 1),7LLU),_1ce494282_KindPair(jule::Str("&", 1),7LLU),_1ce494282_KindPair(jule::Str("|", 1),7LLU),_1ce494282_KindPair(jule::Str("^", 1),7LLU),_1ce494282_KindPair(jule::Str("!", 1),7LLU),_1ce494282_KindPair(jule::Str("<", 1),7LLU),_1ce494282_KindPair(jule::Str(">", 1),7LLU),_1ce494282_KindPair(jule::Str("=", 1),7LLU)});
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_OUT = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns());
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_OUTLN = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns());
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_NEW = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns());
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_DROP = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns());
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_PANIC = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns());
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_MAKE = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns());
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_APPEND = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns());
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_RECOVER = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns());
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_CLONE = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns());
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns());
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns());
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns());
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_REAL = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>(),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_1b6069348_FnIns> _1b6c3ed86_BUILTIN_FN_COPY = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>(),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_1b6703d45_TypeAlias> _1b6c3ed86_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_1b6703d45_TypeAlias>(new( std::nothrow ) _1b6703d45_TypeAlias(jule::Ref<_1ce385d22_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1ce35e3a0_Token(),jule::Str(),jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_1b6703d45_TypeAlias> _1b6c3ed86_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_1b6703d45_TypeAlias>(new( std::nothrow ) _1b6703d45_TypeAlias(jule::Ref<_1ce385d22_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1ce35e3a0_Token(),jule::Str(),jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_1b61d7d79_Trait> _1b6c3ed86_BUILTIN_TRAIT_ERROR = jule::new_struct<_1b61d7d79_Trait>(new( std::nothrow ) _1b61d7d79_Trait(_1ce35e3a0_Token(),jule::Str("Error", 5),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1b6069348_Fn>>({jule::new_struct_ref<_1b6069348_Fn>(new( std::nothrow ) _1b6069348_Fn(jule::Ref<_1b622b76e_Sema>(),_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("error", 5),jule::Slice<jule::Ref<_1ce385d22_Directive>>(),jule::Str(),jule::Ref<_1ce385d22_ScopeTree>(),jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>(),jule::new_struct<_1b6069348_RetType>(new( std::nothrow ) _1b6069348_RetType(jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_1ce35e3a0_Token(),jule::Any(jule::new_struct<_1ce385d22_IdentTypeDecl>(new( std::nothrow ) _1ce385d22_IdentTypeDecl(_1ce35e3a0_Token(),jule::Str("str", 3),jule::Bool(),jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>()))))),jule::Ref<_1b6703d45_TypeKind>())),jule::Slice<_1ce35e3a0_Token>())),jule::Slice<jule::Ref<_1b6069348_Param>>({jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_1ce385eed_Struct>(),jule::Slice<jule::Ref<_1b6069348_FnIns>>()))}),jule::Slice<jule::Ref<_1ce385eed_Struct>>()));
static jule::Ref<_1b61d7d79_Trait> _1b6c3ed86_BUILTIN_TRAIT_DISPOSE = jule::new_struct<_1b61d7d79_Trait>(new( std::nothrow ) _1b61d7d79_Trait(_1ce35e3a0_Token(),jule::Str("Dispose", 7),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1b6069348_Fn>>({jule::new_struct_ref<_1b6069348_Fn>(new( std::nothrow ) _1b6069348_Fn(jule::Ref<_1b622b76e_Sema>(),_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("dispose", 7),jule::Slice<jule::Ref<_1ce385d22_Directive>>(),jule::Str(),jule::Ref<_1ce385d22_ScopeTree>(),jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>(),jule::Ref<_1b6069348_RetType>(),jule::Slice<jule::Ref<_1b6069348_Param>>({jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_1ce385eed_Struct>(),jule::Slice<jule::Ref<_1b6069348_FnIns>>()))}),jule::Slice<jule::Ref<_1ce385eed_Struct>>()));
static jule::Slice<jule::Str> _1cde565e6_FLAGS = nullptr;
static jule::Slice<jule::Any> _1e86aa7c0_deads = nullptr;
static jule::Slice<jule::Any> _1e86aa7c0_checking = nullptr;
static jule::Any _1e86aa7c0_current = jule::Any(nullptr);
static jule::Any _1e86aa7c0_main_current = jule::Any(nullptr);
static jule::Array<jule::Int,12> _1b72774ab_MDAYS = jule::Array<jule::Int,12>({31LL,30LL,31LL,30LL,31LL,31LL,30LL,31LL,30LL,31LL,31LL,29LL});
static jule::Slice<jule::U8> _1b710e497_INDENT = nullptr;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CUNEIFORM = _1ce5b689e__CUNEIFORM;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CYPRIOT = _1ce5b689e__CYPRIOT;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CYPRO_MINOAN = _1ce5b689e__CYPRO_MINOAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CYRILLIC = _1ce5b689e__CYRILLIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_DESERET = _1ce5b689e__DESERET;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_DEVANAGARI = _1ce5b689e__DEVANAGARI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_DIVES_AKURU = _1ce5b689e__DIVES_AKURU;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_DOGRA = _1ce5b689e__DOGRA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_DUPLOYAN = _1ce5b689e__DUPLOYAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_EGYPTIAN_HIEROGLYPHS = _1ce5b689e__EGYPTIAN_HIEROGLYPHS;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ELBASAN = _1ce5b689e__ELBASAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ELYMAIC = _1ce5b689e__ELYMAIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ETHIOPIC = _1ce5b689e__ETHIOPIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_GEORGIAN = _1ce5b689e__GEORGIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_GLAGOLITIC = _1ce5b689e__GLAGOLITIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_GOTHIC = _1ce5b689e__GOTHIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_GRANTHA = _1ce5b689e__GRANTHA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_GREEK = _1ce5b689e__GREEK;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_GUJARATI = _1ce5b689e__GUJARATI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_GUNJALA_GONDI = _1ce5b689e__GUNJALA_GONDI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_GURMUKHI = _1ce5b689e__GURMUKHI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_HAN = _1ce5b689e__HAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_HANGUL = _1ce5b689e__HANGUL;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_HANIFI_ROHINGYA = _1ce5b689e__HANIFI_ROHINGYA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_HANUNOO = _1ce5b689e__HANUNOO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_HATRAN = _1ce5b689e__HATRAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_HEBREW = _1ce5b689e__HEBREW;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_HIRAGANA = _1ce5b689e__HIRAGANA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_IMPERIAL_ARAMAIC = _1ce5b689e__IMPERIAL_ARAMAIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_INHERITED = _1ce5b689e__INHERITED;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_INSCRIPTIONAL_PAHLAVI = _1ce5b689e__INSCRIPTIONAL_PAHLAVI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_INSCRIPTIONAL_PARTHIAN = _1ce5b689e__INSCRIPTIONAL_PARTHIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_JAVANESE = _1ce5b689e__JAVANESE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_KAITHI = _1ce5b689e__KAITHI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_KANNADA = _1ce5b689e__KANNADA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_KATAKANA = _1ce5b689e__KATAKANA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_KAWI = _1ce5b689e__KAWI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_KAYAH_LI = _1ce5b689e__KAYAH_LI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_KHAROSHTHI = _1ce5b689e__KHAROSHTHI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_KHITAN_SMALL_SCRIPT = _1ce5b689e__KHITAN_SMALL_SCRIPT;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_KHMER = _1ce5b689e__KHMER;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_KHOJKI = _1ce5b689e__KHOJKI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_KHUDAWADI = _1ce5b689e__KHUDAWADI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LAO = _1ce5b689e__LAO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LATIN = _1ce5b689e__LATIN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LEPCHA = _1ce5b689e__LEPCHA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LIMBU = _1ce5b689e__LIMBU;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LINEAR_A = _1ce5b689e__LINEAR_A;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LINEAR_B = _1ce5b689e__LINEAR_B;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LISU = _1ce5b689e__LISU;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LYCIAN = _1ce5b689e__LYCIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LYDIAN = _1ce5b689e__LYDIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MAHAJANI = _1ce5b689e__MAHAJANI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MAKASAR = _1ce5b689e__MAKASAR;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MALAYALAM = _1ce5b689e__MALAYALAM;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MANDAIC = _1ce5b689e__MANDAIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MANICHAEAN = _1ce5b689e__MANICHAEAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MARCHEN = _1ce5b689e__MARCHEN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MASARAM_GONDI = _1ce5b689e__MASARAM_GONDI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MEDEFAIDRIN = _1ce5b689e__MEDEFAIDRIN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MEETEI_MAYEK = _1ce5b689e__MEETEI_MAYEK;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MENDE_KIKAKUI = _1ce5b689e__MENDE_KIKAKUI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MEROITIC_CURSIVE = _1ce5b689e__MEROITIC_CURSIVE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MEROITIC_HIEROGLYPHS = _1ce5b689e__MEROITIC_HIEROGLYPHS;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MIAO = _1ce5b689e__MIAO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MODI = _1ce5b689e__MODI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MONGOLIAN = _1ce5b689e__MONGOLIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MRO = _1ce5b689e__MRO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MULTANI = _1ce5b689e__MULTANI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MYANMAR = _1ce5b689e__MYANMAR;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_NABATAEAN = _1ce5b689e__NABATAEAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_NAG_MUNDARI = _1ce5b689e__NAG_MUNDARI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_NANDINAGARI = _1ce5b689e__NANDINAGARI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_NEW_TAI_LUE = _1ce5b689e__NEW_TAI_LUE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_NEWA = _1ce5b689e__NEWA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_NKO = _1ce5b689e__NKO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_NUSHU = _1ce5b689e__NUSHU;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_NYIAKENG_PUACHUE_HMONG = _1ce5b689e__NYIAKENG_PUACHUE_HMONG;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OGHAM = _1ce5b689e__OGHAM;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OL_CHIKI = _1ce5b689e__OL_CHIKI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OLD_HUNGARIAN = _1ce5b689e__OLD_HUNGARIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OLD_ITALIC = _1ce5b689e__OLD_ITALIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OLD_NORTH_ARABIAN = _1ce5b689e__OLD_NORTH_ARABIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OLD_PERMIC = _1ce5b689e__OLD_PERMIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OLD_PERSIAN = _1ce5b689e__OLD_PERSIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OLD_SOGDIAN = _1ce5b689e__OLD_SOGDIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OLD_SOUTH_ARABIAN = _1ce5b689e__OLD_SOUTH_ARABIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OLD_TURKIC = _1ce5b689e__OLD_TURKIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OLD_UYGHUR = _1ce5b689e__OLD_UYGHUR;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ORIYA = _1ce5b689e__ORIYA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OSAGE = _1ce5b689e__OSAGE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OSMANYA = _1ce5b689e__OSMANYA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PAHAWH_HMONG = _1ce5b689e__PAHAWH_HMONG;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PALMYRENE = _1ce5b689e__PALMYRENE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PAU_CIN_HAU = _1ce5b689e__PAU_CIN_HAU;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PHAGS_PA = _1ce5b689e__PHAGS_PA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PHOENICIAN = _1ce5b689e__PHOENICIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PSALTER_PAHLAVI = _1ce5b689e__PSALTER_PAHLAVI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_REJANG = _1ce5b689e__REJANG;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_RUNIC = _1ce5b689e__RUNIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SAMARITAN = _1ce5b689e__SAMARITAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SAURASHTRA = _1ce5b689e__SAURASHTRA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SHARADA = _1ce5b689e__SHARADA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SHAVIAN = _1ce5b689e__SHAVIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SIDDHAM = _1ce5b689e__SIDDHAM;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SIGN_WRITING = _1ce5b689e__SIGN_WRITING;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SINHALA = _1ce5b689e__SINHALA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SOGDIAN = _1ce5b689e__SOGDIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SORA_SOMPENG = _1ce5b689e__SORA_SOMPENG;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SOYOMBO = _1ce5b689e__SOYOMBO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SUNDANESE = _1ce5b689e__SUNDANESE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SYLOTI_NAGRI = _1ce5b689e__SYLOTI_NAGRI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SYRIAC = _1ce5b689e__SYRIAC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TAGALOG = _1ce5b689e__TAGALOG;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TAGBANWA = _1ce5b689e__TAGBANWA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TAI_LE = _1ce5b689e__TAI_LE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TAI_THAM = _1ce5b689e__TAI_THAM;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TAI_VIET = _1ce5b689e__TAI_VIET;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TAKRI = _1ce5b689e__TAKRI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TAMIL = _1ce5b689e__TAMIL;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TANGSA = _1ce5b689e__TANGSA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TANGUT = _1ce5b689e__TANGUT;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TELUGU = _1ce5b689e__TELUGU;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_THAANA = _1ce5b689e__THAANA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_THAI = _1ce5b689e__THAI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TIBETAN = _1ce5b689e__TIBETAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TIFINAGH = _1ce5b689e__TIFINAGH;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TIRHUTA = _1ce5b689e__TIRHUTA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TOTO = _1ce5b689e__TOTO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_UGARITIC = _1ce5b689e__UGARITIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_VAI = _1ce5b689e__VAI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_VITHKUQI = _1ce5b689e__VITHKUQI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_WANCHO = _1ce5b689e__WANCHO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_WARANG_CITI = _1ce5b689e__WARANG_CITI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_YEZIDI = _1ce5b689e__YEZIDI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_YI = _1ce5b689e__YI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ZANABAZAR_SQUARE = _1ce5b689e__ZANABAZAR_SQUARE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CC = _1ce5b689e__CC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CF = _1ce5b689e__CF;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CO = _1ce5b689e__CO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CS = _1ce5b689e__CS;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_DIGIT = _1ce5b689e__ND;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ND = _1ce5b689e__ND;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LETTER = _1ce5b689e__L;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_L = _1ce5b689e__L;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LM = _1ce5b689e__LM;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LO = _1ce5b689e__LO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LOWER = _1ce5b689e__LL;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LL = _1ce5b689e__LL;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MARK = _1ce5b689e__M;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_M = _1ce5b689e__M;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MC = _1ce5b689e__MC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ME = _1ce5b689e__ME;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_MN = _1ce5b689e__MN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_NL = _1ce5b689e__NL;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_NO = _1ce5b689e__NO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_NUMBER = _1ce5b689e__N;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_N = _1ce5b689e__N;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OTHER = _1ce5b689e__C;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_C = _1ce5b689e__C;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PC = _1ce5b689e__PC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PD = _1ce5b689e__PD;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PE = _1ce5b689e__PE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PF = _1ce5b689e__PF;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PI = _1ce5b689e__PI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PO = _1ce5b689e__PO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PS = _1ce5b689e__PS;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PUNCT = _1ce5b689e__P;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_P = _1ce5b689e__P;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SC = _1ce5b689e__SC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ASCII_HEX_DIGIT = _1ce5b689e__ASCII_HEX_DIGIT;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_BIDI_CONTROL = _1ce5b689e__BIDI_CONTROL;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_DASH = _1ce5b689e__DASH;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_DEPRECATED = _1ce5b689e__DEPRECATED;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_DIACRITIC = _1ce5b689e__DIACRITIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_EXTENDER = _1ce5b689e__EXTENDER;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_HEX_DIGIT = _1ce5b689e__HEX_DIGIT;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_HYPHEN = _1ce5b689e__HYPHEN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_IDS_BINARY_OPERATOR = _1ce5b689e__IDS_BINARY_OPERATOR;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_IDS_TRINARY_OPERATOR = _1ce5b689e__IDS_TRINARY_OPERATOR;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_IDEOGRAPHIC = _1ce5b689e__IDEOGRAPHIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_JOIN_CONTROL = _1ce5b689e__JOIN_CONTROL;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LOGICAL_ORDER_EXCEPTION = _1ce5b689e__LOGICAL_ORDER_EXCEPTION;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_NONCHARACTER_CODE_POINT = _1ce5b689e__NONCHARACTER_CODE_POINT;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OTHER_ALPHABETIC = _1ce5b689e__OTHER_ALPHABETIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OTHER_DEFAULT_IGNORABLE_CODE_POINT = _1ce5b689e__OTHER_DEFAULT_IGNORABLE_CODE_POINT;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OTHER_GRAPHEME_EXTEND = _1ce5b689e__OTHER_GRAPHEME_EXTEND;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OTHER_ID_CONTINUE = _1ce5b689e__OTHER_ID_CONTINUE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OTHER_ID_START = _1ce5b689e__OTHER_ID_START;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OTHER_LOWERCASE = _1ce5b689e__OTHER_LOWERCASE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OTHER_MATH = _1ce5b689e__OTHER_MATH;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_OTHER_UPPERCASE = _1ce5b689e__OTHER_UPPERCASE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PATTERN_SYNTAX = _1ce5b689e__PATTERN_SYNTAX;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PATTERN_WHITE_SPACE = _1ce5b689e__PATTERN_WHITE_SPACE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_PREPENDED_CONCATENATION_MARK = _1ce5b689e__PREPENDED_CONCATENATION_MARK;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_QUOTATION_MARK = _1ce5b689e__QUOTATION_MARK;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_RADICAL = _1ce5b689e__RADICAL;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_REGIONAL_INDICATOR = _1ce5b689e__REGIONAL_INDICATOR;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SENTENCE_TERMINAL = _1ce5b689e__SENTENCE_TERMINAL;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SOFT_DOTTED = _1ce5b689e__SOFT_DOTTED;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TERMINAL_PUNCTUATION = _1ce5b689e__TERMINAL_PUNCTUATION;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_UNIFIED_IDEOGRAPH = _1ce5b689e__UNIFIED_IDEOGRAPH;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_VARIATION_SELECTOR = _1ce5b689e__VARIATION_SELECTOR;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_WHITE_SPACE = _1ce5b689e__WHITE_SPACE;
static jule::Map<jule::Str,jule::Ref<_1b5a4a7db_RangeTable>> _1ce5b689e_PROPERTIES = jule::Map<jule::Str,jule::Ref<_1b5a4a7db_RangeTable>>({{jule::Str("ASCII_HEX_DIGIT", 15),_1ce5b689e_ASCII_HEX_DIGIT},{jule::Str("BIDI_CONTROL", 12),_1ce5b689e_BIDI_CONTROL},{jule::Str("DASH", 4),_1ce5b689e_DASH},{jule::Str("DEPRECATED", 10),_1ce5b689e_DEPRECATED},{jule::Str("DIACRITIC", 9),_1ce5b689e_DIACRITIC},{jule::Str("EXTENDER", 8),_1ce5b689e_EXTENDER},{jule::Str("HEX_DIGIT", 9),_1ce5b689e_HEX_DIGIT},{jule::Str("HYPHEN", 6),_1ce5b689e_HYPHEN},{jule::Str("IDS_BINARY_OPERATOR", 19),_1ce5b689e_IDS_BINARY_OPERATOR},{jule::Str("IDS_TRINARY_OPERATOR", 20),_1ce5b689e_IDS_TRINARY_OPERATOR},{jule::Str("IDEOGRAPHIC", 11),_1ce5b689e_IDEOGRAPHIC},{jule::Str("JOIN_CONTROL", 12),_1ce5b689e_JOIN_CONTROL},{jule::Str("LOGICAL_ORDER_EXCEPTION", 23),_1ce5b689e_LOGICAL_ORDER_EXCEPTION},{jule::Str("NONCHARACTER_CODE_POINT", 23),_1ce5b689e_NONCHARACTER_CODE_POINT},{jule::Str("OTHER_ALPHABETIC", 16),_1ce5b689e_OTHER_ALPHABETIC},{jule::Str("OTHER_DEFAULT_IGNORABLE_CODE_POINT", 34),_1ce5b689e_OTHER_DEFAULT_IGNORABLE_CODE_POINT},{jule::Str("OTHER_GRAPHEME_EXTEND", 21),_1ce5b689e_OTHER_GRAPHEME_EXTEND},{jule::Str("OTHER_ID_CONTINUE", 17),_1ce5b689e_OTHER_ID_CONTINUE},{jule::Str("OTHER_ID_START", 14),_1ce5b689e_OTHER_ID_START},{jule::Str("OTHER_LOWERCASE", 15),_1ce5b689e_OTHER_LOWERCASE},{jule::Str("OTHER_MATH", 10),_1ce5b689e_OTHER_MATH},{jule::Str("OTHER_UPPERCASE", 15),_1ce5b689e_OTHER_UPPERCASE},{jule::Str("PATTERN_SYNTAX", 14),_1ce5b689e_PATTERN_SYNTAX},{jule::Str("PATTERN_WHITE_SPACE", 19),_1ce5b689e_PATTERN_WHITE_SPACE},{jule::Str("PREPENDED_CONCATENATION_MARK", 28),_1ce5b689e_PREPENDED_CONCATENATION_MARK},{jule::Str("QUOTATION_MARK", 14),_1ce5b689e_QUOTATION_MARK},{jule::Str("RADICAL", 7),_1ce5b689e_RADICAL},{jule::Str("REGIONAL_INDICATOR", 18),_1ce5b689e_REGIONAL_INDICATOR},{jule::Str("SENTENCE_TERMINAL", 17),_1ce5b689e_SENTENCE_TERMINAL},{jule::Str("SOFT_DOTTED", 11),_1ce5b689e_SOFT_DOTTED},{jule::Str("TERMINAL_PUNCTUATION", 20),_1ce5b689e_TERMINAL_PUNCTUATION},{jule::Str("UNIFIED_IDEOGRAPH", 17),_1ce5b689e_UNIFIED_IDEOGRAPH},{jule::Str("VARIATION_SELECTOR", 18),_1ce5b689e_VARIATION_SELECTOR},{jule::Str("WHITE_SPACE", 11),_1ce5b689e_WHITE_SPACE}});
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SK = _1ce5b689e__SK;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SM = _1ce5b689e__SM;
static jule::Map<jule::Str,jule::Ref<_1b5a4a7db_RangeTable>> _1ce5b689e_FOLD_CATEGORY = jule::Map<jule::Str,jule::Ref<_1b5a4a7db_RangeTable>>({{jule::Str("L", 1),_1ce5b689e_FOLD_L},{jule::Str("LL", 2),_1ce5b689e_FOLD_LL},{jule::Str("LT", 2),_1ce5b689e_FOLD_LT},{jule::Str("LU", 2),_1ce5b689e_FOLD_LU},{jule::Str("M", 1),_1ce5b689e_FOLD_M},{jule::Str("MN", 2),_1ce5b689e_FOLD_MN}});
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SO = _1ce5b689e__SO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SPACE = _1ce5b689e__Z;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_Z = _1ce5b689e__Z;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_SYMBOL = _1ce5b689e__S;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_S = _1ce5b689e__S;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_TITLE = _1ce5b689e__LT;
static jule::Map<jule::Str,jule::Ref<_1b5a4a7db_RangeTable>> _1ce5b689e_FOLD_SCRIPT = jule::Map<jule::Str,jule::Ref<_1b5a4a7db_RangeTable>>({{jule::Str("Common", 6),_1ce5b689e_FOLD_COMMON},{jule::Str("Greek", 5),_1ce5b689e_FOLD_GREEK},{jule::Str("Inherited", 9),_1ce5b689e_FOLD_INHERITED}});
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LT = _1ce5b689e__LT;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_UPPER = _1ce5b689e__LU;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_LU = _1ce5b689e__LU;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ZL = _1ce5b689e__ZL;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ZP = _1ce5b689e__ZP;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ZS = _1ce5b689e__ZS;
static jule::Slice<jule::Ref<_1b5a4a7db_RangeTable>> _1ce55e54a_GRAPHIC_RANGES = jule::Slice<jule::Ref<_1b5a4a7db_RangeTable>>({_1ce5b689e_L,_1ce5b689e_M,_1ce5b689e_N,_1ce5b689e_P,_1ce5b689e_S,_1ce5b689e_ZS});
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ADLAM = _1ce5b689e__ADLAM;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_AHOM = _1ce5b689e__AHOM;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ANATOLIAN_HIEROGLYPHS = _1ce5b689e__ANATOLIAN_HIEROGLYPHS;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ARABIC = _1ce5b689e__ARABIC;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_ARMENIAN = _1ce5b689e__ARMENIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_AVESTAN = _1ce5b689e__AVESTAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_BALINESE = _1ce5b689e__BALINESE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_BAMUM = _1ce5b689e__BAMUM;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_BASSA_VAH = _1ce5b689e__BASSA_VAH;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_BATAK = _1ce5b689e__BATAK;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_BENGALI = _1ce5b689e__BENGALI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_BHAIKSUKI = _1ce5b689e__BHAIKSUKI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_BOPOMOFO = _1ce5b689e__BOPOMOFO;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_BRAHMI = _1ce5b689e__BRAHMI;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_BRAILLE = _1ce5b689e__BRAILLE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_BUGINESE = _1ce5b689e__BUGINESE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_BUHID = _1ce5b689e__BUHID;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CANADIAN_ABORIGINAL = _1ce5b689e__CANADIAN_ABORIGINAL;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CARIAN = _1ce5b689e__CARIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CAUCASIAN_ALBANIAN = _1ce5b689e__CAUCASIAN_ALBANIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CHAKMA = _1ce5b689e__CHAKMA;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CHAM = _1ce5b689e__CHAM;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CHEROKEE = _1ce5b689e__CHEROKEE;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_CHORASMIAN = _1ce5b689e__CHORASMIAN;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_COMMON = _1ce5b689e__COMMON;
static jule::Ref<_1b5a4a7db_RangeTable> _1ce5b689e_COPTIC = _1ce5b689e__COPTIC;
static jule::Array<jule::Array<jule::Str,2>,4> _1e765896c_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,4>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)})});
static jule::Map<jule::Str,jule::Ref<_1b5a4a7db_RangeTable>> _1ce5b689e_CATEGORIES = jule::Map<jule::Str,jule::Ref<_1b5a4a7db_RangeTable>>({{jule::Str("C", 1),_1ce5b689e_C},{jule::Str("CC", 2),_1ce5b689e_CC},{jule::Str("CF", 2),_1ce5b689e_CF},{jule::Str("CO", 2),_1ce5b689e_CO},{jule::Str("CS", 2),_1ce5b689e_CS},{jule::Str("L", 1),_1ce5b689e_L},{jule::Str("LL", 2),_1ce5b689e_LL},{jule::Str("LM", 2),_1ce5b689e_LM},{jule::Str("LO", 2),_1ce5b689e_LO},{jule::Str("LT", 2),_1ce5b689e_LT},{jule::Str("LU", 2),_1ce5b689e_LU},{jule::Str("M", 1),_1ce5b689e_M},{jule::Str("MC", 2),_1ce5b689e_MC},{jule::Str("ME", 2),_1ce5b689e_ME},{jule::Str("MN", 2),_1ce5b689e_MN},{jule::Str("N", 1),_1ce5b689e_N},{jule::Str("ND", 2),_1ce5b689e_ND},{jule::Str("NL", 2),_1ce5b689e_NL},{jule::Str("NO", 2),_1ce5b689e_NO},{jule::Str("P", 1),_1ce5b689e_P},{jule::Str("PC", 2),_1ce5b689e_PC},{jule::Str("PD", 2),_1ce5b689e_PD},{jule::Str("PE", 2),_1ce5b689e_PE},{jule::Str("PF", 2),_1ce5b689e_PF},{jule::Str("PI", 2),_1ce5b689e_PI},{jule::Str("PO", 2),_1ce5b689e_PO},{jule::Str("PS", 2),_1ce5b689e_PS},{jule::Str("S", 1),_1ce5b689e_S},{jule::Str("SC", 2),_1ce5b689e_SC},{jule::Str("SK", 2),_1ce5b689e_SK},{jule::Str("SM", 2),_1ce5b689e_SM},{jule::Str("SO", 2),_1ce5b689e_SO},{jule::Str("Z", 1),_1ce5b689e_Z},{jule::Str("ZL", 2),_1ce5b689e_ZL},{jule::Str("ZP", 2),_1ce5b689e_ZP},{jule::Str("ZS", 2),_1ce5b689e_ZS}});
static jule::Array<jule::U8,256> _1ce5b689e__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
static jule::Str _1ce039ac5_OS = jule::Str("linux", 5);
static jule::Slice<_1b5a4a7db_CaseRange> _1ce5b689e__CASE_RANGES = jule::Slice<_1b5a4a7db_CaseRange>({_1b5a4a7db_CaseRange(65LLU,90LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1b5a4a7db_CaseRange(97LLU,122LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1b5a4a7db_CaseRange(181LLU,181LLU,jule::Array<jule::I32,3>({743LL,0LL,743LL})),_1b5a4a7db_CaseRange(192LLU,214LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1b5a4a7db_CaseRange(216LLU,222LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1b5a4a7db_CaseRange(224LLU,246LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1b5a4a7db_CaseRange(248LLU,254LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1b5a4a7db_CaseRange(255LLU,255LLU,jule::Array<jule::I32,3>({121LL,0LL,121LL})),_1b5a4a7db_CaseRange(256LLU,303LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(304LLU,304LLU,jule::Array<jule::I32,3>({0LL,-199LL,0LL})),_1b5a4a7db_CaseRange(305LLU,305LLU,jule::Array<jule::I32,3>({-232LL,0LL,-232LL})),_1b5a4a7db_CaseRange(306LLU,311LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(313LLU,328LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(330LLU,375LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(376LLU,376LLU,jule::Array<jule::I32,3>({0LL,-121LL,0LL})),_1b5a4a7db_CaseRange(377LLU,382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(383LLU,383LLU,jule::Array<jule::I32,3>({-300LL,0LL,-300LL})),_1b5a4a7db_CaseRange(384LLU,384LLU,jule::Array<jule::I32,3>({195LL,0LL,195LL})),_1b5a4a7db_CaseRange(385LLU,385LLU,jule::Array<jule::I32,3>({0LL,210LL,0LL})),_1b5a4a7db_CaseRange(386LLU,389LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(390LLU,390LLU,jule::Array<jule::I32,3>({0LL,206LL,0LL})),_1b5a4a7db_CaseRange(391LLU,392LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(393LLU,394LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_1b5a4a7db_CaseRange(395LLU,396LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(398LLU,398LLU,jule::Array<jule::I32,3>({0LL,79LL,0LL})),_1b5a4a7db_CaseRange(399LLU,399LLU,jule::Array<jule::I32,3>({0LL,202LL,0LL})),_1b5a4a7db_CaseRange(400LLU,400LLU,jule::Array<jule::I32,3>({0LL,203LL,0LL})),_1b5a4a7db_CaseRange(401LLU,402LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(403LLU,403LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_1b5a4a7db_CaseRange(404LLU,404LLU,jule::Array<jule::I32,3>({0LL,207LL,0LL})),_1b5a4a7db_CaseRange(405LLU,405LLU,jule::Array<jule::I32,3>({97LL,0LL,97LL})),_1b5a4a7db_CaseRange(406LLU,406LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_1b5a4a7db_CaseRange(407LLU,407LLU,jule::Array<jule::I32,3>({0LL,209LL,0LL})),_1b5a4a7db_CaseRange(408LLU,409LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(410LLU,410LLU,jule::Array<jule::I32,3>({163LL,0LL,163LL})),_1b5a4a7db_CaseRange(412LLU,412LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_1b5a4a7db_CaseRange(413LLU,413LLU,jule::Array<jule::I32,3>({0LL,213LL,0LL})),_1b5a4a7db_CaseRange(414LLU,414LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_1b5a4a7db_CaseRange(415LLU,415LLU,jule::Array<jule::I32,3>({0LL,214LL,0LL})),_1b5a4a7db_CaseRange(416LLU,421LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(422LLU,422LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1b5a4a7db_CaseRange(423LLU,424LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(425LLU,425LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1b5a4a7db_CaseRange(428LLU,429LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(430LLU,430LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1b5a4a7db_CaseRange(431LLU,432LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(433LLU,434LLU,jule::Array<jule::I32,3>({0LL,217LL,0LL})),_1b5a4a7db_CaseRange(435LLU,438LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(439LLU,439LLU,jule::Array<jule::I32,3>({0LL,219LL,0LL})),_1b5a4a7db_CaseRange(440LLU,441LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(444LLU,445LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(447LLU,447LLU,jule::Array<jule::I32,3>({56LL,0LL,56LL})),_1b5a4a7db_CaseRange(452LLU,452LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1b5a4a7db_CaseRange(453LLU,453LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1b5a4a7db_CaseRange(454LLU,454LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1b5a4a7db_CaseRange(455LLU,455LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1b5a4a7db_CaseRange(456LLU,456LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1b5a4a7db_CaseRange(457LLU,457LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1b5a4a7db_CaseRange(458LLU,458LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1b5a4a7db_CaseRange(459LLU,459LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1b5a4a7db_CaseRange(460LLU,460LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1b5a4a7db_CaseRange(461LLU,476LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(477LLU,477LLU,jule::Array<jule::I32,3>({-79LL,0LL,-79LL})),_1b5a4a7db_CaseRange(478LLU,495LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(497LLU,497LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1b5a4a7db_CaseRange(498LLU,498LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1b5a4a7db_CaseRange(499LLU,499LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1b5a4a7db_CaseRange(500LLU,501LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(502LLU,502LLU,jule::Array<jule::I32,3>({0LL,-97LL,0LL})),_1b5a4a7db_CaseRange(503LLU,503LLU,jule::Array<jule::I32,3>({0LL,-56LL,0LL})),_1b5a4a7db_CaseRange(504LLU,543LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(544LLU,544LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_1b5a4a7db_CaseRange(546LLU,563LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(570LLU,570LLU,jule::Array<jule::I32,3>({0LL,10795LL,0LL})),_1b5a4a7db_CaseRange(571LLU,572LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(573LLU,573LLU,jule::Array<jule::I32,3>({0LL,-163LL,0LL})),_1b5a4a7db_CaseRange(574LLU,574LLU,jule::Array<jule::I32,3>({0LL,10792LL,0LL})),_1b5a4a7db_CaseRange(575LLU,576LLU,jule::Array<jule::I32,3>({10815LL,0LL,10815LL})),_1b5a4a7db_CaseRange(577LLU,578LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(579LLU,579LLU,jule::Array<jule::I32,3>({0LL,-195LL,0LL})),_1b5a4a7db_CaseRange(580LLU,580LLU,jule::Array<jule::I32,3>({0LL,69LL,0LL})),_1b5a4a7db_CaseRange(581LLU,581LLU,jule::Array<jule::I32,3>({0LL,71LL,0LL})),_1b5a4a7db_CaseRange(582LLU,591LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(592LLU,592LLU,jule::Array<jule::I32,3>({10783LL,0LL,10783LL})),_1b5a4a7db_CaseRange(593LLU,593LLU,jule::Array<jule::I32,3>({10780LL,0LL,10780LL})),_1b5a4a7db_CaseRange(594LLU,594LLU,jule::Array<jule::I32,3>({10782LL,0LL,10782LL})),_1b5a4a7db_CaseRange(595LLU,595LLU,jule::Array<jule::I32,3>({-210LL,0LL,-210LL})),_1b5a4a7db_CaseRange(596LLU,596LLU,jule::Array<jule::I32,3>({-206LL,0LL,-206LL})),_1b5a4a7db_CaseRange(598LLU,599LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_1b5a4a7db_CaseRange(601LLU,601LLU,jule::Array<jule::I32,3>({-202LL,0LL,-202LL})),_1b5a4a7db_CaseRange(603LLU,603LLU,jule::Array<jule::I32,3>({-203LL,0LL,-203LL})),_1b5a4a7db_CaseRange(604LLU,604LLU,jule::Array<jule::I32,3>({42319LL,0LL,42319LL})),_1b5a4a7db_CaseRange(608LLU,608LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_1b5a4a7db_CaseRange(609LLU,609LLU,jule::Array<jule::I32,3>({42315LL,0LL,42315LL})),_1b5a4a7db_CaseRange(611LLU,611LLU,jule::Array<jule::I32,3>({-207LL,0LL,-207LL})),_1b5a4a7db_CaseRange(613LLU,613LLU,jule::Array<jule::I32,3>({42280LL,0LL,42280LL})),_1b5a4a7db_CaseRange(614LLU,614LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_1b5a4a7db_CaseRange(616LLU,616LLU,jule::Array<jule::I32,3>({-209LL,0LL,-209LL})),_1b5a4a7db_CaseRange(617LLU,617LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_1b5a4a7db_CaseRange(618LLU,618LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_1b5a4a7db_CaseRange(619LLU,619LLU,jule::Array<jule::I32,3>({10743LL,0LL,10743LL})),_1b5a4a7db_CaseRange(620LLU,620LLU,jule::Array<jule::I32,3>({42305LL,0LL,42305LL})),_1b5a4a7db_CaseRange(623LLU,623LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_1b5a4a7db_CaseRange(625LLU,625LLU,jule::Array<jule::I32,3>({10749LL,0LL,10749LL})),_1b5a4a7db_CaseRange(626LLU,626LLU,jule::Array<jule::I32,3>({-213LL,0LL,-213LL})),_1b5a4a7db_CaseRange(629LLU,629LLU,jule::Array<jule::I32,3>({-214LL,0LL,-214LL})),_1b5a4a7db_CaseRange(637LLU,637LLU,jule::Array<jule::I32,3>({10727LL,0LL,10727LL})),_1b5a4a7db_CaseRange(640LLU,640LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1b5a4a7db_CaseRange(642LLU,642LLU,jule::Array<jule::I32,3>({42307LL,0LL,42307LL})),_1b5a4a7db_CaseRange(643LLU,643LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1b5a4a7db_CaseRange(647LLU,647LLU,jule::Array<jule::I32,3>({42282LL,0LL,42282LL})),_1b5a4a7db_CaseRange(648LLU,648LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1b5a4a7db_CaseRange(649LLU,649LLU,jule::Array<jule::I32,3>({-69LL,0LL,-69LL})),_1b5a4a7db_CaseRange(650LLU,651LLU,jule::Array<jule::I32,3>({-217LL,0LL,-217LL})),_1b5a4a7db_CaseRange(652LLU,652LLU,jule::Array<jule::I32,3>({-71LL,0LL,-71LL})),_1b5a4a7db_CaseRange(658LLU,658LLU,jule::Array<jule::I32,3>({-219LL,0LL,-219LL})),_1b5a4a7db_CaseRange(669LLU,669LLU,jule::Array<jule::I32,3>({42261LL,0LL,42261LL})),_1b5a4a7db_CaseRange(670LLU,670LLU,jule::Array<jule::I32,3>({42258LL,0LL,42258LL})),_1b5a4a7db_CaseRange(837LLU,837LLU,jule::Array<jule::I32,3>({84LL,0LL,84LL})),_1b5a4a7db_CaseRange(880LLU,883LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(886LLU,887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(891LLU,893LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_1b5a4a7db_CaseRange(895LLU,895LLU,jule::Array<jule::I32,3>({0LL,116LL,0LL})),_1b5a4a7db_CaseRange(902LLU,902LLU,jule::Array<jule::I32,3>({0LL,38LL,0LL})),_1b5a4a7db_CaseRange(904LLU,906LLU,jule::Array<jule::I32,3>({0LL,37LL,0LL})),_1b5a4a7db_CaseRange(908LLU,908LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_1b5a4a7db_CaseRange(910LLU,911LLU,jule::Array<jule::I32,3>({0LL,63LL,0LL})),_1b5a4a7db_CaseRange(913LLU,929LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1b5a4a7db_CaseRange(931LLU,939LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1b5a4a7db_CaseRange(940LLU,940LLU,jule::Array<jule::I32,3>({-38LL,0LL,-38LL})),_1b5a4a7db_CaseRange(941LLU,943LLU,jule::Array<jule::I32,3>({-37LL,0LL,-37LL})),_1b5a4a7db_CaseRange(945LLU,961LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1b5a4a7db_CaseRange(962LLU,962LLU,jule::Array<jule::I32,3>({-31LL,0LL,-31LL})),_1b5a4a7db_CaseRange(963LLU,971LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1b5a4a7db_CaseRange(972LLU,972LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_1b5a4a7db_CaseRange(973LLU,974LLU,jule::Array<jule::I32,3>({-63LL,0LL,-63LL})),_1b5a4a7db_CaseRange(975LLU,975LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_1b5a4a7db_CaseRange(976LLU,976LLU,jule::Array<jule::I32,3>({-62LL,0LL,-62LL})),_1b5a4a7db_CaseRange(977LLU,977LLU,jule::Array<jule::I32,3>({-57LL,0LL,-57LL})),_1b5a4a7db_CaseRange(981LLU,981LLU,jule::Array<jule::I32,3>({-47LL,0LL,-47LL})),_1b5a4a7db_CaseRange(982LLU,982LLU,jule::Array<jule::I32,3>({-54LL,0LL,-54LL})),_1b5a4a7db_CaseRange(983LLU,983LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_1b5a4a7db_CaseRange(984LLU,1007LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(1008LLU,1008LLU,jule::Array<jule::I32,3>({-86LL,0LL,-86LL})),_1b5a4a7db_CaseRange(1009LLU,1009LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_1b5a4a7db_CaseRange(1010LLU,1010LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_1b5a4a7db_CaseRange(1011LLU,1011LLU,jule::Array<jule::I32,3>({-116LL,0LL,-116LL})),_1b5a4a7db_CaseRange(1012LLU,1012LLU,jule::Array<jule::I32,3>({0LL,-60LL,0LL})),_1b5a4a7db_CaseRange(1013LLU,1013LLU,jule::Array<jule::I32,3>({-96LL,0LL,-96LL})),_1b5a4a7db_CaseRange(1015LLU,1016LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(1017LLU,1017LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_1b5a4a7db_CaseRange(1018LLU,1019LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(1021LLU,1023LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_1b5a4a7db_CaseRange(1024LLU,1039LLU,jule::Array<jule::I32,3>({0LL,80LL,0LL})),_1b5a4a7db_CaseRange(1040LLU,1071LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1b5a4a7db_CaseRange(1072LLU,1103LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1b5a4a7db_CaseRange(1104LLU,1119LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_1b5a4a7db_CaseRange(1120LLU,1153LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(1162LLU,1215LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(1216LLU,1216LLU,jule::Array<jule::I32,3>({0LL,15LL,0LL})),_1b5a4a7db_CaseRange(1217LLU,1230LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(1231LLU,1231LLU,jule::Array<jule::I32,3>({-15LL,0LL,-15LL})),_1b5a4a7db_CaseRange(1232LLU,1327LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(1329LLU,1366LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_1b5a4a7db_CaseRange(1377LLU,1414LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_1b5a4a7db_CaseRange(4256LLU,4293LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1b5a4a7db_CaseRange(4295LLU,4295LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1b5a4a7db_CaseRange(4301LLU,4301LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1b5a4a7db_CaseRange(4304LLU,4346LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_1b5a4a7db_CaseRange(4349LLU,4351LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_1b5a4a7db_CaseRange(5024LLU,5103LLU,jule::Array<jule::I32,3>({0LL,38864LL,0LL})),_1b5a4a7db_CaseRange(5104LLU,5109LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_1b5a4a7db_CaseRange(5112LLU,5117LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_1b5a4a7db_CaseRange(7296LLU,7296LLU,jule::Array<jule::I32,3>({-6254LL,0LL,-6254LL})),_1b5a4a7db_CaseRange(7297LLU,7297LLU,jule::Array<jule::I32,3>({-6253LL,0LL,-6253LL})),_1b5a4a7db_CaseRange(7298LLU,7298LLU,jule::Array<jule::I32,3>({-6244LL,0LL,-6244LL})),_1b5a4a7db_CaseRange(7299LLU,7300LLU,jule::Array<jule::I32,3>({-6242LL,0LL,-6242LL})),_1b5a4a7db_CaseRange(7301LLU,7301LLU,jule::Array<jule::I32,3>({-6243LL,0LL,-6243LL})),_1b5a4a7db_CaseRange(7302LLU,7302LLU,jule::Array<jule::I32,3>({-6236LL,0LL,-6236LL})),_1b5a4a7db_CaseRange(7303LLU,7303LLU,jule::Array<jule::I32,3>({-6181LL,0LL,-6181LL})),_1b5a4a7db_CaseRange(7304LLU,7304LLU,jule::Array<jule::I32,3>({35266LL,0LL,35266LL})),_1b5a4a7db_CaseRange(7312LLU,7354LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_1b5a4a7db_CaseRange(7357LLU,7359LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_1b5a4a7db_CaseRange(7545LLU,7545LLU,jule::Array<jule::I32,3>({35332LL,0LL,35332LL})),_1b5a4a7db_CaseRange(7549LLU,7549LLU,jule::Array<jule::I32,3>({3814LL,0LL,3814LL})),_1b5a4a7db_CaseRange(7566LLU,7566LLU,jule::Array<jule::I32,3>({35384LL,0LL,35384LL})),_1b5a4a7db_CaseRange(7680LLU,7829LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(7835LLU,7835LLU,jule::Array<jule::I32,3>({-59LL,0LL,-59LL})),_1b5a4a7db_CaseRange(7838LLU,7838LLU,jule::Array<jule::I32,3>({0LL,-7615LL,0LL})),_1b5a4a7db_CaseRange(7840LLU,7935LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(7936LLU,7943LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(7944LLU,7951LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(7952LLU,7957LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(7960LLU,7965LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(7968LLU,7975LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(7976LLU,7983LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(7984LLU,7991LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(7992LLU,7999LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(8000LLU,8005LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(8008LLU,8013LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(8017LLU,8017LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(8019LLU,8019LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(8021LLU,8021LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(8023LLU,8023LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(8025LLU,8025LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(8027LLU,8027LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(8029LLU,8029LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(8031LLU,8031LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(8032LLU,8039LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(8040LLU,8047LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(8048LLU,8049LLU,jule::Array<jule::I32,3>({74LL,0LL,74LL})),_1b5a4a7db_CaseRange(8050LLU,8053LLU,jule::Array<jule::I32,3>({86LL,0LL,86LL})),_1b5a4a7db_CaseRange(8054LLU,8055LLU,jule::Array<jule::I32,3>({100LL,0LL,100LL})),_1b5a4a7db_CaseRange(8056LLU,8057LLU,jule::Array<jule::I32,3>({128LL,0LL,128LL})),_1b5a4a7db_CaseRange(8058LLU,8059LLU,jule::Array<jule::I32,3>({112LL,0LL,112LL})),_1b5a4a7db_CaseRange(8060LLU,8061LLU,jule::Array<jule::I32,3>({126LL,0LL,126LL})),_1b5a4a7db_CaseRange(8064LLU,8071LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(8072LLU,8079LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(8080LLU,8087LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(8088LLU,8095LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(8096LLU,8103LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(8104LLU,8111LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(8112LLU,8113LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(8115LLU,8115LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1b5a4a7db_CaseRange(8120LLU,8121LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(8122LLU,8123LLU,jule::Array<jule::I32,3>({0LL,-74LL,0LL})),_1b5a4a7db_CaseRange(8124LLU,8124LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1b5a4a7db_CaseRange(8126LLU,8126LLU,jule::Array<jule::I32,3>({-7205LL,0LL,-7205LL})),_1b5a4a7db_CaseRange(8131LLU,8131LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1b5a4a7db_CaseRange(8136LLU,8139LLU,jule::Array<jule::I32,3>({0LL,-86LL,0LL})),_1b5a4a7db_CaseRange(8140LLU,8140LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1b5a4a7db_CaseRange(8144LLU,8145LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(8152LLU,8153LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(8154LLU,8155LLU,jule::Array<jule::I32,3>({0LL,-100LL,0LL})),_1b5a4a7db_CaseRange(8160LLU,8161LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1b5a4a7db_CaseRange(8165LLU,8165LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_1b5a4a7db_CaseRange(8168LLU,8169LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1b5a4a7db_CaseRange(8170LLU,8171LLU,jule::Array<jule::I32,3>({0LL,-112LL,0LL})),_1b5a4a7db_CaseRange(8172LLU,8172LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_1b5a4a7db_CaseRange(8179LLU,8179LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1b5a4a7db_CaseRange(8184LLU,8185LLU,jule::Array<jule::I32,3>({0LL,-128LL,0LL})),_1b5a4a7db_CaseRange(8186LLU,8187LLU,jule::Array<jule::I32,3>({0LL,-126LL,0LL})),_1b5a4a7db_CaseRange(8188LLU,8188LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1b5a4a7db_CaseRange(8486LLU,8486LLU,jule::Array<jule::I32,3>({0LL,-7517LL,0LL})),_1b5a4a7db_CaseRange(8490LLU,8490LLU,jule::Array<jule::I32,3>({0LL,-8383LL,0LL})),_1b5a4a7db_CaseRange(8491LLU,8491LLU,jule::Array<jule::I32,3>({0LL,-8262LL,0LL})),_1b5a4a7db_CaseRange(8498LLU,8498LLU,jule::Array<jule::I32,3>({0LL,28LL,0LL})),_1b5a4a7db_CaseRange(8526LLU,8526LLU,jule::Array<jule::I32,3>({-28LL,0LL,-28LL})),_1b5a4a7db_CaseRange(8544LLU,8559LLU,jule::Array<jule::I32,3>({0LL,16LL,0LL})),_1b5a4a7db_CaseRange(8560LLU,8575LLU,jule::Array<jule::I32,3>({-16LL,0LL,-16LL})),_1b5a4a7db_CaseRange(8579LLU,8580LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(9398LLU,9423LLU,jule::Array<jule::I32,3>({0LL,26LL,0LL})),_1b5a4a7db_CaseRange(9424LLU,9449LLU,jule::Array<jule::I32,3>({-26LL,0LL,-26LL})),_1b5a4a7db_CaseRange(11264LLU,11311LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_1b5a4a7db_CaseRange(11312LLU,11359LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_1b5a4a7db_CaseRange(11360LLU,11361LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(11362LLU,11362LLU,jule::Array<jule::I32,3>({0LL,-10743LL,0LL})),_1b5a4a7db_CaseRange(11363LLU,11363LLU,jule::Array<jule::I32,3>({0LL,-3814LL,0LL})),_1b5a4a7db_CaseRange(11364LLU,11364LLU,jule::Array<jule::I32,3>({0LL,-10727LL,0LL})),_1b5a4a7db_CaseRange(11365LLU,11365LLU,jule::Array<jule::I32,3>({-10795LL,0LL,-10795LL})),_1b5a4a7db_CaseRange(11366LLU,11366LLU,jule::Array<jule::I32,3>({-10792LL,0LL,-10792LL})),_1b5a4a7db_CaseRange(11367LLU,11372LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(11373LLU,11373LLU,jule::Array<jule::I32,3>({0LL,-10780LL,0LL})),_1b5a4a7db_CaseRange(11374LLU,11374LLU,jule::Array<jule::I32,3>({0LL,-10749LL,0LL})),_1b5a4a7db_CaseRange(11375LLU,11375LLU,jule::Array<jule::I32,3>({0LL,-10783LL,0LL})),_1b5a4a7db_CaseRange(11376LLU,11376LLU,jule::Array<jule::I32,3>({0LL,-10782LL,0LL})),_1b5a4a7db_CaseRange(11378LLU,11379LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(11381LLU,11382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(11390LLU,11391LLU,jule::Array<jule::I32,3>({0LL,-10815LL,0LL})),_1b5a4a7db_CaseRange(11392LLU,11491LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(11499LLU,11502LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(11506LLU,11507LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(11520LLU,11557LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1b5a4a7db_CaseRange(11559LLU,11559LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1b5a4a7db_CaseRange(11565LLU,11565LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1b5a4a7db_CaseRange(42560LLU,42605LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(42624LLU,42651LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(42786LLU,42799LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(42802LLU,42863LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(42873LLU,42876LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(42877LLU,42877LLU,jule::Array<jule::I32,3>({0LL,-35332LL,0LL})),_1b5a4a7db_CaseRange(42878LLU,42887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(42891LLU,42892LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(42893LLU,42893LLU,jule::Array<jule::I32,3>({0LL,-42280LL,0LL})),_1b5a4a7db_CaseRange(42896LLU,42899LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(42900LLU,42900LLU,jule::Array<jule::I32,3>({48LL,0LL,48LL})),_1b5a4a7db_CaseRange(42902LLU,42921LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(42922LLU,42922LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_1b5a4a7db_CaseRange(42923LLU,42923LLU,jule::Array<jule::I32,3>({0LL,-42319LL,0LL})),_1b5a4a7db_CaseRange(42924LLU,42924LLU,jule::Array<jule::I32,3>({0LL,-42315LL,0LL})),_1b5a4a7db_CaseRange(42925LLU,42925LLU,jule::Array<jule::I32,3>({0LL,-42305LL,0LL})),_1b5a4a7db_CaseRange(42926LLU,42926LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_1b5a4a7db_CaseRange(42928LLU,42928LLU,jule::Array<jule::I32,3>({0LL,-42258LL,0LL})),_1b5a4a7db_CaseRange(42929LLU,42929LLU,jule::Array<jule::I32,3>({0LL,-42282LL,0LL})),_1b5a4a7db_CaseRange(42930LLU,42930LLU,jule::Array<jule::I32,3>({0LL,-42261LL,0LL})),_1b5a4a7db_CaseRange(42931LLU,42931LLU,jule::Array<jule::I32,3>({0LL,928LL,0LL})),_1b5a4a7db_CaseRange(42932LLU,42947LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(42948LLU,42948LLU,jule::Array<jule::I32,3>({0LL,-48LL,0LL})),_1b5a4a7db_CaseRange(42949LLU,42949LLU,jule::Array<jule::I32,3>({0LL,-42307LL,0LL})),_1b5a4a7db_CaseRange(42950LLU,42950LLU,jule::Array<jule::I32,3>({0LL,-35384LL,0LL})),_1b5a4a7db_CaseRange(42951LLU,42954LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(42960LLU,42961LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(42966LLU,42969LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(42997LLU,42998LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1b5a4a7db_CaseRange(43859LLU,43859LLU,jule::Array<jule::I32,3>({-928LL,0LL,-928LL})),_1b5a4a7db_CaseRange(43888LLU,43967LLU,jule::Array<jule::I32,3>({-38864LL,0LL,-38864LL})),_1b5a4a7db_CaseRange(65313LLU,65338LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1b5a4a7db_CaseRange(65345LLU,65370LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1b5a4a7db_CaseRange(66560LLU,66599LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_1b5a4a7db_CaseRange(66600LLU,66639LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_1b5a4a7db_CaseRange(66736LLU,66771LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_1b5a4a7db_CaseRange(66776LLU,66811LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_1b5a4a7db_CaseRange(66928LLU,66938LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1b5a4a7db_CaseRange(66940LLU,66954LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1b5a4a7db_CaseRange(66956LLU,66962LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1b5a4a7db_CaseRange(66964LLU,66965LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1b5a4a7db_CaseRange(66967LLU,66977LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1b5a4a7db_CaseRange(66979LLU,66993LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1b5a4a7db_CaseRange(66995LLU,67001LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1b5a4a7db_CaseRange(67003LLU,67004LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1b5a4a7db_CaseRange(68736LLU,68786LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_1b5a4a7db_CaseRange(68800LLU,68850LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_1b5a4a7db_CaseRange(71840LLU,71871LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1b5a4a7db_CaseRange(71872LLU,71903LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1b5a4a7db_CaseRange(93760LLU,93791LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1b5a4a7db_CaseRange(93792LLU,93823LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1b5a4a7db_CaseRange(125184LLU,125217LLU,jule::Array<jule::I32,3>({0LL,34LL,0LL})),_1b5a4a7db_CaseRange(125218LLU,125251LLU,jule::Array<jule::I32,3>({-34LL,0LL,-34LL}))});
static jule::Slice<_1b5a4a7db_CaseRange> _1ce5b689e_CASE_RANGES = _1ce5b689e__CASE_RANGES;
static jule::Array<jule::U8,256> _1ce629071_FIRST = jule::Array<jule::U8,256>({});
static jule::Array<_1ce629071_accept_range,16> _1ce629071_ACCEPT_RANGES = jule::Array<_1ce629071_accept_range,16>({_1ce629071_accept_range(128LLU,191LLU),_1ce629071_accept_range(160LLU,191LLU),_1ce629071_accept_range(128LLU,159LLU),_1ce629071_accept_range(144LLU,191LLU),_1ce629071_accept_range(128LLU,143LLU)});
static jule::Map<jule::Str,jule::Ref<_1b5a4a7db_RangeTable>> _1ce5b689e_SCRIPTS = jule::Map<jule::Str,jule::Ref<_1b5a4a7db_RangeTable>>({{jule::Str("Adlam", 5),_1ce5b689e_ADLAM},{jule::Str("Ahom", 4),_1ce5b689e_AHOM},{jule::Str("Anatolian_Hieroglyphs", 21),_1ce5b689e_ANATOLIAN_HIEROGLYPHS},{jule::Str("Arabic", 6),_1ce5b689e_ARABIC},{jule::Str("Armenian", 8),_1ce5b689e_ARMENIAN},{jule::Str("Avestan", 7),_1ce5b689e_AVESTAN},{jule::Str("Balinese", 8),_1ce5b689e_BALINESE},{jule::Str("Bamum", 5),_1ce5b689e_BAMUM},{jule::Str("Bassa_Vah", 9),_1ce5b689e_BASSA_VAH},{jule::Str("Batak", 5),_1ce5b689e_BATAK},{jule::Str("Bengali", 7),_1ce5b689e_BENGALI},{jule::Str("Bhaiksuki", 9),_1ce5b689e_BHAIKSUKI},{jule::Str("Bopomofo", 8),_1ce5b689e_BOPOMOFO},{jule::Str("Brahmi", 6),_1ce5b689e_BRAHMI},{jule::Str("Braille", 7),_1ce5b689e_BRAILLE},{jule::Str("Buginese", 8),_1ce5b689e_BUGINESE},{jule::Str("Buhid", 5),_1ce5b689e_BUHID},{jule::Str("Canadian_Aboriginal", 19),_1ce5b689e_CANADIAN_ABORIGINAL},{jule::Str("Carian", 6),_1ce5b689e_CARIAN},{jule::Str("Caucasian_Albanian", 18),_1ce5b689e_CAUCASIAN_ALBANIAN},{jule::Str("Chakma", 6),_1ce5b689e_CHAKMA},{jule::Str("Cham", 4),_1ce5b689e_CHAM},{jule::Str("Cherokee", 8),_1ce5b689e_CHEROKEE},{jule::Str("Chorasmian", 10),_1ce5b689e_CHORASMIAN},{jule::Str("Common", 6),_1ce5b689e_COMMON},{jule::Str("Coptic", 6),_1ce5b689e_COPTIC},{jule::Str("Cuneiform", 9),_1ce5b689e_CUNEIFORM},{jule::Str("Cypriot", 7),_1ce5b689e_CYPRIOT},{jule::Str("Cypro_Minoan", 12),_1ce5b689e_CYPRO_MINOAN},{jule::Str("Cyrillic", 8),_1ce5b689e_CYRILLIC},{jule::Str("Deseret", 7),_1ce5b689e_DESERET},{jule::Str("Devanagari", 10),_1ce5b689e_DEVANAGARI},{jule::Str("Dives_Akuru", 11),_1ce5b689e_DIVES_AKURU},{jule::Str("Dogra", 5),_1ce5b689e_DOGRA},{jule::Str("Duployan", 8),_1ce5b689e_DUPLOYAN},{jule::Str("Egyptian_Hieroglyphs", 20),_1ce5b689e_EGYPTIAN_HIEROGLYPHS},{jule::Str("Elbasan", 7),_1ce5b689e_ELBASAN},{jule::Str("Elymaic", 7),_1ce5b689e_ELYMAIC},{jule::Str("Ethiopic", 8),_1ce5b689e_ETHIOPIC},{jule::Str("Georgian", 8),_1ce5b689e_GEORGIAN},{jule::Str("Glagolitic", 10),_1ce5b689e_GLAGOLITIC},{jule::Str("Gothic", 6),_1ce5b689e_GOTHIC},{jule::Str("Grantha", 7),_1ce5b689e_GRANTHA},{jule::Str("Greek", 5),_1ce5b689e_GREEK},{jule::Str("Gujarati", 8),_1ce5b689e_GUJARATI},{jule::Str("Gunjala_Gondi", 13),_1ce5b689e_GUNJALA_GONDI},{jule::Str("Gurmukhi", 8),_1ce5b689e_GURMUKHI},{jule::Str("Han", 3),_1ce5b689e_HAN},{jule::Str("Hangul", 6),_1ce5b689e_HANGUL},{jule::Str("Hanifi_Rohingya", 15),_1ce5b689e_HANIFI_ROHINGYA},{jule::Str("Hanunoo", 7),_1ce5b689e_HANUNOO},{jule::Str("Hatran", 6),_1ce5b689e_HATRAN},{jule::Str("Hebrew", 6),_1ce5b689e_HEBREW},{jule::Str("Hiragana", 8),_1ce5b689e_HIRAGANA},{jule::Str("Imperial_Aramaic", 16),_1ce5b689e_IMPERIAL_ARAMAIC},{jule::Str("Inherited", 9),_1ce5b689e_INHERITED},{jule::Str("Inscriptional_Pahlavi", 21),_1ce5b689e_INSCRIPTIONAL_PAHLAVI},{jule::Str("Inscriptional_Parthian", 22),_1ce5b689e_INSCRIPTIONAL_PARTHIAN},{jule::Str("Javanese", 8),_1ce5b689e_JAVANESE},{jule::Str("Kaithi", 6),_1ce5b689e_KAITHI},{jule::Str("Kannada", 7),_1ce5b689e_KANNADA},{jule::Str("Katakana", 8),_1ce5b689e_KATAKANA},{jule::Str("Kawi", 4),_1ce5b689e_KAWI},{jule::Str("Kayah_Li", 8),_1ce5b689e_KAYAH_LI},{jule::Str("Kharoshthi", 10),_1ce5b689e_KHAROSHTHI},{jule::Str("Khitan_Small_Script", 19),_1ce5b689e_KHITAN_SMALL_SCRIPT},{jule::Str("Khmer", 5),_1ce5b689e_KHMER},{jule::Str("Khojki", 6),_1ce5b689e_KHOJKI},{jule::Str("Khudawadi", 9),_1ce5b689e_KHUDAWADI},{jule::Str("Lao", 3),_1ce5b689e_LAO},{jule::Str("Latin", 5),_1ce5b689e_LATIN},{jule::Str("Lepcha", 6),_1ce5b689e_LEPCHA},{jule::Str("Limbu", 5),_1ce5b689e_LIMBU},{jule::Str("Linear_A", 8),_1ce5b689e_LINEAR_A},{jule::Str("Linear_B", 8),_1ce5b689e_LINEAR_B},{jule::Str("Lisu", 4),_1ce5b689e_LISU},{jule::Str("Lycian", 6),_1ce5b689e_LYCIAN},{jule::Str("Lydian", 6),_1ce5b689e_LYDIAN},{jule::Str("Mahajani", 8),_1ce5b689e_MAHAJANI},{jule::Str("Makasar", 7),_1ce5b689e_MAKASAR},{jule::Str("Malayalam", 9),_1ce5b689e_MALAYALAM},{jule::Str("Mandaic", 7),_1ce5b689e_MANDAIC},{jule::Str("Manichaean", 10),_1ce5b689e_MANICHAEAN},{jule::Str("Marchen", 7),_1ce5b689e_MARCHEN},{jule::Str("Masaram_Gondi", 13),_1ce5b689e_MASARAM_GONDI},{jule::Str("Medefaidrin", 11),_1ce5b689e_MEDEFAIDRIN},{jule::Str("Meetei_Mayek", 12),_1ce5b689e_MEETEI_MAYEK},{jule::Str("Mende_Kikakui", 13),_1ce5b689e_MENDE_KIKAKUI},{jule::Str("Meroitic_Cursive", 16),_1ce5b689e_MEROITIC_CURSIVE},{jule::Str("Meroitic_Hieroglyphs", 20),_1ce5b689e_MEROITIC_HIEROGLYPHS},{jule::Str("Miao", 4),_1ce5b689e_MIAO},{jule::Str("Modi", 4),_1ce5b689e_MODI},{jule::Str("Mongolian", 9),_1ce5b689e_MONGOLIAN},{jule::Str("Mro", 3),_1ce5b689e_MRO},{jule::Str("Multani", 7),_1ce5b689e_MULTANI},{jule::Str("Myanmar", 7),_1ce5b689e_MYANMAR},{jule::Str("Nabataean", 9),_1ce5b689e_NABATAEAN},{jule::Str("Nag_Mundari", 11),_1ce5b689e_NAG_MUNDARI},{jule::Str("Nandinagari", 11),_1ce5b689e_NANDINAGARI},{jule::Str("New_Tai_Lue", 11),_1ce5b689e_NEW_TAI_LUE},{jule::Str("Newa", 4),_1ce5b689e_NEWA},{jule::Str("Nko", 3),_1ce5b689e_NKO},{jule::Str("Nushu", 5),_1ce5b689e_NUSHU},{jule::Str("Nyiakeng_Puachue_Hmong", 22),_1ce5b689e_NYIAKENG_PUACHUE_HMONG},{jule::Str("Ogham", 5),_1ce5b689e_OGHAM},{jule::Str("Ol_Chiki", 8),_1ce5b689e_OL_CHIKI},{jule::Str("Old_Hungarian", 13),_1ce5b689e_OLD_HUNGARIAN},{jule::Str("Old_Italic", 10),_1ce5b689e_OLD_ITALIC},{jule::Str("Old_North_Arabian", 17),_1ce5b689e_OLD_NORTH_ARABIAN},{jule::Str("Old_Permic", 10),_1ce5b689e_OLD_PERMIC},{jule::Str("Old_Persian", 11),_1ce5b689e_OLD_PERSIAN},{jule::Str("Old_Sogdian", 11),_1ce5b689e_OLD_SOGDIAN},{jule::Str("Old_South_Arabian", 17),_1ce5b689e_OLD_SOUTH_ARABIAN},{jule::Str("Old_Turkic", 10),_1ce5b689e_OLD_TURKIC},{jule::Str("Old_Uyghur", 10),_1ce5b689e_OLD_UYGHUR},{jule::Str("Oriya", 5),_1ce5b689e_ORIYA},{jule::Str("Osage", 5),_1ce5b689e_OSAGE},{jule::Str("Osmanya", 7),_1ce5b689e_OSMANYA},{jule::Str("Pahawh_Hmong", 12),_1ce5b689e_PAHAWH_HMONG},{jule::Str("Palmyrene", 9),_1ce5b689e_PALMYRENE},{jule::Str("Pau_Cin_Hau", 11),_1ce5b689e_PAU_CIN_HAU},{jule::Str("Phags_Pa", 8),_1ce5b689e_PHAGS_PA},{jule::Str("Phoenician", 10),_1ce5b689e_PHOENICIAN},{jule::Str("Psalter_Pahlavi", 15),_1ce5b689e_PSALTER_PAHLAVI},{jule::Str("Rejang", 6),_1ce5b689e_REJANG},{jule::Str("Runic", 5),_1ce5b689e_RUNIC},{jule::Str("Samaritan", 9),_1ce5b689e_SAMARITAN},{jule::Str("Saurashtra", 10),_1ce5b689e_SAURASHTRA},{jule::Str("Sharada", 7),_1ce5b689e_SHARADA},{jule::Str("Shavian", 7),_1ce5b689e_SHAVIAN},{jule::Str("Siddham", 7),_1ce5b689e_SIDDHAM},{jule::Str("SignWriting", 11),_1ce5b689e_SIGN_WRITING},{jule::Str("Sinhala", 7),_1ce5b689e_SINHALA},{jule::Str("Sogdian", 7),_1ce5b689e_SOGDIAN},{jule::Str("Sora_Sompeng", 12),_1ce5b689e_SORA_SOMPENG},{jule::Str("Soyombo", 7),_1ce5b689e_SOYOMBO},{jule::Str("Sundanese", 9),_1ce5b689e_SUNDANESE},{jule::Str("Syloti_Nagri", 12),_1ce5b689e_SYLOTI_NAGRI},{jule::Str("Syriac", 6),_1ce5b689e_SYRIAC},{jule::Str("Tagalog", 7),_1ce5b689e_TAGALOG},{jule::Str("Tagbanwa", 8),_1ce5b689e_TAGBANWA},{jule::Str("Tai_Le", 6),_1ce5b689e_TAI_LE},{jule::Str("Tai_Tham", 8),_1ce5b689e_TAI_THAM},{jule::Str("Tai_Viet", 8),_1ce5b689e_TAI_VIET},{jule::Str("Takri", 5),_1ce5b689e_TAKRI},{jule::Str("Tamil", 5),_1ce5b689e_TAMIL},{jule::Str("Tangsa", 6),_1ce5b689e_TANGSA},{jule::Str("Tangut", 6),_1ce5b689e_TANGUT},{jule::Str("Telugu", 6),_1ce5b689e_TELUGU},{jule::Str("Thaana", 6),_1ce5b689e_THAANA},{jule::Str("Thai", 4),_1ce5b689e_THAI},{jule::Str("Tibetan", 7),_1ce5b689e_TIBETAN},{jule::Str("Tifinagh", 8),_1ce5b689e_TIFINAGH},{jule::Str("Tirhuta", 7),_1ce5b689e_TIRHUTA},{jule::Str("Toto", 4),_1ce5b689e_TOTO},{jule::Str("Ugaritic", 8),_1ce5b689e_UGARITIC},{jule::Str("Vai", 3),_1ce5b689e_VAI},{jule::Str("Vithkuqi", 8),_1ce5b689e_VITHKUQI},{jule::Str("Wancho", 6),_1ce5b689e_WANCHO},{jule::Str("Warang_Citi", 11),_1ce5b689e_WARANG_CITI},{jule::Str("Yezidi", 6),_1ce5b689e_YEZIDI},{jule::Str("Yi", 2),_1ce5b689e_YI},{jule::Str("Zanabazar_Square", 16),_1ce5b689e_ZANABAZAR_SQUARE}});
static jule::Str _1ce039ac5_ARCH = jule::Str("i386", 4);

inline void _1e7673dc7_AnsiEscape::_static_method_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void _1e7673dc7_AnsiEscape::_static_method_print(jule::Str _2021_escape,jule::Str _2034_text) {
	jule::out(_2021_escape);
	jule::out(_2034_text);
	_1e7673dc7_AnsiEscape::_static_method_reset();
}







std::ostream &operator<<(std::ostream &_Stream, const _1e7673dc7_AnsiEscape &_Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void _1e7673dc7_Logger::_static_method_log_flat(_1e7690a81_Log& _3125_l) {
	jule::outln(_3125_l._field_text);
}



inline void _1e7673dc7_Logger::_static_method_log_error(_1e7690a81_Log& _3426_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_3426_l._field_text);
	_1e7673dc7_AnsiEscape::_static_method_reset();
	jule::out(jule::Str("\n  --> ", 7));
	jule::out(_3426_l._field_path);
	jule::out(jule::Str(":", 1));
	jule::out(_1e86edbba_itoa(_3426_l._field_row));
	jule::out(jule::Str(":", 1));
	jule::out(_1e86edbba_itoa(_3426_l._field_column));
	if (_3426_l._field_line.len() != 0LL) {
		jule::Str _4721_line = _3426_l._field_line.ltrim(jule::Str("\r\n\v\b ", 5));
		jule::I64 _4821_offset = (_3426_l._field_line.len() - _4721_line.len()) + 1LL;
		jule::I64 _4921_old_len = _4721_line.len();
		_4721_line=_4721_line.ltrim(jule::Str("\t", 1));
		if (_4921_old_len != _4721_line.len()) {
			_4821_offset+=static_cast<jule::I64>((_4921_old_len - _4721_line.len()) * 8LL);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _5517_row = _1e86edbba_itoa(_3426_l._field_row);
		jule::out(_5517_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_4721_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1e765896c_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5517_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1e765896c_str_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_3426_l._field_column - _4821_offset)));
		jule::out(jule::Str("^", 1));
		if (_3426_l._field_suggestion.len() != 0LL) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1e765896c_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5517_row.len())));
			jule::out(jule::Str(" | ", 3));
			_1e7673dc7_AnsiEscape::_static_method_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_3426_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void _1e7673dc7_Logger::_static_method_log(_1e7690a81_Log& _7620_l) {
	{
		auto _match_expr{ _7620_l._field_kind };
		if (!((0LLU) == _match_expr)) { goto _case_end_4547323056; }
		_case_begin_4547323056:;
		{
			_1e7673dc7_Logger::_static_method_log_flat(_7620_l);
		}
		goto _match_end_4547322928;
		_case_end_4547323056:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4547323152; }
		_case_begin_4547323152:;
		{
			_1e7673dc7_Logger::_static_method_log_error(_7620_l);
		}
		goto _match_end_4547322928;
		_case_end_4547323152:;
		_match_end_4547322928:;
	}
}



inline void _1e7673dc7_Logger::_static_method_print_logs(jule::Slice<_1e7690a81_Log>& _8427_logs) {
	for (auto _1e7673dc7_l: _8427_logs) {
		{
			_1e7673dc7_Logger::_static_method_log(_1e7673dc7_l);
		}
	_iter_next_4547326512:;
	}
	_iter_end_4547326512:;
	jule::out(jule::Str("=== ", 4));
	jule::out(_1e86edbba_itoa(static_cast<jule::I64>(_8427_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e7673dc7_Logger &_Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1e777b83c_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[static_cast<jule::Int>(_5324_i)];
	}
	return (*this)._field_path[static_cast<jule::Int>(_5324_i)];
}



inline void _1e777b83c_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[static_cast<jule::Int>((*this)._field_w)] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_path.len())));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,static_cast<jule::Int>((*this)._field_w))));
	}
	(*this)._field_buff[static_cast<jule::Int>((*this)._field_w)]=_6025_c;
	((*this)._field_w)++;
}



inline jule::Str _1e777b83c_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len + (*this)._field_w));
	}
	return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len)) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,static_cast<jule::Int>((*this)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e777b83c_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e7690a81_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ce43d858_bits_error::_method_error(void) {
	return jule::Str("runtime error: ", 15) + (*this)._field_message;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce43d858_bits_error &_Src) {
	_Stream << "bits_error{";
	_Stream << "message:" << _Src._field_message;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e770c537_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e770c537_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e878448c_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e878448c_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '+'))) { goto _case_end_4528210576; }
		_case_begin_4528210576:;
		{
			(_23017_i)++;
		}
		goto _match_end_4528210832;
		_case_end_4528210576:;
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '-'))) { goto _case_end_4528210384; }
		_case_begin_4528210384:;
		{
			(*this)._field_neg=true;
			(_23017_i)++;
		}
		goto _match_end_4528210832;
		_case_end_4528210384:;
		_match_end_4528210832:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	for (; _23017_i < _22922_s.len(); (_23017_i)++) {
		{
			{
				if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '.'))) { goto _case_end_4528216960; }
				_case_begin_4528216960:;
				{
					if (_24717_sawdot) {
						return _22932_ok;
					}
					_24717_sawdot=true;
					(*this)._field_dp=(*this)._field_nd;
					goto _iter_next_4528215696;
				}
				goto _match_end_4528216736;
				_case_end_4528216960:;
				if (!((('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _case_end_4528217072; }
				_case_begin_4528217072:;
				{
					_24817_sawdigits=true;
					if ((_22922_s[static_cast<jule::Int>(_23017_i)] == '0') && ((*this)._field_nd == 0LL)) {
						((*this)._field_dp)--;
						goto _iter_next_4528215696;
					}
					if ((*this)._field_nd < 800LL) {
						(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_22922_s[static_cast<jule::Int>(_23017_i)];
						((*this)._field_nd)++;
					} else if (_22922_s[static_cast<jule::Int>(_23017_i)] != '0') {
						(*this)._field_trunc=true;
					}
					goto _iter_next_4528215696;
				}
				goto _match_end_4528216736;
				_case_end_4528217072:;
				_match_end_4528216736:;
			}
			goto _iter_end_4528215696;
		}
	_iter_next_4528215696:;
	}
	_iter_end_4528215696:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_1e7717cd4_lower(_22922_s[static_cast<jule::Int>(_23017_i)]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[static_cast<jule::Int>(_23017_i)] == '+') {
			(_23017_i)++;
		} else if (_22922_s[static_cast<jule::Int>(_23017_i)] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[static_cast<jule::Int>(_23017_i)] < '0')) || (_22922_s[static_cast<jule::Int>(_23017_i)] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		for (; (_23017_i < _22922_s.len()) && (('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')); (_23017_i)++) {
			{
				if (_30121_e < 10000LL) {
					_30121_e=static_cast<jule::Int>(((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[static_cast<jule::Int>(_23017_i)])) - '0');
				}
			}
		_iter_next_4528239488:;
		}
		_iter_end_4528239488:;
		(*this)._field_dp+=static_cast<jule::Int>(_30121_e * _29121_esign);
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1e878448c_Decimal::_method_float_bits(_1e770c537_FloatInfo& _31830_flt) {
	jule::U64 _31848_b = jule::U64();
	jule::Bool _31856_overflow = jule::Bool();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	while ((*this)._field_dp > 0LL) {
		{
			jule::Int _34521_n = 0LL;
			if ((*this)._field_dp >= _1e857a7c2_POWTAB.len()) {
				_34521_n=27LL;
			} else {
				_34521_n=_1e857a7c2_POWTAB[static_cast<jule::Int>((*this)._field_dp)];
			}
			(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
			_31917_exp+=_34521_n;
		}
	_iter_next_4528255936:;
	}
	_iter_end_4528255936:;
	while (((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d[0LL] < '5'))) {
		{
			jule::Int _35521_n = 0LL;
			if ((-((*this)._field_dp)) >= _1e857a7c2_POWTAB.len()) {
				_35521_n=27LL;
			} else {
				_35521_n=_1e857a7c2_POWTAB[static_cast<jule::Int>((-((*this)._field_dp)))];
			}
			(*this)._method_shift(_35521_n);
			_31917_exp-=_35521_n;
		}
	_iter_next_4528260096:;
	}
	_iter_end_4528260096:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + _31830_flt._field_bias);
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & ((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	_31856_overflow = _31856_overflow;
	return std::make_tuple(_31848_b,_31856_overflow);
}



inline void _1e878448c_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>({});
	jule::Int _15617_n = 0LL;
	while (_15229_v > 0LL) {
		{
			jule::U64 _15817_v1 = jule::div(_15229_v,10LL);
			_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
			_15317_buf[static_cast<jule::Int>(_15617_n)]=static_cast<jule::U8>(_15229_v + '0');
			(_15617_n)++;
			_15229_v=_15817_v1;
		}
	_iter_next_4528293856:;
	}
	_iter_end_4528293856:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	for (; _15617_n >= 0LL; (_15617_n)--) {
		{
			(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_15317_buf[static_cast<jule::Int>(_15617_n)];
			((*this)._field_nd)++;
		}
	_iter_next_4528296464:;
	}
	_iter_end_4528296464:;
	(*this)._field_dp=(*this)._field_nd;
	_1e878448c_trim((*this));
}



inline void _1e878448c_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if (!(((*this)._field_nd == 0LL))) { goto _case_end_4528304048; }
		goto _match_end_4528303824;
		_case_end_4528304048:;
		if (!((_17728_k > 0LL))) { goto _case_end_4528304160; }
		_case_begin_4528304160:;
		{
			while (_17728_k > 60LLU) {
				{
					_1e878448c_left_shift((*this),60LLU);
					_17728_k-=60LLU;
				}
			_iter_next_4528305376:;
			}
			_iter_end_4528305376:;
			_1e878448c_left_shift((*this),static_cast<jule::Uint>(_17728_k));
		}
		goto _match_end_4528303824;
		_case_end_4528304160:;
		if (!((_17728_k < 0LL))) { goto _case_end_4528304272; }
		_case_begin_4528304272:;
		{
			while (_17728_k < -60LL) {
				{
					_1e878448c_right_shift((*this),60LLU);
					_17728_k+=60LLU;
				}
			_iter_next_4528308272:;
			}
			_iter_end_4528308272:;
			_1e878448c_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
		}
		goto _match_end_4528303824;
		_case_end_4528304272:;
		_match_end_4528303824:;
	}
}



inline void _1e878448c_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_1e878448c_trim((*this));
}



inline void _1e878448c_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	for (; _21217_i >= 0LL; (_21217_i)--) {
		{
			jule::U8 _21417_c = (*this)._field_d[static_cast<jule::Int>(_21217_i)];
			if (_21417_c < '9') {
				((*this)._field_d[static_cast<jule::Int>(_21217_i)])++;
				(*this)._field_nd=static_cast<jule::Int>(_21217_i + 1LL);
				return;
			}
		}
	_iter_next_4528315872:;
	}
	_iter_end_4528315872:;
	(*this)._field_d[0LL]='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _1e878448c_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_1e878448c_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _1e878448c_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	for (; (_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd); (_25017_i)++) {
		{
			_25117_n=static_cast<jule::U64>((_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[static_cast<jule::Int>(_25017_i)] - '0'));
		}
	_iter_next_4528327440:;
	}
	_iter_end_4528327440:;
	for (; _25017_i < (*this)._field_dp; (_25017_i)++) {
		{
			_25117_n*=10LL;
		}
	_iter_next_4528333376:;
	}
	_iter_end_4528333376:;
	if (_1e878448c_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e878448c_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce3851c8_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Int,jule::Int> _1ce2b21b0_File::_method_write(jule::Slice<jule::U8> _1528_buff) {
	jule::Int _1544_n = jule::Int();
	if (_1528_buff.len() == 0LL) {
		_1544_n = 0LL;
		return std::make_tuple(_1544_n,0LLU);
	}
	_1544_n=static_cast<jule::Int>(static_cast<jule::Int>(_1e780dda8_write(static_cast<jule::Int>((*this)._field_handle),(&(_1528_buff[0LL])),static_cast<jule::Uint>(_1528_buff.len()))));
	if (_1544_n == -1LL) {
		_1544_n = 0LL;
		return std::make_tuple(_1544_n,_1ce2b75e4_get_last_fs_error());
	}
	_1544_n = _1544_n;
	return std::make_tuple(_1544_n,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _1ce2b21b0_File::_method_read(jule::Slice<jule::U8> _3731_buff) {
	jule::Int _3747_n = jule::Int();
	if (_3731_buff.len() == 0LL) {
		_3747_n = 0LL;
		return std::make_tuple(_3747_n,0LLU);
	}
	_3747_n=static_cast<jule::Int>(static_cast<jule::Int>(_1e780dda8_read(static_cast<jule::Int>((*this)._field_handle),(&(_3731_buff[0LL])),static_cast<jule::Uint>(_3731_buff.len()))));
	if (_3747_n == -1LL) {
		_3747_n=0LL;
		_3747_n = _3747_n;
		return std::make_tuple(_3747_n,_1ce2b75e4_get_last_fs_error());
	}
	_3747_n = _3747_n;
	return std::make_tuple(_3747_n,0LLU);
}



inline jule::Ref<_1ce2b21b0_File> _1ce2b21b0_File::_static_method_new(jule::Uintptr _4523_handle) {
	return jule::new_struct<_1ce2b21b0_File>(new( std::nothrow ) _1ce2b21b0_File(_4523_handle));
}



inline std::tuple<jule::I64,jule::Int> _1ce2b21b0_File::_method_seek(jule::I64 _6027_offset,jule::Int _6040_origin) {
	jule::I64 _6113_pos = _1e780dda8_seek(static_cast<jule::Int>((*this)._field_handle),_6027_offset,static_cast<jule::Int>(_6040_origin));
	return std::make_tuple(_6113_pos,0LLU);
}



inline jule::Int _1ce2b21b0_File::_method_close(void) {
	if (_1e780dda8_close(static_cast<jule::Int>((*this)._field_handle)) == -1LL) {
		return _1ce2b75e4_get_last_fs_error();
	}
	return 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce2b21b0_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce48210a_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



inline jule::Bool _1ce48210a_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce48210a_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5a4a7db_FoldPair &_Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5a4a7db_CaseRange &_Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5a4a7db_Range16 &_Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5a4a7db_Range32 &_Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5a4a7db_RangeTable &_Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce629071_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _1ce35e3a0_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return -1LL;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str(">>", 2)) == _match_expr || (jule::Str("<<", 2)) == _match_expr || (jule::Str("&", 1)) == _match_expr)) { goto _case_end_4533419952; }
		_case_begin_4533419952:;
		{
			return 5LL;
		}
		goto _match_end_4533418464;
		_case_end_4533419952:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4533420048; }
		_case_begin_4533420048:;
		{
			return 4LL;
		}
		goto _match_end_4533418464;
		_case_end_4533420048:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("=", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4533420304; }
		_case_begin_4533420304:;
		{
			return 3LL;
		}
		goto _match_end_4533418464;
		_case_end_4533420304:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4533420400; }
		_case_begin_4533420400:;
		{
			return 2LL;
		}
		goto _match_end_4533418464;
		_case_end_4533420400:;
		if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4533419200; }
		_case_begin_4533419200:;
		{
			return 1LL;
		}
		goto _match_end_4533418464;
		_case_end_4533419200:;
		_case_begin_4533418656:;
		{
			return -1LL;
		}
		goto _match_end_4533418464;
		_case_end_4533418656:;
		_match_end_4533418464:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce35e3a0_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce4aae47_File::_method_is_ok(void) {
	jule::Int _1917_err;
	std::tie(std::ignore,_1917_err) = _1ce4735e6_stat((*this)._field__path);
	return _1917_err == 0LLU;
}



inline void _1ce4aae47_File::_method_fill(jule::Slice<jule::U8> _2431_data) {
	(*this)._field_data=_2431_data;
}



inline jule::Str _1ce4aae47_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _1ce4aae47_File::_method_dir(void) {
	return _1e777b83c_dir((*this)._field__path);
}



inline jule::Str _1ce4aae47_File::_method_name(void) {
	return _1e777b83c_base((*this)._field__path);
}



inline jule::Uintptr _1ce4aae47_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



inline jule::Slice<_1ce35e3a0_Token> _1ce4aae47_File::_method_tokens(void) {
	return (*this)._field__tokens;
}



inline jule::Str _1ce4aae47_File::_method_get_row(jule::Int _4426_row) {
	jule::Int _4517_n = 0LL;
	jule::Int _4617_line_start = 0LL;
	jule::Int _4717_i = 0LL;
	for (; _4717_i < (*this)._field_data.len(); (_4717_i)++) {
		{
			if ((*this)._field_data[static_cast<jule::Int>(_4717_i)] != '\n') {
				goto _iter_next_4533439904;
			}
			(_4517_n)++;
			if (_4517_n == _4426_row) {
				return static_cast<jule::Str>((*this)._field_data.slice(static_cast<jule::Int>(_4617_line_start),static_cast<jule::Int>(_4717_i)));
			}
			_4617_line_start=static_cast<jule::Int>(_4717_i + 1LL);
		}
	_iter_next_4533439904:;
	}
	_iter_end_4533439904:;
	return jule::Str("", 0);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce4aae47_File &_Src) {
	_Stream << "File{";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce494282_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1ce494282_Lex::_method_push_err(jule::Str _40227_fmt,jule::Slice<jule::Any> _40240_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1e7690a81_Log>({_1ce494282_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_40227_fmt,_40240_args)}));
}



inline void _1ce494282_Lex::_method_push_err_tok(_1ce35e3a0_Token& _40732_token,jule::Str _40746_fmt) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1e7690a81_Log>({_1ce494282_make_err(_40732_token._field_row,_40732_token._field_column,(*this)._field_file,_40746_fmt,jule::Slice<jule::Any>({}))}));
}



inline void _1ce494282_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			_1ce35e3a0_Token _41721_token = (*this)._method_token();
			if (_41721_token._field_id != 0LLU) {
				(*this)._field_tokens=jule::append((*this)._field_tokens,jule::Slice<_1ce35e3a0_Token>({_41721_token}));
			}
		}
	_iter_next_4533457568:;
	}
	_iter_end_4533457568:;
}



inline jule::Str _1ce494282_Lex::_method_id(jule::Slice<jule::U8>& _42622_ln) {
	if (_42622_ln.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::I32 _43014_r;
	jule::Int _43021_i;
	std::tie(_43014_r,_43021_i) = _1ce629071_decode_rune(_42622_ln);
	if ((_43014_r != '_') && (!(_1ce35e3a0_is_letter(_43014_r)))) {
		return jule::Str("", 0);
	}
	while (_43021_i < _42622_ln.len()) {
		{
			jule::I32 _43618_r;
			jule::Int _43621_n;
			std::tie(_43618_r,_43621_n) = _1ce629071_decode_rune(_42622_ln.slice(static_cast<jule::Int>(_43021_i)));
			if (((_43618_r != '_') && (!(_1ce35e3a0_is_decimal(static_cast<jule::U8>(_43618_r))))) && (!(_1ce35e3a0_is_letter(_43618_r)))) {
				(*this)._field_pos+=_43021_i;
				return static_cast<jule::Str>(_42622_ln.slice(0LL,static_cast<jule::Int>(_43021_i)));
			}
			_43021_i+=_43621_n;
		}
	_iter_next_4533469360:;
	}
	_iter_end_4533469360:;
	(*this)._field_pos+=static_cast<jule::I64>(_42622_ln.len());
	return static_cast<jule::Str>(_42622_ln);
}



inline jule::Slice<jule::U8> _1ce494282_Lex::_method_resume(void) {
	jule::Int _45117_i = (*this)._field_pos;
	for (; _45117_i < (*this)._field_file->_field_data.len(); (_45117_i)++) {
		{
			jule::I32 _45317_r = static_cast<jule::I32>((*this)._field_file->_field_data[static_cast<jule::Int>(_45117_i)]);
			if (_1ce35e3a0_is_space(_45317_r)) {
				((*this)._field_pos)++;
				{
					auto _match_expr{ _45317_r };
					if (!(('\n') == _match_expr)) { goto _case_end_4533482480; }
					_case_begin_4533482480:;
					{
						(*this)._method_new_line();
					}
					goto _match_end_4533482384;
					_case_end_4533482480:;
					if (!(('\t') == _match_expr)) { goto _case_end_4533483952; }
					_case_begin_4533483952:;
					{
						(*this)._field_column+=8LL;
					}
					goto _match_end_4533482384;
					_case_end_4533483952:;
					_case_begin_4533481696:;
					{
						((*this)._field_column)++;
					}
					goto _match_end_4533482384;
					_case_end_4533481696:;
					_match_end_4533482384:;
				}
				goto _iter_next_4533477408;
			}
			jule::Int _46421_j = _45117_i;
			for (; _46421_j < (*this)._field_file->_field_data.len(); (_46421_j)++) {
				{
					if ((*this)._field_file->_field_data[static_cast<jule::Int>(_46421_j)] == '\n') {
						goto _iter_end_4533480880;
					}
				}
			_iter_next_4533480880:;
			}
			_iter_end_4533480880:;
			return (*this)._field_file->_field_data.slice(static_cast<jule::Int>(_45117_i),static_cast<jule::Int>(_46421_j));
		}
	_iter_next_4533477408:;
	}
	_iter_end_4533477408:;
	return nullptr;
}



inline void _1ce494282_Lex::_method_lex_line_comment(_1ce35e3a0_Token& _47640_token) {
	jule::Int _47713_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _48117_r = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
			if ((_48117_r == '\n') || (_48117_r == '\r')) {
				if ((*this)._method_is_first_token_of_line()) {
					_47640_token._field_id=18LLU;
					_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(static_cast<jule::Int>(_47713_start),static_cast<jule::Int>((*this)._field_pos)));
				}
				return;
			}
		}
	_iter_next_4533494320:;
	}
	_iter_end_4533494320:;
	if ((*this)._method_is_first_token_of_line()) {
		_47640_token._field_id=18LLU;
		_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(static_cast<jule::Int>(_47713_start)));
	}
}



inline void _1ce494282_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _50017_r = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
			if (_50017_r == '\r') {
				goto _iter_next_4533507184;
			}
			if (_50017_r == '\n') {
				(*this)._method_new_line();
				goto _iter_next_4533507184;
			}
			(*this)._field_column+=1LL;
			if (((((*this)._field_pos + 1LL) < (*this)._field_file->_field_data.len()) && (_50017_r == '*')) && ((*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos + 1LL)] == '/')) {
				(*this)._field_column+=2LL;
				(*this)._field_pos+=2LL;
				return;
			}
		}
	_iter_next_4533507184:;
	}
	_iter_end_4533507184:;
	(*this)._method_push_err(jule::Str("missing block comment close", 27),jule::Slice<jule::Any>({}));
}



inline jule::Str _1ce494282_Lex::_method_num(jule::Slice<jule::U8>& _52123_txt) {
	jule::Str _52138_lit = jule::Str();
	_52138_lit=_1ce494282_hex_num(_52123_txt);
	if (_52138_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52138_lit=_1ce494282_octal_num(_52123_txt);
	if (_52138_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52138_lit=_1ce494282_binary_num(_52123_txt);
	if (_52138_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52138_lit=_1ce494282_common_num(_52123_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_52138_lit.len());
	return _52138_lit;
}



inline jule::Str _1ce494282_Lex::_method_escape_seq(jule::Slice<jule::U8>& _54030_txt) {
	jule::Str _54117_seq = jule::Str("", 0);
	if (_54030_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto _match_expr{ _54030_txt[1LL] };
		if (!(('\\') == _match_expr || ('\'') == _match_expr || ('\"') == _match_expr || ('a') == _match_expr || ('b') == _match_expr || ('f') == _match_expr || ('n') == _match_expr || ('r') == _match_expr || ('t') == _match_expr || ('v') == _match_expr)) { goto _case_end_4533535680; }
		_case_begin_4533535680:;
		{
			(*this)._field_pos+=2LL;
			return static_cast<jule::Str>(_54030_txt.slice(0LL,2LL));
		}
		goto _match_end_4533534848;
		_case_end_4533535680:;
		if (!(('U') == _match_expr)) { goto _case_end_4533535856; }
		_case_begin_4533535856:;
		{
			_54117_seq=_1ce494282_big_unicode_point_escape(_54030_txt);
		}
		goto _match_end_4533534848;
		_case_end_4533535856:;
		if (!(('u') == _match_expr)) { goto _case_end_4533535952; }
		_case_begin_4533535952:;
		{
			_54117_seq=_1ce494282_little_unicode_point_escape(_54030_txt);
		}
		goto _match_end_4533534848;
		_case_end_4533535952:;
		if (!(('x') == _match_expr)) { goto _case_end_4533536704; }
		_case_begin_4533536704:;
		{
			_54117_seq=_1ce494282_hex_byte_escape(_54030_txt);
		}
		goto _match_end_4533534848;
		_case_end_4533536704:;
		_case_begin_4533533488:;
		{
			_54117_seq=_1ce494282_byte_escape(_54030_txt);
		}
		goto _match_end_4533534848;
		_case_end_4533533488:;
		_match_end_4533534848:;
	}
	_julec_label_end:;
	if (_54117_seq == jule::Str("", 0)) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>({}));
		return jule::Str("", 0);
	}
	(*this)._field_pos+=static_cast<jule::I64>(_54117_seq.len());
	return _54117_seq;
}



inline jule::Str _1ce494282_Lex::_method_get_rune(jule::Slice<jule::U8>& _57428_txt,jule::Bool _57441_raw) {
	if ((!(_57441_raw)) && (_57428_txt[0LL] == '\\')) {
		return (*this)._method_escape_seq(_57428_txt);
	}
	jule::I32 _57914_r;
	jule::Int _57917_n;
	std::tie(_57914_r,_57917_n) = _1ce629071_decode_rune(_57428_txt);
	(*this)._field_pos+=_57917_n;
	return static_cast<jule::Str>(_57914_r);
}



inline jule::Str _1ce494282_Lex::_method_lex_rune(jule::Slice<jule::U8>& _58428_txt) {
	jule::Str _58517_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58717_n = 0LL;
	jule::Int _58817_i = 1LL;
	for (; _58817_i < _58428_txt.len(); (_58817_i)++) {
		{
			if (_58428_txt[static_cast<jule::Int>(_58817_i)] == '\r') {
				goto _iter_next_4533553248;
			}
			if (_58428_txt[static_cast<jule::Int>(_58817_i)] == '\n') {
				(*this)._method_push_err(jule::Str("rune is not finished", 20),jule::Slice<jule::Any>({}));
				((*this)._field_pos)++;
				(*this)._method_new_line();
				return jule::Str("", 0);
			}
			jule::Slice<jule::U8> _60017_part = _58428_txt.slice(static_cast<jule::Int>(_58817_i));
			jule::Str _60117_r = (*this)._method_get_rune(_60017_part,false);
			_58517_run+=_60117_r;
			jule::I64 _60317_length = _60117_r.len();
			(*this)._field_column+=_60317_length;
			if (_60117_r == jule::Str("'", 1)) {
				((*this)._field_pos)++;
				goto _iter_end_4533553248;
			}
			if (_60317_length > 1LL) {
				_58817_i+=static_cast<jule::I64>(_60317_length - 1LL);
			}
			(_58717_n)++;
		}
	_iter_next_4533553248:;
	}
	_iter_end_4533553248:;
	if (_58717_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>({}));
	} else if (_58717_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune is should be single", 24),jule::Slice<jule::Any>({}));
	}
	return _58517_run;
}



inline jule::Str _1ce494282_Lex::_method_lex_str(void) {
	jule::Str _62517_s = jule::Str("", 0);
	jule::U8 _62613_mark = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
	((*this)._field_pos)++;
	jule::Bool _62813_raw = _62613_mark == '`';
	_62517_s+=static_cast<jule::Str>(_62613_mark);
	((*this)._field_column)++;
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			jule::U8 _63317_ch = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
			if (_63317_ch == '\r') {
				goto _iter_next_4533577168;
			}
			if (_63317_ch == '\n') {
				(*this)._method_new_line();
				if ((!(_62813_raw))) {
					(*this)._method_push_err(jule::Str("string is not finished", 22),jule::Slice<jule::Any>({}));
					((*this)._field_pos)++;
					return jule::Str("", 0);
				}
			}
			jule::Slice<jule::U8> _64521_part = (*this)._field_file->_field_data.slice(static_cast<jule::Int>((*this)._field_pos));
			jule::Str _64617_r = (*this)._method_get_rune(_64521_part,_62813_raw);
			_62517_s+=_64617_r;
			(*this)._field_column+=static_cast<jule::I64>(_64617_r.len());
			if (_63317_ch == _62613_mark) {
				goto _iter_end_4533577168;
			}
		}
	_iter_next_4533577168:;
	}
	_iter_end_4533577168:;
	return _62517_s;
}



inline jule::Bool _1ce494282_Lex::_method_is_first_token_of_line(void) {
	return (*this)._field_column == 1LL;
}



inline void _1ce494282_Lex::_method_new_line(void) {
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _1ce494282_Lex::_method_is_op(jule::Slice<jule::U8>& _66625_txt,jule::Str _66638_kind,jule::Uint _66649_id,_1ce35e3a0_Token& _66667_t) {
	if ((!(_1ce494282_bytes_has_prefix(_66625_txt,_66638_kind)))) {
		return false;
	}
	_66667_t._field_kind=_66638_kind;
	_66667_t._field_id=_66649_id;
	(*this)._field_pos+=static_cast<jule::I64>(_66638_kind.len());
	return true;
}



inline jule::Bool _1ce494282_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _67732_txt,_1ce35e3a0_Token& _67750_tok) {
	for (auto _1ce494282_pair: _1ce494282_BASIC_OPS) {
		{
			if ((*this)._method_is_op(_67732_txt,_1ce494282_pair._field_kind,_1ce494282_pair._field_id,_67750_tok)) {
				return true;
			}
		}
	_iter_next_4533603200:;
	}
	_iter_end_4533603200:;
	return false;
}



inline jule::Bool _1ce494282_Lex::_method_lex_id(jule::Slice<jule::U8>& _68726_txt,_1ce35e3a0_Token& _68744_t) {
	jule::Str _68813_lex = (*this)._method_id(_68726_txt);
	if (_68813_lex == jule::Str("", 0)) {
		return false;
	}
	_68744_t._field_kind=_68813_lex;
	_68744_t._field_id=2LLU;
	return true;
}



inline jule::Bool _1ce494282_Lex::_method_lex_num(jule::Slice<jule::U8>& _69827_txt,_1ce35e3a0_Token& _69845_t) {
	jule::Str _69913_lex = (*this)._method_num(_69827_txt);
	if (_69913_lex == jule::Str("", 0)) {
		return false;
	}
	_69845_t._field_kind=_69913_lex;
	_69845_t._field_id=6LLU;
	return true;
}



inline _1ce35e3a0_Token _1ce494282_Lex::_method_token(void) {
	_1ce35e3a0_Token _71117_t = _1ce35e3a0_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _71313_txt = (*this)._method_resume();
	if (_71313_txt == nullptr) {
		return _71117_t;
	}
	_71117_t._field_column=(*this)._field_column;
	_71117_t._field_row=(*this)._field_row;
	{
		if (!(((*this)._method_lex_num(_71313_txt,_71117_t)))) { goto _case_end_4533624848; }
		goto _match_end_4533620832;
		_case_end_4533624848:;
		if (!((_71313_txt[0LL] == '\''))) { goto _case_end_4533626768; }
		_case_begin_4533626768:;
		{
			_71117_t._field_kind=(*this)._method_lex_rune(_71313_txt);
			_71117_t._field_id=6LLU;
			return _71117_t;
		}
		goto _match_end_4533620832;
		_case_end_4533626768:;
		if (!(((_71313_txt[0LL] == '\"') || (_71313_txt[0LL] == '`')))) { goto _case_end_4533622800; }
		_case_begin_4533622800:;
		{
			_71117_t._field_kind=(*this)._method_lex_str();
			_71117_t._field_id=6LLU;
			return _71117_t;
		}
		goto _match_end_4533620832;
		_case_end_4533622800:;
		if (!((_1ce494282_bytes_has_prefix(_71313_txt,jule::Str("//", 2))))) { goto _case_end_4533622896; }
		_case_begin_4533622896:;
		{
			(*this)._method_lex_line_comment(_71117_t);
			return _71117_t;
		}
		goto _match_end_4533620832;
		_case_end_4533622896:;
		if (!((_1ce494282_bytes_has_prefix(_71313_txt,jule::Str("/*", 2))))) { goto _case_end_4533622992; }
		_case_begin_4533622992:;
		{
			(*this)._method_lex_range_comment();
			return _71117_t;
		}
		goto _match_end_4533620832;
		_case_end_4533622992:;
		if (!(((*this)._method_is_op(_71313_txt,jule::Str("(", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str(")", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("{", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("}", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("[", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("]", 1),3LLU,_71117_t)) || ((*this)._method_lex_basic_ops(_71313_txt,_71117_t)))) { goto _case_end_4533623088; }
		goto _match_end_4533620832;
		_case_end_4533623088:;
		if (!(((*this)._method_lex_id(_71313_txt,_71117_t)))) { goto _case_end_4533627360; }
		_case_begin_4533627360:;
		{
			for (auto _1ce494282_pair: _1ce494282_KEYWORDS) {
				{
					if (_1ce494282_pair._field_kind == _71117_t._field_kind) {
						_71117_t._field_id=_1ce494282_pair._field_id;
						goto _iter_end_4533641536;
					}
				}
			_iter_next_4533641536:;
			}
			_iter_end_4533641536:;
		}
		goto _match_end_4533620832;
		_case_end_4533627360:;
		_case_begin_4533621792:;
		{
			jule::I32 _76318_r;
			jule::Int _76321_sz;
			std::tie(_76318_r,_76321_sz) = _1ce629071_decode_rune(_71313_txt);
			(*this)._method_push_err(jule::Str("undefined code content: @", 25),jule::Slice<jule::Any>({jule::Any(_76318_r)}));
			((*this)._field_column)++;
			(*this)._field_pos+=_76321_sz;
			return _71117_t;
		}
		goto _match_end_4533620832;
		_case_end_4533621792:;
		_match_end_4533620832:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_71117_t._field_kind.len());
	return _71117_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce494282_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce2b7acd_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_RefTypeDecl &_Src) {
	_Stream << "RefTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_PtrTypeDecl::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_ArrTypeDecl::_method_auto_sized(void) {
	return (!(jule::real((*this)._field_size)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce38611e_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce38611e_PackageInfo &_Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce557587_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1ce557587_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _1ce557587_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



inline jule::Bool _1ce557587_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stms.len();
}



inline jule::Bool _1ce557587_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stms.len();
}



inline void _1ce557587_ScopeParser::_method_push_err(_1ce35e3a0_Token _17527_token,jule::Str _17541_fmt) {
	(*this)._field_p->_method_push_err(_17527_token,_17541_fmt,jule::Slice<jule::Any>({}));
}



inline void _1ce557587_ScopeParser::_method_push_suggestion(jule::Str _17834_fmt,jule::Slice<jule::Any> _17847_args) {
	(*this)._field_p->_method_push_suggestion(_17834_fmt,_17847_args);
}



inline void _1ce557587_ScopeParser::_method_insert_as_next(jule::Slice<_1ce35e3a0_Token>& _18238_tokens) {
	(*this)._field_stms=jule::append((*this)._field_stms.slice(0LL,static_cast<jule::Int>((*this)._field_pos + 1LL)),(*this)._field_stms.slice(static_cast<jule::Int>((*this)._field_pos)));
	(*this)._field_stms[static_cast<jule::Int>((*this)._field_pos + 1LL)]=jule::new_struct<_1ce557587_Stmt>(new( std::nothrow ) _1ce557587_Stmt(_18238_tokens,jule::Bool()));
}



inline jule::Ref<_1ce557587_Stmt> _1ce557587_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stms[static_cast<jule::Int>((*this)._field_pos)];
}



inline jule::Ref<_1ce385d22_ScopeTree> _1ce557587_ScopeParser::_method_build_scope(jule::Slice<_1ce35e3a0_Token>& _19235_tokens) {
	jule::Ref<_1ce385d22_ScopeTree> _19317_s = _1ce557587_new_scope();
	_19317_s->_field_parent=(*this)._field_s;
	_1ce557587_ScopeParser _19517_ssp = _1ce557587_ScopeParser((*this)._field_p,jule::Ref<_1ce385d22_ScopeTree>(),jule::Slice<jule::Ref<_1ce557587_Stmt>>(),jule::Int());
	_19517_ssp._method_build(_19235_tokens,_19317_s);
	return _19317_s;
}



inline jule::Any _1ce557587_ScopeParser::_method_build_var_st(jule::Slice<_1ce35e3a0_Token>& _20236_tokens) {
	jule::Ref<_1ce385d22_VarDecl> _20317_v = (*this)._field_p->_method_build_var(_20236_tokens);
	_20317_v->_field_scope=(*this)._field_s;
	return jule::Any(_20317_v);
}



inline jule::Any _1ce557587_ScopeParser::_method_build_ret_st(jule::Slice<_1ce35e3a0_Token> _20835_tokens) {
	jule::Ref<_1ce385d22_RetSt> _20917_st = jule::new_struct<_1ce385d22_RetSt>(new( std::nothrow ) _1ce385d22_RetSt(_20835_tokens[0LL],jule::Ref<_1ce385d22_Expr>()));
	if (_20835_tokens.len() > 1LL) {
		_20835_tokens=_20835_tokens.slice(1LL);
		_20917_st->_field_expr=(*this)._field_p->_method_build_expr(_20835_tokens);
	}
	return jule::Any(_20917_st);
}



inline jule::Any _1ce557587_ScopeParser::_method_build_while_next_iter(jule::Ref<_1ce557587_Stmt>& _21945_s) {
	jule::Ref<_1ce385d22_Iter> _22017_it = jule::new_struct<_1ce385d22_Iter>(new( std::nothrow ) _1ce385d22_Iter(_21945_s->_field_tokens[0LL],jule::Any(),jule::Ref<_1ce385d22_ScopeTree>()));
	jule::Slice<_1ce35e3a0_Token> _22317_tokens = _21945_s->_field_tokens.slice(1LL);
	jule::Ref<_1ce385d22_WhileKind> _22417_kind = jule::new_struct<_1ce385d22_WhileKind>(new( std::nothrow ) _1ce385d22_WhileKind());
	if (_22317_tokens.len() > 0LL) {
		_22417_kind->_field_expr=(*this)._field_p->_method_build_expr(_22317_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_22017_it->_field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_22317_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_1ce35e3a0_Token> _23617_st_tokens = _1ce5ee178_get_block_expr(_22317_tokens);
	if (_23617_st_tokens.len() > 0LL) {
		jule::Ref<_1ce557587_Stmt> _23821_stmt = jule::new_struct<_1ce557587_Stmt>(new( std::nothrow ) _1ce557587_Stmt(_23617_st_tokens,_21945_s->_field_terminated));
		_22417_kind->_field_next_token=_23617_st_tokens[0LL];
		_22417_kind->_field_next=(*this)._method_build_st(_23821_stmt);
	}
	jule::I64 _24617_i = _23617_st_tokens.len();
	jule::Slice<_1ce35e3a0_Token> _24717_block_tokens = _1b5c910d6_range(_24617_i,jule::Str("{", 1),jule::Str("}", 1),_22317_tokens);
	if (_24717_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_22017_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_24617_i < _22317_tokens.len()) {
		(*this)._method_push_err(_22317_tokens[static_cast<jule::Int>(_24617_i)],jule::Str("invalid syntax", 14));
	}
	_22017_it->_field_scope=(*this)._method_build_scope(_24717_block_tokens);
	_22017_it->_field_kind=jule::Any(_22417_kind);
	return jule::Any(_22017_it);
}



inline jule::Ref<_1ce385d22_WhileKind> _1ce557587_ScopeParser::_method_build_while_iter_kind(jule::Slice<_1ce35e3a0_Token>& _26445_tokens) {
	return jule::new_struct<_1ce385d22_WhileKind>(new( std::nothrow ) _1ce385d22_WhileKind((*this)._field_p->_method_build_expr(_26445_tokens),jule::Any(),_1ce35e3a0_Token()));
}



inline jule::Slice<jule::Slice<_1ce35e3a0_Token>> _1ce557587_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_1ce35e3a0_Token>& _27050_toks) {
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _27118_vars;
	jule::Slice<_1e7690a81_Log> _27124_errs;
	std::tie(_27118_vars,_27124_errs) = _1b5c910d6_parts(_27050_toks,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_27124_errs);
	return _27118_vars;
}



inline jule::Ref<_1ce385d22_VarDecl> _1ce557587_ScopeParser::_method_build_range_kind_key(jule::Slice<_1ce35e3a0_Token>& _27644_tokens) {
	if (_27644_tokens.len() == 0LL) {
		return jule::new_ref<_1ce385d22_VarDecl>();
	}
	jule::Ref<_1ce385d22_VarDecl> _28017_key = jule::new_struct<_1ce385d22_VarDecl>(new( std::nothrow ) _1ce385d22_VarDecl(jule::Ref<_1ce385d22_ScopeTree>(),_27644_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1ce385d22_Directive>>(),jule::Ref<_1ce385d22_CommentGroup>(),jule::Ref<_1ce385d22_TypeDecl>(),jule::Ref<_1ce385d22_Expr>()));
	if (_28017_key->_field_token._field_id == 36LLU) {
		_28017_key->_field_mutable=true;
		if (_27644_tokens.len() == 1LL) {
			(*this)._method_push_err(_28017_key->_field_token,jule::Str("invalid syntax", 14));
		}
		_28017_key->_field_token=_27644_tokens[1LL];
	} else if (_27644_tokens.len() > 1LL) {
		(*this)._method_push_err(_27644_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_28017_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_28017_key->_field_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_VarDecl>();
	}
	_28017_key->_field_ident=_28017_key->_field_token._field_kind;
	return _28017_key;
}



inline jule::Slice<jule::Ref<_1ce385d22_VarDecl>> _1ce557587_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_1ce35e3a0_Token>>& _30145_parts) {
	jule::Slice<jule::Ref<_1ce385d22_VarDecl>> _30217_keys = nullptr;
	for (auto _1ce557587_tokens: _30145_parts) {
		{
			_30217_keys=jule::append(_30217_keys,jule::Slice<jule::Ref<_1ce385d22_VarDecl>>({(*this)._method_build_range_kind_key(_1ce557587_tokens)}));
		}
	_iter_next_4534403024:;
	}
	_iter_end_4534403024:;
	return _30217_keys;
}



inline void _1ce557587_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ref<_1ce385d22_RangeKind>& _30951_rng,jule::Slice<_1ce35e3a0_Token>& _30973_tokens) {
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _31017_key_tokens = (*this)._method_get_range_kind_keys_tokens(_30973_tokens);
	if (_31017_key_tokens.len() == 0LL) {
		return;
	}
	if (_31017_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_30951_rng->_field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ref<_1ce385d22_VarDecl>> _31717_keys = (*this)._method_build_range_kind_keys(_31017_key_tokens);
	_30951_rng->_field_key_a=_31717_keys[0LL];
	if (_31717_keys.len() > 1LL) {
		_30951_rng->_field_key_b=_31717_keys[1LL];
	}
}



inline void _1ce557587_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ref<_1ce385d22_RangeKind>& _32454_rng,jule::Slice<_1ce35e3a0_Token>& _32476_tokens) {
	jule::Int _32517_i = 0LL;
	jule::Slice<_1ce35e3a0_Token> _32617_rang = _1b5c910d6_range(_32517_i,jule::Str("(", 1),jule::Str(")", 1),_32476_tokens);
	if (_32517_i < _32476_tokens.len()) {
		(*this)._method_push_err(_32454_rng->_field_in_token,jule::Str("invalid syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_32454_rng,_32617_rang);
}



inline void _1ce557587_ScopeParser::_method_setup_range_kind_keys(jule::Ref<_1ce385d22_RangeKind>& _33345_rng,jule::Slice<_1ce35e3a0_Token>& _33367_tokens) {
	if (_33367_tokens[0LL]._field_id == 3LLU) {
		if (_33367_tokens[0LL]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_33367_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_33345_rng,_33367_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_33345_rng,_33367_tokens);
}



inline jule::Ref<_1ce385d22_RangeKind> _1ce557587_ScopeParser::_method_build_range_iter_kind(jule::Slice<_1ce35e3a0_Token>& _34545_var_tokens,jule::Slice<_1ce35e3a0_Token>& _34614_expr_tokens,_1ce35e3a0_Token& _34641_in_token) {
	jule::Ref<_1ce385d22_RangeKind> _34717_rng = jule::new_struct<_1ce385d22_RangeKind>(new( std::nothrow ) _1ce385d22_RangeKind(_34641_in_token,jule::Ref<_1ce385d22_Expr>(),jule::Ref<_1ce385d22_VarDecl>(),jule::Ref<_1ce385d22_VarDecl>()));
	if (_34614_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_34717_rng->_field_in_token,jule::Str("expression missing", 18));
		return _34717_rng;
	}
	_34717_rng->_field_expr=(*this)._field_p->_method_build_expr(_34614_expr_tokens);
	if (_34545_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_34717_rng,_34545_var_tokens);
	}
	return _34717_rng;
}



inline jule::Any _1ce557587_ScopeParser::_method_build_common_iter_kind(jule::Slice<_1ce35e3a0_Token>& _36146_tokens,_1ce35e3a0_Token& _36164_err_tok) {
	jule::Int _36217_brace_n = 0LL;
	{
		jule::Int _1ce557587_i = 0;
		for (auto _1ce557587_tok: _36146_tokens) {
			{
				if (_1ce557587_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1ce557587_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4534449376; }
						_case_begin_4534449376:;
						{
							(_36217_brace_n)++;
							goto _iter_next_4534444656;
						}
						goto _match_end_4534448016;
						_case_end_4534449376:;
						_case_begin_4534447328:;
						{
							(_36217_brace_n)--;
						}
						goto _match_end_4534448016;
						_case_end_4534447328:;
						_match_end_4534448016:;
					}
				}
				if (_36217_brace_n != 0LL) {
					goto _iter_next_4534444656;
				}
				{
					auto _match_expr{ _1ce557587_tok._field_id };
					if (!((15LLU) == _match_expr)) { goto _case_end_4534448528; }
					_case_begin_4534448528:;
					{
						jule::Slice<_1ce35e3a0_Token> _38125_decl_tokens = _36146_tokens.slice(0LL,static_cast<jule::Int>(_1ce557587_i));
						jule::Slice<_1ce35e3a0_Token> _38225_expr_tokens = _36146_tokens.slice(static_cast<jule::Int>(_1ce557587_i + 1LL));
						return jule::Any((*this)._method_build_range_iter_kind(_38125_decl_tokens,_38225_expr_tokens,_1ce557587_tok));
					}
					goto _match_end_4534449728;
					_case_end_4534448528:;
					_match_end_4534449728:;
				}
			}
		_iter_next_4534444656:;
		_1ce557587_i++;
		}
		_iter_end_4534444656:;
	}
	return jule::Any((*this)._method_build_while_iter_kind(_36146_tokens));
}



inline jule::Any _1ce557587_ScopeParser::_method_build_common_iter(jule::Slice<_1ce35e3a0_Token> _38940_tokens) {
	jule::Ref<_1ce385d22_Iter> _39017_it = jule::new_struct<_1ce385d22_Iter>(new( std::nothrow ) _1ce385d22_Iter(_38940_tokens[0LL],jule::Any(),jule::Ref<_1ce385d22_ScopeTree>()));
	_38940_tokens=_38940_tokens.slice(1LL);
	if (_38940_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_39017_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	jule::Slice<_1ce35e3a0_Token> _40017_expr_tokens = _1ce5ee178_get_block_expr(_38940_tokens);
	if (_40017_expr_tokens.len() > 0LL) {
		_39017_it->_field_kind=(*this)._method_build_common_iter_kind(_40017_expr_tokens,_39017_it->_field_token);
	}
	jule::I64 _40417_i = _40017_expr_tokens.len();
	jule::Slice<_1ce35e3a0_Token> _40517_scope_tokens = _1b5c910d6_range(_40417_i,jule::Str("{", 1),jule::Str("}", 1),_38940_tokens);
	if (_40517_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_39017_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_40417_i < _38940_tokens.len()) {
		(*this)._method_push_err(_38940_tokens[static_cast<jule::Int>(_40417_i)],jule::Str("invalid syntax", 14));
	}
	_39017_it->_field_scope=(*this)._method_build_scope(_40517_scope_tokens);
	return jule::Any(_39017_it);
}



inline jule::Any _1ce557587_ScopeParser::_method_buid_iter_st(jule::Ref<_1ce557587_Stmt>& _41936_st) {
	if (_41936_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_41936_st);
	}
	return (*this)._method_build_common_iter(_41936_st->_field_tokens);
}



inline jule::Any _1ce557587_ScopeParser::_method_build_break_st(jule::Slice<_1ce35e3a0_Token>& _42638_tokens) {
	jule::Ref<_1ce385d22_BreakSt> _42717_brk = jule::new_struct<_1ce385d22_BreakSt>(new( std::nothrow ) _1ce385d22_BreakSt(_42638_tokens[0LL],_1ce35e3a0_Token()));
	if (_42638_tokens.len() > 1LL) {
		if (_42638_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_42638_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_42717_brk->_field_label=_42638_tokens[1LL];
			if (_42638_tokens.len() > 2LL) {
				(*this)._method_push_err(_42638_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_42717_brk);
}



inline jule::Any _1ce557587_ScopeParser::_method_build_cont_st(jule::Slice<_1ce35e3a0_Token>& _44437_tokens) {
	jule::Ref<_1ce385d22_ContSt> _44517_cont = jule::new_struct<_1ce385d22_ContSt>(new( std::nothrow ) _1ce385d22_ContSt(_44437_tokens[0LL],_1ce35e3a0_Token()));
	if (_44437_tokens.len() > 1LL) {
		if (_44437_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_44437_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_44517_cont->_field_label=_44437_tokens[1LL];
			if (_44437_tokens.len() > 2LL) {
				(*this)._method_push_err(_44437_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44517_cont);
}



inline jule::Ref<_1ce385d22_If> _1ce557587_ScopeParser::_method_build_if(jule::Slice<_1ce35e3a0_Token>& _46232_tokens) {
	jule::Ref<_1ce385d22_If> _46317_model = jule::new_struct<_1ce385d22_If>(new( std::nothrow ) _1ce385d22_If(_46232_tokens[0LL],jule::Ref<_1ce385d22_Expr>(),jule::Ref<_1ce385d22_ScopeTree>()));
	_46232_tokens=_46232_tokens.slice(1LL);
	jule::Slice<_1ce35e3a0_Token> _46717_expr_tokens = _1ce5ee178_get_block_expr(_46232_tokens);
	jule::Int _46817_i = 0LL;
	if (_46717_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_46317_model->_field_token,jule::Str("expression missing", 18));
	} else {
		_46817_i=static_cast<jule::I64>(_46717_expr_tokens.len());
	}
	jule::Slice<_1ce35e3a0_Token> _47417_scope_tokens = _1b5c910d6_range(_46817_i,jule::Str("{", 1),jule::Str("}", 1),_46232_tokens);
	if (_47417_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_46317_model->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_If>();
	}
	if (_46817_i < _46232_tokens.len()) {
		if (_46232_tokens[static_cast<jule::Int>(_46817_i)]._field_id == 17LLU) {
			_46232_tokens=_46232_tokens.slice(static_cast<jule::Int>(_46817_i));
		} else {
			(*this)._method_push_err(_46232_tokens[static_cast<jule::Int>(_46817_i)],jule::Str("invalid syntax", 14));
			_46232_tokens=nullptr;
		}
	}
	_46317_model->_field_expr=(*this)._field_p->_method_build_expr(_46717_expr_tokens);
	_46317_model->_field_scope=(*this)._method_build_scope(_47417_scope_tokens);
	return _46317_model;
}



inline jule::Ref<_1ce385d22_Else> _1ce557587_ScopeParser::_method_build_else(jule::Slice<_1ce35e3a0_Token>& _49434_tokens) {
	jule::Ref<_1ce385d22_Else> _49517_els = jule::new_struct<_1ce385d22_Else>(new( std::nothrow ) _1ce385d22_Else(_49434_tokens[0LL],jule::Ref<_1ce385d22_ScopeTree>()));
	_49434_tokens=_49434_tokens.slice(1LL);
	jule::Int _49917_i = 0LL;
	jule::Slice<_1ce35e3a0_Token> _50017_scope_tokens = _1b5c910d6_range(_49917_i,jule::Str("{", 1),jule::Str("}", 1),_49434_tokens);
	if (_50017_scope_tokens == nullptr) {
		if (_49917_i < _49434_tokens.len()) {
			(*this)._method_push_err(_49517_els->_field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_49517_els->_field_token,jule::Str("body is not exist", 17));
			(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_1ce385d22_Else>();
	}
	if (_49917_i < _49434_tokens.len()) {
		(*this)._method_push_err(_49434_tokens[static_cast<jule::Int>(_49917_i)],jule::Str("invalid syntax", 14));
	}
	_49517_els->_field_scope=(*this)._method_build_scope(_50017_scope_tokens);
	return _49517_els;
}



inline jule::Any _1ce557587_ScopeParser::_method_build_if_else_chain(jule::Slice<_1ce35e3a0_Token> _51842_tokens) {
	jule::Ref<_1ce385d22_Conditional> _51917_chain = jule::new_struct<_1ce385d22_Conditional>(new( std::nothrow ) _1ce385d22_Conditional((*this)._method_build_if(_51842_tokens),jule::Slice<jule::Ref<_1ce385d22_If>>(),jule::Ref<_1ce385d22_Else>()));
	if ((!(jule::real(_51917_chain->_field_head)))) {
		return jule::Any(nullptr);
	}
	while (_51842_tokens != nullptr) {
		{
			if (_51842_tokens[0LL]._field_id != 17LLU) {
				goto _iter_end_4534541472;
			}
			if ((_51842_tokens.len() > 1LL) && (_51842_tokens[1LL]._field_id == 16LLU)) {
				_51842_tokens=_51842_tokens.slice(1LL);
				jule::Ref<_1ce385d22_If> _53125_elif = (*this)._method_build_if(_51842_tokens);
				_51917_chain->_field_tail=jule::append(_51917_chain->_field_tail,jule::Slice<jule::Ref<_1ce385d22_If>>({_53125_elif}));
				goto _iter_next_4534541472;
			}
			_51917_chain->_field_default=(*this)._method_build_else(_51842_tokens);
			goto _iter_end_4534541472;
		}
	_iter_next_4534541472:;
	}
	_iter_end_4534541472:;
	return jule::Any(_51917_chain);
}



inline jule::Any _1ce557587_ScopeParser::_method_build_comment_st(_1ce35e3a0_Token& _54136_token) {
	return jule::Any(_1b5c910d6_build_comment(_54136_token));
}



inline jule::Any _1ce557587_ScopeParser::_method_build_call_st(jule::Slice<_1ce35e3a0_Token>& _54537_tokens) {
	_1ce35e3a0_Token _54613_token = _54537_tokens[0LL];
	if (_1ce5ee178_is_fn_call(_54537_tokens) == nullptr) {
		(*this)._method_push_err(_54613_token,jule::Str("statement must have function call expression", 44));
	}
	jule::Ref<_1ce385d22_Expr> _55017_expr = (*this)._field_p->_method_build_expr(_54537_tokens);
	if (jule::real(_55017_expr) && (!(_55017_expr->_method_is_fn_call()))) {
		(*this)._method_push_err(_54613_token,jule::Str("invalid syntax", 14));
	}
	return jule::Any(_55017_expr);
}



inline jule::Any _1ce557587_ScopeParser::_method_build_co_call_st(jule::Slice<_1ce35e3a0_Token> _55739_tokens) {
	_55739_tokens=_55739_tokens.slice(1LL);
	jule::Any _55917_cc = (*this)._method_build_call_st(_55739_tokens);
	_55917_cc.operator jule::Ref<_1ce385d22_Expr>()->_field_kind.operator jule::Ref<_1ce385d22_FnCallExpr>()->_field_concurrent=true;
	return _55917_cc;
}



inline jule::Any _1ce557587_ScopeParser::_method_build_goto_st(jule::Slice<_1ce35e3a0_Token>& _56437_tokens) {
	jule::Ref<_1ce385d22_GotoSt> _56517_gt = jule::new_struct<_1ce385d22_GotoSt>(new( std::nothrow ) _1ce385d22_GotoSt(_56437_tokens[0LL],_1ce35e3a0_Token()));
	if (_56437_tokens.len() == 1LL) {
		(*this)._method_push_err(_56517_gt->_field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if (_56437_tokens.len() > 2LL) {
		(*this)._method_push_err(_56437_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_1ce35e3a0_Token _57417_ident_token = _56437_tokens[1LL];
	if (_57417_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_57417_ident_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::Any(_56517_gt);
	}
	_56517_gt->_field_label=_57417_ident_token;
	return jule::Any(_56517_gt);
}



inline jule::Any _1ce557587_ScopeParser::_method_build_fall_st(jule::Slice<_1ce35e3a0_Token>& _58437_tokens) {
	jule::Ref<_1ce385d22_FallSt> _58517_fll = jule::new_struct<_1ce385d22_FallSt>(new( std::nothrow ) _1ce385d22_FallSt(_58437_tokens[0LL]));
	if (_58437_tokens.len() > 1LL) {
		(*this)._method_push_err(_58437_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_58517_fll);
}



inline jule::Any _1ce557587_ScopeParser::_method_build_type_alias_st(jule::Slice<_1ce35e3a0_Token>& _59443_tokens) {
	jule::Ref<_1ce385d22_TypeAliasDecl> _59517_tad = (*this)._field_p->_method_build_type_alias_decl(_59443_tokens);
	_59517_tad->_field_scope=(*this)._field_s;
	return jule::Any(_59517_tad);
}



inline void _1ce557587_ScopeParser::_method_push_case_expr(jule::Slice<_1ce35e3a0_Token> _60037_tokens,_1ce35e3a0_Token _60058_token,jule::Bool _6019_type_match,jule::Slice<jule::Ref<_1ce385d22_Expr>>& _60132_exprs) {
	if (_60037_tokens.len() == 0LL) {
		return;
	}
	if (_6019_type_match) {
		jule::Int _60721_i = 0LL;
		jule::Ref<_1ce385d22_TypeDecl> _60822_t;
		jule::Bool _60825_ok;
		std::tie(_60822_t,_60825_ok) = (*this)._field_p->_method_build_type(_60037_tokens,(&(_60721_i)),true);
		if (_60825_ok) {
			_60132_exprs=jule::append(_60132_exprs,jule::Slice<jule::Ref<_1ce385d22_Expr>>({jule::new_struct<_1ce385d22_Expr>(new( std::nothrow ) _1ce385d22_Expr(_60058_token,jule::Any(_60822_t)))}));
		}
		if (_60721_i < _60037_tokens.len()) {
			(*this)._method_push_err(_60037_tokens[static_cast<jule::Int>(_60721_i)],jule::Str("invalid syntax", 14));
		}
		return;
	}
	_60132_exprs=jule::append(_60132_exprs,jule::Slice<jule::Ref<_1ce385d22_Expr>>({(*this)._field_p->_method_build_expr(_60037_tokens)}));
}



inline jule::Slice<jule::Ref<_1ce385d22_Expr>> _1ce557587_ScopeParser::_method_build_case_exprs(jule::Slice<_1ce35e3a0_Token>& _62340_tokens,jule::Bool _62357_type_match) {
	jule::Slice<jule::Ref<_1ce385d22_Expr>> _62417_exprs = jule::Slice<jule::Ref<_1ce385d22_Expr>>::alloc(0LL,1LL);
	jule::Int _62617_brace_n = 0LL;
	jule::Int _62717_j = 0LL;
	{
		jule::Int _1ce557587_i = 0;
		for (auto _1ce557587_tok: _62340_tokens) {
			{
				if (_1ce557587_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1ce557587_tok._field_kind };
						if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4534616160; }
						_case_begin_4534616160:;
						{
							(_62617_brace_n)++;
						}
						goto _match_end_4534614800;
						_case_end_4534616160:;
						_case_begin_4534614112:;
						{
							(_62617_brace_n)--;
						}
						goto _match_end_4534614800;
						_case_end_4534614112:;
						_match_end_4534614800:;
					}
					goto _iter_next_4534611392;
				} else if (_62617_brace_n != 0LL) {
					goto _iter_next_4534611392;
				}
				{
					if (!(((_1ce557587_tok._field_id == 7LLU) && (_1ce557587_tok._field_kind == jule::Str("|", 1))))) { goto _case_end_4534616960; }
					_case_begin_4534616960:;
					{
						jule::Slice<_1ce35e3a0_Token> _64521_expr_tokens = _62340_tokens.slice(static_cast<jule::Int>(_62717_j),static_cast<jule::Int>(_1ce557587_i));
						if (_64521_expr_tokens.len() == 0LL) {
							(*this)._method_push_err(_1ce557587_tok,jule::Str("expression missing", 18));
						} else {
							(*this)._method_push_case_expr(_62340_tokens.slice(static_cast<jule::Int>(_62717_j),static_cast<jule::Int>(_1ce557587_i)),_1ce557587_tok,_62357_type_match,_62417_exprs);
						}
						_62717_j=static_cast<jule::Int>(_1ce557587_i + 1LL);
					}
					goto _match_end_4534613664;
					_case_end_4534616960:;
					if (!((_1ce557587_tok._field_id == 11LLU))) { goto _case_end_4534616512; }
					_case_begin_4534616512:;
					{
						(*this)._method_push_case_expr(_62340_tokens.slice(static_cast<jule::Int>(_62717_j),static_cast<jule::Int>(_1ce557587_i)),_1ce557587_tok,_62357_type_match,_62417_exprs);
						_62340_tokens=_62340_tokens.slice(static_cast<jule::Int>(_1ce557587_i + 1LL));
						return _62417_exprs;
					}
					goto _match_end_4534613664;
					_case_end_4534616512:;
					_match_end_4534613664:;
				}
			}
		_iter_next_4534611392:;
		_1ce557587_i++;
		}
		_iter_end_4534611392:;
	}
	(*this)._method_push_err(_62340_tokens[0LL],jule::Str("invalid syntax", 14));
	_62340_tokens=nullptr;
	return nullptr;
}



inline jule::Ref<_1ce385d22_ScopeTree> _1ce557587_ScopeParser::_method_build_case_scope(jule::Slice<_1ce35e3a0_Token>& _66440_tokens) {
	jule::Int _66517_n = 0LL;
	for (;;) {
		{
			jule::Int _66721_i = 0LL;
			jule::Slice<_1ce35e3a0_Token> _66822_next;
			std::tie(_66822_next,std::ignore) = _1ce557587_skip_st(_66721_i,_66440_tokens.slice(static_cast<jule::Int>(_66517_n)));
			if (_66822_next.len() == 0LL) {
				goto _iter_end_4534631872;
			}
			_1ce35e3a0_Token _67217_tok = _66822_next[0LL];
			if ((_67217_tok._field_id != 7LLU) || (_67217_tok._field_kind != jule::Str("|", 1))) {
				_66517_n+=_66721_i;
				goto _iter_next_4534631872;
			}
			jule::Slice<_1ce35e3a0_Token> _67721_scope_tokens = _66440_tokens.slice(0LL,static_cast<jule::Int>(_66517_n));
			jule::Ref<_1ce385d22_ScopeTree> _67821_scope = (*this)._method_build_scope(_67721_scope_tokens);
			_66440_tokens=_66440_tokens.slice(static_cast<jule::Int>(_66517_n));
			return _67821_scope;
		}
	_iter_next_4534631872:;
	}
	_iter_end_4534631872:;
	jule::Ref<_1ce385d22_ScopeTree> _68217_scope = (*this)._method_build_scope(_66440_tokens);
	_66440_tokens=nullptr;
	return _68217_scope;
}



inline std::tuple<jule::Ref<_1ce385d22_Case>,jule::Bool> _1ce557587_ScopeParser::_method_build_case(jule::Slice<_1ce35e3a0_Token>& _68734_tokens,jule::Bool _68751_type_match) {
	jule::Ref<_1ce385d22_Case> _68817_c = jule::new_struct<_1ce385d22_Case>(new( std::nothrow ) _1ce385d22_Case(_68734_tokens[0LL],jule::Ref<_1ce385d22_ScopeTree>(),jule::Slice<jule::Ref<_1ce385d22_Expr>>()));
	_68734_tokens=_68734_tokens.slice(1LL);
	_68817_c->_field_exprs=(*this)._method_build_case_exprs(_68734_tokens,_68751_type_match);
	_68817_c->_field_scope=(*this)._method_build_case_scope(_68734_tokens);
	jule::Bool _69413_is_default = _68817_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_68817_c,_69413_is_default);
}



inline std::tuple<jule::Slice<jule::Ref<_1ce385d22_Case>>,jule::Ref<_1ce385d22_Else>> _1ce557587_ScopeParser::_method_build_cases(jule::Slice<_1ce35e3a0_Token> _69834_tokens,jule::Bool _69851_type_match) {
	jule::Slice<jule::Ref<_1ce385d22_Case>> _69917_cases = nullptr;
	jule::Ref<_1ce385d22_Else> _70017_def = jule::new_ref<_1ce385d22_Else>();
	jule::Bool _70117_def_not_last = false;
	while (_69834_tokens.len() > 0LL) {
		{
			_1ce35e3a0_Token _70321_tok = _69834_tokens[0LL];
			if (_70321_tok._field_id == 18LLU) {
				_69834_tokens=_69834_tokens.slice(1LL);
				goto _iter_next_4534658192;
			}
			if ((_70321_tok._field_id != 7LLU) || (_70321_tok._field_kind != jule::Str("|", 1))) {
				(*this)._method_push_err(_70321_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_4534658192;
			}
			jule::Ref<_1ce385d22_Case> _71422_c;
			jule::Bool _71425_is_default;
			std::tie(_71422_c,_71425_is_default) = (*this)._method_build_case(_69834_tokens,_69851_type_match);
			if (_71425_is_default) {
				_71422_c->_field_token=_70321_tok;
				if ((!(jule::real(_70017_def)))) {
					_70017_def=jule::new_struct<_1ce385d22_Else>(new( std::nothrow ) _1ce385d22_Else(_71422_c->_field_token,_71422_c->_field_scope));
				} else {
					(*this)._method_push_err(_70321_tok,jule::Str("invalid syntax", 14));
				}
			} else {
				_70117_def_not_last=_70117_def_not_last || jule::real(_70017_def);
				_69917_cases=jule::append(_69917_cases,jule::Slice<jule::Ref<_1ce385d22_Case>>({_71422_c}));
			}
		}
	_iter_next_4534658192:;
	}
	_iter_end_4534658192:;
	if (_70117_def_not_last) {
		(*this)._method_push_err(_70017_def->_field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_69917_cases,_70017_def);
}



inline jule::Ref<_1ce385d22_MatchCase> _1ce557587_ScopeParser::_method_build_match_case(jule::Slice<_1ce35e3a0_Token> _73839_tokens) {
	jule::Ref<_1ce385d22_MatchCase> _73917_m = jule::new_struct<_1ce385d22_MatchCase>(new( std::nothrow ) _1ce385d22_MatchCase(_73839_tokens[0LL],jule::Bool(),jule::Ref<_1ce385d22_Expr>(),jule::Slice<jule::Ref<_1ce385d22_Case>>(),jule::Ref<_1ce385d22_Else>()));
	_73839_tokens=_73839_tokens.slice(1LL);
	if ((_73839_tokens.len() > 0LL) && (_73839_tokens[0LL]._field_id == 10LLU)) {
		_73917_m->_field_type_match=true;
		_73839_tokens=_73839_tokens.slice(1LL);
	}
	jule::Slice<_1ce35e3a0_Token> _74917_expr_tokens = _1ce5ee178_get_block_expr(_73839_tokens);
	if (_74917_expr_tokens.len() > 0LL) {
		_73917_m->_field_expr=(*this)._field_p->_method_build_expr(_74917_expr_tokens);
	} else if (_73917_m->_field_type_match) {
		(*this)._method_push_err(_73917_m->_field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _75617_i = _74917_expr_tokens.len();
	jule::Slice<_1ce35e3a0_Token> _75717_block_toks = _1b5c910d6_range(_75617_i,jule::Str("{", 1),jule::Str("}", 1),_73839_tokens);
	if (_75717_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_73917_m->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_MatchCase>();
	}
	std::tie(_73917_m->_field_cases,_73917_m->_field_default) = (*this)._method_build_cases(_75717_block_toks,_73917_m->_field_type_match);
	return _73917_m;
}



inline jule::Ref<_1ce385d22_ScopeTree> _1ce557587_ScopeParser::_method_build_scope_st(jule::Slice<_1ce35e3a0_Token> _76937_tokens) {
	jule::Bool _77017_is_unsafe = false;
	jule::Bool _77117_is_deferred = false;
	_1ce35e3a0_Token _77217_token = _76937_tokens[0LL];
	if (_77217_token._field_id == 35LLU) {
		_77017_is_unsafe=true;
		_76937_tokens=_76937_tokens.slice(1LL);
		if (_76937_tokens.len() == 0LL) {
			(*this)._method_push_err(_77217_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1ce385d22_ScopeTree>();
		}
		_77217_token=_76937_tokens[0LL];
		if (_77217_token._field_id == 37LLU) {
			_77117_is_deferred=true;
			_76937_tokens=_76937_tokens.slice(1LL);
			if (_76937_tokens.len() == 0LL) {
				(*this)._method_push_err(_77217_token,jule::Str("invalid syntax", 14));
				return jule::new_ref<_1ce385d22_ScopeTree>();
			}
		}
	} else if (_77217_token._field_id == 37LLU) {
		_77117_is_deferred=true;
		_76937_tokens=_76937_tokens.slice(1LL);
		if (_76937_tokens.len() == 0LL) {
			(*this)._method_push_err(_77217_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1ce385d22_ScopeTree>();
		}
	}
	jule::Int _79817_i = 0LL;
	jule::Slice<_1ce35e3a0_Token> _79917_scope_tokens = _1b5c910d6_range(_79817_i,jule::Str("{", 1),jule::Str("}", 1),_76937_tokens);
	if (_79917_scope_tokens == nullptr) {
		(*this)._method_push_err(_77217_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1ce385d22_ScopeTree>();
	} else if (_79817_i < _76937_tokens.len()) {
		(*this)._method_push_err(_76937_tokens[static_cast<jule::Int>(_79817_i)],jule::Str("invalid syntax", 14));
	}
	jule::Ref<_1ce385d22_ScopeTree> _80617_scope = (*this)._method_build_scope(_79917_scope_tokens);
	_80617_scope->_field_unsafety=_77017_is_unsafe;
	_80617_scope->_field_deferred=_77117_is_deferred;
	return _80617_scope;
}



inline jule::Ref<_1ce385d22_LabelSt> _1ce557587_ScopeParser::_method_build_label_st(jule::Slice<_1ce35e3a0_Token>& _81238_tokens) {
	jule::Ref<_1ce385d22_LabelSt> _81317_lbl = jule::new_struct<_1ce385d22_LabelSt>(new( std::nothrow ) _1ce385d22_LabelSt(_81238_tokens[0LL],_81238_tokens[0LL]._field_kind));
	if (_81238_tokens.len() > 2LL) {
		_81238_tokens=_81238_tokens.slice(2LL);
		(*this)._method_insert_as_next(_81238_tokens);
	}
	return _81317_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1ce557587_ScopeParser::_method_build_id_st(jule::Slice<_1ce35e3a0_Token>& _82735_tokens) {
	jule::Bool _82764_ok = jule::Bool();
	if (_82735_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_82764_ok);
	}
	_1ce35e3a0_Token _83217_token = _82735_tokens[1LL];
	{
		auto _match_expr{ _83217_token._field_id };
		if (!((11LLU) == _match_expr)) { goto _case_end_4534724608; }
		_case_begin_4534724608:;
		{
			_82764_ok = true;
			return std::make_tuple(jule::Any((*this)._method_build_label_st(_82735_tokens)),_82764_ok);
		}
		goto _match_end_4534727312;
		_case_end_4534724608:;
		_match_end_4534727312:;
	}
	return std::make_tuple(jule::Any(),_82764_ok);
}



inline jule::Ref<_1ce6015a9_AssignInfo> _1ce557587_ScopeParser::_method_build_assign_info(jule::Slice<_1ce35e3a0_Token>& _84141_tokens) {
	jule::Ref<_1ce6015a9_AssignInfo> _84217_info = jule::new_struct<_1ce6015a9_AssignInfo>(new( std::nothrow ) _1ce6015a9_AssignInfo(jule::Slice<_1ce35e3a0_Token>(),jule::Slice<_1ce35e3a0_Token>(),_1ce35e3a0_Token(),true));
	jule::Int _84517_brace_n = 0LL;
	{
		jule::Int _1ce557587_i = 0;
		for (auto _1ce557587_token: _84141_tokens) {
			{
				if (_1ce557587_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1ce557587_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4534739104; }
						_case_begin_4534739104:;
						{
							(_84517_brace_n)++;
						}
						goto _match_end_4534737744;
						_case_end_4534739104:;
						_case_begin_4534737056:;
						{
							(_84517_brace_n)--;
						}
						goto _match_end_4534737744;
						_case_end_4534737056:;
						_match_end_4534737744:;
					}
				}
				{
					if (!((_84517_brace_n > 0LL))) { goto _case_end_4534736752; }
					_case_begin_4534736752:;
					{
						goto _iter_next_4534734448;
					}
					goto _match_end_4534736544;
					_case_end_4534736752:;
					if (!((_1ce557587_token._field_id != 7LLU))) { goto _case_end_4534736848; }
					_case_begin_4534736848:;
					{
						goto _iter_next_4534734448;
					}
					goto _match_end_4534736544;
					_case_end_4534736848:;
					if (!(((!(_1ce35e3a0_is_assign_op(_1ce557587_token._field_kind)))))) { goto _case_end_4534739424; }
					_case_begin_4534739424:;
					{
						goto _iter_next_4534734448;
					}
					goto _match_end_4534736544;
					_case_end_4534739424:;
					_match_end_4534736544:;
				}
				_84217_info->_field_l=_84141_tokens.slice(0LL,static_cast<jule::Int>(_1ce557587_i));
				if (_84217_info->_field_l.len() == 0LL) {
					_84217_info->_field_ok=false;
				}
				_84217_info->_field_setter=_1ce557587_token;
				if ((_1ce557587_i + 1LL) >= _84141_tokens.len()) {
					_84217_info->_field_r=nullptr;
					_84217_info->_field_ok=_1ce35e3a0_is_postfix_op(_84217_info->_field_setter._field_kind);
					goto _iter_end_4534734448;
				}
				_84217_info->_field_r=_84141_tokens.slice(static_cast<jule::Int>(_1ce557587_i + 1LL));
				if (_1ce35e3a0_is_postfix_op(_84217_info->_field_setter._field_kind)) {
					if (_84217_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_84217_info->_field_r[0LL],jule::Str("invalid syntax", 14));
						_84217_info->_field_r=nullptr;
					}
				}
				goto _iter_end_4534734448;
			}
		_iter_next_4534734448:;
		_1ce557587_i++;
		}
		_iter_end_4534734448:;
	}
	return _84217_info;
}



inline jule::Ref<_1ce385d22_AssignLeft> _1ce557587_ScopeParser::_method_build_assign_l(jule::Slice<_1ce35e3a0_Token>& _88838_tokens) {
	jule::Ref<_1ce385d22_AssignLeft> _88917_l = jule::new_struct<_1ce385d22_AssignLeft>(new( std::nothrow ) _1ce385d22_AssignLeft(_88838_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ref<_1ce385d22_Expr>()));
	if (_88838_tokens[0LL]._field_id == 2LLU) {
		_88917_l->_field_ident=_88917_l->_field_token._field_kind;
	}
	_88917_l->_field_expr=(*this)._field_p->_method_build_expr(_88838_tokens);
	return _88917_l;
}



inline jule::Slice<jule::Ref<_1ce385d22_AssignLeft>> _1ce557587_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_1ce35e3a0_Token>>& _90139_parts) {
	jule::Slice<jule::Ref<_1ce385d22_AssignLeft>> _90217_lefts = nullptr;
	for (auto _1ce557587_part: _90139_parts) {
		{
			jule::Ref<_1ce385d22_AssignLeft> _90421_l = (*this)._method_build_assign_l(_1ce557587_part);
			_90217_lefts=jule::append(_90217_lefts,jule::Slice<jule::Ref<_1ce385d22_AssignLeft>>({_90421_l}));
		}
	_iter_next_4534762800:;
	}
	_iter_end_4534762800:;
	return _90217_lefts;
}



inline std::tuple<jule::Ref<_1ce385d22_AssignSt>,jule::Bool> _1ce557587_ScopeParser::_method_build_plain_assign(jule::Slice<_1ce35e3a0_Token>& _91142_tokens) {
	jule::Ref<_1ce6015a9_AssignInfo> _91217_info = (*this)._method_build_assign_info(_91142_tokens);
	if ((!(_91217_info->_field_ok))) {
		return std::make_tuple(jule::new_ref<_1ce385d22_AssignSt>(),false);
	}
	jule::Ref<_1ce385d22_AssignSt> _91717_assign = jule::new_struct<_1ce385d22_AssignSt>(new( std::nothrow ) _1ce385d22_AssignSt(jule::Bool(),_91217_info->_field_setter,jule::Slice<jule::Ref<_1ce385d22_AssignLeft>>(),jule::Ref<_1ce385d22_Expr>()));
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _92118_parts;
	jule::Slice<_1e7690a81_Log> _92125_errs;
	std::tie(_92118_parts,_92125_errs) = _1b5c910d6_parts(_91217_info->_field_l,8LLU,true);
	if (_92125_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_92125_errs);
		return std::make_tuple(jule::new_ref<_1ce385d22_AssignSt>(),false);
	}
	_91717_assign->_field_left=(*this)._method_build_assign_ls(_92118_parts);
	if (_91217_info->_field_r != nullptr) {
		_91717_assign->_field_right=(*this)._field_p->_method_build_expr(_91217_info->_field_r);
	}
	return std::make_tuple(_91717_assign,true);
}



inline std::tuple<jule::Ref<_1ce385d22_AssignSt>,jule::Bool> _1ce557587_ScopeParser::_method_build_decl_assign(jule::Slice<_1ce35e3a0_Token> _93540_tokens) {
	if (_93540_tokens.len() < 1LL) {
		return std::make_tuple(jule::new_ref<_1ce385d22_AssignSt>(),false);
	}
	_93540_tokens=_93540_tokens.slice(1LL);
	_1ce35e3a0_Token _94117_token = _93540_tokens[0LL];
	if ((_94117_token._field_id != 3LLU) || (_94117_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(jule::new_ref<_1ce385d22_AssignSt>(),false);
	}
	jule::Ref<_1ce385d22_AssignSt> _94617_assign = jule::new_struct<_1ce385d22_AssignSt>(new( std::nothrow ) _1ce385d22_AssignSt(true,_1ce35e3a0_Token(),jule::Slice<jule::Ref<_1ce385d22_AssignLeft>>(),jule::Ref<_1ce385d22_Expr>()));
	jule::Int _95017_i = 0LL;
	jule::Slice<_1ce35e3a0_Token> _95117_rang = _1b5c910d6_range(_95017_i,jule::Str("(", 1),jule::Str(")", 1),_93540_tokens);
	if (_95117_rang == nullptr) {
		(*this)._method_push_err(_94117_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(jule::new_ref<_1ce385d22_AssignSt>(),false);
	} else if ((_95017_i + 1LL) < _93540_tokens.len()) {
		_94617_assign->_field_setter=_93540_tokens[static_cast<jule::Int>(_95017_i)];
		(_95017_i)++;
		jule::Slice<_1ce35e3a0_Token> _95821_expr_tokens = _93540_tokens.slice(static_cast<jule::Int>(_95017_i));
		_94617_assign->_field_right=(*this)._field_p->_method_build_expr(_95821_expr_tokens);
	}
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _96318_parts;
	jule::Slice<_1e7690a81_Log> _96325_errs;
	std::tie(_96318_parts,_96325_errs) = _1b5c910d6_parts(_95117_rang,8LLU,true);
	if (_96325_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_96325_errs);
		return std::make_tuple(jule::new_ref<_1ce385d22_AssignSt>(),false);
	}
	for (auto _1ce557587_part: _96318_parts) {
		{
			jule::Bool _97021_is_mut = false;
			jule::Bool _97121_is_ref = false;
			_94117_token=_1ce557587_part[0LL];
			if (_94117_token._field_id == 36LLU) {
				_97021_is_mut=true;
				_1ce557587_part=_1ce557587_part.slice(1LL);
				if (_1ce557587_part.len() == 0LL) {
					(*this)._method_push_err(_94117_token,jule::Str("invalid syntax", 14));
					goto _iter_next_4534800208;
				}
			}
			if ((_1ce557587_part[0LL]._field_id == 7LLU) && (_1ce557587_part[0LL]._field_kind == jule::Str("&", 1))) {
				_97121_is_ref=true;
				_1ce557587_part=_1ce557587_part.slice(1LL);
				if (_1ce557587_part.len() == 0LL) {
					(*this)._method_push_err(_94117_token,jule::Str("invalid syntax", 14));
					goto _iter_next_4534800208;
				}
			}
			if (((_1ce557587_part[0LL]._field_id != 2LLU) && (_1ce557587_part[0LL]._field_id != 3LLU)) && (_1ce557587_part[0LL]._field_kind != jule::Str("(", 1))) {
				(*this)._method_push_err(_94117_token,jule::Str("invalid syntax", 14));
				goto _iter_next_4534800208;
			}
			jule::Ref<_1ce385d22_AssignLeft> _99921_l = (*this)._method_build_assign_l(_1ce557587_part);
			_99921_l->_field_mutable=_97021_is_mut;
			_99921_l->_field_reference=_97121_is_ref;
			_94617_assign->_field_left=jule::append(_94617_assign->_field_left,jule::Slice<jule::Ref<_1ce385d22_AssignLeft>>({_99921_l}));
		}
	_iter_next_4534800208:;
	}
	_iter_end_4534800208:;
	return std::make_tuple(_94617_assign,true);
}



inline std::tuple<jule::Ref<_1ce385d22_AssignSt>,jule::Bool> _1ce557587_ScopeParser::_method_build_assign_st(jule::Slice<_1ce35e3a0_Token>& _100839_tokens) {
	jule::Ref<_1ce385d22_AssignSt> _100858_st = jule::Ref<_1ce385d22_AssignSt>();
	jule::Bool _100873_ok = jule::Bool();
	if ((!(_1ce6015a9_check_assign_tokens(_100839_tokens)))) {
		_100858_st = jule::new_ref<_1ce385d22_AssignSt>();
		_100873_ok = false;
		return std::make_tuple(_100858_st,_100873_ok);
	}
	{
		auto _match_expr{ _100839_tokens[0LL]._field_id };
		if (!((34LLU) == _match_expr)) { goto _case_end_4534830400; }
		_case_begin_4534830400:;
		{
			std::tie(_100858_st,_100873_ok) = (*this)._method_build_decl_assign(_100839_tokens);
		}
		goto _match_end_4534828768;
		_case_end_4534830400:;
		_case_begin_4534828192:;
		{
			std::tie(_100858_st,_100873_ok) = (*this)._method_build_plain_assign(_100839_tokens);
		}
		goto _match_end_4534828768;
		_case_end_4534828192:;
		_match_end_4534828768:;
	}
	return std::make_tuple(_100858_st,_100873_ok);
}



inline jule::Any _1ce557587_ScopeParser::_method_build_st(jule::Ref<_1ce557587_Stmt>& _102132_st) {
	_1ce35e3a0_Token _102217_token = _102132_st->_field_tokens[0LL];
	if (_102217_token._field_id == 2LLU) {
		jule::Any _102422_s;
		jule::Bool _102425_ok;
		std::tie(_102422_s,_102425_ok) = (*this)._method_build_id_st(_102132_st->_field_tokens);
		if (_102425_ok) {
			return _102422_s;
		}
	}
	jule::Ref<_1ce385d22_AssignSt> _103018_s;
	jule::Bool _103021_ok;
	std::tie(_103018_s,_103021_ok) = (*this)._method_build_assign_st(_102132_st->_field_tokens);
	if (_103021_ok) {
		return jule::Any(_103018_s);
	}
	{
		auto _match_expr{ _102217_token._field_id };
		if (!((38LLU) == _match_expr || (9LLU) == _match_expr || (34LLU) == _match_expr || (36LLU) == _match_expr)) { goto _case_end_4534843072; }
		_case_begin_4534843072:;
		{
			return (*this)._method_build_var_st(_102132_st->_field_tokens);
		}
		goto _match_end_4534840000;
		_case_end_4534843072:;
		if (!((4LLU) == _match_expr)) { goto _case_end_4534840992; }
		_case_begin_4534840992:;
		{
			return (*this)._method_build_ret_st(_102132_st->_field_tokens);
		}
		goto _match_end_4534840000;
		_case_end_4534840992:;
		if (!((12LLU) == _match_expr)) { goto _case_end_4534841088; }
		_case_begin_4534841088:;
		{
			return (*this)._method_buid_iter_st(_102132_st);
		}
		goto _match_end_4534840000;
		_case_end_4534841088:;
		if (!((13LLU) == _match_expr)) { goto _case_end_4534841184; }
		_case_begin_4534841184:;
		{
			return (*this)._method_build_break_st(_102132_st->_field_tokens);
		}
		goto _match_end_4534840000;
		_case_end_4534841184:;
		if (!((14LLU) == _match_expr)) { goto _case_end_4534841280; }
		_case_begin_4534841280:;
		{
			return (*this)._method_build_cont_st(_102132_st->_field_tokens);
		}
		goto _match_end_4534840000;
		_case_end_4534841280:;
		if (!((16LLU) == _match_expr)) { goto _case_end_4534841440; }
		_case_begin_4534841440:;
		{
			return (*this)._method_build_if_else_chain(_102132_st->_field_tokens);
		}
		goto _match_end_4534840000;
		_case_end_4534841440:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4534841536; }
		_case_begin_4534841536:;
		{
			return (*this)._method_build_comment_st(_102217_token);
		}
		goto _match_end_4534840000;
		_case_end_4534841536:;
		if (!((26LLU) == _match_expr)) { goto _case_end_4534841632; }
		_case_begin_4534841632:;
		{
			return (*this)._method_build_co_call_st(_102132_st->_field_tokens);
		}
		goto _match_end_4534840000;
		_case_end_4534841632:;
		if (!((22LLU) == _match_expr)) { goto _case_end_4534841728; }
		_case_begin_4534841728:;
		{
			return (*this)._method_build_goto_st(_102132_st->_field_tokens);
		}
		goto _match_end_4534840000;
		_case_end_4534841728:;
		if (!((32LLU) == _match_expr)) { goto _case_end_4534841824; }
		_case_begin_4534841824:;
		{
			return (*this)._method_build_fall_st(_102132_st->_field_tokens);
		}
		goto _match_end_4534840000;
		_case_end_4534841824:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4534843824; }
		_case_begin_4534843824:;
		{
			return (*this)._method_build_type_alias_st(_102132_st->_field_tokens);
		}
		goto _match_end_4534840000;
		_case_end_4534843824:;
		if (!((27LLU) == _match_expr)) { goto _case_end_4534843920; }
		_case_begin_4534843920:;
		{
			return jule::Any((*this)._method_build_match_case(_102132_st->_field_tokens));
		}
		goto _match_end_4534840000;
		_case_end_4534843920:;
		if (!((35LLU) == _match_expr || (37LLU) == _match_expr)) { goto _case_end_4534844016; }
		_case_begin_4534844016:;
		{
			return jule::Any((*this)._method_build_scope_st(_102132_st->_field_tokens));
		}
		goto _match_end_4534840000;
		_case_end_4534844016:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4534844112; }
		_case_begin_4534844112:;
		{
			if (_102217_token._field_kind == jule::Str("{", 1)) {
				return jule::Any((*this)._method_build_scope_st(_102132_st->_field_tokens));
			}
		}
		goto _match_end_4534840000;
		_case_end_4534844112:;
		_case_begin_4534840288:;
		{
			if (_1ce5ee178_is_fn_call(_102132_st->_field_tokens) != nullptr) {
				return (*this)._method_build_call_st(_102132_st->_field_tokens);
			}
		}
		goto _match_end_4534840000;
		_case_end_4534840288:;
		_match_end_4534840000:;
	}
	(*this)._method_push_err(_102217_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _1ce557587_ScopeParser::_method_build(jule::Slice<_1ce35e3a0_Token>& _109729_tokens,jule::Ref<_1ce385d22_ScopeTree>& _109751_s) {
	if ((!(jule::real(_109751_s)))) {
		return;
	}
	(*this)._field_stms=_1ce557587_split_stms(_109729_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_109751_s;
	while ((!((*this)._method_is_last_st())) && (!((*this)._method_finished()))) {
		{
			jule::Ref<_1ce557587_Stmt> _110621_st = (*this)._method_next();
			jule::Any _110721_data = (*this)._method_build_st(_110621_st);
			if (_110721_data != nullptr) {
				(*this)._field_s->_field_stmts=jule::append((*this)._field_s->_field_stmts,jule::Slice<jule::Any>({_110721_data}));
			}
			if ((*this)._method_stopped()) {
				goto _iter_end_4534863248;
			}
		}
	_iter_next_4534863248:;
	}
	_iter_end_4534863248:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce557587_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stms:" << _Src._field_stms << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce5ee178_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1ce5ee178_Precedencer::_method_set(jule::Int _15622_level,jule::Any _15634_expr) {
	{
		jule::Int _1ce5ee178_i = 0;
		for (auto _1ce5ee178_pair: (*this)._field_pairs) {
			{
				jule::Int _15817_pair_level = _1ce5ee178_pair[0LL].operator jule::Int();
				if (_15622_level > _15817_pair_level) {
					jule::Slice<jule::Slice<jule::Any>> _16025_first = (*this)._field_pairs.slice(0LL,static_cast<jule::Int>(_1ce5ee178_i));
					jule::Slice<jule::Slice<jule::Any>> _16125_buffer = jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15622_level),_15634_expr})});
					jule::Slice<jule::Slice<jule::Any>> _16225_appended = jule::append(_16125_buffer,(*this)._field_pairs.slice(static_cast<jule::Int>(_1ce5ee178_i)));
					(*this)._field_pairs=jule::append(_16025_first,_16225_appended);
					return;
				}
			}
		_iter_next_4534872320:;
		_1ce5ee178_i++;
		}
		_iter_end_4534872320:;
	}
	(*this)._field_pairs=jule::append((*this)._field_pairs,jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15622_level),_15634_expr})}));
}



inline jule::Any _1ce5ee178_Precedencer::_method_get_lower(void) {
	jule::I64 _17117_i = (*this)._field_pairs.len() - 1LL;
	for (; _17117_i >= 0LL; (_17117_i)--) {
		{
			jule::Any _17321_data = (*this)._field_pairs[static_cast<jule::Int>(_17117_i)][1LL];
			if (_17321_data != nullptr) {
				return _17321_data;
			}
		}
	_iter_next_4534881168:;
	}
	_iter_end_4534881168:;
	return jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce5ee178_Precedencer &_Src) {
	_Stream << "Precedencer{";
	_Stream << "pairs:" << _Src._field_pairs;
	_Stream << "}";
	return _Stream;
}



inline void _1ce5ee178_ExprBuilder::_method_push_err(_1ce35e3a0_Token _29727_token,jule::Str _29741_fmt,jule::Slice<jule::Any> _29754_args) {
	(*this)._field_p->_method_push_err(_29727_token,_29741_fmt,_29754_args);
}



inline void _1ce5ee178_ExprBuilder::_method_push_suggestion(jule::Str _30234_fmt,jule::Slice<jule::Any> _30247_args) {
	(*this)._field_p->_method_push_suggestion(_30234_fmt,_30247_args);
}



inline jule::Ref<_1ce385d22_TupleExpr> _1ce5ee178_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_1ce35e3a0_Token>>& _30635_parts) {
	jule::Ref<_1ce385d22_TupleExpr> _30717_tuple = jule::new_struct<_1ce385d22_TupleExpr>(new( std::nothrow ) _1ce385d22_TupleExpr(jule::Slice<jule::Ref<_1ce385d22_Expr>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_30635_parts.len())))));
	{
		jule::Int _1ce5ee178_i = 0;
		for (auto _1ce5ee178_part: _30635_parts) {
			{
				_30717_tuple->_field_expr[static_cast<jule::Int>(_1ce5ee178_i)]=(*this)._method_build_from_tokens(_1ce5ee178_part);
			}
		_iter_next_4534918992:;
		_1ce5ee178_i++;
		}
		_iter_end_4534918992:;
	}
	return _30717_tuple;
}



inline jule::Ref<_1ce385d22_LitExpr> _1ce5ee178_ExprBuilder::_method_build_lit(_1ce35e3a0_Token _31628_token) {
	return jule::new_struct<_1ce385d22_LitExpr>(new( std::nothrow ) _1ce385d22_LitExpr(_31628_token,_31628_token._field_kind));
}



inline jule::Ref<_1ce385d22_TypeDecl> _1ce5ee178_ExprBuilder::_method_build_primitive_type(_1ce35e3a0_Token& _32340_token) {
	return _1b5d8e899_build_prim_type(_32340_token);
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build_single(_1ce35e3a0_Token _32735_token) {
	{
		auto _match_expr{ _32735_token._field_id };
		if (!((6LLU) == _match_expr)) { goto _case_end_4534930832; }
		_case_begin_4534930832:;
		{
			return jule::Any((*this)._method_build_lit(_32735_token));
		}
		goto _match_end_4534930048;
		_case_end_4534930832:;
		if (!((2LLU) == _match_expr || (28LLU) == _match_expr)) { goto _case_end_4534932896; }
		_case_begin_4534932896:;
		{
			return jule::Any(_1ce5ee178_build_ident_expr(_32735_token));
		}
		goto _match_end_4534930048;
		_case_end_4534932896:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4534932288; }
		_case_begin_4534932288:;
		{
			return jule::Any((*this)._method_build_primitive_type(_32735_token));
		}
		goto _match_end_4534930048;
		_case_end_4534932288:;
		_case_begin_4534929504:;
		{
			(*this)._method_push_err(_32735_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4534930048;
		_case_end_4534929504:;
		_match_end_4534930048:;
	}
}



inline jule::Ref<_1ce385d22_IdentExpr> _1ce5ee178_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_1ce35e3a0_Token>& _34546_tokens) {
	if (_34546_tokens[0LL]._field_id != 31LLU) {
		return jule::new_ref<_1ce385d22_IdentExpr>();
	} else if (_34546_tokens[1LL]._field_id != 20LLU) {
		(*this)._method_push_err(_34546_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_IdentExpr>();
	}
	_1ce35e3a0_Token _35317_token = _34546_tokens[2LL];
	if (_35317_token._field_id != 2LLU) {
		(*this)._method_push_err(_34546_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_IdentExpr>();
	}
	jule::Ref<_1ce385d22_IdentExpr> _35917_expr = _1ce5ee178_build_ident_expr(_35317_token);
	_35917_expr->_field_cpp_linked=true;
	return _35917_expr;
}



inline jule::Ref<_1ce385d22_UnaryExpr> _1ce5ee178_ExprBuilder::_method_build_unary(jule::Slice<_1ce35e3a0_Token> _36434_tokens) {
	_1ce35e3a0_Token _36517_op = _36434_tokens[0LL];
	if (_36434_tokens.len() == 1LL) {
		(*this)._method_push_err(_36517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_UnaryExpr>();
	} else if ((!(_1ce35e3a0_is_unary_op(_36517_op._field_kind)))) {
		(*this)._method_push_err(_36517_op,jule::Str("invalid_operator_for_unary: @", 29),jule::Slice<jule::Any>({jule::Any(_36517_op._field_kind)}));
		return jule::new_ref<_1ce385d22_UnaryExpr>();
	}
	_36434_tokens=_36434_tokens.slice(1LL);
	return jule::new_struct<_1ce385d22_UnaryExpr>(new( std::nothrow ) _1ce385d22_UnaryExpr(_36517_op,(*this)._method_build(_36434_tokens)));
}



inline jule::Ref<_1ce385d22_SubIdentExpr> _1ce5ee178_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_1ce35e3a0_Token> _38542_tokens) {
	jule::I64 _38617_i = _38542_tokens.len() - 1LL;
	_1ce35e3a0_Token _38717_ident_token = _38542_tokens[static_cast<jule::Int>(_38617_i)];
	(_38617_i)--;
	_38542_tokens=_38542_tokens.slice(0LL,static_cast<jule::Int>(_38617_i));
	if (_38542_tokens.len() == 0LL) {
		(*this)._method_push_err(_38717_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_SubIdentExpr>();
	}
	return jule::new_struct<_1ce385d22_SubIdentExpr>(new( std::nothrow ) _1ce385d22_SubIdentExpr(jule::Bool(),(*this)._method_build(_38542_tokens),_38717_ident_token));
}



inline jule::Ref<_1ce385d22_NsSelectionExpr> _1ce5ee178_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_1ce35e3a0_Token>& _40042_tokens) {
	jule::Ref<_1ce385d22_NsSelectionExpr> _40117_ns = jule::new_struct<_1ce385d22_NsSelectionExpr>(new( std::nothrow ) _1ce385d22_NsSelectionExpr());
	{
		jule::Int _1ce5ee178_i = 0;
		for (auto _1ce5ee178_token: _40042_tokens) {
			{
				if (jule::mod(_1ce5ee178_i,2LL) == 0LL) {
					if (_1ce5ee178_token._field_id != 2LLU) {
						(*this)._method_push_err(_1ce5ee178_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					}
					_40117_ns->_field_ns=jule::append(_40117_ns->_field_ns,jule::Slice<_1ce35e3a0_Token>({_1ce5ee178_token}));
				} else if (_1ce5ee178_token._field_id != 23LLU) {
					(*this)._method_push_err(_1ce5ee178_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>({}));
				}
			}
		_iter_next_4534970912:;
		_1ce5ee178_i++;
		}
		_iter_end_4534970912:;
	}
	_40117_ns->_field_ident=_40117_ns->_field_ns[static_cast<jule::Int>(_40117_ns->_field_ns.len() - 1LL)];
	_40117_ns->_field_ns=_40117_ns->_field_ns.slice(0LL,static_cast<jule::Int>(_40117_ns->_field_ns.len() - 1LL));
	return _40117_ns;
}



inline jule::Ref<_1ce385d22_TypeDecl> _1ce5ee178_ExprBuilder::_method_build_type(jule::Slice<_1ce35e3a0_Token>& _41934_tokens) {
	jule::Int _42017_i = 0LL;
	jule::Ref<_1ce385d22_TypeDecl> _42118_t;
	jule::Bool _42121_ok;
	std::tie(_42118_t,_42121_ok) = (*this)._field_p->_method_build_type(_41934_tokens,(&(_42017_i)),false);
	if ((!(_42121_ok))) {
		(*this)._method_push_err(_41934_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_TypeDecl>();
	}
	if (_42017_i < _41934_tokens.len()) {
		(*this)._method_push_err(_41934_tokens[static_cast<jule::Int>(_42017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _42118_t;
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build_sub_ident(jule::Slice<_1ce35e3a0_Token>& _43339_tokens) {
	jule::I64 _43413_i = _43339_tokens.len() - 2LL;
	_1ce35e3a0_Token _43513_token = _43339_tokens[static_cast<jule::Int>(_43413_i)];
	{
		auto _match_expr{ _43513_token._field_id };
		if (!((20LLU) == _match_expr)) { goto _case_end_4534997632; }
		_case_begin_4534997632:;
		{
			return jule::Any((*this)._method_build_obj_sub_ident(_43339_tokens));
		}
		goto _match_end_4534997424;
		_case_end_4534997632:;
		if (!((23LLU) == _match_expr)) { goto _case_end_4534997728; }
		_case_begin_4534997728:;
		{
			return jule::Any((*this)._method_build_ns_sub_ident(_43339_tokens));
		}
		goto _match_end_4534997424;
		_case_end_4534997728:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4534997824; }
		_case_begin_4534997824:;
		{
			if (_43513_token._field_kind == jule::Str("]", 1)) {
				return jule::Any((*this)._method_build_type(_43339_tokens));
			}
		}
		goto _match_end_4534997424;
		_case_end_4534997824:;
		_match_end_4534997424:;
	}
	(*this)._method_push_err(_43513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_1ce385d22_VariadicExpr> _1ce5ee178_ExprBuilder::_method_build_variadic(jule::Slice<_1ce35e3a0_Token> _45437_tokens) {
	_1ce35e3a0_Token _45517_token = _45437_tokens[static_cast<jule::Int>(_45437_tokens.len() - 1LL)];
	_45437_tokens=_45437_tokens.slice(0LL,static_cast<jule::Int>(_45437_tokens.len() - 1LL));
	return jule::new_struct<_1ce385d22_VariadicExpr>(new( std::nothrow ) _1ce385d22_VariadicExpr(_45517_token,(*this)._method_build(_45437_tokens)));
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build_op_right(jule::Slice<_1ce35e3a0_Token>& _46338_tokens) {
	_1ce35e3a0_Token _46417_token = _46338_tokens[static_cast<jule::Int>(_46338_tokens.len() - 1LL)];
	{
		auto _match_expr{ _46417_token._field_kind };
		if (!((jule::Str("...", 3)) == _match_expr)) { goto _case_end_4535016272; }
		_case_begin_4535016272:;
		{
			return jule::Any((*this)._method_build_variadic(_46338_tokens));
		}
		goto _match_end_4535013616;
		_case_end_4535016272:;
		_case_begin_4535011488:;
		{
			(*this)._method_push_err(_46417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4535013616;
		_case_end_4535011488:;
		_match_end_4535013616:;
	}
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build_between_parentheses(jule::Slice<_1ce35e3a0_Token> _47548_tokens) {
	_1ce35e3a0_Token _47613_token = _47548_tokens[0LL];
	_47548_tokens=_47548_tokens.slice(1LL,static_cast<jule::Int>(_47548_tokens.len() - 1LL));
	if (_47548_tokens.len() == 0LL) {
		(*this)._method_push_err(_47613_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_47548_tokens);
}



inline jule::Ref<_1ce385d22_CastExpr> _1ce5ee178_ExprBuilder::_method_try_build_cast(jule::Slice<_1ce35e3a0_Token>& _48638_tokens) {
	jule::Int _48717_range_n = 0LL;
	{
		jule::Int _1ce5ee178_i = 0;
		for (auto _1ce5ee178_token: _48638_tokens) {
			{
				if (_1ce5ee178_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1ce5ee178_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4535032224; }
						_case_begin_4535032224:;
						{
							(_48717_range_n)++;
							goto _iter_next_4535027504;
						}
						goto _match_end_4535030864;
						_case_end_4535032224:;
						_case_begin_4535030176:;
						{
							(_48717_range_n)--;
						}
						goto _match_end_4535030864;
						_case_end_4535030176:;
						_match_end_4535030864:;
					}
				}
				if (_48717_range_n > 0LL) {
					goto _iter_next_4535027504;
				} else if ((_1ce5ee178_i + 1LL) == _48638_tokens.len()) {
					return jule::new_ref<_1ce385d22_CastExpr>();
				}
				jule::Slice<_1ce35e3a0_Token> _50821_type_tokens = _48638_tokens.slice(0LL,static_cast<jule::Int>(_1ce5ee178_i + 1LL));
				jule::Slice<_1ce35e3a0_Token> _50921_expr_tokens = _48638_tokens.slice(static_cast<jule::Int>(_1ce5ee178_i + 1LL));
				if (_50921_expr_tokens.len() == 0LL) {
					return jule::new_ref<_1ce385d22_CastExpr>();
				}
				_1ce35e3a0_Token _51617_tok = _50921_expr_tokens[0LL];
				if ((_51617_tok._field_id != 3LLU) || (_51617_tok._field_kind != jule::Str("(", 1))) {
					return jule::new_ref<_1ce385d22_CastExpr>();
				}
				jule::Ref<_1ce385d22_CastExpr> _52121_cast = jule::new_struct<_1ce385d22_CastExpr>(new( std::nothrow ) _1ce385d22_CastExpr());
				if (_50921_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_50921_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>({}));
				}
				if (_50821_type_tokens.len() == 2LL) {
					(*this)._method_push_err(_50821_type_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>({}));
				} else {
					_50821_type_tokens=_50821_type_tokens.slice(1LL,static_cast<jule::Int>(_50821_type_tokens.len() - 1LL));
					jule::Int _53525_type_index = 0LL;
					jule::Ref<_1ce385d22_TypeDecl> _53626_t;
					jule::Bool _53629_ok;
					std::tie(_53626_t,_53629_ok) = (*this)._field_p->_method_build_type(_50821_type_tokens,(&(_53525_type_index)),true);
					if (_53629_ok && (_53525_type_index < _50821_type_tokens.len())) {
						(*this)._method_push_err(_50821_type_tokens[static_cast<jule::Int>(_53525_type_index)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					} else if ((!(_53629_ok))) {
						return _52121_cast;
					}
					_52121_cast->_field_kind=_53626_t;
					if (_50921_expr_tokens.len() > 2LL) {
						jule::Int _54629_j = 0LL;
						_1b5c910d6_range(_54629_j,jule::Str("(", 1),jule::Str(")", 1),_50921_expr_tokens);
						if (_54629_j < _50921_expr_tokens.len()) {
							return jule::new_ref<_1ce385d22_CastExpr>();
						}
						_50921_expr_tokens=_50921_expr_tokens.slice(0LL,static_cast<jule::Int>(_54629_j));
						_52121_cast->_field_expr=(*this)._method_build(_50921_expr_tokens);
					}
				}
				return _52121_cast;
			}
		_iter_next_4535027504:;
		_1ce5ee178_i++;
		}
		_iter_end_4535027504:;
	}
	return jule::new_ref<_1ce385d22_CastExpr>();
}



inline void _1ce5ee178_ExprBuilder::_method_push_arg(jule::Slice<jule::Ref<_1ce385d22_Expr>>& _56132_args,jule::Slice<_1ce35e3a0_Token> _56151_tokens,_1ce35e3a0_Token _56168_err_token) {
	if (_56151_tokens.len() == 0LL) {
		(*this)._method_push_err(_56168_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_56132_args=jule::append(_56132_args,jule::Slice<jule::Ref<_1ce385d22_Expr>>({(*this)._method_build_from_tokens(_56151_tokens)}));
}



inline jule::Slice<jule::Ref<_1ce385d22_Expr>> _1ce5ee178_ExprBuilder::_method_build_args(jule::Slice<_1ce35e3a0_Token> _57033_tokens) {
	if (_57033_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1ce385d22_Expr>> _57617_args = nullptr;
	jule::Int _57717_last = 0LL;
	jule::Int _57817_range_n = 0LL;
	_57033_tokens=_57033_tokens.slice(1LL,static_cast<jule::Int>(_57033_tokens.len() - 1LL));
	{
		jule::Int _1ce5ee178_i = 0;
		for (auto _1ce5ee178_token: _57033_tokens) {
			{
				if (_1ce5ee178_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1ce5ee178_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4535079728; }
						_case_begin_4535079728:;
						{
							(_57817_range_n)++;
						}
						goto _match_end_4535078368;
						_case_end_4535079728:;
						_case_begin_4535077680:;
						{
							(_57817_range_n)--;
						}
						goto _match_end_4535078368;
						_case_end_4535077680:;
						_match_end_4535078368:;
					}
				}
				if ((_57817_range_n > 0LL) || (_1ce5ee178_token._field_id != 8LLU)) {
					goto _iter_next_4535074080;
				}
				(*this)._method_push_arg(_57617_args,_57033_tokens.slice(static_cast<jule::Int>(_57717_last),static_cast<jule::Int>(_1ce5ee178_i)),_1ce5ee178_token);
				_57717_last=static_cast<jule::Int>(_1ce5ee178_i + 1LL);
			}
		_iter_next_4535074080:;
		_1ce5ee178_i++;
		}
		_iter_end_4535074080:;
	}
	if (_57717_last < _57033_tokens.len()) {
		if (_57717_last == 0LL) {
			if (_57033_tokens.len() > 0LL) {
				(*this)._method_push_arg(_57617_args,_57033_tokens.slice(static_cast<jule::Int>(_57717_last)),_57033_tokens[static_cast<jule::Int>(_57717_last)]);
			}
		} else {
			(*this)._method_push_arg(_57617_args,_57033_tokens.slice(static_cast<jule::Int>(_57717_last)),_57033_tokens[static_cast<jule::Int>(_57717_last - 1LL)]);
		}
	}
	return _57617_args;
}



inline jule::Slice<jule::Ref<_1ce385d22_TypeDecl>> _1ce5ee178_ExprBuilder::_method_build_call_generics(jule::Slice<_1ce35e3a0_Token> _61342_tokens) {
	if (_61342_tokens.len() == 0LL) {
		return nullptr;
	}
	_61342_tokens=_61342_tokens.slice(1LL,static_cast<jule::Int>(_61342_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _61918_parts;
	jule::Slice<_1e7690a81_Log> _61925_errs;
	std::tie(_61918_parts,_61925_errs) = _1b5c910d6_parts(_61342_tokens,8LLU,true);
	jule::Slice<jule::Ref<_1ce385d22_TypeDecl>> _62017_generics = jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_61918_parts.len())));
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_61925_errs);
	{
		jule::Int _1ce5ee178_i = 0;
		for (auto _1ce5ee178_part: _61918_parts) {
			{
				if (_1ce5ee178_part.len() == 0LL) {
					goto _iter_next_4535114624;
				}
				jule::Int _62621_j = 0LL;
				jule::Ref<_1ce385d22_TypeDecl> _62722_generic;
				std::tie(_62722_generic,std::ignore) = (*this)._field_p->_method_build_type(_1ce5ee178_part,(&(_62621_j)),true);
				if (_62621_j < _1ce5ee178_part.len()) {
					(*this)._method_push_err(_1ce5ee178_part[static_cast<jule::Int>(_62621_j)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_62017_generics[static_cast<jule::Int>(_1ce5ee178_i)]=_62722_generic;
			}
		_iter_next_4535114624:;
		_1ce5ee178_i++;
		}
		_iter_end_4535114624:;
	}
	return _62017_generics;
}



inline jule::Ref<_1ce385d22_FnCallExpr> _1ce5ee178_ExprBuilder::_method_build_fn_call(_1ce35e3a0_Token& _63737_token,jule::Ref<_1ce5ee178_CallData>& _63756_data) {
	return jule::new_struct<_1ce385d22_FnCallExpr>(new( std::nothrow ) _1ce385d22_FnCallExpr(_63737_token,(*this)._method_build_from_tokens(_63756_data->_field_expr_tokens),(*this)._method_build_call_generics(_63756_data->_field_generics_tokens),(*this)._method_build_args(_63756_data->_field_args_tokens),jule::Bool()));
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build_parentheses_range(jule::Slice<_1ce35e3a0_Token>& _64647_tokens) {
	_1ce35e3a0_Token _64717_token = _64647_tokens[0LL];
	{
		auto _match_expr{ _64717_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4535132880; }
		_case_begin_4535132880:;
		{
			{
				auto _match_expr{ _64717_token._field_kind };
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4535136048; }
				_case_begin_4535136048:;
				{
					jule::Ref<_1ce385d22_CastExpr> _65225_expr = (*this)._method_try_build_cast(_64647_tokens);
					if (jule::real(_65225_expr)) {
						return jule::Any(_65225_expr);
					}
				}
				goto _match_end_4535135888;
				_case_end_4535136048:;
				_match_end_4535135888:;
			}
		}
		goto _match_end_4535134480;
		_case_end_4535132880:;
		_match_end_4535134480:;
	}
	jule::Ref<_1ce5ee178_CallData> _65917_data = _1ce5ee178_get_call_data(_64647_tokens);
	if (_65917_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_65917_data->_field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_64717_token,_65917_data));
}



inline jule::Ref<_1ce385d22_UnsafeExpr> _1ce5ee178_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_1ce35e3a0_Token> _67040_tokens) {
	_1ce35e3a0_Token _67117_token = _67040_tokens[0LL];
	_67040_tokens=_67040_tokens.slice(1LL);
	jule::Int _67317_i = 0LL;
	jule::Slice<_1ce35e3a0_Token> _67417_range_tokens = _1b5c910d6_range(_67317_i,jule::Str("{", 1),jule::Str("}", 1),_67040_tokens);
	if (_67417_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_67040_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_UnsafeExpr>();
	}
	return jule::new_struct<_1ce385d22_UnsafeExpr>(new( std::nothrow ) _1ce385d22_UnsafeExpr(_67117_token,(*this)._method_build_from_tokens(_67417_range_tokens)->_field_kind));
}



inline jule::Ref<_1ce385d22_FnDecl> _1ce5ee178_ExprBuilder::_method_build_anon_fn(jule::Slice<_1ce35e3a0_Token>& _68537_tokens) {
	jule::Ref<_1ce385d22_FnDecl> _68617_f = (*this)._field_p->_method_build_fn(_68537_tokens,false,false);
	if ((!(_68617_f->_method_is_anon()))) {
		(*this)._method_push_err(_68617_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>({}));
	}
	return _68617_f;
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build_unsafe(jule::Slice<_1ce35e3a0_Token>& _69436_tokens) {
	{
		auto _match_expr{ _69436_tokens[1LL]._field_id };
		if (!((33LLU) == _match_expr)) { goto _case_end_4535163344; }
		_case_begin_4535163344:;
		{
			return jule::Any((*this)._method_build_anon_fn(_69436_tokens));
		}
		goto _match_end_4535161936;
		_case_end_4535163344:;
		_case_begin_4535160896:;
		{
			return jule::Any((*this)._method_build_unsafe_expr(_69436_tokens));
		}
		goto _match_end_4535161936;
		_case_end_4535160896:;
		_match_end_4535161936:;
	}
}



inline void _1ce5ee178_ExprBuilder::_method_push_range_lit_part(jule::Slice<_1ce35e3a0_Token> _70542_part,_1ce35e3a0_Token _7069_error_token,jule::Slice<jule::Slice<_1ce35e3a0_Token>>& _70634_parts) {
	if (_70542_part.len() == 0LL) {
		(*this)._method_push_err(_7069_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_70634_parts=jule::append(_70634_parts,jule::Slice<jule::Slice<_1ce35e3a0_Token>>({_70542_part}));
}



inline jule::Slice<jule::Slice<_1ce35e3a0_Token>> _1ce5ee178_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_1ce35e3a0_Token> _71653_tokens) {
	if (_71653_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _72217_parts = nullptr;
	jule::Int _72417_last = 0LL;
	jule::Int _72517_range_n = 0LL;
	_71653_tokens=_71653_tokens.slice(1LL,static_cast<jule::Int>(_71653_tokens.len() - 1LL));
	{
		jule::Int _1ce5ee178_i = 0;
		for (auto _1ce5ee178_token: _71653_tokens) {
			{
				if (_1ce5ee178_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1ce5ee178_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4535183408; }
						_case_begin_4535183408:;
						{
							(_72517_range_n)++;
						}
						goto _match_end_4535182048;
						_case_end_4535183408:;
						_case_begin_4535181360:;
						{
							(_72517_range_n)--;
						}
						goto _match_end_4535182048;
						_case_end_4535181360:;
						_match_end_4535182048:;
					}
				}
				if ((_72517_range_n > 0LL) || (_1ce5ee178_token._field_id != 8LLU)) {
					goto _iter_next_4535177760;
				}
				(*this)._method_push_range_lit_part(_71653_tokens.slice(static_cast<jule::Int>(_72417_last),static_cast<jule::Int>(_1ce5ee178_i)),_1ce5ee178_token,_72217_parts);
				_72417_last=static_cast<jule::Int>(_1ce5ee178_i + 1LL);
			}
		_iter_next_4535177760:;
		_1ce5ee178_i++;
		}
		_iter_end_4535177760:;
	}
	if (_72417_last < _71653_tokens.len()) {
		if (_72417_last == 0LL) {
			if (_71653_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_71653_tokens.slice(static_cast<jule::Int>(_72417_last)),_71653_tokens[static_cast<jule::Int>(_72417_last)],_72217_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_71653_tokens.slice(static_cast<jule::Int>(_72417_last)),_71653_tokens[static_cast<jule::Int>(_72417_last - 1LL)],_72217_parts);
		}
	}
	return _72217_parts;
}



inline jule::Ref<_1ce385d22_FieldExprPair> _1ce5ee178_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_1ce35e3a0_Token> _75944_tokens) {
	jule::Ref<_1ce385d22_FieldExprPair> _76017_pair = jule::new_struct<_1ce385d22_FieldExprPair>(new( std::nothrow ) _1ce385d22_FieldExprPair(_75944_tokens[0LL],jule::Any()));
	_75944_tokens=_75944_tokens.slice(2LL);
	_76017_pair->_field_expr=(*this)._method_build_from_tokens(_75944_tokens)->_field_kind;
	return _76017_pair;
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_1ce35e3a0_Token>& _76845_tokens) {
	_1ce35e3a0_Token _76917_token = _76845_tokens[0LL];
	if (_76917_token._field_id == 2LLU) {
		if (_76845_tokens.len() > 1LL) {
			_76917_token=_76845_tokens[1LL];
			if (_76917_token._field_id == 11LLU) {
				return jule::Any((*this)._method_build_field_expr_pair(_76845_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_76845_tokens));
}



inline jule::Slice<jule::Any> _1ce5ee178_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_1ce35e3a0_Token>& _78146_tokens) {
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _78217_parts = (*this)._method_get_brace_range_lit_expr_parts(_78146_tokens);
	if (_78217_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _78717_pairs = jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_78217_parts.len())));
	{
		jule::Int _1ce5ee178_i = 0;
		for (auto _1ce5ee178_part: _78217_parts) {
			{
				_78717_pairs[static_cast<jule::Int>(_1ce5ee178_i)]=(*this)._method_build_struct_lit_expr(_1ce5ee178_part);
			}
		_iter_next_4535212656:;
		_1ce5ee178_i++;
		}
		_iter_end_4535212656:;
	}
	return _78717_pairs;
}



inline jule::Ref<_1ce385d22_StructLit> _1ce5ee178_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_1ce35e3a0_Token> _79449_tokens) {
	jule::Int _79517_i = 0LL;
	jule::Ref<_1ce385d22_TypeDecl> _79618_t;
	jule::Bool _79621_ok;
	std::tie(_79618_t,_79621_ok) = (*this)._field_p->_method_build_type(_79449_tokens,(&(_79517_i)),true);
	if ((!(_79621_ok))) {
		return jule::new_ref<_1ce385d22_StructLit>();
	} else if (_79517_i >= _79449_tokens.len()) {
		(*this)._method_push_err(_79449_tokens[static_cast<jule::Int>(_79517_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_StructLit>();
	}
	_79449_tokens=_79449_tokens.slice(static_cast<jule::Int>(_79517_i));
	_1ce35e3a0_Token _80513_token = _79449_tokens[0LL];
	if ((_80513_token._field_id != 3LLU) || (_80513_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_80513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_StructLit>();
	}
	return jule::new_struct<_1ce385d22_StructLit>(new( std::nothrow ) _1ce385d22_StructLit(_79618_t,(*this)._method_build_struct_lit_exprs(_79449_tokens)));
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_1ce35e3a0_Token>& _81744_tokens) {
	jule::Slice<_1ce35e3a0_Token> _81818_l;
	jule::Slice<_1ce35e3a0_Token> _81825_r;
	std::tie(_81818_l,_81825_r) = _1ce5ee178_split_colon(_81744_tokens);
	if (_81818_l != nullptr) {
		return jule::Any(jule::new_struct<_1ce385d22_KeyValPair>(new( std::nothrow ) _1ce385d22_KeyValPair((*this)._method_build_from_tokens(_81818_l)->_field_kind,(*this)._method_build_from_tokens(_81825_r)->_field_kind,_81744_tokens[static_cast<jule::Int>(_81818_l.len())])));
	}
	return jule::Any((*this)._method_build_from_tokens(_81744_tokens));
}



inline jule::Ref<_1ce385d22_BraceLit> _1ce5ee178_ExprBuilder::_method_build_brace_lit(jule::Slice<_1ce35e3a0_Token>& _83039_tokens) {
	jule::Ref<_1ce385d22_BraceLit> _83117_lit = jule::new_struct<_1ce385d22_BraceLit>(new( std::nothrow ) _1ce385d22_BraceLit(_83039_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _83517_parts = (*this)._method_get_brace_range_lit_expr_parts(_83039_tokens);
	if (_83517_parts == nullptr) {
		return _83117_lit;
	}
	_83117_lit->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_83517_parts.len())));
	{
		jule::Int _1ce5ee178_i = 0;
		for (auto _1ce5ee178_part: _83517_parts) {
			{
				_83117_lit->_field_exprs[static_cast<jule::Int>(_1ce5ee178_i)]=(*this)._method_build_brace_lit_part(_1ce5ee178_part);
			}
		_iter_next_4535242848:;
		_1ce5ee178_i++;
		}
		_iter_end_4535242848:;
	}
	return _83117_lit;
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build_brace_range(jule::Slice<_1ce35e3a0_Token>& _84841_tokens) {
	jule::Slice<_1ce35e3a0_Token> _84914_expr_tokens;
	jule::Int _84927_range_n;
	std::tie(_84914_expr_tokens,_84927_range_n) = _1ce5ee178_get_range_expr_tokens(_84841_tokens);
	{
		if (!((_84914_expr_tokens.len() == 0LL))) { goto _case_end_4535251264; }
		_case_begin_4535251264:;
		{
			return jule::Any((*this)._method_build_brace_lit(_84841_tokens));
		}
		goto _match_end_4535251120;
		_case_end_4535251264:;
		if (!((_84927_range_n > 0LL))) { goto _case_end_4535251376; }
		_case_begin_4535251376:;
		{
			(*this)._method_push_err(_84841_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4535251120;
		_case_end_4535251376:;
		_match_end_4535251120:;
	}
	{
		auto _match_expr{ _84914_expr_tokens[0LL]._field_id };
		if (!((35LLU) == _match_expr)) { goto _case_end_4535256768; }
		_case_begin_4535256768:;
		{
			return (*this)._method_build_unsafe(_84841_tokens);
		}
		goto _match_end_4535252928;
		_case_end_4535256768:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4535259280; }
		_case_begin_4535259280:;
		{
			return jule::Any((*this)._method_build_anon_fn(_84841_tokens));
		}
		goto _match_end_4535252928;
		_case_end_4535259280:;
		if (!((2LLU) == _match_expr || (31LLU) == _match_expr)) { goto _case_end_4535258672; }
		_case_begin_4535258672:;
		{
			return jule::Any((*this)._method_build_typed_struct_literal(_84841_tokens));
		}
		goto _match_end_4535252928;
		_case_end_4535258672:;
		_case_begin_4535254032:;
		{
			(*this)._method_push_err(_84914_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4535252928;
		_case_end_4535254032:;
		_match_end_4535252928:;
	}
}



inline jule::Slice<jule::Slice<_1ce35e3a0_Token>> _1ce5ee178_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_1ce35e3a0_Token> _87843_tokens) {
	_87843_tokens=_87843_tokens.slice(1LL,static_cast<jule::Int>(_87843_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _88018_parts;
	jule::Slice<_1e7690a81_Log> _88025_errors;
	std::tie(_88018_parts,_88025_errors) = _1b5c910d6_parts(_87843_tokens,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_88025_errors);
	return _88018_parts;
}



inline jule::Ref<_1ce385d22_SliceExpr> _1ce5ee178_ExprBuilder::_method_build_slice(jule::Slice<_1ce35e3a0_Token> _88534_tokens) {
	jule::Ref<_1ce385d22_SliceExpr> _88617_slc = jule::new_struct<_1ce385d22_SliceExpr>(new( std::nothrow ) _1ce385d22_SliceExpr(_88534_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _89017_parts = (*this)._method_get_enumerable_parts(_88534_tokens);
	if (_89017_parts.len() == 0LL) {
		return _88617_slc;
	}
	_88617_slc->_field_elems=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_89017_parts.len())));
	{
		jule::Int _1ce5ee178_i = 0;
		for (auto _1ce5ee178_p: _89017_parts) {
			{
				_88617_slc->_field_elems[static_cast<jule::Int>(_1ce5ee178_i)]=(*this)._method_build_from_tokens(_1ce5ee178_p)->_field_kind;
			}
		_iter_next_4535274816:;
		_1ce5ee178_i++;
		}
		_iter_end_4535274816:;
	}
	return _88617_slc;
}



inline jule::Ref<_1ce385d22_IndexingExpr> _1ce5ee178_ExprBuilder::_method_build_indexing(jule::Slice<_1ce35e3a0_Token> _90337_expr_tokens,jule::Slice<_1ce35e3a0_Token> _90413_tokens,_1ce35e3a0_Token _90434_error_token) {
	_90413_tokens=_90413_tokens.slice(1LL,static_cast<jule::Int>(_90413_tokens.len() - 1LL));
	return jule::new_struct<_1ce385d22_IndexingExpr>(new( std::nothrow ) _1ce385d22_IndexingExpr(_90434_error_token,(*this)._method_build_from_tokens(_90337_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_90413_tokens)->_field_kind));
}



inline jule::Ref<_1ce385d22_SlicingExpr> _1ce5ee178_ExprBuilder::_method_build_slicing(jule::Slice<_1ce35e3a0_Token>& _91337_expr_tokens,jule::Slice<_1ce35e3a0_Token>& _91364_slicing_tokens,jule::Int& _91410_colon,_1ce35e3a0_Token& _91427_error_token) {
	jule::Ref<_1ce385d22_SlicingExpr> _91517_slc = jule::new_struct<_1ce385d22_SlicingExpr>(new( std::nothrow ) _1ce385d22_SlicingExpr(_91427_error_token,(*this)._method_build_from_tokens(_91337_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_1ce35e3a0_Token> _92017_start_expr_tokens = _91364_slicing_tokens.slice(0LL,static_cast<jule::Int>(_91410_colon));
	if (_92017_start_expr_tokens.len() > 0LL) {
		_91517_slc->_field_start=(*this)._method_build_from_tokens(_92017_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_1ce35e3a0_Token> _92517_to_expr_tokens = _91364_slicing_tokens.slice(static_cast<jule::Int>(_91410_colon + 1LL));
	if (_92517_to_expr_tokens.len() > 0LL) {
		_91517_slc->_field_to=(*this)._method_build_from_tokens(_92517_to_expr_tokens)->_field_kind;
	}
	return _91517_slc;
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build_bracket_range(jule::Slice<_1ce35e3a0_Token> _93342_tokens) {
	_1ce35e3a0_Token _93417_error_token = _93342_tokens[0LL];
	jule::Slice<_1ce35e3a0_Token> _93518_expr_tokens;
	jule::Int _93531_range_n;
	std::tie(_93518_expr_tokens,_93531_range_n) = _1ce5ee178_get_range_expr_tokens(_93342_tokens);
	{
		if (!((_93518_expr_tokens.len() == 0LL))) { goto _case_end_4535302192; }
		_case_begin_4535302192:;
		{
			return jule::Any((*this)._method_build_slice(_93342_tokens));
		}
		goto _match_end_4535302032;
		_case_end_4535302192:;
		if (!(((_93518_expr_tokens.len() == 0LL) || (_93531_range_n > 0LL)))) { goto _case_end_4535302304; }
		_case_begin_4535302304:;
		{
			(*this)._method_push_err(_93417_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4535302032;
		_case_end_4535302304:;
		_match_end_4535302032:;
	}
	_93342_tokens=_93342_tokens.slice(static_cast<jule::Int>(_93518_expr_tokens.len()));
	jule::Int _95417_i = 0LL;
	jule::Slice<_1ce35e3a0_Token> _95518_slicing_tokens;
	jule::Int _95534_colon;
	std::tie(_95518_slicing_tokens,_95534_colon) = _1b5d8e899_split_map_range(_93342_tokens,_95417_i);
	if (_95534_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_93518_expr_tokens,_95518_slicing_tokens,_95534_colon,_93417_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_93518_expr_tokens,_93342_tokens,_93417_error_token));
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build_ternary(jule::Slice<_1ce35e3a0_Token> _96236_tokens) {
	jule::Ref<_1ce385d22_TernaryExpr> _96317_ter = jule::new_struct<_1ce385d22_TernaryExpr>(new( std::nothrow ) _1ce385d22_TernaryExpr());
	_96317_ter->_field_token=_96236_tokens[0LL];
	_96236_tokens=_96236_tokens.slice(1LL);
	jule::Slice<_1ce35e3a0_Token> _96717_expr_tokens = _1ce5ee178_get_block_expr(_96236_tokens);
	if (_96717_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_96317_ter->_field_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	_96317_ter->_field_condition=(*this)._method_build_kind(_96717_expr_tokens);
	jule::I64 _97417_i = _96717_expr_tokens.len();
	jule::Slice<_1ce35e3a0_Token> _97517_true_expr = _1b5c910d6_range(_97417_i,jule::Str("{", 1),jule::Str("}", 1),_96236_tokens);
	if (_97517_true_expr == nullptr) {
		(*this)._method_push_err(_96317_ter->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(_96317_ter);
	} else if (_97517_true_expr.len() == 0LL) {
		(*this)._method_push_err(_96236_tokens[static_cast<jule::Int>(_96717_expr_tokens.len())],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	if (_97417_i >= _96236_tokens.len()) {
		(*this)._method_push_err(_96317_ter->_field_token,jule::Str("else block missed for ternary operator", 38),jule::Slice<jule::Any>({}));
		return jule::Any(_96317_ter);
	}
	_1ce35e3a0_Token _98913_else_token = _96236_tokens[static_cast<jule::Int>(_97417_i)];
	if (_98913_else_token._field_id != 17LLU) {
		(*this)._method_push_err(_98913_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("else keyword expected for else block of ternary operator", 56),jule::Slice<jule::Any>({}));
		return jule::Any(_96317_ter);
	}
	(_97417_i)++;
	jule::I64 _99713_j = _97417_i;
	jule::Slice<_1ce35e3a0_Token> _99817_false_expr = _1b5c910d6_range(_97417_i,jule::Str("{", 1),jule::Str("}", 1),_96236_tokens);
	if (_99817_false_expr == nullptr) {
		(*this)._method_push_err(_98913_else_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(_96317_ter);
	} else if (_99817_false_expr.len() == 0LL) {
		(*this)._method_push_err(_96236_tokens[static_cast<jule::Int>(_99713_j)],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	if (_97417_i < _96236_tokens.len()) {
		(*this)._method_push_err(_96236_tokens[static_cast<jule::Int>(_97417_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_96317_ter->_field_true_expr=(*this)._method_build_kind(_97517_true_expr);
	_96317_ter->_field_false_expr=(*this)._method_build_kind(_99817_false_expr);
	return jule::Any(_96317_ter);
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build_data(jule::Slice<_1ce35e3a0_Token>& _101734_tokens) {
	{
		auto _match_expr{ _101734_tokens.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4535347760; }
		_case_begin_4535347760:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4535347328;
		_case_end_4535347760:;
		if (!((1LL) == _match_expr)) { goto _case_end_4535347856; }
		_case_begin_4535347856:;
		{
			return (*this)._method_build_single(_101734_tokens[0LL]);
		}
		goto _match_end_4535347328;
		_case_end_4535347856:;
		if (!((3LL) == _match_expr)) { goto _case_end_4535347952; }
		_case_begin_4535347952:;
		{
			if (_101734_tokens[0LL]._field_id == 31LLU) {
				return jule::Any((*this)._method_build_cpp_linked_ident(_101734_tokens));
			}
		}
		goto _match_end_4535347328;
		_case_end_4535347952:;
		_match_end_4535347328:;
	}
	_1ce35e3a0_Token _103117_token = _101734_tokens[0LL];
	{
		auto _match_expr{ _103117_token._field_id };
		if (!((16LLU) == _match_expr)) { goto _case_end_4535354336; }
		_case_begin_4535354336:;
		{
			return (*this)._method_build_ternary(_101734_tokens);
		}
		goto _match_end_4535354144;
		_case_end_4535354336:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4535354432; }
		_case_begin_4535354432:;
		{
			if ((_101734_tokens.len() > 1LL) && (_103117_token._field_kind == jule::Str("*", 1))) {
				_103117_token=_101734_tokens[1LL];
				if ((_103117_token._field_id == 1LLU) || (_103117_token._field_id == 35LLU)) {
					return jule::Any((*this)._method_build_type(_101734_tokens));
				}
			}
			return jule::Any((*this)._method_build_unary(_101734_tokens));
		}
		goto _match_end_4535354144;
		_case_end_4535354432:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4535354528; }
		_case_begin_4535354528:;
		{
			if ((_103117_token._field_kind != jule::Str("[", 1)) || (_101734_tokens.len() < 3LL)) {
				goto _match_end_4535354144;
			}
			_1ce35e3a0_Token _105217_next = _101734_tokens[1LL];
			if ((_105217_next._field_id != 3LLU) || (_105217_next._field_kind != jule::Str("]", 1))) {
				goto _match_end_4535354144;
			}
			return jule::Any((*this)._method_build_type(_101734_tokens));
		}
		goto _match_end_4535354144;
		_case_end_4535354528:;
		_match_end_4535354144:;
	}
	_103117_token=_101734_tokens[static_cast<jule::Int>(_101734_tokens.len() - 1LL)];
	{
		auto _match_expr{ _103117_token._field_id };
		if (!((2LLU) == _match_expr)) { goto _case_end_4535366512; }
		_case_begin_4535366512:;
		{
			return (*this)._method_build_sub_ident(_101734_tokens);
		}
		goto _match_end_4535363872;
		_case_end_4535366512:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4535366608; }
		_case_begin_4535366608:;
		{
			return jule::Any((*this)._method_build_type(_101734_tokens));
		}
		goto _match_end_4535363872;
		_case_end_4535366608:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4535366752; }
		_case_begin_4535366752:;
		{
			return (*this)._method_build_op_right(_101734_tokens);
		}
		goto _match_end_4535363872;
		_case_end_4535366752:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4535366848; }
		_case_begin_4535366848:;
		{
			{
				auto _match_expr{ _103117_token._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4535370976; }
				_case_begin_4535370976:;
				{
					return (*this)._method_build_parentheses_range(_101734_tokens);
				}
				goto _match_end_4535370848;
				_case_end_4535370976:;
				if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4535371072; }
				_case_begin_4535371072:;
				{
					return (*this)._method_build_brace_range(_101734_tokens);
				}
				goto _match_end_4535370848;
				_case_end_4535371072:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4535371248; }
				_case_begin_4535371248:;
				{
					return (*this)._method_build_bracket_range(_101734_tokens);
				}
				goto _match_end_4535370848;
				_case_end_4535371248:;
				_match_end_4535370848:;
			}
		}
		goto _match_end_4535363872;
		_case_end_4535366848:;
		_match_end_4535363872:;
	}
	(*this)._method_push_err(_103117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_1ce385d22_BinopExpr> _1ce5ee178_ExprBuilder::_method_build_binop(jule::Slice<_1ce35e3a0_Token>& _108935_tokens,jule::Int _108952_i) {
	jule::Slice<_1ce35e3a0_Token> _109017_left_tokens = _108935_tokens.slice(0LL,static_cast<jule::Int>(_108952_i));
	jule::Slice<_1ce35e3a0_Token> _109117_right_tokens = _108935_tokens.slice(static_cast<jule::Int>(_108952_i + 1LL));
	if (_109017_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_108935_tokens[static_cast<jule::Int>(_108952_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_BinopExpr>();
	}
	if (_109117_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_108935_tokens[static_cast<jule::Int>(_108952_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_BinopExpr>();
	}
	return jule::new_struct<_1ce385d22_BinopExpr>(new( std::nothrow ) _1ce385d22_BinopExpr((*this)._method_build(_109017_left_tokens),(*this)._method_build(_109117_right_tokens),_108935_tokens[static_cast<jule::Int>(_108952_i)]));
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build(jule::Slice<_1ce35e3a0_Token>& _111229_tokens) {
	jule::Int _111313_i = _1ce5ee178_find_lowest_prec_op(_111229_tokens);
	if (_111313_i == -1LL) {
		return (*this)._method_build_data(_111229_tokens);
	}
	return jule::Any((*this)._method_build_binop(_111229_tokens,_111313_i));
}



inline jule::Any _1ce5ee178_ExprBuilder::_method_build_kind(jule::Slice<_1ce35e3a0_Token>& _112034_tokens) {
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _112118_parts;
	jule::Slice<_1e7690a81_Log> _112125_errors;
	std::tie(_112118_parts,_112125_errors) = _1b5c910d6_parts(_112034_tokens,8LLU,true);
	if (_112125_errors != nullptr) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_112125_errors);
		return jule::Any(nullptr);
	} else if (_112118_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_112118_parts));
	}
	return (*this)._method_build(_112034_tokens);
}



inline jule::Ref<_1ce385d22_Expr> _1ce5ee178_ExprBuilder::_method_build_from_tokens(jule::Slice<_1ce35e3a0_Token> _113140_tokens) {
	_113140_tokens=_1ce5ee178_eliminate_comments(_113140_tokens);
	if (_113140_tokens.len() == 0LL) {
		return jule::new_ref<_1ce385d22_Expr>();
	}
	return jule::new_struct<_1ce385d22_Expr>(new( std::nothrow ) _1ce385d22_Expr(_113140_tokens[0LL],(*this)._method_build_kind(_113140_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce5ee178_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _1b5c910d6_Parser::_method_stop(void) {
	jule::drop((*this)._field_ast);
}



inline jule::Bool _1b5c910d6_Parser::_method_stopped(void) {
	return (!(jule::real((*this)._field_ast)));
}



inline void _1b5c910d6_Parser::_method_push_err(_1ce35e3a0_Token _24027_token,jule::Str _24041_fmt,jule::Slice<jule::Any> _24054_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1e7690a81_Log>({_1b5c910d6_compiler_err(_24027_token,_24041_fmt,_24054_args)}));
}



inline void _1b5c910d6_Parser::_method_push_suggestion(jule::Str _24534_fmt,jule::Slice<jule::Any> _24547_args) {
	{
		_1b5c910d6_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_24534_fmt,_24547_args);
	}
}



inline jule::Ref<_1ce385d22_Expr> _1b5c910d6_Parser::_method_build_expr(jule::Slice<_1ce35e3a0_Token>& _24935_tokens) {
	jule::Ref<_1ce5ee178_ExprBuilder> _25017_ep = jule::new_struct<_1ce5ee178_ExprBuilder>(new( std::nothrow ) _1ce5ee178_ExprBuilder(this->self));
	jule::Ref<_1ce385d22_Expr> _25117_expr = _25017_ep->_method_build_from_tokens(_24935_tokens);
	return _25117_expr;
}



inline jule::Ref<_1ce385d22_Directive> _1b5c910d6_Parser::_method_get_directive(jule::Ref<_1ce385d22_Comment> _25532_c) {
	if (_25532_c->_field_text.len() <= jule::Str("jule:", 5).len()) {
		return jule::new_ref<_1ce385d22_Directive>();
	}
	jule::Ref<_1ce385d22_Directive> _26017_d = jule::new_struct<_1ce385d22_Directive>(new( std::nothrow ) _1ce385d22_Directive(_25532_c->_field_token,jule::Str(),jule::Slice<jule::Str>()));
	jule::Str _26413_pragma = _25532_c->_field_token._field_kind.slice(static_cast<jule::Int>(jule::Str("jule:", 5).len()));
	jule::Slice<jule::Str> _26517_parts = _26413_pragma.split(jule::Str(" ", 1),-1LL);
	_26017_d->_field_tag=_26517_parts[0LL];
	_26017_d->_field_args=_26517_parts.slice(1LL);
	jule::Bool _27117_ok = false;
	for (auto _1b5c910d6_kind: _1e768bede_DIRECTIVES) {
		{
			if (_26017_d->_field_tag == _1b5c910d6_kind) {
				_27117_ok=true;
				goto _iter_end_4535426640;
			}
		}
	_iter_next_4535426640:;
	}
	_iter_end_4535426640:;
	if ((!(_27117_ok))) {
		return jule::new_ref<_1ce385d22_Directive>();
	}
	return _26017_d;
}



inline void _1b5c910d6_Parser::_method_push_directive(jule::Ref<_1ce385d22_Comment>& _28538_c) {
	jule::Ref<_1ce385d22_Directive> _28617_d = (*this)._method_get_directive(_28538_c);
	if ((!(jule::real(_28617_d)))) {
		return;
	}
	for (auto _1b5c910d6_pd: (*this)._field_directives) {
		{
			if (_28617_d->_field_tag == _1b5c910d6_pd->_field_tag) {
				return;
			}
		}
	_iter_next_4535436944:;
	}
	_iter_end_4535436944:;
	(*this)._field_directives=jule::append((*this)._field_directives,jule::Slice<jule::Ref<_1ce385d22_Directive>>({_28617_d}));
}



inline void _1b5c910d6_Parser::_method_process_comment(jule::Ref<_1ce385d22_Comment>& _30139_c) {
	if (_30139_c->_method_is_directive()) {
		(*this)._method_push_directive(_30139_c);
		return;
	}
	if ((!(jule::real((*this)._field_comment_group)))) {
		(*this)._field_comment_group=jule::new_struct<_1ce385d22_CommentGroup>(new( std::nothrow ) _1ce385d22_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments=jule::append((*this)._field_comment_group->_field_comments,jule::Slice<jule::Ref<_1ce385d22_Comment>>({_30139_c}));
}



inline jule::Ref<_1ce385d22_ScopeTree> _1b5c910d6_Parser::_method_build_scope(jule::Slice<_1ce35e3a0_Token>& _31236_tokens) {
	jule::Ref<_1ce385d22_ScopeTree> _31317_s = _1ce557587_new_scope();
	_1ce557587_ScopeParser _31417_sp = _1ce557587_ScopeParser(this->self,jule::Ref<_1ce385d22_ScopeTree>(),jule::Slice<jule::Ref<_1ce557587_Stmt>>(),jule::Int());
	_31417_sp._method_build(_31236_tokens,_31317_s);
	return _31317_s;
}



inline std::tuple<jule::Ref<_1ce385d22_TypeDecl>,jule::Bool> _1b5c910d6_Parser::_method___build_type(jule::Slice<_1ce35e3a0_Token>& _32144_tokens,jule::Int* _32213_i,jule::Bool _32222_err) {
	_1b5d8e899_TypeBuilder _32317_tb = _1b5d8e899_TypeBuilder(this->self,_32144_tokens,_32213_i,_32222_err);
	jule::Ref<_1ce385d22_TypeDecl> _32918_decl;
	jule::Bool _32924_ok;
	std::tie(_32918_decl,_32924_ok) = _32317_tb._method_build();
	return std::make_tuple(_32918_decl,_32924_ok);
}



inline std::tuple<jule::Ref<_1ce385d22_TypeDecl>,jule::Bool> _1b5c910d6_Parser::_method_build_type(jule::Slice<_1ce35e3a0_Token>& _33442_tokens,jule::Int* _33513_i,jule::Bool _33522_err) {
	_1ce35e3a0_Token _33613_token = _33442_tokens[static_cast<jule::Int>((*(_33513_i)))];
	jule::Ref<_1ce385d22_TypeDecl> _33718_t;
	jule::Bool _33721_ok;
	std::tie(_33718_t,_33721_ok) = this->self->_method___build_type(_33442_tokens,_33513_i,_33522_err);
	if (_33522_err && (!(_33721_ok))) {
		this->self->_method_push_err(_33613_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
	}
	return std::make_tuple(_33718_t,_33721_ok);
}



inline jule::Ref<_1ce385d22_TypeAliasDecl> _1b5c910d6_Parser::_method_build_type_alias_decl(jule::Slice<_1ce35e3a0_Token>& _34446_tokens) {
	jule::Int _34517_i = 1LL;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_TypeAliasDecl>();
	}
	jule::Ref<_1ce385d22_TypeAliasDecl> _35017_tad = jule::new_struct<_1ce385d22_TypeAliasDecl>(new( std::nothrow ) _1ce385d22_TypeAliasDecl(jule::Ref<_1ce385d22_ScopeTree>(),jule::Bool(),jule::Bool(),_34446_tokens[1LL],_34446_tokens[1LL]._field_kind,jule::Ref<_1ce385d22_TypeDecl>(),jule::Ref<_1ce385d22_CommentGroup>()));
	_1ce35e3a0_Token _35417_token = _34446_tokens[static_cast<jule::Int>(_34517_i)];
	if (_35417_token._field_id != 2LLU) {
		this->self->_method_push_err(_35417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_34517_i)++;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	_35417_token=_34446_tokens[static_cast<jule::Int>(_34517_i)];
	if (_35417_token._field_id != 11LLU) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	(_34517_i)++;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	jule::Ref<_1ce385d22_TypeDecl> _37518_t;
	jule::Bool _37521_ok;
	std::tie(_37518_t,_37521_ok) = this->self->_method_build_type(_34446_tokens,(&(_34517_i)),true);
	_35017_tad->_field_kind=_37518_t;
	if (_37521_ok && (_34517_i < _34446_tokens.len())) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _35017_tad;
}



inline void _1b5c910d6_Parser::_method_build_var_type_and_expr(jule::Ref<_1ce385d22_VarDecl>& _38348_v,jule::Slice<_1ce35e3a0_Token>& _38366_tokens) {
	jule::Int _38417_i = 0LL;
	_1ce35e3a0_Token _38517_tok = _38366_tokens[static_cast<jule::Int>(_38417_i)];
	if (_38517_tok._field_id == 11LLU) {
		(_38417_i)++;
		if ((_38417_i >= _38366_tokens.len()) || ((_38366_tokens[static_cast<jule::Int>(_38417_i)]._field_id == 7LLU) && (_38366_tokens[static_cast<jule::Int>(_38417_i)]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_38517_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Ref<_1ce385d22_TypeDecl> _39322_t;
		jule::Bool _39325_ok;
		std::tie(_39322_t,_39325_ok) = this->self->_method_build_type(_38366_tokens,(&(_38417_i)),true);
		if (_39325_ok) {
			_38348_v->_field_kind=_39322_t;
			if (_38417_i >= _38366_tokens.len()) {
				return;
			}
			_38517_tok=_38366_tokens[static_cast<jule::Int>(_38417_i)];
		}
	}
	if (_38517_tok._field_id == 7LLU) {
		if (_38517_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Slice<_1ce35e3a0_Token> _40821_expr_tokens = _38366_tokens.slice(static_cast<jule::Int>(_38417_i + 1LL));
		if (_40821_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_38517_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
			return;
		}
		_38348_v->_field_expr=this->self->_method_build_expr(_40821_expr_tokens);
	} else {
		this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _1b5c910d6_Parser::_method_build_var_common(jule::Ref<_1ce385d22_VarDecl>& _41941_v,jule::Slice<_1ce35e3a0_Token> _41958_tokens) {
	_41941_v->_field_token=_41958_tokens[0LL];
	if (_41941_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_41941_v->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	_41941_v->_field_ident=_41941_v->_field_token._field_kind;
	jule::drop(_41941_v->_field_kind);
	if (_41958_tokens.len() > 1LL) {
		_41958_tokens=_41958_tokens.slice(1LL);
		this->self->_method_build_var_type_and_expr(_41941_v,_41958_tokens);
	}
}



inline void _1b5c910d6_Parser::_method_build_var_begin(jule::Ref<_1ce385d22_VarDecl>& _43439_v,jule::Ref<jule::Int> _43456_i,jule::Slice<_1ce35e3a0_Token>& _43466_tokens) {
	_1ce35e3a0_Token _43513_tok = _43466_tokens[static_cast<jule::Int>(_43456_i)];
	{
		auto _match_expr{ _43513_tok._field_id };
		if (!((38LLU) == _match_expr)) { goto _case_end_4535541536; }
		_case_begin_4535541536:;
		{
			_43439_v->_field_statically=true;
			goto _case_begin_4535541632;
		}
		goto _match_end_4535541264;
		_case_end_4535541536:;
		if (!((34LLU) == _match_expr)) { goto _case_end_4535541632; }
		_case_begin_4535541632:;
		{
			(_43456_i)++;
			if (_43456_i >= _43466_tokens.len()) {
				(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			if (_43466_tokens[static_cast<jule::Int>(_43456_i)]._field_id == 36LLU) {
				_43439_v->_field_mutable=true;
				(_43456_i)++;
			}
		}
		goto _match_end_4535541264;
		_case_end_4535541632:;
		if (!((9LLU) == _match_expr)) { goto _case_end_4535541728; }
		_case_begin_4535541728:;
		{
			(_43456_i)++;
			_43439_v->_field_constant=true;
		}
		goto _match_end_4535541264;
		_case_end_4535541728:;
		_case_begin_4535539616:;
		{
			(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4535541264;
		_case_end_4535539616:;
		_match_end_4535541264:;
	}
	if (_43456_i >= _43466_tokens.len()) {
		(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline jule::Ref<_1ce385d22_VarDecl> _1b5c910d6_Parser::_method_build_var(jule::Slice<_1ce35e3a0_Token> _46833_tokens) {
	jule::Ref<jule::Int> _46917_i = jule::new_ref<jule::Int>(0LL);
	jule::Ref<_1ce385d22_VarDecl> _47017_v = jule::new_struct<_1ce385d22_VarDecl>(new( std::nothrow ) _1ce385d22_VarDecl(jule::Ref<_1ce385d22_ScopeTree>(),_46833_tokens[static_cast<jule::Int>(_46917_i)],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1ce385d22_Directive>>(),jule::Ref<_1ce385d22_CommentGroup>(),jule::Ref<_1ce385d22_TypeDecl>(),jule::Ref<_1ce385d22_Expr>()));
	this->self->_method_build_var_begin(_47017_v,_46917_i,_46833_tokens);
	if (_46917_i >= _46833_tokens.len()) {
		return jule::new_ref<_1ce385d22_VarDecl>();
	}
	_46833_tokens=_46833_tokens.slice(static_cast<jule::Int>(_46917_i));
	if ((_46833_tokens[0LL]._field_id == 7LLU) && (_46833_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_47017_v->_field_reference=true;
		if (_46833_tokens.len() == 1LL) {
			return jule::new_ref<_1ce385d22_VarDecl>();
		}
		_46833_tokens=_46833_tokens.slice(1LL);
	}
	this->self->_method_build_var_common(_47017_v,_46833_tokens);
	return _47017_v;
}



inline jule::Ref<_1ce385d22_GenericDecl> _1b5c910d6_Parser::_method_build_generic(jule::Slice<_1ce35e3a0_Token>& _49037_tokens) {
	if (_49037_tokens.len() > 1LL) {
		(*this)._method_push_err(_49037_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ce385d22_GenericDecl> _49417_g = jule::new_struct<_1ce385d22_GenericDecl>(new( std::nothrow ) _1ce385d22_GenericDecl(_49037_tokens[0LL],jule::Str()));
	if (_49417_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_49417_g->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_49417_g->_field_ident=_49417_g->_field_token._field_kind;
	return _49417_g;
}



inline jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> _1b5c910d6_Parser::_method_build_generics(jule::Slice<_1ce35e3a0_Token>& _50538_tokens,_1ce35e3a0_Token& _50556_error_token) {
	if (_50538_tokens.len() == 0LL) {
		(*this)._method_push_err(_50556_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _51118_parts;
	jule::Slice<_1e7690a81_Log> _51125_errors;
	std::tie(_51118_parts,_51125_errors) = _1b5c910d6_parts(_50538_tokens,8LLU,true);
	(*this)._field_errors=jule::append((*this)._field_errors,_51125_errors);
	jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> _51417_generics = jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_51118_parts.len())));
	{
		jule::Int _1b5c910d6_i = 0;
		for (auto _1b5c910d6_part: _51118_parts) {
			{
				if (_51118_parts.len() > 0LL) {
					_51417_generics[static_cast<jule::Int>(_1b5c910d6_i)]=(*this)._method_build_generic(_1b5c910d6_part);
				}
			}
		_iter_next_4535580192:;
		_1b5c910d6_i++;
		}
		_iter_end_4535580192:;
	}
	return _51417_generics;
}



inline jule::Ref<_1ce385d22_ParamDecl> _1b5c910d6_Parser::_method_build_self_param(jule::Slice<_1ce35e3a0_Token> _52439_tokens) {
	if (_52439_tokens.len() == 0LL) {
		return jule::new_ref<_1ce385d22_ParamDecl>();
	}
	jule::Ref<_1ce385d22_ParamDecl> _52917_param = jule::new_struct<_1ce385d22_ParamDecl>(new( std::nothrow ) _1ce385d22_ParamDecl());
	jule::Int _53217_i = 0LL;
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_id == 36LLU) {
		_52917_param->_field_mutable=true;
		(_53217_i)++;
		if (_53217_i >= _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ce385d22_ParamDecl>();
		}
	}
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_kind == jule::Str("&", 1)) {
		_52917_param->_field_ident=jule::Str("&", 1);
		(_53217_i)++;
		if (_53217_i >= _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ce385d22_ParamDecl>();
		}
	}
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_id == 28LLU) {
		_52917_param->_field_ident+=jule::Str("self", 4);
		_52917_param->_field_token=_52439_tokens[static_cast<jule::Int>(_53217_i)];
		(_53217_i)++;
		if (_53217_i < _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	}
	return _52917_param;
}



inline void _1b5c910d6_Parser::_method_param_type_begin(jule::Ref<_1ce385d22_ParamDecl>& _56340_param,jule::Int& _56364_i,jule::Slice<_1ce35e3a0_Token>& _56373_tokens) {
	for (; _56364_i < _56373_tokens.len(); (_56364_i)++) {
		{
			_1ce35e3a0_Token _56517_token = _56373_tokens[static_cast<jule::Int>(_56364_i)];
			if (_56517_token._field_id != 7LLU) {
				return;
			} else if (_56517_token._field_kind != jule::Str("...", 3)) {
				return;
			}
			if (_56340_param->_field_variadic) {
				(*this)._method_push_err(_56517_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>({}));
				goto _iter_next_4535608208;
			}
			_56340_param->_field_variadic=true;
		}
	_iter_next_4535608208:;
	}
	_iter_end_4535608208:;
}



inline void _1b5c910d6_Parser::_method_build_param_type(jule::Ref<_1ce385d22_ParamDecl>& _58041_param,jule::Slice<_1ce35e3a0_Token>& _58065_tokens) {
	jule::Int _58117_i = 0LL;
	this->self->_method_param_type_begin(_58041_param,_58117_i,_58065_tokens);
	if (_58117_i >= _58065_tokens.len()) {
		return;
	}
	std::tie(_58041_param->_field_kind,std::ignore) = this->self->_method_build_type(_58065_tokens,(&(_58117_i)),true);
	if (_58117_i < _58065_tokens.len()) {
		this->self->_method_push_err(_58065_tokens[static_cast<jule::Int>(_58117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _1b5c910d6_Parser::_method_param_body_id(jule::Ref<_1ce385d22_ParamDecl> _59332_param,_1ce35e3a0_Token _59351_token) {
	if (_1ce35e3a0_is_ignore_ident(_59351_token._field_kind)) {
		_59332_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_59332_param->_field_ident=_59351_token._field_kind;
}



inline void _1b5c910d6_Parser::_method_build_param_body(jule::Ref<_1ce385d22_ParamDecl>& _60141_param,jule::Ref<jule::Int> _60164_i,jule::Slice<_1ce35e3a0_Token> _60177_tokens) {
	this->self->_method_param_body_id(_60141_param,_60177_tokens[static_cast<jule::Int>(_60164_i)]);
	_1ce35e3a0_Token _60317_tok = _60177_tokens[static_cast<jule::Int>(_60164_i)];
	if ((_60164_i + 1LL) >= _60177_tokens.len()) {
		return;
	} else if (((_60177_tokens.len() - _60164_i) - 1LL) < 2LL) {
		this->self->_method_push_err(_60317_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return;
	}
	_60317_tok=_60177_tokens[static_cast<jule::Int>(_60164_i + 1LL)];
	if (_60317_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_60141_param,_60177_tokens);
		return;
	}
	_60177_tokens=_60177_tokens.slice(static_cast<jule::Int>(_60164_i + 2LL));
	this->self->_method_build_param_type(_60141_param,_60177_tokens);
}



inline jule::Ref<_1ce385d22_ParamDecl> _1b5c910d6_Parser::_method_build_param(jule::Slice<_1ce35e3a0_Token> _62235_tokens) {
	jule::Ref<_1ce385d22_ParamDecl> _62317_param = jule::new_struct<_1ce385d22_ParamDecl>(new( std::nothrow ) _1ce385d22_ParamDecl(_62235_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ce385d22_TypeDecl>(),jule::Str()));
	if (_62317_param->_field_token._field_id == 36LLU) {
		_62317_param->_field_mutable=true;
		if (_62235_tokens.len() == 1LL) {
			this->self->_method_push_err(_62235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ce385d22_ParamDecl>();
		}
		_62235_tokens=_62235_tokens.slice(1LL);
		_62317_param->_field_token=_62235_tokens[0LL];
	}
	if (_62235_tokens.len() >= 3LL) {
		if ((_62317_param->_field_token._field_id == 7LLU) && (_62317_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_62235_tokens.len() == 1LL) {
				this->self->_method_push_err(_62235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1ce385d22_ParamDecl>();
			}
			if ((_62235_tokens[1LL]._field_id == 2LLU) && (_62235_tokens[2LL]._field_id == 11LLU)) {
				_62317_param->_field_reference=true;
				_62235_tokens=_62235_tokens.slice(1LL);
				_62317_param->_field_token=_62235_tokens[0LL];
			}
		}
	}
	if (_62317_param->_field_token._field_id != 2LLU) {
		_62317_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_62317_param,_62235_tokens);
	} else {
		jule::Ref<jule::Int> _65921_i = jule::new_ref<jule::Int>(0LL);
		this->self->_method_build_param_body(_62317_param,_65921_i,_62235_tokens);
	}
	return _62317_param;
}



inline void _1b5c910d6_Parser::_method_check_params(jule::Slice<jule::Ref<_1ce385d22_ParamDecl>>& _66636_params) {
	for (auto _1b5c910d6_param: _66636_params) {
		{
			if (_1b5c910d6_param->_method_is_self() || jule::real(_1b5c910d6_param->_field_kind)) {
				goto _iter_next_4535666176;
			}
			if (_1b5c910d6_param->_field_token._field_id == 0LLU) {
				(*this)._method_push_err(_1b5c910d6_param->_field_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
			} else {
				_1b5c910d6_param->_field_kind=jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_1b5c910d6_param->_field_token,jule::Any(jule::new_struct<_1ce385d22_IdentTypeDecl>(new( std::nothrow ) _1ce385d22_IdentTypeDecl(_1b5c910d6_param->_field_token,_1b5c910d6_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>())))));
				_1b5c910d6_param->_field_ident=jule::Str("<anonymous>", 11);
				_1b5c910d6_param->_field_token=_1ce35e3a0_Token();
			}
		}
	_iter_next_4535666176:;
	}
	_iter_end_4535666176:;
}



inline jule::Slice<jule::Ref<_1ce385d22_ParamDecl>> _1b5c910d6_Parser::_method_build_params(jule::Slice<_1ce35e3a0_Token>& _68737_tokens,jule::Bool _68754_method) {
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _68818_parts;
	jule::Slice<_1e7690a81_Log> _68825_errs;
	std::tie(_68818_parts,_68825_errs) = _1b5c910d6_parts(_68737_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_68825_errs);
	if (_68818_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1ce385d22_ParamDecl>> _69417_params = nullptr;
	if (_68754_method && (_68818_parts.len() > 0LL)) {
		jule::Ref<_1ce385d22_ParamDecl> _69621_param = this->self->_method_build_self_param(_68818_parts[0LL]);
		if (jule::real(_69621_param) && _69621_param->_method_is_self()) {
			_69417_params=jule::append(_69417_params,jule::Slice<jule::Ref<_1ce385d22_ParamDecl>>({_69621_param}));
			_68818_parts=_68818_parts.slice(1LL);
		}
	}
	for (auto _1b5c910d6_part: _68818_parts) {
		{
			jule::Ref<_1ce385d22_ParamDecl> _70421_param = this->self->_method_build_param(_1b5c910d6_part);
			if (jule::real(_70421_param)) {
				_69417_params=jule::append(_69417_params,jule::Slice<jule::Ref<_1ce385d22_ParamDecl>>({_70421_param}));
			}
		}
	_iter_next_4535685840:;
	}
	_iter_end_4535685840:;
	this->self->_method_check_params(_69417_params);
	return _69417_params;
}



inline std::tuple<jule::Ref<_1ce385d22_RetTypeDecl>,jule::Bool> _1b5c910d6_Parser::_method_build_multi_ret_type(jule::Slice<_1ce35e3a0_Token>& _71445_tokens,jule::Int& _71467_i) {
	jule::Ref<_1ce385d22_RetTypeDecl> _71477_t = jule::Ref<_1ce385d22_RetTypeDecl>();
	jule::Bool _71494_ok = jule::Bool();
	_71477_t=jule::new_struct<_1ce385d22_RetTypeDecl>(new( std::nothrow ) _1ce385d22_RetTypeDecl());
	(_71467_i)++;
	if (_71467_i >= _71445_tokens.len()) {
		(_71467_i)--;
		std::tie(_71477_t->_field_kind,_71494_ok) = this->self->_method_build_type(_71445_tokens,(&(_71467_i)),false);
		return std::make_tuple(_71477_t,_71494_ok);
	}
	(_71467_i)--;
	jule::Slice<_1ce35e3a0_Token> _72417_range_tokens = _1b5c910d6_range(_71467_i,jule::Str("(", 1),jule::Str(")", 1),_71445_tokens);
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _72618_parts;
	jule::Slice<_1e7690a81_Log> _72625_errs;
	std::tie(_72618_parts,_72625_errs) = _1b5c910d6_parts(_72417_range_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_72625_errs);
	if (_72618_parts.len() == 0LL) {
		return std::make_tuple(_71477_t,_71494_ok);
	}
	jule::Slice<jule::Ref<_1ce385d22_TypeDecl>> _73217_types = jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_72618_parts.len())));
	_71477_t->_field_idents=jule::Slice<_1ce35e3a0_Token>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_72618_parts.len())));
	for (auto _1b5c910d6_part: _72618_parts) {
		{
			_1ce35e3a0_Token _73521_token = _1b5c910d6_part[0LL];
			jule::Int _73621_offset = 0LL;
			if (_1b5c910d6_part.len() > 1LL) {
				_73521_token=_1b5c910d6_part[1LL];
				if (_73521_token._field_id == 11LLU) {
					_73621_offset=2LL;
					if (_1b5c910d6_part.len() < 3LL) {
						this->self->_method_push_err(_73521_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
						goto _iter_next_4535704736;
					}
				}
			}
			_73521_token=_1b5c910d6_part[0LL];
			if (_73621_offset == 2LL) {
				if (_73521_token._field_id != 2LLU) {
				}
				_71477_t->_field_idents=jule::append(_71477_t->_field_idents,jule::Slice<_1ce35e3a0_Token>({_73521_token}));
			} else {
				_73521_token._field_kind=jule::Str("_", 1);
				_71477_t->_field_idents=jule::append(_71477_t->_field_idents,jule::Slice<_1ce35e3a0_Token>({_73521_token}));
			}
			jule::Ref<_1ce385d22_TypeDecl> _76122_t;
			std::tie(_76122_t,std::ignore) = this->self->_method_build_type(_1b5c910d6_part,(&(_73621_offset)),true);
			if (_73621_offset < _1b5c910d6_part.len()) {
				this->self->_method_push_err(_1b5c910d6_part[static_cast<jule::Int>(_73621_offset)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			}
			_73217_types=jule::append(_73217_types,jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>({_76122_t}));
		}
	_iter_next_4535704736:;
	}
	_iter_end_4535704736:;
	if (_73217_types.len() > 1LL) {
		_71477_t->_field_kind=jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_71445_tokens[0LL],jule::Any(jule::new_struct<_1ce385d22_TupleTypeDecl>(new( std::nothrow ) _1ce385d22_TupleTypeDecl(_73217_types)))));
	} else {
		_71477_t->_field_kind=_73217_types[0LL];
	}
	_71494_ok=true;
	return std::make_tuple(_71477_t,_71494_ok);
}



inline std::tuple<jule::Ref<_1ce385d22_RetTypeDecl>,jule::Bool> _1b5c910d6_Parser::_method_build_ret_type(jule::Slice<_1ce35e3a0_Token>& _78439_tokens,jule::Int& _78461_i) {
	jule::Ref<_1ce385d22_RetTypeDecl> _78471_t = jule::Ref<_1ce385d22_RetTypeDecl>();
	jule::Bool _78488_ok = jule::Bool();
	_78471_t=jule::new_struct<_1ce385d22_RetTypeDecl>(new( std::nothrow ) _1ce385d22_RetTypeDecl());
	if (_78461_i >= _78439_tokens.len()) {
		return std::make_tuple(_78471_t,_78488_ok);
	}
	_1ce35e3a0_Token _79017_token = _78439_tokens[static_cast<jule::Int>(_78461_i)];
	{
		auto _match_expr{ _79017_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4535729072; }
		_case_begin_4535729072:;
		{
			if (_79017_token._field_kind == jule::Str("{", 1)) {
				return std::make_tuple(_78471_t,_78488_ok);
			}
		}
		goto _match_end_4535734400;
		_case_end_4535729072:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4535734480; }
		_case_begin_4535734480:;
		{
			if (_79017_token._field_kind == jule::Str("=", 1)) {
				return std::make_tuple(_78471_t,_78488_ok);
			}
		}
		goto _match_end_4535734400;
		_case_end_4535734480:;
		if (!((11LLU) == _match_expr)) { goto _case_end_4535734592; }
		_case_begin_4535734592:;
		{
			if ((_78461_i + 1LL) >= _78439_tokens.len()) {
				this->self->_method_push_err(_79017_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				return std::make_tuple(_78471_t,_78488_ok);
			}
			(_78461_i)++;
			_79017_token=_78439_tokens[static_cast<jule::Int>(_78461_i)];
			if (_79017_token._field_id == 3LLU) {
				{
					auto _match_expr{ _79017_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4535740336; }
					_case_begin_4535740336:;
					{
						jule::Ref<_1ce385d22_RetTypeDecl> _81330_decl;
						jule::Bool _81336_ok;
						std::tie(_81330_decl,_81336_ok) = this->self->_method_build_multi_ret_type(_78439_tokens,_78461_i);
						_78471_t = _81330_decl;
						_78488_ok = _81336_ok;
						return std::make_tuple(_78471_t,_78488_ok);
					}
					goto _match_end_4535742128;
					_case_end_4535740336:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4535742320; }
					_case_begin_4535742320:;
					{
						this->self->_method_push_err(_79017_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
						return std::make_tuple(_78471_t,_78488_ok);
					}
					goto _match_end_4535742128;
					_case_end_4535742320:;
					_match_end_4535742128:;
				}
			}
			std::tie(_78471_t->_field_kind,_78488_ok) = this->self->_method_build_type(_78439_tokens,(&(_78461_i)),true);
			return std::make_tuple(_78471_t,_78488_ok);
		}
		goto _match_end_4535734400;
		_case_end_4535734592:;
		_match_end_4535734400:;
	}
	(_78461_i)++;
	this->self->_method_push_err(_79017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return std::make_tuple(_78471_t,_78488_ok);
}



inline jule::Ref<_1ce385d22_FnDecl> _1b5c910d6_Parser::_method_build_fn_prototype(jule::Slice<_1ce35e3a0_Token>& _83243_tokens,jule::Int& _83265_i,jule::Bool _83273_method) {
	jule::Ref<_1ce385d22_FnDecl> _83317_f = jule::new_struct<_1ce385d22_FnDecl>(new( std::nothrow ) _1ce385d22_FnDecl(_83243_tokens[static_cast<jule::Int>(_83265_i)],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1ce385d22_Directive>>(),jule::Ref<_1ce385d22_CommentGroup>(),jule::Ref<_1ce385d22_ScopeTree>(),jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>(),jule::Ref<_1ce385d22_RetTypeDecl>(),jule::Slice<jule::Ref<_1ce385d22_ParamDecl>>()));
	if (_83317_f->_field_token._field_id == 38LLU) {
		_83317_f->_field_statically=true;
		(_83265_i)++;
		if (_83265_i >= _83243_tokens.len()) {
			this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ce385d22_FnDecl>();
		}
		_83317_f->_field_token=_83243_tokens[static_cast<jule::Int>(_83265_i)];
	}
	if (_83317_f->_field_token._field_id == 35LLU) {
		_83317_f->_field_unsafety=true;
		(_83265_i)++;
		if (_83265_i >= _83243_tokens.len()) {
			this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ce385d22_FnDecl>();
		}
		_83317_f->_field_token=_83243_tokens[static_cast<jule::Int>(_83265_i)];
	}
	(_83265_i)++;
	if (_83265_i >= _83243_tokens.len()) {
		this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_FnDecl>();
	}
	_1ce35e3a0_Token _86613_tok = _83243_tokens[static_cast<jule::Int>(_83265_i)];
	if (_86613_tok._field_id == 2LLU) {
		(_83265_i)++;
		if (_83265_i >= _83243_tokens.len()) {
			this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ce385d22_FnDecl>();
		}
		_83317_f->_field_ident=_86613_tok._field_kind;
	} else {
		_83317_f->_field_ident=jule::Str("<anonymous>", 11);
	}
	_1ce35e3a0_Token _87813_error_token = _83243_tokens[static_cast<jule::Int>(_83265_i)];
	jule::Slice<_1ce35e3a0_Token> _87917_generics_tokens = _1b5c910d6_range(_83265_i,jule::Str("[", 1),jule::Str("]", 1),_83243_tokens);
	if (_87917_generics_tokens != nullptr) {
		_83317_f->_field_generics=this->self->_method_build_generics(_87917_generics_tokens,_87813_error_token);
	}
	if (_83243_tokens[static_cast<jule::Int>(_83265_i)]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_83243_tokens[static_cast<jule::Int>(_83265_i)],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_FnDecl>();
	}
	jule::Slice<_1ce35e3a0_Token> _88917_params_toks = _1b5c910d6_range(_83265_i,jule::Str("(", 1),jule::Str(")", 1),_83243_tokens);
	if (_88917_params_toks.len() > 0LL) {
		_83317_f->_field_params=this->self->_method_build_params(_88917_params_toks,_83273_method);
	}
	std::tie(_83317_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_83243_tokens,_83265_i);
	return _83317_f;
}



inline jule::Ref<_1ce385d22_FnDecl> _1b5c910d6_Parser::_method_build_fn(jule::Slice<_1ce35e3a0_Token>& _90033_tokens,jule::Bool _90050_method,jule::Bool _90064_prototype) {
	jule::Int _90117_i = 0LL;
	jule::Ref<_1ce385d22_FnDecl> _90217_f = this->self->_method_build_fn_prototype(_90033_tokens,_90117_i,_90050_method);
	if (_90064_prototype) {
		if (_90117_i < _90033_tokens.len()) {
			this->self->_method_push_err(_90033_tokens[static_cast<jule::Int>(_90117_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		return _90217_f;
	} else if ((!(jule::real(_90217_f)))) {
		return _90217_f;
	}
	if (_90117_i >= _90033_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_90217_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_FnDecl>();
	}
	jule::Slice<_1ce35e3a0_Token> _91817_block_tokens = _1b5c910d6_range(_90117_i,jule::Str("{", 1),jule::Str("}", 1),_90033_tokens);
	if (_91817_block_tokens != nullptr) {
		_90217_f->_field_scope=this->self->_method_build_scope(_91817_block_tokens);
		_90217_f->_field_scope->_field_unsafety=_90217_f->_field_unsafety;
		if (_90117_i < _90033_tokens.len()) {
			this->self->_method_push_err(_90033_tokens[static_cast<jule::Int>(_90117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_90217_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_FnDecl>();
	}
	return _90217_f;
}



inline jule::Slice<_1ce35e3a0_Token> _1b5c910d6_Parser::_method_get_use_decl_selectors(jule::Slice<_1ce35e3a0_Token> _93445_tokens) {
	jule::Int _93517_i = 0LL;
	_93445_tokens=_1b5c910d6_range(_93517_i,jule::Str("{", 1),jule::Str("}", 1),_93445_tokens);
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _93718_parts;
	jule::Slice<_1e7690a81_Log> _93725_errs;
	std::tie(_93718_parts,_93725_errs) = _1b5c910d6_parts(_93445_tokens,8LLU,true);
	if (_93725_errs.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_93725_errs);
		return nullptr;
	}
	jule::Slice<_1ce35e3a0_Token> _94317_selectors = jule::Slice<_1ce35e3a0_Token>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_93718_parts.len())));
	{
		jule::Int _1b5c910d6_j = 0;
		for (auto _1b5c910d6_part: _93718_parts) {
			{
				if (_1b5c910d6_part.len() > 1LL) {
					(*this)._method_push_err(_1b5c910d6_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_1ce35e3a0_Token _94821_tok = _1b5c910d6_part[0LL];
				if ((_94821_tok._field_id != 2LLU) && (_94821_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_94821_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					goto _iter_next_4535807024;
				}
				_94317_selectors[static_cast<jule::Int>(_1b5c910d6_j)]=_94821_tok;
			}
		_iter_next_4535807024:;
		_1b5c910d6_j++;
		}
		_iter_end_4535807024:;
	}
	return _94317_selectors;
}



inline void _1b5c910d6_Parser::_method_build_cpp_use_decl(jule::Ref<_1ce385d22_UseDecl>& _95942_decl,jule::Slice<_1ce35e3a0_Token>& _95959_tokens) {
	if (_95959_tokens.len() > 1LL) {
		(*this)._method_push_err(_95959_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_1ce35e3a0_Token _96313_token = _95959_tokens[0LL];
	if ((_96313_token._field_id != 6LLU) || ((_96313_token._field_kind[0LL] != '`') && (_96313_token._field_kind[0LL] != '\"'))) {
		(*this)._method_push_err(_96313_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return;
	}
	_95942_decl->_field_cpp_linked=true;
	_95942_decl->_field_link_path=_96313_token._field_kind.slice(1LL,static_cast<jule::Int>(_96313_token._field_kind.len() - 1LL));
	if ((!(_1e7691048_is_std_header_path(_95942_decl->_field_link_path)))) {
		_95942_decl->_field_link_path=_1e777b83c_join(jule::Slice<jule::Str>({_96313_token._field_file->_method_dir(),_95942_decl->_field_link_path}));
	}
}



inline void _1b5c910d6_Parser::_method_build_std_use_decl(jule::Ref<_1ce385d22_UseDecl>& _97542_decl,jule::Slice<_1ce35e3a0_Token> _97562_tokens) {
	_97542_decl->_field_std=true;
	_1ce35e3a0_Token _97817_token = _97562_tokens[0LL];
	if (_97562_tokens.len() < 3LL) {
		(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_97562_tokens=_97562_tokens.slice(2LL);
	_97817_token=_97562_tokens[static_cast<jule::Int>(_97562_tokens.len() - 1LL)];
	{
		auto _match_expr{ _97817_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4535845040; }
		_case_begin_4535845040:;
		{
			(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4535844960;
		_case_end_4535845040:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4535845216; }
		_case_begin_4535845216:;
		{
			if (_97817_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_1ce35e3a0_Token> _99621_selectors = nullptr;
			std::tie(_97562_tokens,_99621_selectors) = _1b5c910d6_range_last(_97562_tokens);
			_97542_decl->_field_selected=(*this)._method_get_use_decl_selectors(_99621_selectors);
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97817_token=_97562_tokens[static_cast<jule::Int>(_97562_tokens.len() - 1LL)];
			if (_97817_token._field_id != 23LLU) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97562_tokens=_97562_tokens.slice(0LL,static_cast<jule::Int>(_97562_tokens.len() - 1LL));
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4535844960;
		_case_end_4535845216:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4535845312; }
		_case_begin_4535845312:;
		{
			if (_97817_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97562_tokens=_97562_tokens.slice(0LL,static_cast<jule::Int>(_97562_tokens.len() - 1LL));
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97817_token=_97562_tokens[static_cast<jule::Int>(_97562_tokens.len() - 1LL)];
			if (_97817_token._field_id != 23LLU) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97562_tokens=_97562_tokens.slice(0LL,static_cast<jule::Int>(_97562_tokens.len() - 1LL));
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97542_decl->_field_full=true;
		}
		goto _match_end_4535844960;
		_case_end_4535845312:;
		_match_end_4535844960:;
	}
	_97542_decl->_field_link_path=jule::Str("std::", 5) + _1b5c910d6_tokstoa(_97562_tokens);
}



inline void _1b5c910d6_Parser::_method_build_ident_use_decl(jule::Ref<_1ce385d22_UseDecl>& _103944_decl,jule::Slice<_1ce35e3a0_Token> _103964_tokens) {
	_103944_decl->_field_std=false;
	_1ce35e3a0_Token _104217_token = _103964_tokens[static_cast<jule::Int>(_103964_tokens.len() - 1LL)];
	{
		auto _match_expr{ _104217_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4535875984; }
		_case_begin_4535875984:;
		{
			(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4535875776;
		_case_end_4535875984:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4535876080; }
		_case_begin_4535876080:;
		{
			if (_104217_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_1ce35e3a0_Token> _105421_selectors = nullptr;
			std::tie(_103964_tokens,_105421_selectors) = _1b5c910d6_range_last(_103964_tokens);
			_103944_decl->_field_selected=(*this)._method_get_use_decl_selectors(_105421_selectors);
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104217_token=_103964_tokens[static_cast<jule::Int>(_103964_tokens.len() - 1LL)];
			if (_104217_token._field_id != 23LLU) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103964_tokens=_103964_tokens.slice(0LL,static_cast<jule::Int>(_103964_tokens.len() - 1LL));
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4535875776;
		_case_end_4535876080:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4535876176; }
		_case_begin_4535876176:;
		{
			if (_104217_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103964_tokens=_103964_tokens.slice(0LL,static_cast<jule::Int>(_103964_tokens.len() - 1LL));
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104217_token=_103964_tokens[static_cast<jule::Int>(_103964_tokens.len() - 1LL)];
			if (_104217_token._field_id != 23LLU) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103964_tokens=_103964_tokens.slice(0LL,static_cast<jule::Int>(_103964_tokens.len() - 1LL));
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103944_decl->_field_full=true;
		}
		goto _match_end_4535875776;
		_case_end_4535876176:;
		_match_end_4535875776:;
	}
	_103944_decl->_field_link_path=_1b5c910d6_tokstoa(_103964_tokens);
}



inline void _1b5c910d6_Parser::_method_parse_use_decl(jule::Ref<_1ce385d22_UseDecl>& _110438_decl,jule::Slice<_1ce35e3a0_Token> _110458_tokens) {
	if (_110438_decl->_field_cpp_linked) {
		(*this)._method_build_cpp_use_decl(_110438_decl,_110458_tokens);
		return;
	}
	_1ce35e3a0_Token _111017_token = _110458_tokens[0LL];
	if (_111017_token._field_id != 2LLU) {
		(*this)._method_push_err(_111017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	if ((_110458_tokens.len() > 2LL) && (_110458_tokens[1LL]._field_id == 12LLU)) {
		_110438_decl->_field_alias=_111017_token._field_kind;
		if (_110458_tokens[2LL]._field_id != 2LLU) {
			(*this)._method_push_err(_111017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			return;
		}
		_110458_tokens=_110458_tokens.slice(2LL);
		_111017_token=_110458_tokens[0LL];
	}
	
	{
		if (!((_111017_token._field_kind == jule::Str("std", 3)))) { goto _case_end_4535917424; }
		_case_begin_4535917424:;
		{
			(*this)._method_build_std_use_decl(_110438_decl,_110458_tokens);
		}
		goto _match_end_4535916528;
		_case_end_4535917424:;
		_case_begin_4535916640:;
		{
			(*this)._method_build_ident_use_decl(_110438_decl,_110458_tokens);
		}
		goto _match_end_4535916528;
		_case_end_4535916640:;
		_match_end_4535916528:;
	}
}



inline jule::Ref<_1ce385d22_UseDecl> _1b5c910d6_Parser::_method_build_use_decl(jule::Slice<_1ce35e3a0_Token> _113937_tokens,jule::Bool _113954_cpp_linked) {
	jule::Ref<_1ce385d22_UseDecl> _114017_decl = jule::new_struct<_1ce385d22_UseDecl>(new( std::nothrow ) _1ce385d22_UseDecl(_113937_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_1ce35e3a0_Token>(),_113954_cpp_linked,jule::Bool()));
	if (_113937_tokens.len() < 2LL) {
		(*this)._method_push_err(_114017_decl->_field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_UseDecl>();
	}
	_113937_tokens=_113937_tokens.slice(1LL);
	(*this)._method_parse_use_decl(_114017_decl,_113937_tokens);
	return _114017_decl;
}



inline jule::Ref<_1ce385d22_Expr> _1b5c910d6_Parser::_method_build_enum_item_expr(jule::Ref<jule::Int> _115344_i,jule::Slice<_1ce35e3a0_Token>& _115358_tokens) {
	jule::Int _115417_brace_n = 0LL;
	jule::Int _115513_expr_start = _115344_i;
	for (; _115344_i < _115358_tokens.len(); (_115344_i)++) {
		{
			_1ce35e3a0_Token _115717_t = _115358_tokens[static_cast<jule::Int>(_115344_i)];
			if (_115717_t._field_id == 3LLU) {
				{
					auto _match_expr{ _115717_t._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4535937760; }
					_case_begin_4535937760:;
					{
						(_115417_brace_n)++;
						goto _iter_next_4535932416;
					}
					goto _match_end_4535936400;
					_case_end_4535937760:;
					_case_begin_4535935712:;
					{
						(_115417_brace_n)--;
					}
					goto _match_end_4535936400;
					_case_end_4535935712:;
					_match_end_4535936400:;
				}
			}
			if (_115417_brace_n > 0LL) {
				goto _iter_next_4535932416;
			}
			if ((_115717_t._field_id == 8LLU) || ((_115344_i + 1LL) >= _115358_tokens.len())) {
				jule::Slice<_1ce35e3a0_Token> _117625_expr_tokens = nullptr;
				if (_115717_t._field_id == 8LLU) {
					_117625_expr_tokens=_115358_tokens.slice(static_cast<jule::Int>(_115513_expr_start),static_cast<jule::Int>(_115344_i));
				} else {
					_117625_expr_tokens=_115358_tokens.slice(static_cast<jule::Int>(_115513_expr_start));
				}
				return this->self->_method_build_expr(_117625_expr_tokens);
			}
		}
	_iter_next_4535932416:;
	}
	_iter_end_4535932416:;
	return jule::new_ref<_1ce385d22_Expr>();
}



inline jule::Slice<jule::Ref<_1ce385d22_EnumItemDecl>> _1b5c910d6_Parser::_method_build_enum_items(jule::Slice<_1ce35e3a0_Token>& _118841_tokens) {
	jule::Slice<jule::Ref<_1ce385d22_EnumItemDecl>> _118917_items = jule::Slice<jule::Ref<_1ce385d22_EnumItemDecl>>::alloc(0LL);
	jule::Ref<jule::Int> _119017_i = jule::new_ref<jule::Int>(0LL);
	for (; _119017_i < _118841_tokens.len(); (_119017_i)++) {
		{
			_1ce35e3a0_Token _119221_t = _118841_tokens[static_cast<jule::Int>(_119017_i)];
			if (_119221_t._field_id == 18LLU) {
				goto _iter_next_4535949376;
			}
			jule::Ref<_1ce385d22_EnumItemDecl> _119721_item = jule::new_struct<_1ce385d22_EnumItemDecl>(new( std::nothrow ) _1ce385d22_EnumItemDecl());
			_119721_item->_field_token=_119221_t;
			if (_119721_item->_field_token._field_id != 2LLU) {
				this->self->_method_push_err(_119721_item->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			}
			_119721_item->_field_ident=_119721_item->_field_token._field_kind;
			if (((_119017_i + 1LL) >= _118841_tokens.len()) || (_118841_tokens[static_cast<jule::Int>(_119017_i + 1LL)]._field_id == 8LLU)) {
				if ((_119017_i + 1LL) < _118841_tokens.len()) {
					(_119017_i)++;
				}
				_118917_items=jule::append(_118917_items,jule::Slice<jule::Ref<_1ce385d22_EnumItemDecl>>({_119721_item}));
				goto _iter_next_4535949376;
			}
			(_119017_i)++;
			_119221_t=_118841_tokens[static_cast<jule::Int>(_119017_i)];
			(_119017_i)++;
			if ((_119221_t._field_id != 7LLU) || (_119221_t._field_kind != jule::Str("=", 1))) {
				this->self->_method_push_err(_119221_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				this->self->_method_push_suggestion(jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>({}));
				goto _iter_next_4535949376;
			}
			if ((_119017_i >= _118841_tokens.len()) || (_118841_tokens[static_cast<jule::Int>(_119017_i)]._field_id == 8LLU)) {
				this->self->_method_push_err(_119221_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
				goto _iter_next_4535949376;
			}
			_119721_item->_field_expr=this->self->_method_build_enum_item_expr(_119017_i,_118841_tokens);
			_118917_items=jule::append(_118917_items,jule::Slice<jule::Ref<_1ce385d22_EnumItemDecl>>({_119721_item}));
		}
	_iter_next_4535949376:;
	}
	_iter_end_4535949376:;
	return _118917_items;
}



inline jule::Ref<_1ce385d22_EnumDecl> _1b5c910d6_Parser::_method_build_enum_decl(jule::Slice<_1ce35e3a0_Token>& _122940_tokens) {
	if ((_122940_tokens.len() < 2LL) || (_122940_tokens.len() < 3LL)) {
		this->self->_method_push_err(_122940_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_EnumDecl>();
	}
	jule::Ref<_1ce385d22_EnumDecl> _123417_e = jule::new_struct<_1ce385d22_EnumDecl>(new( std::nothrow ) _1ce385d22_EnumDecl(_122940_tokens[1LL],jule::Bool(),jule::Str(),jule::Ref<_1ce385d22_TypeDecl>(),jule::Slice<jule::Ref<_1ce385d22_EnumItemDecl>>(),jule::Ref<_1ce385d22_CommentGroup>()));
	if (_123417_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_123417_e->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_123417_e->_field_ident=_123417_e->_field_token._field_kind;
	jule::Int _124217_i = 2LL;
	if (_122940_tokens[static_cast<jule::Int>(_124217_i)]._field_id == 11LLU) {
		(_124217_i)++;
		if (_124217_i >= _122940_tokens.len()) {
			this->self->_method_push_err(_122940_tokens[static_cast<jule::Int>(_124217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return _123417_e;
		}
		std::tie(_123417_e->_field_kind,std::ignore) = this->self->_method_build_type(_122940_tokens,(&(_124217_i)),true);
		if (_124217_i >= _122940_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_123417_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
			return _123417_e;
		}
	} else {
		jule::drop(_123417_e->_field_kind);
	}
	jule::Slice<_1ce35e3a0_Token> _125917_item_tokens = _1b5c910d6_range(_124217_i,jule::Str("{", 1),jule::Str("}", 1),_122940_tokens);
	if (_125917_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_123417_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _123417_e;
	} else if (_124217_i < _122940_tokens.len()) {
		this->self->_method_push_err(_122940_tokens[static_cast<jule::Int>(_124217_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_123417_e->_field_items=this->self->_method_build_enum_items(_125917_item_tokens);
	return _123417_e;
}



inline jule::Ref<_1ce385d22_FieldDecl> _1b5c910d6_Parser::_method_build_field(jule::Slice<_1ce35e3a0_Token> _127235_tokens) {
	jule::Ref<_1ce385d22_FieldDecl> _127317_f = jule::new_struct<_1ce385d22_FieldDecl>(new( std::nothrow ) _1ce385d22_FieldDecl());
	_127317_f->_field_public=_127235_tokens[0LL]._field_id == 21LLU;
	if (_127317_f->_field_public) {
		if (_127235_tokens.len() == 1LL) {
			this->self->_method_push_err(_127235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ce385d22_FieldDecl>();
		}
		_127235_tokens=_127235_tokens.slice(1LL);
	}
	_127317_f->_field_mutable=_127235_tokens[0LL]._field_id == 36LLU;
	if (_127317_f->_field_mutable) {
		if (_127235_tokens.len() == 1LL) {
			this->self->_method_push_err(_127235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ce385d22_FieldDecl>();
		}
		_127235_tokens=_127235_tokens.slice(1LL);
	}
	_127317_f->_field_token=_127235_tokens[0LL];
	if (_127317_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_127317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_FieldDecl>();
	}
	_127317_f->_field_ident=_127317_f->_field_token._field_kind;
	if (_127235_tokens.len() == 1LL) {
		this->self->_method_push_err(_127235_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_FieldDecl>();
	} else if (_127235_tokens[1LL]._field_id != 11LLU) {
		this->self->_method_push_err(_127235_tokens[1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_FieldDecl>();
	}
	_127235_tokens=_127235_tokens.slice(2LL);
	jule::Int _131017_i = 0LL;
	std::tie(_127317_f->_field_kind,std::ignore) = this->self->_method_build_type(_127235_tokens,(&(_131017_i)),true);
	if (_131017_i < _127235_tokens.len()) {
		this->self->_method_push_err(_127235_tokens[static_cast<jule::Int>(_131017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_FieldDecl>();
	}
	return _127317_f;
}



inline jule::Slice<jule::Ref<_1ce385d22_FieldDecl>> _1b5c910d6_Parser::_method_build_struct_decl_fields(jule::Slice<_1ce35e3a0_Token> _132048_tokens) {
	jule::Slice<jule::Ref<_1ce385d22_FieldDecl>> _132117_fields = nullptr;
	jule::Slice<jule::Ref<_1ce557587_Stmt>> _132217_stms = _1ce557587_split_stms(_132048_tokens);
	for (auto _1b5c910d6_st: _132217_stms) {
		{
			_132048_tokens=_1b5c910d6_st->_field_tokens;
			if (_132048_tokens[0LL]._field_id == 18LLU) {
				goto _iter_next_4536031760;
			}
			jule::Ref<_1ce385d22_FieldDecl> _132821_f = this->self->_method_build_field(_132048_tokens);
			_132117_fields=jule::append(_132117_fields,jule::Slice<jule::Ref<_1ce385d22_FieldDecl>>({_132821_f}));
		}
	_iter_next_4536031760:;
	}
	_iter_end_4536031760:;
	return _132117_fields;
}



inline jule::Ref<_1ce385d22_StructDecl> _1b5c910d6_Parser::_method_build_struct_decl(jule::Slice<_1ce35e3a0_Token>& _133442_tokens) {
	if (_133442_tokens.len() < 3LL) {
		this->self->_method_push_err(_133442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_StructDecl>();
	}
	jule::Int _134017_i = 1LL;
	jule::Ref<_1ce385d22_StructDecl> _134117_s = jule::new_struct<_1ce385d22_StructDecl>(new( std::nothrow ) _1ce385d22_StructDecl(_133442_tokens[static_cast<jule::Int>(_134017_i)],jule::Str(),jule::Slice<jule::Ref<_1ce385d22_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1ce385d22_Directive>>(),jule::Ref<_1ce385d22_CommentGroup>(),jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>()));
	if (_134117_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_134117_s->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_134017_i)++;
	if (_134017_i >= _133442_tokens.len()) {
		this->self->_method_push_err(_133442_tokens[static_cast<jule::Int>(_134017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _134117_s;
	}
	_134117_s->_field_ident=_134117_s->_field_token._field_kind;
	_1ce35e3a0_Token _135513_error_token = _133442_tokens[static_cast<jule::Int>(_134017_i)];
	jule::Slice<_1ce35e3a0_Token> _135617_generics_tokens = _1b5c910d6_range(_134017_i,jule::Str("[", 1),jule::Str("]", 1),_133442_tokens);
	if (_135617_generics_tokens != nullptr) {
		_134117_s->_field_generics=this->self->_method_build_generics(_135617_generics_tokens,_135513_error_token);
	}
	if (_134017_i >= _133442_tokens.len()) {
		this->self->_method_push_err(_133442_tokens[static_cast<jule::Int>(_134017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _134117_s;
	}
	jule::Slice<_1ce35e3a0_Token> _136517_body_tokens = _1b5c910d6_range(_134017_i,jule::Str("{", 1),jule::Str("}", 1),_133442_tokens);
	if (_136517_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_134117_s->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _134117_s;
	}
	if (_134017_i < _133442_tokens.len()) {
		this->self->_method_push_err(_133442_tokens[static_cast<jule::Int>(_134017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_134117_s->_field_fields=this->self->_method_build_struct_decl_fields(_136517_body_tokens);
	return _134117_s;
}



inline void _1b5c910d6_Parser::_method_check_method_receiver(jule::Ref<_1ce385d22_FnDecl>& _137941_f) {
	if (_137941_f->_field_statically) {
		if ((_137941_f->_field_params.len() > 0LL) && _137941_f->_field_params[0LL]->_method_is_self()) {
			(*this)._method_push_err(_137941_f->_field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>({}));
		}
		return;
	}
	if (_137941_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_137941_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1ce385d22_ParamDecl> _139213_param = _137941_f->_field_params[0LL];
	if ((!(_139213_param->_method_is_self()))) {
		(*this)._method_push_err(_137941_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
}



inline jule::Slice<jule::Ref<_1ce385d22_FnDecl>> _1b5c910d6_Parser::_method_build_trait_methods(jule::Slice<_1ce35e3a0_Token> _139943_tokens) {
	jule::Slice<jule::Ref<_1ce385d22_FnDecl>> _140017_methods = nullptr;
	jule::Slice<jule::Ref<_1ce557587_Stmt>> _140117_stms = _1ce557587_split_stms(_139943_tokens);
	for (auto _1b5c910d6_st: _140117_stms) {
		{
			_139943_tokens=_1ce5ee178_eliminate_comments(_1b5c910d6_st->_field_tokens);
			if (_139943_tokens.len() == 0LL) {
				goto _iter_next_4536081904;
			}
			jule::Bool _140821_is_pub = false;
			if (_139943_tokens[0LL]._field_id == 21LLU) {
				_140821_is_pub=true;
				if (_139943_tokens.len() == 1LL) {
					this->self->_method_push_err(_139943_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					goto _iter_next_4536081904;
				}
				_139943_tokens=_139943_tokens.slice(1LL);
			}
			jule::Ref<_1ce385d22_FnDecl> _141821_f = this->self->_method_build_fn(_139943_tokens,true,true);
			if (jule::real(_141821_f)) {
				if (_141821_f->_method_is_anon()) {
					this->self->_method_push_err(_141821_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				this->self->_method_check_method_receiver(_141821_f);
				if (_141821_f->_field_generics.len() > 0LL) {
					this->self->_method_push_err(_141821_f->_field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>({}));
				}
				_141821_f->_field_public=_140821_is_pub;
				_140017_methods=jule::append(_140017_methods,jule::Slice<jule::Ref<_1ce385d22_FnDecl>>({_141821_f}));
			}
		}
	_iter_next_4536081904:;
	}
	_iter_end_4536081904:;
	return _140017_methods;
}



inline jule::Ref<_1ce385d22_TraitDecl> _1b5c910d6_Parser::_method_build_trait_decl(jule::Slice<_1ce35e3a0_Token>& _143441_tokens) {
	if (_143441_tokens.len() < 3LL) {
		this->self->_method_push_err(_143441_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_TraitDecl>();
	}
	jule::Ref<_1ce385d22_TraitDecl> _143917_t = jule::new_struct<_1ce385d22_TraitDecl>(new( std::nothrow ) _1ce385d22_TraitDecl(_143441_tokens[1LL],jule::Str(),jule::Bool(),jule::Ref<_1ce385d22_CommentGroup>(),jule::Slice<jule::Ref<_1ce385d22_FnDecl>>()));
	if (_143917_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_143917_t->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_143917_t->_field_ident=_143917_t->_field_token._field_kind;
	jule::Int _144717_i = 2LL;
	jule::Slice<_1ce35e3a0_Token> _144817_body_tokens = _1b5c910d6_range(_144717_i,jule::Str("{", 1),jule::Str("}", 1),_143441_tokens);
	if (_144817_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_143917_t->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_TraitDecl>();
	}
	if (_144717_i < _143441_tokens.len()) {
		this->self->_method_push_err(_143441_tokens[static_cast<jule::Int>(_144717_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_143917_t->_field_methods=this->self->_method_build_trait_methods(_144817_body_tokens);
	return _143917_t;
}



inline jule::Ref<_1ce385d22_FnDecl> _1b5c910d6_Parser::_method_build_cpp_link_fn(jule::Slice<_1ce35e3a0_Token> _146241_tokens) {
	_146241_tokens=_146241_tokens.slice(1LL);
	jule::Ref<_1ce385d22_FnDecl> _146417_f = this->self->_method_build_fn(_146241_tokens,false,true);
	if (jule::real(_146417_f)) {
		if (_146417_f->_method_is_anon()) {
			this->self->_method_push_err(_146417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		_146417_f->_field_cpp_linked=true;
	}
	return _146417_f;
}



inline jule::Ref<_1ce385d22_VarDecl> _1b5c910d6_Parser::_method_build_cpp_link_var(jule::Slice<_1ce35e3a0_Token> _147442_tokens) {
	_147442_tokens=_147442_tokens.slice(1LL);
	jule::Ref<_1ce385d22_VarDecl> _147617_v = this->self->_method_build_var(_147442_tokens);
	if (jule::real(_147617_v)) {
		_147617_v->_field_cpp_linked=true;
		if (jule::real(_147617_v->_field_expr)) {
			this->self->_method_push_err(_147617_v->_field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>({}));
		}
	}
	return _147617_v;
}



inline jule::Ref<_1ce385d22_StructDecl> _1b5c910d6_Parser::_method_build_cpp_link_struct(jule::Slice<_1ce35e3a0_Token> _148645_tokens) {
	_148645_tokens=_148645_tokens.slice(1LL);
	jule::Ref<_1ce385d22_StructDecl> _148817_s = this->self->_method_build_struct_decl(_148645_tokens);
	if (jule::real(_148817_s)) {
		_148817_s->_field_cpp_linked=true;
	}
	return _148817_s;
}



inline jule::Ref<_1ce385d22_TypeAliasDecl> _1b5c910d6_Parser::_method_build_cpp_link_type_alias(jule::Slice<_1ce35e3a0_Token> _149549_tokens) {
	_149549_tokens=_149549_tokens.slice(1LL);
	jule::Ref<_1ce385d22_TypeAliasDecl> _149717_t = this->self->_method_build_type_alias_decl(_149549_tokens);
	if (jule::real(_149717_t)) {
		_149717_t->_field_cpp_linked=true;
	}
	return _149717_t;
}



inline jule::Ref<_1ce385d22_UseDecl> _1b5c910d6_Parser::_method_build_cpp_link_use(jule::Slice<_1ce35e3a0_Token> _150442_tokens) {
	if (_150442_tokens.len() == 1LL) {
		this->self->_method_push_err(_150442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_UseDecl>();
	}
	_150442_tokens=_150442_tokens.slice(1LL);
	
	return this->self->_method_build_use_decl(_150442_tokens,true);
}



inline jule::Any _1b5c910d6_Parser::_method_build_cpp_link(jule::Slice<_1ce35e3a0_Token>& _151539_tokens) {
	_1ce35e3a0_Token _151617_token = _151539_tokens[0LL];
	if (_151539_tokens.len() == 1LL) {
		this->self->_method_push_err(_151617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	_151617_token=_151539_tokens[1LL];
	{
		auto _match_expr{ _151617_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4536170528; }
		_case_begin_4536170528:;
		{
			return jule::Any(this->self->_method_build_cpp_link_use(_151539_tokens));
		}
		goto _match_end_4536170080;
		_case_end_4536170528:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4536170624; }
		_case_begin_4536170624:;
		{
			return jule::Any(this->self->_method_build_cpp_link_fn(_151539_tokens));
		}
		goto _match_end_4536170080;
		_case_end_4536170624:;
		if (!((9LLU) == _match_expr || (34LLU) == _match_expr)) { goto _case_end_4536170720; }
		_case_begin_4536170720:;
		{
			return jule::Any(this->self->_method_build_cpp_link_var(_151539_tokens));
		}
		goto _match_end_4536170080;
		_case_end_4536170720:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4536170816; }
		_case_begin_4536170816:;
		{
			return jule::Any(this->self->_method_build_cpp_link_struct(_151539_tokens));
		}
		goto _match_end_4536170080;
		_case_end_4536170816:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4536172128; }
		_case_begin_4536172128:;
		{
			return jule::Any(this->self->_method_build_cpp_link_type_alias(_151539_tokens));
		}
		goto _match_end_4536170080;
		_case_end_4536172128:;
		_case_begin_4536168896:;
		{
			this->self->_method_push_err(_151617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4536170080;
		_case_end_4536168896:;
		_match_end_4536170080:;
	}
	return jule::Any(nullptr);
}



inline jule::Ref<_1ce385d22_FnDecl> _1b5c910d6_Parser::_method_get_method(jule::Slice<_1ce35e3a0_Token>& _154635_tokens) {
	jule::Int _154717_i = 0LL;
	_1ce35e3a0_Token _154817_token = _154635_tokens[static_cast<jule::Int>(_154717_i)];
	if (_154817_token._field_id == 38LLU) {
		if ((_154717_i + 1LL) >= _154635_tokens.len()) {
			this->self->_method_push_err(_154817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ce385d22_FnDecl>();
		}
		(_154717_i)++;
		_154817_token=_154635_tokens[static_cast<jule::Int>(_154717_i)];
	}
	if (_154817_token._field_id == 35LLU) {
		if ((_154717_i + 1LL) >= _154635_tokens.len()) {
			this->self->_method_push_err(_154817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ce385d22_FnDecl>();
		}
		(_154717_i)++;
		_154817_token=_154635_tokens[static_cast<jule::Int>(_154717_i)];
	}
	if (_154817_token._field_id != 33LLU) {
		this->self->_method_push_err(_154817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_FnDecl>();
	}
	jule::Ref<_1ce385d22_FnDecl> _157217_f = this->self->_method_build_fn(_154635_tokens,true,false);
	if (jule::real(_157217_f) && _157217_f->_method_is_anon()) {
		this->self->_method_push_err(_157217_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _157217_f;
}



inline void _1b5c910d6_Parser::_method_parse_impl_body(jule::Ref<_1ce385d22_Impl>& _157940_ipl,jule::Slice<_1ce35e3a0_Token>& _157957_tokens) {
	jule::Slice<jule::Ref<_1ce557587_Stmt>> _158017_stms = _1ce557587_split_stms(_157957_tokens);
	for (auto _1b5c910d6_st: _158017_stms) {
		{
			_157957_tokens=_1b5c910d6_st->_field_tokens;
			_1ce35e3a0_Token _158321_token = _157957_tokens[0LL];
			jule::Bool _158421_is_pub = false;
			{
				auto _match_expr{ _158321_token._field_id };
				if (!((18LLU) == _match_expr)) { goto _case_end_4536203184; }
				_case_begin_4536203184:;
				{
					goto _iter_next_4536198784;
				}
				goto _match_end_4536203072;
				_case_end_4536203184:;
				if (!((21LLU) == _match_expr)) { goto _case_end_4536203280; }
				_case_begin_4536203280:;
				{
					_158421_is_pub=true;
					if (_157957_tokens.len() == 1LL) {
						this->self->_method_push_err(_157957_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4536198784;
					}
					_157957_tokens=_157957_tokens.slice(1LL);
					if (_157957_tokens.len() > 0LL) {
						_158321_token=_157957_tokens[0LL];
					}
				}
				goto _match_end_4536203072;
				_case_end_4536203280:;
				_match_end_4536203072:;
			}
			{
				auto _match_expr{ _158321_token._field_id };
				if (!((9LLU) == _match_expr)) { goto _case_end_4536208400; }
				_case_begin_4536208400:;
				{
					jule::Ref<_1ce385d22_VarDecl> _160425_v = this->self->_method_build_var(_157957_tokens);
					if (jule::real(_160425_v)) {
						_160425_v->_field_public=_158421_is_pub;
						_157940_ipl->_field_statics=jule::append(_157940_ipl->_field_statics,jule::Slice<jule::Ref<_1ce385d22_VarDecl>>({_160425_v}));
					}
				}
				goto _match_end_4536203552;
				_case_end_4536208400:;
				if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4536204352; }
				_case_begin_4536204352:;
				{
					jule::Ref<_1ce385d22_FnDecl> _161325_f = this->self->_method_get_method(_157957_tokens);
					if (jule::real(_161325_f)) {
						_161325_f->_field_public=_158421_is_pub;
						this->self->_method_check_method_receiver(_161325_f);
						_157940_ipl->_field_methods=jule::append(_157940_ipl->_field_methods,jule::Slice<jule::Ref<_1ce385d22_FnDecl>>({_161325_f}));
					}
				}
				goto _match_end_4536203552;
				_case_end_4536204352:;
				_case_begin_4536204800:;
				{
					this->self->_method_push_err(_158321_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					goto _iter_next_4536198784;
				}
				goto _match_end_4536203552;
				_case_end_4536204800:;
				_match_end_4536203552:;
			}
		}
	_iter_next_4536198784:;
	}
	_iter_end_4536198784:;
}



inline jule::Ref<_1ce385d22_Impl> _1b5c910d6_Parser::_method_build_impl(jule::Slice<_1ce35e3a0_Token> _162734_tokens) {
	_1ce35e3a0_Token _162817_token = _162734_tokens[0LL];
	if (_162734_tokens.len() < 2LL) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_Impl>();
	}
	_162817_token=_162734_tokens[1LL];
	if (_162817_token._field_id != 2LLU) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_Impl>();
	}
	if (_162734_tokens.len() < 3LL) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_Impl>();
	}
	jule::Ref<_1ce385d22_Impl> _164317_ipl = jule::new_struct<_1ce385d22_Impl>(new( std::nothrow ) _1ce385d22_Impl(_162817_token,_1ce35e3a0_Token(),jule::Slice<jule::Ref<_1ce385d22_FnDecl>>(),jule::Slice<jule::Ref<_1ce385d22_VarDecl>>()));
	_162817_token=_162734_tokens[2LL];
	if (_162817_token._field_id != 12LLU) {
		if ((_162817_token._field_id == 3LLU) && (_162817_token._field_kind == jule::Str("{", 1))) {
			std::tie(_164317_ipl->_field_base,_164317_ipl->_field_dest) = std::make_tuple(_164317_ipl->_field_dest,_164317_ipl->_field_base);
			_162734_tokens=_162734_tokens.slice(2LL);
			goto _julec_label_body;
		}
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_Impl>();
	}
	if (_162734_tokens.len() < 4LL) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_Impl>();
	}
	_162817_token=_162734_tokens[3LL];
	if (_162817_token._field_id != 2LLU) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_Impl>();
	}
	_164317_ipl->_field_dest=_162817_token;
	_162734_tokens=_162734_tokens.slice(4LL);
	_julec_label_body:;
	jule::Int _167317_i = 0LL;
	jule::Slice<_1ce35e3a0_Token> _167417_body_tokens = _1b5c910d6_range(_167317_i,jule::Str("{", 1),jule::Str("}", 1),_162734_tokens);
	if (_167417_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_164317_ipl->_field_base,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ce385d22_Impl>();
	}
	if (_167317_i < _162734_tokens.len()) {
		this->self->_method_push_err(_162734_tokens[static_cast<jule::Int>(_167317_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	this->self->_method_parse_impl_body(_164317_ipl,_167417_body_tokens);
	return _164317_ipl;
}



inline jule::Any _1b5c910d6_Parser::_method_build_node_data(jule::Slice<_1ce35e3a0_Token>& _168840_tokens) {
	_1ce35e3a0_Token _168917_token = _168840_tokens[0LL];
	{
		auto _match_expr{ _168917_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4536259968; }
		_case_begin_4536259968:;
		{
			
			return jule::Any(this->self->_method_build_use_decl(_168840_tokens,false));
		}
		goto _match_end_4536257312;
		_case_end_4536259968:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4536257760; }
		_case_begin_4536257760:;
		{
			jule::Ref<_1ce385d22_FnDecl> _169721_f = this->self->_method_build_fn(_168840_tokens,false,false);
			if (jule::real(_169721_f)) {
				_169721_f->_field_global=true;
				if (_169721_f->_method_is_anon()) {
					this->self->_method_push_err(_169721_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
			}
			return jule::Any(_169721_f);
		}
		goto _match_end_4536257312;
		_case_end_4536257760:;
		if (!((34LLU) == _match_expr || (9LLU) == _match_expr || (36LLU) == _match_expr || (38LLU) == _match_expr)) { goto _case_end_4536257856; }
		_case_begin_4536257856:;
		{
			return jule::Any(this->self->_method_build_var(_168840_tokens));
		}
		goto _match_end_4536257312;
		_case_end_4536257856:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4536259296; }
		_case_begin_4536259296:;
		{
			return jule::Any(this->self->_method_build_type_alias_decl(_168840_tokens));
		}
		goto _match_end_4536257312;
		_case_end_4536259296:;
		if (!((24LLU) == _match_expr)) { goto _case_end_4536259392; }
		_case_begin_4536259392:;
		{
			return jule::Any(this->self->_method_build_enum_decl(_168840_tokens));
		}
		goto _match_end_4536257312;
		_case_end_4536259392:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4536259488; }
		_case_begin_4536259488:;
		{
			return jule::Any(this->self->_method_build_struct_decl(_168840_tokens));
		}
		goto _match_end_4536257312;
		_case_end_4536259488:;
		if (!((29LLU) == _match_expr)) { goto _case_end_4536259584; }
		_case_begin_4536259584:;
		{
			return jule::Any(this->self->_method_build_trait_decl(_168840_tokens));
		}
		goto _match_end_4536257312;
		_case_end_4536259584:;
		if (!((30LLU) == _match_expr)) { goto _case_end_4536260112; }
		_case_begin_4536260112:;
		{
			return jule::Any(this->self->_method_build_impl(_168840_tokens));
		}
		goto _match_end_4536257312;
		_case_end_4536260112:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4536260208; }
		_case_begin_4536260208:;
		{
			return this->self->_method_build_cpp_link(_168840_tokens);
		}
		goto _match_end_4536257312;
		_case_end_4536260208:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4536260304; }
		_case_begin_4536260304:;
		{
			jule::Ref<_1ce385d22_Comment> _173421_c = _1b5c910d6_build_comment(_168917_token);
			this->self->_method_process_comment(_173421_c);
			return jule::Any(_173421_c);
		}
		goto _match_end_4536257312;
		_case_end_4536260304:;
		_case_begin_4536255712:;
		{
			this->self->_method_push_err(_168917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4536257312;
		_case_end_4536255712:;
		_match_end_4536257312:;
	}
}



inline void _1b5c910d6_Parser::_method_check_comment_group(_1ce385d22_Node& _174439_node) {
	if ((!(jule::real((*this)._field_comment_group)))) {
		return;
	}
	{
		auto _match_expr{ _174439_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_Comment>>() || _match_expr.type_is<jule::Ref<_1ce385d22_Directive>>())) { goto _case_end_4536280096; }
		goto _match_end_4536278272;
		_case_end_4536280096:;
		_case_begin_4536277968:;
		{
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4536278272;
		_case_end_4536277968:;
		_match_end_4536278272:;
	}
}



inline void _1b5c910d6_Parser::_method_check_directive(_1ce385d22_Node& _175835_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto _match_expr{ _175835_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_Directive>>() || _match_expr.type_is<jule::Ref<_1ce385d22_Comment>>())) { goto _case_end_4536284096; }
		goto _match_end_4536282320;
		_case_end_4536284096:;
		_case_begin_4536282768:;
		{
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4536282320;
		_case_end_4536282768:;
		_match_end_4536282320:;
	}
}



inline void _1b5c910d6_Parser::_method_apply_meta(_1ce385d22_Node& _177334_node,jule::Bool _177350_is_pub) {
	{
		auto _match_expr{ _177334_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_VarDecl>>())) { goto _case_end_4536287216; }
		_case_begin_4536287216:;
		{
			jule::Ref<_1ce385d22_VarDecl> _177621_v = _177334_node._field_data.operator jule::Ref<_1ce385d22_VarDecl>();
			if ((!(jule::real(_177621_v)))) {
				return;
			}
			_177621_v->_field_public=_177350_is_pub;
			_177350_is_pub=false;
			_177621_v->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_177621_v->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4536287696;
		_case_end_4536287216:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_FnDecl>>())) { goto _case_end_4536287952; }
		_case_begin_4536287952:;
		{
			jule::Ref<_1ce385d22_FnDecl> _179021_f = _177334_node._field_data.operator jule::Ref<_1ce385d22_FnDecl>();
			if ((!(jule::real(_179021_f)))) {
				return;
			}
			_179021_f->_field_public=_177350_is_pub;
			_177350_is_pub=false;
			_179021_f->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_179021_f->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4536287696;
		_case_end_4536287952:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TypeAliasDecl>>())) { goto _case_end_4536288048; }
		_case_begin_4536288048:;
		{
			jule::Ref<_1ce385d22_TypeAliasDecl> _180321_tad = _177334_node._field_data.operator jule::Ref<_1ce385d22_TypeAliasDecl>();
			if ((!(jule::real(_180321_tad)))) {
				return;
			}
			_180321_tad->_field_public=_177350_is_pub;
			_177350_is_pub=false;
			_180321_tad->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4536287696;
		_case_end_4536288048:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_EnumDecl>>())) { goto _case_end_4536288144; }
		_case_begin_4536288144:;
		{
			jule::Ref<_1ce385d22_EnumDecl> _181321_ed = _177334_node._field_data.operator jule::Ref<_1ce385d22_EnumDecl>();
			if ((!(jule::real(_181321_ed)))) {
				return;
			}
			_181321_ed->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_181321_ed->_field_public=_177350_is_pub;
			_177350_is_pub=false;
		}
		goto _match_end_4536287696;
		_case_end_4536288144:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_StructDecl>>())) { goto _case_end_4536288240; }
		_case_begin_4536288240:;
		{
			jule::Ref<_1ce385d22_StructDecl> _182321_sd = _177334_node._field_data.operator jule::Ref<_1ce385d22_StructDecl>();
			if ((!(jule::real(_182321_sd)))) {
				return;
			}
			_182321_sd->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_182321_sd->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_182321_sd->_field_public=_177350_is_pub;
			_177350_is_pub=false;
		}
		goto _match_end_4536287696;
		_case_end_4536288240:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TraitDecl>>())) { goto _case_end_4536288336; }
		_case_begin_4536288336:;
		{
			jule::Ref<_1ce385d22_TraitDecl> _183521_td = _177334_node._field_data.operator jule::Ref<_1ce385d22_TraitDecl>();
			if ((!(jule::real(_183521_td)))) {
				return;
			}
			_183521_td->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_183521_td->_field_public=_177350_is_pub;
			_177350_is_pub=false;
		}
		goto _match_end_4536287696;
		_case_end_4536288336:;
		_match_end_4536287696:;
	}
	if (_177350_is_pub) {
		(*this)._method_push_err(_177334_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>({}));
	}
}



inline void _1b5c910d6_Parser::_method_check_use_decl(_1ce385d22_Node& _184934_node) {
	{
		auto _match_expr{ _184934_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_UseDecl>>())) { goto _case_end_4536319600; }
		goto _match_end_4536318672;
		_case_end_4536319600:;
		_case_begin_4536318128:;
		{
			return;
		}
		goto _match_end_4536318672;
		_case_end_4536318128:;
		_match_end_4536318672:;
	}
	if ((*this)._field_ast->_field_decls.len() > 0LL) {
		(*this)._method_push_err(_184934_node._field_token,jule::Str("use declarations must declared before other declarations", 56),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>({}));
	}
}



inline std::tuple<jule::Bool,jule::Any> _1b5c910d6_Parser::_method_build_general_scope_node_data(jule::Slice<_1ce35e3a0_Token> _186453_st) {
	jule::Bool _186468_is_pub = jule::Bool();
	jule::Any _186482_data = jule::Any();
	if (_186453_st[0LL]._field_id == 21LLU) {
		_186468_is_pub=true;
		_186453_st=_186453_st.slice(1LL);
		if (_186453_st.len() == 0LL) {
			this->self->_method_push_err(_186453_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return std::make_tuple(_186468_is_pub,_186482_data);
		}
	}
	_186482_data=this->self->_method_build_node_data(_186453_st);
	_186468_is_pub = _186468_is_pub;
	_186482_data = _186482_data;
	return std::make_tuple(_186468_is_pub,_186482_data);
}



inline _1ce385d22_Node _1b5c910d6_Parser::_method_parse_node(jule::Slice<_1ce35e3a0_Token>& _187935_st) {
	_1ce385d22_Node _188017_node = _1ce385d22_Node(_187935_st[0LL],jule::Any());
	jule::Bool _188414_is_pub;
	jule::Any _188426_data;
	std::tie(_188414_is_pub,_188426_data) = this->self->_method_build_general_scope_node_data(_187935_st);
	if (_188426_data == nullptr) {
		return _188017_node;
	}
	_188017_node._field_data=_188426_data;
	this->self->_method_apply_meta(_188017_node,_188414_is_pub);
	this->self->_method_check_comment_group(_188017_node);
	this->self->_method_check_directive(_188017_node);
	this->self->_method_check_use_decl(_188017_node);
	return _188017_node;
}



inline void _1b5c910d6_Parser::_method_append_node(jule::Slice<_1ce35e3a0_Token>& _189836_st) {
	if (_189836_st.len() == 0LL) {
		return;
	}
	_1ce385d22_Node _190317_node = this->self->_method_parse_node(_189836_st);
	if ((_190317_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (!((_190317_node._method_is_use_decl()))) { goto _case_end_4536349936; }
		_case_begin_4536349936:;
		{
			this->self->_field_ast->_field_use_decls=jule::append(this->self->_field_ast->_field_use_decls,jule::Slice<jule::Ref<_1ce385d22_UseDecl>>({_190317_node._field_data.operator jule::Ref<_1ce385d22_UseDecl>()}));
		}
		goto _match_end_4536347504;
		_case_end_4536349936:;
		if (!((_190317_node._method_is_decl()))) { goto _case_end_4536348832; }
		_case_begin_4536348832:;
		{
			this->self->_field_ast->_field_decls=jule::append(this->self->_field_ast->_field_decls,jule::Slice<_1ce385d22_Node>({_190317_node}));
		}
		goto _match_end_4536347504;
		_case_end_4536348832:;
		if (!((_190317_node._method_is_comment()))) { goto _case_end_4536348336; }
		_case_begin_4536348336:;
		{
			jule::Ref<_1ce385d22_Comment> _191821_c = _190317_node._field_data.operator jule::Ref<_1ce385d22_Comment>();
			this->self->_field_ast->_field_comments=jule::append(this->self->_field_ast->_field_comments,jule::Slice<jule::Ref<_1ce385d22_Comment>>({_191821_c}));
		}
		goto _match_end_4536347504;
		_case_end_4536348336:;
		if (!((_190317_node._method_is_impl()))) { goto _case_end_4536348432; }
		_case_begin_4536348432:;
		{
			this->self->_field_ast->_field_impls=jule::append(this->self->_field_ast->_field_impls,jule::Slice<jule::Ref<_1ce385d22_Impl>>({_190317_node._field_data.operator jule::Ref<_1ce385d22_Impl>()}));
		}
		goto _match_end_4536347504;
		_case_end_4536348432:;
		_case_begin_4536347616:;
		{
			this->self->_method_push_err(_190317_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4536347504;
		_case_end_4536347616:;
		_match_end_4536347504:;
	}
}



inline void _1b5c910d6_Parser::_method_remove_range(jule::Int _192931_i,jule::Str _192939_kind,jule::Slice<_1ce35e3a0_Token>& _192951_tokens,jule::Slice<jule::Int>& _192973_ranges) {
	jule::Str _193013_close = _1b5c910d6_get_close_kind_of_brace(_192939_kind);
	for (; _192931_i >= 0LL; (_192931_i)--) {
		{
			_1ce35e3a0_Token _193217_tok = _192951_tokens[static_cast<jule::Int>(_192973_ranges[static_cast<jule::Int>(_192931_i)])];
			if (_193217_tok._field_kind != _193013_close) {
				goto _iter_next_4536350848;
			}
			_192973_ranges=jule::append(_192973_ranges.slice(0LL,static_cast<jule::Int>(_192931_i)),_192973_ranges.slice(static_cast<jule::Int>(_192931_i + 1LL)));
			goto _iter_end_4536350848;
		}
	_iter_next_4536350848:;
	}
	_iter_end_4536350848:;
}



inline void _1b5c910d6_Parser::_method_push_wrong_order_close_err(_1ce35e3a0_Token& _194246_t,jule::Slice<_1ce35e3a0_Token>& _194257_tokens,jule::Slice<jule::Int>& _194275_ranges) {
	{
		auto _match_expr{ _194257_tokens[static_cast<jule::Int>(_194275_ranges[static_cast<jule::Int>(_194275_ranges.len() - 1LL)])]._field_kind };
		if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4536377968; }
		_case_begin_4536377968:;
		{
			(*this)._method_push_err(_194246_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4536377808;
		_case_end_4536377968:;
		if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4536378064; }
		_case_begin_4536378064:;
		{
			(*this)._method_push_err(_194246_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4536377808;
		_case_end_4536378064:;
		if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4536378160; }
		_case_begin_4536378160:;
		{
			(*this)._method_push_err(_194246_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4536377808;
		_case_end_4536378160:;
		_match_end_4536377808:;
	}
}



inline void _1b5c910d6_Parser::_method_push_range_close(_1ce35e3a0_Token _195035_t,jule::Str _195045_left,jule::Slice<_1ce35e3a0_Token>& _195057_tokens,jule::Slice<jule::Int>& _195079_ranges) {
	jule::I64 _195113_n = _195079_ranges.len();
	if (_195113_n == 0LL) {
		{
			auto _match_expr{ _195035_t._field_kind };
			if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4536388960; }
			_case_begin_4536388960:;
			{
				(*this)._method_push_err(_195035_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4536388816;
			_case_end_4536388960:;
			if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4536389056; }
			_case_begin_4536389056:;
			{
				(*this)._method_push_err(_195035_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4536388816;
			_case_end_4536389056:;
			if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4536389152; }
			_case_begin_4536389152:;
			{
				(*this)._method_push_err(_195035_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4536388816;
			_case_end_4536389152:;
			_match_end_4536388816:;
		}
		return;
	} else if (_195057_tokens[static_cast<jule::Int>(_195079_ranges[static_cast<jule::Int>(_195113_n - 1LL)])]._field_kind != _195045_left) {
		(*this)._method_push_wrong_order_close_err(_195035_t,_195057_tokens,_195079_ranges);
	}
	(*this)._method_remove_range(static_cast<jule::I64>(_195113_n - 1LL),_195035_t._field_kind,_195057_tokens,_195079_ranges);
}



inline void _1b5c910d6_Parser::_method_check_ranges(jule::Slice<_1ce35e3a0_Token>& _196532_tokens) {
	jule::Slice<jule::Int> _196617_ranges = nullptr;
	{
		jule::Int _1b5c910d6_i = 0;
		for (auto _1b5c910d6_token: _196532_tokens) {
			{
				if (_1b5c910d6_token._field_id != 3LLU) {
					goto _iter_next_4536400192;
				}
				{
					auto _match_expr{ _1b5c910d6_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4536403248; }
					_case_begin_4536403248:;
					{
						_196617_ranges=jule::append(_196617_ranges,jule::Slice<jule::Int>({_1b5c910d6_i}));
					}
					goto _match_end_4536403168;
					_case_end_4536403248:;
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4536403664; }
					_case_begin_4536403664:;
					{
						(*this)._method_push_range_close(_1b5c910d6_token,jule::Str("(", 1),_196532_tokens,_196617_ranges);
					}
					goto _match_end_4536403168;
					_case_end_4536403664:;
					if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4536403760; }
					_case_begin_4536403760:;
					{
						(*this)._method_push_range_close(_1b5c910d6_token,jule::Str("{", 1),_196532_tokens,_196617_ranges);
					}
					goto _match_end_4536403168;
					_case_end_4536403760:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4536403856; }
					_case_begin_4536403856:;
					{
						(*this)._method_push_range_close(_1b5c910d6_token,jule::Str("[", 1),_196532_tokens,_196617_ranges);
					}
					goto _match_end_4536403168;
					_case_end_4536403856:;
					_match_end_4536403168:;
				}
			}
		_iter_next_4536400192:;
		_1b5c910d6_i++;
		}
		_iter_end_4536400192:;
	}
	for (auto _1b5c910d6_i: _196617_ranges) {
		{
			_1ce35e3a0_Token _199117_token = _196532_tokens[static_cast<jule::Int>(_1b5c910d6_i)];
			{
				auto _match_expr{ _199117_token._field_kind };
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4536409280; }
				_case_begin_4536409280:;
				{
					(*this)._method_push_err(_199117_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4536412176;
				_case_end_4536409280:;
				if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4536412256; }
				_case_begin_4536412256:;
				{
					(*this)._method_push_err(_199117_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4536412176;
				_case_end_4536412256:;
				if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4536412368; }
				_case_begin_4536412368:;
				{
					(*this)._method_push_err(_199117_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4536412176;
				_case_end_4536412368:;
				_match_end_4536412176:;
			}
		}
	_iter_next_4536408000:;
	}
	_iter_end_4536408000:;
}



inline void _1b5c910d6_Parser::_method_parse(jule::Ref<_1ce4aae47_File>& _200030_f) {
	this->self->_field_ast=jule::new_struct<_1ce2b7acd_Ast>(new( std::nothrow ) _1ce2b7acd_Ast(_200030_f,jule::Slice<jule::Ref<_1ce385d22_Directive>>(),jule::Slice<jule::Ref<_1ce385d22_UseDecl>>(),jule::Slice<jule::Ref<_1ce385d22_Impl>>(),jule::Slice<jule::Ref<_1ce385d22_Comment>>(),jule::Slice<_1ce385d22_Node>()));
	jule::Slice<_1ce35e3a0_Token> _200517_tokens = _200030_f->_method_tokens();
	this->self->_method_check_ranges(_200517_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_1ce557587_Stmt>> _201117_stms = _1ce557587_split_stms(_200517_tokens);
	jule::Int _201417_i = 0LL;
	for (; _201417_i < _201117_stms.len(); (_201417_i)++) {
		{
			jule::Ref<_1ce557587_Stmt> _201621_st = _201117_stms[static_cast<jule::Int>(_201417_i)];
			if (_201621_st->_field_tokens.len() == 0LL) {
				return;
			}
			jule::Any _202125_data;
			std::tie(std::ignore,_202125_data) = this->self->_method_build_general_scope_node_data(_201621_st->_field_tokens);
			if (_202125_data == nullptr) {
				goto _iter_end_4536417488;
			}
			if (this->self->_method_stopped()) {
				return;
			}
			_1ce385d22_Node _203021_node = _1ce385d22_Node(_1ce35e3a0_Token(),_202125_data);
			if (_203021_node._method_is_comment()) {
				jule::Ref<_1ce385d22_Directive> _203225_d = this->self->_method_get_directive(_203021_node._field_data.operator jule::Ref<_1ce385d22_Comment>());
				if (jule::real(_203225_d) && _1e768bede_is_top_directive(_203225_d->_field_tag)) {
					this->self->_field_ast->_field_top_directives=jule::append(this->self->_field_ast->_field_top_directives,jule::Slice<jule::Ref<_1ce385d22_Directive>>({_203225_d}));
				}
			} else {
				goto _iter_end_4536417488;
			}
		}
	_iter_next_4536417488:;
	}
	_iter_end_4536417488:;
	this->self->_field_errors=nullptr;
	for (; _201417_i < _201117_stms.len(); (_201417_i)++) {
		{
			jule::Ref<_1ce557587_Stmt> _204521_st = _201117_stms[static_cast<jule::Int>(_201417_i)];
			this->self->_method_append_node(_204521_st->_field_tokens);
			if (this->self->_method_stopped()) {
				goto _iter_end_4536433968;
			}
		}
	_iter_next_4536433968:;
	}
	_iter_end_4536433968:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5c910d6_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1b5d8e899_TypeBuilder::_method_push_err(_1ce35e3a0_Token _7827_token,jule::Str _7841_fmt) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7827_token,_7841_fmt,jule::Slice<jule::Any>({}));
	}
}



inline void _1b5d8e899_TypeBuilder::_method_push_suggestion(jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_suggestion(_8534_fmt,_8547_args);
	}
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_TypeBuilder::_method_build_prim(void) {
	jule::Ref<_1ce385d22_TypeDecl> _9217_t = _1b5d8e899_build_prim_type((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]);
	((*((*this)._field_i)))++;
	return _9217_t;
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_TypeBuilder::_method_build_namespace(void) {
	jule::Ref<_1ce385d22_TypeDecl> _9817_t = jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Any()));
	jule::Ref<_1ce385d22_NamespaceTypeDecl> _10217_nst = jule::new_struct<_1ce385d22_NamespaceTypeDecl>(new( std::nothrow ) _1ce385d22_NamespaceTypeDecl());
	jule::Int _10317_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_1ce35e3a0_Token _10521_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
			if (jule::mod(_10317_n,2LL) == 0LL) {
				if (_10521_token._field_id != 2LLU) {
					(*this)._method_push_err(_10521_token,jule::Str("invalid syntax", 14));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
				}
				_10217_nst->_field_idents=jule::append(_10217_nst->_field_idents,jule::Slice<_1ce35e3a0_Token>({_10521_token}));
			} else if (_10521_token._field_id != 23LLU) {
				goto _iter_end_4536454176;
			}
			(_10317_n)++;
		}
	_iter_next_4536454176:;
	}
	_iter_end_4536454176:;
	_10217_nst->_field_idents=_10217_nst->_field_idents.slice(0LL,static_cast<jule::Int>(_10217_nst->_field_idents.len() - 1LL));
	((*((*this)._field_i)))--;
	_10217_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ref<_1ce385d22_IdentTypeDecl>();
	_9817_t->_field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ref<_1ce385d22_TypeDecl>> _1b5d8e899_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_1ce35e3a0_Token _13113_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_13113_token._field_id != 3LLU) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _13617_parts = (*this)._method_ident_generics();
	if (_13617_parts.len() == 0LL) {
		(*this)._method_push_err(_13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ref<_1ce385d22_TypeDecl>> _14217_types = jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_13617_parts.len())));
	{
		jule::Int _1b5d8e899_i = 0;
		for (auto _1b5d8e899_part: _13617_parts) {
			{
				jule::Int _14421_j = 0LL;
				jule::Ref<_1ce385d22_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = (*this)._field_p->_method_build_type(_1b5d8e899_part,(&(_14421_j)),true);
				if (_14421_j < _1b5d8e899_part.len()) {
					(*this)._method_push_err(_1b5d8e899_part[static_cast<jule::Int>(_14421_j)],jule::Str("invalid syntax", 14));
				}
				_14217_types[static_cast<jule::Int>(_1b5d8e899_i)]=_14522_t;
			}
		_iter_next_4536481520:;
		_1b5d8e899_i++;
		}
		_iter_end_4536481520:;
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_1ce35e3a0_Token>> _1b5d8e899_TypeBuilder::_method_ident_generics(void) {
	jule::Int _15513_first = (*((*this)._field_i));
	jule::Int _15617_range_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_1ce35e3a0_Token _15817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
			if (_15817_token._field_id == 3LLU) {
				{
					auto _match_expr{ _15817_token._field_kind };
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4536494896; }
					_case_begin_4536494896:;
					{
						(_15617_range_n)++;
					}
					goto _match_end_4536494816;
					_case_end_4536494896:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4536494992; }
					_case_begin_4536494992:;
					{
						(_15617_range_n)--;
					}
					goto _match_end_4536494816;
					_case_end_4536494992:;
					_match_end_4536494816:;
				}
			}
			if (_15617_range_n == 0LL) {
				((*((*this)._field_i)))++;
				goto _iter_end_4536484256;
			}
		}
	_iter_next_4536484256:;
	}
	_iter_end_4536484256:;
	jule::Slice<_1ce35e3a0_Token> _17017_tokens = (*this)._field_tokens.slice(static_cast<jule::Int>(_15513_first + 1LL),static_cast<jule::Int>((*((*this)._field_i)) - 1LL));
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _17118_parts;
	jule::Slice<_1e7690a81_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _1b5c910d6_parts(_17017_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_1ce35e3a0_Token _18217_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_1ce385d22_IdentTypeDecl> _18317_it = jule::new_struct<_1ce385d22_IdentTypeDecl>(new( std::nothrow ) _1ce385d22_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_18317_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_18217_token,jule::Any(_18317_it)));
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Str("invalid syntax", 14));
		return jule::new_ref<_1ce385d22_TypeDecl>();
	}
	(*((*this)._field_i))+=2LL;
	jule::Ref<_1ce385d22_TypeDecl> _20217_t = (*this)._method_build_ident();
	_20217_t->_field_kind.operator jule::Ref<_1ce385d22_IdentTypeDecl>()->_field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_TypeBuilder::_method_build_fn(void) {
	_1ce35e3a0_Token _20817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_1ce385d22_FnDecl> _20917_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false);
	if ((!(jule::real(_20917_f)))) {
		return jule::new_ref<_1ce385d22_TypeDecl>();
	}
	if ((!(_20917_f->_method_is_anon()))) {
		(*this)._method_push_err(_20917_f->_field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_20817_token,jule::Any(_20917_f)));
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_TypeBuilder::_method_build_ptr(void) {
	_1ce35e3a0_Token _22317_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_22317_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1ce385d22_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1ce385d22_PtrTypeDecl>(new( std::nothrow ) _1ce385d22_PtrTypeDecl(jule::new_ref<_1ce385d22_TypeDecl>())))));
	}
	jule::Ref<_1ce385d22_TypeDecl> _24017_elem = (*this)._method_step();
	if ((!(jule::real(_24017_elem)))) {
		return jule::new_ref<_1ce385d22_TypeDecl>();
	}
	return jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1ce385d22_PtrTypeDecl>(new( std::nothrow ) _1ce385d22_PtrTypeDecl(_24017_elem)))));
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_TypeBuilder::_method_build_ref(void) {
	_1ce35e3a0_Token _25417_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_25417_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1ce385d22_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	jule::Ref<_1ce385d22_TypeDecl> _26117_elem = (*this)._method_step();
	if ((!(jule::real(_26117_elem)))) {
		return jule::new_ref<_1ce385d22_TypeDecl>();
	}
	return jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_25417_token,jule::Any(jule::new_struct<_1ce385d22_RefTypeDecl>(new( std::nothrow ) _1ce385d22_RefTypeDecl(_26117_elem)))));
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_TypeBuilder::_method_build_op(void) {
	_1ce35e3a0_Token _27517_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto _match_expr{ _27517_token._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4536557632; }
		_case_begin_4536557632:;
		{
			return (*this)._method_build_ptr();
		}
		goto _match_end_4536555120;
		_case_end_4536557632:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4536558112; }
		_case_begin_4536558112:;
		{
			return (*this)._method_build_ref();
		}
		goto _match_end_4536555120;
		_case_end_4536558112:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4536557456; }
		_case_begin_4536557456:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("references cannot reference to another reference", 48));
			return (*this)._method_build_ref();
		}
		goto _match_end_4536555120;
		_case_end_4536557456:;
		_case_begin_4536553024:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1ce385d22_TypeDecl>();
		}
		goto _match_end_4536555120;
		_case_end_4536553024:;
		_match_end_4536555120:;
	}
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_TypeBuilder::_method_build_slc(void) {
	_1ce35e3a0_Token _29417_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	((*((*this)._field_i)))++;
	jule::Ref<_1ce385d22_TypeDecl> _29617_elem = (*this)._method_step();
	if ((!(jule::real(_29617_elem)))) {
		return jule::new_ref<_1ce385d22_TypeDecl>();
	}
	return jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_29417_token,jule::Any(jule::new_struct<_1ce385d22_SlcTypeDecl>(new( std::nothrow ) _1ce385d22_SlcTypeDecl(_29617_elem)))));
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) - 1LL)],jule::Str("data-type missing", 17));
		return jule::new_ref<_1ce385d22_TypeDecl>();
	}
	jule::Int _31713_expr_delta = (*((*this)._field_i));
	jule::Ref<_1ce385d22_TypeDecl> _31917_elem = (*this)._method_step();
	if ((!(jule::real(_31917_elem)))) {
		return jule::new_ref<_1ce385d22_TypeDecl>();
	}
	jule::Ref<_1ce385d22_ArrTypeDecl> _32417_arrt = jule::new_struct<_1ce385d22_ArrTypeDecl>(new( std::nothrow ) _1ce385d22_ArrTypeDecl(_31917_elem,jule::Ref<_1ce385d22_Expr>()));
	jule::Slice<_1ce35e3a0_Token> _32817_expr_tokens = (*this)._field_tokens.slice(0LL,static_cast<jule::Int>(_31713_expr_delta));
	std::tie(std::ignore,_32817_expr_tokens) = _1b5c910d6_range_last(_32817_expr_tokens);
	_32817_expr_tokens=_32817_expr_tokens.slice(1LL,static_cast<jule::Int>(_32817_expr_tokens.len() - 1LL));
	_1ce35e3a0_Token _33117_token = _32817_expr_tokens[0LL];
	if (((_32817_expr_tokens.len() == 1LL) && (_33117_token._field_id == 7LLU)) && (_33117_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32417_arrt->_field_size=(*this)._field_p->_method_build_expr(_32817_expr_tokens);
	}
	return jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_33117_token,jule::Any(_32417_arrt)));
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_TypeBuilder::_method_build_map(jule::Int _34428_colon,jule::Slice<_1ce35e3a0_Token>& _34445_tokens) {
	_1ce35e3a0_Token _34517_colon_token = (*this)._field_tokens[static_cast<jule::Int>(_34428_colon)];
	if ((_34428_colon == 0LL) || ((_34428_colon + 1LL) >= _34445_tokens.len())) {
		(*this)._method_push_err(_34517_colon_token,jule::Str("data-type missing", 17));
		return jule::new_ref<_1ce385d22_TypeDecl>();
	}
	jule::Slice<_1ce35e3a0_Token> _35017_key_tokens = _34445_tokens.slice(0LL,static_cast<jule::Int>(_34428_colon));
	jule::Slice<_1ce35e3a0_Token> _35117_val_tokens = _34445_tokens.slice(static_cast<jule::Int>(_34428_colon + 1LL));
	jule::Ref<_1ce385d22_MapTypeDecl> _35217_mapt = jule::new_struct<_1ce385d22_MapTypeDecl>(new( std::nothrow ) _1ce385d22_MapTypeDecl());
	jule::Int _35417_j = 0LL;
	jule::Ref<_1ce385d22_TypeDecl> _35518_keyt;
	jule::Bool _35528_ok;
	std::tie(_35518_keyt,_35528_ok) = (*this)._field_p->_method_build_type(_35017_key_tokens,(&(_35417_j)),(*this)._field_err);
	if ((!(_35528_ok))) {
		return jule::new_ref<_1ce385d22_TypeDecl>();
	} else if (_35417_j < _35017_key_tokens.len()) {
		(*this)._method_push_err(_35017_key_tokens[static_cast<jule::Int>(_35417_j)],jule::Str("invalid syntax", 14));
	}
	_35217_mapt->_field_key=_35518_keyt;
	_35417_j=0LL;
	jule::Ref<_1ce385d22_TypeDecl> _36418_valt;
	std::tie(_36418_valt,_35528_ok) = (*this)._field_p->_method_build_type(_35117_val_tokens,(&(_35417_j)),(*this)._field_err);
	if ((!(_35528_ok))) {
		return jule::new_ref<_1ce385d22_TypeDecl>();
	} else if (_35417_j < _35117_val_tokens.len()) {
		(*this)._method_push_err(_35117_val_tokens[static_cast<jule::Int>(_35417_j)],jule::Str("invalid syntax", 14));
	}
	_35217_mapt->_field_val=_36418_valt;
	return jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_34517_colon_token,jule::Any(_35217_mapt)));
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_TypeBuilder::_method_build_enumerable(void) {
	_1ce35e3a0_Token _37917_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_37917_token._field_id != 3LLU)) || (_37917_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_37917_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1ce385d22_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	_37917_token=(*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_37917_token._field_id == 3LLU) && (_37917_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_1ce35e3a0_Token> _39318_map_tokens;
	jule::Int _39330_colon;
	std::tie(_39318_map_tokens,_39330_colon) = _1b5d8e899_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_39330_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_39330_colon,_39318_map_tokens);
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_TypeBuilder::_method_step(void) {
	_1ce35e3a0_Token _40213_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto _match_expr{ _40213_token._field_id };
		if (!((1LLU) == _match_expr)) { goto _case_end_4536623856; }
		_case_begin_4536623856:;
		{
			return (*this)._method_build_prim();
		}
		goto _match_end_4536622368;
		_case_end_4536623856:;
		if (!((2LLU) == _match_expr)) { goto _case_end_4536625664; }
		_case_begin_4536625664:;
		{
			return (*this)._method_build_ident();
		}
		goto _match_end_4536622368;
		_case_end_4536625664:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4536625392; }
		_case_begin_4536625392:;
		{
			return (*this)._method_build_cpp_link();
		}
		goto _match_end_4536622368;
		_case_end_4536625392:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4536625488; }
		_case_begin_4536625488:;
		{
			return (*this)._method_build_fn();
		}
		goto _match_end_4536622368;
		_case_end_4536625488:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4536622640; }
		_case_begin_4536622640:;
		{
			return (*this)._method_build_op();
		}
		goto _match_end_4536622368;
		_case_end_4536622640:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4536622736; }
		_case_begin_4536622736:;
		{
			return (*this)._method_build_enumerable();
		}
		goto _match_end_4536622368;
		_case_end_4536622736:;
		_case_begin_4536620352:;
		{
			((*((*this)._field_i)))++;
			(*this)._method_push_err(_40213_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1ce385d22_TypeDecl>();
		}
		goto _match_end_4536622368;
		_case_end_4536620352:;
		_match_end_4536622368:;
	}
}



inline std::tuple<jule::Ref<_1ce385d22_TypeDecl>,jule::Bool> _1b5d8e899_TypeBuilder::_method_build(void) {
	jule::Bool _43144_ok = jule::Bool();
	jule::Ref<_1ce385d22_TypeDecl> _43217_root = (*this)._method_step();
	if ((!(jule::real(_43217_root)))) {
		_43144_ok = false;
		return std::make_tuple(_1b5d8e899_build_void_type(),_43144_ok);
	}
	_43144_ok = true;
	return std::make_tuple(_43217_root,_43144_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5d8e899_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b6d4076c_Const> _1b6d4076c_Const::_static_method_new_i64(jule::I64 _1327_x) {
	return jule::new_struct<_1b6d4076c_Const>(new( std::nothrow ) _1b6d4076c_Const(jule::Any(_1327_x)));
}



inline jule::Ref<_1b6d4076c_Const> _1b6d4076c_Const::_static_method_new_u64(jule::U64 _1527_x) {
	return jule::new_struct<_1b6d4076c_Const>(new( std::nothrow ) _1b6d4076c_Const(jule::Any(_1527_x)));
}



inline jule::Ref<_1b6d4076c_Const> _1b6d4076c_Const::_static_method_new_bool(jule::Bool _1728_x) {
	return jule::new_struct<_1b6d4076c_Const>(new( std::nothrow ) _1b6d4076c_Const(jule::Any(_1728_x)));
}



inline jule::Ref<_1b6d4076c_Const> _1b6d4076c_Const::_static_method_new_str(jule::Str _1927_x) {
	return jule::new_struct<_1b6d4076c_Const>(new( std::nothrow ) _1b6d4076c_Const(jule::Any(_1927_x)));
}



inline jule::Ref<_1b6d4076c_Const> _1b6d4076c_Const::_static_method_new_f64(jule::F64 _2127_x) {
	return jule::new_struct<_1b6d4076c_Const>(new( std::nothrow ) _1b6d4076c_Const(jule::Any(_2127_x)));
}



inline jule::Ref<_1b6d4076c_Const> _1b6d4076c_Const::_static_method_new_nil(void) {
	return jule::new_struct<_1b6d4076c_Const>(new( std::nothrow ) _1b6d4076c_Const(jule::Any(nullptr)));
}



inline jule::I64 _1b6d4076c_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



inline jule::U64 _1b6d4076c_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



inline jule::Bool _1b6d4076c_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _1b6d4076c_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str("", 0);
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _1b6d4076c_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



inline jule::I64 _1b6d4076c_Const::_method_as_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4536707824; }
		_case_begin_4536707824:;
		{
			return (*this)._field_data.operator jule::I64();
		}
		goto _match_end_4536706528;
		_case_end_4536707824:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4536708160; }
		_case_begin_4536708160:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4536706528;
		_case_end_4536708160:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4536708256; }
		_case_begin_4536708256:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4536706528;
		_case_end_4536708256:;
		_case_begin_4536706000:;
		{
			return 0LL;
		}
		goto _match_end_4536706528;
		_case_end_4536706000:;
		_match_end_4536706528:;
	}
}



inline jule::U64 _1b6d4076c_Const::_method_as_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4536713184; }
		_case_begin_4536713184:;
		{
			return (*this)._field_data.operator jule::U64();
		}
		goto _match_end_4536707072;
		_case_end_4536713184:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4536713520; }
		_case_begin_4536713520:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4536707072;
		_case_end_4536713520:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4536713616; }
		_case_begin_4536713616:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4536707072;
		_case_end_4536713616:;
		_case_begin_4536707456:;
		{
			return 0LL;
		}
		goto _match_end_4536707072;
		_case_end_4536707456:;
		_match_end_4536707072:;
	}
}



inline jule::F64 _1b6d4076c_Const::_method_as_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4536719584; }
		_case_begin_4536719584:;
		{
			return (*this)._field_data.operator jule::F64();
		}
		goto _match_end_4536717968;
		_case_end_4536719584:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4536719680; }
		_case_begin_4536719680:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4536717968;
		_case_end_4536719680:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4536718400; }
		_case_begin_4536718400:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4536717968;
		_case_end_4536718400:;
		_case_begin_4536716240:;
		{
			return 0LL;
		}
		goto _match_end_4536717968;
		_case_end_4536716240:;
		_match_end_4536717968:;
	}
}



inline void _1b6d4076c_Const::_method_set_i64(jule::I64 _13930_x) {
	(*this)._field_data=jule::Any(_13930_x);
}



inline void _1b6d4076c_Const::_method_set_u64(jule::U64 _14130_x) {
	(*this)._field_data=jule::Any(_14130_x);
}



inline void _1b6d4076c_Const::_method_set_bool(jule::Bool _14331_x) {
	(*this)._field_data=jule::Any(_14331_x);
}



inline void _1b6d4076c_Const::_method_set_str(jule::Str _14530_x) {
	(*this)._field_data=jule::Any(_14530_x);
}



inline void _1b6d4076c_Const::_method_set_f64(jule::F64 _14730_x) {
	(*this)._field_data=jule::Any(_14730_x);
}



inline void _1b6d4076c_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline jule::Bool _1b6d4076c_Const::_method_is_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4536738768; }
		_case_begin_4536738768:;
		{
			return true;
		}
		goto _match_end_4536737248;
		_case_end_4536738768:;
		_case_begin_4536736496:;
		{
			return false;
		}
		goto _match_end_4536737248;
		_case_end_4536736496:;
		_match_end_4536737248:;
	}
}



inline jule::Bool _1b6d4076c_Const::_method_is_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4536739920; }
		_case_begin_4536739920:;
		{
			return true;
		}
		goto _match_end_4536739584;
		_case_end_4536739920:;
		_case_begin_4536737840:;
		{
			return false;
		}
		goto _match_end_4536739584;
		_case_end_4536737840:;
		_match_end_4536739584:;
	}
}



inline jule::Bool _1b6d4076c_Const::_method_is_bool(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4536742160; }
		_case_begin_4536742160:;
		{
			return true;
		}
		goto _match_end_4536741824;
		_case_end_4536742160:;
		_case_begin_4536741184:;
		{
			return false;
		}
		goto _match_end_4536741824;
		_case_end_4536741184:;
		_match_end_4536741824:;
	}
}



inline jule::Bool _1b6d4076c_Const::_method_is_str(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4536744400; }
		_case_begin_4536744400:;
		{
			return true;
		}
		goto _match_end_4536744064;
		_case_end_4536744400:;
		_case_begin_4536743424:;
		{
			return false;
		}
		goto _match_end_4536744064;
		_case_end_4536743424:;
		_match_end_4536744064:;
	}
}



inline jule::Bool _1b6d4076c_Const::_method_is_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4536746640; }
		_case_begin_4536746640:;
		{
			return true;
		}
		goto _match_end_4536746304;
		_case_end_4536746640:;
		_case_begin_4536745664:;
		{
			return false;
		}
		goto _match_end_4536746304;
		_case_end_4536745664:;
		_match_end_4536746304:;
	}
}



inline jule::Bool _1b6d4076c_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



inline jule::Bool _1b6d4076c_Const::_method_are_same_types(_1b6d4076c_Const _19933_x) {
	{
		if (!(((*this)._method_is_i64() == _19933_x._method_is_i64()))) { goto _case_end_4536753328; }
		_case_begin_4536753328:;
		{
			return true;
		}
		goto _match_end_4536751488;
		_case_end_4536753328:;
		if (!(((*this)._method_is_u64() == _19933_x._method_is_u64()))) { goto _case_end_4536753424; }
		_case_begin_4536753424:;
		{
			return true;
		}
		goto _match_end_4536751488;
		_case_end_4536753424:;
		if (!(((*this)._method_is_f64() == _19933_x._method_is_f64()))) { goto _case_end_4536751936; }
		_case_begin_4536751936:;
		{
			return true;
		}
		goto _match_end_4536751488;
		_case_end_4536751936:;
		if (!(((*this)._method_is_bool() == _19933_x._method_is_bool()))) { goto _case_end_4536752032; }
		_case_begin_4536752032:;
		{
			return true;
		}
		goto _match_end_4536751488;
		_case_end_4536752032:;
		if (!(((*this)._method_is_str() == _19933_x._method_is_str()))) { goto _case_end_4536752128; }
		_case_begin_4536752128:;
		{
			return true;
		}
		goto _match_end_4536751488;
		_case_end_4536752128:;
		if (!(((*this)._method_is_nil() == _19933_x._method_is_nil()))) { goto _case_end_4536752224; }
		_case_begin_4536752224:;
		{
			return true;
		}
		goto _match_end_4536751488;
		_case_end_4536752224:;
		_case_begin_4536751648:;
		{
			return false;
		}
		goto _match_end_4536751488;
		_case_end_4536751648:;
		_match_end_4536751488:;
	}
}



inline jule::Bool _1b6d4076c_Const::_method_and(_1b6d4076c_Const _21722_x) {
	{
		if (!(((*this)._method_is_bool() && _21722_x._method_is_bool()))) { goto _case_end_4536763680; }
		_case_begin_4536763680:;
		{
			return (*this)._method_read_bool() && _21722_x._method_read_bool();
		}
		goto _match_end_4536761920;
		_case_end_4536763680:;
		_case_begin_4536762080:;
		{
			return false;
		}
		goto _match_end_4536761920;
		_case_end_4536762080:;
		_match_end_4536761920:;
	}
}



inline jule::Bool _1b6d4076c_Const::_method_or(_1b6d4076c_Const _22921_x) {
	{
		if (!(((*this)._method_is_bool() && _22921_x._method_is_bool()))) { goto _case_end_4536768704; }
		_case_begin_4536768704:;
		{
			return (*this)._method_read_bool() || _22921_x._method_read_bool();
		}
		goto _match_end_4536766944;
		_case_end_4536768704:;
		_case_begin_4536767104:;
		{
			return false;
		}
		goto _match_end_4536766944;
		_case_end_4536767104:;
		_match_end_4536766944:;
	}
}



inline jule::Bool _1b6d4076c_Const::_method_eqs(_1b6d4076c_Const _24122_x) {
	{
		if (!(((*this)._method_is_nil()))) { goto _case_end_4536773648; }
		_case_begin_4536773648:;
		{
			return _24122_x._method_is_nil();
		}
		goto _match_end_4536771808;
		_case_end_4536773648:;
		if (!(((*this)._method_is_bool()))) { goto _case_end_4536773744; }
		_case_begin_4536773744:;
		{
			return _24122_x._method_is_bool() && ((*this)._method_read_bool() == _24122_x._method_read_bool());
		}
		goto _match_end_4536771808;
		_case_end_4536773744:;
		if (!(((*this)._method_is_str()))) { goto _case_end_4536772256; }
		_case_begin_4536772256:;
		{
			return _24122_x._method_is_str() && ((*this)._method_read_str() == _24122_x._method_read_str());
		}
		goto _match_end_4536771808;
		_case_end_4536772256:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4536772352; }
		_case_begin_4536772352:;
		{
			return (*this)._method_read_i64() == _24122_x._method_as_i64();
		}
		goto _match_end_4536771808;
		_case_end_4536772352:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4536772448; }
		_case_begin_4536772448:;
		{
			return (*this)._method_read_u64() == _24122_x._method_as_u64();
		}
		goto _match_end_4536771808;
		_case_end_4536772448:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4536772544; }
		_case_begin_4536772544:;
		{
			return (*this)._method_read_f64() == _24122_x._method_as_f64();
		}
		goto _match_end_4536771808;
		_case_end_4536772544:;
		_case_begin_4536771968:;
		{
			return false;
		}
		goto _match_end_4536771808;
		_case_end_4536771968:;
		_match_end_4536771808:;
	}
}



inline jule::Bool _1b6d4076c_Const::_method_lt(_1b6d4076c_Const _27321_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4536786976; }
		_case_begin_4536786976:;
		{
			return (*this)._method_read_i64() < _27321_x._method_as_i64();
		}
		goto _match_end_4536785184;
		_case_end_4536786976:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4536787072; }
		_case_begin_4536787072:;
		{
			return (*this)._method_read_u64() < _27321_x._method_as_u64();
		}
		goto _match_end_4536785184;
		_case_end_4536787072:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4536787184; }
		_case_begin_4536787184:;
		{
			return (*this)._method_read_f64() < _27321_x._method_as_f64();
		}
		goto _match_end_4536785184;
		_case_end_4536787184:;
		_case_begin_4536785344:;
		{
			return false;
		}
		goto _match_end_4536785184;
		_case_end_4536785344:;
		_match_end_4536785184:;
	}
}



inline jule::Bool _1b6d4076c_Const::_method_gt(_1b6d4076c_Const _29621_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4536794480; }
		_case_begin_4536794480:;
		{
			return (*this)._method_read_i64() > _29621_x._method_as_i64();
		}
		goto _match_end_4536792688;
		_case_end_4536794480:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4536794576; }
		_case_begin_4536794576:;
		{
			return (*this)._method_read_u64() > _29621_x._method_as_u64();
		}
		goto _match_end_4536792688;
		_case_end_4536794576:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4536794688; }
		_case_begin_4536794688:;
		{
			return (*this)._method_read_f64() > _29621_x._method_as_f64();
		}
		goto _match_end_4536792688;
		_case_end_4536794688:;
		_case_begin_4536792848:;
		{
			return false;
		}
		goto _match_end_4536792688;
		_case_end_4536792848:;
		_match_end_4536792688:;
	}
}



inline jule::Bool _1b6d4076c_Const::_method_add(_1b6d4076c_Const _31826_x) {
	{
		if (!(((*this)._method_is_str()))) { goto _case_end_4536802320; }
		_case_begin_4536802320:;
		{
			if ((!(_31826_x._method_is_str()))) {
				return false;
			}
			(*this)._method_set_str((*this)._method_read_str() + _31826_x._method_read_str());
		}
		goto _match_end_4536800512;
		_case_end_4536802320:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4536802416; }
		_case_begin_4536802416:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() + _31826_x._method_as_f64()));
		}
		goto _match_end_4536800512;
		_case_end_4536802416:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4536802528; }
		_case_begin_4536802528:;
		{
			if (_31826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() + _31826_x._method_as_i64()));
			}
		}
		goto _match_end_4536800512;
		_case_end_4536802528:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4536800976; }
		_case_begin_4536800976:;
		{
			if (_31826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() + _31826_x._method_as_u64()));
			}
		}
		goto _match_end_4536800512;
		_case_end_4536800976:;
		_case_begin_4536800672:;
		{
			return false;
		}
		goto _match_end_4536800512;
		_case_end_4536800672:;
		_match_end_4536800512:;
	}
	return true;
}



inline jule::Bool _1b6d4076c_Const::_method_sub(_1b6d4076c_Const _35126_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4536819776; }
		_case_begin_4536819776:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() - _35126_x._method_as_f64()));
		}
		goto _match_end_4536817984;
		_case_end_4536819776:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4536819872; }
		_case_begin_4536819872:;
		{
			if (_35126_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() - _35126_x._method_as_i64()));
			}
		}
		goto _match_end_4536817984;
		_case_end_4536819872:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4536819984; }
		_case_begin_4536819984:;
		{
			if (_35126_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() - _35126_x._method_as_u64()));
			}
		}
		goto _match_end_4536817984;
		_case_end_4536819984:;
		_case_begin_4536818144:;
		{
			return false;
		}
		goto _match_end_4536817984;
		_case_end_4536818144:;
		_match_end_4536817984:;
	}
	return true;
}



inline jule::Bool _1b6d4076c_Const::_method_mul(_1b6d4076c_Const _37826_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4536834448; }
		_case_begin_4536834448:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() * _37826_x._method_as_f64()));
		}
		goto _match_end_4536832656;
		_case_end_4536834448:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4536834544; }
		_case_begin_4536834544:;
		{
			if (_37826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() * _37826_x._method_as_i64()));
			}
		}
		goto _match_end_4536832656;
		_case_end_4536834544:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4536834656; }
		_case_begin_4536834656:;
		{
			if (_37826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() * _37826_x._method_as_u64()));
			}
		}
		goto _match_end_4536832656;
		_case_end_4536834656:;
		_case_begin_4536832816:;
		{
			return false;
		}
		goto _match_end_4536832656;
		_case_end_4536832816:;
		_match_end_4536832656:;
	}
	return true;
}



inline jule::Bool _1b6d4076c_Const::_method_div(_1b6d4076c_Const _40926_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4536848736; }
		_case_begin_4536848736:;
		{
			jule::F64 _41217_l = _40926_x._method_as_f64();
			if (_41217_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_41217_l)));
		}
		goto _match_end_4536846944;
		_case_end_4536848736:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4536848832; }
		_case_begin_4536848832:;
		{
			jule::F64 _41917_l = _40926_x._method_as_f64();
			if (_41917_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_41917_l)));
		}
		goto _match_end_4536846944;
		_case_end_4536848832:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4536848944; }
		_case_begin_4536848944:;
		{
			jule::F64 _42617_l = _40926_x._method_as_f64();
			if (_42617_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_42617_l)));
		}
		goto _match_end_4536846944;
		_case_end_4536848944:;
		_case_begin_4536847104:;
		{
			return false;
		}
		goto _match_end_4536846944;
		_case_end_4536847104:;
		_match_end_4536846944:;
	}
	return true;
}



inline jule::Bool _1b6d4076c_Const::_method_mod(_1b6d4076c_Const _44126_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4536862928; }
		_case_begin_4536862928:;
		{
			jule::I64 _44417_l = _44126_x._method_as_i64();
			if (_44417_l == 0LL) {
				return false;
			}
			(*this)._method_set_i64(static_cast<jule::I64>(jule::mod((*this)._method_read_i64(),_44417_l)));
		}
		goto _match_end_4536861152;
		_case_end_4536862928:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4536863024; }
		_case_begin_4536863024:;
		{
			jule::U64 _45117_l = _44126_x._method_as_u64();
			if (_45117_l == 0LL) {
				return false;
			}
			(*this)._method_set_u64(static_cast<jule::U64>(jule::mod((*this)._method_read_u64(),_45117_l)));
		}
		goto _match_end_4536861152;
		_case_end_4536863024:;
		_case_begin_4536861312:;
		{
			return false;
		}
		goto _match_end_4536861152;
		_case_end_4536861312:;
		_match_end_4536861152:;
	}
	return true;
}



inline jule::Bool _1b6d4076c_Const::_method_bitwise_and(_1b6d4076c_Const _46534_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4536873520; }
		_case_begin_4536873520:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _46534_x._method_as_i64()));
		}
		goto _match_end_4536871744;
		_case_end_4536873520:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4536873616; }
		_case_begin_4536873616:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _46534_x._method_as_u64()));
		}
		goto _match_end_4536871744;
		_case_end_4536873616:;
		_case_begin_4536871904:;
		{
			return false;
		}
		goto _match_end_4536871744;
		_case_end_4536871904:;
		_match_end_4536871744:;
	}
	return true;
}



inline jule::Bool _1b6d4076c_Const::_method_bitwise_or(_1b6d4076c_Const _48133_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4536881072; }
		_case_begin_4536881072:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _48133_x._method_as_i64()));
		}
		goto _match_end_4536879296;
		_case_end_4536881072:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4536881168; }
		_case_begin_4536881168:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _48133_x._method_as_u64()));
		}
		goto _match_end_4536879296;
		_case_end_4536881168:;
		_case_begin_4536879456:;
		{
			return false;
		}
		goto _match_end_4536879296;
		_case_end_4536879456:;
		_match_end_4536879296:;
	}
	return true;
}



inline jule::Bool _1b6d4076c_Const::_method_xor(_1b6d4076c_Const _49726_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4536888496; }
		_case_begin_4536888496:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _49726_x._method_as_i64()));
		}
		goto _match_end_4536886720;
		_case_end_4536888496:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4536888592; }
		_case_begin_4536888592:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _49726_x._method_as_u64()));
		}
		goto _match_end_4536886720;
		_case_end_4536888592:;
		_case_begin_4536886880:;
		{
			return false;
		}
		goto _match_end_4536886720;
		_case_end_4536886880:;
		_match_end_4536886720:;
	}
	return true;
}



inline jule::Bool _1b6d4076c_Const::_method_lshift(_1b6d4076c_Const _51329_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4536896048; }
		_case_begin_4536896048:;
		{
			jule::I64 _51617_l = (*this)._method_as_i64();
			if (_51617_l < 0LL) {
				jule::U64 _51821_r = _51329_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_51617_l << _51821_r));
			} else {
				_1b6d4076c_lshift_unsig((*this),_51329_x);
			}
		}
		goto _match_end_4536894272;
		_case_end_4536896048:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4536896144; }
		_case_begin_4536896144:;
		{
			_1b6d4076c_lshift_unsig((*this),_51329_x);
		}
		goto _match_end_4536894272;
		_case_end_4536896144:;
		_case_begin_4536894432:;
		{
			return false;
		}
		goto _match_end_4536894272;
		_case_end_4536894432:;
		_match_end_4536894272:;
	}
	return true;
}



inline jule::Bool _1b6d4076c_Const::_method_rshift(_1b6d4076c_Const _53629_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4536905136; }
		_case_begin_4536905136:;
		{
			jule::I64 _53917_l = (*this)._method_as_i64();
			if (_53917_l < 0LL) {
				jule::U64 _54121_r = _53629_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_53917_l >> _54121_r));
			} else {
				_1b6d4076c_rshift_unsig((*this),_53629_x);
			}
		}
		goto _match_end_4536903360;
		_case_end_4536905136:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4536905232; }
		_case_begin_4536905232:;
		{
			_1b6d4076c_rshift_unsig((*this),_53629_x);
		}
		goto _match_end_4536903360;
		_case_end_4536905232:;
		_case_begin_4536903520:;
		{
			return false;
		}
		goto _match_end_4536903360;
		_case_end_4536903520:;
		_match_end_4536903360:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6d4076c_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385eed_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ce385eed_StructIns::_method_to_str(void) {
	jule::Str _22117_kind = jule::Str("", 0);
	_22117_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_22117_kind+=jule::Str("[", 1);
		for (auto _1ce385eed_g: (*this)._field_generics) {
			{
				_22117_kind+=_1ce385eed_g->_method_to_str();
				_22117_kind+=jule::Str(",", 1);
			}
		_iter_next_4539047792:;
		}
		_iter_end_4539047792:;
		_22117_kind=_22117_kind.slice(0LL,static_cast<jule::Int>(_22117_kind.len() - 1LL));
		_22117_kind+=jule::Str("]", 1);
	}
	return _22117_kind;
}



inline jule::Bool _1ce385eed_StructIns::_method_equals(jule::Ref<_1b6703d45_TypeKind> _23621_other) {
	jule::Ref<_1ce385eed_StructIns> _23713_s = (_23621_other).alloc->_method_strct();
	if ((!(jule::real(_23713_s)))) {
		return false;
	}
	if (((*this)._field_decl).alloc != (_23713_s->_field_decl).alloc) {
		return false;
	}
	if ((*this)._field_generics.len() != _23713_s->_field_generics.len()) {
		return false;
	}
	jule::Int _25017_i = 0LL;
	for (; _25017_i < (*this)._field_generics.len(); (_25017_i)++) {
		{
			if ((!((*this)._field_generics[static_cast<jule::Int>(_25017_i)]->_method_equals(_23713_s->_field_generics[static_cast<jule::Int>(_25017_i)])))) {
				return false;
			}
		}
	_iter_next_4539057712:;
	}
	_iter_end_4539057712:;
	return true;
}



inline jule::Bool _1ce385eed_StructIns::_method_same(jule::Ref<_1ce385eed_StructIns> _26423_s) {
	if ((((*this)._field_decl).alloc != (_26423_s->_field_decl).alloc) || (_26423_s->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		jule::Int _1ce385eed_i = 0;
		for (auto _1ce385eed_g: (*this)._field_generics) {
			{
				if ((!(_1ce385eed_g->_method_equals(_26423_s->_field_generics[static_cast<jule::Int>(_1ce385eed_i)])))) {
					return false;
				}
			}
		_iter_next_4539067328:;
		_1ce385eed_i++;
		}
		_iter_end_4539067328:;
	}
	return true;
}



inline jule::Ref<_1b6069348_Fn> _1ce385eed_StructIns::_method_find_method(jule::Str _27934_ident,jule::Bool _27946_statically) {
	for (auto _1ce385eed_f: (*this)._field_methods) {
		{
			if ((_1ce385eed_f->_field_statically == _27946_statically) && (_1ce385eed_f->_field_ident == _27934_ident)) {
				return _1ce385eed_f;
			}
		}
	_iter_next_4539073888:;
	}
	_iter_end_4539073888:;
	return jule::new_ref<_1b6069348_Fn>();
}



inline jule::Ref<_1ce385eed_FieldIns> _1ce385eed_StructIns::_method_find_field(jule::Str _29033_ident) {
	for (auto _1ce385eed_f: (*this)._field_fields) {
		{
			if (_1ce385eed_f->_field_decl->_field_ident == _29033_ident) {
				return _1ce385eed_f;
			}
		}
	_iter_next_4539078688:;
	}
	_iter_end_4539078688:;
	return jule::new_ref<_1ce385eed_FieldIns>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385eed_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "references:" << _Src._field_references;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6069348_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b6069348_ParamIns::_method_to_str(void) {
	jule::Str _17917_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_mutable) {
		_17917_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_17917_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_17917_s+=jule::Str("&", 1);
		}
		_17917_s+=jule::Str("self", 4);
		return _17917_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_17917_s+=jule::Str("...", 3);
	}
	if (jule::real((*this)._field_kind)) {
		_17917_s+=(*this)._field_kind->_method_to_str();
	}
	return _17917_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6069348_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b6069348_FnIns::_method_to_str(void) {
	
	return (*this)._method_get_kind_str(false);
}



inline jule::Bool _1b6069348_FnIns::_method_equals(jule::Ref<_1b6703d45_TypeKind> _23421_other) {
	jule::Ref<_1b6069348_FnIns> _23513_f = (_23421_other).alloc->_method_fnc();
	if ((!(jule::real(_23513_f)))) {
		return false;
	}
	if ((*this)._field_decl->_field_statically != _23513_f->_field_decl->_field_statically) {
		return false;
	}
	if ((*this)._field_decl->_field_unsafety != _23513_f->_field_decl->_field_unsafety) {
		return false;
	}
	if ((*this)._field_generics.len() != _23513_f->_field_generics.len()) {
		return false;
	}
	if ((*this)._field_decl->_method_is_void() != _23513_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _25617_i = 0LL;
	for (; _25617_i < (*this)._field_generics.len(); (_25617_i)++) {
		{
			if ((!((*this)._field_generics[static_cast<jule::Int>(_25617_i)]->_method_equals(_23513_f->_field_generics[static_cast<jule::Int>(_25617_i)])))) {
				return false;
			}
		}
	_iter_next_4539159568:;
	}
	_iter_end_4539159568:;
	jule::Fn<jule::Bool(jule::Ref<_1b6069348_ParamIns>,jule::Ref<_1b6069348_ParamIns>)> _26313_check_params = jule::Fn<jule::Bool(jule::Ref<_1b6069348_ParamIns>,jule::Ref<_1b6069348_ParamIns>)>([=](jule::Ref<_1b6069348_ParamIns> _26331_p1,jule::Ref<_1b6069348_ParamIns> _26346_p2) mutable -> jule::Bool {
		if (_26331_p1->_field_decl->_field_mutable != _26346_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_26331_p1->_field_decl->_method_is_self()) {
			if ((!(_26346_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_26331_p1->_field_decl->_method_is_ref() != _26346_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_26331_p1->_field_decl->_field_reference != _26346_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_26331_p1->_field_decl->_field_variadic != _26346_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _26331_p1->_field_kind->_method_equals(_26346_p2->_field_kind);
	});
	_25617_i=0LL;
	for (; _25617_i < (*this)._field_params.len(); (_25617_i)++) {
		{
			if ((!(_26313_check_params((*this)._field_params[static_cast<jule::Int>(_25617_i)],_23513_f->_field_params[static_cast<jule::Int>(_25617_i)])))) {
				return false;
			}
		}
	_iter_next_4539176816:;
	}
	_iter_end_4539176816:;
	if ((!((*this)._field_decl->_method_is_void()))) {
		if ((!((*this)._field_result->_method_equals(_23513_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _1b6069348_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != nullptr;
}



inline jule::Bool _1b6069348_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (jule::real((*this)._field_decl) && (*this)._field_decl->_method_is_anon());
}



inline jule::Bool _1b6069348_FnIns::_method_same(jule::Ref<_1b6069348_FnIns> _31723_f) {
	if ((((*this)._field_decl).alloc != (_31723_f->_field_decl).alloc) || (_31723_f->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		jule::Int _1b6069348_i = 0;
		for (auto _1b6069348_g: (*this)._field_generics) {
			{
				if ((!(_1b6069348_g->_method_equals(_31723_f->_field_generics[static_cast<jule::Int>(_1b6069348_i)])))) {
					return false;
				}
			}
		_iter_next_4539191008:;
		_1b6069348_i++;
		}
		_iter_end_4539191008:;
	}
	return true;
}



inline jule::Str _1b6069348_FnIns::_method_get_kind_str(jule::Bool _33331_ident) {
	jule::Str _33417_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_statically) {
		_33417_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_33417_s+=jule::Str("unsafe ", 7);
	}
	_33417_s+=jule::Str("fn", 2);
	if (_33331_ident && jule::real((*this)._field_decl)) {
		_33417_s+=jule::Str(" ", 1) + (*this)._field_decl->_field_ident;
	}
	if ((*this)._field_generics.len() > 0LL) {
		_33417_s+=jule::Str("[", 1);
		{
			jule::Int _1b6069348_i = 0;
			for (auto _1b6069348_t: (*this)._field_generics) {
				{
					_33417_s+=_1b6069348_t->_method_to_str();
					if ((_1b6069348_i + 1LL) < (*this)._field_generics.len()) {
						_33417_s+=jule::Str(",", 1);
					}
				}
			_iter_next_4539199568:;
			_1b6069348_i++;
			}
			_iter_end_4539199568:;
		}
		_33417_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_33417_s+=jule::Str("[", 1);
		{
			jule::Int _1b6069348_i = 0;
			for (auto _1b6069348_g: (*this)._field_decl->_field_generics) {
				{
					_33417_s+=_1b6069348_g->_field_ident;
					if ((_1b6069348_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_33417_s+=jule::Str(",", 1);
					}
				}
			_iter_next_4539206176:;
			_1b6069348_i++;
			}
			_iter_end_4539206176:;
		}
		_33417_s+=jule::Str("]", 1);
	}
	_33417_s+=jule::Str("(", 1);
	jule::I64 _37113_n = (*this)._field_params.len();
	if (_37113_n > 0LL) {
		for (auto _1b6069348_p: (*this)._field_params) {
			{
				_33417_s+=_1b6069348_p->_method_to_str();
				_33417_s+=jule::Str(",", 1);
			}
		_iter_next_4539212304:;
		}
		_iter_end_4539212304:;
		_33417_s=_33417_s.slice(0LL,static_cast<jule::Int>(_33417_s.len() - 1LL));
	}
	_33417_s+=jule::Str(")", 1);
	if ((!((*this)._field_decl->_method_is_void()))) {
		_33417_s+=jule::Str(":", 1);
		_33417_s+=(*this)._field_result->_method_to_str();
	}
	return _33417_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6069348_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ce50a46e_ReferenceStack> _1ce50a46e_ReferenceStack::_static_method_new(void) {
	return jule::new_struct<_1ce50a46e_ReferenceStack>(new( std::nothrow ) _1ce50a46e_ReferenceStack());
}



inline jule::Int _1ce50a46e_ReferenceStack::_method_len(void) {
	return static_cast<jule::I64>((*this)._field_buffer.len());
}



inline jule::Any _1ce50a46e_ReferenceStack::_method_at(jule::Int _5825_i) {
	return (*this)._field_buffer[static_cast<jule::Int>(_5825_i)];
}



inline void _1ce50a46e_ReferenceStack::_method_push(jule::Any _6331_ref) {
	(*this)._field_buffer=jule::append((*this)._field_buffer,jule::Slice<jule::Any>({_6331_ref}));
}



inline jule::Bool _1ce50a46e_ReferenceStack::_method_exist_0(jule::Ref<_1b637edab_Var> _6827_t) {
	for (auto _1ce50a46e_ref: (*this)._field_buffer) {
		{
			{
				auto _match_expr{ _1ce50a46e_ref };
				if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4542417088; }
				_case_begin_4542417088:;
				{
					if ((_1ce50a46e_ref.operator jule::Ref<_1b637edab_Var>()).alloc == (_6827_t).alloc) {
						return true;
					}
				}
				goto _match_end_4542417568;
				_case_end_4542417088:;
				_match_end_4542417568:;
			}
		}
	_iter_next_4542415920:;
	}
	_iter_end_4542415920:;
	return false;
}

inline jule::Bool _1ce50a46e_ReferenceStack::_method_exist_1(jule::Ref<_1b6069348_FnIns> _6827_t) {
	for (auto _1ce50a46e_ref: (*this)._field_buffer) {
		{
			{
				auto _match_expr{ _1ce50a46e_ref };
				if (!(_match_expr.type_is<jule::Ref<_1b6069348_FnIns>>())) { goto _case_end_4542427008; }
				_case_begin_4542427008:;
				{
					if ((_1ce50a46e_ref.operator jule::Ref<_1b6069348_FnIns>()).alloc == (_6827_t).alloc) {
						return true;
					}
				}
				goto _match_end_4542427488;
				_case_end_4542427008:;
				_match_end_4542427488:;
			}
		}
	_iter_next_4542425840:;
	}
	_iter_end_4542425840:;
	return false;
}

inline jule::Bool _1ce50a46e_ReferenceStack::_method_exist_2(jule::Ref<_1ce385eed_StructIns> _6827_t) {
	for (auto _1ce50a46e_ref: (*this)._field_buffer) {
		{
			{
				auto _match_expr{ _1ce50a46e_ref };
				if (!(_match_expr.type_is<jule::Ref<_1ce385eed_StructIns>>())) { goto _case_end_4542478560; }
				_case_begin_4542478560:;
				{
					if ((_1ce50a46e_ref.operator jule::Ref<_1ce385eed_StructIns>()).alloc == (_6827_t).alloc) {
						return true;
					}
				}
				goto _match_end_4542479040;
				_case_end_4542478560:;
				_match_end_4542479040:;
			}
		}
	_iter_next_4542477392:;
	}
	_iter_end_4542477392:;
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce50a46e_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ce50a46e_SymbolBuilder> _1ce50a46e_SymbolBuilder::_method_get_root(void) {
	jule::Ref<_1ce50a46e_SymbolBuilder> _31417_root = this->self;
	while (jule::real(_31417_root->_field_owner)) {
		{
			_31417_root=_31417_root->_field_owner;
		}
	_iter_next_4539225376:;
	}
	_iter_end_4539225376:;
	return _31417_root;
}



inline void _1ce50a46e_SymbolBuilder::_method_push_err(_1ce35e3a0_Token& _32128_token,jule::Str _32142_fmt,jule::Slice<jule::Any> _32155_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1e7690a81_Log>({_1b622b76e_compiler_err(_32128_token,true,_32142_fmt,_32155_args)}));
}



inline void _1ce50a46e_SymbolBuilder::_method_push_err_text(_1ce35e3a0_Token& _32533_token,jule::Str _32547_fmt,jule::Slice<jule::Any> _32560_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1e7690a81_Log>({_1b622b76e_compiler_err(_32533_token,false,_32547_fmt,_32560_args)}));
}



inline void _1ce50a46e_SymbolBuilder::_method_push_suggestion(jule::Str _33034_fmt,jule::Slice<jule::Any> _33047_args) {
	{
		_1b622b76e_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_33034_fmt,_33047_args);
	}
}



inline jule::Bool _1ce50a46e_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ref<_1ce385d22_UseDecl>& _33443_decl) {
	jule::Bool _33461_ok = jule::Bool();
	if (_1e7691048_is_std_header_path(_33443_decl->_field_link_path)) {
		_33461_ok = true;
		return _33461_ok;
	}
	jule::Str _33913_ext = _1e777b83c_ext(_33443_decl->_field_link_path);
	if ((!(_1e7691048_is_valid_header_ext(_33913_ext))) && (!(_1e7691048_is_valid_cpp_ext(_33913_ext)))) {
		(*this)._method_push_err(_33443_decl->_field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_33913_ext)}));
		_33461_ok = false;
		return _33461_ok;
	}
	jule::Ref<_1ce48210a_Status> _34514_info;
	jule::Int _34520_err;
	std::tie(_34514_info,_34520_err) = _1ce4735e6_stat(_33443_decl->_field_link_path);
	if ((_34520_err != 0LLU) || _34514_info->_method_is_dir()) {
		(*this)._method_push_err(_33443_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_33443_decl->_field_link_path)}));
		_33461_ok = false;
		return _33461_ok;
	}
	_33461_ok = true;
	return _33461_ok;
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1ce50a46e_SymbolBuilder::_method_build_cpp_header_import(jule::Ref<_1ce385d22_UseDecl>& _35547_decl) {
	jule::Str _35617_path = _35547_decl->_field_link_path;
	if ((!(_1e7691048_is_std_header_path(_35547_decl->_field_link_path)))) {
		jule::Bool _35921_ok = (*this)._method_check_cpp_use_decl_path(_35547_decl);
		if ((!(_35921_ok))) {
			return jule::new_ref<_1b623bb7a_ImportInfo>();
		}
		std::tie(_35617_path,_35921_ok) = _1e777b83c_abs(_35547_decl->_field_link_path);
		if ((!(_35921_ok))) {
			(*this)._method_push_err(_35547_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35547_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_1b623bb7a_ImportInfo>(new( std::nothrow ) _1b623bb7a_ImportInfo(_35547_decl->_field_token,_35617_path,_35547_decl->_field_link_path,jule::Str("", 0),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_1ce35e3a0_Token>(),jule::new_ref<_1b623bb7a_Package>()));
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1ce50a46e_SymbolBuilder::_method_build_std_import(jule::Ref<_1ce385d22_UseDecl>& _38240_decl) {
	jule::Str _38317_path = _38240_decl->_field_link_path.slice(static_cast<jule::Int>(jule::Str("std::", 5).len()));
	_38317_path=_38317_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38317_path=_1e777b83c_join(jule::Slice<jule::Str>({_1e77372ed_PATH_STDLIB,_38317_path}));
	jule::Bool _38620_ok;
	std::tie(_38317_path,_38620_ok) = _1e777b83c_abs(_38317_path);
	if ((!(_38620_ok))) {
		(*this)._method_push_err(_38240_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38240_decl->_field_link_path)}));
		return jule::new_ref<_1b623bb7a_ImportInfo>();
	}
	jule::Ref<_1ce48210a_Status> _39214_info;
	jule::Int _39220_err;
	std::tie(_39214_info,_39220_err) = _1ce4735e6_stat(_38317_path);
	if ((_39220_err != 0LLU) || (!(_39214_info->_method_is_dir()))) {
		(*this)._method_push_err(_38240_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38240_decl->_field_link_path)}));
		return jule::new_ref<_1b623bb7a_ImportInfo>();
	}
	jule::Str _40013_ident = _38240_decl->_field_link_path.slice(static_cast<jule::Int>(_38240_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_1b623bb7a_ImportInfo>(new( std::nothrow ) _1b623bb7a_ImportInfo(_38240_decl->_field_token,_38317_path,_38240_decl->_field_link_path,_40013_ident,_38240_decl->_field_alias,jule::Bool(),false,true,_38240_decl->_field_full,jule::Slice<_1ce35e3a0_Token>(),jule::new_struct<_1b623bb7a_Package>(new( std::nothrow ) _1b623bb7a_Package(nullptr))));
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1ce50a46e_SymbolBuilder::_method_build_ident_import(jule::Ref<_1ce385d22_UseDecl>& _41743_decl) {
	jule::Str _41817_path = _41743_decl->_field_link_path;
	_41817_path=_41817_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_41817_path=_1e777b83c_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_41817_path}));
	jule::Bool _42220_ok;
	std::tie(_41817_path,_42220_ok) = _1e777b83c_abs(_41817_path);
	if ((!(_42220_ok))) {
		this->self->_method_push_err(_41743_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41743_decl->_field_link_path)}));
		return jule::new_ref<_1b623bb7a_ImportInfo>();
	}
	jule::Ref<_1ce48210a_Status> _42814_info;
	jule::Int _42820_err;
	std::tie(_42814_info,_42820_err) = _1ce4735e6_stat(_41817_path);
	if ((_42820_err != 0LLU) || (!(_42814_info->_method_is_dir()))) {
		this->self->_method_push_err(_41743_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41743_decl->_field_link_path)}));
		return jule::new_ref<_1b623bb7a_ImportInfo>();
	}
	jule::Str _43613_ident = _41743_decl->_field_link_path.slice(static_cast<jule::Int>(_41743_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_1b623bb7a_ImportInfo>(new( std::nothrow ) _1b623bb7a_ImportInfo(_41743_decl->_field_token,_41817_path,_41743_decl->_field_link_path,_43613_ident,_41743_decl->_field_alias,jule::Bool(),false,false,_41743_decl->_field_full,jule::Slice<_1ce35e3a0_Token>(),jule::new_struct<_1b623bb7a_Package>(new( std::nothrow ) _1b623bb7a_Package(nullptr))));
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1ce50a46e_SymbolBuilder::_method_build_import(jule::Ref<_1ce385d22_UseDecl>& _45337_decl) {
	{
		if (!((_45337_decl->_field_cpp_linked))) { goto _case_end_4539326304; }
		_case_begin_4539326304:;
		{
			return this->self->_method_build_cpp_header_import(_45337_decl);
		}
		goto _match_end_4539324800;
		_case_end_4539326304:;
		if (!((_45337_decl->_field_std))) { goto _case_end_4539325936; }
		_case_begin_4539325936:;
		{
			return this->self->_method_build_std_import(_45337_decl);
		}
		goto _match_end_4539324800;
		_case_end_4539325936:;
		_case_begin_4539324960:;
		{
			return this->self->_method_build_ident_import(_45337_decl);
		}
		goto _match_end_4539324800;
		_case_end_4539324960:;
		_match_end_4539324800:;
	}
}



inline jule::Bool _1ce50a46e_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ref<_1b623bb7a_ImportInfo>& _46144_pkg) {
	jule::Bool _46164_ok = jule::Bool();
	jule::Ref<_1b623bb7a_ImportInfo> _46313_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)>([=](jule::Ref<_1b623bb7a_ImportInfo> _46349_spkg) mutable -> jule::Bool {
		return _46144_pkg->_field_path == _46349_spkg->_field_path;
	}));
	if ((!(jule::real(_46313_lpkg)))) {
		_46164_ok = true;
		return _46164_ok;
	}
	(*this)._method_push_err(_46144_pkg->_field_token,jule::Str("duplicate use declaration: @", 28),jule::Slice<jule::Any>({jule::Any(_46144_pkg->_field_link_path)}));
	(*this)._method_push_suggestion(jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>({}));
	_46164_ok = false;
	return _46164_ok;
}



inline void _1ce50a46e_SymbolBuilder::_method_impl_import_selections(jule::Ref<_1b623bb7a_ImportInfo>& _47546_imp,jule::Ref<_1ce385d22_UseDecl>& _47569_decl) {
	for (auto _1ce50a46e_ident: _47569_decl->_field_selected) {
		{
			if (_47546_imp->_method_exist_ident(_1ce50a46e_ident._field_kind)) {
				(*this)._method_push_err(_1ce50a46e_ident,jule::Str("duplicated identifier selection: @", 34),jule::Slice<jule::Any>({jule::Any(_1ce50a46e_ident._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>({}));
				goto _iter_next_4539344720;
			}
			_47546_imp->_field_selected=jule::append(_47546_imp->_field_selected,jule::Slice<_1ce35e3a0_Token>({_1ce50a46e_ident}));
		}
	_iter_next_4539344720:;
	}
	_iter_end_4539344720:;
}



inline jule::Str _1ce50a46e_SymbolBuilder::_method_get_as_link_path(jule::Str _48740_path) {
	if (_48740_path.has_prefix(_1e77372ed_PATH_STDLIB)) {
		_48740_path=_48740_path.slice(static_cast<jule::Int>(_1e77372ed_PATH_STDLIB.len()));
		return jule::Str("std", 3) + _48740_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _49314_root;
	std::tie(_49314_root,std::ignore) = _1e777b83c_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_48740_path=_48740_path.slice(static_cast<jule::Int>(_49314_root.len()));
	if (_48740_path[0LL] == 47LL) {
		_48740_path=_48740_path.slice(1LL);
	}
	return _48740_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _1ce50a46e_SymbolBuilder::_method_push_cycle_error(jule::Ref<_1ce50a46e_SymbolBuilder>& _50137_sb,jule::Str _50157_path,jule::Str& _50173_message) {
	
	jule::Str _50413_refers_to = _1e7690a81_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_50137_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_50157_path))}));
	_50173_message=((_1ce50a46e_str_repeat(jule::Str(" ", 1),4LL) + _50413_refers_to) + jule::Str("\n", 1)) + _50173_message;
}



inline void _1ce50a46e_SymbolBuilder::_method_push_cross_cycle_error(jule::Ref<_1ce50a46e_SymbolBuilder>& _51143_target,jule::Ref<_1b623bb7a_ImportInfo>& _51168_imp,_1ce35e3a0_Token& _51187_error_token) {
	jule::Str _51217_message = jule::Str("", 0);
	this->self->_method_push_cycle_error(this->self,_51168_imp->_field_path,_51217_message);
	jule::Ref<_1ce50a46e_SymbolBuilder> _51617_owner = this->self->_field_owner;
	jule::Ref<_1ce50a46e_SymbolBuilder> _51717_old = this->self;
	while (jule::real(_51617_owner->_field_owner)) {
		{
			this->self->_method_push_cycle_error(_51717_old->_field_owner,_51717_old->_field_table->_field_file->_method_dir(),_51217_message);
			if ((_51617_owner->_field_owner).alloc == (_51143_target).alloc) {
				this->self->_method_push_cycle_error(_51143_target,_51617_owner->_field_table->_field_file->_method_dir(),_51217_message);
				goto _iter_end_4539380288;
			}
			_51717_old=_51617_owner;
			_51617_owner=_51617_owner->_field_owner;
		}
	_iter_next_4539380288:;
	}
	_iter_end_4539380288:;
	this->self->_method_push_err(_51187_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_51217_message)}));
}



inline jule::Bool _1ce50a46e_SymbolBuilder::_method_check_import_cycles(jule::Ref<_1b623bb7a_ImportInfo> _53439_imp,jule::Ref<_1ce385d22_UseDecl>& _53458_decl) {
	if (_53439_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_53458_decl->_field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_53439_imp->_field_path))}));
		return false;
	}
	if ((!(jule::real(this->self->_field_owner)))) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _53439_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_53439_imp,_53458_decl->_field_token);
		return false;
	}
	jule::Ref<_1ce50a46e_SymbolBuilder> _54917_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_54917_owner->_field_table->_field_file->_method_dir() == _53439_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_54917_owner,_53439_imp,_53458_decl->_field_token);
		return false;
	}
	if (jule::real(_54917_owner->_field_owner)) {
		_54917_owner=_54917_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline jule::Bool _1ce50a46e_SymbolBuilder::_method_import_package(jule::Ref<_1b623bb7a_ImportInfo>& _56439_imp,jule::Ref<_1ce385d22_UseDecl>& _56462_decl) {
	jule::Bool _56480_ok = jule::Bool();
	if (_56439_imp->_field_cpp_linked) {
		_56480_ok = true;
		return _56480_ok;
	}
	jule::Ref<_1b623bb7a_ImportInfo> _56917_port = this->self->_field_importer.get()._method_get_import(_56439_imp->_field_path);
	if (jule::real(_56917_port)) {
		_56439_imp->_field_package=_56917_port->_field_package;
		_56439_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_56439_imp,_56462_decl)))) {
			_56480_ok = false;
			return _56480_ok;
		}
		jule::Slice<jule::Ref<_1ce2b7acd_Ast>> _57822_asts;
		jule::Slice<_1e7690a81_Log> _57828_errors;
		std::tie(_57822_asts,_57828_errors) = this->self->_field_importer.get()._method_import_package(_56439_imp->_field_path);
		if (_57828_errors.len() > 0LL) {
			this->self->_field_errors=jule::append(this->self->_field_errors,_57828_errors);
			_56480_ok = false;
			return _56480_ok;
		}
		for (auto _1ce50a46e_ast: _57822_asts) {
			{
				jule::Ref<_1b66b3a3b_SymbolTable> _58526_table;
				jule::Slice<_1e7690a81_Log> _58533_errors;
				std::tie(_58526_table,_58533_errors) = _1b6b73ea7_build_symbols(_1ce50a46e_ast,this->self->_field_importer,this->self);
				if (_58533_errors.len() > 0LL) {
					this->self->_field_errors=jule::append(this->self->_field_errors,_58533_errors);
					this->self->_method_push_err_text(_56439_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_56439_imp->_field_link_path)}));
					_56480_ok = false;
					return _56480_ok;
				}
				_56439_imp->_field_package->_field_files=jule::append(_56439_imp->_field_package->_field_files,jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>({_58526_table}));
			}
		_iter_next_4539421600:;
		}
		_iter_end_4539421600:;
	}
	this->self->_method_impl_import_selections(_56439_imp,_56462_decl);
	_56480_ok = true;
	return _56480_ok;
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1ce50a46e_SymbolBuilder::_method_import_use_decl(jule::Ref<_1ce385d22_UseDecl>& _60340_decl) {
	jule::Ref<_1b623bb7a_ImportInfo> _60417_imp = this->self->_method_build_import(_60340_decl);
	if ((!(jule::real(_60417_imp)))) {
		return jule::new_ref<_1b623bb7a_ImportInfo>();
	}
	jule::Bool _61017_ok = this->self->_method_check_duplicate_use_decl(_60417_imp);
	if ((!(_61017_ok))) {
		return jule::new_ref<_1b623bb7a_ImportInfo>();
	}
	if ((_60417_imp->_field_alias.len() != 0LL) && (_60340_decl->_field_selected.len() > 0LL)) {
		this->self->_method_push_err(_60340_decl->_field_token,jule::Str("use aliases cannot useable for selected package defines", 55),jule::Slice<jule::Any>({}));
	}
	_61017_ok=this->self->_method_import_package(_60417_imp,_60340_decl);
	this->self->_field_table->_field_imports=jule::append(this->self->_field_table->_field_imports,jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>>({_60417_imp}));
	if (_61017_ok) {
		this->self->_field_importer.get()._method_imported(_60417_imp);
		return _60417_imp;
	}
	return jule::new_ref<_1b623bb7a_ImportInfo>();
}



inline void _1ce50a46e_SymbolBuilder::_method_import_use_decls(void) {
	for (auto _1ce50a46e_decl: this->self->_field_ast->_field_use_decls) {
		{
			this->self->_method_import_use_decl(_1ce50a46e_decl);
			if (this->self->_field_errors.len() > 0LL) {
				goto _iter_end_4539441728;
			}
		}
	_iter_next_4539441728:;
	}
	_iter_end_4539441728:;
}



inline void _1ce50a46e_SymbolBuilder::_method_append_decl(_1ce385d22_Node& _63935_decl) {
	{
		auto _match_expr{ _63935_decl._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TypeAliasDecl>>())) { goto _case_end_4539448640; }
		_case_begin_4539448640:;
		{
			jule::Ref<_1b6703d45_TypeAlias> _64221_ta = _1ce50a46e_build_type_alias(_63935_decl._field_data.operator jule::Ref<_1ce385d22_TypeAliasDecl>());
			(*this)._field_table->_field_type_aliases=jule::append((*this)._field_table->_field_type_aliases,jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>({_64221_ta}));
		}
		goto _match_end_4539446448;
		_case_end_4539448640:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_StructDecl>>())) { goto _case_end_4539446896; }
		_case_begin_4539446896:;
		{
			jule::Ref<_1ce385eed_Struct> _64621_srct = _1ce50a46e_build_struct(_63935_decl._field_data.operator jule::Ref<_1ce385d22_StructDecl>());
			(*this)._field_table->_field_structs=jule::append((*this)._field_table->_field_structs,jule::Slice<jule::Ref<_1ce385eed_Struct>>({_64621_srct}));
		}
		goto _match_end_4539446448;
		_case_end_4539446896:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_FnDecl>>())) { goto _case_end_4539446992; }
		_case_begin_4539446992:;
		{
			jule::Ref<_1b6069348_Fn> _65021_f = _1ce50a46e_build_fn(_63935_decl._field_data.operator jule::Ref<_1ce385d22_FnDecl>());
			(*this)._field_table->_field_funcs=jule::append((*this)._field_table->_field_funcs,jule::Slice<jule::Ref<_1b6069348_Fn>>({_65021_f}));
		}
		goto _match_end_4539446448;
		_case_end_4539446992:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TraitDecl>>())) { goto _case_end_4539447088; }
		_case_begin_4539447088:;
		{
			jule::Ref<_1b61d7d79_Trait> _65421_t = _1ce50a46e_build_trait(_63935_decl._field_data.operator jule::Ref<_1ce385d22_TraitDecl>());
			(*this)._field_table->_field_traits=jule::append((*this)._field_table->_field_traits,jule::Slice<jule::Ref<_1b61d7d79_Trait>>({_65421_t}));
		}
		goto _match_end_4539446448;
		_case_end_4539447088:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_VarDecl>>())) { goto _case_end_4539447184; }
		_case_begin_4539447184:;
		{
			jule::Ref<_1b637edab_Var> _65821_v = _1ce50a46e_build_var(_63935_decl._field_data.operator jule::Ref<_1ce385d22_VarDecl>());
			(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ref<_1b637edab_Var>>({_65821_v}));
		}
		goto _match_end_4539446448;
		_case_end_4539447184:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_EnumDecl>>())) { goto _case_end_4539448736; }
		_case_begin_4539448736:;
		{
			jule::Ref<_1b61d7c58_Enum> _66221_e = _1ce50a46e_build_enum(_63935_decl._field_data.operator jule::Ref<_1ce385d22_EnumDecl>());
			(*this)._field_table->_field_enums=jule::append((*this)._field_table->_field_enums,jule::Slice<jule::Ref<_1b61d7c58_Enum>>({_66221_e}));
		}
		goto _match_end_4539446448;
		_case_end_4539448736:;
		_case_begin_4539445904:;
		{
			(*this)._method_push_err(_63935_decl._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4539446448;
		_case_end_4539445904:;
		_match_end_4539446448:;
	}
}



inline void _1ce50a46e_SymbolBuilder::_method_append_decls(void) {
	for (auto _1ce50a46e_decl: (*this)._field_ast->_field_decls) {
		{
			(*this)._method_append_decl(_1ce50a46e_decl);
		}
	_iter_next_4539458000:;
	}
	_iter_end_4539458000:;
}



inline void _1ce50a46e_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=jule::Slice<jule::Ref<_1b61ddc92_Impl>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_ast->_field_impls.len())));
	for (auto _1ce50a46e_decl: (*this)._field_ast->_field_impls) {
		{
			(*this)._field_table->_field_impls=jule::append((*this)._field_table->_field_impls,jule::Slice<jule::Ref<_1b61ddc92_Impl>>({_1ce50a46e_build_impl(_1ce50a46e_decl)}));
		}
	_iter_next_4539475216:;
	}
	_iter_end_4539475216:;
}



inline void _1ce50a46e_SymbolBuilder::_method_push_directive_pass(jule::Ref<_1ce385d22_Directive>& _68343_d) {
	_1ce50a46e_Pass _68417_pass = _1ce50a46e_Pass(_68343_d->_field_token,jule::Str());
	for (auto _1ce50a46e_arg: _68343_d->_field_args) {
		{
			if (_1ce50a46e_arg != jule::Str("", 0)) {
				_68417_pass._field_text+=_1ce50a46e_arg + jule::Str(" ", 1);
			}
		}
	_iter_next_4539481056:;
	}
	_iter_end_4539481056:;
	_68417_pass._field_text=_68417_pass._field_text.trim(jule::Str(" \n\r\t\v", 5));
	(*this)._field_table->_field_passes=jule::append((*this)._field_table->_field_passes,jule::Slice<_1ce50a46e_Pass>({_68417_pass}));
}



inline void _1ce50a46e_SymbolBuilder::_method_append_top_directives(void) {
	for (auto _1ce50a46e_d: (*this)._field_ast->_field_top_directives) {
		{
			{
				auto _match_expr{ _1ce50a46e_d->_field_tag };
				if (!((jule::Str("pass", 4)) == _match_expr)) { goto _case_end_4539489280; }
				_case_begin_4539489280:;
				{
					(*this)._method_push_directive_pass(_1ce50a46e_d);
				}
				goto _match_end_4539489200;
				_case_end_4539489280:;
				_match_end_4539489200:;
			}
		}
	_iter_next_4539485728:;
	}
	_iter_end_4539485728:;
}



inline void _1ce50a46e_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_1b66b3a3b_SymbolTable>(new( std::nothrow ) _1b66b3a3b_SymbolTable(this->self->_field_ast->_field_file,jule::Slice<_1ce50a46e_Pass>(),jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>>(),jule::Slice<jule::Ref<_1b637edab_Var>>(),jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>(),jule::Slice<jule::Ref<_1ce385eed_Struct>>(),jule::Slice<jule::Ref<_1b6069348_Fn>>(),jule::Slice<jule::Ref<_1b61d7d79_Trait>>(),jule::Slice<jule::Ref<_1b61d7c58_Enum>>(),jule::Slice<jule::Ref<_1b61ddc92_Impl>>()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce50a46e_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61e873b_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61e873b_Match::_method_is_generic_type_match(void) {
	return ((*this)._field_type_match && jule::real((*this)._field_expr)) && (*this)._field_expr->_field_kind->_field_generic;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61e873b_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_Recover &_Src) {
	_Stream << "Recover{";
	_Stream << "handler:" << _Src._field_handler << ", ";
	_Stream << "handler_expr:" << _Src._field_handler_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "scope_owner:" << _Src._field_scope_owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1b61e873b_ScopeChecker::_method_find_package(jule::Str _38435_ident) {
	return (*this)._field_s->_method_find_package(_38435_ident);
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1b61e873b_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)> _39437_selector) {
	return (*this)._field_s->_method_select_package(_39437_selector);
}



inline jule::Ref<_1b637edab_Var> _1b61e873b_ScopeChecker::_method_find_var(jule::Str _40531_ident,jule::Bool _40543_cpp_linked) {
	
	jule::Ref<_1b637edab_Var> _40817_v = (*this)._field_table->_method___find_var(_40531_ident,_40543_cpp_linked,true);
	if (jule::real(_40817_v)) {
		return _40817_v;
	}
	jule::Ref<_1b61e873b_ScopeChecker> _41317_parent = (*this)._field_parent;
	while (jule::real(_41317_parent)) {
		{
			_40817_v=_41317_parent->_field_table->_method___find_var(_40531_ident,_40543_cpp_linked,true);
			if (jule::real(_40817_v)) {
				return _40817_v;
			}
			_41317_parent=_41317_parent->_field_parent;
		}
	_iter_next_4539551040:;
	}
	_iter_end_4539551040:;
	return (*this)._field_s->_method_find_var(_40531_ident,_40543_cpp_linked);
}



inline jule::Ref<_1b6703d45_TypeAlias> _1b61e873b_ScopeChecker::_method_find_type_alias(jule::Str _43238_ident,jule::Bool _43250_cpp_linked) {
	
	jule::Ref<_1b6703d45_TypeAlias> _43517_ta = (*this)._field_table->_method___find_type_alias(_43238_ident,_43250_cpp_linked,true);
	if (jule::real(_43517_ta)) {
		return _43517_ta;
	}
	jule::Ref<_1b61e873b_ScopeChecker> _44017_parent = (*this)._field_parent;
	while (jule::real(_44017_parent)) {
		{
			_43517_ta=_44017_parent->_field_table->_method___find_type_alias(_43238_ident,_43250_cpp_linked,true);
			if (jule::real(_43517_ta)) {
				return _43517_ta;
			}
			_44017_parent=_44017_parent->_field_parent;
		}
	_iter_next_4539563392:;
	}
	_iter_end_4539563392:;
	return (*this)._field_s->_method_find_type_alias(_43238_ident,_43250_cpp_linked);
}



inline jule::Ref<_1ce385eed_Struct> _1b61e873b_ScopeChecker::_method_find_struct(jule::Str _45734_ident,jule::Bool _45746_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_45734_ident,_45746_cpp_linked);
}



inline jule::Ref<_1b6069348_Fn> _1b61e873b_ScopeChecker::_method_find_fn(jule::Str _46630_ident,jule::Bool _46642_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_46630_ident,_46642_cpp_linked);
}



inline jule::Ref<_1b61d7d79_Trait> _1b61e873b_ScopeChecker::_method_find_trait(jule::Str _47533_ident) {
	return (*this)._field_s->_method_find_trait(_47533_ident);
}



inline jule::Ref<_1b61d7c58_Enum> _1b61e873b_ScopeChecker::_method_find_enum(jule::Str _48432_ident) {
	return (*this)._field_s->_method_find_enum(_48432_ident);
}



inline jule::Bool _1b61e873b_ScopeChecker::_method_is_unsafe(void) {
	jule::Ref<_1b61e873b_ScopeChecker> _49217_scope = this->self;
	_julec_label_iter:;
	if (_49217_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (jule::real(_49217_scope->_field_parent)) {
		_49217_scope=_49217_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1b61e873b_ScopeChecker::_method_is_root(void) {
	return (!(jule::real((*this)._field_parent))) || jule::real((*this)._field_owner);
}



inline jule::Ref<_1b61e873b_ScopeChecker> _1b61e873b_ScopeChecker::_method_get_root(void) {
	jule::Ref<_1b61e873b_ScopeChecker> _51417_root = this->self;
	while (jule::real(_51417_root->_field_parent) && (!(jule::real(_51417_root->_field_owner)))) {
		{
			_51417_root=_51417_root->_field_parent;
		}
	_iter_next_4539596896:;
	}
	_iter_end_4539596896:;
	return _51417_root;
}



inline jule::Ref<_1b61e873b_Label> _1b61e873b_ScopeChecker::_method_find_label(jule::Str _52429_ident) {
	for (auto _1b61e873b_st: (*this)._field_scope->_field_stmts) {
		{
			{
				auto _match_expr{ _1b61e873b_st };
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Label>>())) { goto _case_end_4539602896; }
				_case_begin_4539602896:;
				{
					jule::Ref<_1b61e873b_Label> _52825_label = _1b61e873b_st.operator jule::Ref<_1b61e873b_Label>();
					if (_52825_label->_field_ident == _52429_ident) {
						return _52825_label;
					}
				}
				goto _match_end_4539603312;
				_case_end_4539602896:;
				_match_end_4539603312:;
			}
		}
	_iter_next_4539601648:;
	}
	_iter_end_4539601648:;
	return jule::new_ref<_1b61e873b_Label>();
}



inline jule::Ref<_1b61e873b_ScopeLabel> _1b61e873b_ScopeChecker::_method_find_label_scope(jule::Str _54036_ident) {
	jule::Ref<_1b61e873b_ScopeLabel> _54117_label = this->self->_method_find_label_all(_54036_ident);
	if (jule::real(_54117_label) && ((_54117_label->_field_scope).alloc == (this->self).alloc)) {
		return _54117_label;
	}
	return jule::new_ref<_1b61e873b_ScopeLabel>();
}



inline jule::Ref<_1b61e873b_ScopeLabel> _1b61e873b_ScopeChecker::_method_find_label_all(jule::Str _55233_ident) {
	for (auto _1b61e873b_lbl: (*this)._field_labels.get()) {
		{
			if (_1b61e873b_lbl->_field_label->_field_ident == _55233_ident) {
				return _1b61e873b_lbl;
			}
		}
	_iter_next_4539611664:;
	}
	_iter_end_4539611664:;
	return jule::new_ref<_1b61e873b_ScopeLabel>();
}



inline jule::Bool _1b61e873b_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _56438_itself,jule::Str _56455_ident) {
	jule::Ref<_1b637edab_Var> _56513_v = (*this)._method_find_var(_56455_ident,false);
	if (jule::real(_56513_v) && (((jule::Uintptr)((_56513_v).alloc)) != _56438_itself)) {
		if ((!(jule::real(_56513_v->_field_scope)))) {
			return false;
		}
		return ((_56513_v->_field_scope).alloc == ((*this)._field_scope).alloc) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	jule::Ref<_1b6703d45_TypeAlias> _57313_ta = (*this)._method_find_type_alias(_56455_ident,false);
	if (jule::real(_57313_ta) && (((jule::Uintptr)((_57313_ta).alloc)) != _56438_itself)) {
		if ((!(jule::real(_57313_ta->_field_scope)))) {
			return false;
		}
		return ((_57313_ta->_field_scope).alloc == ((*this)._field_tree).alloc) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	return false;
}



inline void _1b61e873b_ScopeChecker::_method_check_var_decl(jule::Ref<_1ce385d22_VarDecl> _58438_decl) {
	jule::Ref<_1b637edab_Var> _58517_v = _1ce50a46e_build_var(_58438_decl);
	_58517_v->_field_scope=this->self->_field_scope;
	__JULE_DEFER({
		this->self->_field_table->_field_vars=jule::append(this->self->_field_table->_field_vars,jule::Slice<jule::Ref<_1b637edab_Var>>({_58517_v}));
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_58517_v)}));
	});
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_58517_v).alloc)),_58517_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_58517_v->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_58517_v->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_var_decl(_58517_v,this->self);
	if ((!(_58517_v->_method_is_type_inferred())) && ((!(jule::real(_58517_v->_field_kind))) || (!(jule::real(_58517_v->_field_kind->_field_kind))))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_58517_v,this->self);
}



inline void _1b61e873b_ScopeChecker::_method_check_type_alias_decl(jule::Ref<_1ce385d22_TypeAliasDecl> _60645_decl) {
	jule::Ref<_1b6703d45_TypeAlias> _60717_ta = _1ce50a46e_build_type_alias(_60645_decl);
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_60717_ta).alloc)),_60717_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_60717_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_60717_ta->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_type_alias_decl(_60717_ta,this->self);
	this->self->_field_table->_field_type_aliases=jule::append(this->self->_field_table->_field_type_aliases,jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>({_60717_ta}));
}



inline jule::Ref<_1b61e873b_Scope> _1b61e873b_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_1b61e873b_Scope>(new( std::nothrow ) _1b61e873b_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _1b61e873b_ScopeChecker::_method_check_child_ssc(jule::Ref<_1ce385d22_ScopeTree> _62339_tree,jule::Ref<_1b61e873b_Scope> _62361_s,jule::Ref<_1b61e873b_ScopeChecker> _62376_ssc) {
	_62376_ssc->_field_parent=this->self;
	_62376_ssc->_method_check(_62339_tree,_62361_s);
}



inline jule::Ref<_1b61e873b_Scope> _1b61e873b_ScopeChecker::_method_check_child_sc(jule::Ref<_1ce385d22_ScopeTree> _62838_tree,jule::Ref<_1b61e873b_ScopeChecker> _62860_ssc) {
	jule::Ref<_1b61e873b_Scope> _62917_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_62838_tree,_62917_s,_62860_ssc);
	return _62917_s;
}



inline jule::Ref<_1b61e873b_Scope> _1b61e873b_ScopeChecker::_method_check_child(jule::Ref<_1ce385d22_ScopeTree> _63435_tree) {
	jule::Ref<_1b61e873b_ScopeChecker> _63517_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_63435_tree,_63517_ssc);
}



inline void _1b61e873b_ScopeChecker::_method_check_anon_scope(jule::Ref<_1ce385d22_ScopeTree> _63940_tree) {
	jule::Ref<_1b61e873b_Scope> _64017_s = this->self->_method_check_child(_63940_tree);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_64017_s)}));
}



inline jule::Bool _1b61e873b_ScopeChecker::_method_try_call_recover(jule::Ref<_1b66db129_Data> _64440_d) {
	{
		auto _match_expr{ _64440_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Recover>>())) { goto _case_end_4539682592; }
		goto _match_end_4539682224;
		_case_end_4539682592:;
		_case_begin_4539681680:;
		{
			return false;
		}
		goto _match_end_4539682224;
		_case_end_4539681680:;
		_match_end_4539682224:;
	}
	jule::Ref<_1b61e873b_Recover> _65017_rec = _64440_d->_field_model.operator jule::Ref<_1b61e873b_Recover>();
	_65017_rec->_field_handler=_64440_d->_field_kind->_method_fnc();
	_65017_rec->_field_scope=jule::new_struct<_1b61e873b_Scope>(new( std::nothrow ) _1b61e873b_Scope());
	_65017_rec->_field_scope_owner=this->self->_method_get_root()->_field_owner;
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_65017_rec)}));
	this->self->_field_tree->_field_stmts=this->self->_field_tree->_field_stmts.slice(static_cast<jule::Int>(this->self->_field_i + 1LL));
	this->self->_field_scope=_65017_rec->_field_scope;
	this->self->_method_check_tree();
	return true;
}



inline void _1b61e873b_ScopeChecker::_method_check_expr(jule::Ref<_1ce385d22_Expr> _66334_expr) {
	jule::Ref<_1b66db129_Data> _66417_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_66334_expr);
	if ((!(jule::real(_66417_d)))) {
		return;
	}
	if (_66334_expr->_method_is_fn_call()) {
		jule::Bool _67017_ok = this->self->_method_try_call_recover(_66417_d);
		if (_67017_ok) {
			return;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_66417_d)}));
}



inline jule::Ref<_1b61e873b_If> _1b61e873b_ScopeChecker::_method_check_if(jule::Ref<_1ce385d22_If> _67932_i) {
	jule::Ref<_1b61e873b_Scope> _68017_s = this->self->_method_check_child(_67932_i->_field_scope);
	jule::Ref<_1b66db129_Data> _68217_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_67932_i->_field_expr);
	if ((!(jule::real(_68217_d)))) {
		return jule::new_ref<_1b61e873b_If>();
	}
	jule::Ref<_1b6703d45_Prim> _68713_prim = _68217_d->_field_kind->_method_prim();
	if ((!(jule::real(_68713_prim)))) {
		this->self->_field_s->_method_push_err(_67932_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61e873b_If>();
	}
	if ((!(_68713_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_67932_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61e873b_If>();
	}
	return jule::new_struct<_1b61e873b_If>(new( std::nothrow ) _1b61e873b_If(_68217_d->_field_model,_68017_s));
}



inline jule::Ref<_1b61e873b_Else> _1b61e873b_ScopeChecker::_method_check_else(jule::Ref<_1ce385d22_Else> _70434_e) {
	jule::Ref<_1b61e873b_Scope> _70517_s = this->self->_method_check_child(_70434_e->_field_scope);
	return jule::new_struct<_1b61e873b_Else>(new( std::nothrow ) _1b61e873b_Else(_70517_s));
}



inline void _1b61e873b_ScopeChecker::_method_check_conditional(jule::Ref<_1ce385d22_Conditional> _71141_conditional) {
	jule::Ref<_1b61e873b_Conditional> _71217_c = jule::new_struct<_1b61e873b_Conditional>(new( std::nothrow ) _1b61e873b_Conditional());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_71217_c)}));
	_71217_c->_field_elifs=jule::Slice<jule::Ref<_1b61e873b_If>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_71141_conditional->_field_tail.len() + 1LL)));
	_71217_c->_field_elifs[0LL]=this->self->_method_check_if(_71141_conditional->_field_head);
	{
		jule::Int _1b61e873b_i = 0;
		for (auto _1b61e873b_elif: _71141_conditional->_field_tail) {
			{
				_71217_c->_field_elifs[static_cast<jule::Int>(_1b61e873b_i + 1LL)]=this->self->_method_check_if(_1b61e873b_elif);
			}
		_iter_next_4539727776:;
		_1b61e873b_i++;
		}
		_iter_end_4539727776:;
	}
	if (jule::real(_71141_conditional->_field_default)) {
		_71217_c->_field_default=this->self->_method_check_else(_71141_conditional->_field_default);
	}
}



inline jule::Ref<_1b61e873b_Scope> _1b61e873b_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _72739_it,jule::Ref<_1ce385d22_ScopeTree> _72756_tree,jule::Ref<_1b61e873b_ScopeChecker> _72778_ssc) {
	_72778_ssc->_field_it=_72739_it;
	return this->self->_method_check_child_sc(_72756_tree,_72778_ssc);
}



inline jule::Ref<_1b61e873b_Scope> _1b61e873b_ScopeChecker::_method_check_iter_scope(jule::Uintptr _73236_it,jule::Ref<_1ce385d22_ScopeTree> _73253_tree) {
	jule::Ref<_1b61e873b_ScopeChecker> _73317_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_73236_it,_73253_tree,_73317_ssc);
}



inline void _1b61e873b_ScopeChecker::_method_check_inf_iter(jule::Ref<_1ce385d22_Iter> _73738_it) {
	jule::Ref<_1b61e873b_InfIter> _73817_kind = jule::new_struct<_1b61e873b_InfIter>(new( std::nothrow ) _1b61e873b_InfIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_73817_kind)}));
	_73817_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_73817_kind).alloc)),_73738_it->_field_scope);
}



inline void _1b61e873b_ScopeChecker::_method_check_while_iter(jule::Ref<_1ce385d22_Iter> _74540_it) {
	jule::Ref<_1ce385d22_WhileKind> _74617_wh = _74540_it->_field_kind.operator jule::Ref<_1ce385d22_WhileKind>();
	if ((!(jule::real(_74617_wh->_field_expr))) && (_74617_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_74540_it);
		return;
	}
	jule::Ref<_1b61e873b_WhileIter> _75217_kind = jule::new_struct<_1b61e873b_WhileIter>(new( std::nothrow ) _1b61e873b_WhileIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_75217_kind)}));
	_75217_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_75217_kind).alloc)),_74540_it->_field_scope);
	if (jule::real(_74617_wh->_field_expr)) {
		jule::Ref<_1b66db129_Data> _75921_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_74617_wh->_field_expr);
		if ((!(jule::real(_75921_d)))) {
			return;
		}
		jule::Ref<_1b6703d45_Prim> _76417_prim = _75921_d->_field_kind->_method_prim();
		if ((!(jule::real(_76417_prim)))) {
			this->self->_field_s->_method_push_err(_74540_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		if ((!(_76417_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_74540_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		_75217_kind->_field_expr=_75921_d->_field_model;
	}
	if (_74617_wh->_method_is_while_next()) {
		if ((!(_1b61e873b_is_valid_ast_st_for_next_st(_74617_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_74617_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			return;
		}
		jule::I64 _78417_n = this->self->_field_scope->_field_stmts.len();
		this->self->_method_check_node(_74617_wh->_field_next);
		if (_78417_n < this->self->_field_scope->_field_stmts.len()) {
			jule::Any _78725_st = this->self->_field_scope->_field_stmts[static_cast<jule::Int>(_78417_n)];
			this->self->_field_scope->_field_stmts=this->self->_field_scope->_field_stmts.slice(0LL,static_cast<jule::Int>(_78417_n));
			if ((!(_1b61e873b_is_valid_st_for_next_st(_78725_st)))) {
				this->self->_field_s->_method_push_err(_74617_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			}
			_75217_kind->_field_next=_78725_st;
		}
	}
}



inline void _1b61e873b_ScopeChecker::_method_check_range_iter(jule::Ref<_1ce385d22_Iter> _79840_it) {
	jule::Ref<_1ce385d22_RangeKind> _79917_rang = _79840_it->_field_kind.operator jule::Ref<_1ce385d22_RangeKind>();
	jule::Ref<_1b66db129_Data> _80117_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_79917_rang->_field_expr);
	if ((!(jule::real(_80117_d)))) {
		return;
	}
	jule::Ref<_1b61e873b_RangeIter> _80617_kind = jule::new_struct<_1b61e873b_RangeIter>(new( std::nothrow ) _1b61e873b_RangeIter(_80117_d,jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1b637edab_Var>(),jule::Ref<_1b637edab_Var>()));
	_1b65a085c_RangeChecker _81017_rc = _1b65a085c_RangeChecker(this->self,_79917_rang,_80617_kind,_80117_d);
	jule::Bool _81613_ok = _81017_rc._method_check();
	if ((!(_81613_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_80617_kind)}));
	jule::Ref<_1b61e873b_ScopeChecker> _82317_ssc = this->self->_method_new_child_checker();
	if (jule::real(_80617_kind->_field_key_a)) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_80617_kind->_field_key_a->_field_ident)) {
			this->self->_field_s->_method_push_err(_80617_kind->_field_key_a->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_80617_kind->_field_key_a->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
		}
		_82317_ssc->_field_table->_field_vars=jule::append(_82317_ssc->_field_table->_field_vars,jule::Slice<jule::Ref<_1b637edab_Var>>({_80617_kind->_field_key_a}));
	}
	if (jule::real(_80617_kind->_field_key_b)) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_80617_kind->_field_key_b->_field_ident)) {
			this->self->_field_s->_method_push_err(_80617_kind->_field_key_b->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_80617_kind->_field_key_b->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
		}
		_82317_ssc->_field_table->_field_vars=jule::append(_82317_ssc->_field_table->_field_vars,jule::Slice<jule::Ref<_1b637edab_Var>>({_80617_kind->_field_key_b}));
	}
	_80617_kind->_field_scope=this->self->_method_check_iter_scope_sc(((jule::Uintptr)((_80617_kind).alloc)),_79840_it->_field_scope,_82317_ssc);
}



inline void _1b61e873b_ScopeChecker::_method_check_iter(jule::Ref<_1ce385d22_Iter> _84434_it) {
	if (_84434_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_84434_it);
		return;
	}
	{
		auto _match_expr{ _84434_it->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_WhileKind>>())) { goto _case_end_4539820640; }
		_case_begin_4539820640:;
		{
			this->self->_method_check_while_iter(_84434_it);
		}
		goto _match_end_4539817728;
		_case_end_4539820640:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_RangeKind>>())) { goto _case_end_4539820128; }
		_case_begin_4539820128:;
		{
			this->self->_method_check_range_iter(_84434_it);
		}
		goto _match_end_4539817728;
		_case_end_4539820128:;
		_case_begin_4539817968:;
		{
			jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
		}
		goto _match_end_4539817728;
		_case_end_4539817968:;
		_match_end_4539817728:;
	}
}



inline jule::Bool _1b61e873b_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _85742_it) {
	jule::Ref<_1b61e873b_ScopeChecker> _85817_scope = this->self;
	_julec_label_iter:;
	if (_85817_scope->_field_it == _85742_it) {
		return true;
	}
	if (jule::real(_85817_scope->_field_parent)) {
		_85817_scope=_85817_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1b61e873b_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _87343_ptr) {
	jule::Ref<_1b61e873b_ScopeChecker> _87417_scope = this->self;
	_julec_label_iter:;
	if (_87417_scope->_field_it == _87343_ptr) {
		return true;
	}
	if (_87417_scope->_field_cse != 0LL) {
		jule::Uintptr _88217_mtch = ((jule::Uintptr)((((_1b61e873b_Case*)(_87417_scope->_field_cse))->_field_owner).alloc));
		if (_88217_mtch == _87343_ptr) {
			return true;
		}
	}
	if (jule::real(_87417_scope->_field_parent)) {
		_87417_scope=_87417_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ref<_1b61e873b_ContSt> _1b61e873b_ScopeChecker::_method_check_cont_valid_scope(jule::Ref<_1ce385d22_ContSt> _89641_c) {
	if (_89641_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_1b61e873b_ContSt>(new( std::nothrow ) _1b61e873b_ContSt());
	}
	_1b61e873b_ScopeChecker _90117_scope = (*this);
	_julec_label_iter:;
	{
		if (!((((_90117_scope._field_it == 0LL) && jule::real(_90117_scope._field_parent)) && (!(jule::real(_90117_scope._field_owner)))))) { goto _case_end_4539844512; }
		_case_begin_4539844512:;
		{
			_90117_scope=_90117_scope._field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4539844352;
		_case_end_4539844512:;
		if (!((_90117_scope._field_it != 0LL))) { goto _case_end_4539844624; }
		_case_begin_4539844624:;
		{
			return jule::new_struct<_1b61e873b_ContSt>(new( std::nothrow ) _1b61e873b_ContSt(_90117_scope._field_it));
		}
		goto _match_end_4539844352;
		_case_end_4539844624:;
		_match_end_4539844352:;
	}
	(*this)._field_s->_method_push_err(_89641_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>({}));
	return jule::new_ref<_1b61e873b_ContSt>();
}



inline void _1b61e873b_ScopeChecker::_method_check_cont(jule::Ref<_1ce385d22_ContSt> _91630_c) {
	jule::Ref<_1b61e873b_ContSt> _91717_cont = this->self->_method_check_cont_valid_scope(_91630_c);
	if ((!(jule::real(_91717_cont)))) {
		return;
	}
	if (_91630_c->_field_label._field_id != 0LLU) {
		jule::Ref<_1b61e873b_ScopeLabel> _92321_label = _1b61e873b_find_label_parent(_91630_c->_field_label._field_kind,this->self->_field_parent);
		if ((!(jule::real(_92321_label)))) {
			this->self->_field_s->_method_push_err(_91630_c->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_91630_c->_field_label._field_kind)}));
			return;
		}
		_92321_label->_field_used=true;
		if ((_92321_label->_field_pos + 1LL) >= _92321_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_91630_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _93617_i = _92321_label->_field_pos + 1LL;
		if (_93617_i >= _92321_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_91630_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		} else {
			jule::Any _94025_st = _92321_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_93617_i)];
			{
				auto _match_expr{ _94025_st };
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_InfIter>>())) { goto _case_end_4539872560; }
				_case_begin_4539872560:;
				{
					_91717_cont->_field_it=((jule::Uintptr)((_94025_st.operator jule::Ref<_1b61e873b_InfIter>()).alloc));
				}
				goto _match_end_4539870192;
				_case_end_4539872560:;
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_RangeIter>>())) { goto _case_end_4539870576; }
				_case_begin_4539870576:;
				{
					_91717_cont->_field_it=((jule::Uintptr)((_94025_st.operator jule::Ref<_1b61e873b_RangeIter>()).alloc));
				}
				goto _match_end_4539870192;
				_case_end_4539870576:;
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_WhileIter>>())) { goto _case_end_4539870672; }
				_case_begin_4539870672:;
				{
					_91717_cont->_field_it=((jule::Uintptr)((_94025_st.operator jule::Ref<_1b61e873b_WhileIter>()).alloc));
				}
				goto _match_end_4539870192;
				_case_end_4539870672:;
				_case_begin_4539866848:;
				{
					this->self->_field_s->_method_push_err(_91630_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4539870192;
				_case_end_4539866848:;
				_match_end_4539870192:;
			}
		}
	}
	if (_91717_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_91717_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_91630_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_91717_cont)}));
}



inline void _1b61e873b_ScopeChecker::_method_check_label(jule::Ref<_1ce385d22_LabelSt> _95935_l) {
	if (jule::real(this->self->_method_find_label(_95935_l->_field_ident))) {
		this->self->_field_s->_method_push_err(_95935_l->_field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_95935_l->_field_ident)}));
		return;
	}
	jule::Ref<_1b61e873b_Label> _96517_label = jule::new_struct<_1b61e873b_Label>(new( std::nothrow ) _1b61e873b_Label(_95935_l->_field_ident));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_96517_label)}));
	this->self->_field_labels=jule::append(this->self->_field_labels.get(),jule::Slice<jule::Ref<_1b61e873b_ScopeLabel>>({jule::new_struct<_1b61e873b_ScopeLabel>(new( std::nothrow ) _1b61e873b_ScopeLabel(_95935_l->_field_token,_96517_label,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL),this->self,jule::Bool()))}));
}



inline void _1b61e873b_ScopeChecker::_method_push_goto(jule::Ref<_1ce385d22_GotoSt> _97833_gt) {
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1b61e873b_GotoSt>(new( std::nothrow ) _1b61e873b_GotoSt(_97833_gt->_field_label._field_kind)))}));
	this->self->_field_gotos=jule::append(this->self->_field_gotos.get(),jule::Slice<jule::Ref<_1b61e873b_ScopeGoto>>({jule::new_struct<_1b61e873b_ScopeGoto>(new( std::nothrow ) _1b61e873b_ScopeGoto(_97833_gt,this->self,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL)))}));
}



inline void _1b61e873b_ScopeChecker::_method_check_postfix(jule::Ref<_1ce385d22_AssignSt> _99037_a) {
	if (_99037_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_99037_a->_field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1ce385d22_Expr> _99617_expr = _99037_a->_field_left[0LL]->_field_expr;
	jule::Ref<_1b66db129_Data> _99717_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_99617_expr);
	if ((!(jule::real(_99717_d)))) {
		return;
	}
	_1b61e873b_check_assign(this->self->_field_s,_99717_d,jule::new_ref<_1b66db129_Data>(),_99037_a->_field_setter);
	if (jule::real(_99717_d->_field_kind->_method_ptr())) {
		jule::Ref<_1b6703d45_Ptr> _100521_ptr = _99717_d->_field_kind->_method_ptr();
		if (_100521_ptr->_method_is_unsafe()) {
			this->self->_field_s->_method_push_err(_99037_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_99037_a->_field_setter._field_kind),jule::Any(_99717_d->_field_kind->_method_to_str())}));
			return;
		}
	} else {
		jule::Ref<_1b6703d45_TypeKind> _101121_check_t = _99717_d->_field_kind;
		if (jule::real(_99717_d->_field_kind->_method_ref())) {
			_101121_check_t=_99717_d->_field_kind->_method_ref()->_field_elem;
		}
		if ((!(jule::real(_101121_check_t->_method_prim()))) || (!(_1b6e2b4c3_is_num(_101121_check_t->_method_prim()->_field_kind)))) {
			this->self->_field_s->_method_push_err(_99037_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_99037_a->_field_setter._field_kind),jule::Any(_99717_d->_field_kind->_method_to_str())}));
			return;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1b61e873b_Postfix>(new( std::nothrow ) _1b61e873b_Postfix(_99717_d->_field_model,_99037_a->_field_setter._field_kind)))}));
}



inline jule::Bool _1b61e873b_ScopeChecker::_method_is_new_assign_ident(jule::Str _102838_ident) {
	if (_1ce35e3a0_is_ignore_ident(_102838_ident) || (_102838_ident == jule::Str("", 0))) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_102838_ident,false) == nullptr;
}



inline void _1b61e873b_ScopeChecker::_method_check_single_assign(jule::Ref<_1ce385d22_AssignSt> _103643_a) {
	jule::Ref<_1b66db129_Data> _103717_l = jule::new_ref<_1b66db129_Data>();
	if ((!(_1ce35e3a0_is_ignore_ident(_103643_a->_field_left[0LL]->_field_ident)))) {
		jule::Ref<_1ce385d22_Expr> _104021_expr = _103643_a->_field_left[0LL]->_field_expr;
		_103717_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_104021_expr);
		if ((!(jule::real(_103717_l)))) {
			return;
		}
	}
	jule::Ref<_1b66db129_Eval> _104717_eval = ((jule::real(_103717_l)) ? (this->self->_field_s->_method_evalp(this->self,_103717_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
	jule::Ref<_1b66db129_Data> _105217_r = _104717_eval->_method_eval_expr(_103643_a->_field_right);
	if ((!(jule::real(_105217_r)))) {
		return;
	}
	if ((!(jule::real(_103717_l)))) {
		if (_105217_r->_field_kind->_method_void()) {
			this->self->_field_s->_method_push_err(_103643_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_105217_r)}));
		return;
	}
	if ((!(_1b61e873b_check_assign(this->self->_field_s,_103717_l,_105217_r,_103643_a->_field_setter)))) {
		return;
	}
	if (jule::real(_105217_r->_field_kind->_method_tup())) {
		this->self->_field_s->_method_push_err(_103643_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1b61e873b_Assign>(new( std::nothrow ) _1b61e873b_Assign(_103717_l->_field_model,_105217_r->_field_model,_103643_a->_field_setter._field_kind)))}));
	if (_103643_a->_field_setter._field_kind != jule::Str("=", 1)) {
		_103643_a->_field_setter._field_kind=_103643_a->_field_setter._field_kind.slice(0LL,static_cast<jule::Int>(_103643_a->_field_setter._field_kind.len() - 1LL));
		_1b66db129_BinopSolver _108421_solver = _1b66db129_BinopSolver(jule::new_struct_ref<_1b66db129_Eval>(new( std::nothrow ) _1b66db129_Eval(this->self->_field_s,this->self,jule::Ref<_1b6703d45_TypeKind>(),this->self->_method_is_unsafe(),jule::Ref<_1b637edab_Var>())),jule::Ref<_1b66db129_Data>(),jule::Ref<_1b66db129_Data>(),_103643_a->_field_setter);
		_105217_r=_108421_solver._method_solve_explicit(_103717_l,_105217_r);
		if ((!(jule::real(_105217_r)))) {
			return;
		}
		_103643_a->_field_setter._field_kind+=jule::Str("=", 1);
		return;
	}
	_1b65a085c_AssignTypeChecker _110117_checker = _1b65a085c_AssignTypeChecker(this->self->_field_s,_103717_l->_field_kind,_105217_r,_103643_a->_field_setter,true);
	_110117_checker._method_check();
}



inline void _1b61e873b_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ref<_1b61e873b_MultiAssign> _111157_st,jule::Ref<_1ce385d22_AssignSt> _111213_a,jule::Ref<_1ce385d22_AssignLeft> _111231_lexpr,jule::Ref<_1b66db129_Data> _111255_l,jule::Ref<_1b66db129_Data> _111269_r) {
	if (_1ce35e3a0_is_ignore_ident(_111231_lexpr->_field_ident)) {
		if (_111269_r->_field_kind->_method_void()) {
			(*this)._field_s->_method_push_err(_111213_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		_111157_st->_field_l=jule::append(_111157_st->_field_l,jule::Slice<jule::Any>({jule::Any(nullptr)}));
		return;
	}
	if (_111213_a->_field_declarative && (*this)._method_is_new_assign_ident(_111231_lexpr->_field_ident)) {
		jule::Ref<_1b637edab_Var> _112421_v = jule::new_struct<_1b637edab_Var>(new( std::nothrow ) _1b637edab_Var((*this)._field_scope,_111231_lexpr->_field_token,_111231_lexpr->_field_ident,jule::Bool(),jule::Bool(),_111231_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_111231_lexpr->_field_reference,jule::Str(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::new_struct<_1b66db129_Value>(new( std::nothrow ) _1b66db129_Value(_111213_a->_field_right,_111269_r)),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Slice<jule::Ref<_1ce385d22_Directive>>(),jule::Slice<jule::Ref<_1b637edab_Var>>()));
		(*this)._field_s->_method_check_var(_112421_v);
		_111157_st->_field_l=jule::append(_111157_st->_field_l,jule::Slice<jule::Any>({jule::Any(_112421_v)}));
		(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ref<_1b637edab_Var>>({_112421_v}));
		(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_112421_v)}));
		return;
	}
	if (_111231_lexpr->_field_mutable || _111231_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_111231_lexpr->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_111231_lexpr->_field_ident)}));
		(*this)._field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if ((!(_1b61e873b_check_assign((*this)._field_s,_111255_l,_111269_r,_111213_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_111255_l->_field_mutable,false,_111255_l->_field_kind,_111269_r,_111213_a->_field_setter);
	_1b65a085c_AssignTypeChecker _115917_checker = _1b65a085c_AssignTypeChecker((*this)._field_s,_111255_l->_field_kind,_111269_r,_111213_a->_field_setter,true);
	_115917_checker._method_check();
	_111157_st->_field_l=jule::append(_111157_st->_field_l,jule::Slice<jule::Any>({_111255_l->_field_model}));
}



inline void _1b61e873b_ScopeChecker::_method_check_ret_multi_assign(jule::Ref<_1ce385d22_AssignSt> _117146_a) {
	jule::Ref<_1b66db129_Data> _117217_rd = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_117146_a->_field_right);
	if ((!(jule::real(_117217_rd)))) {
		return;
	}
	jule::Slice<jule::Ref<_1b66db129_Data>> _117717_r = _1b61e873b_get_datas_from_tuple_data(_117217_rd);
	{
		if (!((_117146_a->_field_left.len() > _117717_r.len()))) { goto _case_end_4540021296; }
		_case_begin_4540021296:;
		{
			this->self->_field_s->_method_push_err(_117146_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4540021136;
		_case_end_4540021296:;
		if (!((_117146_a->_field_left.len() < _117717_r.len()))) { goto _case_end_4540021472; }
		_case_begin_4540021472:;
		{
			this->self->_field_s->_method_push_err(_117146_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4540021136;
		_case_end_4540021472:;
		_match_end_4540021136:;
	}
	jule::Ref<_1b61e873b_MultiAssign> _118917_st = jule::new_struct<_1b61e873b_MultiAssign>(new( std::nothrow ) _1b61e873b_MultiAssign(jule::Slice<jule::Any>(),_117217_rd->_field_model));
	if ((!(jule::real(_117217_rd->_field_kind->_method_tup())))) {
		_118917_st->_field_r=jule::Any(jule::new_struct<_1b61decc6_TupleExprModel>(new( std::nothrow ) _1b61decc6_TupleExprModel(_117717_r)));
	}
	{
		jule::Int _1b61e873b_i = 0;
		for (auto &_: _117146_a->_field_left) {
			{
				jule::Ref<_1ce385d22_AssignLeft> _119821_lexpr = _117146_a->_field_left[static_cast<jule::Int>(_1b61e873b_i)];
				jule::Ref<_1b66db129_Data> _119921_l = jule::new_ref<_1b66db129_Data>();
				if ((!(_1ce35e3a0_is_ignore_ident(_119821_lexpr->_field_ident))) && ((!(_117146_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_119821_lexpr->_field_ident))))) {
					_119921_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_119821_lexpr->_field_expr);
					if ((!(jule::real(_119921_l)))) {
						goto _iter_next_4540030384;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_118917_st,_117146_a,_119821_lexpr,_119921_l,_117717_r[static_cast<jule::Int>(_1b61e873b_i)]);
			}
		_iter_next_4540030384:;
		_1b61e873b_i++;
		}
		_iter_end_4540030384:;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_118917_st)}));
}



inline void _1b61e873b_ScopeChecker::_method_check_multi_assign(jule::Ref<_1ce385d22_AssignSt> _121542_a) {
	{
		auto _match_expr{ _121542_a->_field_right->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_FnCallExpr>>())) { goto _case_end_4540044416; }
		_case_begin_4540044416:;
		{
			this->self->_method_check_ret_multi_assign(_121542_a);
			return;
		}
		goto _match_end_4540045120;
		_case_end_4540044416:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_UnsafeExpr>>())) { goto _case_end_4540045248; }
		_case_begin_4540045248:;
		{
			{
				auto _match_expr{ _121542_a->_field_right->_field_kind.operator jule::Ref<_1ce385d22_UnsafeExpr>()->_field_expr };
				if (!(_match_expr.type_is<jule::Ref<_1ce385d22_FnCallExpr>>())) { goto _case_end_4540045392; }
				_case_begin_4540045392:;
				{
					this->self->_method_check_ret_multi_assign(_121542_a);
					return;
				}
				goto _match_end_4540048928;
				_case_end_4540045392:;
				_match_end_4540048928:;
			}
		}
		goto _match_end_4540045120;
		_case_end_4540045248:;
		_match_end_4540045120:;
	}
	jule::Slice<jule::Any> _122917_right = _1b61e873b_get_expr_models(_121542_a->_field_right->_field_kind);
	{
		if (!((_121542_a->_field_left.len() > _122917_right.len()))) { goto _case_end_4540051616; }
		_case_begin_4540051616:;
		{
			this->self->_field_s->_method_push_err(_121542_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4540049984;
		_case_end_4540051616:;
		if (!((_121542_a->_field_left.len() < _122917_right.len()))) { goto _case_end_4540051712; }
		_case_begin_4540051712:;
		{
			this->self->_field_s->_method_push_err(_121542_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4540049984;
		_case_end_4540051712:;
		_match_end_4540049984:;
	}
	jule::Ref<_1b61decc6_TupleExprModel> _124117_right_tuple = jule::new_struct<_1b61decc6_TupleExprModel>(new( std::nothrow ) _1b61decc6_TupleExprModel());
	jule::Ref<_1b61e873b_MultiAssign> _124317_st = jule::new_struct<_1b61e873b_MultiAssign>(new( std::nothrow ) _1b61e873b_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_124117_right_tuple)));
	{
		jule::Int _1b61e873b_i = 0;
		for (auto &_: _121542_a->_field_left) {
			{
				jule::Ref<_1ce385d22_AssignLeft> _124821_lexpr = _121542_a->_field_left[static_cast<jule::Int>(_1b61e873b_i)];
				jule::Ref<_1b66db129_Data> _124921_l = jule::new_ref<_1b66db129_Data>();
				if ((!(_1ce35e3a0_is_ignore_ident(_124821_lexpr->_field_ident))) && ((!(_121542_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_124821_lexpr->_field_ident))))) {
					_124921_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_124821_lexpr->_field_expr);
					if ((!(jule::real(_124921_l)))) {
						goto _iter_next_4540059696;
					}
				}
				jule::Ref<_1ce385d22_Expr> _125921_expr = jule::new_struct<_1ce385d22_Expr>(new( std::nothrow ) _1ce385d22_Expr(_121542_a->_field_right->_field_token,_122917_right[static_cast<jule::Int>(_1b61e873b_i)]));
				jule::Ref<_1b66db129_Eval> _126021_eval = ((jule::real(_124921_l)) ? (this->self->_field_s->_method_evalp(this->self,_124921_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
				jule::Ref<_1b66db129_Data> _126521_r = _126021_eval->_method_eval_expr(_125921_expr);
				if ((!(jule::real(_126521_r)))) {
					goto _iter_next_4540059696;
				}
				_124117_right_tuple->_field_datas=jule::append(_124117_right_tuple->_field_datas,jule::Slice<jule::Ref<_1b66db129_Data>>({_126521_r}));
				this->self->_method___process_end_part_of_multi_assign(_124317_st,_121542_a,_124821_lexpr,_124921_l,_126521_r);
			}
		_iter_next_4540059696:;
		_1b61e873b_i++;
		}
		_iter_end_4540059696:;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_124317_st)}));
}



inline void _1b61e873b_ScopeChecker::_method_check_assign_st(jule::Ref<_1ce385d22_AssignSt> _127839_a) {
	if (_1ce35e3a0_is_postfix_op(_127839_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_127839_a);
		return;
	}
	if ((_127839_a->_field_left.len() == 1LL) && (!(_127839_a->_field_declarative))) {
		this->self->_method_check_single_assign(_127839_a);
		return;
	}
	this->self->_method_check_multi_assign(_127839_a);
}



inline jule::Ref<_1b61e873b_Scope> _1b61e873b_ScopeChecker::_method_check_case_scope(jule::Ref<_1b61e873b_Case> _129236_c,jule::Ref<_1ce385d22_ScopeTree> _129250_tree) {
	jule::Ref<_1b61e873b_ScopeChecker> _129317_ssc = this->self->_method_new_child_checker();
	_129317_ssc->_field_cse=((jule::Uintptr)((_129236_c).alloc));
	return this->self->_method_check_child_sc(_129250_tree,_129317_ssc);
}



inline jule::Ref<_1b61e873b_Case> _1b61e873b_ScopeChecker::_method_check_case(jule::Ref<_1b61e873b_Match> _129834_m,jule::Int _129845_i,jule::Ref<_1ce385d22_Case> _129857_c,jule::Ref<_1b66db129_Data> _129887_expr) {
	jule::Ref<_1b61e873b_Case> _129917__case = _129834_m->_field_cases[static_cast<jule::Int>(_129845_i)];
	_129917__case->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_129857_c->_field_exprs.len())));
	jule::Bool _130117_generic_matched = false;
	{
		jule::Int _1b61e873b_j = 0;
		for (auto _1b61e873b_e: _129857_c->_field_exprs) {
			{
				if (_129834_m->_field_type_match) {
					jule::Ref<_1b66db129_Eval> _130525_eval = jule::new_struct_ref<_1b66db129_Eval>(new( std::nothrow ) _1b66db129_Eval(this->self->_field_s,this->self,jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Ref<_1b637edab_Var>()));
					jule::Ref<_1b66db129_Data> _131025_d = _130525_eval->_method_eval(_1b61e873b_e);
					if (jule::real(_131025_d)) {
						_129917__case->_field_exprs[static_cast<jule::Int>(_1b61e873b_j)]=jule::Any(_131025_d->_field_kind);
						if (_1b61e873b_count_match_type(_129834_m,_131025_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_1b61e873b_e->_field_token,jule::Str("type is already checked: @", 26),jule::Slice<jule::Any>({jule::Any(_131025_d->_field_kind->_method_to_str())}));
						}
					}
					if (_129887_expr->_field_kind->_field_generic) {
						_130117_generic_matched=_130117_generic_matched || _129887_expr->_field_kind->_method_equals(_131025_d->_field_kind);
					} else {
						jule::Ref<_1b61d7d79_Trait> _132125_trt = _129887_expr->_field_kind->_method_trt();
						if (jule::real(_132125_trt)) {
							this->self->_field_s->_method_check_type_compatibility(_129887_expr->_field_kind,_131025_d->_field_kind,_1b61e873b_e->_field_token,false);
						}
					}
					goto _iter_next_4540100624;
				}
				jule::Ref<_1b66db129_Data> _133021_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_1b61e873b_e);
				if ((!(jule::real(_133021_d)))) {
					goto _iter_next_4540100624;
				}
				_129917__case->_field_exprs[static_cast<jule::Int>(_1b61e873b_j)]=_133021_d->_field_model;
				_1b65a085c_AssignTypeChecker _133721_checker = _1b65a085c_AssignTypeChecker(this->self->_field_s,_129887_expr->_field_kind,_133021_d,_1b61e873b_e->_field_token,true);
				_133721_checker._method_check();
			}
		_iter_next_4540100624:;
		_1b61e873b_j++;
		}
		_iter_end_4540100624:;
	}
	if (((!(_129834_m->_field_type_match)) || (!(_129887_expr->_field_kind->_field_generic))) || _130117_generic_matched) {
		_129917__case->_field_scope=this->self->_method_check_case_scope(_129917__case,_129857_c->_field_scope);
	}
	return _129917__case;
}



inline void _1b61e873b_ScopeChecker::_method_check_cases(jule::Ref<_1ce385d22_MatchCase> _135335_m,jule::Ref<_1b61e873b_Match> _135370_rm,jule::Ref<_1b66db129_Data> _135386_expr) {
	_135370_rm->_field_cases=jule::Slice<jule::Ref<_1b61e873b_Case>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_135335_m->_field_cases.len())));
	{
		jule::Int _1b61e873b_i = 0;
		for (auto &_: _135335_m->_field_cases) {
			{
				jule::Ref<_1b61e873b_Case> _135621__case = jule::new_struct<_1b61e873b_Case>(new( std::nothrow ) _1b61e873b_Case(_135370_rm,jule::Ref<_1b61e873b_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_1b61e873b_Case>()));
				if (_1b61e873b_i > 0LL) {
					_135370_rm->_field_cases[static_cast<jule::Int>(_1b61e873b_i - 1LL)]->_field_next=_135621__case;
				}
				_135370_rm->_field_cases[static_cast<jule::Int>(_1b61e873b_i)]=_135621__case;
			}
		_iter_next_4540134000:;
		_1b61e873b_i++;
		}
		_iter_end_4540134000:;
	}
	if (jule::real(_135370_rm->_field_default) && (_135335_m->_field_cases.len() > 0LL)) {
		_135370_rm->_field_cases[static_cast<jule::Int>(_135370_rm->_field_cases.len() - 1LL)]->_field_next=_135370_rm->_field_default;
	}
	{
		jule::Int _1b61e873b_i = 0;
		for (auto _1b61e873b_c: _135335_m->_field_cases) {
			{
				this->self->_method_check_case(_135370_rm,_1b61e873b_i,_1b61e873b_c,_135386_expr);
			}
		_iter_next_4540142560:;
		_1b61e873b_i++;
		}
		_iter_end_4540142560:;
	}
}



inline jule::Ref<_1b61e873b_Case> _1b61e873b_ScopeChecker::_method_check_default(jule::Ref<_1b61e873b_Match> _137637_m,jule::Ref<_1ce385d22_Else> _137652_d) {
	jule::Ref<_1b61e873b_Case> _137717_def = jule::new_struct<_1b61e873b_Case>(new( std::nothrow ) _1b61e873b_Case(_137637_m,jule::Ref<_1b61e873b_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_1b61e873b_Case>()));
	_137717_def->_field_scope=this->self->_method_check_case_scope(_137717_def,_137652_d->_field_scope);
	return _137717_def;
}



inline void _1b61e873b_ScopeChecker::_method_push_type_match(jule::Ref<_1b61e873b_Match> _138439_tm) {
	if (_138439_tm->_field_expr->_field_kind->_field_generic) {
		for (auto _1b61e873b_c: _138439_tm->_field_cases) {
			{
				if (jule::real(_1b61e873b_c->_field_scope)) {
					_138439_tm->_field_cases=nullptr;
					_138439_tm->_field_default=_1b61e873b_c;
					goto _julec_label_push;
				}
			}
		_iter_next_4540153744:;
		}
		_iter_end_4540153744:;
		_138439_tm->_field_cases=nullptr;
	}
	_julec_label_push:;
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_138439_tm)}));
}



inline void _1b61e873b_ScopeChecker::_method_check_type_match(jule::Ref<_1ce385d22_MatchCase> _140240_m) {
	jule::Ref<_1b66db129_Data> _140317_d = this->self->_field_s->_method_eval(this->self)->_method_eval(_140240_m->_field_expr);
	if ((!(jule::real(_140317_d)))) {
		return;
	}
	if ((!(_140317_d->_field_kind->_field_generic)) && (!((jule::real(_140317_d->_field_kind->_method_prim()) && _140317_d->_field_kind->_method_prim()->_method_is_any()) || jule::real(_140317_d->_field_kind->_method_trt())))) {
		this->self->_field_s->_method_push_err(_140240_m->_field_expr->_field_token,jule::Str("type-case must be have <any>, <trait> or <generic> typed expression", 67),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1b61e873b_Match> _141417_tm = jule::new_struct<_1b61e873b_Match>(new( std::nothrow ) _1b61e873b_Match(_140317_d,true,jule::Slice<jule::Ref<_1b61e873b_Case>>(),jule::Ref<_1b61e873b_Case>()));
	if (jule::real(_140240_m->_field_default)) {
		_141417_tm->_field_default=this->self->_method_check_default(_141417_tm,_140240_m->_field_default);
	}
	this->self->_method_check_cases(_140240_m,_141417_tm,_140317_d);
	this->self->_method_push_type_match(_141417_tm);
}



inline void _1b61e873b_ScopeChecker::_method_check_common_match(jule::Ref<_1ce385d22_MatchCase> _142742_m) {
	jule::Ref<_1b66db129_Data> _142817_d = jule::new_ref<_1b66db129_Data>();
	if ((!(jule::real(_142742_m->_field_expr)))) {
		_142817_d=jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1b6d4076c_Const::_static_method_new_bool(true)));
		_142817_d->_field_model=jule::Any(_142817_d->_field_constant);
	} else {
		_142817_d=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_142742_m->_field_expr);
		if ((!(jule::real(_142817_d)))) {
			return;
		}
	}
	jule::Ref<_1b61e873b_Match> _144217_mc = jule::new_struct<_1b61e873b_Match>(new( std::nothrow ) _1b61e873b_Match(_142817_d,jule::Bool(),jule::Slice<jule::Ref<_1b61e873b_Case>>(),jule::Ref<_1b61e873b_Case>()));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_144217_mc)}));
	if (jule::real(_142742_m->_field_default)) {
		_144217_mc->_field_default=this->self->_method_check_default(_144217_mc,_142742_m->_field_default);
	}
	this->self->_method_check_cases(_142742_m,_144217_mc,_142817_d);
}



inline void _1b61e873b_ScopeChecker::_method_check_match(jule::Ref<_1ce385d22_MatchCase> _145435_m) {
	if (_145435_m->_field_type_match) {
		this->self->_method_check_type_match(_145435_m);
		return;
	}
	this->self->_method_check_common_match(_145435_m);
}



inline void _1b61e873b_ScopeChecker::_method_check_fall(jule::Ref<_1ce385d22_FallSt> _146229_f) {
	if (((*this)._field_cse == 0LL) || (((*this)._field_scope->_field_stmts.len() + 1LL) < (*this)._field_scope->_field_stmts.len())) {
		(*this)._field_s->_method_push_err(_146229_f->_field_token,jule::Str("fallthrough keyword can only useable at end of the case scopes", 62),jule::Slice<jule::Any>({}));
		return;
	}
	_1b61e873b_Case* _146817__case = ((_1b61e873b_Case*)((*this)._field_cse));
	if ((!(jule::real(_146817__case->_field_next)))) {
		(*this)._field_s->_method_push_err(_146229_f->_field_token,jule::Str("fallthrough cannot useable at final case", 40),jule::Slice<jule::Any>({}));
		(*this)._field_s->_method_push_suggestion(jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>({}));
		return;
	}
	(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1b61e873b_FallSt>(new( std::nothrow ) _1b61e873b_FallSt(static_cast<jule::Uintptr>(((jule::Uintptr)((_146817__case->_field_next).alloc))))))}));
}



inline jule::Ref<_1b61e873b_BreakSt> _1b61e873b_ScopeChecker::_method_check_break_with_label(jule::Ref<_1ce385d22_BreakSt> _148042_b) {
	jule::Ref<_1b61e873b_BreakSt> _148117_brk = this->self->_method_check_plain_break(_148042_b);
	if ((!(jule::real(_148117_brk)))) {
		return jule::new_ref<_1b61e873b_BreakSt>();
	}
	_148117_brk->_field_it=0LL;
	_148117_brk->_field_mtch=0LL;
	jule::Ref<_1b61e873b_ScopeLabel> _149117_label = _1b61e873b_find_label_parent(_148042_b->_field_label._field_kind,this->self->_field_parent);
	if ((!(jule::real(_149117_label)))) {
		this->self->_field_s->_method_push_err(_148042_b->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_148042_b->_field_label._field_kind)}));
		return jule::new_ref<_1b61e873b_BreakSt>();
	}
	_149117_label->_field_used=true;
	if ((_149117_label->_field_pos + 1LL) >= _149117_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_148042_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61e873b_BreakSt>();
	}
	jule::Int _150413_i = _149117_label->_field_pos + 1LL;
	if (_150413_i >= _149117_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_148042_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
	} else {
		jule::Any _150821_st = _149117_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_150413_i)];
		{
			auto _match_expr{ _150821_st };
			if (!(_match_expr.type_is<jule::Ref<_1b61e873b_InfIter>>())) { goto _case_end_4540229344; }
			_case_begin_4540229344:;
			{
				_148117_brk->_field_it=((jule::Uintptr)((_150821_st.operator jule::Ref<_1b61e873b_InfIter>()).alloc));
			}
			goto _match_end_4540226976;
			_case_end_4540229344:;
			if (!(_match_expr.type_is<jule::Ref<_1b61e873b_RangeIter>>())) { goto _case_end_4540227360; }
			_case_begin_4540227360:;
			{
				_148117_brk->_field_it=((jule::Uintptr)((_150821_st.operator jule::Ref<_1b61e873b_RangeIter>()).alloc));
			}
			goto _match_end_4540226976;
			_case_end_4540227360:;
			if (!(_match_expr.type_is<jule::Ref<_1b61e873b_WhileIter>>())) { goto _case_end_4540227456; }
			_case_begin_4540227456:;
			{
				_148117_brk->_field_it=((jule::Uintptr)((_150821_st.operator jule::Ref<_1b61e873b_WhileIter>()).alloc));
			}
			goto _match_end_4540226976;
			_case_end_4540227456:;
			if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Match>>())) { goto _case_end_4540227552; }
			_case_begin_4540227552:;
			{
				_148117_brk->_field_mtch=((jule::Uintptr)((_150821_st.operator jule::Ref<_1b61e873b_Match>()).alloc));
			}
			goto _match_end_4540226976;
			_case_end_4540227552:;
			_case_begin_4540223632:;
			{
				this->self->_field_s->_method_push_err(_148042_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4540226976;
			_case_end_4540223632:;
			_match_end_4540226976:;
		}
	}
	if (_148117_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_148117_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_148042_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	if (_148117_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_148117_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_148042_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	return _148117_brk;
}



inline jule::Ref<_1b61e873b_BreakSt> _1b61e873b_ScopeChecker::_method_check_plain_break(jule::Ref<_1ce385d22_BreakSt> _153337_b) {
	jule::Ref<_1b61e873b_ScopeChecker> _153417_scope = this->self;
	_julec_label_iter:;
	{
		if (!(((((_153417_scope->_field_it == 0LL) && (_153417_scope->_field_cse == 0LL)) && jule::real(_153417_scope->_field_parent)) && (!(jule::real(_153417_scope->_field_owner)))))) { goto _case_end_4540244064; }
		_case_begin_4540244064:;
		{
			_153417_scope=_153417_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4540243824;
		_case_end_4540244064:;
		if (!((_153417_scope->_field_it != 0LL))) { goto _case_end_4540244176; }
		_case_begin_4540244176:;
		{
			return jule::new_struct<_1b61e873b_BreakSt>(new( std::nothrow ) _1b61e873b_BreakSt(_153417_scope->_field_it,jule::Uintptr()));
		}
		goto _match_end_4540243824;
		_case_end_4540244176:;
		if (!((_153417_scope->_field_cse != 0LL))) { goto _case_end_4540244288; }
		_case_begin_4540244288:;
		{
			return jule::new_struct<_1b61e873b_BreakSt>(new( std::nothrow ) _1b61e873b_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(((jule::Uintptr)((((_1b61e873b_Case*)(_153417_scope->_field_cse))->_field_owner).alloc)))));
		}
		goto _match_end_4540243824;
		_case_end_4540244288:;
		_match_end_4540243824:;
	}
	this->self->_field_s->_method_push_err(_153337_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>({}));
	return jule::new_ref<_1b61e873b_BreakSt>();
}



inline void _1b61e873b_ScopeChecker::_method_check_break(jule::Ref<_1ce385d22_BreakSt> _155231_b) {
	if (_155231_b->_field_label._field_id != 0LLU) {
		jule::Ref<_1b61e873b_BreakSt> _155421_brk = this->self->_method_check_break_with_label(_155231_b);
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_155421_brk)}));
		return;
	}
	jule::Ref<_1b61e873b_BreakSt> _155917_brk = this->self->_method_check_plain_break(_155231_b);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_155917_brk)}));
}



inline void _1b61e873b_ScopeChecker::_method_check_ret(jule::Ref<_1ce385d22_RetSt> _156333_r) {
	jule::Ref<_1b61e873b_RetSt> _156417_rt = jule::new_struct<_1b61e873b_RetSt>(new( std::nothrow ) _1b61e873b_RetSt());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_156417_rt)}));
	jule::Ref<_1b65a085c_RetTypeChecker> _156717_rtc = jule::new_struct<_1b65a085c_RetTypeChecker>(new( std::nothrow ) _1b65a085c_RetTypeChecker(this->self,this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1ce385d22_Expr>>(),jule::Slice<jule::Ref<_1b637edab_Var>>(),_156333_r->_field_token,jule::Any()));
	jule::Bool _157213_ok = _156717_rtc->_method_check(_156333_r->_field_expr);
	if ((!(_157213_ok))) {
		return;
	}
	if ((!(jule::real(_156333_r->_field_expr))) && (_156717_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_156417_rt->_field_vars=_156717_rtc->_field_vars;
	if (jule::real(_156333_r->_field_expr)) {
		_156417_rt->_field_expr=_156717_rtc->_field_model;
	}
}



inline void _1b61e873b_ScopeChecker::_method_check_node(jule::Any _158834_node) {
	{
		auto _match_expr{ _158834_node };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_Comment>>())) { goto _case_end_4540281760; }
		_case_begin_4540281760:;
		{
			goto _match_end_4540280688;
		}
		goto _match_end_4540280688;
		_case_end_4540281760:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_ScopeTree>>())) { goto _case_end_4540282224; }
		_case_begin_4540282224:;
		{
			this->self->_method_check_anon_scope(_158834_node.operator jule::Ref<_1ce385d22_ScopeTree>());
		}
		goto _match_end_4540280688;
		_case_end_4540282224:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_VarDecl>>())) { goto _case_end_4540282320; }
		_case_begin_4540282320:;
		{
			this->self->_method_check_var_decl(_158834_node.operator jule::Ref<_1ce385d22_VarDecl>());
		}
		goto _match_end_4540280688;
		_case_end_4540282320:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TypeAliasDecl>>())) { goto _case_end_4540281440; }
		_case_begin_4540281440:;
		{
			this->self->_method_check_type_alias_decl(_158834_node.operator jule::Ref<_1ce385d22_TypeAliasDecl>());
		}
		goto _match_end_4540280688;
		_case_end_4540281440:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_Expr>>())) { goto _case_end_4540281536; }
		_case_begin_4540281536:;
		{
			this->self->_method_check_expr(_158834_node.operator jule::Ref<_1ce385d22_Expr>());
		}
		goto _match_end_4540280688;
		_case_end_4540281536:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_Conditional>>())) { goto _case_end_4540282624; }
		_case_begin_4540282624:;
		{
			this->self->_method_check_conditional(_158834_node.operator jule::Ref<_1ce385d22_Conditional>());
		}
		goto _match_end_4540280688;
		_case_end_4540282624:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_Iter>>())) { goto _case_end_4540282720; }
		_case_begin_4540282720:;
		{
			this->self->_method_check_iter(_158834_node.operator jule::Ref<_1ce385d22_Iter>());
		}
		goto _match_end_4540280688;
		_case_end_4540282720:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_ContSt>>())) { goto _case_end_4540282816; }
		_case_begin_4540282816:;
		{
			this->self->_method_check_cont(_158834_node.operator jule::Ref<_1ce385d22_ContSt>());
		}
		goto _match_end_4540280688;
		_case_end_4540282816:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_LabelSt>>())) { goto _case_end_4540282912; }
		_case_begin_4540282912:;
		{
			this->self->_method_check_label(_158834_node.operator jule::Ref<_1ce385d22_LabelSt>());
		}
		goto _match_end_4540280688;
		_case_end_4540282912:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_GotoSt>>())) { goto _case_end_4540283008; }
		_case_begin_4540283008:;
		{
			this->self->_method_push_goto(_158834_node.operator jule::Ref<_1ce385d22_GotoSt>());
		}
		goto _match_end_4540280688;
		_case_end_4540283008:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_AssignSt>>())) { goto _case_end_4540283104; }
		_case_begin_4540283104:;
		{
			this->self->_method_check_assign_st(_158834_node.operator jule::Ref<_1ce385d22_AssignSt>());
		}
		goto _match_end_4540280688;
		_case_end_4540283104:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_MatchCase>>())) { goto _case_end_4540283200; }
		_case_begin_4540283200:;
		{
			this->self->_method_check_match(_158834_node.operator jule::Ref<_1ce385d22_MatchCase>());
		}
		goto _match_end_4540280688;
		_case_end_4540283200:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_FallSt>>())) { goto _case_end_4540283296; }
		_case_begin_4540283296:;
		{
			this->self->_method_check_fall(_158834_node.operator jule::Ref<_1ce385d22_FallSt>());
		}
		goto _match_end_4540280688;
		_case_end_4540283296:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_BreakSt>>())) { goto _case_end_4540283392; }
		_case_begin_4540283392:;
		{
			this->self->_method_check_break(_158834_node.operator jule::Ref<_1ce385d22_BreakSt>());
		}
		goto _match_end_4540280688;
		_case_end_4540283392:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_RetSt>>())) { goto _case_end_4540283488; }
		_case_begin_4540283488:;
		{
			this->self->_method_check_ret(_158834_node.operator jule::Ref<_1ce385d22_RetSt>());
		}
		goto _match_end_4540280688;
		_case_end_4540283488:;
		_case_begin_4540280512:;
		{
			jule::outln(jule::Str("error <unimplemented scope node>", 32));
		}
		goto _match_end_4540280688;
		_case_end_4540280512:;
		_match_end_4540280688:;
	}
}



inline void _1b61e873b_ScopeChecker::_method_check_tree(void) {
	for (auto _1b61e873b_stmt: this->self->_field_tree->_field_stmts) {
		{
			this->self->_method_check_node(_1b61e873b_stmt);
		}
	_iter_next_4540308240:;
	}
	_iter_end_4540308240:;
}



inline void _1b61e873b_ScopeChecker::_method_check_same_scope_goto(jule::Ref<_1b61e873b_ScopeGoto> _161540_gt,jule::Ref<_1b61e873b_ScopeLabel> _161560_label) {
	if (_161560_label->_field_pos < _161540_gt->_field_pos) {
		return;
	}
	jule::Int _162017_i = _161560_label->_field_pos;
	for (; _162017_i > _161540_gt->_field_pos; (_162017_i)--) {
		{
			jule::Any _162217_stmt = _161560_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_162017_i)];
			if (_1b61e873b_st_is_def(_162217_stmt)) {
				(*this)._field_s->_method_push_err(_161540_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_161540_gt->_field_gt->_field_label._field_kind)}));
				goto _iter_end_4540313008;
			}
		}
	_iter_next_4540313008:;
	}
	_iter_end_4540313008:;
}



inline jule::Bool _1b61e873b_ScopeChecker::_method_check_label_parents(jule::Ref<_1b61e873b_ScopeGoto> _163038_gt,jule::Ref<_1b61e873b_ScopeLabel> _163058_label) {
	jule::Ref<_1b61e873b_ScopeChecker> _163117_scope = _163058_label->_field_scope;
	_julec_label_parent_scopes:;
	if (jule::real(_163117_scope->_field_parent) && ((_163117_scope->_field_parent).alloc != (_163038_gt->_field_scope).alloc)) {
		_163117_scope=_163117_scope->_field_parent;
		{
			jule::Int _1b61e873b_i = 0;
			for (auto _1b61e873b_stmt: _163117_scope->_field_scope->_field_stmts) {
				{
					{
						if (!((_1b61e873b_i >= _163058_label->_field_pos))) { goto _case_end_4540328832; }
						_case_begin_4540328832:;
						{
							return true;
						}
						goto _match_end_4540328608;
						_case_end_4540328832:;
						if (!((_1b61e873b_st_is_def(_1b61e873b_stmt)))) { goto _case_end_4540328944; }
						_case_begin_4540328944:;
						{
							(*this)._field_s->_method_push_err(_163038_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_163038_gt->_field_gt->_field_label._field_kind)}));
							return false;
						}
						goto _match_end_4540328608;
						_case_end_4540328944:;
						_match_end_4540328608:;
					}
				}
			_iter_next_4540325888:;
			_1b61e873b_i++;
			}
			_iter_end_4540325888:;
		}
		goto _julec_label_parent_scopes;
	}
	return true;
}



inline void _1b61e873b_ScopeChecker::_method_check_goto_scope(jule::Ref<_1b61e873b_ScopeGoto> _165339_gt,jule::Ref<_1b61e873b_ScopeLabel> _165355_label) {
	jule::Int _165417_i = _165339_gt->_field_pos;
	for (; _165417_i < _165339_gt->_field_scope->_field_scope->_field_stmts.len(); (_165417_i)++) {
		{
			{
				if (!((_165417_i >= _165355_label->_field_pos))) { goto _case_end_4540356080; }
				_case_begin_4540356080:;
				{
					return;
				}
				goto _match_end_4540355856;
				_case_end_4540356080:;
				if (!((_1b61e873b_st_is_def(_165339_gt->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_165417_i)])))) { goto _case_end_4540356192; }
				_case_begin_4540356192:;
				{
					(*this)._field_s->_method_push_err(_165339_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_165339_gt->_field_gt->_field_label._field_kind)}));
					return;
				}
				goto _match_end_4540355856;
				_case_end_4540356192:;
				_match_end_4540355856:;
			}
		}
	_iter_next_4540354288:;
	}
	_iter_end_4540354288:;
}



inline void _1b61e873b_ScopeChecker::_method_check_diff_scope_goto(jule::Ref<_1b61e873b_ScopeGoto> _166744_gt,jule::Ref<_1b61e873b_ScopeLabel> _166764_label) {
	{
		if (!(((_166764_label->_field_scope->_field_child_index > 0LL) && (_166744_gt->_field_scope->_field_child_index == 0LL)))) { goto _case_end_4540365088; }
		_case_begin_4540365088:;
		{
			if ((!((*this)._method_check_label_parents(_166744_gt,_166764_label)))) {
				return;
			}
		}
		goto _match_end_4540364896;
		_case_end_4540365088:;
		if (!((_166764_label->_field_scope->_field_child_index < _166744_gt->_field_scope->_field_child_index))) { goto _case_end_4540365200; }
		_case_begin_4540365200:;
		{
			return;
		}
		goto _match_end_4540364896;
		_case_end_4540365200:;
		_match_end_4540364896:;
	}
	jule::Ref<_1b61e873b_ScopeChecker> _167817_scope = _166764_label->_field_scope;
	jule::Int _167917_i = _166764_label->_field_pos - 1LL;
	for (; _167917_i >= 0LL; (_167917_i)--) {
		{
			jule::Any _168117_s = _167817_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_167917_i)];
			{
				auto _match_expr{ _168117_s };
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Scope>>())) { goto _case_end_4540372160; }
				_case_begin_4540372160:;
				{
					if (_167917_i <= _166744_gt->_field_pos) {
						return;
					}
				}
				goto _match_end_4540374192;
				_case_end_4540372160:;
				_match_end_4540374192:;
			}
			if (_1b61e873b_st_is_def(_168117_s)) {
				(*this)._field_s->_method_push_err(_166744_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_166744_gt->_field_gt->_field_label._field_kind)}));
				goto _iter_end_4540364976;
			}
		}
	_iter_next_4540364976:;
	}
	_iter_end_4540364976:;
	if (jule::real(_167817_scope->_field_parent) && ((_167817_scope->_field_parent).alloc != (_166744_gt->_field_scope).alloc)) {
		(*this)._method_check_label_parents(_166744_gt,_166764_label);
	} else {
		(*this)._method_check_goto_scope(_166744_gt,_166764_label);
	}
}



inline void _1b61e873b_ScopeChecker::_method_check_goto(jule::Ref<_1b61e873b_ScopeGoto> _170333_gt,jule::Ref<_1b61e873b_ScopeLabel> _170353_label) {
	{
		if (!(((_170333_gt->_field_scope).alloc == (_170353_label->_field_scope).alloc))) { goto _case_end_4540384320; }
		_case_begin_4540384320:;
		{
			(*this)._method_check_same_scope_goto(_170333_gt,_170353_label);
		}
		goto _match_end_4540384128;
		_case_end_4540384320:;
		if (!((_170353_label->_field_scope->_field_child_index > 0LL))) { goto _case_end_4540384432; }
		_case_begin_4540384432:;
		{
			(*this)._method_check_diff_scope_goto(_170333_gt,_170353_label);
		}
		goto _match_end_4540384128;
		_case_end_4540384432:;
		_match_end_4540384128:;
	}
}



inline void _1b61e873b_ScopeChecker::_method_check_gotos(void) {
	for (auto _1b61e873b_gt: (*this)._field_gotos.get()) {
		{
			jule::Ref<_1b61e873b_ScopeLabel> _171521_label = (*this)._method_find_label_all(_1b61e873b_gt->_field_gt->_field_label._field_kind);
			if ((!(jule::real(_171521_label)))) {
				(*this)._field_s->_method_push_err(_1b61e873b_gt->_field_gt->_field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_1b61e873b_gt->_field_gt->_field_label._field_kind)}));
				goto _iter_next_4540389296;
			}
			_171521_label->_field_used=true;
			(*this)._method_check_goto(_1b61e873b_gt,_171521_label);
		}
	_iter_next_4540389296:;
	}
	_iter_end_4540389296:;
}



inline void _1b61e873b_ScopeChecker::_method_check_labels(void) {
	for (auto _1b61e873b_l: (*this)._field_labels.get()) {
		{
			if ((!(_1b61e873b_l->_field_used))) {
				(*this)._field_s->_method_push_err(_1b61e873b_l->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1b61e873b_l->_field_label->_field_ident)}));
			}
		}
	_iter_next_4540398784:;
	}
	_iter_end_4540398784:;
}



inline void _1b61e873b_ScopeChecker::_method_check_vars(void) {
	for (auto _1b61e873b_v: (*this)._field_table->_field_vars) {
		{
			if ((((!(_1b61e873b_v->_field_used)) && (!(_1ce35e3a0_is_ignore_ident(_1b61e873b_v->_field_ident)))) && (!(_1ce35e3a0_is_anon_ident(_1b61e873b_v->_field_ident)))) && (_1b61e873b_v->_field_ident != jule::Str("self", 4))) {
				(*this)._field_s->_method_push_err(_1b61e873b_v->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1b61e873b_v->_field_ident)}));
			}
		}
	_iter_next_4540403824:;
	}
	_iter_end_4540403824:;
}



inline void _1b61e873b_ScopeChecker::_method_check_aliases(void) {
	for (auto _1b61e873b_a: (*this)._field_table->_field_type_aliases) {
		{
			if (((!(_1b61e873b_a->_field_used)) && (!(_1ce35e3a0_is_ignore_ident(_1b61e873b_a->_field_ident)))) && (!(_1ce35e3a0_is_anon_ident(_1b61e873b_a->_field_ident)))) {
				(*this)._field_s->_method_push_err(_1b61e873b_a->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1b61e873b_a->_field_ident)}));
			}
		}
	_iter_next_4540410432:;
	}
	_iter_end_4540410432:;
}



inline void _1b61e873b_ScopeChecker::_method_check(jule::Ref<_1ce385d22_ScopeTree> _175129_tree,jule::Ref<_1b61e873b_Scope> _175151_s) {
	_175151_s->_field_deferred=_175129_tree->_field_deferred;
	_175151_s->_field_unsafety=_175129_tree->_field_unsafety;
	jule::I64 _175513_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_175129_tree;
	this->self->_field_scope=_175151_s;
	this->self->_method_check_tree();
	if (_175513_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
	}
	if (this->self->_method_is_root()) {
		this->self->_method_check_gotos();
		this->self->_method_check_labels();
	}
}



inline jule::Ref<_1b61e873b_ScopeChecker> _1b61e873b_ScopeChecker::_method_new_child_checker(void) {
	jule::Ref<_1b61e873b_ScopeChecker> _177517_base = _1b61e873b_new_scope_checker_base(this->self->_field_s,jule::new_ref<_1b6069348_FnIns>());
	_177517_base->_field_parent=this->self;
	_177517_base->_field_labels=this->self->_field_labels;
	_177517_base->_field_gotos=this->self->_field_gotos;
	_177517_base->_field_child_index=static_cast<jule::Int>(this->self->_field_child_index + 1LL);
	return _177517_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_GetRefPtrExprModel &_Src) {
	_Stream << "GetRefPtrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_BuiltinRealCallExprModel &_Src) {
	_Stream << "BuiltinRealCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_BuiltinDropCallExprModel &_Src) {
	_Stream << "BuiltinDropCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_BuiltinAppendCallExprModel &_Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_BuiltinErrorTraitSubIdentExprModel &_Src) {
	_Stream << "BuiltinErrorTraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_ExplicitDerefExprModel &_Src) {
	_Stream << "ExplicitDerefExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_IntegratedToStrExprModel &_Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61decc6_TernaryExprModel &_Src) {
	_Stream << "TernaryExprModel{";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1b623bb7a_Package::_method_find_package(jule::Str ) {
	return jule::new_ref<_1b623bb7a_ImportInfo>();
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1b623bb7a_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)> ) {
	return jule::new_ref<_1b623bb7a_ImportInfo>();
}



inline jule::Ref<_1b637edab_Var> _1b623bb7a_Package::_method_find_var(jule::Str _26631_ident,jule::Bool _26643_cpp_linked) {
	return _1b623bb7a_find_var_in_package((*this)._field_files,_26631_ident,_26643_cpp_linked);
}



inline jule::Ref<_1b6703d45_TypeAlias> _1b623bb7a_Package::_method_find_type_alias(jule::Str _27238_ident,jule::Bool _27250_cpp_linked) {
	return _1b623bb7a_find_type_alias_in_package((*this)._field_files,_27238_ident,_27250_cpp_linked);
}



inline jule::Ref<_1ce385eed_Struct> _1b623bb7a_Package::_method_find_struct(jule::Str _27834_ident,jule::Bool _27846_cpp_linked) {
	return _1b623bb7a_find_struct_in_package((*this)._field_files,_27834_ident,_27846_cpp_linked);
}



inline jule::Ref<_1b6069348_Fn> _1b623bb7a_Package::_method_find_fn(jule::Str _28430_ident,jule::Bool _28442_cpp_linked) {
	return _1b623bb7a_find_fn_in_package((*this)._field_files,_28430_ident,_28442_cpp_linked);
}



inline jule::Ref<_1b61d7d79_Trait> _1b623bb7a_Package::_method_find_trait(jule::Str _29033_ident) {
	return _1b623bb7a_find_trait_in_package((*this)._field_files,_29033_ident);
}



inline jule::Ref<_1b61d7c58_Enum> _1b623bb7a_Package::_method_find_enum(jule::Str _29632_ident) {
	return _1b623bb7a_find_enum_in_package((*this)._field_files,_29632_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b623bb7a_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1b622b76e_Sema::_method_find_package(jule::Str _33435_ident) {
	return (*this)._field_file->_method_find_package(_33435_ident);
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1b622b76e_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)> _34437_selector) {
	return (*this)._field_file->_method_select_package(_34437_selector);
}



inline jule::Ref<_1b637edab_Var> _1b622b76e_Sema::_method_find_var(jule::Str _35431_ident,jule::Bool _35443_cpp_linked) {
	jule::Ref<_1b637edab_Var> _35617_v = _1b623bb7a_find_var_in_package((*this)._field_files,_35431_ident,_35443_cpp_linked);
	if (jule::real(_35617_v)) {
		return _35617_v;
	}
	for (auto _1b622b76e_imp: (*this)._field_file->_field_imports) {
		{
			if ((!(_1b622b76e_imp_is_lookupable(_1b622b76e_imp,_35431_ident)))) {
				goto _iter_next_4540510432;
			}
			_35617_v=_1b622b76e_imp->_method_find_var(_35431_ident,_35443_cpp_linked);
			if (jule::real(_35617_v) && (*this)._method_is_accessible_define(_35617_v->_field_public,_35617_v->_field_token)) {
				return _35617_v;
			}
		}
	_iter_next_4540510432:;
	}
	_iter_end_4540510432:;
	return jule::new_ref<_1b637edab_Var>();
}



inline jule::Ref<_1b6703d45_TypeAlias> _1b622b76e_Sema::_method_find_type_alias(jule::Str _38138_ident,jule::Bool _38150_cpp_linked) {
	jule::Ref<_1b6703d45_TypeAlias> _38317_ta = _1b623bb7a_find_type_alias_in_package((*this)._field_files,_38138_ident,_38150_cpp_linked);
	if (jule::real(_38317_ta)) {
		return _38317_ta;
	}
	for (auto _1b622b76e_imp: (*this)._field_file->_field_imports) {
		{
			if ((!(_1b622b76e_imp_is_lookupable(_1b622b76e_imp,_38138_ident)))) {
				goto _iter_next_4540521232;
			}
			_38317_ta=_1b622b76e_imp->_method_find_type_alias(_38138_ident,_38150_cpp_linked);
			if (jule::real(_38317_ta) && (*this)._method_is_accessible_define(_38317_ta->_field_public,_38317_ta->_field_token)) {
				return _38317_ta;
			}
		}
	_iter_next_4540521232:;
	}
	_iter_end_4540521232:;
	return jule::new_ref<_1b6703d45_TypeAlias>();
}



inline jule::Ref<_1ce385eed_Struct> _1b622b76e_Sema::_method_find_struct(jule::Str _40834_ident,jule::Bool _40846_cpp_linked) {
	jule::Ref<_1ce385eed_Struct> _41017_s = _1b623bb7a_find_struct_in_package((*this)._field_files,_40834_ident,_40846_cpp_linked);
	if (jule::real(_41017_s)) {
		return _41017_s;
	}
	for (auto _1b622b76e_imp: (*this)._field_file->_field_imports) {
		{
			if ((!(_1b622b76e_imp_is_lookupable(_1b622b76e_imp,_40834_ident)))) {
				goto _iter_next_4540530752;
			}
			_41017_s=_1b622b76e_imp->_method_find_struct(_40834_ident,_40846_cpp_linked);
			if (jule::real(_41017_s) && (*this)._method_is_accessible_define(_41017_s->_field_public,_41017_s->_field_token)) {
				return _41017_s;
			}
		}
	_iter_next_4540530752:;
	}
	_iter_end_4540530752:;
	return jule::new_ref<_1ce385eed_Struct>();
}



inline jule::Ref<_1b6069348_Fn> _1b622b76e_Sema::_method_find_fn(jule::Str _43530_ident,jule::Bool _43542_cpp_linked) {
	jule::Ref<_1b6069348_Fn> _43717_f = _1b623bb7a_find_fn_in_package((*this)._field_files,_43530_ident,_43542_cpp_linked);
	if (jule::real(_43717_f)) {
		return _43717_f;
	}
	for (auto _1b622b76e_imp: (*this)._field_file->_field_imports) {
		{
			if ((!(_1b622b76e_imp_is_lookupable(_1b622b76e_imp,_43530_ident)))) {
				goto _iter_next_4540540400;
			}
			_43717_f=_1b622b76e_imp->_method_find_fn(_43530_ident,_43542_cpp_linked);
			if (jule::real(_43717_f) && (*this)._method_is_accessible_define(_43717_f->_field_public,_43717_f->_field_token)) {
				return _43717_f;
			}
		}
	_iter_next_4540540400:;
	}
	_iter_end_4540540400:;
	return jule::new_ref<_1b6069348_Fn>();
}



inline jule::Ref<_1b61d7d79_Trait> _1b622b76e_Sema::_method_find_trait(jule::Str _46233_ident) {
	jule::Ref<_1b61d7d79_Trait> _46417_t = _1b623bb7a_find_trait_in_package((*this)._field_files,_46233_ident);
	if (jule::real(_46417_t)) {
		return _46417_t;
	}
	for (auto _1b622b76e_imp: (*this)._field_file->_field_imports) {
		{
			if ((!(_1b622b76e_imp_is_lookupable(_1b622b76e_imp,_46233_ident)))) {
				goto _iter_next_4540550320;
			}
			_46417_t=_1b622b76e_imp->_method_find_trait(_46233_ident);
			if (jule::real(_46417_t) && (*this)._method_is_accessible_define(_46417_t->_field_public,_46417_t->_field_token)) {
				return _46417_t;
			}
		}
	_iter_next_4540550320:;
	}
	_iter_end_4540550320:;
	return jule::new_ref<_1b61d7d79_Trait>();
}



inline jule::Ref<_1b61d7c58_Enum> _1b622b76e_Sema::_method_find_enum(jule::Str _48932_ident) {
	jule::Ref<_1b61d7c58_Enum> _49117_e = _1b623bb7a_find_enum_in_package((*this)._field_files,_48932_ident);
	if (jule::real(_49117_e)) {
		return _49117_e;
	}
	for (auto _1b622b76e_imp: (*this)._field_file->_field_imports) {
		{
			if ((!(_1b622b76e_imp_is_lookupable(_1b622b76e_imp,_48932_ident)))) {
				goto _iter_next_4540559136;
			}
			_49117_e=_1b622b76e_imp->_method_find_enum(_48932_ident);
			if (jule::real(_49117_e) && (*this)._method_is_accessible_define(_49117_e->_field_public,_49117_e->_field_token)) {
				return _49117_e;
			}
		}
	_iter_next_4540559136:;
	}
	_iter_end_4540559136:;
	return jule::new_ref<_1b61d7c58_Enum>();
}



inline jule::Bool _1b622b76e_Sema::_method_is_flag(jule::Int _51322_flags) {
	return ((*this)._field_flags & _51322_flags) == _51322_flags;
}



inline void _1b622b76e_Sema::_method_set_current_file(jule::Ref<_1b66b3a3b_SymbolTable> _51539_f) {
	(*this)._field_file=_51539_f;
}



inline void _1b622b76e_Sema::_method_push_err(_1ce35e3a0_Token _51727_token,jule::Str _51741_fmt,jule::Slice<jule::Any> _51754_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1e7690a81_Log>({_1b622b76e_compiler_err(_51727_token,true,_51741_fmt,_51754_args)}));
}



inline void _1b622b76e_Sema::_method_push_suggestion(jule::Str _52234_fmt,jule::Slice<jule::Any> _52247_args) {
	{
		_1b622b76e_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_52234_fmt,_52247_args);
	}
}



inline jule::Bool _1b622b76e_Sema::_method_is_accessible_define(jule::Bool _52735_public,_1ce35e3a0_Token _52749_token) {
	return (_52735_public || (!(jule::real(_52749_token._field_file)))) || ((*this)._field_file->_field_file->_method_dir() == _52749_token._field_file->_method_dir());
}



inline jule::Bool _1b622b76e_Sema::_method_is_duplicated_ident(jule::Uintptr _53434_itself,jule::Str _53451_ident,jule::Bool _53463_cpp_linked) {
	for (auto _1b622b76e_f: (*this)._field_files) {
		{
			if (_1b622b76e_f->_method_is_duplicated_ident(_53434_itself,_53451_ident,_53463_cpp_linked)) {
				return true;
			}
			for (auto _1b622b76e_imp: _1b622b76e_f->_field_imports) {
				{
					for (auto _1b622b76e_selected: _1b622b76e_imp->_field_selected) {
						{
							if (_1b622b76e_selected._field_kind == _53451_ident) {
								return true;
							}
						}
					_iter_next_4540590336:;
					}
					_iter_end_4540590336:;
				}
			_iter_next_4540588560:;
			}
			_iter_end_4540588560:;
		}
	_iter_next_4540584000:;
	}
	_iter_end_4540584000:;
	return false;
}



inline jule::Bool _1b622b76e_Sema::_method_check_generic_quantity(jule::Int _55141_required,jule::Int _55156_given,_1ce35e3a0_Token _55168_error_token) {
	jule::Bool _55190_ok = jule::Bool();
	{
		if (!(((_55141_required == 0LL) && (_55156_given > 0LL)))) { goto _case_end_4540596624; }
		_case_begin_4540596624:;
		{
			(*this)._method_push_err(_55168_error_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
			_55190_ok = false;
			return _55190_ok;
		}
		goto _match_end_4540594992;
		_case_end_4540596624:;
		if (!(((_55141_required > 0LL) && (_55156_given == 0LL)))) { goto _case_end_4540596144; }
		_case_begin_4540596144:;
		{
			(*this)._method_push_err(_55168_error_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			_55190_ok = false;
			return _55190_ok;
		}
		goto _match_end_4540594992;
		_case_end_4540596144:;
		if (!((_55141_required < _55156_given))) { goto _case_end_4540596256; }
		_case_begin_4540596256:;
		{
			(*this)._method_push_err(_55168_error_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>({}));
			_55190_ok = false;
			return _55190_ok;
		}
		goto _match_end_4540594992;
		_case_end_4540596256:;
		if (!((_55141_required > _55156_given))) { goto _case_end_4540596368; }
		_case_begin_4540596368:;
		{
			(*this)._method_push_err(_55168_error_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>({}));
			_55190_ok = false;
			return _55190_ok;
		}
		goto _match_end_4540594992;
		_case_end_4540596368:;
		_case_begin_4540595168:;
		{
			_55190_ok = true;
			return _55190_ok;
		}
		goto _match_end_4540594992;
		_case_end_4540595168:;
		_match_end_4540594992:;
	}
}



inline jule::Bool _1b622b76e_Sema::_method_is_duplicated_import_selection(jule::Uintptr _57445_itself,jule::Str _57462_ident) {
	for (auto _1b622b76e_imp: (*this)._field_file->_field_imports) {
		{
			if (((jule::Uintptr)((_1b622b76e_imp).alloc)) == _57445_itself) {
				goto _iter_end_4540606016;
			}
			if (_1b622b76e_imp->_method_exist_ident(_57462_ident)) {
				return true;
			}
		}
	_iter_next_4540606016:;
	}
	_iter_end_4540606016:;
	return false;
}



inline jule::Any _1b622b76e_Sema::_method_get_import_def(jule::Str _58929_ident,jule::Ref<_1b623bb7a_ImportInfo>& _58946_imp) {
	if (_1b6c3ed86_find_package_builtin_def(_58946_imp->_field_link_path,_58929_ident) != nullptr) {
		return jule::Any(true);
	}
	for (auto _1b622b76e_f: _58946_imp->_field_package->_field_files) {
		{
			
			jule::Any _59621_def = _1b622b76e_f->_method_def_by_ident(_58929_ident,false);
			if (_59621_def != nullptr) {
				return _59621_def;
			}
		}
	_iter_next_4540612160:;
	}
	_iter_end_4540612160:;
	return jule::Any(nullptr);
}



inline void _1b622b76e_Sema::_method_check_import_selections(jule::Ref<_1b623bb7a_ImportInfo>& _60547_imp) {
	for (auto _1b622b76e_ident: _60547_imp->_field_selected) {
		{
			if (_1b622b76e_ident._field_kind == jule::Str("self", 4)) {
				goto _iter_next_4540619248;
			}
			if ((*this)._method_is_duplicated_import_selection(((jule::Uintptr)((_60547_imp).alloc)),_1b622b76e_ident._field_kind)) {
				(*this)._method_push_err(_1b622b76e_ident,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b622b76e_ident._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
				goto _iter_next_4540619248;
			}
			jule::Any _61721_def = (*this)._method_get_import_def(_1b622b76e_ident._field_kind,_60547_imp);
			{
				auto _match_expr{ _61721_def };
				if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4540627536; }
				_case_begin_4540627536:;
				{
					goto _iter_next_4540619248;
				}
				goto _match_end_4540627392;
				_case_end_4540627536:;
				if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4540627952; }
				_case_begin_4540627952:;
				{
					jule::Ref<_1b637edab_Var> _62425_v = _61721_def.operator jule::Ref<_1b637edab_Var>();
					if ((*this)._method_is_accessible_define(_62425_v->_field_public,_62425_v->_field_token)) {
						goto _iter_next_4540619248;
					}
				}
				goto _match_end_4540627392;
				_case_end_4540627952:;
				if (!(_match_expr.type_is<jule::Ref<_1b6703d45_TypeAlias>>())) { goto _case_end_4540628048; }
				_case_begin_4540628048:;
				{
					jule::Ref<_1b6703d45_TypeAlias> _63025_ta = _61721_def.operator jule::Ref<_1b6703d45_TypeAlias>();
					if ((*this)._method_is_accessible_define(_63025_ta->_field_public,_63025_ta->_field_token)) {
						goto _iter_next_4540619248;
					}
				}
				goto _match_end_4540627392;
				_case_end_4540628048:;
				if (!(_match_expr.type_is<jule::Ref<_1ce385eed_Struct>>())) { goto _case_end_4540628144; }
				_case_begin_4540628144:;
				{
					jule::Ref<_1ce385eed_Struct> _63625_strct = _61721_def.operator jule::Ref<_1ce385eed_Struct>();
					if ((*this)._method_is_accessible_define(_63625_strct->_field_public,_63625_strct->_field_token)) {
						goto _iter_next_4540619248;
					}
				}
				goto _match_end_4540627392;
				_case_end_4540628144:;
				if (!(_match_expr.type_is<jule::Ref<_1b61d7d79_Trait>>())) { goto _case_end_4540629872; }
				_case_begin_4540629872:;
				{
					jule::Ref<_1b61d7d79_Trait> _64225_t = _61721_def.operator jule::Ref<_1b61d7d79_Trait>();
					if ((*this)._method_is_accessible_define(_64225_t->_field_public,_64225_t->_field_token)) {
						goto _iter_next_4540619248;
					}
				}
				goto _match_end_4540627392;
				_case_end_4540629872:;
				if (!(_match_expr.type_is<jule::Ref<_1b61d7c58_Enum>>())) { goto _case_end_4540629968; }
				_case_begin_4540629968:;
				{
					jule::Ref<_1b61d7c58_Enum> _64825_e = _61721_def.operator jule::Ref<_1b61d7c58_Enum>();
					if ((*this)._method_is_accessible_define(_64825_e->_field_public,_64825_e->_field_token)) {
						goto _iter_next_4540619248;
					}
				}
				goto _match_end_4540627392;
				_case_end_4540629968:;
				if (!(_match_expr.type_is<jule::Ref<_1b6069348_Fn>>())) { goto _case_end_4540630064; }
				_case_begin_4540630064:;
				{
					jule::Ref<_1b6069348_Fn> _65425_f = _61721_def.operator jule::Ref<_1b6069348_Fn>();
					if ((*this)._method_is_accessible_define(_65425_f->_field_public,_65425_f->_field_token)) {
						goto _iter_next_4540619248;
					}
				}
				goto _match_end_4540627392;
				_case_end_4540630064:;
				_case_begin_4540620928:;
				{
					(*this)._method_push_err(_1b622b76e_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_1b622b76e_ident._field_kind)}));
					goto _iter_next_4540619248;
				}
				goto _match_end_4540627392;
				_case_end_4540620928:;
				_match_end_4540627392:;
			}
			(*this)._method_push_err(_1b622b76e_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_1b622b76e_ident._field_kind)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		}
	_iter_next_4540619248:;
	}
	_iter_end_4540619248:;
}



inline jule::Bool _1b622b76e_Sema::_method_is_use_alias_duplication(jule::Ref<_1b623bb7a_ImportInfo>& _66944_imp) {
	if (_66944_imp->_field_alias.len() == 0LL) {
		return false;
	}
	for (auto _1b622b76e_imp2: (*this)._field_file->_field_imports) {
		{
			if ((_1b622b76e_imp2).alloc == (_66944_imp).alloc) {
				goto _iter_end_4540654000;
			}
			if (_1b622b76e_imp2->_field_alias == _66944_imp->_field_alias) {
				return true;
			}
		}
	_iter_next_4540654000:;
	}
	_iter_end_4540654000:;
	return false;
}



inline jule::Bool _1b622b76e_Sema::_method_check_import(jule::Ref<_1b623bb7a_ImportInfo>& _68536_imp) {
	if (_68536_imp->_field_cpp_linked || (_68536_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	if ((*this)._method_is_use_alias_duplication(_68536_imp)) {
		(*this)._method_push_err(_68536_imp->_field_token,jule::Str("identifier \"@\" is already used for another use declaration", 58),jule::Slice<jule::Any>({jule::Any(_68536_imp->_field_alias)}));
		(*this)._method_push_suggestion(jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>({}));
	}
	if (_68536_imp->_field_duplicate) {
		return true;
	}
	jule::Ref<_1b622b76e_Sema> _69917_sema = jule::new_struct_ref<_1b622b76e_Sema>(new( std::nothrow ) _1b622b76e_Sema(jule::Slice<_1e7690a81_Log>(),jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>(),jule::Ref<_1b66b3a3b_SymbolTable>(),(*this)._field_flags));
	_69917_sema->_method_check(_68536_imp->_field_package->_field_files);
	if (_69917_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_69917_sema->_field_errors);
		return false;
	}
	(*this)._method_check_import_selections(_68536_imp);
	return true;
}



inline void _1b622b76e_Sema::_method_check_imports(void) {
	for (auto _1b622b76e_file: (*this)._field_files) {
		{
			(*this)._method_set_current_file(_1b622b76e_file);
			for (auto _1b622b76e_imp: _1b622b76e_file->_field_imports) {
				{
					jule::Bool _71721_ok = (*this)._method_check_import(_1b622b76e_imp);
					if ((!(_71721_ok))) {
						(*this)._method_push_err(_1b622b76e_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_1b622b76e_imp->_field_link_path)}));
						return;
					}
				}
			_iter_next_4540674208:;
			}
			_iter_end_4540674208:;
		}
	_iter_next_4540671584:;
	}
	_iter_end_4540671584:;
}



inline void _1b622b76e_Sema::_method_impl_file_impls(void) {
	for (auto _1b622b76e_imp: this->self->_field_file->_field_impls) {
		{
			this->self->_method_impl_impl(_1b622b76e_imp);
		}
	_iter_next_4540679600:;
	}
	_iter_end_4540679600:;
}



inline void _1b622b76e_Sema::_method_impl_impls(void) {
	for (auto _1b622b76e_file: this->self->_field_files) {
		{
			this->self->_method_set_current_file(_1b622b76e_file);
			this->self->_method_impl_file_impls();
		}
	_iter_next_4540683504:;
	}
	_iter_end_4540683504:;
}



inline void _1b622b76e_Sema::_method_check_enums(void) {
	for (auto _1b622b76e_file: this->self->_field_files) {
		{
			this->self->_method_set_current_file(_1b622b76e_file);
			this->self->_method_check_enum_decls();
		}
	_iter_next_4540687328:;
	}
	_iter_end_4540687328:;
}



inline jule::Bool _1b622b76e_Sema::_method_check_type_with_refers(jule::Ref<_1b6703d45_TypeSymbol>& _75047_t,jule::Trait<_1b6b746d3_Lookup> _75113_l,jule::Ref<_1b6703d45_Referencer> _75128_referencer) {
	jule::Bool _75155_ok = jule::Bool();
	if (_75047_t->_method_checked()) {
		_75155_ok = true;
		return _75155_ok;
	}
	_1b6703d45_TypeChecker _75517_tc = _1b6703d45_TypeChecker(this->self,_75113_l,_75128_referencer,_1ce35e3a0_Token(),jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>(),jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>(),jule::Bool());
	_75517_tc._method_check(_75047_t);
	_75155_ok = _75047_t->_method_checked();
	return _75155_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_type(jule::Ref<_1b6703d45_TypeSymbol>& _76635_t,jule::Trait<_1b6b746d3_Lookup> _76655_l) {
	jule::Bool _76668_ok = jule::Bool();
	_76668_ok = this->self->_method_check_type_with_refers(_76635_t,_76655_l,jule::new_ref<_1b6703d45_Referencer>());
	return _76668_ok;
}



inline jule::Ref<_1b6703d45_TypeKind> _1b622b76e_Sema::_method_build_type_with_generics(jule::Ref<_1ce385d22_TypeDecl>& _77249_t,jule::Slice<jule::Ref<_1b6703d45_TypeAlias>> _77313_generics) {
	jule::Ref<_1b6703d45_TypeChecker> _77417_tc = jule::new_struct<_1b6703d45_TypeChecker>(new( std::nothrow ) _1b6703d45_TypeChecker(this->self,this->self,jule::Ref<_1b6703d45_Referencer>(),_1ce35e3a0_Token(),jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>(),_77313_generics,jule::Bool()));
	return _77417_tc->_method_check_decl(_77249_t);
}



inline jule::Ref<_1b6703d45_TypeKind> _1b622b76e_Sema::_method_build_type(jule::Ref<_1ce385d22_TypeDecl>& _78335_t) {
	return this->self->_method_build_type_with_generics(_78335_t,nullptr);
}



inline jule::Ref<_1b66db129_Eval> _1b622b76e_Sema::_method_evalpd(jule::Trait<_1b6b746d3_Lookup> _78930_l,jule::Ref<_1b6703d45_TypeKind> _78945_p,jule::Ref<_1b637edab_Var> _78963_owner) {
	jule::Ref<_1b66db129_Eval> _79017_e = jule::new_struct_ref<_1b66db129_Eval>(new( std::nothrow ) _1b66db129_Eval(this->self,_78930_l,jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),_78963_owner));
	{
		auto _match_expr{ _78930_l };
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_ScopeChecker>>())) { goto _case_end_4540731536; }
		_case_begin_4540731536:;
		{
			_79017_e->_field_unsafety=_78930_l.operator jule::Ref<_1b61e873b_ScopeChecker>()->_method_is_unsafe();
		}
		goto _match_end_4540732896;
		_case_end_4540731536:;
		_match_end_4540732896:;
	}
	_79017_e->_field_prefix=_78945_p;
	return _79017_e;
}



inline jule::Ref<_1b66db129_Eval> _1b622b76e_Sema::_method_evalp(jule::Trait<_1b6b746d3_Lookup> _80729_l,jule::Ref<_1b6703d45_TypeKind> _80744_p) {
	return this->self->_method_evalpd(_80729_l,_80744_p,jule::new_ref<_1b637edab_Var>());
}



inline jule::Ref<_1b66db129_Eval> _1b622b76e_Sema::_method_eval(jule::Trait<_1b6b746d3_Lookup> _81228_l) {
	return this->self->_method_evalp(_81228_l,jule::new_ref<_1b6703d45_TypeKind>());
}



inline void _1b622b76e_Sema::_method_check_assign_type(jule::Bool _81637_dest_is_ref,jule::Ref<_1b6703d45_TypeKind>& _81661_dest,jule::Ref<_1b66db129_Data>& _81714_d,_1ce35e3a0_Token _81728_error_token,jule::Bool _81748_deref) {
	if (_81637_dest_is_ref) {
		if ((!(_81661_dest->_method_equals(_81714_d->_field_kind)))) {
			this->self->_method_push_err(_81728_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_81661_dest->_method_to_str()),jule::Any(_81714_d->_field_kind->_method_to_str())}));
		}
	} else {
		jule::Ref<_1b65a085c_AssignTypeChecker> _82321_atc = jule::new_struct<_1b65a085c_AssignTypeChecker>(new( std::nothrow ) _1b65a085c_AssignTypeChecker(this->self,_81661_dest,_81714_d,_81728_error_token,_81748_deref));
		jule::Bool _83017_ok = _82321_atc->_method_check();
		if ((!(_83017_ok))) {
			return;
		}
	}
	if ((!(_81714_d->_method_is_const())) || (!(jule::real(_81661_dest->_method_prim())))) {
		return;
	}
	jule::Str _84017_kind = _81661_dest->_method_prim()->_field_kind;
	{
		if (!((_1b6e2b4c3_is_sig_int(_84017_kind)))) { goto _case_end_4540753520; }
		_case_begin_4540753520:;
		{
			_81714_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_81714_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4540753344;
		_case_end_4540753520:;
		if (!((_1b6e2b4c3_is_unsig_int(_84017_kind)))) { goto _case_end_4540753632; }
		_case_begin_4540753632:;
		{
			_81714_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_81714_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4540753344;
		_case_end_4540753632:;
		if (!((_1b6e2b4c3_is_float(_84017_kind)))) { goto _case_end_4540753744; }
		_case_begin_4540753744:;
		{
			_81714_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_81714_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4540753344;
		_case_end_4540753744:;
		_match_end_4540753344:;
	}
}



inline jule::Bool _1b622b76e_Sema::_method_check_type_compatibility(jule::Ref<_1b6703d45_TypeKind>& _84949_dest,jule::Ref<_1b6703d45_TypeKind>& _85014_src,_1ce35e3a0_Token& _85035_error_token,jule::Bool _85055_deref) {
	if (jule::real(_85014_src->_method_tup())) {
		this->self->_method_push_err(_85035_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_84949_dest->_method_to_str()),jule::Any(_85014_src->_method_to_str())}));
		return false;
	}
	jule::Ref<_1b65a085c_TypeCompatibilityChecker> _85817_tcc = jule::new_struct<_1b65a085c_TypeCompatibilityChecker>(new( std::nothrow ) _1b65a085c_TypeCompatibilityChecker(this->self,_84949_dest,_85014_src,_85035_error_token,jule::Bool(),_85055_deref,jule::Bool()));
	jule::Bool _86513_ok = _85817_tcc->_method_check();
	if ((!(_86513_ok))) {
		this->self->_method_push_err(_85035_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_84949_dest->_method_to_str()),jule::Any(_85014_src->_method_to_str())}));
	}
	return _86513_ok;
}



inline jule::Ref<_1b6703d45_TypeKind> _1b622b76e_Sema::_method_build_non_generic_type_kind(jule::Ref<_1ce385d22_TypeDecl>& _87952_ast,jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>& _88014_generics) {
	jule::Ref<_1b6703d45_TypeChecker> _88117_tc = jule::new_struct<_1b6703d45_TypeChecker>(new( std::nothrow ) _1b6703d45_TypeChecker(this->self,this->self,jule::Ref<_1b6703d45_Referencer>(),_1ce35e3a0_Token(),_88014_generics,jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>(),jule::Bool()));
	return _88117_tc->_method_check_decl(_87952_ast);
}



inline void _1b622b76e_Sema::_method_build_fn_non_generic_type_kinds(jule::Ref<_1b6069348_FnIns>& _88956_f) {
	jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> _89017_generics = nullptr;
	if (_88956_f->_field_decl->_method_is_method()) {
		_89017_generics=jule::append(_88956_f->_field_decl->_field_generics,_88956_f->_field_decl->_field_owner->_field_generics);
	} else {
		_89017_generics=_88956_f->_field_decl->_field_generics;
	}
	for (auto _1b622b76e_p: _88956_f->_field_params) {
		{
			if ((!(_1b622b76e_p->_field_decl->_method_is_self()))) {
				_1b622b76e_p->_field_kind=this->self->_method_build_non_generic_type_kind(_1b622b76e_p->_field_decl->_field_kind->_field_decl,_89017_generics);
			}
		}
	_iter_next_4540779600:;
	}
	_iter_end_4540779600:;
	if ((!(_88956_f->_field_decl->_method_is_void()))) {
		_88956_f->_field_result=this->self->_method_build_non_generic_type_kind(_88956_f->_field_decl->_field_result->_field_kind->_field_decl,_89017_generics);
	}
}



inline jule::Ref<_1b6069348_FnIns> _1b622b76e_Sema::_method_get_trait_check_fn_kind(jule::Ref<_1b6069348_Fn>& _90748_f) {
	jule::Ref<_1b6069348_FnIns> _90817_ins = _90748_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_90817_ins);
	return _90817_ins;
}



inline jule::Bool _1b622b76e_Sema::_method_reload_fn_ins_types(jule::Ref<_1b6069348_FnIns>& _91344_f) {
	jule::Bool _91357_ok = jule::Bool();
	if (_91344_f->_method_is_builtin() || _91344_f->_method_is_anon()) {
		_91357_ok = true;
		return _91357_ok;
	}
	jule::Ref<_1b622b76e_Sema> _91817_sema = _91344_f->_field_decl->_field_sema;
	jule::Ref<_1b66b3a3b_SymbolTable> _92017_old = _91344_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_91344_f->_field_decl->_field_sema->_method_set_current_file(_92017_old);
	});
	jule::Ref<_1b66b3a3b_SymbolTable> _92217_file = _1b622b76e_find_file(_91344_f->_field_decl->_field_sema->_field_files,_91344_f->_field_decl->_field_token._field_file);
	if (jule::real(_92217_file)) {
		_91344_f->_field_decl->_field_sema->_method_set_current_file(_92217_file);
	}
	jule::I64 _92717_size = _91344_f->_field_generics.len();
	if (jule::real(_91344_f->_field_decl) && jule::real(_91344_f->_field_decl->_field_owner)) {
		_92717_size+=static_cast<jule::I64>(_91344_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ref<_1b6703d45_TypeAlias>> _93217_generics = jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>::alloc(0LL,static_cast<jule::Int>(_92717_size));
	{
		jule::Int _1b622b76e_i = 0;
		for (auto _1b622b76e_g: _91344_f->_field_generics) {
			{
				_93217_generics=jule::append(_93217_generics,jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>({jule::new_struct<_1b6703d45_TypeAlias>(new( std::nothrow ) _1b6703d45_TypeAlias(jule::Ref<_1ce385d22_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1ce35e3a0_Token(),_91344_f->_field_decl->_field_generics[static_cast<jule::Int>(_1b622b76e_i)]->_field_ident,jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),_1b622b76e_g)),jule::Str(),jule::Slice<jule::Any>()))}));
			}
		_iter_next_4540809824:;
		_1b622b76e_i++;
		}
		_iter_end_4540809824:;
	}
	if (jule::real(_91344_f->_field_decl) && jule::real(_91344_f->_field_decl->_field_owner)) {
		jule::Ref<_1ce385eed_StructIns> _94421_owner = _91344_f->_field_owner;
		{
			jule::Int _1b622b76e_i = 0;
			for (auto _1b622b76e_g: _94421_owner->_field_generics) {
				{
					_93217_generics=jule::append(_93217_generics,jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>({jule::new_struct<_1b6703d45_TypeAlias>(new( std::nothrow ) _1b6703d45_TypeAlias(jule::Ref<_1ce385d22_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1ce35e3a0_Token(),_94421_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1b622b76e_i)]->_field_ident,jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),_1b622b76e_g)),jule::Str(),jule::Slice<jule::Any>()))}));
				}
			_iter_next_4540812592:;
			_1b622b76e_i++;
			}
			_iter_end_4540812592:;
		}
	}
	_91357_ok=true;
	for (auto _1b622b76e_p: _91344_f->_field_params) {
		{
			if ((!(_1b622b76e_p->_field_decl->_method_is_self()))) {
				_1b622b76e_p->_field_kind=_91817_sema->_method_build_type_with_generics(_1b622b76e_p->_field_decl->_field_kind->_field_decl,_93217_generics);
				if (jule::real(_1b622b76e_p->_field_kind)) {
					if (_1b622b76e_p->_field_decl->_field_reference && (!(_1b6703d45_is_valid_for_ref(_1b622b76e_p->_field_kind)))) {
						this->self->_method_push_err(_1b622b76e_p->_field_decl->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_1b622b76e_p->_field_kind->_method_to_str())}));
					}
				} else {
					_91357_ok=false;
				}
			}
		}
	_iter_next_4540811008:;
	}
	_iter_end_4540811008:;
	if ((!(_91344_f->_field_decl->_method_is_void()))) {
		_91344_f->_field_result=_91817_sema->_method_build_type_with_generics(_91344_f->_field_decl->_field_result->_field_kind->_field_decl,_93217_generics);
		_91357_ok=jule::real(_91344_f->_field_result) && _91357_ok;
	}
	if ((_91817_sema).alloc != (this->self).alloc) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_91817_sema->_field_errors);
		_91817_sema->_field_errors=nullptr;
	}
	_91357_ok = _91357_ok;
	return _91357_ok;
}



inline void _1b622b76e_Sema::_method_check_ref_validity_for_init_expr(jule::Bool _98252_left_mut,jule::Ref<_1b66db129_Data>& _98269_d,_1ce35e3a0_Token& _98284_error_token) {
	{
		auto _match_expr{ _98269_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4540837392; }
		goto _match_end_4540836640;
		_case_end_4540837392:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_TraitSubIdentExprModel>>())) { goto _case_end_4540836992; }
		_case_begin_4540836992:;
		{
			jule::Ref<_1b61decc6_TraitSubIdentExprModel> _98817_model = _98269_d->_field_model.operator jule::Ref<_1b61decc6_TraitSubIdentExprModel>();
			if ((!(_1b622b76e_is_valid_model_for_ref(_98817_model->_field_expr)))) {
				this->self->_method_push_err(_98284_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_98817_model->_field_ident)}));
			}
		}
		goto _match_end_4540836640;
		_case_end_4540836992:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_StructSubIdentExprModel>>())) { goto _case_end_4540837088; }
		_case_begin_4540837088:;
		{
			jule::Ref<_1b61decc6_StructSubIdentExprModel> _99417_model = _98269_d->_field_model.operator jule::Ref<_1b61decc6_StructSubIdentExprModel>();
			if ((!(_1b622b76e_is_valid_model_for_ref(_99417_model->_field_expr)))) {
				this->self->_method_push_err(_98284_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_99417_model->_field_field->_field_decl->_field_ident)}));
			}
		}
		goto _match_end_4540836640;
		_case_end_4540837088:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ref<_1b61decc6_CommonSubIdentExprModel>>())) { goto _case_end_4540837184; }
		_case_begin_4540837184:;
		{
			this->self->_method_push_err(_98284_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4540836640;
		_case_end_4540837184:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_UnaryExprModel>>())) { goto _case_end_4540837280; }
		_case_begin_4540837280:;
		{
			jule::Ref<_1b61decc6_UnaryExprModel> _100417_unary = _98269_d->_field_model.operator jule::Ref<_1b61decc6_UnaryExprModel>();
			if (_100417_unary->_field_op == jule::Str("*", 1)) {
				goto _match_end_4540836640;
			}
			goto _case_begin_4540836176;
		}
		goto _match_end_4540836640;
		_case_end_4540837280:;
		_case_begin_4540836176:;
		{
			this->self->_method_push_err(_98284_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4540836640;
		_case_end_4540836176:;
		_match_end_4540836640:;
	}
	if (_98252_left_mut && (!(_98269_d->_field_mutable))) {
		this->self->_method_push_err(_98284_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>({}));
	}
}



inline void _1b622b76e_Sema::_method_check_validity_for_init_expr(jule::Bool _102048_left_mut,jule::Bool _102064_left_ref,jule::Ref<_1b6703d45_TypeKind>& _102110_left_kind,jule::Ref<_1b66db129_Data>& _102137_d,_1ce35e3a0_Token& _102152_error_token) {
	if ((_102048_left_mut && (!(_102137_d->_field_mutable))) && _102137_d->_field_kind->_method_mutable()) {
		this->self->_method_push_err(_102152_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
	}
	if (_102064_left_ref) {
		this->self->_method_check_ref_validity_for_init_expr(_102048_left_mut,_102137_d,_102152_error_token);
	}
	jule::Ref<_1b65a085c_AssignTypeChecker> _102917_atc = jule::new_struct<_1b65a085c_AssignTypeChecker>(new( std::nothrow ) _1b65a085c_AssignTypeChecker(this->self,jule::Ref<_1b6703d45_TypeKind>(),_102137_d,_102152_error_token,jule::Bool()));
	_102917_atc->_method_check_validity();
}



inline jule::Bool _1b622b76e_Sema::_method_check_type_alias_decl_kind(jule::Ref<_1b6703d45_TypeAlias>& _103751_ta,jule::Trait<_1b6b746d3_Lookup> _103771_l) {
	jule::Bool _103784_ok = jule::Bool();
	jule::Ref<_1b66b3a3b_SymbolTable> _103817_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_103817_old);
	});
	jule::Ref<_1b66b3a3b_SymbolTable> _104017_file = _1b622b76e_find_file(this->self->_field_files,_103751_ta->_field_token._field_file);
	if (jule::real(_104017_file)) {
		this->self->_method_set_current_file(_104017_file);
	}
	_103784_ok=this->self->_method_check_type_with_refers(_103751_ta->_field_kind,_103771_l,jule::new_struct<_1b6703d45_Referencer>(new( std::nothrow ) _1b6703d45_Referencer(_103751_ta->_field_ident,jule::Any(_103751_ta),(&(_103751_ta->_field_refers)))));
	if ((_103784_ok && jule::real(_103751_ta->_field_kind->_field_kind->_method_arr())) && _103751_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_103751_ta->_field_kind->_field_decl->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
		_103784_ok=false;
	}
	return _103784_ok;
}



inline void _1b622b76e_Sema::_method_check_type_alias_decl(jule::Ref<_1b6703d45_TypeAlias>& _105746_ta,jule::Trait<_1b6b746d3_Lookup> _105766_l) {
	if (_1ce35e3a0_is_ignore_ident(_105746_ta->_field_ident)) {
		this->self->_method_push_err(_105746_ta->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_105746_ta,_105766_l);
}



inline void _1b622b76e_Sema::_method_check_type_alias_decl_dup(jule::Ref<_1b6703d45_TypeAlias>& _106550_ta) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_106550_ta).alloc)),_106550_ta->_field_ident,_106550_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_106550_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_106550_ta->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_106550_ta,this->self);
}



inline jule::Bool _1b622b76e_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _107444_ok = jule::Bool();
	for (auto _1b622b76e_ta: this->self->_field_file->_field_type_aliases) {
		{
			this->self->_method_check_type_alias_decl_dup(_1b622b76e_ta);
			if (this->self->_field_errors.len() > 0LL) {
				_107444_ok = false;
				return _107444_ok;
			}
		}
	_iter_next_4540890752:;
	}
	_iter_end_4540890752:;
	_107444_ok = true;
	return _107444_ok;
}



inline void _1b622b76e_Sema::_method_check_enum_items_dup(jule::Ref<_1b61d7c58_Enum> _108639_e) {
	for (auto _1b622b76e_item: _108639_e->_field_items) {
		{
			if (_1ce35e3a0_is_ignore_ident(_1b622b76e_item->_field_ident)) {
				(*this)._method_push_err(_1b622b76e_item->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
			} else {
				for (auto _1b622b76e_citem: _108639_e->_field_items) {
					{
						if (_1b622b76e_item == _1b622b76e_citem) {
							goto _iter_end_4540900544;
						} else if (_1b622b76e_item->_field_ident == _1b622b76e_citem->_field_ident) {
							(*this)._method_push_err(_1b622b76e_item->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b622b76e_item->_field_ident)}));
							(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
							goto _iter_end_4540900544;
						}
					}
				_iter_next_4540900544:;
				}
				_iter_end_4540900544:;
			}
		}
	_iter_next_4540896096:;
	}
	_iter_end_4540896096:;
}



inline void _1b622b76e_Sema::_method_check_enum_items_str(jule::Ref<_1b61d7c58_Enum>& _110445_e) {
	for (auto _1b622b76e_item: _110445_e->_field_items) {
		{
			if (_1b622b76e_item->_method_auto_expr()) {
				_1b622b76e_item->_field_value=jule::new_struct<_1b66db129_Value>(new( std::nothrow ) _1b66db129_Value(jule::Ref<_1ce385d22_Expr>(),jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::Ref<_1b6703d45_TypeKind>(),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1b6d4076c_Const::_static_method_new_str(_1b622b76e_item->_field_ident)))));
				_1b622b76e_item->_field_value->_field_data->_field_model=jule::Any(_1b622b76e_item->_field_value->_field_data->_field_constant);
			} else {
				jule::Ref<_1b66db129_Data> _111425_d = this->self->_method_eval(this->self)->_method_eval_expr(_1b622b76e_item->_field_value->_field_expr);
				if ((!(jule::real(_111425_d)))) {
					goto _iter_next_4540896976;
				}
				if ((!(_111425_d->_method_is_const()))) {
					this->self->_method_push_err(_1b622b76e_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
				}
				this->self->_method_check_assign_type(false,_110445_e->_field_kind->_field_kind,_111425_d,_1b622b76e_item->_field_token,false);
				_1b622b76e_item->_field_value->_field_data=_111425_d;
			}
		}
	_iter_next_4540896976:;
	}
	_iter_end_4540896976:;
}



inline void _1b622b76e_Sema::_method_check_enum_items_int(jule::Ref<_1b61d7c58_Enum>& _112945_e) {
	jule::U64 _113017_max = static_cast<jule::U64>(_1b6d47d3a_max(_112945_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		jule::Int _1b622b76e_i = 0;
		for (auto _1b622b76e_item: _112945_e->_field_items) {
			{
				if (_113017_max == 0LL) {
					this->self->_method_push_err(_1b622b76e_item->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				} else {
					(_113017_max)--;
				}
				if (_1b622b76e_item->_method_auto_expr()) {
					_1b622b76e_item->_field_value=jule::new_struct<_1b66db129_Value>(new( std::nothrow ) _1b66db129_Value(jule::Ref<_1ce385d22_Expr>(),jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::Ref<_1b6703d45_TypeKind>(),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1b6d4076c_Const::_static_method_new_u64(static_cast<jule::U64>(_113017_max - (_113017_max - static_cast<jule::U64>(_1b622b76e_i))))))));
					_1b622b76e_item->_field_value->_field_data->_field_model=jule::Any(_1b622b76e_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_1b66db129_Data> _114625_d = this->self->_method_eval(this->self)->_method_eval_expr(_1b622b76e_item->_field_value->_field_expr);
					if ((!(jule::real(_114625_d)))) {
						goto _iter_next_4540923904;
					}
					if ((!(_114625_d->_method_is_const()))) {
						this->self->_method_push_err(_1b622b76e_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(false,_112945_e->_field_kind->_field_kind,_114625_d,_1b622b76e_item->_field_token,false);
					_1b622b76e_item->_field_value->_field_data=_114625_d;
				}
			}
		_iter_next_4540923904:;
		_1b622b76e_i++;
		}
		_iter_end_4540923904:;
	}
}



inline void _1b622b76e_Sema::_method_check_enum_decl(jule::Ref<_1b61d7c58_Enum>& _116140_e) {
	if (_1ce35e3a0_is_ignore_ident(_116140_e->_field_ident)) {
		this->self->_method_push_err(_116140_e->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_116140_e).alloc)),_116140_e->_field_ident,false)) {
		this->self->_method_push_err(_116140_e->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_116140_e->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_116140_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_116140_e->_field_token,jule::Str("there is no member for enum: @", 30),jule::Slice<jule::Any>({jule::Any(_116140_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_116140_e);
	if (jule::real(_116140_e->_field_kind)) {
		if ((!(this->self->_method_check_type(_116140_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_116140_e->_field_kind=jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ref<_1b6703d45_Prim> _118817_t = _116140_e->_field_kind->_field_kind->_method_prim();
	if ((!(jule::real(_118817_t)))) {
		this->self->_method_push_err(_116140_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!((_118817_t->_method_is_str()))) { goto _case_end_4540959856; }
		_case_begin_4540959856:;
		{
			this->self->_method_check_enum_items_str(_116140_e);
		}
		goto _match_end_4540956032;
		_case_end_4540959856:;
		if (!((_1b6e2b4c3_is_int(_118817_t->_method_to_str())))) { goto _case_end_4540958528; }
		_case_begin_4540958528:;
		{
			this->self->_method_check_enum_items_int(_116140_e);
		}
		goto _match_end_4540956032;
		_case_end_4540958528:;
		_case_begin_4540951312:;
		{
			this->self->_method_push_err(_116140_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4540956032;
		_case_end_4540951312:;
		_match_end_4540956032:;
	}
}



inline jule::Bool _1b622b76e_Sema::_method_check_enum_decls(void) {
	jule::Bool _120838_ok = jule::Bool();
	for (auto _1b622b76e_e: this->self->_field_file->_field_enums) {
		{
			this->self->_method_check_enum_decl(_1b622b76e_e);
			if (this->self->_field_errors.len() > 0LL) {
				_120838_ok = false;
				return _120838_ok;
			}
		}
	_iter_next_4540965216:;
	}
	_iter_end_4540965216:;
	_120838_ok = true;
	return _120838_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_decl_generics(jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>& _122039_generics) {
	jule::Bool _122067_ok = jule::Bool();
	_122067_ok=true;
	{
		jule::Int _1b622b76e_i = 0;
		for (auto _1b622b76e_g: _122039_generics) {
			{
				if (_1ce35e3a0_is_ignore_ident(_1b622b76e_g->_field_ident)) {
					(*this)._method_push_err(_1b622b76e_g->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
					_122067_ok=false;
					goto _iter_next_4540971712;
				}
				_julec_label_duplication_lookup:;
				{
					jule::Int _1b622b76e_j = 0;
					for (auto _1b622b76e_ct: _122039_generics) {
						{
							{
								if (!((_1b622b76e_j >= _1b622b76e_i))) { goto _case_end_4540978320; }
								_case_begin_4540978320:;
								{
									goto _iter_end_4540973536;
								}
								goto _match_end_4540978096;
								_case_end_4540978320:;
								if (!((_1b622b76e_g->_field_ident == _1b622b76e_ct->_field_ident))) { goto _case_end_4540978432; }
								_case_begin_4540978432:;
								{
									(*this)._method_push_err(_1b622b76e_g->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b622b76e_g->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									_122067_ok=false;
									goto _iter_end_4540973536;
								}
								goto _match_end_4540978096;
								_case_end_4540978432:;
								_match_end_4540978096:;
							}
						}
					_iter_next_4540973536:;
					_1b622b76e_j++;
					}
					_iter_end_4540973536:;
				}
			}
		_iter_next_4540971712:;
		_1b622b76e_i++;
		}
		_iter_end_4540971712:;
	}
	return _122067_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_fn_decl_params_dup(jule::Ref<_1b6069348_Fn>& _124844_f) {
	jule::Bool _124854_ok = jule::Bool();
	_124854_ok=true;
	_julec_label_check:;
	{
		jule::Int _1b622b76e_i = 0;
		for (auto _1b622b76e_p: _124844_f->_field_params) {
			{
				for (auto _1b622b76e_g: _124844_f->_field_generics) {
					{
						if (_1b622b76e_p->_field_ident == _1b622b76e_g->_field_ident) {
							_124854_ok=false;
							(*this)._method_push_err(_1b622b76e_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b622b76e_p->_field_ident)}));
							(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
							goto _iter_next_4540986128;
						}
					}
				_iter_next_4540988928:;
				}
				_iter_end_4540988928:;
				_julec_label_params_lookup:;
				{
					jule::Int _1b622b76e_j = 0;
					for (auto _1b622b76e_jp: _124844_f->_field_params) {
						{
							{
								if (!((_1b622b76e_j >= _1b622b76e_i))) { goto _case_end_4540996304; }
								_case_begin_4540996304:;
								{
									goto _iter_end_4540989360;
								}
								goto _match_end_4540996064;
								_case_end_4540996304:;
								if (!((_1ce35e3a0_is_anon_ident(_1b622b76e_p->_field_ident) || _1ce35e3a0_is_anon_ident(_1b622b76e_jp->_field_ident)))) { goto _case_end_4540996416; }
								_case_begin_4540996416:;
								{
									goto _iter_end_4540989360;
								}
								goto _match_end_4540996064;
								_case_end_4540996416:;
								if (!((_1b622b76e_p->_field_ident == _1b622b76e_jp->_field_ident))) { goto _case_end_4540996528; }
								_case_begin_4540996528:;
								{
									_124854_ok=false;
									(*this)._method_push_err(_1b622b76e_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b622b76e_p->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_next_4540986128;
								}
								goto _match_end_4540996064;
								_case_end_4540996528:;
								_match_end_4540996064:;
							}
						}
					_iter_next_4540989360:;
					_1b622b76e_j++;
					}
					_iter_end_4540989360:;
				}
			}
		_iter_next_4540986128:;
		_1b622b76e_i++;
		}
		_iter_end_4540986128:;
	}
	return _124854_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_fn_decl_result_dup(jule::Ref<_1b6069348_Fn>& _128444_f) {
	jule::Bool _128454_ok = jule::Bool();
	_128454_ok=true;
	if (_128444_f->_method_is_void()) {
		return _128454_ok;
	}
	{
		jule::Int _1b622b76e_i = 0;
		for (auto _1b622b76e_v: _128444_f->_field_result->_field_idents) {
			{
				if (_1ce35e3a0_is_ignore_ident(_1b622b76e_v._field_kind)) {
					goto _iter_next_4541006608;
				}
				for (auto _1b622b76e_g: _128444_f->_field_generics) {
					{
						if (_1b622b76e_v._field_kind == _1b622b76e_g->_field_ident) {
							goto _julec_label_exist;
						}
					}
				_iter_next_4541009808:;
				}
				_iter_end_4541009808:;
				for (auto _1b622b76e_p: _128444_f->_field_params) {
					{
						if (_1b622b76e_v._field_kind == _1b622b76e_p->_field_ident) {
							goto _julec_label_exist;
						}
					}
				_iter_next_4541013040:;
				}
				_iter_end_4541013040:;
				_julec_label_itself_lookup:;
				{
					jule::Int _1b622b76e_j = 0;
					for (auto _1b622b76e_jv: _128444_f->_field_result->_field_idents) {
						{
							{
								if (!((_1b622b76e_j >= _1b622b76e_i))) { goto _case_end_4541019344; }
								_case_begin_4541019344:;
								{
									goto _iter_end_4541017120;
								}
								goto _match_end_4541019120;
								_case_end_4541019344:;
								if (!((_1b622b76e_jv._field_kind == _1b622b76e_v._field_kind))) { goto _case_end_4541019456; }
								_case_begin_4541019456:;
								{
									goto _julec_label_exist;
								}
								goto _match_end_4541019120;
								_case_end_4541019456:;
								_match_end_4541019120:;
							}
						}
					_iter_next_4541017120:;
					_1b622b76e_j++;
					}
					_iter_end_4541017120:;
				}
				goto _iter_next_4541006608;
				_julec_label_exist:;
				(*this)._method_push_err(_1b622b76e_v,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b622b76e_v._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
				_128454_ok=false;
			}
		_iter_next_4541006608:;
		_1b622b76e_i++;
		}
		_iter_end_4541006608:;
	}
	return _128454_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_fn_decl_types(jule::Ref<_1b6069348_Fn>& _133344_f) {
	jule::Bool _133354_ok = jule::Bool();
	_133354_ok=true;
	jule::Slice<jule::Ref<_1ce385d22_GenericDecl>> _133617_generics = _133344_f->_field_generics;
	if (jule::real(_133344_f->_field_owner)) {
		_133617_generics=jule::append(_133617_generics,_133344_f->_field_owner->_field_generics);
	}
	for (auto _1b622b76e_p: _133344_f->_field_params) {
		{
			if ((!(_1b622b76e_p->_method_is_self()))) {
				jule::Ref<_1b6703d45_TypeKind> _134325_kind = this->self->_method_build_non_generic_type_kind(_1b622b76e_p->_field_kind->_field_decl,_133617_generics);
				_133354_ok=jule::real(_134325_kind) && _133354_ok;
				_1b622b76e_p->_field_kind->_field_kind=_134325_kind;
			}
		}
	_iter_next_4541033232:;
	}
	_iter_end_4541033232:;
	if ((!(_133344_f->_method_is_void()))) {
		jule::Ref<_1b6703d45_TypeKind> _135021_kind = this->self->_method_build_non_generic_type_kind(_133344_f->_field_result->_field_kind->_field_decl,_133617_generics);
		_133354_ok=jule::real(_135021_kind) && _133354_ok;
		_133344_f->_field_result->_field_kind->_field_kind=_135021_kind;
	}
	_133354_ok = _133354_ok;
	return _133354_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_fn_decl_prototype(jule::Ref<_1b6069348_Fn>& _136048_f) {
	jule::Bool _136058_ok = jule::Bool();
	{
		if (!(((!(this->self->_method_check_decl_generics(_136048_f->_field_generics)))))) { goto _case_end_4541043280; }
		_case_begin_4541043280:;
		{
			_136058_ok = false;
			return _136058_ok;
		}
		goto _match_end_4541041664;
		_case_end_4541043280:;
		if (!(((!(this->self->_method_check_fn_decl_params_dup(_136048_f)))))) { goto _case_end_4541042800; }
		_case_begin_4541042800:;
		{
			_136058_ok = false;
			return _136058_ok;
		}
		goto _match_end_4541041664;
		_case_end_4541042800:;
		if (!(((!(this->self->_method_check_fn_decl_result_dup(_136048_f)))))) { goto _case_end_4541042912; }
		_case_begin_4541042912:;
		{
			_136058_ok = false;
			return _136058_ok;
		}
		goto _match_end_4541041664;
		_case_end_4541042912:;
		if (!(((!(this->self->_method_check_fn_decl_types(_136048_f)))))) { goto _case_end_4541043024; }
		_case_begin_4541043024:;
		{
			_136058_ok = false;
			return _136058_ok;
		}
		goto _match_end_4541041664;
		_case_end_4541043024:;
		_case_begin_4541041824:;
		{
			_136058_ok = true;
			return _136058_ok;
		}
		goto _match_end_4541041664;
		_case_end_4541041824:;
		_match_end_4541041664:;
	}
}



inline void _1b622b76e_Sema::_method_check_trait_decl_method(jule::Ref<_1b6069348_Fn>& _137048_f) {
	if (_1ce35e3a0_is_ignore_ident(_137048_f->_field_ident)) {
		this->self->_method_push_err(_137048_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_fn_decl_prototype(_137048_f);
	_137048_f->_field_sema=this->self;
}



inline void _1b622b76e_Sema::_method_check_trait_decl_methods(jule::Ref<_1b61d7d79_Trait>& _137949_t) {
	{
		jule::Int _1b622b76e_i = 0;
		for (auto _1b622b76e_f: _137949_t->_field_methods) {
			{
				this->self->_method_check_trait_decl_method(_1b622b76e_f);
				_137949_t->_field_mutable=_137949_t->_field_mutable || _1b622b76e_f->_field_params[0LL]->_field_mutable;
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					jule::Int _1b622b76e_j = 0;
					for (auto _1b622b76e_jf: _137949_t->_field_methods) {
						{
							{
								if (!((_1b622b76e_j >= _1b622b76e_i))) { goto _case_end_4541063280; }
								_case_begin_4541063280:;
								{
									goto _iter_end_4541060784;
								}
								goto _match_end_4541063056;
								_case_end_4541063280:;
								if (!((_1b622b76e_f->_field_ident == _1b622b76e_jf->_field_ident))) { goto _case_end_4541063392; }
								_case_begin_4541063392:;
								{
									this->self->_method_push_err(_1b622b76e_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b622b76e_f->_field_ident)}));
									this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_4541060784;
								}
								goto _match_end_4541063056;
								_case_end_4541063392:;
								_match_end_4541063056:;
							}
						}
					_iter_next_4541060784:;
					_1b622b76e_j++;
					}
					_iter_end_4541060784:;
				}
			}
		_iter_next_4541055056:;
		_1b622b76e_i++;
		}
		_iter_end_4541055056:;
	}
}



inline void _1b622b76e_Sema::_method_check_trait_decl(jule::Ref<_1b61d7d79_Trait>& _141141_t) {
	if (_1ce35e3a0_is_ignore_ident(_141141_t->_field_ident)) {
		this->self->_method_push_err(_141141_t->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_141141_t).alloc)),_141141_t->_field_ident,false)) {
		this->self->_method_push_err(_141141_t->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_141141_t->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_trait_decl_methods(_141141_t);
}



inline jule::Bool _1b622b76e_Sema::_method_check_trait_decls(void) {
	jule::Bool _142339_ok = jule::Bool();
	for (auto _1b622b76e_t: this->self->_field_file->_field_traits) {
		{
			this->self->_method_check_trait_decl(_1b622b76e_t);
			if (this->self->_field_errors.len() > 0LL) {
				_142339_ok = false;
				return _142339_ok;
			}
		}
	_iter_next_4541079392:;
	}
	_iter_end_4541079392:;
	_142339_ok = true;
	return _142339_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_trait_impl_methods(jule::Ref<_1b61d7d79_Trait>& _143548_base,jule::Ref<_1b61ddc92_Impl>& _143563_ipl) {
	jule::Bool _143577_ok = jule::Bool();
	_143577_ok=true;
	for (auto _1b622b76e_f: _143563_ipl->_field_methods) {
		{
			if ((!(jule::real(_143548_base->_method_find_method(_1b622b76e_f->_field_ident))))) {
				(*this)._method_push_err(_1b622b76e_f->_field_token,jule::Str("trait @ have not any define in this identifier: @", 49),jule::Slice<jule::Any>({jule::Any(_143548_base->_field_ident),jule::Any(_1b622b76e_f->_field_ident)}));
				_143577_ok=false;
			}
		}
	_iter_next_4541086256:;
	}
	_iter_end_4541086256:;
	return _143577_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_impl_to_struct(jule::Ref<_1ce385eed_Struct>& _144639_dest,jule::Ref<_1b61ddc92_Impl>& _144659_ipl) {
	jule::Bool _144673_ok = jule::Bool();
	_144673_ok=true;
	for (auto _1b622b76e_f: _144659_ipl->_field_methods) {
		{
			if (jule::real(_144639_dest->_method_find_method(_1b622b76e_f->_field_ident,_1b622b76e_f->_field_statically)) || jule::real(_144639_dest->_method_find_field(_1b622b76e_f->_field_ident))) {
				this->self->_method_push_err(_1b622b76e_f->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_144639_dest->_field_ident),jule::Any(_1b622b76e_f->_field_ident)}));
				_144673_ok=false;
				goto _iter_next_4541094720;
			}
			if ((_144639_dest->_field_generics.len() > 0LL) && (_1b622b76e_f->_field_generics.len() > 0LL)) {
				for (auto _1b622b76e_fg: _1b622b76e_f->_field_generics) {
					{
						for (auto _1b622b76e_dg: _144639_dest->_field_generics) {
							{
								if (_1b622b76e_fg->_field_ident == _1b622b76e_dg->_field_ident) {
									this->self->_method_push_err(_1b622b76e_fg->_field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>({}));
									_144673_ok=false;
								}
							}
						_iter_next_4541103840:;
						}
						_iter_end_4541103840:;
					}
				_iter_next_4541102112:;
				}
				_iter_end_4541102112:;
			}
			_1b622b76e_f->_field_sema=this->self;
			_1b622b76e_f->_field_owner=_144639_dest;
			_144639_dest->_field_methods=jule::append(_144639_dest->_field_methods,jule::Slice<jule::Ref<_1b6069348_Fn>>({_1b622b76e_f}));
		}
	_iter_next_4541094720:;
	}
	_iter_end_4541094720:;
	for (auto _1b622b76e_v: _144659_ipl->_field_statics) {
		{
			
			if (jule::real(_144639_dest->_method_find_method(_1b622b76e_v->_field_ident,true)) || jule::real(_144639_dest->_method_find_static(_1b622b76e_v->_field_ident))) {
				this->self->_method_push_err(_1b622b76e_v->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_144639_dest->_field_ident),jule::Any(_1b622b76e_v->_field_ident)}));
				_144673_ok=false;
				goto _iter_next_4541104656;
			}
			this->self->_method_check_var_decl(_1b622b76e_v,this->self);
			this->self->_method_check_type_var(_1b622b76e_v,this->self);
			_144639_dest->_field_statics=jule::append(_144639_dest->_field_statics,jule::Slice<jule::Ref<_1b637edab_Var>>({_1b622b76e_v}));
		}
	_iter_next_4541104656:;
	}
	_iter_end_4541104656:;
	return _144673_ok;
}



inline void _1b622b76e_Sema::_method_impl_trait(jule::Ref<_1b61ddc92_Impl>& _148935_decl) {
	jule::Ref<_1b61d7d79_Trait> _149017_base = this->self->_method_find_trait(_148935_decl->_field_base._field_kind);
	if ((!(jule::real(_149017_base)))) {
		_149017_base=_1b6c3ed86_find_builtin_trait(_148935_decl->_field_base._field_kind);
	}
	if ((!(jule::real(_149017_base)))) {
		this->self->_method_push_err(_148935_decl->_field_base,jule::Str("any valid base definition is not exist in this identifier: @", 60),jule::Slice<jule::Any>({jule::Any(_148935_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ref<_1ce385eed_Struct> _150317_dest = this->self->_method_find_struct(_148935_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_150317_dest)))) {
		this->self->_method_push_err(_148935_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_148935_decl->_field_dest._field_kind)}));
		return;
	}
	if (_150317_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_148935_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	_149017_base->_field_implemented=jule::append(_149017_base->_field_implemented,jule::Slice<jule::Ref<_1ce385eed_Struct>>({_150317_dest}));
	_150317_dest->_field_implements=jule::append(_150317_dest->_field_implements,jule::Slice<jule::Ref<_1b61d7d79_Trait>>({_149017_base}));
	if (_148935_decl->_field_statics.len() > 0LL) {
		this->self->_method_push_err(_148935_decl->_field_statics[0LL]->_field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>({}));
	}
	{
		if (!(((!(this->self->_method_check_trait_impl_methods(_149017_base,_148935_decl)))))) { goto _case_end_4541138592; }
		_case_begin_4541138592:;
		{
			return;
		}
		goto _match_end_4541134416;
		_case_end_4541138592:;
		if (!(((!(this->self->_method_impl_to_struct(_150317_dest,_148935_decl)))))) { goto _case_end_4541138688; }
		_case_begin_4541138688:;
		{
			return;
		}
		goto _match_end_4541134416;
		_case_end_4541138688:;
		_match_end_4541134416:;
	}
}



inline void _1b622b76e_Sema::_method_impl_struct(jule::Ref<_1b61ddc92_Impl>& _152736_decl) {
	
	jule::Ref<_1ce385eed_Struct> _153217_dest = this->self->_method_find_struct(_152736_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_153217_dest)))) {
		this->self->_method_push_err(_152736_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_152736_decl->_field_dest._field_kind)}));
		return;
	}
	if (_153217_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_152736_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!(((!(this->self->_method_impl_to_struct(_153217_dest,_152736_decl)))))) { goto _case_end_4541151088; }
		_case_begin_4541151088:;
		{
			return;
		}
		goto _match_end_4541149584;
		_case_end_4541151088:;
		_match_end_4541149584:;
	}
}



inline void _1b622b76e_Sema::_method_impl_impl(jule::Ref<_1b61ddc92_Impl>& _155034_decl) {
	{
		if (!((_155034_decl->_method_is_trait_impl()))) { goto _case_end_4541154000; }
		_case_begin_4541154000:;
		{
			this->self->_method_impl_trait(_155034_decl);
		}
		goto _match_end_4541153792;
		_case_end_4541154000:;
		if (!((_155034_decl->_method_is_struct_impl()))) { goto _case_end_4541154112; }
		_case_begin_4541154112:;
		{
			this->self->_method_impl_struct(_155034_decl);
		}
		goto _match_end_4541153792;
		_case_end_4541154112:;
		_match_end_4541153792:;
	}
}



inline void _1b622b76e_Sema::_method_check_var_decl(jule::Ref<_1b637edab_Var>& _155939_decl,jule::Trait<_1b6b746d3_Lookup> _155955_l) {
	if (_1ce35e3a0_is_ignore_ident(_155939_decl->_field_ident)) {
		this->self->_method_push_err(_155939_decl->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	if (_155939_decl->_method_is_type_inferred()) {
		if (_155939_decl->_field_statically) {
			this->self->_method_push_err(_155939_decl->_field_token,jule::Str("static variables must be have type annotation", 45),jule::Slice<jule::Any>({}));
		}
		if ((!(_155939_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_155939_decl->_field_token,jule::Str("type inference declarations should have a initializer", 53),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_check_type(_155939_decl->_field_kind,_155955_l);
	}
	if (_155939_decl->_field_constant && _155939_decl->_field_reference) {
		this->self->_method_push_err(_155939_decl->_field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>({}));
	}
	if ((!(_155939_decl->_method_is_initialized()))) {
		if (_155939_decl->_field_constant) {
			this->self->_method_push_err(_155939_decl->_field_token,jule::Str("constant variable must have initialize expression", 49),jule::Slice<jule::Any>({}));
		}
		if (_155939_decl->_field_statically) {
			this->self->_method_push_err(_155939_decl->_field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>({}));
		}
		if (_155939_decl->_field_reference) {
			this->self->_method_push_err(_155939_decl->_field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>({}));
		}
	}
}



inline void _1b622b76e_Sema::_method_check_global_var_decl(jule::Ref<_1b637edab_Var>& _159646_decl) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_159646_decl).alloc)),_159646_decl->_field_ident,_159646_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_159646_decl->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_159646_decl->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_159646_decl->_field_cpp_linked && _159646_decl->_field_constant) {
		this->self->_method_push_err(_159646_decl->_field_token,jule::Str("cpp linked variables cannot constant", 36),jule::Slice<jule::Any>({}));
	}
	if (((!(_159646_decl->_field_cpp_linked)) && (!(_159646_decl->_field_constant))) && (!(_159646_decl->_field_statically))) {
		this->self->_method_push_err(_159646_decl->_field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_var_decl(_159646_decl,this->self);
}



inline jule::Bool _1b622b76e_Sema::_method_check_global_decls(void) {
	jule::Bool _161340_ok = jule::Bool();
	for (auto _1b622b76e_decl: this->self->_field_file->_field_vars) {
		{
			this->self->_method_check_global_var_decl(_1b622b76e_decl);
			if (this->self->_field_errors.len() > 0LL) {
				_161340_ok = false;
				return _161340_ok;
			}
		}
	_iter_next_4541190080:;
	}
	_iter_end_4541190080:;
	_161340_ok = true;
	return _161340_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_struct_trait_impl(jule::Ref<_1ce385eed_Struct>& _162548_strct,jule::Ref<_1b61d7d79_Trait>& _162569_trt) {
	jule::Bool _162584_ok = jule::Bool();
	for (auto _1b622b76e_tf: _162569_trt->_field_methods) {
		{
			jule::Bool _162721_exist = false;
			jule::Ref<_1b6069348_Fn> _162821_sf = _162548_strct->_method_find_method(_1b622b76e_tf->_field_ident,_1b622b76e_tf->_field_statically);
			jule::Ref<_1b6069348_FnIns> _162917_tf_k = this->self->_method_get_trait_check_fn_kind(_1b622b76e_tf);
			if (jule::real(_162821_sf)) {
				jule::Ref<_1b6069348_FnIns> _163125_sf_k = this->self->_method_get_trait_check_fn_kind(_162821_sf);
				_162721_exist=((_162917_tf_k->_field_decl->_field_public == _163125_sf_k->_field_decl->_field_public) && (_162917_tf_k->_field_decl->_field_ident == _163125_sf_k->_field_decl->_field_ident)) && _162917_tf_k->_method_equals(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_163125_sf_k)));
			}
			if ((!(_162721_exist))) {
				
				jule::Str _164025_s = _162917_tf_k->_method_get_kind_str(true);
				if (_1b622b76e_tf->_field_public) {
					_164025_s=jule::Str("pub ", 4) + _164025_s;
				}
				this->self->_method_push_err(_162548_strct->_field_token,jule::Str("trait @ derived but not implemented trait's \"@\" define", 54),jule::Slice<jule::Any>({jule::Any(_162569_trt->_field_ident),jule::Any(_164025_s)}));
				_162584_ok=false;
			}
		}
	_iter_next_4541197152:;
	}
	_iter_end_4541197152:;
	return _162584_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_struct_impls(jule::Ref<_1ce385eed_Struct>& _165143_s) {
	jule::Bool _165157_ok = jule::Bool();
	_165157_ok=true;
	for (auto _1b622b76e_trt: _165143_s->_field_implements) {
		{
			_165157_ok=this->self->_method_check_struct_trait_impl(_165143_s,_1b622b76e_trt) && _165157_ok;
		}
	_iter_next_4541214304:;
	}
	_iter_end_4541214304:;
	_165157_ok = _165157_ok;
	return _165157_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_struct_fields(jule::Ref<_1ce385eed_Struct>& _165944_st) {
	jule::Bool _165959_ok = jule::Bool();
	_165959_ok=true;
	jule::Ref<_1b6703d45_TypeChecker> _166217_tc = jule::new_struct<_1b6703d45_TypeChecker>(new( std::nothrow ) _1b6703d45_TypeChecker(this->self,this->self,jule::new_struct<_1b6703d45_Referencer>(new( std::nothrow ) _1b6703d45_Referencer(_165944_st->_field_ident,jule::Any(_165944_st),nullptr)),_1ce35e3a0_Token(),_165944_st->_field_generics,jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>(),jule::Bool()));
	jule::I64 _167213_n = _165944_st->_field_instances.len();
	for (auto _1b622b76e_f: _165944_st->_field_fields) {
		{
			_1b622b76e_f->_field_owner=_165944_st;
			_1b622b76e_f->_field_kind->_field_kind=_166217_tc->_method_check_decl(_1b622b76e_f->_field_kind->_field_decl);
			_165959_ok=jule::real(_1b622b76e_f->_field_kind->_field_kind) && _165959_ok;
			for (auto _1b622b76e_cf: _165944_st->_field_fields) {
				{
					if (_1b622b76e_f == _1b622b76e_cf) {
						goto _iter_end_4541227456;
					} else if (_1b622b76e_f->_field_ident == _1b622b76e_cf->_field_ident) {
						this->self->_method_push_err(_1b622b76e_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b622b76e_f->_field_ident)}));
						this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
						_165959_ok=false;
					}
				}
			_iter_next_4541227456:;
			}
			_iter_end_4541227456:;
		}
	_iter_next_4541223088:;
	}
	_iter_end_4541223088:;
	if (_165959_ok && (_167213_n != _165944_st->_field_instances.len())) {
		jule::drop(_166217_tc->_field_referencer);
		_165944_st->_field_instances=_165944_st->_field_instances.slice(0LL,static_cast<jule::Int>(_167213_n));
		for (auto _1b622b76e_f: _165944_st->_field_fields) {
			{
				_1b622b76e_f->_field_kind->_field_kind=_166217_tc->_method_check_decl(_1b622b76e_f->_field_kind->_field_decl);
			}
		_iter_next_4541233568:;
		}
		_iter_end_4541233568:;
	}
	_165959_ok = _165959_ok;
	return _165959_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_struct_decl_methods(jule::Ref<_1ce385eed_Struct>& _170150_s) {
	jule::Bool _170164_ok = jule::Bool();
	for (auto _1b622b76e_m: _170150_s->_field_methods) {
		{
			if ((!(this->self->_method_check_fn_decl_types(_1b622b76e_m)))) {
				_170164_ok = false;
				return _170164_ok;
			}
		}
	_iter_next_4541239824:;
	}
	_iter_end_4541239824:;
	_170164_ok = true;
	return _170164_ok;
}



inline void _1b622b76e_Sema::_method_check_struct_decl(jule::Ref<_1ce385eed_Struct>& _171042_s) {
	if (_1ce35e3a0_is_ignore_ident(_171042_s->_field_ident)) {
		this->self->_method_push_err(_171042_s->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_171042_s).alloc)),_171042_s->_field_ident,_171042_s->_field_cpp_linked)) {
		this->self->_method_push_err(_171042_s->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_171042_s->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_171042_s->_field_sema=this->self;
	{
		if (!(((!(this->self->_method_check_decl_generics(_171042_s->_field_generics)))))) { goto _case_end_4541250800; }
		_case_begin_4541250800:;
		{
			return;
		}
		goto _match_end_4541245776;
		_case_end_4541250800:;
		if (!(((!(this->self->_method_check_struct_fields(_171042_s)))))) { goto _case_end_4541250912; }
		_case_begin_4541250912:;
		{
			return;
		}
		goto _match_end_4541245776;
		_case_end_4541250912:;
		if (!(((!(this->self->_method_check_struct_decl_methods(_171042_s)))))) { goto _case_end_4541251008; }
		_case_begin_4541251008:;
		{
			return;
		}
		goto _match_end_4541245776;
		_case_end_4541251008:;
		if (!(((!(this->self->_method_check_struct_impls(_171042_s)))))) { goto _case_end_4541251104; }
		_case_begin_4541251104:;
		{
			return;
		}
		goto _match_end_4541245776;
		_case_end_4541251104:;
		_match_end_4541245776:;
	}
}



inline jule::Bool _1b622b76e_Sema::_method_check_struct_decls(void) {
	jule::Bool _172840_ok = jule::Bool();
	for (auto _1b622b76e_s: this->self->_field_file->_field_structs) {
		{
			this->self->_method_check_struct_decl(_1b622b76e_s);
			if (this->self->_field_errors.len() > 0LL) {
				_172840_ok = false;
				return _172840_ok;
			}
		}
	_iter_next_4541257456:;
	}
	_iter_end_4541257456:;
	_172840_ok = true;
	return _172840_ok;
}



inline void _1b622b76e_Sema::_method_check_fn_decl(jule::Ref<_1b6069348_Fn>& _174138_f) {
	if (_1ce35e3a0_is_ignore_ident(_174138_f->_field_ident)) {
		this->self->_method_push_err(_174138_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_174138_f).alloc)),_174138_f->_field_ident,_174138_f->_field_cpp_linked)) {
		this->self->_method_push_err(_174138_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_174138_f->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_174138_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_174138_f);
}



inline jule::Bool _1b622b76e_Sema::_method_check_fn_decls(void) {
	jule::Bool _175436_ok = jule::Bool();
	for (auto _1b622b76e_f: this->self->_field_file->_field_funcs) {
		{
			this->self->_method_check_fn_decl(_1b622b76e_f);
			if (this->self->_field_errors.len() > 0LL) {
				_175436_ok = false;
				return _175436_ok;
			}
		}
	_iter_next_4541272000:;
	}
	_iter_end_4541272000:;
	_175436_ok = true;
	return _175436_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_directive_pass(_1ce50a46e_Pass& _176640_pass) {
	jule::Bool _176654_ok = jule::Bool();
	if (_176640_pass._field_text == jule::Str("", 0)) {
		_176654_ok = true;
		return _176654_ok;
	}
	if (_176640_pass._field_text[0LL] != '-') {
		(*this)._method_push_err(_176640_pass._field_token,jule::Str("the pass directive must be start with dash", 42),jule::Slice<jule::Any>({}));
		_176654_ok = false;
		return _176654_ok;
	}
	_176654_ok = true;
	return _176654_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_passes(void) {
	jule::Bool _177933_ok = jule::Bool();
	_177933_ok=true;
	for (auto _1b622b76e_pass: (*this)._field_file->_field_passes) {
		{
			_177933_ok=(*this)._method_check_directive_pass(_1b622b76e_pass) && _177933_ok;
		}
	_iter_next_4541283920:;
	}
	_iter_end_4541283920:;
	return _177933_ok;
}



inline void _1b622b76e_Sema::_method_push_cycle_error(jule::Ref<_1ce385eed_Struct>& _178732_st1,jule::Ref<_1ce385eed_Struct>& _178747_st2,jule::Str& _178766_message) {
	
	jule::Str _179013_refers_to = _1e7690a81_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_178732_st1->_field_ident),jule::Any(_178747_st2->_field_ident)}));
	_178766_message=((_1ce50a46e_str_repeat(jule::Str(" ", 1),4LL) + _179013_refers_to) + jule::Str("\n", 1)) + _178766_message;
}



inline jule::Bool _1b622b76e_Sema::_method_check_cross_cycle(jule::Ref<_1ce385eed_Struct>& _179433_st1,jule::Ref<_1ce385eed_Struct>& _179448_st2,jule::Str& _179467_message) {
	for (auto _1b622b76e_u: _179448_st2->_field_uses) {
		{
			if ((_1b622b76e_u).alloc == (_179433_st1).alloc) {
				(*this)._method_push_cycle_error(_179448_st2,_1b622b76e_u,_179467_message);
				return false;
			}
			if ((!((*this)._method_check_cross_cycle(_179433_st1,_1b622b76e_u,_179467_message)))) {
				(*this)._method_push_cycle_error(_179448_st2,_1b622b76e_u,_179467_message);
				return false;
			}
		}
	_iter_next_4541296608:;
	}
	_iter_end_4541296608:;
	return true;
}



inline jule::Bool _1b622b76e_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _181053_derive,jule::Ref<_1ce385eed_Struct>& _181067_st1,jule::Ref<_1b6703d45_TypeKind>& _181086_k) {
	jule::Bool _1810102_ok = jule::Bool();
	jule::Ref<_1ce385eed_Struct> _181117_st2 = _1b6703d45_get_struct_from_kind(_181086_k);
	if ((!(jule::real(_181117_st2)))) {
		_1810102_ok = true;
		return _1810102_ok;
	}
	if ((_181067_st1).alloc == (_181117_st2).alloc) {
		(*this)._method_push_err(_181067_st1->_field_token,jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57),jule::Slice<jule::Any>({jule::Any(_181053_derive),jule::Any(_181067_st1->_field_ident)}));
		_1810102_ok = false;
		return _1810102_ok;
	}
	jule::Str _182317_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_181067_st1,_181117_st2,_182317_message)))) {
		jule::Str _182621_err_msg = _182317_message;
		_182317_message=jule::Str("", 0);
		(*this)._method_push_cycle_error(_181067_st1,_181117_st2,_182317_message);
		_182621_err_msg=_182621_err_msg + _182317_message;
		(*this)._method_push_err(_181067_st1->_field_token,jule::Str("illegal cross cycle for \"@\" derive;\n@", 37),jule::Slice<jule::Any>({jule::Any(_181053_derive),jule::Any(_182621_err_msg)}));
		_1810102_ok = false;
		return _1810102_ok;
	}
	_1810102_ok = true;
	return _1810102_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_struct_ins_derive_clone(jule::Ref<_1ce385eed_StructIns> _183752_st) {
	jule::Bool _183770_ok = jule::Bool();
	if ((!(_183752_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_183770_ok = true;
		return _183770_ok;
	}
	for (auto _1b622b76e_f: _183752_st->_field_fields) {
		{
			if ((!(jule::real(_1b622b76e_f->_field_kind))) || (!(_1b622b76e_f->_field_kind->_method_mutable()))) {
				goto _iter_next_4541318496;
			}
			if ((!(_1b622b76e_f->_field_kind->_method_supports_cloning()))) {
				(*this)._method_push_err(_183752_st->_field_decl->_field_token,jule::Str("type \"@\" is not compatible to derive \"@\"", 40),jule::Slice<jule::Any>({jule::Any(_1b622b76e_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				_183770_ok = false;
				return _183770_ok;
			}
			if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_183752_st->_field_decl,_1b622b76e_f->_field_kind)))) {
				_183770_ok = false;
				return _183770_ok;
			}
		}
	_iter_next_4541318496:;
	}
	_iter_end_4541318496:;
	_183770_ok = true;
	return _183770_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_struct_derive_clone(jule::Ref<_1ce385eed_Struct>& _186049_st) {
	jule::Bool _186064_ok = jule::Bool();
	_186064_ok = (*this)._method_check_struct_ins_derive_clone(_186049_st->_method_instance());
	return _186064_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_file_derives(void) {
	jule::Bool _186439_ok = jule::Bool();
	for (auto _1b622b76e_st: (*this)._field_file->_field_structs) {
		{
			_186439_ok=(*this)._method_check_struct_derive_clone(_1b622b76e_st);
			if ((!(_186439_ok))) {
				goto _iter_end_4541334176;
			}
		}
	_iter_next_4541334176:;
	}
	_iter_end_4541334176:;
	_186439_ok = _186439_ok;
	return _186439_ok;
}



inline void _1b622b76e_Sema::_method_check_package_derives(void) {
	for (auto _1b622b76e_f: (*this)._field_files) {
		{
			(*this)._method_set_current_file(_1b622b76e_f);
			jule::Bool _187917_ok = (*this)._method_check_file_derives();
			if ((!(_187917_ok))) {
				return;
			}
		}
	_iter_next_4541337760:;
	}
	_iter_end_4541337760:;
}



inline void _1b622b76e_Sema::_method_check_package_decls(void) {
	for (auto _1b622b76e_f: this->self->_field_files) {
		{
			this->self->_method_set_current_file(_1b622b76e_f);
			if ((!(this->self->_method_check_passes()))) {
				return;
			}
		}
	_iter_next_4541342560:;
	}
	_iter_end_4541342560:;
	for (auto _1b622b76e_f: this->self->_field_files) {
		{
			this->self->_method_set_current_file(_1b622b76e_f);
			if ((!(this->self->_method_check_type_alias_decls()))) {
				return;
			}
		}
	_iter_next_4541343120:;
	}
	_iter_end_4541343120:;
	for (auto _1b622b76e_f: this->self->_field_files) {
		{
			this->self->_method_set_current_file(_1b622b76e_f);
			if ((!(this->self->_method_check_trait_decls()))) {
				return;
			}
		}
	_iter_next_4541346064:;
	}
	_iter_end_4541346064:;
	for (auto _1b622b76e_f: this->self->_field_files) {
		{
			this->self->_method_set_current_file(_1b622b76e_f);
			if ((!(this->self->_method_check_global_decls()))) {
				return;
			}
		}
	_iter_next_4541348896:;
	}
	_iter_end_4541348896:;
	for (auto _1b622b76e_f: this->self->_field_files) {
		{
			this->self->_method_set_current_file(_1b622b76e_f);
			if ((!(this->self->_method_check_fn_decls()))) {
				return;
			}
		}
	_iter_next_4541351568:;
	}
	_iter_end_4541351568:;
	for (auto _1b622b76e_f: this->self->_field_files) {
		{
			this->self->_method_set_current_file(_1b622b76e_f);
			if ((!(this->self->_method_check_struct_decls()))) {
				return;
			}
		}
	_iter_next_4541354288:;
	}
	_iter_end_4541354288:;
	this->self->_method_check_package_derives();
}



inline void _1b622b76e_Sema::_method_check_data_for_type_inference(jule::Ref<_1b66db129_Data>& _193449_d,_1ce35e3a0_Token& _193460_err_token) {
	{
		if (!((_193449_d->_method_is_nil()))) { goto _case_end_4541362784; }
		_case_begin_4541362784:;
		{
			(*this)._method_push_err(_193460_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4541362576;
		_case_end_4541362784:;
		if (!((_193449_d->_method_is_void()))) { goto _case_end_4541362896; }
		_case_begin_4541362896:;
		{
			(*this)._method_push_err(_193460_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4541362576;
		_case_end_4541362896:;
		if (!((_193449_d->_field_kind->_field_variadic))) { goto _case_end_4541363008; }
		_case_begin_4541363008:;
		{
			(*this)._method_push_err(_193460_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4541362576;
		_case_end_4541363008:;
		_match_end_4541362576:;
	}
}



inline void _1b622b76e_Sema::_method_check_var(jule::Ref<_1b637edab_Var>& _194734_v) {
	if (_194734_v->_field_cpp_linked) {
		return;
	}
	if (_194734_v->_method_is_type_inferred()) {
		_194734_v->_field_kind=jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),_194734_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_type_inference(_194734_v->_field_value->_field_data,_194734_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ref<_1b6703d45_Arr> _195921_arr = _194734_v->_field_kind->_field_kind->_method_arr();
		if (jule::real(_195921_arr)) {
			if (_195921_arr->_field_auto) {
				jule::Ref<_1b6703d45_Arr> _196225_data_arr = _194734_v->_field_value->_field_data->_field_kind->_method_arr();
				if (jule::real(_196225_data_arr)) {
					_195921_arr->_field_n=_196225_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_194734_v->_field_reference,_194734_v->_field_kind->_field_kind,_194734_v->_field_value->_field_data,_194734_v->_field_value->_field_expr->_field_token,false);
	}
	if (_194734_v->_field_reference && (!(_1b6703d45_is_valid_for_ref(_194734_v->_field_kind->_field_kind)))) {
		this->self->_method_push_err(_194734_v->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_194734_v->_field_kind->_field_kind->_method_to_str())}));
	}
	this->self->_method_check_validity_for_init_expr(_194734_v->_field_mutable,_194734_v->_field_reference,_194734_v->_field_kind->_field_kind,_194734_v->_field_value->_field_data,_194734_v->_field_value->_field_expr->_field_token);
	if (_194734_v->_field_constant) {
		if ((!(_194734_v->_field_value->_field_data->_method_is_const()))) {
			this->self->_method_push_err(_194734_v->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
		}
	} else {
		jule::drop(_194734_v->_field_value->_field_data->_field_constant);
	}
	if (jule::real(_194734_v->_field_kind->_field_kind->_method_tup())) {
		jule::drop(_194734_v->_field_kind->_field_kind);
	}
}



inline void _1b622b76e_Sema::_method_check_type_var(jule::Ref<_1b637edab_Var>& _199739_decl,jule::Trait<_1b6b746d3_Lookup> _199755_l) {
	if (_199739_decl->_field_cpp_linked || (!(_199739_decl->_method_is_initialized()))) {
		return;
	}
	jule::Ref<_1b66db129_Eval> _200217_eval = ((jule::real(_199739_decl->_field_kind)) ? (this->self->_method_evalpd(_199755_l,_199739_decl->_field_kind->_field_kind,_199739_decl)) : (this->self->_method_evalpd(_199755_l,jule::new_ref<_1b6703d45_TypeKind>(),_199739_decl)));
	_199739_decl->_field_value->_field_data=_200217_eval->_method_eval_expr(_199739_decl->_field_value->_field_expr);
	if ((!(jule::real(_199739_decl->_field_value->_field_data)))) {
		return;
	}
	this->self->_method_check_var(_199739_decl);
}



inline void _1b622b76e_Sema::_method_check_global_types(void) {
	for (auto _1b622b76e_decl: this->self->_field_file->_field_vars) {
		{
			this->self->_method_check_type_var(_1b622b76e_decl,this->self);
		}
	_iter_next_4541420640:;
	}
	_iter_end_4541420640:;
}



inline void _1b622b76e_Sema::_method_check_type_method(jule::Ref<_1ce385eed_StructIns>& _202242_strct,jule::Ref<_1b6069348_Fn>& _202266_f) {
	if (_202266_f->_field_cpp_linked) {
		return;
	}
	if (_202266_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_202266_f->_field_instances.len() == 0LL) {
		jule::Ref<_1b6069348_FnIns> _203321_ins = _202266_f->_method_instance();
		_203321_ins->_field_owner=_202242_strct;
		_202266_f->_method_append_instance(_203321_ins);
		this->self->_method_reload_fn_ins_types(_203321_ins);
		_203321_ins->_field_reloaded=true;
	}
	for (auto _1b622b76e_ins: _202266_f->_field_instances) {
		{
			if (_1b622b76e_ins->_field_scope->_field_stmts.len() > 0LL) {
				goto _iter_next_4541427728;
			}
			this->self->_method_check_fn_ins(_1b622b76e_ins);
		}
	_iter_next_4541427728:;
	}
	_iter_end_4541427728:;
}



inline void _1b622b76e_Sema::_method_check_type_struct(jule::Ref<_1ce385eed_Struct>& _204942_strct) {
	if (_204942_strct->_field_cpp_linked) {
		return;
	}
	if (_204942_strct->_field_generics.len() > 0LL) {
		return;
	}
	if (_204942_strct->_field_instances.len() == 0LL) {
		jule::Ref<_1ce385eed_StructIns> _206021_ins = _204942_strct->_method_instance();
		_206021_ins->_field_checked=true;
		_204942_strct->_method_append_instance(_206021_ins);
	}
	for (auto _1b622b76e_ins: _204942_strct->_field_instances) {
		{
			for (auto _1b622b76e_f: _1b622b76e_ins->_field_methods) {
				{
					this->self->_method_check_type_method(_1b622b76e_ins,_1b622b76e_f);
				}
			_iter_next_4541445280:;
			}
			_iter_end_4541445280:;
		}
	_iter_next_4541441120:;
	}
	_iter_end_4541441120:;
}



inline void _1b622b76e_Sema::_method_check_struct_types(void) {
	for (auto _1b622b76e_s: this->self->_field_file->_field_structs) {
		{
			this->self->_method_check_type_struct(_1b622b76e_s);
		}
	_iter_next_4541447920:;
	}
	_iter_end_4541447920:;
}



inline void _1b622b76e_Sema::_method_check_rets(jule::Ref<_1b6069348_FnIns>& _207834_f) {
	if (_207834_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _208313_ok = _1b622b76e_has_ret(_207834_f->_field_scope);
	if ((!(_208313_ok))) {
		(*this)._method_push_err(_207834_f->_field_decl->_field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>({}));
	}
}



inline void _1b622b76e_Sema::_method_check_fn_ins_sc(jule::Ref<_1b6069348_FnIns>& _208939_f,jule::Ref<_1b61e873b_ScopeChecker>& _208955_sc) {
	if (_208939_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ref<_1b637edab_Var>> _209417_vars = _1b622b76e_build_ret_vars(_208939_f);
	_208955_sc->_field_table->_field_vars=jule::append(_208955_sc->_field_table->_field_vars,_209417_vars);
	_208955_sc->_field_table->_field_vars=jule::append(_208955_sc->_field_table->_field_vars,_1b622b76e_build_param_vars(_208939_f));
	_208955_sc->_field_table->_field_type_aliases=jule::append(_208955_sc->_field_table->_field_type_aliases,_1b622b76e_build_generic_type_aliases(_208939_f));
	_208955_sc->_method_check(_208939_f->_field_decl->_field_scope,_208939_f->_field_scope);
	if (_209417_vars.len() > 0LL) {
		jule::Slice<jule::Any> _210421_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_208939_f->_field_scope->_field_stmts.len() + _209417_vars.len())));
		for (auto _1b622b76e_v: _209417_vars) {
			{
				_210421_stmts=jule::append(_210421_stmts,jule::Slice<jule::Any>({jule::Any(_1b622b76e_v)}));
			}
		_iter_next_4541468864:;
		}
		_iter_end_4541468864:;
		_210421_stmts=jule::append(_210421_stmts,_208939_f->_field_scope->_field_stmts);
		_208939_f->_field_scope->_field_stmts=_210421_stmts;
	}
	(*this)._method_check_rets(_208939_f);
}



inline void _1b622b76e_Sema::_method_check_fn_ins(jule::Ref<_1b6069348_FnIns>& _211636_f) {
	if (_211636_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ref<_1b66b3a3b_SymbolTable> _212117_old = _211636_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_211636_f->_field_decl->_field_sema->_method_set_current_file(_212117_old);
	});
	jule::Ref<_1b66b3a3b_SymbolTable> _212317_file = _1b622b76e_find_file(_211636_f->_field_decl->_field_sema->_field_files,_211636_f->_field_decl->_field_token._field_file);
	if (jule::real(_212317_file)) {
		_211636_f->_field_decl->_field_sema->_method_set_current_file(_212317_file);
	}
	jule::Ref<_1b61e873b_ScopeChecker> _212817_sc = _1b61e873b_new_scope_checker(_211636_f->_field_decl->_field_sema,_211636_f);
	(*this)._method_check_fn_ins_sc(_211636_f,_212817_sc);
	if ((_211636_f->_field_decl->_field_sema).alloc != (&((*this)))) {
		(*this)._field_errors=jule::append((*this)._field_errors,_211636_f->_field_decl->_field_sema->_field_errors);
		_211636_f->_field_decl->_field_sema->_field_errors=nullptr;
	}
}



inline void _1b622b76e_Sema::_method_check_type_fn(jule::Ref<_1b6069348_Fn>& _213738_f) {
	if (_213738_f->_field_cpp_linked) {
		return;
	}
	if (_213738_f->_field_generics.len() > 0LL) {
		return;
	}
	for (auto _1b622b76e_ins: _213738_f->_field_instances) {
		{
			this->self->_method_check_fn_ins(_1b622b76e_ins);
		}
	_iter_next_4541489328:;
	}
	_iter_end_4541489328:;
}



inline void _1b622b76e_Sema::_method_precheck_type_fn(jule::Ref<_1b6069348_Fn>& _215241_f) {
	if (_215241_f->_field_cpp_linked) {
		return;
	}
	if (_215241_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_215241_f->_field_instances.len() == 0LL) {
		jule::Ref<_1b6069348_FnIns> _216321_ins = _215241_f->_method_instance();
		_215241_f->_field_instances=jule::append(_215241_f->_field_instances,jule::Slice<jule::Ref<_1b6069348_FnIns>>({_216321_ins}));
		this->self->_method_reload_fn_ins_types(_216321_ins);
		_216321_ins->_field_reloaded=true;
	}
}



inline jule::Bool _1b622b76e_Sema::_method_precheck_fn_types(void) {
	jule::Bool _217139_ok = jule::Bool();
	for (auto _1b622b76e_decl: this->self->_field_file->_field_funcs) {
		{
			this->self->_method_precheck_type_fn(_1b622b76e_decl);
		}
	_iter_next_4541501072:;
	}
	_iter_end_4541501072:;
	_217139_ok = true;
	return _217139_ok;
}



inline jule::Bool _1b622b76e_Sema::_method_check_fn_types(void) {
	jule::Bool _217936_ok = jule::Bool();
	for (auto _1b622b76e_decl: this->self->_field_file->_field_funcs) {
		{
			this->self->_method_check_type_fn(_1b622b76e_decl);
		}
	_iter_next_4541505360:;
	}
	_iter_end_4541505360:;
	_217936_ok = true;
	return _217936_ok;
}



inline void _1b622b76e_Sema::_method_check_package_types(void) {
	for (auto _1b622b76e_f: this->self->_field_files) {
		{
			this->self->_method_set_current_file(_1b622b76e_f);
			this->self->_method_check_global_types();
		}
	_iter_next_4541508800:;
	}
	_iter_end_4541508800:;
	for (auto _1b622b76e_f: this->self->_field_files) {
		{
			this->self->_method_set_current_file(_1b622b76e_f);
			this->self->_method_precheck_fn_types();
		}
	_iter_next_4541509216:;
	}
	_iter_end_4541509216:;
	for (auto _1b622b76e_f: this->self->_field_files) {
		{
			this->self->_method_set_current_file(_1b622b76e_f);
			this->self->_method_check_fn_types();
		}
	_iter_next_4541511968:;
	}
	_iter_end_4541511968:;
	for (auto _1b622b76e_f: this->self->_field_files) {
		{
			this->self->_method_set_current_file(_1b622b76e_f);
			this->self->_method_check_struct_types();
		}
	_iter_next_4541514336:;
	}
	_iter_end_4541514336:;
}



inline void _1b622b76e_Sema::_method_set_file_sema_fields(void) {
	for (auto _1b622b76e_f: this->self->_field_file->_field_funcs) {
		{
			_1b622b76e_f->_field_sema=this->self;
		}
	_iter_next_4541519952:;
	}
	_iter_end_4541519952:;
	for (auto _1b622b76e_st: this->self->_field_file->_field_structs) {
		{
			_1b622b76e_st->_field_sema=this->self;
		}
	_iter_next_4541520608:;
	}
	_iter_end_4541520608:;
}



inline void _1b622b76e_Sema::_method_set_sema_fields(void) {
	for (auto _1b622b76e_file: this->self->_field_files) {
		{
			this->self->_method_set_current_file(_1b622b76e_file);
			this->self->_method_set_file_sema_fields();
		}
	_iter_next_4541524400:;
	}
	_iter_end_4541524400:;
}



inline void _1b622b76e_Sema::_method_check(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>& _222730_files) {
	this->self->_field_files=_222730_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _1b622b76e_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b637edab_Var> _1b65a085c_RangeChecker::_method_build_var(jule::Ref<_1ce385d22_VarDecl>& _109529_decl) {
	jule::Ref<_1b637edab_Var> _109617_v = _1ce50a46e_build_var(_109529_decl);
	return _109617_v;
}



inline void _1b65a085c_RangeChecker::_method_set_size_key(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _1ce35e3a0_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("int", 3))))));
}



inline void _1b65a085c_RangeChecker::_method_check_range_expr_validity(jule::Ref<_1b66db129_Data>& _111949_d,jule::Ref<_1b637edab_Var>& _111960_key,jule::Ref<_1b6703d45_TypeKind>& _111976_k) {
	jule::Bool _112017__mut = _111960_key->_field_mutable;
	if (_112017__mut && (!(_111976_k->_method_mutable()))) {
		_112017__mut=false;
	}
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr(_112017__mut,_111960_key->_field_reference,_111960_key->_field_kind->_field_kind,_111949_d,(*this)._field_rang->_field_in_token);
}



inline void _1b65a085c_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1ce35e3a0_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1b6703d45_Slc> _113817_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),_113817_slc->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_113817_slc->_field_elem);
}



inline void _1b65a085c_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1ce35e3a0_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1b6703d45_Arr> _115117_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),_115117_arr->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_115117_arr->_field_elem);
}



inline void _1b65a085c_RangeChecker::_method_check_map_key_a(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _1ce35e3a0_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ref<_1b6703d45_Map> _116317_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),_116317_m->_field_key));
	jule::Ref<_1b66db129_Data> _116717_d = jule::new_ref<_1b66db129_Data>((*this)._field_d.get());
	_116717_d->_field_kind=_116317_m->_field_key;
	(*this)._method_check_range_expr_validity(_116717_d,(*this)._field_kind->_field_key_a,_116317_m->_field_key);
}



inline void _1b65a085c_RangeChecker::_method_check_map_key_b(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1ce35e3a0_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1b6703d45_Map> _117817_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),_117817_m->_field_val));
	jule::Ref<_1b66db129_Data> _118217_d = jule::new_ref<_1b66db129_Data>((*this)._field_d.get());
	_118217_d->_field_kind=_117817_m->_field_val;
	(*this)._method_check_range_expr_validity(_118217_d,(*this)._field_kind->_field_key_b,_117817_m->_field_val);
}



inline void _1b65a085c_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _1b65a085c_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1ce35e3a0_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _1b65a085c_RangeChecker::_method_check(void) {
	if (jule::real((*this)._field_d->_field_kind->_method_ref())) {
		(*this)._field_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_ExplicitDerefExprModel>(new( std::nothrow ) _1b61decc6_ExplicitDerefExprModel((*this)._field_d->_field_model)));
		(*this)._field_d->_field_kind=(*this)._field_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_slc())))) { goto _case_end_4542121008; }
		_case_begin_4542121008:;
		{
			(*this)._method_check_slice();
			return true;
		}
		goto _match_end_4542117472;
		_case_end_4542121008:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_arr())))) { goto _case_end_4542121104; }
		_case_begin_4542121104:;
		{
			(*this)._method_check_array();
			return true;
		}
		goto _match_end_4542117472;
		_case_end_4542121104:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_map())))) { goto _case_end_4542121200; }
		_case_begin_4542121200:;
		{
			(*this)._method_check_map();
			return true;
		}
		goto _match_end_4542117472;
		_case_end_4542121200:;
		_match_end_4542117472:;
	}
	jule::Ref<_1b6703d45_Prim> _122913_prim = (*this)._field_d->_field_kind->_method_prim();
	if (jule::real(_122913_prim) && _122913_prim->_method_is_str()) {
		(*this)._method_check_str();
		return true;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>({}));
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b65a085c_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1b66b3a3b_SymbolTable::_method_find_package(jule::Str _2535_ident) {
	for (auto _1b66b3a3b_pkg: (*this)._field_imports) {
		{
			if (_1b66b3a3b_pkg->_field_ident == _2535_ident) {
				return _1b66b3a3b_pkg;
			}
		}
	_iter_next_4542196416:;
	}
	_iter_end_4542196416:;
	return jule::new_ref<_1b623bb7a_ImportInfo>();
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1b66b3a3b_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)> _3737_selector) {
	if (_3737_selector == nullptr) {
		return jule::new_ref<_1b623bb7a_ImportInfo>();
	}
	for (auto _1b66b3a3b_pkg: (*this)._field_imports) {
		{
			if (_3737_selector(_1b66b3a3b_pkg)) {
				return _1b66b3a3b_pkg;
			}
		}
	_iter_next_4542200848:;
	}
	_iter_end_4542200848:;
	return jule::new_ref<_1b623bb7a_ImportInfo>();
}



inline jule::Ref<_1b637edab_Var> _1b66b3a3b_SymbolTable::_method_find_var(jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return (*this)._method___find_var(_5231_ident,_5243_cpp_linked,false);
}



inline jule::Ref<_1b6703d45_TypeAlias> _1b66b3a3b_SymbolTable::_method_find_type_alias(jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return (*this)._method___find_type_alias(_5838_ident,_5850_cpp_linked,false);
}



inline jule::Ref<_1ce385eed_Struct> _1b66b3a3b_SymbolTable::_method_find_struct(jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	for (auto _1b66b3a3b_s: (*this)._field_structs) {
		{
			if ((_1b66b3a3b_s->_field_ident == _6434_ident) && (_1b66b3a3b_s->_field_cpp_linked == _6446_cpp_linked)) {
				return _1b66b3a3b_s;
			}
		}
	_iter_next_4542209392:;
	}
	_iter_end_4542209392:;
	return jule::new_ref<_1ce385eed_Struct>();
}



inline jule::Ref<_1b6069348_Fn> _1b66b3a3b_SymbolTable::_method_find_fn(jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	for (auto _1b66b3a3b_f: (*this)._field_funcs) {
		{
			if ((_1b66b3a3b_f->_field_ident == _7530_ident) && (_1b66b3a3b_f->_field_cpp_linked == _7542_cpp_linked)) {
				return _1b66b3a3b_f;
			}
		}
	_iter_next_4542213744:;
	}
	_iter_end_4542213744:;
	return jule::new_ref<_1b6069348_Fn>();
}



inline jule::Ref<_1b61d7d79_Trait> _1b66b3a3b_SymbolTable::_method_find_trait(jule::Str _8633_ident) {
	for (auto _1b66b3a3b_t: (*this)._field_traits) {
		{
			if (_1b66b3a3b_t->_field_ident == _8633_ident) {
				return _1b66b3a3b_t;
			}
		}
	_iter_next_4542217280:;
	}
	_iter_end_4542217280:;
	return jule::new_ref<_1b61d7d79_Trait>();
}



inline jule::Ref<_1b61d7c58_Enum> _1b66b3a3b_SymbolTable::_method_find_enum(jule::Str _9732_ident) {
	for (auto _1b66b3a3b_e: (*this)._field_enums) {
		{
			if (_1b66b3a3b_e->_field_ident == _9732_ident) {
				return _1b66b3a3b_e;
			}
		}
	_iter_next_4542218464:;
	}
	_iter_end_4542218464:;
	return jule::new_ref<_1b61d7c58_Enum>();
}



inline jule::Ref<_1b637edab_Var> _1b66b3a3b_SymbolTable::_method___find_var(jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = (*this)._field_vars.len() - 1LL;
		for (; _11021_i >= 0LL; (_11021_i)--) {
			{
				jule::Ref<_1b637edab_Var> _11225_v = (*this)._field_vars[static_cast<jule::Int>(_11021_i)];
				if ((_11225_v->_field_ident == _10829_ident) && (_11225_v->_field_cpp_linked == _10841_cpp_linked)) {
					return _11225_v;
				}
			}
		_iter_next_4542226192:;
		}
		_iter_end_4542226192:;
	} else {
		for (auto _1b66b3a3b_v: (*this)._field_vars) {
			{
				if ((_1b66b3a3b_v->_field_ident == _10829_ident) && (_1b66b3a3b_v->_field_cpp_linked == _10841_cpp_linked)) {
					return _1b66b3a3b_v;
				}
			}
		_iter_next_4542225136:;
		}
		_iter_end_4542225136:;
	}
	return jule::new_ref<_1b637edab_Var>();
}



inline jule::Ref<_1b6703d45_TypeAlias> _1b66b3a3b_SymbolTable::_method___find_type_alias(jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = (*this)._field_type_aliases.len() - 1LL;
		for (; _12921_i >= 0LL; (_12921_i)--) {
			{
				jule::Ref<_1b6703d45_TypeAlias> _13125_ta = (*this)._field_type_aliases[static_cast<jule::Int>(_12921_i)];
				if ((_13125_ta->_field_ident == _12736_ident) && (_13125_ta->_field_cpp_linked == _12748_cpp_linked)) {
					return _13125_ta;
				}
			}
		_iter_next_4542236384:;
		}
		_iter_end_4542236384:;
	} else {
		for (auto _1b66b3a3b_ta: (*this)._field_type_aliases) {
			{
				if ((_1b66b3a3b_ta->_field_ident == _12736_ident) && (_1b66b3a3b_ta->_field_cpp_linked == _12748_cpp_linked)) {
					return _1b66b3a3b_ta;
				}
			}
		_iter_next_4542235328:;
		}
		_iter_end_4542235328:;
	}
	return jule::new_ref<_1b6703d45_TypeAlias>();
}



inline jule::Any _1b66b3a3b_SymbolTable::_method_def_by_ident(jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	for (auto _1b66b3a3b_v: (*this)._field_vars) {
		{
			if ((_1b66b3a3b_v->_field_ident == _14831_ident) && (_1b66b3a3b_v->_field_cpp_linked == _14843_cpp_linked)) {
				return jule::Any(_1b66b3a3b_v);
			}
		}
	_iter_next_4542245248:;
	}
	_iter_end_4542245248:;
	for (auto _1b66b3a3b_ta: (*this)._field_type_aliases) {
		{
			if ((_1b66b3a3b_ta->_field_ident == _14831_ident) && (_1b66b3a3b_ta->_field_cpp_linked == _14843_cpp_linked)) {
				return jule::Any(_1b66b3a3b_ta);
			}
		}
	_iter_next_4542248400:;
	}
	_iter_end_4542248400:;
	for (auto _1b66b3a3b_s: (*this)._field_structs) {
		{
			if ((_1b66b3a3b_s->_field_ident == _14831_ident) && (_1b66b3a3b_s->_field_cpp_linked == _14843_cpp_linked)) {
				return jule::Any(_1b66b3a3b_s);
			}
		}
	_iter_next_4542250880:;
	}
	_iter_end_4542250880:;
	for (auto _1b66b3a3b_f: (*this)._field_funcs) {
		{
			if ((_1b66b3a3b_f->_field_ident == _14831_ident) && (_1b66b3a3b_f->_field_cpp_linked == _14843_cpp_linked)) {
				return jule::Any(_1b66b3a3b_f);
			}
		}
	_iter_next_4542243280:;
	}
	_iter_end_4542243280:;
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	for (auto _1b66b3a3b_t: (*this)._field_traits) {
		{
			if (_1b66b3a3b_t->_field_ident == _14831_ident) {
				return jule::Any(_1b66b3a3b_t);
			}
		}
	_iter_next_4542255904:;
	}
	_iter_end_4542255904:;
	for (auto _1b66b3a3b_e: (*this)._field_enums) {
		{
			if (_1b66b3a3b_e->_field_ident == _14831_ident) {
				return jule::Any(_1b66b3a3b_e);
			}
		}
	_iter_next_4542251360:;
	}
	_iter_end_4542251360:;
	return jule::Any(nullptr);
}



inline jule::Bool _1b66b3a3b_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	for (auto _1b66b3a3b_v: (*this)._field_vars) {
		{
			if (((((jule::Uintptr)((_1b66b3a3b_v).alloc)) != _19534_itself) && (_1b66b3a3b_v->_field_ident == _19551_ident)) && (_1b66b3a3b_v->_field_cpp_linked == _19563_cpp_linked)) {
				return true;
			}
		}
	_iter_next_4542262832:;
	}
	_iter_end_4542262832:;
	for (auto _1b66b3a3b_ta: (*this)._field_type_aliases) {
		{
			if (((((jule::Uintptr)((_1b66b3a3b_ta).alloc)) != _19534_itself) && (_1b66b3a3b_ta->_field_ident == _19551_ident)) && (_1b66b3a3b_ta->_field_cpp_linked == _19563_cpp_linked)) {
				return true;
			}
		}
	_iter_next_4542263264:;
	}
	_iter_end_4542263264:;
	for (auto _1b66b3a3b_s: (*this)._field_structs) {
		{
			if (((((jule::Uintptr)((_1b66b3a3b_s).alloc)) != _19534_itself) && (_1b66b3a3b_s->_field_ident == _19551_ident)) && (_1b66b3a3b_s->_field_cpp_linked == _19563_cpp_linked)) {
				return true;
			}
		}
	_iter_next_4542269376:;
	}
	_iter_end_4542269376:;
	for (auto _1b66b3a3b_f: (*this)._field_funcs) {
		{
			if (((((jule::Uintptr)((_1b66b3a3b_f).alloc)) != _19534_itself) && (_1b66b3a3b_f->_field_ident == _19551_ident)) && (_1b66b3a3b_f->_field_cpp_linked == _19563_cpp_linked)) {
				return true;
			}
		}
	_iter_next_4542263680:;
	}
	_iter_end_4542263680:;
	if (_19563_cpp_linked) {
		return false;
	}
	for (auto _1b66b3a3b_t: (*this)._field_traits) {
		{
			if ((((jule::Uintptr)((_1b66b3a3b_t).alloc)) != _19534_itself) && (_1b66b3a3b_t->_field_ident == _19551_ident)) {
				return true;
			}
		}
	_iter_next_4542273456:;
	}
	_iter_end_4542273456:;
	for (auto _1b66b3a3b_e: (*this)._field_enums) {
		{
			if ((((jule::Uintptr)((_1b66b3a3b_e).alloc)) != _19534_itself) && (_1b66b3a3b_e->_field_ident == _19551_ident)) {
				return true;
			}
		}
	_iter_next_4542278288:;
	}
	_iter_end_4542278288:;
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b66b3a3b_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b66db129_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



inline jule::Bool _1b66db129_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_void();
}



inline jule::Bool _1b66db129_Data::_method_is_const(void) {
	return jule::real((*this)._field_constant);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b66db129_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "variadiced:" << _Src._field_variadiced << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b66db129_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1b66db129_Eval::_method_push_err(_1ce35e3a0_Token _26027_token,jule::Str _26041_fmt,jule::Slice<jule::Any> _26054_args) {
	(*this)._field_s->_method_push_err(_26027_token,_26041_fmt,_26054_args);
}



inline void _1b66db129_Eval::_method_push_suggestion(jule::Str _26534_fmt,jule::Slice<jule::Any> _26547_args) {
	(*this)._field_s->_method_push_suggestion(_26534_fmt,_26547_args);
}



inline jule::Bool _1b66db129_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _1b66db129_Eval::_method_is_global(void) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b622b76e_Sema>>())) { goto _case_end_4542295824; }
		_case_begin_4542295824:;
		{
			return true;
		}
		goto _match_end_4542294304;
		_case_end_4542295824:;
		_case_begin_4542293776:;
		{
			return false;
		}
		goto _match_end_4542294304;
		_case_end_4542293776:;
		_match_end_4542294304:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_lit_nil(void) {
	jule::Ref<_1b6d4076c_Const> _28417_constant = _1b6d4076c_Const::_static_method_new_nil();
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_28417_constant),false,_28417_constant));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_lit_str(jule::Ref<_1ce385d22_LitExpr> _29522_lt) {
	jule::Str _29617_s = _29522_lt->_field_value.slice(1LL,static_cast<jule::Int>(_29522_lt->_field_value.len() - 1LL));
	if (_1ce35e3a0_is_raw_str(_29522_lt->_field_value)) {
		_29617_s=_1b6e98d37_to_raw_str(static_cast<jule::Slice<jule::U8>>(_29617_s));
	} else {
		_29617_s=_1b6e98d37_to_str(static_cast<jule::Slice<jule::U8>>(_29617_s));
	}
	jule::Ref<_1b6d4076c_Const> _30217_constant = _1b6d4076c_Const::_static_method_new_str(_29617_s);
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("str", 3)))),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_30217_constant),false,_30217_constant));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_lit_bool(jule::Ref<_1ce385d22_LitExpr> _31623_lit) {
	jule::Ref<_1b6d4076c_Const> _31717_constant = _1b6d4076c_Const::_static_method_new_bool(_31623_lit->_field_value == jule::Str("true", 4));
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_31717_constant),false,_31717_constant));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_lit_rune(jule::Ref<_1ce385d22_LitExpr> _33023_l) {
	
	
	jule::Str _33413_lt = _33023_l->_field_value.slice(1LL,static_cast<jule::Int>(_33023_l->_field_value.len() - 1LL));
	jule::I32 _33513_r = _1b6e98d37_to_rune(static_cast<jule::Slice<jule::U8>>(_33413_lt));
	jule::Ref<_1b66db129_Data> _33617_data = jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::Ref<_1b6703d45_TypeKind>(),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,_1b6d4076c_Const::_static_method_new_i64(static_cast<jule::I64>(_33513_r))));
	jule::Bool _34313_is_ascii = _1b6e98d37_is_ascii(_33513_r);
	if (_34313_is_ascii) {
		_33617_data->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("u8", 2))));
	} else {
		_33617_data->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i32", 3))));
	}
	_33617_data->_field_model=jule::Any(jule::new_struct<_1b61decc6_RuneExprModel>(new( std::nothrow ) _1b61decc6_RuneExprModel(_33513_r)));
	_33617_data->_field_is_rune=true;
	return _33617_data;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_lit_float(jule::Ref<_1ce385d22_LitExpr> _35924_l) {
	
	jule::F64 _36214_f;
	std::tie(_36214_f,std::ignore) = _1e857a7c2_parse_float(_35924_l->_field_value,64LL);
	jule::Ref<_1b6d4076c_Const> _36317_constant = _1b6d4076c_Const::_static_method_new_f64(_36214_f);
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_36317_constant),false,_36317_constant));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_lit_int(jule::Ref<_1ce385d22_LitExpr> _37726_l) {
	
	jule::Str _38017_lit = _37726_l->_field_value;
	jule::Int _38117_base = 0LL;
	{
		if (!((_38017_lit.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4542339648; }
		_case_begin_4542339648:;
		{
			_38017_lit=_38017_lit.slice(2LL);
			_38117_base=16LL;
		}
		goto _match_end_4542338144;
		_case_end_4542339648:;
		if (!((_38017_lit.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4542339376; }
		_case_begin_4542339376:;
		{
			_38017_lit=_38017_lit.slice(2LL);
			_38117_base=2LL;
		}
		goto _match_end_4542338144;
		_case_end_4542339376:;
		if (!((_38017_lit.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4542339472; }
		_case_begin_4542339472:;
		{
			_38017_lit=_38017_lit.slice(2LL);
			_38117_base=8LL;
		}
		goto _match_end_4542338144;
		_case_end_4542339472:;
		if (!(((_38017_lit[0LL] == '0') && (_38017_lit.len() > 1LL)))) { goto _case_end_4542338544; }
		_case_begin_4542338544:;
		{
			_38017_lit=_38017_lit.slice(1LL);
			_38117_base=8LL;
		}
		goto _match_end_4542338144;
		_case_end_4542338544:;
		_case_begin_4542338256:;
		{
			_38117_base=10LL;
		}
		goto _match_end_4542338144;
		_case_end_4542338256:;
		_match_end_4542338144:;
	}
	jule::Ref<_1b66db129_Data> _40417_d = jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::Ref<_1b6703d45_TypeKind>(),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1b6d4076c_Const>()));
	jule::Any _41017_value = jule::Any(nullptr);
	jule::I64 _41114_sig;
	jule::Int _41119_err;
	std::tie(_41114_sig,_41119_err) = _1e7717cd4_parse_int(_38017_lit,_38117_base,64LL);
	if (_41119_err == 0LLU) {
		_41017_value=jule::Any(_41114_sig);
		_40417_d->_field_constant=_1b6d4076c_Const::_static_method_new_i64(_41114_sig);
	} else {
		jule::U64 _41618_unsig;
		jule::Int _41625_err;
		std::tie(_41618_unsig,_41625_err) = _1e7717cd4_parse_uint(_38017_lit,_38117_base,64LL);
		if (_41625_err != 0LLU) {
			(*this)._method_push_err(_37726_l->_field_token,jule::Str("arithmetic value overflow", 25),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>({}));
		}
		_40417_d->_field_constant=_1b6d4076c_Const::_static_method_new_u64(_41618_unsig);
		_41017_value=jule::Any(_41618_unsig);
	}
	_40417_d->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(_1b66db129_kind_by_bitsize(_41017_value))));
	_1b66db129_normalize_bitsize(_40417_d);
	_40417_d->_field_model=jule::Any(_40417_d->_field_constant);
	return _40417_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_lit_num(jule::Ref<_1ce385d22_LitExpr> _43526_l) {
	{
		if (!((_1ce35e3a0_is_float(_43526_l->_field_value)))) { goto _case_end_4542364128; }
		_case_begin_4542364128:;
		{
			return (*this)._method_lit_float(_43526_l);
		}
		goto _match_end_4542362624;
		_case_end_4542364128:;
		_case_begin_4542362784:;
		{
			return (*this)._method_lit_int(_43526_l);
		}
		goto _match_end_4542362624;
		_case_end_4542362784:;
		_match_end_4542362624:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_lit(jule::Ref<_1ce385d22_LitExpr> _44227_lit) {
	{
		if (!((_44227_lit->_method_is_nil()))) { goto _case_end_4542370064; }
		_case_begin_4542370064:;
		{
			return (*this)._method_lit_nil();
		}
		goto _match_end_4542367696;
		_case_end_4542370064:;
		if (!((_1ce35e3a0_is_str(_44227_lit->_field_value)))) { goto _case_end_4542369408; }
		_case_begin_4542369408:;
		{
			return (*this)._method_lit_str(_44227_lit);
		}
		goto _match_end_4542367696;
		_case_end_4542369408:;
		if (!((_1ce35e3a0_is_bool(_44227_lit->_field_value)))) { goto _case_end_4542369200; }
		_case_begin_4542369200:;
		{
			return (*this)._method_lit_bool(_44227_lit);
		}
		goto _match_end_4542367696;
		_case_end_4542369200:;
		if (!((_1ce35e3a0_is_rune(_44227_lit->_field_value)))) { goto _case_end_4542369296; }
		_case_begin_4542369296:;
		{
			return (*this)._method_lit_rune(_44227_lit);
		}
		goto _match_end_4542367696;
		_case_end_4542369296:;
		if (!((_1ce35e3a0_is_num(_44227_lit->_field_value)))) { goto _case_end_4542369792; }
		_case_begin_4542369792:;
		{
			return (*this)._method_lit_num(_44227_lit);
		}
		goto _match_end_4542367696;
		_case_end_4542369792:;
		_case_begin_4542367856:;
		{
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4542367696;
		_case_end_4542367856:;
		_match_end_4542367696:;
	}
}



inline jule::Any _1b66db129_Eval::_method_find_builtins(jule::Str _45332_ident) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b623bb7a_ImportInfo>>())) { goto _case_end_4542377152; }
		_case_begin_4542377152:;
		{
			jule::Any _45621_def = _1b66db129_find_builtins_import(_45332_ident,(*this)._field_lookup.operator jule::Ref<_1b623bb7a_ImportInfo>());
			if (_45621_def != nullptr) {
				return _45621_def;
			}
		}
		goto _match_end_4542377680;
		_case_end_4542377152:;
		if (!(_match_expr.type_is<jule::Ref<_1b622b76e_Sema>>())) { goto _case_end_4542377824; }
		_case_begin_4542377824:;
		{
			jule::Any _46221_def = _1b66db129_find_builtins_sema(_45332_ident,(*this)._field_lookup.operator jule::Ref<_1b622b76e_Sema>());
			if (_46221_def != nullptr) {
				return _46221_def;
			}
		}
		goto _match_end_4542377680;
		_case_end_4542377824:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_ScopeChecker>>())) { goto _case_end_4542377920; }
		_case_begin_4542377920:;
		{
			jule::Any _46821_def = _1b66db129_find_builtins_sema(_45332_ident,(*this)._field_lookup.operator jule::Ref<_1b61e873b_ScopeChecker>()->_field_s);
			if (_46821_def != nullptr) {
				return _46821_def;
			}
		}
		goto _match_end_4542377680;
		_case_end_4542377920:;
		_match_end_4542377680:;
	}
	return _1b6c3ed86_find_builtin_def(_45332_ident);
}



inline jule::Any _1b66db129_Eval::_method_get_def(jule::Str _47726_ident,jule::Bool _47738_cpp_linked) {
	if ((!(_47738_cpp_linked))) {
		jule::Ref<_1b61d7c58_Enum> _47921_enm = (*this)._field_lookup.get()._method_find_enum(_47726_ident);
		if (jule::real(_47921_enm)) {
			return jule::Any(_47921_enm);
		}
	}
	jule::Ref<_1b637edab_Var> _48517_v = (*this)._field_lookup.get()._method_find_var(_47726_ident,_47738_cpp_linked);
	if (jule::real(_48517_v)) {
		return jule::Any(_48517_v);
	}
	jule::Ref<_1b6069348_Fn> _49017_f = (*this)._field_lookup.get()._method_find_fn(_47726_ident,_47738_cpp_linked);
	if (jule::real(_49017_f)) {
		return jule::Any(_49017_f);
	}
	jule::Ref<_1ce385eed_Struct> _49517_s = (*this)._field_lookup.get()._method_find_struct(_47726_ident,_47738_cpp_linked);
	if (jule::real(_49517_s)) {
		return jule::Any(_49517_s);
	}
	jule::Ref<_1b6703d45_TypeAlias> _50017_ta = (*this)._field_lookup.get()._method_find_type_alias(_47726_ident,_47738_cpp_linked);
	if (jule::real(_50017_ta)) {
		return jule::Any(_50017_ta);
	}
	return (*this)._method_find_builtins(_47726_ident);
}



inline void _1b66db129_Eval::_method_push_reference(jule::Ref<_1ce50a46e_ReferenceStack> _50837_references) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_ScopeChecker>>())) { goto _case_end_4542409584; }
		_case_begin_4542409584:;
		{
			jule::Ref<_1b61e873b_ScopeChecker> _51121_sc = (*this)._field_lookup.operator jule::Ref<_1b61e873b_ScopeChecker>()->_method_get_root();
			if ((!(_50837_references->_method_exist_1(_51121_sc->_field_owner)))) {
				_50837_references->_method_push(jule::Any(_51121_sc->_field_owner));
			}
		}
		goto _match_end_4542408368;
		_case_end_4542409584:;
		_case_begin_4542407840:;
		{
			if (jule::real((*this)._field_owner) && (!(_50837_references->_method_exist_0((*this)._field_owner)))) {
				_50837_references->_method_push(jule::Any((*this)._field_owner));
			}
		}
		goto _match_end_4542408368;
		_case_end_4542407840:;
		_match_end_4542408368:;
	}
}



inline void _1b66db129_Eval::_method_push_reference_to_fn(jule::Ref<_1b6069348_FnIns> _52343_f) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_ScopeChecker>>())) { goto _case_end_4542408448; }
		_case_begin_4542408448:;
		{
			jule::Ref<_1b61e873b_ScopeChecker> _52621_sc = (*this)._field_lookup.operator jule::Ref<_1b61e873b_ScopeChecker>()->_method_get_root();
			if (_52621_sc->_field_owner->_field_decl->_method_is_init() && (!(_52621_sc->_field_owner->_field_references->_method_exist_1(_52343_f)))) {
				_52621_sc->_field_owner->_field_refers->_method_push(jule::Any(_52343_f));
			}
		}
		goto _match_end_4542429808;
		_case_end_4542408448:;
		_match_end_4542429808:;
	}
	(*this)._method_push_reference(_52343_f->_field_references);
}



inline void _1b66db129_Eval::_method_push_reference_to_var(jule::Ref<_1b637edab_Var> _53444_v) {
	if ((!(jule::real(_53444_v->_field_references)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_ScopeChecker>>())) { goto _case_end_4542456480; }
		_case_begin_4542456480:;
		{
			jule::Ref<_1b61e873b_ScopeChecker> _54121_sc = (*this)._field_lookup.operator jule::Ref<_1b61e873b_ScopeChecker>()->_method_get_root();
			if (_54121_sc->_field_owner->_field_decl->_method_is_init() && (!(_54121_sc->_field_owner->_field_references->_method_exist_0(_53444_v)))) {
				_54121_sc->_field_owner->_field_refers->_method_push(jule::Any(_53444_v));
			}
		}
		goto _match_end_4542456912;
		_case_end_4542456480:;
		_match_end_4542456912:;
	}
	(*this)._method_push_reference(_53444_v->_field_references);
}



inline void _1b66db129_Eval::_method_push_reference_to_struct(jule::Ref<_1ce385eed_StructIns> _55047_s) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_ScopeChecker>>())) { goto _case_end_4542466384; }
		_case_begin_4542466384:;
		{
			jule::Ref<_1b61e873b_ScopeChecker> _55321_sc = (*this)._field_lookup.operator jule::Ref<_1b61e873b_ScopeChecker>()->_method_get_root();
			if (_55321_sc->_field_owner->_field_decl->_method_is_init() && (!(_55321_sc->_field_owner->_field_references->_method_exist_2(_55047_s)))) {
				_55321_sc->_field_owner->_field_refers->_method_push(jule::Any(_55047_s));
			}
		}
		goto _match_end_4542466912;
		_case_end_4542466384:;
		_match_end_4542466912:;
	}
	(*this)._method_push_reference(_55047_s->_field_references);
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method___eval_enum(jule::Ref<_1b61d7c58_Enum> _56130_enm) {
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_56130_enm)),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),true,jule::new_ref<_1b6d4076c_Const>()));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_enum(jule::Ref<_1b61d7c58_Enum> _57332_enm,_1ce35e3a0_Token _57344_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_57332_enm->_field_public,_57332_enm->_field_token)))) {
		(*this)._method_push_err(_57344_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_57332_enm->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	return (*this)._method___eval_enum(_57332_enm);
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method___eval_struct(jule::Ref<_1ce385eed_StructIns> _58332_s) {
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_58332_s)),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_58332_s),true,jule::new_ref<_1b6d4076c_Const>()));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_struct(jule::Ref<_1ce385eed_StructIns> _59634_s,_1ce35e3a0_Token _59649_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_59634_s->_field_decl->_field_public,_59634_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_59649_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_59634_s->_field_decl->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	return (*this)._method___eval_struct(_59634_s);
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_fn_ins(jule::Ref<_1b6069348_FnIns> _60630_f) {
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_60630_f)),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_60630_f),false,jule::new_ref<_1b6d4076c_Const>()));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_fn(jule::Ref<_1b6069348_Fn> _61930_f,_1ce35e3a0_Token _61938_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_61930_f->_field_public,_61930_f->_field_token)))) {
		(*this)._method_push_err(_61938_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_61930_f->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b6069348_FnIns> _62617_ins = _61930_f->_method_instance();
	(*this)._method_push_reference_to_fn(_62617_ins);
	return (*this)._method_eval_fn_ins(_62617_ins);
}



inline void _1b66db129_Eval::_method_push_illegal_cycle_error(jule::Ref<_1b637edab_Var> _63143_v1,jule::Ref<_1b637edab_Var> _63153_v2,jule::Str& _63168_message) {
	
	jule::Str _63413_refers_to = _1e7690a81_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_63143_v1->_field_ident),jule::Any(_63153_v2->_field_ident)}));
	_63168_message=((_1ce50a46e_str_repeat(jule::Str(" ", 1),4LL) + _63413_refers_to) + jule::Str("\n", 1)) + _63168_message;
}



inline jule::Bool _1b66db129_Eval::_method_check_cross_cycle(jule::Ref<_1b637edab_Var> _63836_v,jule::Str& _63850_message) {
	for (auto _1b66db129_d: _63836_v->_field_depends) {
		{
			if ((_1b66db129_d).alloc == ((*this)._field_owner).alloc) {
				(*this)._method_push_illegal_cycle_error(_63836_v,_1b66db129_d,_63850_message);
				return false;
			}
			if ((!((*this)._method_check_cross_cycle(_1b66db129_d,_63850_message)))) {
				(*this)._method_push_illegal_cycle_error(_63836_v,_1b66db129_d,_63850_message);
				return false;
			}
		}
	_iter_next_4542525152:;
	}
	_iter_end_4542525152:;
	return true;
}



inline jule::Bool _1b66db129_Eval::_method_check_illegal_cycles(jule::Ref<_1b637edab_Var> _65743_v,_1ce35e3a0_Token _65752_decl_token) {
	jule::Bool _65773_ok = jule::Bool();
	if ((!(jule::real((*this)._field_owner)))) {
		_65773_ok = true;
		return _65773_ok;
	}
	if (((*this)._field_owner).alloc == (_65743_v).alloc) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_65773_ok = false;
		return _65773_ok;
	}
	jule::Str _66917_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_65743_v,_66917_message)))) {
		jule::Str _67221_err_msg = _66917_message;
		_66917_message=jule::Str("", 0);
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_65743_v,_66917_message);
		_67221_err_msg=_67221_err_msg + _66917_message;
		(*this)._method_push_err(_65752_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_67221_err_msg)}));
		_65773_ok = false;
		return _65773_ok;
	}
	(*this)._field_owner->_field_depends=jule::append((*this)._field_owner->_field_depends,jule::Slice<jule::Ref<_1b637edab_Var>>({_65743_v}));
	_65773_ok = true;
	return _65773_ok;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_var(jule::Ref<_1b637edab_Var> _68431_v,_1ce35e3a0_Token _68440_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_68431_v->_field_public,_68431_v->_field_token)))) {
		(*this)._method_push_err(_68440_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_68431_v->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	_68431_v->_field_used=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b622b76e_Sema>>())) { goto _case_end_4542547296; }
		_case_begin_4542547296:;
		{
			jule::Bool _69617_ok = (*this)._method_check_illegal_cycles(_68431_v,_68440_error_token);
			if ((!(_69617_ok))) {
				return jule::new_ref<_1b66db129_Data>();
			}
		}
		goto _match_end_4542551584;
		_case_end_4542547296:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_ScopeChecker>>())) { goto _case_end_4542551856; }
		_case_begin_4542551856:;
		{
			if ((!(_68431_v->_field_reference)) || (*this)._method_is_unsafe()) {
				goto _match_end_4542551584;
			}
			jule::Ref<_1b61e873b_ScopeChecker> _70621_s = (*this)._field_lookup.operator jule::Ref<_1b61e873b_ScopeChecker>();
			while ((!(jule::real(_70621_s->_field_owner))) && jule::real(_70621_s->_field_parent)) {
				{
					_70621_s=_70621_s->_field_parent;
				}
			_iter_next_4542555280:;
			}
			_iter_end_4542555280:;
			if ((jule::real(_70621_s->_field_owner) && _70621_s->_field_owner->_field_anon) && ((_68431_v->_field_scope).alloc != (_70621_s->_field_owner->_field_scope).alloc)) {
				(*this)._method_push_err(_68440_error_token,jule::Str("anonymous functions cannot access to reference \"@\" definition of parent scope", 77),jule::Slice<jule::Any>({jule::Any(_68431_v->_field_ident)}));
			}
		}
		goto _match_end_4542551584;
		_case_end_4542551856:;
		_match_end_4542551584:;
	}
	(*this)._method_push_reference_to_var(_68431_v);
	if ((!(_68431_v->_field_cpp_linked)) && ((!(jule::real(_68431_v->_field_value))) || (!(jule::real(_68431_v->_field_value->_field_data))))) {
		if (_68431_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_68431_v,(*this)._field_s);
			if ((!(jule::real(_68431_v->_field_value->_field_data)))) {
				return jule::new_ref<_1b66db129_Data>();
			}
		}
	}
	if ((!(jule::real(_68431_v->_field_kind))) || (!(jule::real(_68431_v->_field_kind->_field_kind)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b66db129_Data> _73217_d = jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(_68431_v->_field_kind->_field_kind->_method_clone(),jule::Ref<_1b6703d45_TypeKind>(),_68431_v->_field_mutable,_68431_v->_field_reference,(!(_68431_v->_field_constant)),jule::Bool(),jule::Bool(),jule::Any(_68431_v),false,jule::Ref<_1b6d4076c_Const>()));
	if (((!(_68431_v->_field_cpp_linked)) && _68431_v->_method_is_initialized()) && jule::real(_68431_v->_field_value->_field_data)) {
		_73217_d->_field_is_rune=_68431_v->_field_value->_field_data->_field_is_rune;
	}
	if (_68431_v->_field_constant && jule::real(_68431_v->_field_value->_field_data->_field_constant)) {
		_73217_d->_field_constant=jule::new_ref<_1b6d4076c_Const>(_68431_v->_field_value->_field_data->_field_constant.get());
		_73217_d->_field_model=jule::Any(_73217_d->_field_constant);
	}
	if (jule::real(_73217_d->_field_kind->_method_fnc())) {
		jule::Ref<_1b6069348_FnIns> _75121_f = _73217_d->_field_kind->_method_fnc();
		if (jule::real(_75121_f->_field_decl)) {
			_75121_f->_field_decl->_field_ident=_68431_v->_field_ident;
		}
	}
	return _73217_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_type_alias(jule::Ref<_1b6703d45_TypeAlias> _76238_ta,_1ce35e3a0_Token _76254_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_76238_ta->_field_public,_76238_ta->_field_token)))) {
		(*this)._method_push_err(_76254_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_76238_ta->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	_76238_ta->_field_used=true;
	jule::Trait<_1b6703d45_Kind> _77117_kind = _76238_ta->_field_kind->_field_kind->_field_kind;
	{
		auto _match_expr{ _77117_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ce385eed_StructIns>>())) { goto _case_end_4542595616; }
		_case_begin_4542595616:;
		{
			return (*this)._method___eval_struct(_77117_kind.operator jule::Ref<_1ce385eed_StructIns>());
		}
		goto _match_end_4542590416;
		_case_end_4542595616:;
		if (!(_match_expr.type_is<jule::Ref<_1b61d7c58_Enum>>())) { goto _case_end_4542590816; }
		_case_begin_4542590816:;
		{
			return (*this)._method___eval_enum(_77117_kind.operator jule::Ref<_1b61d7c58_Enum>());
		}
		goto _match_end_4542590416;
		_case_end_4542590816:;
		_case_begin_4542584736:;
		{
			jule::Ref<_1b66db129_Data> _78021_d = jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(_76238_ta->_field_kind->_field_kind->_method_clone(),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ref<_1b6d4076c_Const>()));
			_78021_d->_field_kind->_field_generic=_76238_ta->_field_generic;
			if (_76238_ta->_field_cpp_linked) {
				_78021_d->_field_kind->_field_cpp_ident=_76238_ta->_field_ident;
			}
			_78021_d->_field_model=jule::Any(_78021_d->_field_kind);
			return _78021_d;
		}
		goto _match_end_4542590416;
		_case_end_4542584736:;
		_match_end_4542590416:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_def(jule::Any _79731_def,_1ce35e3a0_Token _79741_ident) {
	{
		auto _match_expr{ _79731_def };
		if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4542605504; }
		_case_begin_4542605504:;
		{
			return (*this)._method_eval_var(_79731_def.operator jule::Ref<_1b637edab_Var>(),_79741_ident);
		}
		goto _match_end_4542601728;
		_case_end_4542605504:;
		if (!(_match_expr.type_is<jule::Ref<_1b61d7c58_Enum>>())) { goto _case_end_4542604848; }
		_case_begin_4542604848:;
		{
			return (*this)._method_eval_enum(_79731_def.operator jule::Ref<_1b61d7c58_Enum>(),_79741_ident);
		}
		goto _match_end_4542601728;
		_case_end_4542604848:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385eed_Struct>>())) { goto _case_end_4542605232; }
		_case_begin_4542605232:;
		{
			return (*this)._method_eval_struct(_79731_def.operator jule::Ref<_1ce385eed_Struct>()->_method_instance(),_79741_ident);
		}
		goto _match_end_4542601728;
		_case_end_4542605232:;
		if (!(_match_expr.type_is<jule::Ref<_1b6069348_Fn>>())) { goto _case_end_4542605328; }
		_case_begin_4542605328:;
		{
			return (*this)._method_eval_fn(_79731_def.operator jule::Ref<_1b6069348_Fn>(),_79741_ident);
		}
		goto _match_end_4542601728;
		_case_end_4542605328:;
		if (!(_match_expr.type_is<jule::Ref<_1b6069348_FnIns>>())) { goto _case_end_4542604464; }
		_case_begin_4542604464:;
		{
			return (*this)._method_eval_fn_ins(_79731_def.operator jule::Ref<_1b6069348_FnIns>());
		}
		goto _match_end_4542601728;
		_case_end_4542604464:;
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_TypeAlias>>())) { goto _case_end_4542604560; }
		_case_begin_4542604560:;
		{
			return (*this)._method_eval_type_alias(_79731_def.operator jule::Ref<_1b6703d45_TypeAlias>(),_79741_ident);
		}
		goto _match_end_4542601728;
		_case_end_4542604560:;
		_case_begin_4542601632:;
		{
			(*this)._method_push_err(_79741_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_79741_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4542601728;
		_case_end_4542601632:;
		_match_end_4542601728:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_ident(jule::Ref<_1ce385d22_IdentExpr> _82329_ident) {
	jule::Any _82417_def = (*this)._method_get_def(_82329_ident->_field_ident,_82329_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_82417_def,_82329_ident->_field_token);
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_unary_minus(jule::Ref<_1b66db129_Data> _82835_d) {
	jule::Ref<_1b6703d45_Prim> _82913_t = _82835_d->_field_kind->_method_prim();
	if ((!(jule::real(_82913_t))) || (!(_1b6e2b4c3_is_num(_82913_t->_method_to_str())))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_82835_d->_method_is_const()) {
		{
			if (!((_82835_d->_field_constant->_method_is_f64()))) { goto _case_end_4542625168; }
			_case_begin_4542625168:;
			{
				_82835_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_82835_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4542624928;
			_case_end_4542625168:;
			if (!((_82835_d->_field_constant->_method_is_i64()))) { goto _case_end_4542625280; }
			_case_begin_4542625280:;
			{
				_82835_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_82835_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4542624928;
			_case_end_4542625280:;
			if (!((_82835_d->_field_constant->_method_is_u64()))) { goto _case_end_4542625392; }
			_case_begin_4542625392:;
			{
				_82835_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_82835_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4542624928;
			_case_end_4542625392:;
			_match_end_4542624928:;
		}
		_1b66db129_normalize_type(_82835_d);
	}
	_82835_d->_field_lvalue=false;
	_82835_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_UnaryExprModel>(new( std::nothrow ) _1b61decc6_UnaryExprModel(_82835_d->_field_model,jule::Str("-", 1))));
	return _82835_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_unary_plus(jule::Ref<_1b66db129_Data> _85134_d) {
	jule::Ref<_1b6703d45_Prim> _85213_t = _85134_d->_field_kind->_method_prim();
	if ((!(jule::real(_85213_t))) || (!(_1b6e2b4c3_is_num(_85213_t->_method_to_str())))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_85134_d->_method_is_const()) {
		{
			if (!((_85134_d->_field_constant->_method_is_f64()))) { goto _case_end_4542640384; }
			_case_begin_4542640384:;
			{
				_85134_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_85134_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4542640144;
			_case_end_4542640384:;
			if (!((_85134_d->_field_constant->_method_is_i64()))) { goto _case_end_4542640496; }
			_case_begin_4542640496:;
			{
				_85134_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_85134_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4542640144;
			_case_end_4542640496:;
			if (!((_85134_d->_field_constant->_method_is_u64()))) { goto _case_end_4542640608; }
			_case_begin_4542640608:;
			{
				_85134_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_85134_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4542640144;
			_case_end_4542640608:;
			_match_end_4542640144:;
		}
		_1b66db129_normalize_type(_85134_d);
	}
	_85134_d->_field_lvalue=false;
	_85134_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_UnaryExprModel>(new( std::nothrow ) _1b61decc6_UnaryExprModel(_85134_d->_field_model,jule::Str("+", 1))));
	return _85134_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_unary_caret(jule::Ref<_1b66db129_Data> _87435_d) {
	jule::Ref<_1b6703d45_Prim> _87513_t = _87435_d->_field_kind->_method_prim();
	if ((!(jule::real(_87513_t))) || (!(_1b6e2b4c3_is_int(_87513_t->_method_to_str())))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_87435_d->_method_is_const()) {
		{
			if (!((_87435_d->_field_constant->_method_is_i64()))) { goto _case_end_4542655424; }
			_case_begin_4542655424:;
			{
				_87435_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_87435_d->_field_constant->_method_read_i64()))));
			}
			goto _match_end_4542655200;
			_case_end_4542655424:;
			if (!((_87435_d->_field_constant->_method_is_u64()))) { goto _case_end_4542655536; }
			_case_begin_4542655536:;
			{
				_87435_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_87435_d->_field_constant->_method_read_u64()))));
			}
			goto _match_end_4542655200;
			_case_end_4542655536:;
			_match_end_4542655200:;
		}
	}
	_87435_d->_field_lvalue=false;
	_87435_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_UnaryExprModel>(new( std::nothrow ) _1b61decc6_UnaryExprModel(_87435_d->_field_model,jule::Str("^", 1))));
	return _87435_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_unary_excl(jule::Ref<_1b66db129_Data> _89834_d) {
	jule::Ref<_1b6703d45_Prim> _89913_t = _89834_d->_field_kind->_method_prim();
	if ((!(jule::real(_89913_t))) || (!(_89913_t->_method_is_bool()))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_89834_d->_method_is_const()) {
		{
			if (!((_89834_d->_field_constant->_method_is_bool()))) { goto _case_end_4542667696; }
			_case_begin_4542667696:;
			{
				_89834_d->_field_constant->_method_set_bool((!(_89834_d->_field_constant->_method_read_bool())));
			}
			goto _match_end_4542665504;
			_case_end_4542667696:;
			_match_end_4542665504:;
		}
	}
	_89834_d->_field_lvalue=false;
	_89834_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_UnaryExprModel>(new( std::nothrow ) _1b61decc6_UnaryExprModel(_89834_d->_field_model,jule::Str("!", 1))));
	return _89834_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_unary_star(jule::Ref<_1b66db129_Data> _91938_d,_1ce35e3a0_Token _91948_op) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_91948_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b6703d45_Ptr> _92417_t = _91938_d->_field_kind->_method_ptr();
	if ((!(jule::real(_92417_t))) || _92417_t->_method_is_unsafe()) {
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::drop(_91938_d->_field_constant);
	_91938_d->_field_lvalue=true;
	_91938_d->_field_kind=_92417_t->_field_elem;
	_91938_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_UnaryExprModel>(new( std::nothrow ) _1b61decc6_UnaryExprModel(_91938_d->_field_model,jule::Str("*", 1))));
	return _91938_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_unary_amper(jule::Ref<_1b66db129_Data> _93835_d) {
	{
		auto _match_expr{ _93835_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_StructLitExprModel>>())) { goto _case_end_4542687712; }
		_case_begin_4542687712:;
		{
			jule::Ref<_1b61decc6_StructLitExprModel> _94121_lit = _93835_d->_field_model.operator jule::Ref<_1b61decc6_StructLitExprModel>();
			_93835_d->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6703d45_Ref>(new( std::nothrow ) _1b6703d45_Ref(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_94121_lit->_field_strct))))));
			_93835_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_AllocStructLitExprModel>(new( std::nothrow ) _1b61decc6_AllocStructLitExprModel(_94121_lit)));
		}
		goto _match_end_4542684352;
		_case_end_4542687712:;
		_case_begin_4542683808:;
		{
			{
				if (!((jule::real(_93835_d->_field_kind->_method_ref())))) { goto _case_end_4542686944; }
				_case_begin_4542686944:;
				{
					_93835_d->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6703d45_Ptr>(new( std::nothrow ) _1b6703d45_Ptr(_93835_d->_field_kind->_method_ref()->_field_elem->_method_clone()))));
					_93835_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_GetRefPtrExprModel>(new( std::nothrow ) _1b61decc6_GetRefPtrExprModel(_93835_d->_field_model)));
				}
				goto _match_end_4542685392;
				_case_end_4542686944:;
				if (!((_1b6703d45_can_get_ptr(_93835_d)))) { goto _case_end_4542686528; }
				_case_begin_4542686528:;
				{
					_93835_d->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6703d45_Ptr>(new( std::nothrow ) _1b6703d45_Ptr(_93835_d->_field_kind->_method_clone()))));
					_93835_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_UnaryExprModel>(new( std::nothrow ) _1b61decc6_UnaryExprModel(_93835_d->_field_model,jule::Str("&", 1))));
				}
				goto _match_end_4542685392;
				_case_end_4542686528:;
				_case_begin_4542685568:;
				{
					jule::drop(_93835_d);
				}
				goto _match_end_4542685392;
				_case_end_4542685568:;
				_match_end_4542685392:;
			}
		}
		goto _match_end_4542684352;
		_case_end_4542683808:;
		_match_end_4542684352:;
	}
	if (jule::real(_93835_d)) {
		jule::drop(_93835_d->_field_constant);
		_93835_d->_field_lvalue=true;
		_93835_d->_field_mutable=true;
	}
	return _93835_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_unary_type_decl(jule::Ref<_1b66db129_Data> _98543_d,jule::Ref<_1ce385d22_UnaryExpr> _98557_u) {
	_1b6703d45_TypeChecker _98617_tc = _1b6703d45_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1b6703d45_Referencer>(),_98557_u->_field_op,jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>(),jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>(),jule::Bool());
	{
		auto _match_expr{ _98557_u->_field_op._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4542707632; }
		_case_begin_4542707632:;
		{
			_98543_d->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_98617_tc._method_build_ptr_from_type(_98543_d->_field_kind)));
		}
		goto _match_end_4542704176;
		_case_end_4542707632:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4542708112; }
		_case_begin_4542708112:;
		{
			_98543_d->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_98617_tc._method_build_ref_from_type(_98543_d->_field_kind)));
		}
		goto _match_end_4542704176;
		_case_end_4542708112:;
		_case_begin_4542702128:;
		{
			(*this)._method_push_err(_98557_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_98557_u->_field_op._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4542704176;
		_case_end_4542702128:;
		_match_end_4542704176:;
	}
	_98543_d->_field_decl=true;
	return _98543_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_unary(jule::Ref<_1ce385d22_UnaryExpr> _100834_u) {
	jule::Ref<_1b6703d45_TypeKind> _100917_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_100917_prefix;
	});
	jule::Ref<_1b66db129_Data> _101317_d = this->self->_method_eval_expr_kind(_100834_u->_field_expr);
	if ((!(jule::real(_101317_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_101317_d->_field_decl) {
		return this->self->_method_eval_unary_type_decl(_101317_d,_100834_u);
	}
	jule::Ref<_1b6703d45_TypeKind> _102217_cast_kind = _101317_d->_field_cast_kind;
	{
		auto _match_expr{ _100834_u->_field_op._field_kind };
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4542723344; }
		_case_begin_4542723344:;
		{
			_101317_d=this->self->_method_eval_unary_minus(_101317_d);
		}
		goto _match_end_4542721968;
		_case_end_4542723344:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4542722928; }
		_case_begin_4542722928:;
		{
			_101317_d=this->self->_method_eval_unary_plus(_101317_d);
		}
		goto _match_end_4542721968;
		_case_end_4542722928:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4542723024; }
		_case_begin_4542723024:;
		{
			_101317_d=this->self->_method_eval_unary_caret(_101317_d);
		}
		goto _match_end_4542721968;
		_case_end_4542723024:;
		if (!((jule::Str("!", 1)) == _match_expr)) { goto _case_end_4542722272; }
		_case_begin_4542722272:;
		{
			_101317_d=this->self->_method_eval_unary_excl(_101317_d);
		}
		goto _match_end_4542721968;
		_case_end_4542722272:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4542722368; }
		_case_begin_4542722368:;
		{
			_101317_d=this->self->_method_eval_unary_star(_101317_d,_100834_u->_field_op);
		}
		goto _match_end_4542721968;
		_case_end_4542722368:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4542722464; }
		_case_begin_4542722464:;
		{
			_101317_d=this->self->_method_eval_unary_amper(_101317_d);
		}
		goto _match_end_4542721968;
		_case_end_4542722464:;
		_case_begin_4542720224:;
		{
			jule::drop(_101317_d);
		}
		goto _match_end_4542721968;
		_case_end_4542720224:;
		_match_end_4542721968:;
	}
	if ((!(jule::real(_101317_d)))) {
		this->self->_method_push_err(_100834_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_100834_u->_field_op._field_kind)}));
	} else if (_101317_d->_method_is_const()) {
		_101317_d->_field_model=jule::Any(_101317_d->_field_constant);
	} else if (jule::real(_102217_cast_kind)) {
		_101317_d->_field_cast_kind=_102217_cast_kind;
		_1b66db129_apply_cast_kind(_101317_d);
	}
	return _101317_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_variadic(jule::Ref<_1ce385d22_VariadicExpr> _104537_v) {
	jule::Ref<_1b6703d45_TypeKind> _104617_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_104617_prefix;
	});
	jule::Ref<_1b66db129_Data> _105017_d = this->self->_method_eval_expr_kind(_104537_v->_field_expr);
	if ((!(jule::real(_105017_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if (jule::real(_105017_d->_field_kind->_method_ref())) {
		_105017_d->_field_kind=_105017_d->_field_kind->_method_ref()->_field_elem;
		_105017_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_ExplicitDerefExprModel>(new( std::nothrow ) _1b61decc6_ExplicitDerefExprModel(_105017_d->_field_model)));
	}
	if ((!(_105017_d->_field_kind->_method_variadicable()))) {
		this->self->_method_push_err(_104537_v->_field_token,jule::Str("@ data-type is not variadicable", 31),jule::Slice<jule::Any>({jule::Any(_105017_d->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b66db129_Data>();
	}
	_105017_d->_field_variadiced=true;
	_105017_d->_field_kind=_105017_d->_field_kind->_method_slc()->_field_elem;
	_105017_d->_field_kind->_field_variadic=true;
	return _105017_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_unsafe(jule::Ref<_1ce385d22_UnsafeExpr> _107335_u) {
	jule::Bool _107413_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ref<_1b66db129_Data> _107717_d = this->self->_method_eval_expr_kind(_107335_u->_field_expr);
	this->self->_field_unsafety=_107413_unsafety;
	return _107717_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_arr(jule::Ref<_1ce385d22_SliceExpr> _108432_s) {
	jule::Ref<_1b6703d45_Arr> _108617_pt = this->self->_field_prefix->_method_arr();
	jule::Ref<_1b6703d45_Arr> _108817_arr = jule::new_struct<_1b6703d45_Arr>(new( std::nothrow ) _1b6703d45_Arr(false,0LL,_108617_pt->_field_elem));
	if (_108617_pt->_field_auto) {
		_108817_arr->_field_n=static_cast<jule::I64>(_108432_s->_field_elems.len());
	} else {
		_108817_arr->_field_n=static_cast<jule::I64>(_108432_s->_field_elems.len());
		if (_108817_arr->_field_n > _108617_pt->_field_n) {
			this->self->_method_push_err(_108432_s->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else if (_108817_arr->_field_n < _108617_pt->_field_n) {
			_108817_arr->_field_n=_108617_pt->_field_n;
		}
	}
	jule::Ref<_1b61decc6_ArrayExprModel> _110517_model = jule::new_struct<_1b61decc6_ArrayExprModel>(new( std::nothrow ) _1b61decc6_ArrayExprModel(_108817_arr,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_108432_s->_field_elems.len())))));
	jule::Ref<_1b6703d45_TypeKind> _111017_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_108817_arr->_field_elem;
	{
		jule::Int _1b66db129_i = 0;
		for (auto _1b66db129_elem: _108432_s->_field_elems) {
			{
				jule::Ref<_1b66db129_Data> _111321_d = this->self->_method_eval_expr_kind(_1b66db129_elem);
				if ((!(jule::real(_111321_d)))) {
					goto _iter_next_4542770272;
				}
				this->self->_field_s->_method_check_assign_type(false,_108817_arr->_field_elem,_111321_d,_108432_s->_field_token,true);
				_110517_model->_field_elems[static_cast<jule::Int>(_1b66db129_i)]=_111321_d->_field_model;
			}
		_iter_next_4542770272:;
		_1b66db129_i++;
		}
		_iter_end_4542770272:;
	}
	this->self->_field_prefix=_111017_prefix;
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_108817_arr)),jule::Ref<_1b6703d45_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_110517_model),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_exp_slc(jule::Ref<_1ce385d22_SliceExpr> _113036_s,jule::Ref<_1b6703d45_TypeKind> _113055_elem_type) {
	jule::Ref<_1b6703d45_Slc> _113117_slc = jule::new_struct<_1b6703d45_Slc>(new( std::nothrow ) _1b6703d45_Slc(_113055_elem_type));
	jule::Ref<_1b61decc6_SliceExprModel> _113517_model = jule::new_struct<_1b61decc6_SliceExprModel>(new( std::nothrow ) _1b61decc6_SliceExprModel(_113055_elem_type,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_113036_s->_field_elems.len())))));
	jule::Ref<_1b6703d45_TypeKind> _114017_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_113117_slc->_field_elem;
	{
		jule::Int _1b66db129_i = 0;
		for (auto _1b66db129_elem: _113036_s->_field_elems) {
			{
				jule::Ref<_1b66db129_Data> _114321_d = this->self->_method_eval_expr_kind(_1b66db129_elem);
				if ((!(jule::real(_114321_d)))) {
					goto _iter_next_4542788000;
				}
				this->self->_field_s->_method_check_assign_type(false,_113117_slc->_field_elem,_114321_d,_113036_s->_field_token,true);
				_113517_model->_field_elems[static_cast<jule::Int>(_1b66db129_i)]=_114321_d->_field_model;
			}
		_iter_next_4542788000:;
		_1b66db129_i++;
		}
		_iter_end_4542788000:;
	}
	this->self->_field_prefix=_114017_prefix;
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_113117_slc)),jule::Ref<_1b6703d45_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_113517_model),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_slice_expr(jule::Ref<_1ce385d22_SliceExpr> _116039_s) {
	if (jule::real(this->self->_field_prefix)) {
		{
			if (!((jule::real(this->self->_field_prefix->_method_arr())))) { goto _case_end_4542800816; }
			_case_begin_4542800816:;
			{
				return this->self->_method_eval_arr(_116039_s);
			}
			goto _match_end_4542800592;
			_case_end_4542800816:;
			if (!((jule::real(this->self->_field_prefix->_method_slc())))) { goto _case_end_4542800928; }
			_case_begin_4542800928:;
			{
				jule::Ref<_1b6703d45_Slc> _116725_pt = this->self->_field_prefix->_method_slc();
				return this->self->_method_eval_exp_slc(_116039_s,_116725_pt->_field_elem);
			}
			goto _match_end_4542800592;
			_case_end_4542800928:;
			_match_end_4542800592:;
		}
	}
	jule::Ref<_1b6703d45_TypeKind> _117217_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	if (_116039_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_116039_s->_field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b66db129_Data> _118017_first_elem = this->self->_method_eval_expr_kind(_116039_s->_field_elems[0LL]);
	if ((!(jule::real(_118017_first_elem)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b66db129_Data> _118517_d = this->self->_method_eval_exp_slc(_116039_s,_118017_first_elem->_field_kind);
	this->self->_field_prefix=_117217_prefix;
	return _118517_d;
}



inline void _1b66db129_Eval::_method_check_integer_indexing_by_data(jule::Ref<_1b66db129_Data> _119153_d,_1ce35e3a0_Token _119163_token) {
	jule::Str _119213_err_key = _1b66db129_check_data_for_integer_indexing(_119153_d);
	if (_119213_err_key != jule::Str("", 0)) {
		(*this)._method_push_err(_119163_token,_119213_err_key,jule::Slice<jule::Any>({}));
	}
}



inline void _1b66db129_Eval::_method_indexing_ptr(jule::Ref<_1b66db129_Data> _119835_d,jule::Ref<_1b66db129_Data> _119849_index,jule::Ref<_1ce385d22_IndexingExpr> _119863_i) {
	(*this)._method_check_integer_indexing_by_data(_119849_index,_119863_i->_field_token);
	jule::Ref<_1b6703d45_Ptr> _120117_ptr = _119835_d->_field_kind->_method_ptr();
	{
		if (!((_120117_ptr->_method_is_unsafe()))) { goto _case_end_4542824080; }
		_case_begin_4542824080:;
		{
			(*this)._method_push_err(_119863_i->_field_token,jule::Str("unsafe pointers not supports indexing", 37),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4542823840;
		_case_end_4542824080:;
		if (!(((!((*this)._method_is_unsafe()))))) { goto _case_end_4542824176; }
		_case_begin_4542824176:;
		{
			(*this)._method_push_err(_119863_i->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4542823840;
		_case_end_4542824176:;
		_match_end_4542823840:;
	}
	_119835_d->_field_kind=_120117_ptr->_field_elem->_method_clone();
}



inline void _1b66db129_Eval::_method_indexing_arr(jule::Ref<_1b66db129_Data> _121435_d,jule::Ref<_1b66db129_Data> _121449_index,jule::Ref<_1ce385d22_IndexingExpr> _121463_i) {
	jule::Ref<_1b6703d45_Arr> _121517_arr = _121435_d->_field_kind->_method_arr();
	_121435_d->_field_kind=_121517_arr->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_121449_index,_121463_i->_field_token);
	if (_121449_index->_method_is_const() && (_121449_index->_field_constant->_method_as_f64() >= static_cast<jule::F64>(_121517_arr->_field_n))) {
		(*this)._method_push_err(_121463_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
	}
}



inline void _1b66db129_Eval::_method_indexing_slc(jule::Ref<_1b66db129_Data> _122335_d,jule::Ref<_1b66db129_Data> _122348_index,jule::Ref<_1ce385d22_IndexingExpr> _122362_i) {
	jule::Ref<_1b6703d45_Slc> _122417_slc = _122335_d->_field_kind->_method_slc();
	_122335_d->_field_kind=_122417_slc->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_122348_index,_122362_i->_field_token);
}



inline void _1b66db129_Eval::_method_indexing_map(jule::Ref<_1b66db129_Data> _122935_d,jule::Ref<_1b66db129_Data> _122949_index,jule::Ref<_1ce385d22_IndexingExpr> _122967_i) {
	if ((!(jule::real(_122949_index)))) {
		return;
	}
	jule::Ref<_1b6703d45_Map> _123417_m = _122935_d->_field_kind->_method_map();
	_1b65a085c_AssignTypeChecker _123517_atc = _1b65a085c_AssignTypeChecker((*this)._field_s,_123417_m->_field_key,_122949_index,_122967_i->_field_token,true);
	_123517_atc._method_check();
	_122935_d->_field_kind=_123417_m->_field_val->_method_clone();
}



inline void _1b66db129_Eval::_method_indexing_str(jule::Ref<_1b66db129_Data> _124735_d,jule::Ref<_1b66db129_Data> _124749_index,jule::Ref<_1ce385d22_IndexingExpr> _124763_i) {
	
	_124735_d->_field_kind->_field_kind=_1b6703d45_build_prim_type(jule::Str("u8", 2));
	if ((!(jule::real(_124749_index)))) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_124749_index,_124763_i->_field_token);
	if ((!(_124749_index->_method_is_const()))) {
		jule::drop(_124735_d->_field_constant);
		return;
	}
	if (_124735_d->_method_is_const()) {
		_1ce35e3a0_Token _126317_error_token = _124763_i->_field_token;
		jule::I64 _126417_j = _124749_index->_field_constant->_method_as_i64();
		jule::Str _126517_s = _124735_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_126417_j) >= _126517_s.len()) {
			(*this)._method_push_err(_126317_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else {
			_124735_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_126517_s[static_cast<jule::Int>(_126417_j)]));
		}
	}
}



inline void _1b66db129_Eval::_method_to_indexing(jule::Ref<_1b66db129_Data> _127434_d,jule::Ref<_1b66db129_Data> _127448_index,jule::Ref<_1ce385d22_IndexingExpr> _127466_i) {
	{
		if (!((jule::real(_127434_d->_field_kind->_method_ptr())))) { goto _case_end_4542875216; }
		_case_begin_4542875216:;
		{
			(*this)._method_indexing_ptr(_127434_d,_127448_index,_127466_i);
			return;
		}
		goto _match_end_4542874944;
		_case_end_4542875216:;
		if (!((jule::real(_127434_d->_field_kind->_method_arr())))) { goto _case_end_4542875328; }
		_case_begin_4542875328:;
		{
			(*this)._method_indexing_arr(_127434_d,_127448_index,_127466_i);
			return;
		}
		goto _match_end_4542874944;
		_case_end_4542875328:;
		if (!((jule::real(_127434_d->_field_kind->_method_slc())))) { goto _case_end_4542875440; }
		_case_begin_4542875440:;
		{
			(*this)._method_indexing_slc(_127434_d,_127448_index,_127466_i);
			return;
		}
		goto _match_end_4542874944;
		_case_end_4542875440:;
		if (!((jule::real(_127434_d->_field_kind->_method_map())))) { goto _case_end_4542875552; }
		_case_begin_4542875552:;
		{
			(*this)._method_indexing_map(_127434_d,_127448_index,_127466_i);
			return;
		}
		goto _match_end_4542874944;
		_case_end_4542875552:;
		if (!((jule::real(_127434_d->_field_kind->_method_prim())))) { goto _case_end_4542875664; }
		_case_begin_4542875664:;
		{
			jule::Ref<_1b6703d45_Prim> _129317_prim = _127434_d->_field_kind->_method_prim();
			{
				if (!((_129317_prim->_method_is_str()))) { goto _case_end_4542885936; }
				_case_begin_4542885936:;
				{
					(*this)._method_indexing_str(_127434_d,_127448_index,_127466_i);
					return;
				}
				goto _match_end_4542885792;
				_case_end_4542885936:;
				_match_end_4542885792:;
			}
		}
		goto _match_end_4542874944;
		_case_end_4542875664:;
		_match_end_4542874944:;
	}
	(*this)._method_push_err(_127466_i->_field_token,jule::Str("@ data type is not support indexing", 35),jule::Slice<jule::Any>({jule::Any(_127434_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_ident_decl_from_indexing(jule::Ref<_1ce385d22_IndexingExpr> _130453_i) {
	{
		auto _match_expr{ _130453_i->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_IdentExpr>>())) { goto _case_end_4542894496; }
		goto _match_end_4542891744;
		_case_end_4542894496:;
		_case_begin_4542891200:;
		{
			this->self->_method_push_err(_130453_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4542891744;
		_case_end_4542891200:;
		_match_end_4542891744:;
	}
	jule::Ref<_1ce385d22_IdentTypeDecl> _131217_decl = jule::new_struct<_1ce385d22_IdentTypeDecl>(new( std::nothrow ) _1ce385d22_IdentTypeDecl(_1ce35e3a0_Token(),_130453_i->_field_expr.operator jule::Ref<_1ce385d22_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>()));
	{
		auto _match_expr{ _130453_i->_field_index };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_UnaryExpr>>())) { goto _case_end_4542899472; }
		_case_begin_4542899472:;
		{
			jule::Ref<_1b66db129_Data> _132021_d = this->self->_method_eval_unary(_130453_i->_field_index.operator jule::Ref<_1ce385d22_UnaryExpr>());
			if ((!(_132021_d->_field_decl))) {
				this->self->_method_push_err(_130453_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1b66db129_Data>();
			}
			_131217_decl->_field_generics=jule::append(_131217_decl->_field_generics,jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>({jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_1ce35e3a0_Token(),jule::Any(_132021_d->_field_kind)))}));
		}
		goto _match_end_4542896208;
		_case_end_4542899472:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TypeDecl>>())) { goto _case_end_4542896960; }
		_case_begin_4542896960:;
		{
			_131217_decl->_field_generics=jule::append(_131217_decl->_field_generics,jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>({_130453_i->_field_index.operator jule::Ref<_1ce385d22_TypeDecl>()}));
		}
		goto _match_end_4542896208;
		_case_end_4542896960:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_IdentExpr>>())) { goto _case_end_4542898816; }
		_case_begin_4542898816:;
		{
			_131217_decl->_field_generics=jule::append(_131217_decl->_field_generics,jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>({jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_1ce35e3a0_Token(),jule::Any(jule::new_struct<_1ce385d22_IdentTypeDecl>(new( std::nothrow ) _1ce385d22_IdentTypeDecl(_1ce35e3a0_Token(),_130453_i->_field_index.operator jule::Ref<_1ce385d22_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>())))))}));
		}
		goto _match_end_4542896208;
		_case_end_4542898816:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TupleExpr>>())) { goto _case_end_4542899200; }
		_case_begin_4542899200:;
		{
			for (auto _1b66db129_expr: _130453_i->_field_index.operator jule::Ref<_1ce385d22_TupleExpr>()->_field_expr) {
				{
					{
						auto _match_expr{ _1b66db129_expr->_field_kind };
						if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TypeDecl>>())) { goto _case_end_4542896784; }
						_case_begin_4542896784:;
						{
							_131217_decl->_field_generics=jule::append(_131217_decl->_field_generics,jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>({_1b66db129_expr->_field_kind.operator jule::Ref<_1ce385d22_TypeDecl>()}));
						}
						goto _match_end_4542912736;
						_case_end_4542896784:;
						if (!(_match_expr.type_is<jule::Ref<_1ce385d22_IdentExpr>>())) { goto _case_end_4542912816; }
						_case_begin_4542912816:;
						{
							_131217_decl->_field_generics=jule::append(_131217_decl->_field_generics,jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>({jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_1ce35e3a0_Token(),jule::Any(jule::new_struct<_1ce385d22_IdentTypeDecl>(new( std::nothrow ) _1ce385d22_IdentTypeDecl(_1ce35e3a0_Token(),_1b66db129_expr->_field_kind.operator jule::Ref<_1ce385d22_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1ce385d22_TypeDecl>>())))))}));
						}
						goto _match_end_4542912736;
						_case_end_4542912816:;
						_match_end_4542912736:;
					}
				}
			_iter_next_4542904752:;
			}
			_iter_end_4542904752:;
		}
		goto _match_end_4542896208;
		_case_end_4542899200:;
		_case_begin_4542894720:;
		{
			this->self->_method_push_err(_130453_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4542896208;
		_case_end_4542894720:;
		_match_end_4542896208:;
	}
	return this->self->_method_eval_type(jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_1ce35e3a0_Token(),jule::Any(_131217_decl))));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_indexing(jule::Ref<_1ce385d22_IndexingExpr> _135637_i) {
	jule::Ref<_1b6703d45_TypeKind> _135717_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_135717_prefix;
	});
	jule::Ref<_1b66db129_Data> _136117_d = this->self->_method_eval_expr_kind(_135637_i->_field_expr);
	if ((!(jule::real(_136117_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_136117_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_135637_i);
	}
	_1b66db129_Data _137117_old_d = _136117_d;
	jule::Ref<_1b66db129_Data> _137317_index = this->self->_method_eval_expr_kind(_135637_i->_field_index);
	if ((!(jule::real(_137317_index)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	this->self->_method_to_indexing(_136117_d,_137317_index,_135637_i);
	if (_136117_d->_method_is_const()) {
		_136117_d->_field_model=jule::Any(_136117_d->_field_constant);
	} else {
		_136117_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_IndexigExprModel>(new( std::nothrow ) _1b61decc6_IndexigExprModel(jule::new_ref<_1b66db129_Data>(_137117_old_d),_137317_index)));
	}
	return _136117_d;
}



inline std::tuple<jule::Ref<_1b66db129_Data>,jule::Ref<_1b66db129_Data>> _1b66db129_Eval::_method_eval_slicing_exprs(jule::Ref<_1ce385d22_SlicingExpr> _139542_s) {
	jule::Ref<_1b6703d45_TypeKind> _139617_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_139617_prefix;
	});
	jule::Ref<_1b66db129_Data> _140017_l = jule::new_ref<_1b66db129_Data>();
	jule::Ref<_1b66db129_Data> _140117_r = jule::new_ref<_1b66db129_Data>();
	if (_139542_s->_field_start != nullptr) {
		_140017_l=this->self->_method_eval_expr_kind(_139542_s->_field_start);
		if (jule::real(_140017_l)) {
			this->self->_method_check_integer_indexing_by_data(_140017_l,_139542_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_1b66db129_Data>(),jule::new_ref<_1b66db129_Data>());
		}
	} else {
		_140017_l=jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1b6d4076c_Const::_static_method_new_i64(0LL)));
		_140017_l->_field_model=jule::Any(_140017_l->_field_constant);
	}
	if (_139542_s->_field_to != nullptr) {
		_140117_r=this->self->_method_eval_expr_kind(_139542_s->_field_to);
		if (jule::real(_140117_r)) {
			this->self->_method_check_integer_indexing_by_data(_140117_r,_139542_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_1b66db129_Data>(),jule::new_ref<_1b66db129_Data>());
		}
	}
	return std::make_tuple(_140017_l,_140117_r);
}



inline void _1b66db129_Eval::_method_slicing_arr(jule::Ref<_1b66db129_Data> _143030_d) {
	jule::Ref<_1b6703d45_TypeKind> _143117_elem_type = _143030_d->_field_kind->_method_arr()->_field_elem->_method_clone();
	_143030_d->_field_kind->_field_kind=jule::new_struct<_1b6703d45_Slc>(new( std::nothrow ) _1b6703d45_Slc(_143117_elem_type));
	_143030_d->_field_lvalue=false;
	_143030_d->_field_mutable=_143030_d->_field_mutable || (!(_143117_elem_type->_method_mutable()));
}



inline void _1b66db129_Eval::_method_slicing_slc(jule::Ref<_1b66db129_Data> _144130_d) {
	_144130_d->_field_lvalue=false;
}



inline void _1b66db129_Eval::_method_slicing_str(jule::Ref<_1b66db129_Data> _144530_d,jule::Ref<_1b66db129_Data> _144540_l,jule::Ref<_1b66db129_Data> _144550_r) {
	_144530_d->_field_lvalue=false;
	_144530_d->_field_mutable=true;
	if ((!(_144530_d->_method_is_const()))) {
		return;
	}
	if ((!(jule::real(_144540_l))) || (!(jule::real(_144550_r)))) {
		jule::drop(_144530_d->_field_constant);
		return;
	}
	if (_144540_l->_method_is_const() && _144550_r->_method_is_const()) {
		jule::I64 _145817_left = _144540_l->_field_constant->_method_as_i64();
		if (_145817_left < 0LL) {
			return;
		}
		jule::Str _146317_s = _144530_d->_field_constant->_method_read_str();
		jule::I64 _146421_right = 0LL;
		if ((!(jule::real(_144550_r)))) {
			_146421_right=static_cast<jule::I64>(_146317_s.len());
		} else {
			_146421_right=static_cast<jule::I64>(_144550_r->_field_constant->_method_as_i64());
		}
		if (_145817_left > _146421_right) {
			return;
		}
		_144530_d->_field_constant->_method_set_str(_146317_s.slice(static_cast<jule::Int>(_145817_left),static_cast<jule::Int>(_146421_right)));
	} else {
		jule::drop(_144530_d->_field_constant);
	}
}



inline void _1b66db129_Eval::_method_check_slicing(jule::Ref<_1b66db129_Data> _148036_d,jule::Ref<_1b66db129_Data> _148046_l,jule::Ref<_1b66db129_Data> _148056_r,jule::Ref<_1ce385d22_SlicingExpr> _148066_s) {
	{
		if (!((jule::real(_148036_d->_field_kind->_method_arr())))) { goto _case_end_4542980576; }
		_case_begin_4542980576:;
		{
			(*this)._method_slicing_arr(_148036_d);
			return;
		}
		goto _match_end_4542980400;
		_case_end_4542980576:;
		if (!((jule::real(_148036_d->_field_kind->_method_slc())))) { goto _case_end_4542980688; }
		_case_begin_4542980688:;
		{
			(*this)._method_slicing_slc(_148036_d);
			return;
		}
		goto _match_end_4542980400;
		_case_end_4542980688:;
		if (!((jule::real(_148036_d->_field_kind->_method_prim())))) { goto _case_end_4542980800; }
		_case_begin_4542980800:;
		{
			jule::Ref<_1b6703d45_Prim> _149117_prim = _148036_d->_field_kind->_method_prim();
			{
				if (!((_149117_prim->_method_is_str()))) { goto _case_end_4542987424; }
				_case_begin_4542987424:;
				{
					(*this)._method_slicing_str(_148036_d,_148046_l,_148056_r);
					return;
				}
				goto _match_end_4542987280;
				_case_end_4542987424:;
				_match_end_4542987280:;
			}
		}
		goto _match_end_4542980400;
		_case_end_4542980800:;
		_match_end_4542980400:;
	}
	(*this)._method_push_err(_148066_s->_field_token,jule::Str("@ data type is not support slicing", 34),jule::Slice<jule::Any>({jule::Any(_148036_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_slicing(jule::Ref<_1ce385d22_SlicingExpr> _150236_s) {
	jule::Ref<_1b66db129_Data> _150317_d = this->self->_method_eval_expr_kind(_150236_s->_field_expr);
	if ((!(jule::real(_150317_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b66db129_Data> _150818_l;
	jule::Ref<_1b66db129_Data> _150825_r;
	std::tie(_150818_l,_150825_r) = this->self->_method_eval_slicing_exprs(_150236_s);
	if ((!(jule::real(_150818_l)))) {
		return _150317_d;
	}
	this->self->_method_check_slicing(_150317_d,_150818_l,_150825_r,_150236_s);
	jule::drop(_150317_d->_field_cast_kind);
	jule::Ref<_1b61decc6_SlicingExprModel> _151617_model = jule::new_struct<_1b61decc6_SlicingExprModel>(new( std::nothrow ) _1b61decc6_SlicingExprModel(_150317_d->_field_model,_150818_l->_field_model,jule::Any()));
	if (jule::real(_150825_r)) {
		_151617_model->_field_right=_150825_r->_field_model;
	}
	_150317_d->_field_model=jule::Any(_151617_model);
	return _150317_d;
}



inline void _1b66db129_Eval::_method_cast_ptr(jule::Ref<_1b6703d45_TypeKind> _152927_t,jule::Ref<_1b66db129_Data> _152945_d,_1ce35e3a0_Token _152955_error_token) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_152955_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1b6703d45_Prim> _153513_prim = _152945_d->_field_kind->_method_prim();
	if ((!(jule::real(_152945_d->_field_kind->_method_ptr()))) && ((!(jule::real(_153513_prim))) || (!(_1b6e2b4c3_is_int(_153513_prim->_method_to_str()))))) {
		(*this)._method_push_err(_152955_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_152945_d->_field_kind->_method_to_str()),jule::Any(_152927_t->_method_to_str())}));
	}
	jule::drop(_152945_d->_field_constant);
}



inline void _1b66db129_Eval::_method_cast_struct(jule::Ref<_1b6703d45_TypeKind> _154334_t,jule::Ref<_1b66db129_Data> _154352_d,_1ce35e3a0_Token _154362_error_token) {
	jule::Ref<_1b61d7d79_Trait> _154417_tr = _154352_d->_field_kind->_method_trt();
	if ((!(jule::real(_154417_tr)))) {
		(*this)._method_push_err(_154362_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_154352_d->_field_kind->_method_to_str()),jule::Any(_154334_t->_method_to_str())}));
		return;
	}
	jule::Ref<_1ce385eed_StructIns> _155017_s = jule::new_ref<_1ce385eed_StructIns>();
	if (jule::real(_154334_t->_method_ref())) {
		_155017_s=_154334_t->_method_ref()->_field_elem->_method_strct();
	} else {
		_155017_s=_154334_t->_method_strct();
	}
	(*this)._method_push_reference_to_struct(_155017_s);
	if ((!(_155017_s->_field_decl->_method_is_implements(_154417_tr)))) {
		(*this)._method_push_err(_154362_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_154352_d->_field_kind->_method_to_str()),jule::Any(_154334_t->_method_to_str())}));
	}
}



inline void _1b66db129_Eval::_method_cast_ref(jule::Ref<_1b6703d45_TypeKind> _156431_t,jule::Ref<_1b66db129_Data> _156449_d,_1ce35e3a0_Token _156459_error_token) {
	jule::Ref<_1b6703d45_Ref> _156517_ref = _156431_t->_method_ref();
	if (jule::real(_156517_ref->_field_elem->_method_strct())) {
		(*this)._method_cast_struct(_156431_t,_156449_d,_156459_error_token);
		return;
	}
	(*this)._method_push_err(_156459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_156449_d->_field_kind->_method_to_str()),jule::Any(_156431_t->_method_to_str())}));
}



inline void _1b66db129_Eval::_method_cast_slc(jule::Ref<_1b6703d45_TypeKind> _157431_t,jule::Ref<_1b66db129_Data> _157449_d,_1ce35e3a0_Token _157459_error_token) {
	if (jule::real(_157449_d->_field_kind->_method_enm())) {
		if ((!(jule::real(_157449_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()))) || (!(_157449_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_157459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_157449_d->_field_kind->_method_to_str()),jule::Any(_157431_t->_method_to_str())}));
			return;
		}
	} else if ((!(jule::real(_157449_d->_field_kind->_method_prim()))) || (!(_157449_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_157459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_157449_d->_field_kind->_method_to_str()),jule::Any(_157431_t->_method_to_str())}));
		return;
	}
	_157431_t=_157431_t->_method_slc()->_field_elem;
	jule::Ref<_1b6703d45_Prim> _158613_prim = _157431_t->_method_prim();
	if ((!(jule::real(_158613_prim))) || ((!(_158613_prim->_method_is_u8())) && (!(_158613_prim->_method_is_i32())))) {
		(*this)._method_push_err(_157459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_157449_d->_field_kind->_method_to_str()),jule::Any(_157431_t->_method_to_str())}));
	}
}



inline void _1b66db129_Eval::_method_cast_str(jule::Ref<_1b66db129_Data> _159231_d,_1ce35e3a0_Token _159241_error_token) {
	if (jule::real(_159231_d->_field_kind->_method_enm())) {
		jule::Ref<_1b61d7c58_Enum> _159421_e = _159231_d->_field_kind->_method_enm();
		if (jule::real(_159421_e->_field_kind->_field_kind->_method_prim()) && _159421_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (jule::real(_159231_d->_field_kind->_method_prim())) {
		jule::Ref<_1b6703d45_Prim> _160117_prim = _159231_d->_field_kind->_method_prim();
		if ((!(_160117_prim->_method_is_u8())) && (!(_160117_prim->_method_is_i32()))) {
			(*this)._method_push_err(_159241_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_159231_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if ((!(jule::real(_159231_d->_field_kind->_method_slc())))) {
		(*this)._method_push_err(_159241_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_159231_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ref<_1b6703d45_TypeKind> _161317_t = _159231_d->_field_kind->_method_slc()->_field_elem;
	jule::Ref<_1b6703d45_Prim> _161413_prim = _161317_t->_method_prim();
	if ((!(jule::real(_161413_prim))) || ((!(_161413_prim->_method_is_u8())) && (!(_161413_prim->_method_is_i32())))) {
		(*this)._method_push_err(_159241_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_159231_d->_field_kind->_method_to_str())}));
	}
}



inline void _1b66db129_Eval::_method_cast_int(jule::Ref<_1b6703d45_TypeKind> _162031_t,jule::Ref<_1b66db129_Data> _162049_d,_1ce35e3a0_Token _162059_error_token) {
	if (_162049_d->_method_is_const()) {
		jule::Ref<_1b6703d45_Prim> _162217_prim = _162031_t->_method_prim();
		{
			if (!((_1b6e2b4c3_is_sig_int(_162217_prim->_field_kind)))) { goto _case_end_4543084208; }
			_case_begin_4543084208:;
			{
				_162049_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_162049_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4543084048;
			_case_end_4543084208:;
			if (!((_1b6e2b4c3_is_unsig_int(_162217_prim->_field_kind)))) { goto _case_end_4543084320; }
			_case_begin_4543084320:;
			{
				_162049_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_162049_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4543084048;
			_case_end_4543084320:;
			_match_end_4543084048:;
		}
	}
	if (jule::real(_162049_d->_field_kind->_method_enm())) {
		jule::Ref<_1b61d7c58_Enum> _163317_e = _162049_d->_field_kind->_method_enm();
		if (_1b6e2b4c3_is_num(_163317_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (jule::real(_162049_d->_field_kind->_method_ptr())) {
		jule::Ref<_1b6703d45_Prim> _164017_prim = _162031_t->_method_prim();
		if (_164017_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_162059_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		} else if (((((!(_164017_prim->_method_is_i32())) && (!(_164017_prim->_method_is_i64()))) && (!(_164017_prim->_method_is_u16()))) && (!(_164017_prim->_method_is_u32()))) && (!(_164017_prim->_method_is_u64()))) {
			(*this)._method_push_err(_162059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_162049_d->_field_kind->_method_to_str()),jule::Any(_162031_t->_method_to_str())}));
		}
		return;
	}
	jule::Ref<_1b6703d45_Prim> _165113_prim = _162049_d->_field_kind->_method_prim();
	if (jule::real(_165113_prim) && _1b6e2b4c3_is_num(_165113_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_162059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_162049_d->_field_kind->_method_to_str()),jule::Any(_162031_t->_method_to_str())}));
}



inline void _1b66db129_Eval::_method_cast_num(jule::Ref<_1b6703d45_TypeKind> _165931_t,jule::Ref<_1b66db129_Data> _165949_d,_1ce35e3a0_Token _165959_error_token) {
	if (_165949_d->_method_is_const()) {
		jule::Ref<_1b6703d45_Prim> _166117_prim = _165931_t->_method_prim();
		{
			if (!((_1b6e2b4c3_is_float(_166117_prim->_field_kind)))) { goto _case_end_4543115136; }
			_case_begin_4543115136:;
			{
				_165949_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_165949_d->_field_constant->_method_as_f64()));
			}
			goto _match_end_4543114960;
			_case_end_4543115136:;
			if (!((_1b6e2b4c3_is_sig_int(_166117_prim->_field_kind)))) { goto _case_end_4543115248; }
			_case_begin_4543115248:;
			{
				_165949_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_165949_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4543114960;
			_case_end_4543115248:;
			if (!((_1b6e2b4c3_is_unsig_int(_166117_prim->_field_kind)))) { goto _case_end_4543115360; }
			_case_begin_4543115360:;
			{
				_165949_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_165949_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4543114960;
			_case_end_4543115360:;
			_match_end_4543114960:;
		}
	}
	if (jule::real(_165949_d->_field_kind->_method_enm())) {
		jule::Ref<_1b61d7c58_Enum> _167517_e = _165949_d->_field_kind->_method_enm();
		if (_1b6e2b4c3_is_num(_167517_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ref<_1b6703d45_Prim> _168113_prim = _165949_d->_field_kind->_method_prim();
	if (jule::real(_168113_prim) && _1b6e2b4c3_is_num(_168113_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_165959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_165949_d->_field_kind->_method_to_str()),jule::Any(_165931_t->_method_to_str())}));
}



inline void _1b66db129_Eval::_method_cast_prim(jule::Ref<_1b6703d45_TypeKind> _168932_t,jule::Ref<_1b66db129_Data> _168950_d,_1ce35e3a0_Token _168960_error_token) {
	jule::Ref<_1b6703d45_Prim> _169013_prim = _168932_t->_method_prim();
	{
		if (!((_169013_prim->_method_is_any()))) { goto _case_end_4543135536; }
		goto _match_end_4543134640;
		_case_end_4543135536:;
		if (!((_169013_prim->_method_is_str()))) { goto _case_end_4543135040; }
		_case_begin_4543135040:;
		{
			(*this)._method_cast_str(_168950_d,_168960_error_token);
		}
		goto _match_end_4543134640;
		_case_end_4543135040:;
		if (!((_1b6e2b4c3_is_int(_169013_prim->_method_to_str())))) { goto _case_end_4543135136; }
		_case_begin_4543135136:;
		{
			(*this)._method_cast_int(_168932_t,_168950_d,_168960_error_token);
		}
		goto _match_end_4543134640;
		_case_end_4543135136:;
		if (!((_1b6e2b4c3_is_num(_169013_prim->_method_to_str())))) { goto _case_end_4543135232; }
		_case_begin_4543135232:;
		{
			(*this)._method_cast_num(_168932_t,_168950_d,_168960_error_token);
		}
		goto _match_end_4543134640;
		_case_end_4543135232:;
		_case_begin_4543134752:;
		{
			(*this)._method_push_err(_168960_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_168932_t->_method_to_str())}));
		}
		goto _match_end_4543134640;
		_case_end_4543134752:;
		_match_end_4543134640:;
	}
}



inline void _1b66db129_Eval::_method_cast_constant(jule::Ref<_1b6703d45_TypeKind>& _170937_t,jule::Ref<_1b66db129_Data>& _170956_d) {
	jule::Ref<_1b6703d45_Prim> _171013_prim = _170937_t->_method_prim();
	if ((!(jule::real(_171013_prim))) || (!(_170956_d->_method_is_const()))) {
		return;
	}
	{
		if (!((_1b6e2b4c3_is_sig_int(_171013_prim->_field_kind)))) { goto _case_end_4543147952; }
		_case_begin_4543147952:;
		{
			_170956_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_170956_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4543147680;
		_case_end_4543147952:;
		if (!((_1b6e2b4c3_is_unsig_int(_171013_prim->_field_kind)))) { goto _case_end_4543148048; }
		_case_begin_4543148048:;
		{
			_170956_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_170956_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4543147680;
		_case_end_4543148048:;
		if (!((_1b6e2b4c3_is_float(_171013_prim->_field_kind)))) { goto _case_end_4543148144; }
		_case_begin_4543148144:;
		{
			_170956_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_170956_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4543147680;
		_case_end_4543148144:;
		_match_end_4543147680:;
	}
	_170956_d->_field_model=jule::Any(_170956_d->_field_constant);
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_cast_by_type_n_data(jule::Ref<_1b6703d45_TypeKind> _172947_t,jule::Ref<_1b66db129_Data> _172965_d,_1ce35e3a0_Token _172975_error_token) {
	{
		if (!((jule::real(_172965_d->_field_kind->_method_prim()) && _172965_d->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4543162016; }
		_case_begin_4543162016:;
		{
			if (jule::real(_172947_t->_method_enm())) {
				(*this)._method_push_err(_172975_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>({}));
				(*this)._method_push_suggestion(jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4543159232;
		_case_end_4543162016:;
		if (!((jule::real(_172947_t->_method_ptr())))) { goto _case_end_4543162240; }
		_case_begin_4543162240:;
		{
			(*this)._method_cast_ptr(_172947_t,_172965_d,_172975_error_token);
		}
		goto _match_end_4543159232;
		_case_end_4543162240:;
		if (!((jule::real(_172947_t->_method_ref())))) { goto _case_end_4543159696; }
		_case_begin_4543159696:;
		{
			(*this)._method_cast_ref(_172947_t,_172965_d,_172975_error_token);
		}
		goto _match_end_4543159232;
		_case_end_4543159696:;
		if (!((jule::real(_172947_t->_method_slc())))) { goto _case_end_4543159792; }
		_case_begin_4543159792:;
		{
			(*this)._method_cast_slc(_172947_t,_172965_d,_172975_error_token);
		}
		goto _match_end_4543159232;
		_case_end_4543159792:;
		if (!((jule::real(_172947_t->_method_strct())))) { goto _case_end_4543159888; }
		_case_begin_4543159888:;
		{
			(*this)._method_cast_struct(_172947_t,_172965_d,_172975_error_token);
		}
		goto _match_end_4543159232;
		_case_end_4543159888:;
		if (!((jule::real(_172947_t->_method_prim())))) { goto _case_end_4543159984; }
		_case_begin_4543159984:;
		{
			(*this)._method_cast_prim(_172947_t,_172965_d,_172975_error_token);
		}
		goto _match_end_4543159232;
		_case_end_4543159984:;
		_case_begin_4543159408:;
		{
			(*this)._method_push_err(_172975_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_172947_t->_method_to_str())}));
			jule::drop(_172965_d);
		}
		goto _match_end_4543159232;
		_case_end_4543159408:;
		_match_end_4543159232:;
	}
	if ((!(jule::real(_172965_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	_172965_d->_field_mutable=_172965_d->_field_mutable || ((!(_172965_d->_field_kind->_method_mutable())) && _172947_t->_method_mutable());
	_172965_d->_field_lvalue=_172947_t->_method_lvalue();
	_172965_d->_field_decl=false;
	(*this)._method_cast_constant(_172947_t,_172965_d);
	if ((!(jule::real(_172965_d->_field_kind->_method_enm()))) || (_172965_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_to_str() != _172947_t->_method_to_str())) {
		_172965_d->_field_cast_kind=_172947_t;
	} else {
		_172965_d->_field_kind=_172947_t;
	}
	return _172965_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_cast(jule::Ref<_1ce385d22_CastExpr> _177933_c) {
	jule::Ref<_1b6703d45_TypeSymbol> _178017_t = _1ce50a46e_build_type(_177933_c->_field_kind);
	jule::Bool _178113_ok = this->self->_field_s->_method_check_type(_178017_t,this->self->_field_lookup);
	if ((!(_178113_ok))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b6703d45_TypeKind> _178617_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_178617_prefix;
	});
	jule::Ref<_1b66db129_Data> _179017_d = this->self->_method_eval_expr_kind(_177933_c->_field_expr);
	if ((!(jule::real(_179017_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	_179017_d=this->self->_method_eval_cast_by_type_n_data(_178017_t->_field_kind,_179017_d,_177933_c->_field_kind->_field_token);
	return _179017_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_ns_selection(jule::Ref<_1ce385d22_NsSelectionExpr> _180036_s) {
	jule::Str _180113_path = _1b6703d45_build_link_path_by_tokens(_180036_s->_field_ns);
	jule::Ref<_1b623bb7a_ImportInfo> _180217_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)>([=](jule::Ref<_1b623bb7a_ImportInfo> _180253_p) mutable -> jule::Bool {
		if ((_180036_s->_field_ns.len() == 1LL) && (_180253_p->_field_alias == _180113_path)) {
			return true;
		}
		return _180253_p->_field_link_path == _180113_path;
	}));
	if ((!(jule::real(_180217_imp))) || (!(_180217_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_180036_s->_field_ident,jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_180113_path)}));
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Trait<_1b6b746d3_Lookup> _181417_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_180217_imp;
	
	jule::Any _181817_def = (*this)._method_get_def(_180036_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_181417_lookup;
	jule::Ref<_1b66db129_Data> _182117_d = (*this)._method_eval_def(_181817_def,_180036_s->_field_ident);
	return _182117_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_struct_lit_explicit(jule::Ref<_1ce385eed_StructIns> _182648_s,jule::Slice<jule::Any> _182713_exprs,_1ce35e3a0_Token _182736_error_token) {
	jule::Bool _182813_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_182648_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_182648_s->_field_generics.len()),_182736_error_token);
	if ((!(_182813_ok))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	this->self->_method_push_reference_to_struct(_182648_s);
	_1b65a085c_StructLitChecker _183617_slc = _1b65a085c_StructLitChecker(this->self,_182736_error_token,_182648_s,jule::Slice<jule::Ref<_1b61decc6_StructArgExprModel>>());
	_183617_slc._method_check(_182713_exprs);
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_182648_s)),jule::Ref<_1b6703d45_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_StructLitExprModel>(new( std::nothrow ) _1b61decc6_StructLitExprModel(_182648_s,_183617_slc._field_args))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_struct_lit(jule::Ref<_1ce385d22_StructLit> _185339_lit) {
	jule::Ref<_1b6703d45_TypeSymbol> _185417_t = _1ce50a46e_build_type(_185339_lit->_field_kind);
	jule::Bool _185513_ok = this->self->_field_s->_method_check_type(_185417_t,this->self->_field_lookup);
	if ((!(_185513_ok))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1ce385eed_StructIns> _186017_s = _185417_t->_field_kind->_method_strct();
	if ((!(jule::real(_186017_s)))) {
		this->self->_method_push_err(_185339_lit->_field_kind->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	return this->self->_method_eval_struct_lit_explicit(_186017_s,_185339_lit->_field_exprs,_185339_lit->_field_kind->_field_token);
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_type(jule::Ref<_1ce385d22_TypeDecl> _186932_t) {
	jule::Ref<_1b6703d45_TypeSymbol> _187017_tk = _1ce50a46e_build_type(_186932_t);
	jule::Bool _187113_ok = (*this)._field_s->_method_check_type(_187017_tk,(*this)._field_lookup);
	if ((!(_187113_ok))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(_187017_tk->_field_kind,jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_187017_tk->_field_kind),true,jule::Ref<_1b6d4076c_Const>()));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_call_type_fn(jule::Ref<_1ce385d22_FnCallExpr> _188336_fc,jule::Ref<_1b66db129_Data> _188357_d) {
	if (_188336_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_188336_fc->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_188357_d->_field_kind->_method_to_str())}));
	} else if (_188336_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_188336_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_188336_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_188336_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	if (_188336_fc->_field_args.len() > 0LL) {
		jule::Ref<_1b66db129_Data> _189321_arg = this->self->_method_eval_expr_kind(_188336_fc->_field_args[0LL]->_field_kind);
		if (jule::real(_189321_arg)) {
			_188357_d=this->self->_method_eval_cast_by_type_n_data(_188357_d->_field_kind,_189321_arg,_188336_fc->_field_args[0LL]->_field_token);
		}
	}
	_188357_d->_field_decl=false;
	return _188357_d;
}



inline std::tuple<jule::Bool,jule::Bool> _1b66db129_Eval::_method_check_fn_call_generics(jule::Ref<_1b6069348_FnIns> _190445_f,jule::Ref<_1ce385d22_FnCallExpr> _190513_fc) {
	jule::Bool _190532_ok = jule::Bool();
	jule::Bool _190542_dynamic_annotation = jule::Bool();
	{
		if (!((((_190445_f->_field_decl->_field_generics.len() > 0LL) && (_190513_fc->_field_generics.len() == 0LL)) && (_190445_f->_field_params.len() > 0LL)))) { goto _case_end_4543267376; }
		_case_begin_4543267376:;
		{
			_190542_dynamic_annotation=true;
			_190445_f->_field_generics=jule::Slice<jule::Ref<_1b6703d45_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_190445_f->_field_decl->_field_generics.len())));
			_190532_ok = true;
			_190542_dynamic_annotation = true;
			return std::make_tuple(_190532_ok,_190542_dynamic_annotation);
		}
		goto _match_end_4543262480;
		_case_end_4543267376:;
		if (!(((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_190445_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_190513_fc->_field_generics.len()),_190513_fc->_field_token)))))) { goto _case_end_4543266944; }
		_case_begin_4543266944:;
		{
			_190532_ok = false;
			_190542_dynamic_annotation = false;
			return std::make_tuple(_190532_ok,_190542_dynamic_annotation);
		}
		goto _match_end_4543262480;
		_case_end_4543266944:;
		_case_begin_4543262624:;
		{
			_190445_f->_field_generics=jule::Slice<jule::Ref<_1b6703d45_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_190445_f->_field_decl->_field_generics.len())));
			{
				jule::Int _1b66db129_i = 0;
				for (auto _1b66db129_g: _190513_fc->_field_generics) {
					{
						jule::Ref<_1b6703d45_TypeSymbol> _192025_k = _1ce50a46e_build_type(_1b66db129_g);
						_190532_ok=(*this)._field_s->_method_check_type(_192025_k,(*this)._field_lookup);
						if ((!(_190532_ok))) {
							_190532_ok = false;
							_190542_dynamic_annotation = false;
							return std::make_tuple(_190532_ok,_190542_dynamic_annotation);
						}
						_190445_f->_field_generics[static_cast<jule::Int>(_1b66db129_i)]=_192025_k->_field_kind;
					}
				_iter_next_4543265904:;
				_1b66db129_i++;
				}
				_iter_end_4543265904:;
			}
			_190532_ok = true;
			_190542_dynamic_annotation = false;
			return std::make_tuple(_190532_ok,_190542_dynamic_annotation);
		}
		goto _match_end_4543262480;
		_case_end_4543262624:;
		_match_end_4543262480:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_call_builtin_fn(jule::Ref<_1ce385d22_FnCallExpr> _193239_fc,jule::Ref<_1b66db129_Data> _193260_d) {
	jule::Ref<_1b6069348_FnIns> _193317_f = _193260_d->_field_kind->_method_fnc();
	_193260_d=_193317_f->_field_caller(this->self,_193239_fc,_193260_d);
	if ((!(jule::real(_193260_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	_193260_d->_field_mutable=true;
	return _193260_d;
}



inline void _1b66db129_Eval::_method_check_fn_of_concurrent_call(jule::Ref<_1b6069348_FnIns>& _194447_f,_1ce35e3a0_Token _194458_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	for (auto _1b66db129_p: _194447_f->_field_params) {
		{
			if (_1b66db129_p->_field_decl->_field_reference) {
				(*this)._method_push_err(_194458_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>({}));
				return;
			}
		}
	_iter_next_4543291584:;
	}
	_iter_end_4543291584:;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_call_fn(jule::Ref<_1ce385d22_FnCallExpr> _195731_fc,jule::Ref<_1b66db129_Data> _195752_d) {
	jule::Ref<_1b6069348_FnIns> _195817_f = _195752_d->_field_kind->_method_fnc();
	if (_195817_f->_method_is_builtin()) {
		return this->self->_method_call_builtin_fn(_195731_fc,_195752_d);
	}
	if (_195731_fc->_field_concurrent) {
		this->self->_method_check_fn_of_concurrent_call(_195817_f,_195731_fc->_field_token);
	}
	if ((((!(_195752_d->_field_mutable)) && _195817_f->_field_decl->_method_is_method()) && (!(_195817_f->_field_decl->_field_statically))) && _195817_f->_field_decl->_field_params[0LL]->_field_mutable) {
		this->self->_method_push_err(_195731_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	} else if ((!(this->self->_method_is_unsafe())) && _195817_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_195731_fc->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Bool _197318_ok;
	jule::Bool _197322_dynamic_annotation;
	std::tie(_197318_ok,_197322_dynamic_annotation) = this->self->_method_check_fn_call_generics(_195817_f,_195731_fc);
	if ((!(_197318_ok))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b622b76e_Sema> _197817_old = this->self->_field_s;
	if (jule::real(_195817_f->_field_decl->_field_owner)) {
		this->self->_field_s=_195817_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if ((_197817_old).alloc != (this->self->_field_s).alloc) {
			_197817_old->_field_errors=jule::append(_197817_old->_field_errors,this->self->_field_s->_field_errors);
			this->self->_field_s->_field_errors=nullptr;
		}
		this->self->_field_s=_197817_old;
	});
	if ((!(_197322_dynamic_annotation))) {
		if ((!(_195817_f->_field_reloaded))) {
			_197318_ok=this->self->_field_s->_method_reload_fn_ins_types(_195817_f);
			if ((!(_197318_ok))) {
				return jule::new_ref<_1b66db129_Data>();
			}
			_195817_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_195817_f);
	}
	_1b65a085c_FnCallArgChecker _200317_fcac = _1b65a085c_FnCallArgChecker(this->self,_195731_fc->_field_args,_195731_fc->_field_token,_195817_f,_197322_dynamic_annotation,jule::Slice<jule::Any>());
	if (jule::real(_195817_f->_field_decl->_field_owner)) {
		std::tie(_197817_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_197817_old);
		_197318_ok=_200317_fcac._method_check();
		std::tie(_197817_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_197817_old);
	} else {
		_197318_ok=_200317_fcac._method_check();
	}
	if ((!(_197318_ok)) && _197322_dynamic_annotation) {
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Bool _202214_is_unique_ins;
	jule::Int _202229_pos;
	std::tie(_202214_is_unique_ins,_202229_pos) = _195817_f->_field_decl->_method_append_instance(_195817_f);
	if ((!(_202214_is_unique_ins))) {
		_195817_f=_195817_f->_field_decl->_field_instances[static_cast<jule::Int>(_202229_pos)];
	}
	jule::Any _202717_call_model = _195752_d->_field_model;
	if (_195817_f->_field_decl->_method_is_void()) {
		_195752_d=_1b66db129_build_void_data();
	} else {
		if (_197322_dynamic_annotation) {
			_197318_ok=this->self->_field_s->_method_reload_fn_ins_types(_195817_f);
			if ((!(_197318_ok))) {
				return jule::new_ref<_1b66db129_Data>();
			}
			_195817_f->_field_reloaded=true;
		}
		_195752_d->_field_kind=_195817_f->_field_result;
		_195752_d->_field_lvalue=_195817_f->_field_result->_method_lvalue();
	}
	_195752_d->_field_mutable=true;
	_195752_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_FnCallExprModel>(new( std::nothrow ) _1b61decc6_FnCallExprModel(_195817_f,_195731_fc->_field_concurrent,_202717_call_model,_200317_fcac._field_arg_models)));
	if ((_195817_f->_field_generics.len() > 0LL) && _202214_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_195817_f);
	}
	return _195752_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_fn_call(jule::Ref<_1ce385d22_FnCallExpr> _206036_fc) {
	jule::Ref<_1b6703d45_TypeKind> _206117_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_206117_prefix;
	});
	jule::Ref<_1b66db129_Data> _206517_d = this->self->_method_eval_expr_kind(_206036_fc->_field_expr->_field_kind);
	if ((!(jule::real(_206517_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_206517_d->_field_decl) {
		return this->self->_method_call_type_fn(_206036_fc,_206517_d);
	}
	if ((!(jule::real(_206517_d->_field_kind->_method_fnc())))) {
		this->self->_method_push_err(_206036_fc->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	return this->self->_method_call_fn(_206036_fc,_206517_d);
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_enum_static(jule::Ref<_1b61d7c58_Enum> _208239_enm,_1ce35e3a0_Token _208251_ident) {
	jule::Ref<_1b66db129_Data> _208317_d = jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_208239_enm)),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1b6d4076c_Const>()));
	jule::Ref<_1b61d7c58_EnumItem> _209017_item = _208239_enm->_method_find_item(_208251_ident._field_kind);
	if ((!(jule::real(_209017_item)))) {
		(*this)._method_push_err(_208251_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_208251_ident._field_kind)}));
	} else {
		_208317_d->_field_constant=jule::new_ref<_1b6d4076c_Const>(_209017_item->_field_value->_field_data->_field_constant.get());
		_208317_d->_field_model=jule::Any(_208317_d->_field_constant);
	}
	return _208317_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_struct_static(jule::Ref<_1ce385eed_StructIns> _210141_s,_1ce35e3a0_Token _210156_ident) {
	jule::Ref<_1b66db129_Data> _210217_d = jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::Ref<_1b6703d45_TypeKind>(),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1b6d4076c_Const>()));
	
	jule::Ref<_1b6069348_Fn> _211017_method = _210141_s->_method_find_method(_210156_ident._field_kind,true);
	if (jule::real(_211017_method)) {
		if ((!((*this)._field_s->_method_is_accessible_define(_211017_method->_field_public,_211017_method->_field_token)))) {
			(*this)._method_push_err(_210156_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_210156_ident._field_kind)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		}
		jule::Ref<_1b6069348_FnIns> _211721_ins = _211017_method->_method_instance();
		_211721_ins->_field_owner=_210141_s;
		(*this)._method_push_reference_to_fn(_211721_ins);
		_210217_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_StructStaticIdentExprModel>(new( std::nothrow ) _1b61decc6_StructStaticIdentExprModel(_210141_s,_210217_d->_field_model,_211721_ins)));
		_210217_d->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_211721_ins));
		return _210217_d;
	}
	jule::Ref<_1b637edab_Var> _212917_sttc = _210141_s->_field_decl->_method_find_static(_210156_ident._field_kind);
	if (jule::real(_212917_sttc)) {
		return (*this)._method_eval_var(_212917_sttc,_210156_ident);
	}
	(*this)._method_push_err(_210156_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_210156_ident._field_kind)}));
	return jule::new_ref<_1b66db129_Data>();
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_trait_sub_ident(jule::Ref<_1b66db129_Data> _213843_d,jule::Ref<_1b61d7d79_Trait> _213857_trt,_1ce35e3a0_Token _213870_ident) {
	jule::Ref<_1b6069348_Fn> _213917_f = _213857_trt->_method_find_method(_213870_ident._field_kind);
	if ((!(jule::real(_213917_f)))) {
		(*this)._method_push_err(_213870_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_213870_ident._field_kind)}));
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Any _214517_model = jule::Any(nullptr);
	if ((_213857_trt).alloc == (_1b6c3ed86_BUILTIN_TRAIT_ERROR).alloc) {
		_214517_model=jule::Any(jule::new_struct<_1b61decc6_BuiltinErrorTraitSubIdentExprModel>(new( std::nothrow ) _1b61decc6_BuiltinErrorTraitSubIdentExprModel(_213843_d->_field_model,_213870_ident._field_kind)));
	} else {
		_214517_model=jule::Any(jule::new_struct<_1b61decc6_TraitSubIdentExprModel>(new( std::nothrow ) _1b61decc6_TraitSubIdentExprModel(_213843_d->_field_model,_213870_ident._field_kind)));
	}
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_213917_f->_method_instance())),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_214517_model,false,jule::Ref<_1b6d4076c_Const>()));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_struct_sub_ident(jule::Ref<_1b66db129_Data> _216744_d,jule::Ref<_1ce385eed_StructIns> _216758_s,jule::Ref<_1ce385d22_SubIdentExpr> _216773_si,jule::Bool _216792_ref) {
	jule::Ref<_1ce385eed_FieldIns> _216817_f = _216758_s->_method_find_field(_216773_si->_field_ident._field_kind);
	if (jule::real(_216817_f)) {
		if ((!((*this)._field_s->_method_is_accessible_define(_216817_f->_field_decl->_field_public,_216817_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_216773_si->_field_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_216817_f->_field_decl->_field_ident)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		}
		jule::Ref<_1b61decc6_StructSubIdentExprModel> _217521_model = jule::new_struct<_1b61decc6_StructSubIdentExprModel>(new( std::nothrow ) _1b61decc6_StructSubIdentExprModel(_216744_d->_field_model,_216744_d->_field_kind,jule::Ref<_1b6069348_FnIns>(),_216817_f));
		_216744_d->_field_model=jule::Any(_217521_model);
		_216744_d->_field_kind=_216817_f->_field_kind->_method_clone();
		if (_216817_f->_field_decl->_field_mutable && (!(_216744_d->_field_mutable))) {
			{
				auto _match_expr{ (*this)._field_lookup };
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_ScopeChecker>>())) { goto _case_end_4543406880; }
				_case_begin_4543406880:;
				{
					jule::Ref<_1b61e873b_ScopeChecker> _218725_scope = (*this)._field_lookup.operator jule::Ref<_1b61e873b_ScopeChecker>()->_method_get_root();
					_216744_d->_field_mutable=jule::real(_218725_scope->_field_owner) && ((_218725_scope->_field_owner->_field_owner).alloc == (_216758_s).alloc);
					if (_216744_d->_field_mutable) {
						jule::Ref<_1b637edab_Var> _219033_field = _217521_model->_field_expr.operator jule::Ref<_1b637edab_Var>();
						jule::Ref<_1b637edab_Var> _219133_v = jule::new_struct<_1b637edab_Var>(new( std::nothrow ) _1b637edab_Var(_219033_field->_field_scope,_219033_field->_field_token,_219033_field->_field_ident,_219033_field->_field_cpp_linked,_219033_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_219033_field->_field_kind,_219033_field->_field_value,jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Slice<jule::Ref<_1ce385d22_Directive>>(),jule::Slice<jule::Ref<_1b637edab_Var>>()));
						_219133_v->_field_mutable=true;
						_217521_model->_field_expr=jule::Any(_219133_v);
					}
				}
				goto _match_end_4543411104;
				_case_end_4543406880:;
				_match_end_4543411104:;
			}
		}
		return _216744_d;
	}
	
	jule::Ref<_1b6069348_Fn> _221017_m = _216758_s->_method_find_method(_216773_si->_field_ident._field_kind,false);
	if ((!(jule::real(_221017_m)))) {
		(*this)._method_push_err(_216773_si->_field_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_216773_si->_field_ident._field_kind)}));
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_221017_m->_field_params[0LL]->_method_is_ref() && (!(_216792_ref))) {
		(*this)._method_push_err(_216773_si->_field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b6069348_FnIns> _222117_ins = _221017_m->_method_instance();
	_222117_ins->_field_owner=_216758_s;
	(*this)._method_push_reference_to_fn(_222117_ins);
	_216744_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_StructSubIdentExprModel>(new( std::nothrow ) _1b61decc6_StructSubIdentExprModel(_216744_d->_field_model,_216744_d->_field_kind,_222117_ins,jule::Ref<_1ce385eed_FieldIns>())));
	_216744_d->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_222117_ins));
	return _216744_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_slice_sub_ident(jule::Ref<_1b66db129_Data> _223343_d,_1ce35e3a0_Token _223353_ident) {
	{
		auto _match_expr{ _223353_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4543439120; }
		_case_begin_4543439120:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_223343_d->_field_kind,_223343_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543435920;
		_case_end_4543439120:;
		if (!((jule::Str("cap", 3)) == _match_expr)) { goto _case_end_4543439600; }
		_case_begin_4543439600:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_223343_d->_field_kind,_223343_d->_field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543435920;
		_case_end_4543439600:;
		_case_begin_4543435440:;
		{
			(*this)._method_push_err(_223353_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_223353_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543435920;
		_case_end_4543435440:;
		_match_end_4543435920:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_array_sub_ident(jule::Ref<_1b66db129_Data> _226343_d,_1ce35e3a0_Token _226353_ident) {
	{
		auto _match_expr{ _226353_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4543450752; }
		_case_begin_4543450752:;
		{
			jule::Ref<_1b6d4076c_Const> _226621_c = _1b6d4076c_Const::_static_method_new_i64(static_cast<jule::I64>(_226343_d->_field_kind->_method_arr()->_field_n));
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_226621_c),jule::Bool(),_226621_c));
		}
		goto _match_end_4543447552;
		_case_end_4543450752:;
		_case_begin_4543447072:;
		{
			(*this)._method_push_err(_226353_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_226353_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543447552;
		_case_end_4543447072:;
		_match_end_4543447552:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_map_sub_ident(jule::Ref<_1b66db129_Data> _228041_d,_1ce35e3a0_Token _228051_ident) {
	{
		auto _match_expr{ _228051_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4543460416; }
		_case_begin_4543460416:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_228041_d->_field_kind,_228041_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543456736;
		_case_end_4543460416:;
		if (!((jule::Str("clear", 5)) == _match_expr)) { goto _case_end_4543459760; }
		_case_begin_4543459760:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>(),jule::Ref<_1b6703d45_TypeKind>(),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),_228041_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_228041_d->_field_kind,_228041_d->_field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543456736;
		_case_end_4543459760:;
		if (!((jule::Str("keys", 4)) == _match_expr)) { goto _case_end_4543460144; }
		_case_begin_4543460144:;
		{
			jule::Ref<_1b6703d45_Map> _230921_m = _228041_d->_field_kind->_method_map();
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>(),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6703d45_Slc>(new( std::nothrow ) _1b6703d45_Slc(_230921_m->_field_key)))),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),_228041_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_228041_d->_field_kind,_228041_d->_field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543456736;
		_case_end_4543460144:;
		if (!((jule::Str("values", 6)) == _match_expr)) { goto _case_end_4543460240; }
		_case_begin_4543460240:;
		{
			jule::Ref<_1b6703d45_Map> _233021_m = _228041_d->_field_kind->_method_map();
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>(),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6703d45_Slc>(new( std::nothrow ) _1b6703d45_Slc(_233021_m->_field_val)))),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),_228041_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_228041_d->_field_kind,_228041_d->_field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543456736;
		_case_end_4543460240:;
		if (!((jule::Str("has", 3)) == _match_expr)) { goto _case_end_4543459376; }
		_case_begin_4543459376:;
		{
			jule::Ref<_1b6703d45_Map> _235121_m = _228041_d->_field_kind->_method_map();
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>({jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("key", 3))),_235121_m->_field_key))}),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),_228041_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_228041_d->_field_kind,_228041_d->_field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543456736;
		_case_end_4543459376:;
		if (!((jule::Str("del", 3)) == _match_expr)) { goto _case_end_4543459472; }
		_case_begin_4543459472:;
		{
			jule::Ref<_1b6703d45_Map> _237621_m = _228041_d->_field_kind->_method_map();
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>({jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("key", 3))),_237621_m->_field_key))}),jule::Ref<_1b6703d45_TypeKind>(),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),_228041_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_228041_d->_field_kind,_228041_d->_field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543456736;
		_case_end_4543459472:;
		_case_begin_4543456256:;
		{
			(*this)._method_push_err(_228051_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_228051_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543456736;
		_case_end_4543456256:;
		_match_end_4543456736:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_str_sub_ident(jule::Ref<_1b66db129_Data> _240541_d,_1ce35e3a0_Token _240551_ident) {
	{
		auto _match_expr{ _240551_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4543507792; }
		_case_begin_4543507792:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_240541_d->_field_kind,_240541_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543504592;
		_case_end_4543507792:;
		if (!((jule::Str("has_prefix", 10)) == _match_expr)) { goto _case_end_4543508272; }
		_case_begin_4543508272:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>({jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("sub", 3))),_240541_d->_field_kind))}),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_240541_d->_field_kind,_240541_d->_field_model,jule::Str("has_prefix", 10)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543504592;
		_case_end_4543508272:;
		if (!((jule::Str("has_suffix", 10)) == _match_expr)) { goto _case_end_4543507616; }
		_case_begin_4543507616:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>({jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("sub", 3))),_240541_d->_field_kind))}),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_240541_d->_field_kind,_240541_d->_field_model,jule::Str("has_suffix", 10)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543504592;
		_case_end_4543507616:;
		if (!((jule::Str("find", 4)) == _match_expr)) { goto _case_end_4543507232; }
		_case_begin_4543507232:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>({jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("sub", 3))),_240541_d->_field_kind))}),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_240541_d->_field_kind,_240541_d->_field_model,jule::Str("find", 4)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543504592;
		_case_end_4543507232:;
		if (!((jule::Str("rfind", 5)) == _match_expr)) { goto _case_end_4543507328; }
		_case_begin_4543507328:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>({jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("sub", 3))),_240541_d->_field_kind))}),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_240541_d->_field_kind,_240541_d->_field_model,jule::Str("rfind", 5)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543504592;
		_case_end_4543507328:;
		if (!((jule::Str("trim", 4)) == _match_expr)) { goto _case_end_4543507424; }
		_case_begin_4543507424:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>({jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("bytes", 5))),_240541_d->_field_kind))}),_240541_d->_field_kind,jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_240541_d->_field_kind,_240541_d->_field_model,jule::Str("trim", 4)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543504592;
		_case_end_4543507424:;
		if (!((jule::Str("ltrim", 5)) == _match_expr)) { goto _case_end_4543504928; }
		_case_begin_4543504928:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>({jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("bytes", 5))),_240541_d->_field_kind))}),_240541_d->_field_kind,jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_240541_d->_field_kind,_240541_d->_field_model,jule::Str("ltrim", 5)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543504592;
		_case_end_4543504928:;
		if (!((jule::Str("rtrim", 5)) == _match_expr)) { goto _case_end_4543505024; }
		_case_begin_4543505024:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>({jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("bytes", 5))),_240541_d->_field_kind))}),_240541_d->_field_kind,jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_240541_d->_field_kind,_240541_d->_field_model,jule::Str("rtrim", 5)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543504592;
		_case_end_4543505024:;
		if (!((jule::Str("split", 5)) == _match_expr)) { goto _case_end_4543505120; }
		_case_begin_4543505120:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>({jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("sub", 3))),_240541_d->_field_kind)),jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6703d45_Slc>(new( std::nothrow ) _1b6703d45_Slc(_240541_d->_field_kind)))),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_240541_d->_field_kind,_240541_d->_field_model,jule::Str("split", 5)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543504592;
		_case_end_4543505120:;
		if (!((jule::Str("replace", 7)) == _match_expr)) { goto _case_end_4543505216; }
		_case_begin_4543505216:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>({jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("sub", 3))),_240541_d->_field_kind)),jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("new", 3))),_240541_d->_field_kind)),jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("int", 3))))))}),_240541_d->_field_kind,jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_CommonSubIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonSubIdentExprModel(_240541_d->_field_kind,_240541_d->_field_model,jule::Str("replace", 7)))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543504592;
		_case_end_4543505216:;
		_case_begin_4543504112:;
		{
			(*this)._method_push_err(_240551_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_240551_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543504592;
		_case_end_4543504112:;
		_match_end_4543504592:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_int_type_static(_1ce35e3a0_Token _265339_ident) {
	
	{
		auto _match_expr{ _265339_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4543555792; }
		_case_begin_4543555792:;
		{
			jule::Ref<_1b6d4076c_Const> _265821_c = _1b6d4076c_Const::_static_method_new_i64(static_cast<jule::I64>(_1b6d47d3a_max(jule::Str("int", 3))));
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_265821_c),jule::Bool(),_265821_c));
		}
		goto _match_end_4543552384;
		_case_end_4543555792:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4543556272; }
		_case_begin_4543556272:;
		{
			jule::Ref<_1b6d4076c_Const> _266621_c = _1b6d4076c_Const::_static_method_new_i64(static_cast<jule::I64>(_1b6d47d3a_min(jule::Str("int", 3))));
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_266621_c),jule::Bool(),_266621_c));
		}
		goto _match_end_4543552384;
		_case_end_4543556272:;
		_case_begin_4543551328:;
		{
			(*this)._method_push_err(_265339_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_265339_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543552384;
		_case_end_4543551328:;
		_match_end_4543552384:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_uint_type_static(_1ce35e3a0_Token _267940_ident) {
	
	{
		auto _match_expr{ _267940_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4542808832; }
		_case_begin_4542808832:;
		{
			jule::Ref<_1b6d4076c_Const> _268421_c = _1b6d4076c_Const::_static_method_new_u64(static_cast<jule::U64>(_1b6d47d3a_max(jule::Str("uint", 4))));
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_268421_c),jule::Bool(),_268421_c));
		}
		goto _match_end_4543564272;
		_case_end_4542808832:;
		_case_begin_4543563216:;
		{
			(*this)._method_push_err(_267940_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_267940_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543564272;
		_case_end_4543563216:;
		_match_end_4543564272:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_i8_type_static(_1ce35e3a0_Token _269738_ident) {
	
	
	
	{
		auto _match_expr{ _269738_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4543577456; }
		_case_begin_4543577456:;
		{
			jule::Ref<_1b6d4076c_Const> _270421_c = _1b6d4076c_Const::_static_method_new_i64(127LL);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_270421_c),jule::Bool(),_270421_c));
		}
		goto _match_end_4543573984;
		_case_end_4543577456:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4543577936; }
		_case_begin_4543577936:;
		{
			jule::Ref<_1b6d4076c_Const> _271221_c = _1b6d4076c_Const::_static_method_new_i64(-128LL);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_271221_c),jule::Bool(),_271221_c));
		}
		goto _match_end_4543573984;
		_case_end_4543577936:;
		_case_begin_4543572560:;
		{
			(*this)._method_push_err(_269738_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_269738_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543573984;
		_case_end_4543572560:;
		_match_end_4543573984:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_i16_type_static(_1ce35e3a0_Token _272539_ident) {
	
	
	
	{
		auto _match_expr{ _272539_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4543590880; }
		_case_begin_4543590880:;
		{
			jule::Ref<_1b6d4076c_Const> _273221_c = _1b6d4076c_Const::_static_method_new_i64(32767LL);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_273221_c),jule::Bool(),_273221_c));
		}
		goto _match_end_4543587408;
		_case_end_4543590880:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4543591360; }
		_case_begin_4543591360:;
		{
			jule::Ref<_1b6d4076c_Const> _274021_c = _1b6d4076c_Const::_static_method_new_i64(-32768LL);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_274021_c),jule::Bool(),_274021_c));
		}
		goto _match_end_4543587408;
		_case_end_4543591360:;
		_case_begin_4543586000:;
		{
			(*this)._method_push_err(_272539_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_272539_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543587408;
		_case_end_4543586000:;
		_match_end_4543587408:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_i32_type_static(_1ce35e3a0_Token _275339_ident) {
	
	
	
	{
		auto _match_expr{ _275339_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4543603920; }
		_case_begin_4543603920:;
		{
			jule::Ref<_1b6d4076c_Const> _276021_c = _1b6d4076c_Const::_static_method_new_i64(2147483647LL);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_276021_c),jule::Bool(),_276021_c));
		}
		goto _match_end_4543600448;
		_case_end_4543603920:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4543604400; }
		_case_begin_4543604400:;
		{
			jule::Ref<_1b6d4076c_Const> _276821_c = _1b6d4076c_Const::_static_method_new_i64(-2147483648LL);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_276821_c),jule::Bool(),_276821_c));
		}
		goto _match_end_4543600448;
		_case_end_4543604400:;
		_case_begin_4543599040:;
		{
			(*this)._method_push_err(_275339_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_275339_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543600448;
		_case_end_4543599040:;
		_match_end_4543600448:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_i64_type_static(_1ce35e3a0_Token _278139_ident) {
	
	
	
	{
		auto _match_expr{ _278139_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4543616704; }
		_case_begin_4543616704:;
		{
			jule::Ref<_1b6d4076c_Const> _278821_c = _1b6d4076c_Const::_static_method_new_i64(jule::MAX_I64);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_278821_c),jule::Bool(),_278821_c));
		}
		goto _match_end_4543613232;
		_case_end_4543616704:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4543617184; }
		_case_begin_4543617184:;
		{
			jule::Ref<_1b6d4076c_Const> _279621_c = _1b6d4076c_Const::_static_method_new_i64(jule::MIN_I64);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_279621_c),jule::Bool(),_279621_c));
		}
		goto _match_end_4543613232;
		_case_end_4543617184:;
		_case_begin_4543611872:;
		{
			(*this)._method_push_err(_278139_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_278139_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543613232;
		_case_end_4543611872:;
		_match_end_4543613232:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_u8_type_static(_1ce35e3a0_Token _280938_ident) {
	
	
	{
		auto _match_expr{ _280938_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4543628672; }
		_case_begin_4543628672:;
		{
			jule::Ref<_1b6d4076c_Const> _281521_c = _1b6d4076c_Const::_static_method_new_u64(255LLU);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("u8", 2)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_281521_c),jule::Bool(),_281521_c));
		}
		goto _match_end_4543625136;
		_case_end_4543628672:;
		_case_begin_4543623632:;
		{
			(*this)._method_push_err(_280938_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_280938_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543625136;
		_case_end_4543623632:;
		_match_end_4543625136:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_u16_type_static(_1ce35e3a0_Token _282839_ident) {
	
	
	{
		auto _match_expr{ _282839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4543638080; }
		_case_begin_4543638080:;
		{
			jule::Ref<_1b6d4076c_Const> _283421_c = _1b6d4076c_Const::_static_method_new_u64(65535LLU);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("u16", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_283421_c),jule::Bool(),_283421_c));
		}
		goto _match_end_4543634544;
		_case_end_4543638080:;
		_case_begin_4543633040:;
		{
			(*this)._method_push_err(_282839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_282839_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543634544;
		_case_end_4543633040:;
		_match_end_4543634544:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_u32_type_static(_1ce35e3a0_Token _284739_ident) {
	
	
	{
		auto _match_expr{ _284739_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4543644848; }
		_case_begin_4543644848:;
		{
			jule::Ref<_1b6d4076c_Const> _285321_c = _1b6d4076c_Const::_static_method_new_u64(4294967295LLU);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("u32", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_285321_c),jule::Bool(),_285321_c));
		}
		goto _match_end_4543643952;
		_case_end_4543644848:;
		_case_begin_4543642448:;
		{
			(*this)._method_push_err(_284739_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_284739_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543643952;
		_case_end_4543642448:;
		_match_end_4543643952:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_u64_type_static(_1ce35e3a0_Token _286639_ident) {
	
	
	{
		auto _match_expr{ _286639_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4543656832; }
		_case_begin_4543656832:;
		{
			jule::Ref<_1b6d4076c_Const> _287221_c = _1b6d4076c_Const::_static_method_new_u64(jule::MAX_U64);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("u64", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287221_c),jule::Bool(),_287221_c));
		}
		goto _match_end_4543653296;
		_case_end_4543656832:;
		_case_begin_4543651856:;
		{
			(*this)._method_push_err(_286639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_286639_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543653296;
		_case_end_4543651856:;
		_match_end_4543653296:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_f32_type_tatic(_1ce35e3a0_Token _288538_ident) {
	
	
	
	{
		auto _match_expr{ _288538_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4543667216; }
		_case_begin_4543667216:;
		{
			jule::Ref<_1b6d4076c_Const> _289221_c = _1b6d4076c_Const::_static_method_new_f64(340282346638528860000000000000000000000.0);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_289221_c),jule::Bool(),_289221_c));
		}
		goto _match_end_4543663744;
		_case_end_4543667216:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4543667696; }
		_case_begin_4543667696:;
		{
			jule::Ref<_1b6d4076c_Const> _290021_c = _1b6d4076c_Const::_static_method_new_f64(-340282346638528860000000000000000000000.0);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_290021_c),jule::Bool(),_290021_c));
		}
		goto _match_end_4543663744;
		_case_end_4543667696:;
		_case_begin_4543662368:;
		{
			(*this)._method_push_err(_288538_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_288538_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543663744;
		_case_end_4543662368:;
		_match_end_4543663744:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_f64_type_static(_1ce35e3a0_Token _291339_ident) {
	
	
	
	{
		auto _match_expr{ _291339_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4543679904; }
		_case_begin_4543679904:;
		{
			jule::Ref<_1b6d4076c_Const> _292021_c = _1b6d4076c_Const::_static_method_new_f64(jule::MAX_F64);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_292021_c),jule::Bool(),_292021_c));
		}
		goto _match_end_4543676432;
		_case_end_4543679904:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4543680384; }
		_case_begin_4543680384:;
		{
			jule::Ref<_1b6d4076c_Const> _292821_c = _1b6d4076c_Const::_static_method_new_f64(jule::MIN_F64);
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_292821_c),jule::Bool(),_292821_c));
		}
		goto _match_end_4543676432;
		_case_end_4543680384:;
		_case_begin_4543675120:;
		{
			(*this)._method_push_err(_291339_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_291339_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543676432;
		_case_end_4543675120:;
		_match_end_4543676432:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_prim_static(jule::Str _294135_kind,_1ce35e3a0_Token _294146_ident) {
	{
		auto _match_expr{ _294135_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4543690720; }
		_case_begin_4543690720:;
		{
			return (*this)._method_eval_int_type_static(_294146_ident);
		}
		goto _match_end_4543687136;
		_case_end_4543690720:;
		if (!((jule::Str("uint", 4)) == _match_expr)) { goto _case_end_4543691200; }
		_case_begin_4543691200:;
		{
			return (*this)._method_eval_uint_type_static(_294146_ident);
		}
		goto _match_end_4543687136;
		_case_end_4543691200:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4543690544; }
		_case_begin_4543690544:;
		{
			return (*this)._method_eval_i8_type_static(_294146_ident);
		}
		goto _match_end_4543687136;
		_case_end_4543690544:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4543690160; }
		_case_begin_4543690160:;
		{
			return (*this)._method_eval_i16_type_static(_294146_ident);
		}
		goto _match_end_4543687136;
		_case_end_4543690160:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4543690256; }
		_case_begin_4543690256:;
		{
			return (*this)._method_eval_i32_type_static(_294146_ident);
		}
		goto _match_end_4543687136;
		_case_end_4543690256:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4543690352; }
		_case_begin_4543690352:;
		{
			return (*this)._method_eval_i64_type_static(_294146_ident);
		}
		goto _match_end_4543687136;
		_case_end_4543690352:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4543687840; }
		_case_begin_4543687840:;
		{
			return (*this)._method_eval_u8_type_static(_294146_ident);
		}
		goto _match_end_4543687136;
		_case_end_4543687840:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4543687936; }
		_case_begin_4543687936:;
		{
			return (*this)._method_eval_u16_type_static(_294146_ident);
		}
		goto _match_end_4543687136;
		_case_end_4543687936:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4543688032; }
		_case_begin_4543688032:;
		{
			return (*this)._method_eval_u32_type_static(_294146_ident);
		}
		goto _match_end_4543687136;
		_case_end_4543688032:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4543688128; }
		_case_begin_4543688128:;
		{
			return (*this)._method_eval_u64_type_static(_294146_ident);
		}
		goto _match_end_4543687136;
		_case_end_4543688128:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4543688224; }
		_case_begin_4543688224:;
		{
			return (*this)._method_eval_f32_type_tatic(_294146_ident);
		}
		goto _match_end_4543687136;
		_case_end_4543688224:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4543691328; }
		_case_begin_4543691328:;
		{
			return (*this)._method_eval_f64_type_static(_294146_ident);
		}
		goto _match_end_4543687136;
		_case_end_4543691328:;
		_case_begin_4543687040:;
		{
			(*this)._method_push_err(_294146_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_294135_kind),jule::Any(_294146_ident._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543687136;
		_case_end_4543687040:;
		_match_end_4543687136:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_type_static(jule::Ref<_1b66db129_Data> _296139_d,jule::Ref<_1ce385d22_SubIdentExpr> _296153_si) {
	{
		if (!((jule::real(_296139_d->_field_kind->_method_prim())))) { goto _case_end_4543708800; }
		_case_begin_4543708800:;
		{
			return (*this)._method_eval_prim_static(_296139_d->_field_kind->_method_prim()->_method_to_str(),_296153_si->_field_ident);
		}
		goto _match_end_4543705104;
		_case_end_4543708800:;
		if (!((jule::real(_296139_d->_field_kind->_method_enm())))) { goto _case_end_4543709280; }
		_case_begin_4543709280:;
		{
			return (*this)._method_eval_enum_static(_296139_d->_field_kind->_method_enm(),_296153_si->_field_ident);
		}
		goto _match_end_4543705104;
		_case_end_4543709280:;
		if (!((jule::real(_296139_d->_field_kind->_method_strct())))) { goto _case_end_4543708624; }
		_case_begin_4543708624:;
		{
			return (*this)._method_eval_struct_static(_296139_d->_field_kind->_method_strct(),_296153_si->_field_ident);
		}
		goto _match_end_4543705104;
		_case_end_4543708624:;
		_case_begin_4543705248:;
		{
			(*this)._method_push_err(_296153_si->_field_ident,jule::Str("type @ is not supports sub fields", 33),jule::Slice<jule::Any>({jule::Any(_296139_d->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543705104;
		_case_end_4543705248:;
		_match_end_4543705104:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_obj_sub_ident(jule::Ref<_1b66db129_Data> _297841_d,jule::Ref<_1ce385d22_SubIdentExpr> _297855_si) {
	jule::Ref<_1b6703d45_TypeKind> _297917_kind = _297841_d->_field_kind;
	if (jule::real(_297841_d->_field_kind->_method_ptr())) {
		jule::Ref<_1b6703d45_Ptr> _298117_ptr = _297841_d->_field_kind->_method_ptr();
		if ((!(_298117_ptr->_method_is_unsafe()))) {
			if ((!(_297855_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_297855_si->_field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			}
			_297917_kind=_297841_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (jule::real(_297841_d->_field_kind->_method_ref())) {
		_297917_kind=_297841_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real(_297841_d->_field_kind->_method_trt())))) { goto _case_end_4543726656; }
		_case_begin_4543726656:;
		{
			return (*this)._method_eval_trait_sub_ident(_297841_d,_297841_d->_field_kind->_method_trt(),_297855_si->_field_ident);
		}
		goto _match_end_4543722336;
		_case_end_4543726656:;
		if (!((jule::real(_297917_kind->_method_strct())))) { goto _case_end_4543726752; }
		_case_begin_4543726752:;
		{
			jule::Ref<_1ce385eed_StructIns> _299717_s = _297917_kind->_method_strct();
			if (_1b66db129_is_instanced_struct(_299717_s)) {
				jule::Bool _299925_used_reference_elem = jule::real(_297841_d->_field_kind->_method_ref());
				return (*this)._method_eval_struct_sub_ident(_297841_d,_297917_kind->_method_strct(),_297855_si,_299925_used_reference_elem);
			}
		}
		goto _match_end_4543722336;
		_case_end_4543726752:;
		if (!((jule::real(_297917_kind->_method_slc())))) { goto _case_end_4543726848; }
		_case_begin_4543726848:;
		{
			return (*this)._method_eval_slice_sub_ident(_297841_d,_297855_si->_field_ident);
		}
		goto _match_end_4543722336;
		_case_end_4543726848:;
		if (!((jule::real(_297917_kind->_method_arr())))) { goto _case_end_4543726944; }
		_case_begin_4543726944:;
		{
			return (*this)._method_eval_array_sub_ident(_297841_d,_297855_si->_field_ident);
		}
		goto _match_end_4543722336;
		_case_end_4543726944:;
		if (!((jule::real(_297917_kind->_method_map())))) { goto _case_end_4543727040; }
		_case_begin_4543727040:;
		{
			return (*this)._method_eval_map_sub_ident(_297841_d,_297855_si->_field_ident);
		}
		goto _match_end_4543722336;
		_case_end_4543727040:;
		if (!((jule::real(_297917_kind->_method_prim())))) { goto _case_end_4543727136; }
		_case_begin_4543727136:;
		{
			jule::Ref<_1b6703d45_Prim> _301317_p = _297917_kind->_method_prim();
			{
				auto _match_expr{ _301317_p->_field_kind };
				if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4543739824; }
				_case_begin_4543739824:;
				{
					return (*this)._method_eval_str_sub_ident(_297841_d,_297855_si->_field_ident);
				}
				goto _match_end_4543741200;
				_case_end_4543739824:;
				_match_end_4543741200:;
			}
		}
		goto _match_end_4543722336;
		_case_end_4543727136:;
		_match_end_4543722336:;
	}
	(*this)._method_push_err(_297855_si->_field_ident,jule::Str("object @ is not supports sub fields", 35),jule::Slice<jule::Any>({jule::Any(_297841_d->_field_kind->_method_to_str())}));
	return jule::new_ref<_1b66db129_Data>();
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_sub_ident(jule::Ref<_1ce385d22_SubIdentExpr> _302438_si) {
	jule::Ref<_1b6703d45_TypeKind> _302517_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_302517_prefix;
	});
	jule::Ref<_1b66db129_Data> _302917_d = this->self->_method_eval_expr_kind(_302438_si->_field_expr);
	if ((!(jule::real(_302917_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_302917_d->_field_decl) {
		return this->self->_method_eval_type_static(_302917_d,_302438_si);
	}
	return this->self->_method_eval_obj_sub_ident(_302917_d,_302438_si);
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_tuple(jule::Ref<_1ce385d22_TupleExpr> _304134_tup) {
	jule::Ref<_1b6703d45_Tuple> _304217_tup_t = jule::new_struct<_1b6703d45_Tuple>(new( std::nothrow ) _1b6703d45_Tuple());
	_304217_tup_t->_field_types=jule::Slice<jule::Ref<_1b6703d45_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_304134_tup->_field_expr.len())));
	jule::Ref<_1b61decc6_TupleExprModel> _304517_model = jule::new_struct<_1b61decc6_TupleExprModel>(new( std::nothrow ) _1b61decc6_TupleExprModel(jule::Slice<jule::Ref<_1b66db129_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_304134_tup->_field_expr.len())))));
	jule::Bool _304917_ok = true;
	{
		jule::Int _1b66db129_i = 0;
		for (auto _1b66db129_expr: _304134_tup->_field_expr) {
			{
				jule::Ref<_1b66db129_Data> _305121_d = this->self->_method_eval_expr_kind(_1b66db129_expr->_field_kind);
				if ((!(jule::real(_305121_d)))) {
					_304917_ok=false;
					goto _iter_next_4543761584;
				}
				_304217_tup_t->_field_types[static_cast<jule::Int>(_1b66db129_i)]=_305121_d->_field_kind;
				_304517_model->_field_datas[static_cast<jule::Int>(_1b66db129_i)]=_305121_d;
			}
		_iter_next_4543761584:;
		_1b66db129_i++;
		}
		_iter_end_4543761584:;
	}
	if ((!(_304917_ok))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_304217_tup_t)),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_304517_model),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_map(jule::Ref<_1b6703d45_Map> _307032_m,jule::Ref<_1ce385d22_BraceLit> _307045_lit) {
	jule::Ref<_1b61decc6_MapExprModel> _307117_model = jule::new_struct<_1b61decc6_MapExprModel>(new( std::nothrow ) _1b61decc6_MapExprModel(_307032_m->_field_key,_307032_m->_field_val,jule::Slice<jule::Ref<_1b61decc6_KeyValPairExprModel>>()));
	for (auto _1b66db129_expr: _307045_lit->_field_exprs) {
		{
			{
				auto _match_expr{ _1b66db129_expr };
				if (!(_match_expr.type_is<jule::Ref<_1ce385d22_KeyValPair>>())) { goto _case_end_4543779344; }
				goto _match_end_4543777536;
				_case_end_4543779344:;
				_case_begin_4543777088:;
				{
					this->self->_method_push_err(_307045_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					return jule::new_ref<_1b66db129_Data>();
				}
				goto _match_end_4543777536;
				_case_end_4543777088:;
				_match_end_4543777536:;
			}
			jule::Ref<_1ce385d22_KeyValPair> _308621_pair = _1b66db129_expr.operator jule::Ref<_1ce385d22_KeyValPair>();
			jule::Ref<_1b66db129_Data> _308821_key = this->self->_method_eval_expr_kind(_308621_pair->_field_key);
			if ((!(jule::real(_308821_key)))) {
				return jule::new_ref<_1b66db129_Data>();
			}
			jule::Ref<_1b66db129_Data> _309321_val = this->self->_method_eval_expr_kind(_308621_pair->_field_val);
			if ((!(jule::real(_309321_val)))) {
				return jule::new_ref<_1b66db129_Data>();
			}
			this->self->_field_s->_method_check_assign_type(false,_307032_m->_field_key,_308821_key,_308621_pair->_field_colon,true);
			this->self->_field_s->_method_check_assign_type(false,_307032_m->_field_val,_309321_val,_308621_pair->_field_colon,true);
			_307117_model->_field_entries=jule::append(_307117_model->_field_entries,jule::Slice<jule::Ref<_1b61decc6_KeyValPairExprModel>>({jule::new_struct<_1b61decc6_KeyValPairExprModel>(new( std::nothrow ) _1b61decc6_KeyValPairExprModel(_308821_key->_field_model,_309321_val->_field_model))}));
		}
	_iter_next_4543775936:;
	}
	_iter_end_4543775936:;
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_307032_m)),jule::Ref<_1b6703d45_TypeKind>(),true,jule::Bool(),false,false,jule::Bool(),jule::Any(_307117_model),false,jule::Ref<_1b6d4076c_Const>()));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_brace_lit(jule::Ref<_1ce385d22_BraceLit> _311738_lit) {
	{
		if (!(((!(jule::real(this->self->_field_prefix)))))) { goto _case_end_4543796448; }
		_case_begin_4543796448:;
		{
			this->self->_method_push_err(_311738_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543792976;
		_case_end_4543796448:;
		if (!((jule::real(this->self->_field_prefix->_method_map())))) { goto _case_end_4543793920; }
		_case_begin_4543793920:;
		{
			return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_311738_lit);
		}
		goto _match_end_4543792976;
		_case_end_4543793920:;
		if (!((jule::real(this->self->_field_prefix->_method_strct())))) { goto _case_end_4543795792; }
		_case_begin_4543795792:;
		{
			return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_311738_lit->_field_exprs,_311738_lit->_field_token);
		}
		goto _match_end_4543792976;
		_case_end_4543795792:;
		_case_begin_4543793136:;
		{
			this->self->_method_push_err(_311738_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543792976;
		_case_end_4543793136:;
		_match_end_4543792976:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_anon_fn(jule::Ref<_1ce385d22_FnDecl> _313535_decl) {
	_1b6703d45_TypeChecker _313617_tc = _1b6703d45_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1b6703d45_Referencer>(),_1ce35e3a0_Token(),jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>(),jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>(),jule::Bool());
	jule::Ref<_1b6069348_FnIns> _314017_ins = _313617_tc._method_build_fn(_313535_decl);
	_314017_ins->_field_anon=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_ScopeChecker>>())) { goto _case_end_4543808656; }
		_case_begin_4543808656:;
		{
			jule::Ref<_1b61e873b_ScopeChecker> _314521_sc = (*this)._field_lookup.operator jule::Ref<_1b61e873b_ScopeChecker>();
			jule::Ref<_1b61e873b_ScopeChecker> _314621_scc = _314521_sc->_method_new_child_checker();
			_314621_scc->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_1b61e873b_ScopeLabel>>>(nullptr);
			_314621_scc->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_1b61e873b_ScopeGoto>>>(nullptr);
			jule::drop(_314621_scc->_field_owner);
			_314621_scc->_field_child_index=0LL;
			_314621_scc->_field_it=0LL;
			_314621_scc->_field_cse=0LL;
			_314621_scc->_field_owner=_314017_ins;
			(*this)._field_s->_method_check_fn_ins_sc(_314017_ins,_314621_scc);
		}
		goto _match_end_4543807856;
		_case_end_4543808656:;
		_case_begin_4543805280:;
		{
			(*this)._field_s->_method_check_fn_ins(_314017_ins);
		}
		goto _match_end_4543807856;
		_case_end_4543805280:;
		_match_end_4543807856:;
	}
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_314017_ins)),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_AnonFnExprModel>(new( std::nothrow ) _1b61decc6_AnonFnExprModel(_314017_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_binop(jule::Ref<_1ce385d22_BinopExpr> _316934_op) {
	jule::Ref<_1b6703d45_TypeKind> _317017_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_317017_prefix;
	});
	_1b66db129_BinopSolver _317417_bs = _1b66db129_BinopSolver(this->self,jule::Ref<_1b66db129_Data>(),jule::Ref<_1b66db129_Data>(),_1ce35e3a0_Token());
	return _317417_bs._method_solve(_316934_op);
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_ternary(jule::Ref<_1ce385d22_TernaryExpr> _318036_ter) {
	jule::Ref<_1b66db129_Data> _318117_d = this->self->_method_eval_expr_kind(_318036_ter->_field_condition);
	if ((!(jule::real(_318117_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b6703d45_Prim> _318613_prim = _318117_d->_field_kind->_method_prim();
	if ((!(jule::real(_318613_prim))) || (!(_318613_prim->_method_is_bool()))) {
		this->self->_method_push_err(_318036_ter->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b66db129_Data> _319217_td = this->self->_method_eval_expr_kind(_318036_ter->_field_true_expr);
	if ((!(jule::real(_319217_td)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_319217_td->_field_kind->_method_void()) {
		this->self->_method_push_err(_318036_ter->_field_token,jule::Str("void type cannot used for ternary operator", 42),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b6703d45_TypeKind> _320217_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_319217_td->_field_kind;
	jule::Ref<_1b66db129_Data> _320517_fd = this->self->_method_eval_expr_kind(_318036_ter->_field_false_expr);
	this->self->_field_prefix=_320217_prefix;
	if ((!(jule::real(_320517_fd)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	_1b65a085c_AssignTypeChecker _321217_ac = _1b65a085c_AssignTypeChecker(this->self->_field_s,jule::Ref<_1b6703d45_TypeKind>(),jule::Ref<_1b66db129_Data>(),_318036_ter->_field_token,jule::Bool());
	if (_319217_td->_method_is_const() && (!(_320517_fd->_method_is_const()))) {
		_321217_ac._field_dest=_320517_fd->_field_kind;
		_321217_ac._field_d=_319217_td;
	} else {
		_321217_ac._field_dest=_319217_td->_field_kind;
		_321217_ac._field_d=_320517_fd;
	}
	if ((!(_321217_ac._method_check()))) {
		this->self->_method_push_suggestion(jule::Str("use same or compatible values for ternary expressions", 53),jule::Slice<jule::Any>({}));
	}
	if (_318117_d->_method_is_const()) {
		if (_318117_d->_field_constant->_method_read_bool()) {
			return _319217_td;
		}
		return _320517_fd;
	}
	jule::Ref<_1b66db129_Data> _323417_r = jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data());
	_323417_r->_field_kind=_321217_ac._field_dest;
	_323417_r->_field_lvalue=_323417_r->_field_kind->_method_lvalue();
	_323417_r->_field_mutable=_323417_r->_field_kind->_method_mutable();
	_323417_r->_field_model=jule::Any(jule::new_struct<_1b61decc6_TernaryExprModel>(new( std::nothrow ) _1b61decc6_TernaryExprModel(_318117_d->_field_model,_319217_td->_field_model,_320517_fd->_field_model)));
	return _323417_r;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_expr_kind(jule::Any _324638_kind) {
	jule::Ref<_1b66db129_Data> _324717_d = jule::new_ref<_1b66db129_Data>();
	{
		auto _match_expr{ _324638_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_LitExpr>>())) { goto _case_end_4543859312; }
		_case_begin_4543859312:;
		{
			_324717_d=this->self->_method_eval_lit(_324638_kind.operator jule::Ref<_1ce385d22_LitExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543859312:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_IdentExpr>>())) { goto _case_end_4543859808; }
		_case_begin_4543859808:;
		{
			_324717_d=this->self->_method_eval_ident(_324638_kind.operator jule::Ref<_1ce385d22_IdentExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543859808:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_UnaryExpr>>())) { goto _case_end_4543859424; }
		_case_begin_4543859424:;
		{
			_324717_d=this->self->_method_eval_unary(_324638_kind.operator jule::Ref<_1ce385d22_UnaryExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543859424:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_VariadicExpr>>())) { goto _case_end_4543859520; }
		_case_begin_4543859520:;
		{
			_324717_d=this->self->_method_eval_variadic(_324638_kind.operator jule::Ref<_1ce385d22_VariadicExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543859520:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_UnsafeExpr>>())) { goto _case_end_4543860224; }
		_case_begin_4543860224:;
		{
			_324717_d=this->self->_method_eval_unsafe(_324638_kind.operator jule::Ref<_1ce385d22_UnsafeExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543860224:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_SliceExpr>>())) { goto _case_end_4543860320; }
		_case_begin_4543860320:;
		{
			_324717_d=this->self->_method_eval_slice_expr(_324638_kind.operator jule::Ref<_1ce385d22_SliceExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543860320:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_IndexingExpr>>())) { goto _case_end_4543860416; }
		_case_begin_4543860416:;
		{
			_324717_d=this->self->_method_eval_indexing(_324638_kind.operator jule::Ref<_1ce385d22_IndexingExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543860416:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_SlicingExpr>>())) { goto _case_end_4543860512; }
		_case_begin_4543860512:;
		{
			_324717_d=this->self->_method_eval_slicing(_324638_kind.operator jule::Ref<_1ce385d22_SlicingExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543860512:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_CastExpr>>())) { goto _case_end_4543860608; }
		_case_begin_4543860608:;
		{
			_324717_d=this->self->_method_eval_cast(_324638_kind.operator jule::Ref<_1ce385d22_CastExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543860608:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_NsSelectionExpr>>())) { goto _case_end_4543860704; }
		_case_begin_4543860704:;
		{
			_324717_d=this->self->_method_eval_ns_selection(_324638_kind.operator jule::Ref<_1ce385d22_NsSelectionExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543860704:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_StructLit>>())) { goto _case_end_4543860800; }
		_case_begin_4543860800:;
		{
			_324717_d=this->self->_method_eval_struct_lit(_324638_kind.operator jule::Ref<_1ce385d22_StructLit>());
		}
		goto _match_end_4543858368;
		_case_end_4543860800:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TypeDecl>>())) { goto _case_end_4543860896; }
		_case_begin_4543860896:;
		{
			_324717_d=this->self->_method_eval_type(_324638_kind.operator jule::Ref<_1ce385d22_TypeDecl>());
		}
		goto _match_end_4543858368;
		_case_end_4543860896:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_FnCallExpr>>())) { goto _case_end_4543860992; }
		_case_begin_4543860992:;
		{
			_324717_d=this->self->_method_eval_fn_call(_324638_kind.operator jule::Ref<_1ce385d22_FnCallExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543860992:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_SubIdentExpr>>())) { goto _case_end_4543861088; }
		_case_begin_4543861088:;
		{
			_324717_d=this->self->_method_eval_sub_ident(_324638_kind.operator jule::Ref<_1ce385d22_SubIdentExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543861088:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TupleExpr>>())) { goto _case_end_4543861200; }
		_case_begin_4543861200:;
		{
			_324717_d=this->self->_method_eval_tuple(_324638_kind.operator jule::Ref<_1ce385d22_TupleExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543861200:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_BraceLit>>())) { goto _case_end_4543861312; }
		_case_begin_4543861312:;
		{
			_324717_d=this->self->_method_eval_brace_lit(_324638_kind.operator jule::Ref<_1ce385d22_BraceLit>());
		}
		goto _match_end_4543858368;
		_case_end_4543861312:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_FnDecl>>())) { goto _case_end_4543861424; }
		_case_begin_4543861424:;
		{
			_324717_d=this->self->_method_eval_anon_fn(_324638_kind.operator jule::Ref<_1ce385d22_FnDecl>());
		}
		goto _match_end_4543858368;
		_case_end_4543861424:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_BinopExpr>>())) { goto _case_end_4543861536; }
		_case_begin_4543861536:;
		{
			_324717_d=this->self->_method_eval_binop(_324638_kind.operator jule::Ref<_1ce385d22_BinopExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543861536:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TernaryExpr>>())) { goto _case_end_4543861648; }
		_case_begin_4543861648:;
		{
			_324717_d=this->self->_method_eval_ternary(_324638_kind.operator jule::Ref<_1ce385d22_TernaryExpr>());
		}
		goto _match_end_4543858368;
		_case_end_4543861648:;
		_case_begin_4543857520:;
		{
			jule::drop(_324717_d);
		}
		goto _match_end_4543858368;
		_case_end_4543857520:;
		_match_end_4543858368:;
	}
	if ((!(jule::real(_324717_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if ((!(jule::real(_324717_d->_field_kind)))) {
		return _324717_d;
	}
	if ((((!(jule::real(_324717_d->_field_cast_kind))) && _324717_d->_method_is_const()) && (!(_324717_d->_field_is_rune))) && jule::real(_324717_d->_field_kind->_method_prim())) {
		{
			if (!((_324717_d->_field_constant->_method_is_i64()))) { goto _case_end_4543892640; }
			_case_begin_4543892640:;
			{
				if (_1b65a085c_int_assignable(jule::Str("int", 3),_324717_d)) {
					_324717_d->_field_kind->_field_kind=_1b6703d45_build_prim_type(jule::Str("int", 3));
					_324717_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_324717_d->_field_constant->_method_as_i64()));
				}
			}
			goto _match_end_4543862400;
			_case_end_4543892640:;
			if (!((_324717_d->_field_constant->_method_is_u64()))) { goto _case_end_4543892752; }
			_case_begin_4543892752:;
			{
				if (_1b65a085c_int_assignable(jule::Str("uint", 4),_324717_d)) {
					_324717_d->_field_kind->_field_kind=_1b6703d45_build_prim_type(jule::Str("uint", 4));
					_324717_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_324717_d->_field_constant->_method_as_u64()));
				}
			}
			goto _match_end_4543862400;
			_case_end_4543892752:;
			_match_end_4543862400:;
		}
	}
	if ((!(_324717_d->_field_decl))) {
		if ((((((((!(_324717_d->_field_kind->_method_cpp_linked())) && jule::real(this->self->_field_prefix)) && (!(jule::real(_324717_d->_field_cast_kind)))) && (!(_324717_d->_field_variadiced))) && (!(_324717_d->_field_lvalue))) && (!(_324717_d->_method_is_const()))) && jule::real(_324717_d->_field_kind->_method_prim())) && _1b6e2b4c3_is_num(_324717_d->_field_kind->_method_prim()->_field_kind)) {
			_324717_d->_field_cast_kind=_324717_d->_field_kind;
		}
		_1b66db129_apply_cast_kind(_324717_d);
		if ((!(jule::real(_324717_d->_field_kind->_method_prim()))) || (!(_324717_d->_field_kind->_method_prim()->_method_is_any()))) {
			if ((jule::real(this->self->_field_prefix) && jule::real(this->self->_field_prefix->_method_prim())) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_324717_d->_field_cast_kind=this->self->_field_prefix;
				_1b66db129_apply_cast_kind_model(_324717_d);
				jule::drop(_324717_d->_field_cast_kind);
			}
		}
	}
	return _324717_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval(jule::Ref<_1ce385d22_Expr> _332428_expr) {
	jule::Ref<_1b66db129_Data> _332517_d = this->self->_method_eval_expr_kind(_332428_expr->_field_kind);
	if ((!(jule::real(_332517_d))) || (!(jule::real(_332517_d->_field_kind)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	{
		if (!((jule::real(_332517_d->_field_kind->_method_fnc())))) { goto _case_end_4543917056; }
		_case_begin_4543917056:;
		{
			jule::Ref<_1b6069348_FnIns> _333221_f = _332517_d->_field_kind->_method_fnc();
			if (_333221_f->_method_is_builtin()) {
				goto _match_end_4543917664;
			}
			if (_333221_f->_field_generics.len() != _333221_f->_field_decl->_field_generics.len()) {
				this->self->_field_s->_method_push_err(_332428_expr->_field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			}
			if (_333221_f->_field_decl->_method_is_method()) {
				this->self->_field_s->_method_push_err(_332428_expr->_field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4543917664;
		_case_end_4543917056:;
		_match_end_4543917664:;
	}
	return _332517_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_Eval::_method_eval_expr(jule::Ref<_1ce385d22_Expr> _335233_expr) {
	jule::Ref<_1b66db129_Data> _335317_d = this->self->_method_eval(_335233_expr);
	{
		if (!(((!(jule::real(_335317_d)))))) { goto _case_end_4543929664; }
		_case_begin_4543929664:;
		{
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543928208;
		_case_end_4543929664:;
		if (!((_335317_d->_field_decl))) { goto _case_end_4543929760; }
		_case_begin_4543929760:;
		{
			this->self->_method_push_err(_335233_expr->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543928208;
		_case_end_4543929760:;
		_case_begin_4543928320:;
		{
			return _335317_d;
		}
		goto _match_end_4543928208;
		_case_end_4543928320:;
		_match_end_4543928208:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1b66db129_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b6703d45_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	jule::Str _6517_kind = jule::Str("", 0);
	if ((*this)._field_variadic) {
		_6517_kind+=jule::Str("...", 3);
	}
	if ((*this)._method_cpp_linked()) {
		_6517_kind+=jule::Str("cpp.", 4) + (*this)._field_cpp_ident;
	} else {
		_6517_kind+=(*this)._field_kind.get()._method_to_str();
	}
	return _6517_kind;
}



inline jule::Bool _1b6703d45_TypeKind::_method_equals(jule::Ref<_1b6703d45_TypeKind> _8021_other) {
	if ((*this)._method_is_nil()) {
		return _8021_other->_method_is_nil();
	}
	if ((*this)._method_cpp_linked()) {
		if ((!(_8021_other->_method_cpp_linked()))) {
			return false;
		}
		return (*this)._field_cpp_ident == _8021_other->_field_cpp_ident;
	}
	return (*this)._field_kind.get()._method_equals(_8021_other);
}



inline jule::Ref<_1b6703d45_TypeKind> _1b6703d45_TypeKind::_method_clone(void) {
	if ((!(jule::real(this->self)))) {
		return jule::new_ref<_1b6703d45_TypeKind>();
	}
	jule::Ref<_1b6703d45_TypeKind> _10317_kind = jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(this->self->_field_cpp_ident,jule::Bool(),jule::Bool(),this->self->_field_kind));
	return _10317_kind;
}



inline jule::Bool _1b6703d45_TypeKind::_method_cpp_linked(void) {
	return (*this)._field_cpp_ident.len() != 0LL;
}



inline jule::Bool _1b6703d45_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



inline jule::Bool _1b6703d45_TypeKind::_method_void(void) {
	jule::Ref<_1b6703d45_Prim> _11813_prim = (*((&((*this)))))._method_prim();
	return jule::real(_11813_prim) && (_11813_prim->_method_to_str() == jule::Str("void", 4));
}



inline jule::Bool _1b6703d45_TypeKind::_method_lvalue(void) {
	{
		_1b6703d45_TypeKind* _12521__self = (&((*this)));
		return ((jule::real(_12521__self->_method_ref()) || jule::real(_12521__self->_method_ptr())) || jule::real(_12521__self->_method_slc())) || jule::real(_12521__self->_method_map());
	}
}



inline jule::Bool _1b6703d45_TypeKind::_method_mutable(void) {
	{
		_1b6703d45_TypeKind* _13721__self = (&((*this)));
		if (jule::real(_13721__self->_method_strct())) {
			return _13721__self->_method_strct()->_field_mutable;
		}
		if (jule::real(_13721__self->_method_trt())) {
			return _13721__self->_method_trt()->_field_mutable;
		}
		if (jule::real(_13721__self->_method_prim())) {
			jule::Ref<_1b6703d45_Prim> _14621_p = _13721__self->_method_prim();
			return _14621_p->_method_is_any();
		}
		if (jule::real(_13721__self->_method_arr())) {
			return _13721__self->_method_arr()->_field_elem->_method_mutable();
		}
		return (jule::real(_13721__self->_method_slc()) || jule::real(_13721__self->_method_ptr())) || jule::real(_13721__self->_method_ref());
	}
}



inline jule::Bool _1b6703d45_TypeKind::_method_nil_compatible(void) {
	{
		_1b6703d45_TypeKind* _16121__self = (&((*this)));
		jule::Ref<_1b6703d45_Prim> _16317_prim = _16121__self->_method_prim();
		if (jule::real(_16317_prim) && _16317_prim->_method_is_any()) {
			return true;
		}
		return ((((_16121__self->_method_is_nil() || jule::real(_16121__self->_method_fnc())) || jule::real(_16121__self->_method_ptr())) || jule::real(_16121__self->_method_trt())) || jule::real(_16121__self->_method_slc())) || jule::real(_16121__self->_method_map());
	}
}



inline jule::Bool _1b6703d45_TypeKind::_method_supports_cloning(void) {
	{
		_1b6703d45_TypeKind* _18021__self = (&((*this)));
		{
			if (!((jule::real(_18021__self->_method_prim())))) { goto _case_end_4544354384; }
			_case_begin_4544354384:;
			{
				return (!(_18021__self->_method_prim()->_method_is_any()));
			}
			goto _match_end_4544352544;
			_case_end_4544354384:;
			if (!((jule::real(_18021__self->_method_enm())))) { goto _case_end_4544354480; }
			_case_begin_4544354480:;
			{
				return true;
			}
			goto _match_end_4544352544;
			_case_end_4544354480:;
			if (!((jule::real(_18021__self->_method_fnc())))) { goto _case_end_4544352944; }
			_case_begin_4544352944:;
			{
				return true;
			}
			goto _match_end_4544352544;
			_case_end_4544352944:;
			if (!((jule::real(_18021__self->_method_ptr())))) { goto _case_end_4544353040; }
			_case_begin_4544353040:;
			{
				return true;
			}
			goto _match_end_4544352544;
			_case_end_4544353040:;
			if (!((jule::real(_18021__self->_method_slc())))) { goto _case_end_4544353152; }
			_case_begin_4544353152:;
			{
				return _18021__self->_method_slc()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4544352544;
			_case_end_4544353152:;
			if (!((jule::real(_18021__self->_method_map())))) { goto _case_end_4544353264; }
			_case_begin_4544353264:;
			{
				jule::Ref<_1b6703d45_Map> _19421_m = _18021__self->_method_map();
				return _19421_m->_field_key->_method_supports_cloning() && _19421_m->_field_val->_method_supports_cloning();
			}
			goto _match_end_4544352544;
			_case_end_4544353264:;
			if (!((jule::real(_18021__self->_method_arr())))) { goto _case_end_4544353648; }
			_case_begin_4544353648:;
			{
				return _18021__self->_method_arr()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4544352544;
			_case_end_4544353648:;
			if (!((jule::real(_18021__self->_method_ref())))) { goto _case_end_4544353760; }
			_case_begin_4544353760:;
			{
				return _18021__self->_method_ref()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4544352544;
			_case_end_4544353760:;
			if (!((jule::real(_18021__self->_method_strct())))) { goto _case_end_4544353872; }
			_case_begin_4544353872:;
			{
				jule::Ref<_1ce385eed_StructIns> _20425_s = _18021__self->_method_strct();
				if ((!(_20425_s->_field_mutable))) {
					return true;
				}
				if (((!(jule::real(_20425_s->_field_decl))) || _20425_s->_field_decl->_field_cpp_linked) || (!(_20425_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					return false;
				}
				return true;
			}
			goto _match_end_4544352544;
			_case_end_4544353872:;
			_case_begin_4544352656:;
			{
				return false;
			}
			goto _match_end_4544352544;
			_case_end_4544352656:;
			_match_end_4544352544:;
		}
	}
}



inline jule::Bool _1b6703d45_TypeKind::_method_variadicable(void) {
	{
		_1b6703d45_TypeKind* _22221__self = (&((*this)));
		return jule::real(_22221__self->_method_slc());
	}
}



inline jule::Ref<_1b6703d45_Prim> _1b6703d45_TypeKind::_method_prim(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_Prim>>())) { goto _case_end_4544374304; }
		_case_begin_4544374304:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b6703d45_Prim>();
		}
		goto _match_end_4544371744;
		_case_end_4544374304:;
		_case_begin_4544372192:;
		{
			return jule::new_ref<_1b6703d45_Prim>();
		}
		goto _match_end_4544371744;
		_case_end_4544372192:;
		_match_end_4544371744:;
	}
}



inline jule::Ref<_1b6703d45_Ref> _1b6703d45_TypeKind::_method_ref(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_Ref>>())) { goto _case_end_4544377280; }
		_case_begin_4544377280:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b6703d45_Ref>();
		}
		goto _match_end_4544373152;
		_case_end_4544377280:;
		_case_begin_4544374784:;
		{
			return jule::new_ref<_1b6703d45_Ref>();
		}
		goto _match_end_4544373152;
		_case_end_4544374784:;
		_match_end_4544373152:;
	}
}



inline jule::Ref<_1b6703d45_Ptr> _1b6703d45_TypeKind::_method_ptr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_Ptr>>())) { goto _case_end_4544380288; }
		_case_begin_4544380288:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b6703d45_Ptr>();
		}
		goto _match_end_4544375984;
		_case_end_4544380288:;
		_case_begin_4544376896:;
		{
			return jule::new_ref<_1b6703d45_Ptr>();
		}
		goto _match_end_4544375984;
		_case_end_4544376896:;
		_match_end_4544375984:;
	}
}



inline jule::Ref<_1b61d7c58_Enum> _1b6703d45_TypeKind::_method_enm(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b61d7c58_Enum>>())) { goto _case_end_4544383296; }
		_case_begin_4544383296:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b61d7c58_Enum>();
		}
		goto _match_end_4544378992;
		_case_end_4544383296:;
		_case_begin_4544379904:;
		{
			return jule::new_ref<_1b61d7c58_Enum>();
		}
		goto _match_end_4544378992;
		_case_end_4544379904:;
		_match_end_4544378992:;
	}
}



inline jule::Ref<_1b6703d45_Arr> _1b6703d45_TypeKind::_method_arr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_Arr>>())) { goto _case_end_4544386400; }
		_case_begin_4544386400:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b6703d45_Arr>();
		}
		goto _match_end_4544382160;
		_case_end_4544386400:;
		_case_begin_4544384800:;
		{
			return jule::new_ref<_1b6703d45_Arr>();
		}
		goto _match_end_4544382160;
		_case_end_4544384800:;
		_match_end_4544382160:;
	}
}



inline jule::Ref<_1b6703d45_Slc> _1b6703d45_TypeKind::_method_slc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_Slc>>())) { goto _case_end_4544389376; }
		_case_begin_4544389376:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b6703d45_Slc>();
		}
		goto _match_end_4544385008;
		_case_end_4544389376:;
		_case_begin_4544386880:;
		{
			return jule::new_ref<_1b6703d45_Slc>();
		}
		goto _match_end_4544385008;
		_case_end_4544386880:;
		_match_end_4544385008:;
	}
}



inline jule::Ref<_1b6069348_FnIns> _1b6703d45_TypeKind::_method_fnc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b6069348_FnIns>>())) { goto _case_end_4544392544; }
		_case_begin_4544392544:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b6069348_FnIns>();
		}
		goto _match_end_4544388000;
		_case_end_4544392544:;
		_case_begin_4544389952:;
		{
			return jule::new_ref<_1b6069348_FnIns>();
		}
		goto _match_end_4544388000;
		_case_end_4544389952:;
		_match_end_4544388000:;
	}
}



inline jule::Ref<_1ce385eed_StructIns> _1b6703d45_TypeKind::_method_strct(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ce385eed_StructIns>>())) { goto _case_end_4544395520; }
		_case_begin_4544395520:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ce385eed_StructIns>();
		}
		goto _match_end_4544391392;
		_case_end_4544395520:;
		_case_begin_4544393024:;
		{
			return jule::new_ref<_1ce385eed_StructIns>();
		}
		goto _match_end_4544391392;
		_case_end_4544393024:;
		_match_end_4544391392:;
	}
}



inline jule::Ref<_1b61d7d79_Trait> _1b6703d45_TypeKind::_method_trt(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b61d7d79_Trait>>())) { goto _case_end_4544398624; }
		_case_begin_4544398624:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b61d7d79_Trait>();
		}
		goto _match_end_4544394304;
		_case_end_4544398624:;
		_case_begin_4544397024:;
		{
			return jule::new_ref<_1b61d7d79_Trait>();
		}
		goto _match_end_4544394304;
		_case_end_4544397024:;
		_match_end_4544394304:;
	}
}



inline jule::Ref<_1b6703d45_Map> _1b6703d45_TypeKind::_method_map(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_Map>>())) { goto _case_end_4544401600; }
		_case_begin_4544401600:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b6703d45_Map>();
		}
		goto _match_end_4544397232;
		_case_end_4544401600:;
		_case_begin_4544399104:;
		{
			return jule::new_ref<_1b6703d45_Map>();
		}
		goto _match_end_4544397232;
		_case_end_4544399104:;
		_match_end_4544397232:;
	}
}



inline jule::Ref<_1b6703d45_Tuple> _1b6703d45_TypeKind::_method_tup(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_Tuple>>())) { goto _case_end_4544404704; }
		_case_begin_4544404704:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b6703d45_Tuple>();
		}
		goto _match_end_4544400464;
		_case_end_4544404704:;
		_case_begin_4544403088:;
		{
			return jule::new_ref<_1b6703d45_Tuple>();
		}
		goto _match_end_4544400464;
		_case_end_4544403088:;
		_match_end_4544400464:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6703d45_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b6703d45_TypeSymbol::_method_checked(void) {
	return jule::real((*this)._field_kind);
}



inline void _1b6703d45_TypeSymbol::_method_remove_kind(void) {
	jule::drop((*this)._field_kind);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6703d45_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b6703d45_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _1b6703d45_Prim::_method_equals(jule::Ref<_1b6703d45_TypeKind> _34121_other) {
	jule::Ref<_1b6703d45_Prim> _34213_prim = (_34121_other).alloc->_method_prim();
	if ((!(jule::real(_34213_prim)))) {
		return false;
	}
	return _1b6d438d5_real_kind_of((*this)._field_kind) == _1b6d438d5_real_kind_of(_34213_prim->_field_kind);
}



inline jule::Bool _1b6703d45_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



inline jule::Bool _1b6703d45_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



inline jule::Bool _1b6703d45_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



inline jule::Bool _1b6703d45_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



inline jule::Bool _1b6703d45_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



inline jule::Bool _1b6703d45_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



inline jule::Bool _1b6703d45_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



inline jule::Bool _1b6703d45_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



inline jule::Bool _1b6703d45_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



inline jule::Bool _1b6703d45_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



inline jule::Bool _1b6703d45_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



inline jule::Bool _1b6703d45_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



inline jule::Bool _1b6703d45_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



inline jule::Bool _1b6703d45_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



inline jule::Bool _1b6703d45_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



inline jule::Bool _1b6703d45_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6703d45_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b6703d45_Ref::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1b6703d45_Ref::_method_equals(jule::Ref<_1b6703d45_TypeKind> _41021_other) {
	jule::Ref<_1b6703d45_Ref> _41113_ref = (_41021_other).alloc->_method_ref();
	if ((!(jule::real(_41113_ref)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_41113_ref->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6703d45_Ref &_Src) {
	_Stream << "Ref{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b6703d45_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1b6703d45_Slc::_method_equals(jule::Ref<_1b6703d45_TypeKind> _42921_other) {
	jule::Ref<_1b6703d45_Slc> _43013_slc = (_42921_other).alloc->_method_slc();
	if ((!(jule::real(_43013_slc)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_43013_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6703d45_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b6703d45_Tuple::_method_to_str(void) {
	jule::Str _44617_s = jule::Str("(", 1);
	_44617_s+=(*this)._field_types[0LL]->_method_to_str();
	for (auto _1b6703d45_t: (*this)._field_types.slice(1LL)) {
		{
			_44617_s+=jule::Str(",", 1);
			_44617_s+=_1b6703d45_t->_method_to_str();
		}
	_iter_next_4544454000:;
	}
	_iter_end_4544454000:;
	_44617_s+=jule::Str(")", 1);
	return _44617_s;
}



inline jule::Bool _1b6703d45_Tuple::_method_equals(jule::Ref<_1b6703d45_TypeKind> _45721_other) {
	jule::Ref<_1b6703d45_Tuple> _45813_tup = (_45721_other).alloc->_method_tup();
	if ((!(jule::real(_45813_tup)))) {
		return false;
	}
	if ((*this)._field_types.len() != _45813_tup->_field_types.len()) {
		return false;
	}
	jule::Int _46717_i = 0LL;
	for (; _46717_i < (*this)._field_types.len(); (_46717_i)++) {
		{
			if ((!((*this)._field_types[static_cast<jule::Int>(_46717_i)]->_method_equals(_45813_tup->_field_types[static_cast<jule::Int>(_46717_i)])))) {
				return false;
			}
		}
	_iter_next_4544461696:;
	}
	_iter_end_4544461696:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6703d45_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b6703d45_Map::_method_to_str(void) {
	jule::Str _48717_s = jule::Str("[", 1);
	_48717_s+=(*this)._field_key->_method_to_str();
	_48717_s+=jule::Str(":", 1);
	_48717_s+=(*this)._field_val->_method_to_str();
	_48717_s+=jule::Str("]", 1);
	return _48717_s;
}



inline jule::Bool _1b6703d45_Map::_method_equals(jule::Ref<_1b6703d45_TypeKind> _49621_other) {
	jule::Ref<_1b6703d45_Map> _49713_map = (_49621_other).alloc->_method_map();
	if ((!(jule::real(_49713_map)))) {
		return false;
	}
	return (*this)._field_key->_method_equals(_49713_map->_field_key) && (*this)._field_val->_method_equals(_49713_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6703d45_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b6703d45_Arr::_method_to_str(void) {
	jule::Str _51517_s = jule::Str("[", 1);
	_51517_s+=_1e86edbba_itoa((*this)._field_n);
	_51517_s+=jule::Str("]", 1);
	_51517_s+=(*this)._field_elem->_method_to_str();
	return _51517_s;
}



inline jule::Bool _1b6703d45_Arr::_method_equals(jule::Ref<_1b6703d45_TypeKind> _52321_other) {
	jule::Ref<_1b6703d45_Arr> _52413_arr = (_52321_other).alloc->_method_arr();
	if ((!(jule::real(_52413_arr)))) {
		return false;
	}
	return ((*this)._field_n == _52413_arr->_field_n) && (*this)._field_elem->_method_equals(_52413_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6703d45_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b6703d45_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1b6703d45_Ptr::_method_equals(jule::Ref<_1b6703d45_TypeKind> _54721_other) {
	jule::Ref<_1b6703d45_Ptr> _54813_ptr = (_54721_other).alloc->_method_ptr();
	if ((!(jule::real(_54813_ptr)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_54813_ptr->_field_elem);
}



inline jule::Bool _1b6703d45_Ptr::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6703d45_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6703d45_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1ce135770_PlainImporter::_method_get_import(jule::Str _10033_path) {
	for (auto _1ce135770_p: (*this)._field_all_packages) {
		{
			if (_1ce135770_p->_field_path == _10033_path) {
				return _1ce135770_p;
			}
		}
	_iter_next_4545043600:;
	}
	_iter_end_4545043600:;
	return jule::new_ref<_1b623bb7a_ImportInfo>();
}



inline std::tuple<jule::Slice<jule::Ref<_1ce2b7acd_Ast>>,jule::Slice<_1e7690a81_Log>> _1ce135770_PlainImporter::_method_import_package(jule::Str _11037_path) {
	jule::Slice<jule::Ref<_1ce3851c8_DirEntry>> _11114_dirents;
	jule::Str _11123_err_msg;
	std::tie(_11114_dirents,_11123_err_msg) = _1ce135770_read_package_dirents(_11037_path);
	if (_11123_err_msg != jule::Str("", 0)) {
		jule::Slice<_1e7690a81_Log> _11321_errors = jule::Slice<_1e7690a81_Log>({_1ce135770_flat_compiler_err(_11123_err_msg)});
		return std::make_tuple(nullptr,_11321_errors);
	}
	jule::Slice<jule::Ref<_1ce2b7acd_Ast>> _11717_asts = jule::Slice<jule::Ref<_1ce2b7acd_Ast>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_11114_dirents.len())));
	for (auto _1ce135770_dirent: _11114_dirents) {
		{
			jule::Str _11917__path = _1e777b83c_join(jule::Slice<jule::Str>({_11037_path,_1ce135770_dirent->_field_name}));
			jule::Ref<_1ce4aae47_File> _12021_file = _1ce4aae47_new_file_set(_11917__path);
			_12021_file->_method_fill(_1ce135770_read_buff(_12021_file->_method_path()));
			jule::Slice<_1e7690a81_Log> _12221_errors = _1ce494282_lex(_12021_file);
			if (_12221_errors.len() > 0LL) {
				return std::make_tuple(nullptr,_12221_errors);
			}
			jule::Ref<_1ce38611e_FileInfo> _12721_finfo = _1ce38611e_parse_file(_12021_file);
			if (_12721_finfo->_field_errors.len() > 0LL) {
				return std::make_tuple(nullptr,_12721_finfo->_field_errors);
			}
			if ((!(_1cde55d87_is_pass_file_annotation(_1ce135770_dirent->_field_name)))) {
				goto _iter_next_4545053936;
			}
			if ((!(_1ce135770_is_pass_build_directives(_12721_finfo->_field_ast)))) {
				goto _iter_next_4545053936;
			}
			_11717_asts=jule::append(_11717_asts,jule::Slice<jule::Ref<_1ce2b7acd_Ast>>({_12721_finfo->_field_ast}));
		}
	_iter_next_4545053936:;
	}
	_iter_end_4545053936:;
	return std::make_tuple(_11717_asts,nullptr);
}



inline void _1ce135770_PlainImporter::_method_imported(jule::Ref<_1b623bb7a_ImportInfo> _14835_imp) {
	for (auto _1ce135770_p: (*this)._field_all_packages) {
		{
			if ((_1ce135770_p->_field_cpp_linked == _14835_imp->_field_cpp_linked) && (_1ce135770_p->_field_link_path == _14835_imp->_field_link_path)) {
				return;
			}
		}
	_iter_next_4545071296:;
	}
	_iter_end_4545071296:;
	(*this)._field_all_packages=jule::append((*this)._field_all_packages,jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>>({_14835_imp}));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce135770_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1cde30c0d_OrderedDefines &_Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1cde30c0d_DefineOrderer::_static_method_is_common_ordered_0(jule::Slice<jule::Ref<_1b637edab_Var>>& _1837_s,jule::Ref<_1b637edab_Var> _1846_t) {
	jule::Int _1917_j = 0LL;
	for (auto _1cde30c0d_tt: _1837_s) {
		{
			if ((_1cde30c0d_tt).alloc == (_1846_t).alloc) {
				goto _iter_end_4545183696;
			}
			if ((_1cde30c0d_tt).alloc == (_1846_t->_field_depends[static_cast<jule::Int>(_1917_j)]).alloc) {
				(_1917_j)++;
				if (_1917_j >= _1846_t->_field_depends.len()) {
					return true;
				}
			}
		}
	_iter_next_4545183696:;
	}
	_iter_end_4545183696:;
	return false;
}

inline jule::Bool _1cde30c0d_DefineOrderer::_static_method_is_common_ordered_1(jule::Slice<jule::Ref<_1ce385eed_Struct>>& _1837_s,jule::Ref<_1ce385eed_Struct> _1846_t) {
	jule::Int _1917_j = 0LL;
	for (auto _1cde30c0d_tt: _1837_s) {
		{
			if ((_1cde30c0d_tt).alloc == (_1846_t).alloc) {
				goto _iter_end_4545210000;
			}
			if ((_1cde30c0d_tt).alloc == (_1846_t->_field_depends[static_cast<jule::Int>(_1917_j)]).alloc) {
				(_1917_j)++;
				if (_1917_j >= _1846_t->_field_depends.len()) {
					return true;
				}
			}
		}
	_iter_next_4545210000:;
	}
	_iter_end_4545210000:;
	return false;
}



inline void _1cde30c0d_DefineOrderer::_static_method_order_common_0(jule::Slice<jule::Ref<_1b637edab_Var>>& _3640_s) {
	jule::Int _3717_i = 0LL;
	{
		jule::Int _1cde30c0d_j = 0;
		for (auto _1cde30c0d_t: _3640_s) {
			{
				if (_1cde30c0d_t->_field_depends.len() == 0LL) {
					std::tie(_3640_s[static_cast<jule::Int>(_3717_i)],_3640_s[static_cast<jule::Int>(_1cde30c0d_j)]) = std::make_tuple(_1cde30c0d_t,_3640_s[static_cast<jule::Int>(_3717_i)]);
					(_3717_i)++;
				}
			}
		_iter_next_4545164832:;
		_1cde30c0d_j++;
		}
		_iter_end_4545164832:;
	}
	jule::Int _4517_j = _3717_i;
	for (; _4517_j < _3640_s.len(); (_4517_j)++) {
		{
			jule::Int _4721_k = _3717_i;
			for (; _4721_k < (_3640_s.len() - 1LL); (_4721_k)++) {
				{
					if ((!(_1cde30c0d_DefineOrderer::_static_method_is_common_ordered_0(_3640_s,_3640_s[static_cast<jule::Int>(_4721_k)])))) {
						std::tie(_3640_s[static_cast<jule::Int>(_4721_k)],_3640_s[static_cast<jule::Int>(_4721_k + 1LL)]) = std::make_tuple(_3640_s[static_cast<jule::Int>(_4721_k + 1LL)],_3640_s[static_cast<jule::Int>(_4721_k)]);
					}
				}
			_iter_next_4545166448:;
			}
			_iter_end_4545166448:;
		}
	_iter_next_4545164640:;
	}
	_iter_end_4545164640:;
}

inline void _1cde30c0d_DefineOrderer::_static_method_order_common_1(jule::Slice<jule::Ref<_1ce385eed_Struct>>& _3640_s) {
	jule::Int _3717_i = 0LL;
	{
		jule::Int _1cde30c0d_j = 0;
		for (auto _1cde30c0d_t: _3640_s) {
			{
				if (_1cde30c0d_t->_field_depends.len() == 0LL) {
					std::tie(_3640_s[static_cast<jule::Int>(_3717_i)],_3640_s[static_cast<jule::Int>(_1cde30c0d_j)]) = std::make_tuple(_1cde30c0d_t,_3640_s[static_cast<jule::Int>(_3717_i)]);
					(_3717_i)++;
				}
			}
		_iter_next_4545191200:;
		_1cde30c0d_j++;
		}
		_iter_end_4545191200:;
	}
	jule::Int _4517_j = _3717_i;
	for (; _4517_j < _3640_s.len(); (_4517_j)++) {
		{
			jule::Int _4721_k = _3717_i;
			for (; _4721_k < (_3640_s.len() - 1LL); (_4721_k)++) {
				{
					if ((!(_1cde30c0d_DefineOrderer::_static_method_is_common_ordered_1(_3640_s,_3640_s[static_cast<jule::Int>(_4721_k)])))) {
						std::tie(_3640_s[static_cast<jule::Int>(_4721_k)],_3640_s[static_cast<jule::Int>(_4721_k + 1LL)]) = std::make_tuple(_3640_s[static_cast<jule::Int>(_4721_k + 1LL)],_3640_s[static_cast<jule::Int>(_4721_k)]);
					}
				}
			_iter_next_4545192816:;
			}
			_iter_end_4545192816:;
		}
	_iter_next_4545191008:;
	}
	_iter_end_4545191008:;
}



inline void _1cde30c0d_DefineOrderer::_static_method_order_variables(jule::Slice<jule::Ref<_1b637edab_Var>>& _5840_vars) {
	_1cde30c0d_DefineOrderer::_static_method_order_common_0(_5840_vars);
}



inline void _1cde30c0d_DefineOrderer::_static_method_order_structures(jule::Slice<jule::Ref<_1ce385eed_Struct>>& _6441_structs) {
	_1cde30c0d_DefineOrderer::_static_method_order_common_1(_6441_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1cde30c0d_DefineOrderer &_Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _1cdd24409_ScopeDeadCode::_method_optimize_child(jule::Ref<_1b61e873b_Scope>& _2239_s) {
	jule::Ref<_1cdd24409_ScopeDeadCode> _2317_sdc = jule::new_struct_ref<_1cdd24409_ScopeDeadCode>(new( std::nothrow ) _1cdd24409_ScopeDeadCode(this->self,_2239_s,(&(_2239_s->_field_stmts)),jule::Int()));
	{
		_2317_sdc->_method_optimize_stmts();
	}
}



inline void _1cdd24409_ScopeDeadCode::_method_eliminate_followed(void) {
	(*((*this)._field_stmts))=(*((*this)._field_stmts)).slice(0LL,static_cast<jule::Int>((*this)._field_i + 1LL));
	jule::Ref<_1cdd24409_ScopeDeadCode> _3317_parent = (*this)._field_parent;
	while (jule::real(_3317_parent)) {
		{
			(*(_3317_parent->_field_stmts))=(*(_3317_parent->_field_stmts)).slice(0LL,static_cast<jule::Int>(_3317_parent->_field_i + 1LL));
			_3317_parent=_3317_parent->_field_parent;
		}
	_iter_next_4545450368:;
	}
	_iter_end_4545450368:;
}



inline void _1cdd24409_ScopeDeadCode::_method_optimize_stmt(jule::Any _4044_st) {
	{
		auto _match_expr{ _4044_st };
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Scope>>())) { goto _case_end_4545457072; }
		_case_begin_4545457072:;
		{
			jule::Ref<_1b61e873b_Scope> _4321_scope = _4044_st.operator jule::Ref<_1b61e873b_Scope>();
			if (_4321_scope->_field_deferred) {
				_1cdd24409_eliminate_dead_code_of_scope(_4321_scope);
			} else {
				this->self->_method_optimize_child(_4321_scope);
			}
		}
		goto _match_end_4545457312;
		_case_end_4545457072:;
		if (!(_match_expr.type_is<jule::Ref<_1b66db129_Data>>())) { goto _case_end_4545457392; }
		_case_begin_4545457392:;
		{
			{
				auto _match_expr{ _4044_st.operator jule::Ref<_1b66db129_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BuiltinPanicCallExprModel>>())) { goto _case_end_4545460976; }
				_case_begin_4545460976:;
				{
					this->self->_method_eliminate_followed();
				}
				goto _match_end_4545463152;
				_case_end_4545460976:;
				_match_end_4545463152:;
			}
		}
		goto _match_end_4545457312;
		_case_end_4545457392:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_RetSt>>())) { goto _case_end_4545457504; }
		_case_begin_4545457504:;
		{
			this->self->_method_eliminate_followed();
		}
		goto _match_end_4545457312;
		_case_end_4545457504:;
		_match_end_4545457312:;
	}
}



inline void _1cdd24409_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	for (; this->self->_field_i < this->self->_field_stmts->len(); (this->self->_field_i)++) {
		{
			this->self->_method_optimize_stmt((*(this->self->_field_stmts))[static_cast<jule::Int>(this->self->_field_i)]);
		}
	_iter_next_4545458544:;
	}
	_iter_end_4545458544:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1cdd24409_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1b72774ab_AbsTime::_method_unix(void) {
	jule::Bool _5417_leap = false;
	jule::Uint _5517_y = (*this)._field_year - 1900LL;
	jule::Uint _5617_m = (*this)._field_month - 1LL;
	if ((_5617_m >= 12LL) || (_5617_m < 0LL)) {
		jule::Uint _5821_adj = jule::div(_5617_m,12LL);
		_5617_m = jule::mod(_5617_m,12LL);
		if (_5617_m < 0LL) {
			(_5821_adj)--;
			_5617_m+=12LL;
		}
		_5517_y+=_5821_adj;
	}
	jule::U64 _6617_t = _1b72774ab_unix_year_to_seconds(_5517_y,_5417_leap);
	_6617_t+=static_cast<jule::U64>(_1b72774ab_unix_month_to_seconds(_5617_m,_5417_leap));
	_6617_t+=static_cast<jule::Uint>(86400LL * ((*this)._field_day - 1LL));
	_6617_t+=static_cast<jule::Uint>(3600LL * (*this)._field_hour);
	_6617_t+=static_cast<jule::Uint>(60LL * (*this)._field_minute);
	_6617_t+=(*this)._field_second;
	return _6617_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b72774ab_AbsTime &_Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1b72774ab_Time _1b72774ab_Time::_static_method_unix(jule::U64 _8924_sec) {
	return _1b72774ab_Time(_8924_sec);
}



inline _1b72774ab_Time _1b72774ab_Time::_static_method_now(void) {
	return _1b72774ab_Time::_static_method_unix(static_cast<jule::U64>(_1b72774ab_unix()));
}



inline jule::U64 _1b72774ab_Time::_method_unix(void) {
	return (*this)._field_sec;
}



inline jule::Uint _1b72774ab_Time::_method_day(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_day);
}



inline jule::Uint _1b72774ab_Time::_method_month(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_month);
}



inline jule::Uint _1b72774ab_Time::_method_year(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_year);
}



inline jule::Uint _1b72774ab_Time::_method_second(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_second);
}



inline jule::Uint _1b72774ab_Time::_method_minute(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_minute);
}



inline jule::Uint _1b72774ab_Time::_method_hour(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_hour);
}



inline _1b72774ab_AbsTime _1b72774ab_Time::_method_abs(void) {
	jule::U64 _12513_secs = (*this)._field_sec - 951868800LL;
	jule::U64 _12617_days = jule::div(_12513_secs,86400LL);
	jule::U64 _12717_rem_secs = jule::mod(_12513_secs,86400LL);
	if (_12717_rem_secs < 0LL) {
		_12717_rem_secs+=86400LL;
		(_12617_days)--;
	}
	jule::U64 _13317_qc_cycles = jule::div(_12617_days,146097LL);
	jule::U64 _13417_rem_days = jule::mod(_12617_days,146097LL);
	if (_13417_rem_days < 0LL) {
		_13417_rem_days+=146097LL;
		(_13317_qc_cycles)--;
	}
	jule::U64 _14017_c_cycles = jule::div(_13417_rem_days,36524LL);
	if (_14017_c_cycles == 4LL) {
		(_14017_c_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14017_c_cycles * 36524LL);
	jule::U64 _14617_q_cycles = jule::div(_13417_rem_days,1461LL);
	if (_14617_q_cycles == 25LL) {
		(_14617_q_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14617_q_cycles * 1461LL);
	jule::U64 _15217_rem_years = jule::div(_13417_rem_days,365LL);
	if (_15217_rem_years == 4LL) {
		(_15217_rem_years)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_15217_rem_years * 365LL);
	jule::Int _15813_leap = ((((_15217_rem_years == 0LL) && ((_14617_q_cycles > 0LL) || (_14017_c_cycles == 0LL)))) ? (1LL) : (0LL));
	jule::U64 _15917_y_day = ((_13417_rem_days + 31LL) + 28LL) + _15813_leap;
	if (_15917_y_day >= (365LL + _15813_leap)) {
		_15917_y_day-=static_cast<jule::Int>(365LL + _15813_leap);
	}
	jule::Int _16417_months = 0LL;
	for (; _1b72774ab_MDAYS[static_cast<jule::Int>(_16417_months)] <= _13417_rem_days; (_16417_months)++) {
		{
			_13417_rem_days-=_1b72774ab_MDAYS[static_cast<jule::Int>(_16417_months)];
		}
	_iter_next_4545572576:;
	}
	_iter_end_4545572576:;
	_1b72774ab_AbsTime _16917_t = _1b72774ab_AbsTime();
	_16917_t._field_year=static_cast<jule::U64>((((_15217_rem_years + (4LL * _14617_q_cycles)) + (100LL * _14017_c_cycles)) + (400LL * _13317_qc_cycles)) + 100LL);
	_16917_t._field_month=static_cast<jule::Uint>(_16417_months + 2LL);
	if (_16917_t._field_month >= 12LL) {
		_16917_t._field_month-=12LL;
		(_16917_t._field_year)++;
	}
	_16917_t._field_month+=1LL;
	_16917_t._field_year+=1900LL;
	_16917_t._field_day=static_cast<jule::U64>(_13417_rem_days + 1LL);
	_16917_t._field_week_day=static_cast<jule::U64>(jule::mod(3LL + _12617_days,7LL));
	if (_16917_t._field_week_day < 0LL) {
		_16917_t._field_week_day+=7LL;
	}
	_16917_t._field_year_day=_15917_y_day;
	_16917_t._field_hour=static_cast<jule::U64>(jule::div(_12717_rem_secs,3600LL));
	_16917_t._field_minute=static_cast<jule::U64>(jule::mod(jule::div(_12717_rem_secs,60LL),60LL));
	_16917_t._field_second=static_cast<jule::U64>(jule::mod(_12717_rem_secs,60LL));
	return _16917_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b72774ab_Time &_Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 _1b72774ab_Duration::_static_method_nanoseconds(jule::I64 _22231_d) {
	return static_cast<jule::I64>(_22231_d * 1LL);
}



inline jule::I64 _1b72774ab_Duration::_static_method_microseconds(jule::I64 _22732_d) {
	return static_cast<jule::I64>(_22732_d * 1000LL);
}



inline jule::I64 _1b72774ab_Duration::_static_method_milliseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>(_23232_d * 1000000LL);
}



inline jule::I64 _1b72774ab_Duration::_static_method_seconds(jule::I64 _23727_d) {
	return static_cast<jule::I64>(_23727_d * 1000000000LL);
}



inline jule::I64 _1b72774ab_Duration::_static_method_minutes(jule::I64 _24227_d) {
	return static_cast<jule::I64>(_24227_d * 60000000000LL);
}



inline jule::I64 _1b72774ab_Duration::_static_method_hours(jule::I64 _24725_d) {
	return static_cast<jule::I64>(_24725_d * 3600000000000LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b72774ab_Duration &_Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e86b150c_IndexRangeIterGen::_method_gen(void) {
	jule::Str _5117_obj = jule::Str("", 0);
	if (jule::real((*this)._field_it->_field_key_a)) {
		_1b710e497_add_indent();
		_5117_obj+=jule::Str("{\n", 2);
		_5117_obj+=_1b710e497_indent();
		_5117_obj+=_1b710e497_gen_var_init_expr((*this)._field_it->_field_key_a,jule::Str("0", 1));
		_5117_obj+=jule::Str("\n", 1);
		_5117_obj+=_1b710e497_indent();
	}
	_5117_obj+=jule::Str("for (auto ", 10);
	if (jule::real((*this)._field_it->_field_key_b)) {
		if (_1ce1465e9_is_opt_enabled(jule::Str("--opt-copy", 10))) {
			if ((!((*this)._field_it->_field_key_b->_field_mutable)) || (*this)._field_it->_field_key_b->_field_kind->_field_kind->_method_mutable()) {
				_5117_obj+=jule::Str("&", 1);
			}
		}
		_5117_obj+=_1b710bbe2_var_out_ident((*this)._field_it->_field_key_b);
	} else {
		_5117_obj+=jule::Str("&_", 2);
	}
	_5117_obj+=jule::Str(": ", 2);
	_5117_obj+=_1e86ed47d_gen_expr((*this)._field_it->_field_expr->_field_model);
	_5117_obj+=jule::Str(") {\n", 4);
	_1b710e497_add_indent();
	_5117_obj+=_1b710e497_indent();
	_5117_obj+=_1e86b150c_gen_scope((*this)._field_it->_field_scope);
	_5117_obj+=jule::Str("\n", 1);
	_1b710e497_done_indent();
	_5117_obj+=_1b710e497_indent();
	_5117_obj+=_1b710bbe2_iter_next_label_ident(((jule::Uintptr)(((*this)._field_it).alloc)));
	_5117_obj+=jule::Str(":;\n", 3);
	if (jule::real((*this)._field_it->_field_key_a)) {
		_5117_obj+=_1b710e497_indent();
		_5117_obj+=_1b710bbe2_var_out_ident((*this)._field_it->_field_key_a);
		_5117_obj+=jule::Str("++;", 3);
		_5117_obj+=jule::Str("\n", 1);
	}
	_5117_obj+=_1b710e497_indent();
	_5117_obj+=jule::Str("}\n", 2);
	_5117_obj+=_1b710e497_indent();
	_5117_obj+=_1b710bbe2_iter_end_label_ident(((jule::Uintptr)(((*this)._field_it).alloc)));
	_5117_obj+=jule::Str(":;", 2);
	if (jule::real((*this)._field_it->_field_key_a)) {
		_1b710e497_done_indent();
		_5117_obj+=jule::Str("\n", 1);
		_5117_obj+=_1b710e497_indent();
		_5117_obj+=jule::Str("}", 1);
	}
	return _5117_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e86b150c_IndexRangeIterGen &_Src) {
	_Stream << "IndexRangeIterGen{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e86b150c_MapRangeIterGen::_method_gen(void) {
	jule::Str _11717_obj = jule::Str("for (auto &set: ", 16);
	_11717_obj+=_1e86ed47d_gen_expr((*this)._field_it->_field_expr->_field_model);
	_11717_obj+=jule::Str(") {\n", 4);
	_1b710e497_add_indent();
	_11717_obj+=_1b710e497_indent();
	if (jule::real((*this)._field_it->_field_key_a)) {
		_11717_obj+=_1b710e497_gen_var_init_expr((*this)._field_it->_field_key_a,jule::Str("set.first", 9));
		_11717_obj+=jule::Str("\n", 1);
		_11717_obj+=_1b710e497_indent();
	}
	if (jule::real((*this)._field_it->_field_key_b)) {
		if (_1ce1465e9_is_opt_enabled(jule::Str("--opt-copy", 10))) {
			(*this)._field_it->_field_key_b->_field_reference=(!((*this)._field_it->_field_key_b->_field_mutable)) || (*this)._field_it->_field_key_b->_field_kind->_field_kind->_method_mutable();
		}
		_11717_obj+=_1b710e497_gen_var_init_expr((*this)._field_it->_field_key_b,jule::Str("set.second", 10));
		_11717_obj+=jule::Str("\n", 1);
		_11717_obj+=_1b710e497_indent();
	}
	_11717_obj+=_1e86b150c_gen_scope((*this)._field_it->_field_scope);
	_11717_obj+=jule::Str("\n", 1);
	_1b710e497_done_indent();
	_11717_obj+=_1b710e497_indent();
	_11717_obj+=_1b710bbe2_iter_next_label_ident(((jule::Uintptr)(((*this)._field_it).alloc)));
	_11717_obj+=jule::Str(":;\n", 3);
	_11717_obj+=_1b710e497_indent();
	_11717_obj+=jule::Str("}\n", 2);
	_11717_obj+=_1b710e497_indent();
	_11717_obj+=_1b710bbe2_iter_end_label_ident(((jule::Uintptr)(((*this)._field_it).alloc)));
	_11717_obj+=jule::Str(":;", 2);
	return _11717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e86b150c_MapRangeIterGen &_Src) {
	_Stream << "MapRangeIterGen{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}



inline void _1b65a085c_DynamicTypeAnnotation::_method_push_generic(jule::Ref<_1b6703d45_TypeKind>& _54536_k,jule::Int _54550_i) {
	(*this)._field_f->_field_generics[static_cast<jule::Int>(_54550_i)]=_54536_k;
}



inline jule::Bool _1b65a085c_DynamicTypeAnnotation::_method_annotate_prim(jule::Ref<_1b6703d45_TypeKind>& _54944_k) {
	jule::Bool _54960_ok = jule::Bool();
	jule::Str _55013_kind = (*((*this)._field_k))->_method_to_str();
	{
		jule::Int _1b65a085c_i = 0;
		for (auto _1b65a085c_g: (*this)._field_f->_field_decl->_field_generics) {
			{
				if (_55013_kind != _1b65a085c_g->_field_ident) {
					goto _iter_next_4541736896;
				}
				jule::Ref<_1b6703d45_TypeKind> _55617_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_1b65a085c_i)];
				{
					if (!(((!(jule::real(_55617_t)))))) { goto _case_end_4541741952; }
					_case_begin_4541741952:;
					{
						(*this)._method_push_generic(_54944_k,_1b65a085c_i);
					}
					goto _match_end_4541741712;
					_case_end_4541741952:;
					if (!(((!(_55617_t->_method_equals(_54944_k)))))) { goto _case_end_4541742048; }
					_case_begin_4541742048:;
					{
						_54960_ok = false;
						return _54960_ok;
					}
					goto _match_end_4541741712;
					_case_end_4541742048:;
					_match_end_4541741712:;
				}
				(*((*this)._field_k))->_field_kind=_54944_k->_field_kind;
				_54960_ok = true;
				return _54960_ok;
			}
		_iter_next_4541736896:;
		_1b65a085c_i++;
		}
		_iter_end_4541736896:;
	}
	_54960_ok = false;
	return _54960_ok;
}



inline jule::Bool _1b65a085c_DynamicTypeAnnotation::_method_annotate_slc(jule::Ref<_1b6703d45_TypeKind>& _57343_k) {
	jule::Bool _57359_ok = jule::Bool();
	jule::Ref<_1b6703d45_Slc> _57417_pslc = (*((*this)._field_k))->_method_slc();
	if ((!(jule::real(_57417_pslc)))) {
		_57359_ok = false;
		return _57359_ok;
	}
	jule::Ref<_1b6703d45_Slc> _57917_slc = _57343_k->_method_slc();
	_1b6703d45_TypeKind* _58017_kk = (_57417_pslc->_field_elem).alloc;
	(*this)._field_k=(&(_58017_kk));
	_57359_ok = (*this)._method_annotate_kind(_57917_slc->_field_elem);
	return _57359_ok;
}



inline jule::Bool _1b65a085c_DynamicTypeAnnotation::_method_check_map_key(_1b6703d45_TypeKind** _58543_k,jule::Ref<_1b6703d45_TypeKind>& _58563_ck) {
	jule::Bool _58580_ok = jule::Bool();
	_1b6703d45_TypeKind** _58617_old = (*this)._field_k;
	(*this)._field_k=_58543_k;
	_58580_ok=(*this)._method_annotate_kind(_58563_ck);
	(*this)._field_k=_58617_old;
	_58580_ok = _58580_ok;
	return _58580_ok;
}



inline jule::Bool _1b65a085c_DynamicTypeAnnotation::_method_annotate_map(jule::Ref<_1b6703d45_TypeKind>& _59343_k) {
	jule::Bool _59359_ok = jule::Bool();
	jule::Ref<_1b6703d45_Map> _59417_pmap = (*((*this)._field_k))->_method_map();
	if ((!(jule::real(_59417_pmap)))) {
		_59359_ok = false;
		return _59359_ok;
	}
	jule::Ref<_1b6703d45_Map> _59917_m = _59343_k->_method_map();
	_1b6703d45_TypeKind* _60117_key = (_59417_pmap->_field_key).alloc;
	_1b6703d45_TypeKind* _60217_val = (_59417_pmap->_field_val).alloc;
	_59359_ok = (*this)._method_check_map_key((&(_60117_key)),_59917_m->_field_key) && (*this)._method_check_map_key((&(_60217_val)),_59917_m->_field_val);
	return _59359_ok;
}



inline jule::Bool _1b65a085c_DynamicTypeAnnotation::_method_annotate_fn(jule::Ref<_1b6703d45_TypeKind>& _60642_k) {
	jule::Bool _60658_ok = jule::Bool();
	jule::Ref<_1b6069348_FnIns> _60717_pf = (*((*this)._field_k))->_method_fnc();
	if ((!(jule::real(_60717_pf)))) {
		_60658_ok = false;
		return _60658_ok;
	}
	jule::Ref<_1b6069348_FnIns> _61117_f = _60642_k->_method_fnc();
	{
		if (!((_60717_pf->_field_params.len() != _61117_f->_field_params.len()))) { goto _case_end_4541776896; }
		_case_begin_4541776896:;
		{
			_60658_ok = false;
			return _60658_ok;
		}
		goto _match_end_4541776752;
		_case_end_4541776896:;
		if (!((_60717_pf->_field_decl->_method_is_void() != _61117_f->_field_decl->_method_is_void()))) { goto _case_end_4541777008; }
		_case_begin_4541777008:;
		{
			_60658_ok = false;
			return _60658_ok;
		}
		goto _match_end_4541776752;
		_case_end_4541777008:;
		_match_end_4541776752:;
	}
	_60658_ok=true;
	_1b6703d45_TypeKind** _62117_old = (*this)._field_k;
	{
		jule::Int _1b65a085c_i = 0;
		for (auto _1b65a085c_fp: _61117_f->_field_params) {
			{
				_1b6703d45_TypeKind* _62321_pfp = (_60717_pf->_field_params[static_cast<jule::Int>(_1b65a085c_i)]->_field_kind).alloc;
				(*this)._field_k=(&(_62321_pfp));
				_60658_ok=(*this)._method_annotate_kind(_1b65a085c_fp->_field_kind) && _60658_ok;
			}
		_iter_next_4541780976:;
		_1b65a085c_i++;
		}
		_iter_end_4541780976:;
	}
	if ((!(_60717_pf->_field_decl->_method_is_void()))) {
		_1b6703d45_TypeKind* _62921_result = (_60717_pf->_field_result).alloc;
		(*this)._field_k=(&(_62921_result));
		_60658_ok=(*this)._method_annotate_kind(_61117_f->_field_result) && _60658_ok;
	}
	(*this)._field_k=_62117_old;
	_60658_ok = _60658_ok;
	return _60658_ok;
}



inline jule::Bool _1b65a085c_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ref<_1b6703d45_TypeKind>& _63843_k) {
	jule::Bool _63859_ok = jule::Bool();
	jule::Ref<_1b6703d45_Ptr> _63917_pptr = (*((*this)._field_k))->_method_ptr();
	if ((!(jule::real(_63917_pptr)))) {
		_63859_ok = false;
		return _63859_ok;
	}
	jule::Ref<_1b6703d45_Ptr> _64417_ptr = _63843_k->_method_ptr();
	_1b6703d45_TypeKind* _64517_cpptr = (_63917_pptr->_field_elem).alloc;
	(*this)._field_k=(&(_64517_cpptr));
	_63859_ok = (*this)._method_annotate_kind(_64417_ptr->_field_elem);
	return _63859_ok;
}



inline jule::Bool _1b65a085c_DynamicTypeAnnotation::_method_annotate_ref(jule::Ref<_1b6703d45_TypeKind>& _65043_k) {
	jule::Bool _65059_ok = jule::Bool();
	jule::Ref<_1b6703d45_Ref> _65117_rref = (*((*this)._field_k))->_method_ref();
	if ((!(jule::real(_65117_rref)))) {
		_65059_ok = false;
		return _65059_ok;
	}
	jule::Ref<_1b6703d45_Ref> _65617_ref = _65043_k->_method_ref();
	_1b6703d45_TypeKind* _65717_crref = (_65117_rref->_field_elem).alloc;
	(*this)._field_k=(&(_65717_crref));
	_65059_ok = (*this)._method_annotate_kind(_65617_ref->_field_elem);
	return _65059_ok;
}



inline jule::Bool _1b65a085c_DynamicTypeAnnotation::_method_annotate_any(jule::Ref<_1b6703d45_TypeKind>& _66243_k) {
	jule::Bool _66259_ok = jule::Bool();
	jule::Str _66313_kind = (*((*this)._field_k))->_method_to_str();
	{
		jule::Int _1b65a085c_i = 0;
		for (auto _1b65a085c_g: (*this)._field_f->_field_decl->_field_generics) {
			{
				if (_66313_kind != _1b65a085c_g->_field_ident) {
					goto _iter_next_4541810704;
				}
				jule::Ref<_1b6703d45_TypeKind> _66917_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_1b65a085c_i)];
				{
					if (!(((!(jule::real(_66917_t)))))) { goto _case_end_4541815712; }
					_case_begin_4541815712:;
					{
						(*this)._method_push_generic(_66243_k,_1b65a085c_i);
					}
					goto _match_end_4541815472;
					_case_end_4541815712:;
					if (!(((!(_66917_t->_method_equals(_66243_k)))))) { goto _case_end_4541815808; }
					_case_begin_4541815808:;
					{
						_66259_ok = false;
						return _66259_ok;
					}
					goto _match_end_4541815472;
					_case_end_4541815808:;
					_match_end_4541815472:;
				}
				(*((*this)._field_k))->_field_kind=_66243_k->_field_kind;
				_66259_ok = true;
				return _66259_ok;
			}
		_iter_next_4541810704:;
		_1b65a085c_i++;
		}
		_iter_end_4541810704:;
	}
	_66259_ok = false;
	return _66259_ok;
}



inline jule::Bool _1b65a085c_DynamicTypeAnnotation::_method_annotate_kind(jule::Ref<_1b6703d45_TypeKind>& _68644_k) {
	jule::Bool _68660_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _68660_ok;
	}
	{
		if (!(((*this)._method_annotate_any(_68644_k)))) { goto _case_end_4541824384; }
		_case_begin_4541824384:;
		{
			_68660_ok = true;
			return _68660_ok;
		}
		goto _match_end_4541822256;
		_case_end_4541824384:;
		if (!((jule::real(_68644_k->_method_prim())))) { goto _case_end_4541824480; }
		_case_begin_4541824480:;
		{
			_68660_ok = (*this)._method_annotate_prim(_68644_k);
			return _68660_ok;
		}
		goto _match_end_4541822256;
		_case_end_4541824480:;
		if (!((jule::real(_68644_k->_method_slc())))) { goto _case_end_4541824576; }
		_case_begin_4541824576:;
		{
			_68660_ok = (*this)._method_annotate_slc(_68644_k);
			return _68660_ok;
		}
		goto _match_end_4541822256;
		_case_end_4541824576:;
		if (!((jule::real(_68644_k->_method_map())))) { goto _case_end_4541823824; }
		_case_begin_4541823824:;
		{
			_68660_ok = (*this)._method_annotate_map(_68644_k);
			return _68660_ok;
		}
		goto _match_end_4541822256;
		_case_end_4541823824:;
		if (!((jule::real(_68644_k->_method_fnc())))) { goto _case_end_4541823920; }
		_case_begin_4541823920:;
		{
			_68660_ok = (*this)._method_annotate_fn(_68644_k);
			return _68660_ok;
		}
		goto _match_end_4541822256;
		_case_end_4541823920:;
		if (!((jule::real(_68644_k->_method_ptr())))) { goto _case_end_4541824016; }
		_case_begin_4541824016:;
		{
			_68660_ok = (*this)._method_annotate_ptr(_68644_k);
			return _68660_ok;
		}
		goto _match_end_4541822256;
		_case_end_4541824016:;
		if (!((jule::real(_68644_k->_method_ref())))) { goto _case_end_4541824112; }
		_case_begin_4541824112:;
		{
			_68660_ok = (*this)._method_annotate_ref(_68644_k);
			return _68660_ok;
		}
		goto _match_end_4541822256;
		_case_end_4541824112:;
		_case_begin_4541823232:;
		{
			_68660_ok = false;
			return _68660_ok;
		}
		goto _match_end_4541822256;
		_case_end_4541823232:;
		_match_end_4541822256:;
	}
}



inline jule::Bool _1b65a085c_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _70336_ok = jule::Bool();
	_1b6703d45_TypeKind* _70417_pk = ((*this)._field_p->_field_kind).alloc;
	(*this)._field_k=(&(_70417_pk));
	_70336_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _70336_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b65a085c_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1b65a085c_StructLitChecker::_method_push_err(_1ce35e3a0_Token _93427_token,jule::Str _93441_fmt,jule::Slice<jule::Any> _93454_args) {
	(*this)._field_e->_method_push_err(_93427_token,_93441_fmt,_93454_args);
}



inline void _1b65a085c_StructLitChecker::_method_push_suggestion(jule::Str _93934_fmt,jule::Slice<jule::Any> _93947_args) {
	(*this)._field_e->_method_push_suggestion(_93934_fmt,_93947_args);
}



inline void _1b65a085c_StructLitChecker::_method_push_match(jule::Ref<_1ce385eed_FieldIns>& _94334_f,jule::Ref<_1b66db129_Data>& _94353_d,_1ce35e3a0_Token& _94368_error_token) {
	(*this)._field_args=jule::append((*this)._field_args,jule::Slice<jule::Ref<_1b61decc6_StructArgExprModel>>({jule::new_struct<_1b61decc6_StructArgExprModel>(new( std::nothrow ) _1b61decc6_StructArgExprModel(_94334_f,_94353_d->_field_model))}));
	
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(true,false,_94334_f->_field_kind,_94353_d,_94368_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(false,_94334_f->_field_kind,_94353_d,_94368_error_token,false);
}



inline void _1b65a085c_StructLitChecker::_method_check_pair(jule::Ref<_1ce385d22_FieldExprPair>& _95534_pair,jule::Slice<jule::Any>& _95561_exprs) {
	jule::Ref<_1ce385eed_FieldIns> _95717_f = (*this)._field_s->_method_find_field(_95534_pair->_field_field._field_kind);
	if ((!(jule::real(_95717_f)))) {
		(*this)._method_push_err(_95534_pair->_field_field,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_95534_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_95717_f->_field_decl->_field_public,_95717_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_95534_pair->_field_field,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_95534_pair->_field_field._field_kind)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
	}
	_julec_label_dup_lookup:;
	for (auto _1b65a085c_expr: _95561_exprs) {
		{
			{
				auto _match_expr{ _1b65a085c_expr };
				if (!(_match_expr.type_is<jule::Ref<_1ce385d22_FieldExprPair>>())) { goto _case_end_4541990848; }
				_case_begin_4541990848:;
				{
					jule::Ref<_1ce385d22_FieldExprPair> _97325_dpair = _1b65a085c_expr.operator jule::Ref<_1ce385d22_FieldExprPair>();
					{
						if (!((_95534_pair == _97325_dpair))) { goto _case_end_4541993904; }
						_case_begin_4541993904:;
						{
							goto _iter_end_4541982416;
						}
						goto _match_end_4541993744;
						_case_end_4541993904:;
						if (!((_95534_pair->_field_field._field_kind == _97325_dpair->_field_field._field_kind))) { goto _case_end_4541994016; }
						_case_begin_4541994016:;
						{
							(*this)._method_push_err(_95534_pair->_field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_95534_pair->_field_field._field_kind)}));
							goto _iter_end_4541982416;
						}
						goto _match_end_4541993744;
						_case_end_4541994016:;
						_match_end_4541993744:;
					}
				}
				goto _match_end_4541991216;
				_case_end_4541990848:;
				_match_end_4541991216:;
			}
		}
	_iter_next_4541982416:;
	}
	_iter_end_4541982416:;
	jule::Ref<_1b6703d45_TypeKind> _98517_prefix = (*this)._field_e->_field_prefix;
	__JULE_DEFER({
		(*this)._field_e->_field_prefix=_98517_prefix;
	});
	(*this)._field_e->_field_prefix=_95717_f->_field_kind;
	jule::Ref<_1b66db129_Data> _98917_d = (*this)._field_e->_method_eval_expr_kind(_95534_pair->_field_expr);
	if ((!(jule::real(_98917_d)))) {
		return;
	}
	(*this)._method_push_match(_95717_f,_98917_d,_95534_pair->_field_field);
}



inline jule::Bool _1b65a085c_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any>& _99635_exprs) {
	jule::Bool _99717_ok = true;
	{
		jule::Int _1b65a085c_i = 0;
		for (auto _1b65a085c_expr: _99635_exprs) {
			{
				{
					auto _match_expr{ _1b65a085c_expr };
					if (!(_match_expr.type_is<jule::Ref<_1ce385d22_KeyValPair>>())) { goto _case_end_4542007776; }
					_case_begin_4542007776:;
					{
						jule::Ref<_1ce385d22_KeyValPair> _100125_pair = _1b65a085c_expr.operator jule::Ref<_1ce385d22_KeyValPair>();
						{
							auto _match_expr{ _100125_pair->_field_key };
							if (!(_match_expr.type_is<jule::Ref<_1ce385d22_IdentExpr>>())) { goto _case_end_4542012896; }
							goto _match_end_4542011040;
							_case_end_4542012896:;
							_case_begin_4542008416:;
							{
								(*this)._method_push_err(_100125_pair->_field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
								_99717_ok=false;
								goto _iter_next_4542005968;
							}
							goto _match_end_4542011040;
							_case_end_4542008416:;
							_match_end_4542011040:;
						}
						_99635_exprs[static_cast<jule::Int>(_1b65a085c_i)]=jule::Any(jule::new_struct<_1ce385d22_FieldExprPair>(new( std::nothrow ) _1ce385d22_FieldExprPair(_100125_pair->_field_key.operator jule::Ref<_1ce385d22_IdentExpr>()->_field_token,_100125_pair->_field_val)));
					}
					goto _match_end_4542008224;
					_case_end_4542007776:;
					_match_end_4542008224:;
				}
			}
		_iter_next_4542005968:;
		_1b65a085c_i++;
		}
		_iter_end_4542005968:;
	}
	return _99717_ok;
}



inline void _1b65a085c_StructLitChecker::_method_check(jule::Slice<jule::Any>& _102229_exprs) {
	if (_102229_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_102229_exprs)))) {
		return;
	}
	jule::Bool _103117_paired = false;
	{
		jule::Int _1b65a085c_i = 0;
		for (auto _1b65a085c_expr: _102229_exprs) {
			{
				{
					auto _match_expr{ _1b65a085c_expr };
					if (!(_match_expr.type_is<jule::Ref<_1ce385d22_FieldExprPair>>())) { goto _case_end_4542023040; }
					_case_begin_4542023040:;
					{
						jule::Ref<_1ce385d22_FieldExprPair> _103525_pair = _1b65a085c_expr.operator jule::Ref<_1ce385d22_FieldExprPair>();
						if ((_1b65a085c_i > 0LL) && (!(_103117_paired))) {
							(*this)._method_push_err(_103525_pair->_field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						}
						_103117_paired=true;
						(*this)._method_check_pair(_103525_pair,_102229_exprs);
					}
					goto _match_end_4542023488;
					_case_end_4542023040:;
					if (!(_match_expr.type_is<jule::Ref<_1ce385d22_Expr>>())) { goto _case_end_4542023680; }
					_case_begin_4542023680:;
					{
						jule::Ref<_1ce385d22_Expr> _104325_e = _1b65a085c_expr.operator jule::Ref<_1ce385d22_Expr>();
						if (_103117_paired) {
							(*this)._method_push_err(_104325_e->_field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>({}));
						}
						if (_1b65a085c_i >= (*this)._field_s->_field_fields.len()) {
							(*this)._method_push_err(_104325_e->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_4542021216;
						}
						jule::Ref<_1ce385eed_FieldIns> _105225_field = (*this)._field_s->_field_fields[static_cast<jule::Int>(_1b65a085c_i)];
						jule::Ref<_1b6703d45_TypeKind> _105425_prefix = (*this)._field_e->_field_prefix;
						__JULE_DEFER({
							(*this)._field_e->_field_prefix=_105425_prefix;
						});
						(*this)._field_e->_field_prefix=_105225_field->_field_kind;
						jule::Ref<_1b66db129_Data> _105825_d = (*this)._field_e->_method_eval_expr_kind(_104325_e->_field_kind);
						if ((!(jule::real(_105825_d)))) {
							goto _iter_next_4542021216;
						}
						(*this)._method_push_match(_105225_field,_105825_d,_104325_e->_field_token);
					}
					goto _match_end_4542023488;
					_case_end_4542023680:;
					_match_end_4542023488:;
				}
			}
		_iter_next_4542021216:;
		_1b65a085c_i++;
		}
		_iter_end_4542021216:;
	}
	if ((!(_103117_paired))) {
		jule::I64 _106917_n = (*this)._field_s->_field_fields.len();
		jule::I64 _107021_diff = _106917_n - _102229_exprs.len();
		{
			if (!((_107021_diff <= 0LL))) { goto _case_end_4542044896; }
			_case_begin_4542044896:;
			{
				return;
			}
			goto _match_end_4542044656;
			_case_end_4542044896:;
			_match_end_4542044656:;
		}
		jule::Str _107621_idents = jule::Str("", 0);
		for (; _107021_diff > 0LL; (_107021_diff)--) {
			{
				_107621_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[static_cast<jule::Int>(_106917_n - _107021_diff)]->_field_decl->_field_ident;
			}
		_iter_next_4542042544:;
		}
		_iter_end_4542042544:;
		_107621_idents=_107621_idents.slice(2LL);
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_107621_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1b65a085c_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_TernaryExpr &_Src) {
	_Stream << "TernaryExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}



inline void _1b65a085c_AssignTypeChecker::_method_push_err(jule::Str _45127_fmt,jule::Slice<jule::Any> _45140_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_45127_fmt,_45140_args);
}



inline jule::Bool _1b65a085c_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _45617_valid = true;
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_fnc())))) { goto _case_end_4541691232; }
		_case_begin_4541691232:;
		{
			jule::Ref<_1b6069348_FnIns> _46017_f = (*this)._field_d->_field_kind->_method_fnc();
			{
				if (!((_46017_f->_method_is_builtin()))) { goto _case_end_4541694880; }
				_case_begin_4541694880:;
				{
					(*this)._method_push_err(jule::Str("built-in define cannot use as anonymous function", 48),jule::Slice<jule::Any>({}));
					_45617_valid=false;
				}
				goto _match_end_4541694688;
				_case_end_4541694880:;
				if (!((_46017_f->_field_decl->_field_cpp_linked))) { goto _case_end_4541694992; }
				_case_begin_4541694992:;
				{
					(*this)._method_push_err(jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>({}));
					_45617_valid=false;
				}
				goto _match_end_4541694688;
				_case_end_4541694992:;
				if (!((_46017_f->_field_decl->_method_is_method()))) { goto _case_end_4541695104; }
				_case_begin_4541695104:;
				{
					(*this)._method_push_err(jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>({}));
					_45617_valid=false;
				}
				goto _match_end_4541694688;
				_case_end_4541695104:;
				if (!((_46017_f->_field_decl->_field_generics.len() > 0LL))) { goto _case_end_4541695216; }
				_case_begin_4541695216:;
				{
					(*this)._method_push_err(jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
					_45617_valid=false;
				}
				goto _match_end_4541694688;
				_case_end_4541695216:;
				_match_end_4541694688:;
			}
		}
		goto _match_end_4541691072;
		_case_end_4541691232:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_tup())))) { goto _case_end_4541691344; }
		_case_begin_4541691344:;
		{
			(*this)._method_push_err(jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>({}));
			_45617_valid=false;
		}
		goto _match_end_4541691072;
		_case_end_4541691344:;
		_match_end_4541691072:;
	}
	return _45617_valid;
}



inline jule::Bool _1b65a085c_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || (!(jule::real((*this)._field_dest->_method_prim())))) || (!(jule::real((*this)._field_d->_field_kind->_method_prim())))) || (!(_1b6e2b4c3_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _49513_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (!((_1b6e2b4c3_is_float(_49513_kind)))) { goto _case_end_4541711600; }
		_case_begin_4541711600:;
		{
			if ((!(_1b65a085c_float_assignable(_49513_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4541710992;
		_case_end_4541711600:;
		if (!((_1b6e2b4c3_is_int(_49513_kind)))) { goto _case_end_4541711696; }
		_case_begin_4541711696:;
		{
			if ((!(_1b65a085c_int_assignable(_49513_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4541710992;
		_case_end_4541711696:;
		_case_begin_4541711264:;
		{
			return false;
		}
		goto _match_end_4541710992;
		_case_end_4541711264:;
		_match_end_4541710992:;
	}
	return true;
}



inline jule::Bool _1b65a085c_AssignTypeChecker::_method_check(void) {
	{
		if (!(((!(jule::real((*this)._field_d)))))) { goto _case_end_4541718240; }
		_case_begin_4541718240:;
		{
			return false;
		}
		goto _match_end_4541713264;
		_case_end_4541718240:;
		if (!(((!((*this)._method_check_validity()))))) { goto _case_end_4541718336; }
		_case_begin_4541718336:;
		{
			return false;
		}
		goto _match_end_4541713264;
		_case_end_4541718336:;
		if (!(((*this)._method_check_const()))) { goto _case_end_4541718432; }
		_case_begin_4541718432:;
		{
			return true;
		}
		goto _match_end_4541713264;
		_case_end_4541718432:;
		_case_begin_4541713440:;
		{
			return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token,(*this)._field_deref);
		}
		goto _match_end_4541713264;
		_case_end_4541713440:;
		_match_end_4541713264:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1b65a085c_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "deref:" << _Src._field_deref;
	_Stream << "}";
	return _Stream;
}



inline void _1b65a085c_FnCallArgChecker::_method_push_err_token(_1ce35e3a0_Token _72133_token,jule::Str _72147_fmt,jule::Slice<jule::Any> _72160_args) {
	(*this)._field_e->_field_s->_method_push_err(_72133_token,_72147_fmt,_72160_args);
}



inline void _1b65a085c_FnCallArgChecker::_method_push_err(jule::Str _72527_fmt,jule::Slice<jule::Any> _72540_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_72527_fmt,_72540_args);
}



inline jule::Slice<jule::Ref<_1b6069348_ParamIns>> _1b65a085c_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && jule::real((*this)._field_f->_field_params[0LL]->_field_decl)) && (*this)._field_f->_field_params[0LL]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(1LL);
	}
	return (*this)._field_f->_field_params;
}



inline jule::Bool _1b65a085c_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ref<_1b6069348_ParamIns>>& _73632_params) {
	jule::Bool _73655_ok = jule::Bool();
	jule::I64 _73717_n = _73632_params.len();
	if ((_73717_n > 0LL) && _73632_params[0LL]->_field_decl->_method_is_self()) {
		(_73717_n)--;
	}
	jule::I64 _74217_diff = _73717_n - (*this)._field_args.len();
	{
		if (!((_74217_diff == 0LL))) { goto _case_end_4541860752; }
		_case_begin_4541860752:;
		{
			_73655_ok = true;
			return _73655_ok;
		}
		goto _match_end_4541860608;
		_case_end_4541860752:;
		if (!(((_73717_n > 0LL) && _73632_params[static_cast<jule::Int>(_73717_n - 1LL)]->_field_decl->_field_variadic))) { goto _case_end_4541860864; }
		_case_begin_4541860864:;
		{
			_73655_ok = true;
			return _73655_ok;
		}
		goto _match_end_4541860608;
		_case_end_4541860864:;
		if (!(((_74217_diff < 0LL) || (_74217_diff > _73632_params.len())))) { goto _case_end_4541860976; }
		_case_begin_4541860976:;
		{
			(*this)._method_push_err(jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
			_73655_ok = false;
			return _73655_ok;
		}
		goto _match_end_4541860608;
		_case_end_4541860976:;
		_match_end_4541860608:;
	}
	jule::Str _75517_idents = jule::Str("", 0);
	for (; _74217_diff > 0LL; (_74217_diff)--) {
		{
			_75517_idents+=jule::Str(", ", 2) + _73632_params[static_cast<jule::Int>(_73717_n - _74217_diff)]->_field_decl->_field_ident;
		}
	_iter_next_4541867056:;
	}
	_iter_end_4541867056:;
	_75517_idents=_75517_idents.slice(2LL);
	(*this)._method_push_err(jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_75517_idents)}));
	_73655_ok = false;
	return _73655_ok;
}



inline jule::Bool _1b65a085c_FnCallArgChecker::_method_check_arg(jule::Ref<_1b6069348_ParamIns>& _76533_p,jule::Ref<_1b66db129_Data>& _76552_arg,_1ce35e3a0_Token& _76569_error_token) {
	jule::Bool _76591_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation && _1b6069348_parameter_uses_generics(_76533_p->_field_decl,(*this)._field_f->_field_decl->_field_generics)) {
		_1b65a085c_DynamicTypeAnnotation _76721_dta = _1b65a085c_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_76533_p,_76552_arg,_76569_error_token,nullptr);
		_76591_ok=_76721_dta._method_annotate();
		if ((!(_76591_ok))) {
			(*this)._method_push_err_token(_76569_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
			_76591_ok = false;
			return _76591_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_76533_p->_field_decl->_field_mutable,_76533_p->_field_decl->_field_reference,_76533_p->_field_kind,_76552_arg,_76569_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_76533_p->_field_decl->_field_reference,_76533_p->_field_kind,_76552_arg,_76569_error_token,false);
	_76591_ok = true;
	return _76591_ok;
}



inline jule::Bool _1b65a085c_FnCallArgChecker::_method_push(jule::Ref<_1b6069348_ParamIns>& _78728_p,jule::Ref<_1ce385d22_Expr> _78746_arg) {
	jule::Bool _78760_ok = jule::Bool();
	jule::Ref<_1b66db129_Data> _78817_d = jule::new_ref<_1b66db129_Data>();
	if ((!((*this)._field_dynamic_annotation)) && (!(_78728_p->_field_decl->_field_variadic))) {
		jule::Ref<_1b6703d45_TypeKind> _79021_old = (*this)._field_e->_field_prefix;
		(*this)._field_e->_field_prefix=_78728_p->_field_kind;
		_78817_d=(*this)._field_e->_method_eval_expr_kind(_78746_arg->_field_kind);
		(*this)._field_e->_field_prefix=_79021_old;
	} else {
		jule::Ref<_1b6703d45_TypeKind> _79521_old = (*this)._field_e->_field_prefix;
		jule::drop((*this)._field_e->_field_prefix);
		_78817_d=(*this)._field_e->_method_eval_expr_kind(_78746_arg->_field_kind);
		(*this)._field_e->_field_prefix=_79521_old;
	}
	if ((!(jule::real(_78817_d)))) {
		_78760_ok = false;
		return _78760_ok;
	}
	(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_78817_d->_field_model}));
	_78760_ok = (*this)._method_check_arg(_78728_p,_78817_d,_78746_arg->_field_token);
	return _78760_ok;
}



inline jule::Bool _1b65a085c_FnCallArgChecker::_method_push_variadic(jule::Ref<_1b6069348_ParamIns>& _80737_p,jule::Int _80755_i) {
	jule::Bool _80765_ok = jule::Bool();
	_80765_ok=true;
	jule::Bool _80917_variadiced = false;
	jule::Bool _81013_more = (_80755_i + 1LL) < (*this)._field_args.len();
	jule::Ref<_1b61decc6_SliceExprModel> _81117_model = jule::new_struct<_1b61decc6_SliceExprModel>(new( std::nothrow ) _1b61decc6_SliceExprModel(_80737_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ref<_1b6703d45_TypeKind> _81517_old = (*this)._field_e->_field_prefix;
	for (; _80755_i < (*this)._field_args.len(); (_80755_i)++) {
		{
			jule::Ref<_1ce385d22_Expr> _81721_arg = (*this)._field_args[static_cast<jule::Int>(_80755_i)];
			{
				auto _match_expr{ _81721_arg->_field_kind };
				if (!(_match_expr.type_is<jule::Ref<_1ce385d22_VariadicExpr>>())) { goto _case_end_4541912352; }
				_case_begin_4541912352:;
				{
					(*this)._field_e->_field_prefix=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6703d45_Slc>(new( std::nothrow ) _1b6703d45_Slc(_80737_p->_field_kind))));
				}
				goto _match_end_4541911344;
				_case_end_4541912352:;
				_case_begin_4541909376:;
				{
					(*this)._field_e->_field_prefix=_80737_p->_field_kind;
				}
				goto _match_end_4541911344;
				_case_end_4541909376:;
				_match_end_4541911344:;
			}
			jule::Ref<_1b66db129_Data> _82721_d = (*this)._field_e->_method_eval_expr_kind(_81721_arg->_field_kind);
			if ((!(jule::real(_82721_d)))) {
				_80765_ok=false;
				goto _iter_next_4541907280;
			}
			if (_82721_d->_field_variadiced) {
				_80917_variadiced=true;
				_82721_d->_field_variadiced=false;
				_80737_p->_field_kind->_field_variadic=true;
				_82721_d->_field_kind->_field_variadic=true;
				__JULE_DEFER({
					_82721_d->_field_kind->_field_variadic=false;
					_80737_p->_field_kind->_field_variadic=false;
				});
				{
					auto _match_expr{ _82721_d->_field_model };
					if (!(_match_expr.type_is<jule::Ref<_1b61decc6_SliceExprModel>>())) { goto _case_end_4541921600; }
					_case_begin_4541921600:;
					{
						_81117_model=_82721_d->_field_model.operator jule::Ref<_1b61decc6_SliceExprModel>();
						_81117_model->_field_elem_kind=_80737_p->_field_kind;
					}
					goto _match_end_4541921232;
					_case_end_4541921600:;
					_case_begin_4541916320:;
					{
						jule::drop(_81117_model);
						(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_82721_d->_field_model}));
					}
					goto _match_end_4541921232;
					_case_end_4541916320:;
					_match_end_4541921232:;
				}
				_80765_ok=(*this)._method_check_arg(_80737_p,_82721_d,_81721_arg->_field_token) && _80765_ok;
				goto _iter_next_4541907280;
			}
			_81117_model->_field_elems=jule::append(_81117_model->_field_elems,jule::Slice<jule::Any>({_82721_d->_field_model}));
			_80765_ok=(*this)._method_check_arg(_80737_p,_82721_d,_81721_arg->_field_token) && _80765_ok;
		}
	_iter_next_4541907280:;
	}
	_iter_end_4541907280:;
	(*this)._field_e->_field_prefix=_81517_old;
	if (_80917_variadiced && _81013_more) {
		(*this)._method_push_err(jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>({}));
	}
	if (jule::real(_81117_model)) {
		(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({jule::Any(_81117_model)}));
	}
	_80765_ok = _80765_ok;
	return _80765_ok;
}



inline jule::Bool _1b65a085c_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ref<_1b6069348_ParamIns>>& _87334_params) {
	jule::Bool _87357_ok = jule::Bool();
	_87357_ok=true;
	jule::Int _87517_i = 0LL;
	_julec_label_iter:;
	while (_87517_i < _87334_params.len()) {
		{
			jule::Ref<_1b6069348_ParamIns> _87821_p = _87334_params[static_cast<jule::Int>(_87517_i)];
			{
				if (!((_87821_p->_field_decl->_method_is_self()))) { goto _case_end_4541939952; }
				goto _match_end_4541939056;
				_case_end_4541939952:;
				if (!((_87821_p->_field_decl->_field_variadic))) { goto _case_end_4541940256; }
				_case_begin_4541940256:;
				{
					_87357_ok=(*this)._method_push_variadic(_87821_p,_87517_i) && _87357_ok;
					goto _iter_end_4541935968;
				}
				goto _match_end_4541939056;
				_case_end_4541940256:;
				if (!(((*this)._field_args.len() <= _87517_i))) { goto _case_end_4541940352; }
				_case_begin_4541940352:;
				{
					_87357_ok=false;
					goto _iter_end_4541935968;
				}
				goto _match_end_4541939056;
				_case_end_4541940352:;
				_case_begin_4541939168:;
				{
					_87357_ok=(*this)._method_push(_87821_p,(*this)._field_args[static_cast<jule::Int>(_87517_i)]) && _87357_ok;
				}
				goto _match_end_4541939056;
				_case_end_4541939168:;
				_match_end_4541939056:;
			}
			(_87517_i)++;
		}
	_iter_next_4541935968:;
	}
	_iter_end_4541935968:;
	_87357_ok = _87357_ok;
	return _87357_ok;
}



inline jule::Bool _1b65a085c_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _90050_ok = jule::Bool();
	for (auto _1b65a085c_g: (*this)._field_f->_field_generics) {
		{
			if ((!(jule::real(_1b65a085c_g)))) {
				(*this)._method_push_err(jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
				_90050_ok = false;
				return _90050_ok;
			}
		}
	_iter_next_4541947760:;
	}
	_iter_end_4541947760:;
	_90050_ok = true;
	return _90050_ok;
}



inline jule::Bool _1b65a085c_FnCallArgChecker::_method_check(void) {
	jule::Bool _91026_ok = jule::Bool();
	jule::Slice<jule::Ref<_1b6069348_ParamIns>> _91117_params = (*this)._method_get_params();
	_91026_ok=(*this)._method_check_counts(_91117_params);
	if ((!(_91026_ok))) {
		_91026_ok = false;
		return _91026_ok;
	}
	_91026_ok=(*this)._method_check_args(_91117_params);
	if (_91026_ok && (*this)._field_dynamic_annotation) {
		_91026_ok=(*this)._method_check_dynamic_type_annotation();
	}
	_91026_ok = _91026_ok;
	return _91026_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b65a085c_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1b65a085c_RetTypeChecker::_method_prepare_types(void) {
	(*this)._field_types=_1b65a085c_get_fn_result_types((*this)._field_f);
}



inline void _1b65a085c_RetTypeChecker::_method_prepare_exprs(jule::Ref<_1ce385d22_Expr>& _125637_e) {
	if ((!(jule::real(_125637_e)))) {
		return;
	}
	{
		auto _match_expr{ _125637_e->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TupleExpr>>())) { goto _case_end_4542140432; }
		_case_begin_4542140432:;
		{
			(*this)._field_exprs=_125637_e->_field_kind.operator jule::Ref<_1ce385d22_TupleExpr>()->_field_expr;
		}
		goto _match_end_4542136304;
		_case_end_4542140432:;
		_case_begin_4542136944:;
		{
			(*this)._field_exprs=jule::append((*this)._field_exprs,jule::Slice<jule::Ref<_1ce385d22_Expr>>({_125637_e}));
		}
		goto _match_end_4542136304;
		_case_end_4542136944:;
		_match_end_4542136304:;
	}
}



inline void _1b65a085c_RetTypeChecker::_method_ret_vars(void) {
	if ((*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ref<_1b637edab_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len())));
	jule::Ref<_1b61e873b_ScopeChecker> _127617_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _127817_j = 0LL;
	{
		jule::Int _1b65a085c_i = 0;
		for (auto _1b65a085c_ident: (*this)._field_f->_field_decl->_field_result->_field_idents) {
			{
				if ((!(_1ce35e3a0_is_ignore_ident(_1b65a085c_ident._field_kind)))) {
					(*this)._field_vars[static_cast<jule::Int>(_1b65a085c_i)]=_127617_root_scope->_field_table->_field_vars[static_cast<jule::Int>(_127817_j)];
					(_127817_j)++;
				} else {
					(*this)._field_vars[static_cast<jule::Int>(_1b65a085c_i)]=jule::new_struct<_1b637edab_Var>(new( std::nothrow ) _1b637edab_Var(jule::Ref<_1b61e873b_Scope>(),_1ce35e3a0_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),(*this)._field_types[static_cast<jule::Int>(_1b65a085c_i)])),jule::Ref<_1b66db129_Value>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Slice<jule::Ref<_1ce385d22_Directive>>(),jule::Slice<jule::Ref<_1b637edab_Var>>()));
				}
			}
		_iter_next_4542147264:;
		_1b65a085c_i++;
		}
		_iter_end_4542147264:;
	}
	if (_127817_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



inline void _1b65a085c_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_1b66db129_Data>> _130217_datas = jule::Slice<jule::Ref<_1b66db129_Data>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_exprs.len())));
	{
		jule::Int _1b65a085c_i = 0;
		for (auto _1b65a085c_expr: (*this)._field_exprs) {
			{
				if (_1b65a085c_i >= (*this)._field_types.len()) {
					goto _iter_end_4542159840;
				}
				jule::Ref<_1b6703d45_TypeKind> _130921_t = (*this)._field_types[static_cast<jule::Int>(_1b65a085c_i)];
				jule::Ref<_1b66db129_Data> _131121_d = (*this)._field_sc->_field_s->_method_evalp((*this)._field_sc,_130921_t)->_method_eval_expr(_1b65a085c_expr);
				if ((!(jule::real(_131121_d)))) {
					goto _iter_next_4542159840;
				}
				_130217_datas=jule::append(_130217_datas,jule::Slice<jule::Ref<_1b66db129_Data>>({_131121_d}));
				if ((!(_131121_d->_field_mutable)) && _131121_d->_field_kind->_method_mutable()) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>({}));
					return;
				}
				_1b65a085c_AssignTypeChecker _132321_ac = _1b65a085c_AssignTypeChecker((*this)._field_sc->_field_s,_130921_t,_131121_d,(*this)._field_error_token,jule::Bool());
				_132321_ac._method_check();
			}
		_iter_next_4542159840:;
		_1b65a085c_i++;
		}
		_iter_end_4542159840:;
	}
	if (_130217_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_1b61decc6_TupleExprModel>(new( std::nothrow ) _1b61decc6_TupleExprModel(_130217_datas)));
	} else if (_130217_datas.len() == 1LL) {
		(*this)._field_model=_130217_datas[0LL]->_field_model;
	}
}



inline jule::Bool _1b65a085c_RetTypeChecker::_method_check(jule::Ref<_1ce385d22_Expr>& _134229_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_134229_e);
	(*this)._method_ret_vars();
	jule::I64 _134713_n = (*this)._field_exprs.len();
	if ((_134713_n == 0LL) && (!((*this)._field_f->_field_decl->_method_is_void()))) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>({}));
			return false;
		}
		return true;
	}
	if ((_134713_n > 0LL) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>({}));
		return false;
	}
	if (_134713_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>({}));
	} else if (_134713_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing return expressions for multi return", 43),jule::Slice<jule::Any>({}));
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b65a085c_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b66db129_BinopSolver::_method_check_type_compatibility(void) {
	_1b65a085c_TypeCompatibilityChecker _337717_tcc = _1b65a085c_TypeCompatibilityChecker((*this)._field_e->_field_s,(*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op,jule::Bool(),true,jule::Bool());
	return _337717_tcc._method_check();
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_nil(void) {
	if ((!((*this)._field_r->_field_kind->_method_nil_compatible()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b66db129_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4543944880; }
		_case_begin_4543944880:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543937744;
		_case_end_4543944880:;
		_case_begin_4543941552:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543937744;
		_case_end_4543941552:;
		_match_end_4543937744:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_enum(void) {
	jule::Ref<_1b61d7c58_Enum> _340917_enm = (*this)._field_l->_field_kind->_method_enm();
	if ((!(jule::real((*this)._field_r->_field_kind->_method_enm()))) || ((_340917_enm).alloc != ((*this)._field_r->_field_kind->_method_enm()).alloc)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_340917_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b66db129_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4543959248; }
		_case_begin_4543959248:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543954432;
		_case_end_4543959248:;
		if (!((jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr)) { goto _case_end_4543958592; }
		_case_begin_4543958592:;
		{
			if ((!(jule::real(_340917_enm->_field_kind->_field_kind->_method_prim()))) || (!(_1b6e2b4c3_is_int(_340917_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_340917_enm->_field_ident)}));
			}
			return (*this)._field_l;
		}
		goto _match_end_4543954432;
		_case_end_4543958592:;
		_case_begin_4543953728:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_340917_enm->_field_ident)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543954432;
		_case_end_4543953728:;
		_match_end_4543954432:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_ptr(void) {
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4543971280; }
		_case_begin_4543971280:;
		{
			if ((!((*this)._method_check_type_compatibility()))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
				return jule::new_ref<_1b66db129_Data>();
			}
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543966704;
		_case_end_4543971280:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr)) { goto _case_end_4543971760; }
		_case_begin_4543971760:;
		{
			if ((!(jule::real((*this)._field_l->_field_kind->_method_ptr())))) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			if ((*this)._field_l->_field_kind->_method_ptr()->_method_is_unsafe()) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			}
			if ((!(_1b66db129_is_ptr_arithmetic_compatible_int((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("type \"@\" is incompatible to use for pointer arithmetic", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
				return jule::new_ref<_1b66db129_Data>();
			}
			return (*this)._field_l;
		}
		goto _match_end_4543966704;
		_case_end_4543971760:;
		_case_begin_4543955168:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543966704;
		_case_end_4543955168:;
		_match_end_4543966704:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b66db129_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4543988096; }
		_case_begin_4543988096:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4543991904;
		_case_end_4543988096:;
		_case_begin_4543992336:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4543991904;
		_case_end_4543992336:;
		_match_end_4543991904:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b66db129_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4544007664; }
		_case_begin_4544007664:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4544002816;
		_case_end_4544007664:;
		_case_begin_4544003168:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4544002816;
		_case_end_4544003168:;
		_match_end_4544002816:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b66db129_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4544009888; }
		_case_begin_4544009888:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4544013664;
		_case_end_4544009888:;
		_case_begin_4544014064:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4544013664;
		_case_end_4544014064:;
		_match_end_4544013664:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b66db129_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4544020720; }
		_case_begin_4544020720:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4544024496;
		_case_end_4544020720:;
		_case_begin_4544024896:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4544024496;
		_case_end_4544024896:;
		_match_end_4544024496:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b66db129_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4544031552; }
		_case_begin_4544031552:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4544035328;
		_case_end_4544031552:;
		_case_begin_4544035728:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4544035328;
		_case_end_4544035728:;
		_match_end_4544035328:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_any(void) {
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4544045664; }
		_case_begin_4544045664:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4544042480;
		_case_end_4544045664:;
		_case_begin_4544036336:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4544042480;
		_case_end_4544036336:;
		_match_end_4544042480:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b66db129_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("&&", 2)) == _match_expr || (jule::Str("||", 2)) == _match_expr)) { goto _case_end_4544048816; }
		_case_begin_4544048816:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4544052592;
		_case_end_4544048816:;
		_case_begin_4544052928:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4544052592;
		_case_end_4544052928:;
		_match_end_4544052592:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_str(void) {
	jule::Str _361617_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_361617_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_361617_rk)}));
		return jule::new_ref<_1b66db129_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4544067200; }
		_case_begin_4544067200:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4544064464;
		_case_end_4544067200:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4544068512; }
		_case_begin_4544068512:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4544064464;
		_case_end_4544068512:;
		_case_begin_4544063872:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4544064464;
		_case_end_4544063872:;
		_match_end_4544064464:;
	}
}



inline void _1b66db129_BinopSolver::_method_set_type_to_greater(void) {
	if (((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!((*this)._field_l->_method_is_const())) && (!((*this)._field_r->_method_is_const())))) {
		jule::Str _364217_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _364317_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_1b6d578d8_is_greater(_364317_rk,_364217_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



inline void _1b66db129_BinopSolver::_method_check_mod_data(jule::Ref<_1b66db129_Data> _365837_d) {
	if ((!(_365837_d->_method_is_const()))) {
		if ((!(jule::real(_365837_d->_field_kind->_method_prim()))) || (!(_1b6e2b4c3_is_int(_365837_d->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		return;
	}
	{
		if (!((_1b65a085c_sig_assignable(jule::Str("i64", 3),_365837_d)))) { goto _case_end_4544089424; }
		_case_begin_4544089424:;
		{
			_365837_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_365837_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4544082672;
		_case_end_4544089424:;
		if (!((_1b65a085c_unsig_assignable(jule::Str("u64", 3),_365837_d)))) { goto _case_end_4544087712; }
		_case_begin_4544087712:;
		{
			_365837_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_365837_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4544082672;
		_case_end_4544087712:;
		_case_begin_4544082784:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4544082672;
		_case_end_4544082784:;
		_match_end_4544082672:;
	}
}



inline void _1b66db129_BinopSolver::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



inline jule::Bool _1b66db129_BinopSolver::_method_numbers_are_compatibile(jule::Str& _368339_lk,jule::Str& _368349_rk) {
	if ((*this)._field_l->_method_is_const()) {
		return true;
	}
	if (_368339_lk == jule::Str("f32", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _368349_rk == jule::Str("f32", 3);
	}
	if (_368339_lk == jule::Str("f64", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _368349_rk == jule::Str("f64", 3);
	}
	if ((*this)._field_r->_method_is_const()) {
		if ((!((*this)._field_r->_field_constant->_method_is_f64()))) {
			return true;
		}
		{
			auto _match_expr{ (*this)._field_r->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1b6d4076c_Const>>())) { goto _case_end_4544106736; }
			_case_begin_4544106736:;
			{
				return _1b65a085c_int_assignable(jule::Str("int", 3),(*this)._field_r) || _1b65a085c_int_assignable(jule::Str("uint", 4),(*this)._field_r);
			}
			goto _match_end_4544106368;
			_case_end_4544106736:;
			_case_begin_4544105904:;
			{
				return false;
			}
			goto _match_end_4544106368;
			_case_end_4544105904:;
			_match_end_4544106368:;
		}
	}
	return (!(_1b6e2b4c3_is_float(_368349_rk)));
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_float(void) {
	jule::Str _372213_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _372313_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_372213_lk,_372313_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_372213_lk),jule::Any(_372313_rk)}));
		return jule::new_ref<_1b66db129_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4544113440; }
		_case_begin_4544113440:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4544113360;
		_case_end_4544113440:;
		_match_end_4544113360:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr)) { goto _case_end_4544123088; }
		_case_begin_4544123088:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4544120160;
		_case_end_4544123088:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4544123568; }
		_case_begin_4544123568:;
		{
			if ((!(_1b6e2b4c3_is_int(_372313_rk)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_372213_lk),jule::Any(_372313_rk)}));
				return jule::new_ref<_1b66db129_Data>();
			}
			(*this)._method_mod();
			return (*this)._field_r;
		}
		goto _match_end_4544120160;
		_case_end_4544123568:;
		_case_begin_4544113648:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4544120160;
		_case_end_4544113648:;
		_match_end_4544120160:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _376813_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _376913_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_376813_lk,_376913_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_376813_lk),jule::Any(_376913_rk)}));
		return jule::new_ref<_1b66db129_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4544135472; }
		_case_begin_4544135472:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4544132064;
		_case_end_4544135472:;
		_match_end_4544132064:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4544141744; }
		_case_begin_4544141744:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4544138752;
		_case_end_4544141744:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4544142224; }
		_case_begin_4544142224:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4544138752;
		_case_end_4544142224:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4544141568; }
		_case_begin_4544141568:;
		{
			if ((!(_1b66db129_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1b66db129_Data>();
			}
			if ((*this)._field_l->_method_is_const()) {
				(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
			}
			return (*this)._field_l;
		}
		goto _match_end_4544138752;
		_case_end_4544141568:;
		_case_begin_4544136144:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for unsigned integer type(s)", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4544138752;
		_case_end_4544136144:;
		_match_end_4544138752:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _382713_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _382813_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_382713_lk,_382813_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_382713_lk),jule::Any(_382813_rk)}));
		return jule::new_ref<_1b66db129_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4544153952; }
		_case_begin_4544153952:;
		{
			return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
		}
		goto _match_end_4544153856;
		_case_end_4544153952:;
		_match_end_4544153856:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4544162576; }
		_case_begin_4544162576:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4544158928;
		_case_end_4544162576:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4544163056; }
		_case_begin_4544163056:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4544158928;
		_case_end_4544163056:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4544162400; }
		_case_begin_4544162400:;
		{
			if ((!(_1b66db129_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1b66db129_Data>();
			}
			return (*this)._field_l;
		}
		goto _match_end_4544158928;
		_case_end_4544162400:;
		_case_begin_4544157872:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4544158928;
		_case_end_4544157872:;
		_match_end_4544158928:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval_prim(void) {
	jule::Ref<_1b6703d45_Prim> _388213_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (!((_388213_prim->_method_is_any()))) { goto _case_end_4544171680; }
		_case_begin_4544171680:;
		{
			return (*this)._method_eval_any();
		}
		goto _match_end_4544171504;
		_case_end_4544171680:;
		if (!((_388213_prim->_method_is_bool()))) { goto _case_end_4544171792; }
		_case_begin_4544171792:;
		{
			return (*this)._method_eval_bool();
		}
		goto _match_end_4544171504;
		_case_end_4544171792:;
		if (!((_388213_prim->_method_is_str()))) { goto _case_end_4544171904; }
		_case_begin_4544171904:;
		{
			return (*this)._method_eval_str();
		}
		goto _match_end_4544171504;
		_case_end_4544171904:;
		_match_end_4544171504:;
	}
	jule::Ref<_1b6703d45_Prim> _388913_rprim = (*this)._field_r->_field_kind->_method_prim();
	if ((!(jule::real(_388913_rprim)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_388213_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Str _389513_lk = _388213_prim->_method_to_str();
	{
		if (!((_1b6e2b4c3_is_float(_389513_lk)))) { goto _case_end_4544183872; }
		_case_begin_4544183872:;
		{
			return (*this)._method_eval_float();
		}
		goto _match_end_4544177152;
		_case_end_4544183872:;
		if (!((_1b6e2b4c3_is_unsig_int(_389513_lk)))) { goto _case_end_4544183216; }
		_case_begin_4544183216:;
		{
			return (*this)._method_eval_unsig_int();
		}
		goto _match_end_4544177152;
		_case_end_4544183216:;
		if (!((_1b6e2b4c3_is_sig_int(_389513_lk)))) { goto _case_end_4544183008; }
		_case_begin_4544183008:;
		{
			return (*this)._method_eval_sig_int();
		}
		goto _match_end_4544177152;
		_case_end_4544183008:;
		_case_begin_4544177264:;
		{
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4544177152;
		_case_end_4544177264:;
		_match_end_4544177152:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_eval(void) {
	{
		if (!(((*this)._field_l->_field_kind->_method_void()))) { goto _case_end_4544189152; }
		_case_begin_4544189152:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4544187248;
		_case_end_4544189152:;
		if (!(((*this)._field_l->_field_kind->_method_is_nil()))) { goto _case_end_4544189632; }
		_case_begin_4544189632:;
		{
			return (*this)._method_eval_nil();
		}
		goto _match_end_4544187248;
		_case_end_4544189632:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_enm())))) { goto _case_end_4544188976; }
		_case_begin_4544188976:;
		{
			return (*this)._method_eval_enum();
		}
		goto _match_end_4544187248;
		_case_end_4544188976:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_ptr()) || jule::real((*this)._field_r->_field_kind->_method_ptr())))) { goto _case_end_4544189360; }
		_case_begin_4544189360:;
		{
			return (*this)._method_eval_ptr();
		}
		goto _match_end_4544187248;
		_case_end_4544189360:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_arr())))) { goto _case_end_4544189456; }
		_case_begin_4544189456:;
		{
			return (*this)._method_eval_arr();
		}
		goto _match_end_4544187248;
		_case_end_4544189456:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_slc())))) { goto _case_end_4544188400; }
		_case_begin_4544188400:;
		{
			return (*this)._method_eval_slc();
		}
		goto _match_end_4544187248;
		_case_end_4544188400:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_fnc())))) { goto _case_end_4544188496; }
		_case_begin_4544188496:;
		{
			return (*this)._method_eval_fn();
		}
		goto _match_end_4544187248;
		_case_end_4544188496:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_trt()) || jule::real((*this)._field_r->_field_kind->_method_trt())))) { goto _case_end_4544188592; }
		_case_begin_4544188592:;
		{
			if (jule::real((*this)._field_r->_field_kind->_method_trt())) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			return (*this)._method_eval_trait();
		}
		goto _match_end_4544187248;
		_case_end_4544188592:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_strct())))) { goto _case_end_4544187712; }
		_case_begin_4544187712:;
		{
			return (*this)._method_eval_struct();
		}
		goto _match_end_4544187248;
		_case_end_4544187712:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_prim())))) { goto _case_end_4544187808; }
		_case_begin_4544187808:;
		{
			return (*this)._method_eval_prim();
		}
		goto _match_end_4544187248;
		_case_end_4544187808:;
		_case_begin_4544187424:;
		{
			return jule::new_ref<_1b66db129_Data>();
		}
		goto _match_end_4544187248;
		_case_end_4544187424:;
		_match_end_4544187248:;
	}
}



inline void _1b66db129_BinopSolver::_method_solve_const(jule::Ref<_1b66db129_Data> _394534_d) {
	{
		if (!(((!(jule::real(_394534_d)))))) { goto _case_end_4544212928; }
		_case_begin_4544212928:;
		{
			return;
		}
		goto _match_end_4544212720;
		_case_end_4544212928:;
		if (!(((!((*this)._field_l->_method_is_const()))) || ((!((*this)._field_r->_method_is_const()))))) { goto _case_end_4544213040; }
		_case_begin_4544213040:;
		{
			jule::drop(_394534_d->_field_constant);
			return;
		}
		goto _match_end_4544212720;
		_case_end_4544213040:;
		_match_end_4544212720:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr)) { goto _case_end_4544215088; }
		_case_begin_4544215088:;
		{
			_394534_d->_field_constant=_1b6d4076c_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4544215408;
		_case_end_4544215088:;
		if (!((jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4544215824; }
		_case_begin_4544215824:;
		{
			_394534_d->_field_constant=_1b6d4076c_Const::_static_method_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant))));
		}
		goto _match_end_4544215408;
		_case_end_4544215824:;
		if (!((jule::Str("::", 2)) == _match_expr)) { goto _case_end_4544216864; }
		_case_begin_4544216864:;
		{
			_394534_d->_field_constant=_1b6d4076c_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_or((*this)._field_r->_field_constant));
		}
		goto _match_end_4544215408;
		_case_end_4544216864:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4544216960; }
		_case_begin_4544216960:;
		{
			_394534_d->_field_constant=_1b6d4076c_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_and((*this)._field_r->_field_constant));
		}
		goto _match_end_4544215408;
		_case_end_4544216960:;
		if (!((jule::Str(">", 1)) == _match_expr)) { goto _case_end_4544217072; }
		_case_begin_4544217072:;
		{
			_394534_d->_field_constant=_1b6d4076c_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant));
		}
		goto _match_end_4544215408;
		_case_end_4544217072:;
		if (!((jule::Str("<", 1)) == _match_expr)) { goto _case_end_4544217184; }
		_case_begin_4544217184:;
		{
			_394534_d->_field_constant=_1b6d4076c_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant));
		}
		goto _match_end_4544215408;
		_case_end_4544217184:;
		if (!((jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4544217296; }
		_case_begin_4544217296:;
		{
			_394534_d->_field_constant=_1b6d4076c_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4544215408;
		_case_end_4544217296:;
		if (!((jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4544217408; }
		_case_begin_4544217408:;
		{
			_394534_d->_field_constant=_1b6d4076c_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4544215408;
		_case_end_4544217408:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4544217520; }
		_case_begin_4544217520:;
		{
			(*this)._field_l->_field_constant->_method_add((*this)._field_r->_field_constant);
			_394534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4544215408;
		_case_end_4544217520:;
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4544217632; }
		_case_begin_4544217632:;
		{
			(*this)._field_l->_field_constant->_method_sub((*this)._field_r->_field_constant);
			_394534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4544215408;
		_case_end_4544217632:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4544217744; }
		_case_begin_4544217744:;
		{
			(*this)._field_l->_field_constant->_method_mul((*this)._field_r->_field_constant);
			_394534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4544215408;
		_case_end_4544217744:;
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4544217856; }
		_case_begin_4544217856:;
		{
			jule::Bool _399417_ok = (*this)._field_l->_field_constant->_method_div((*this)._field_r->_field_constant);
			if ((!(_399417_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_394534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4544215408;
		_case_end_4544217856:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4544217968; }
		_case_begin_4544217968:;
		{
			jule::Bool _400117_ok = (*this)._field_l->_field_constant->_method_mod((*this)._field_r->_field_constant);
			if ((!(_400117_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_394534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4544215408;
		_case_end_4544217968:;
		if (!((jule::Str("|", 1)) == _match_expr)) { goto _case_end_4544218080; }
		_case_begin_4544218080:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_or((*this)._field_r->_field_constant);
			_394534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4544215408;
		_case_end_4544218080:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4544218192; }
		_case_begin_4544218192:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_and((*this)._field_r->_field_constant);
			_394534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4544215408;
		_case_end_4544218192:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4544218304; }
		_case_begin_4544218304:;
		{
			(*this)._field_l->_field_constant->_method_xor((*this)._field_r->_field_constant);
			_394534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4544215408;
		_case_end_4544218304:;
		if (!((jule::Str("<<", 2)) == _match_expr)) { goto _case_end_4544218416; }
		_case_begin_4544218416:;
		{
			(*this)._field_l->_field_constant->_method_lshift((*this)._field_r->_field_constant);
			_394534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4544215408;
		_case_end_4544218416:;
		if (!((jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4544218528; }
		_case_begin_4544218528:;
		{
			(*this)._field_l->_field_constant->_method_rshift((*this)._field_r->_field_constant);
			_394534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4544215408;
		_case_end_4544218528:;
		_match_end_4544215408:;
	}
	_394534_d->_field_model=jule::Any(_394534_d->_field_constant);
}



inline void _1b66db129_BinopSolver::_method_post_const(jule::Ref<_1b66db129_Data> _403129_d) {
	if ((!(jule::real(_403129_d)))) {
		return;
	}
	_1b66db129_normalize_bitsize(_403129_d);
}



inline void _1b66db129_BinopSolver::_method_prepare_data(jule::Ref<_1b66db129_Data> _403931_d) {
	if (jule::real(_403931_d) && jule::real(_403931_d->_field_kind->_method_ref())) {
		_403931_d->_field_kind=_403931_d->_field_kind->_method_ref()->_field_elem;
	}
}



inline void _1b66db129_BinopSolver::_method_prepare_eval(void) {
	(*this)._method_prepare_data((*this)._field_r);
	(*this)._method_prepare_data((*this)._field_l);
}



inline void _1b66db129_BinopSolver::_method_check_data(jule::Ref<_1b66db129_Data> _405033_d) {
	jule::Ref<_1b6069348_FnIns> _405113_f = _405033_d->_field_kind->_method_fnc();
	if ((jule::real(_405113_f) && jule::real(_405113_f->_field_decl)) && _405113_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>({}));
	}
}



inline void _1b66db129_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_solve_explicit(jule::Ref<_1b66db129_Data> _406237_l,jule::Ref<_1b66db129_Data> _406251_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_406237_l,_406251_r);
	(*this)._method_prepare_eval();
	(*this)._method_check_datas();
	jule::Ref<_1b66db129_Data> _406817_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_406237_l,_406251_r);
	(*this)._method_solve_const(_406817_d);
	(*this)._method_post_const(_406817_d);
	if (jule::real(_406817_d)) {
		_406817_d->_field_lvalue=_406817_d->_field_kind->_method_lvalue();
		if ((!(_406817_d->_method_is_const()))) {
			_406817_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_BinopExprModel>(new( std::nothrow ) _1b61decc6_BinopExprModel(_406237_l->_field_model,_406251_r->_field_model,(*this)._field_op._field_kind)));
		}
	}
	return _406817_d;
}



inline jule::Ref<_1b66db129_Data> _1b66db129_BinopSolver::_method_solve(jule::Ref<_1ce385d22_BinopExpr> _408828_op) {
	jule::Ref<_1b66db129_Data> _408917_l = (*this)._field_e->_method_eval_expr_kind(_408828_op->_field_left);
	if ((!(jule::real(_408917_l))) || (!(jule::real(_408917_l->_field_kind)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b66db129_Data> _409417_r = (*this)._field_e->_method_eval_expr_kind(_408828_op->_field_right);
	if ((!(jule::real(_409417_r))) || (!(jule::real(_409417_r->_field_kind)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	(*this)._field_op=_408828_op->_field_op;
	jule::Ref<_1b66db129_Data> _410117_d = (*this)._method_solve_explicit(_408917_l,_409417_r);
	if ((jule::real(_410117_d) && _408917_l->_field_is_rune) && _409417_r->_field_is_rune) {
		_410117_d->_field_is_rune=true;
	}
	return _410117_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b66db129_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6703d45_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_Comment::_method_is_directive(void) {
	return (*this)._field_text.has_prefix(jule::Str("jule:", 5));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



inline jule::Bool _1ce385d22_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_FnDecl::_method_is_anon(void) {
	return (*this)._field_ident == jule::Str("<anonymous>", 11);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline void _1b6703d45_TypeChecker::_method_push_err(_1ce35e3a0_Token _69127_token,jule::Str _69141_fmt,jule::Slice<jule::Any> _69154_args) {
	(*this)._field_s->_method_push_err(_69127_token,_69141_fmt,_69154_args);
}



inline jule::Ref<_1b6703d45_Prim> _1b6703d45_TypeChecker::_method_build_prim(jule::Ref<_1ce385d22_IdentTypeDecl>& _69530_decl) {
	if ((!(_1b6703d45_is_prim(_69530_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b6703d45_Prim>();
	}
	if (_69530_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_69530_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_69530_decl->_field_ident)}));
		return jule::new_ref<_1b6703d45_Prim>();
	}
	return _1b6703d45_build_prim_type(_69530_decl->_field_ident);
}



inline void _1b6703d45_TypeChecker::_method_push_cycle_error(jule::Any _70931_def1,jule::Any _70942_def2,jule::Str& _70958_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _71213_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _71229_def) mutable -> jule::Str {
		{
			auto _match_expr{ _71229_def };
			if (!(_match_expr.type_is<jule::Ref<_1b6703d45_TypeAlias>>())) { goto _case_end_4544516736; }
			_case_begin_4544516736:;
			{
				return _71229_def.operator jule::Ref<_1b6703d45_TypeAlias>()->_field_ident;
			}
			goto _match_end_4544515232;
			_case_end_4544516736:;
			if (!(_match_expr.type_is<jule::Ref<_1ce385eed_Struct>>())) { goto _case_end_4544516304; }
			_case_begin_4544516304:;
			{
				return _71229_def.operator jule::Ref<_1ce385eed_Struct>()->_field_ident;
			}
			goto _match_end_4544515232;
			_case_end_4544516304:;
			if (!(_match_expr.type_is<jule::Ref<_1b61d7c58_Enum>>())) { goto _case_end_4544516400; }
			_case_begin_4544516400:;
			{
				return _71229_def.operator jule::Ref<_1b61d7c58_Enum>()->_field_ident;
			}
			goto _match_end_4544515232;
			_case_end_4544516400:;
			_case_begin_4544515040:;
			{
				return jule::Str("", 0);
			}
			goto _match_end_4544515232;
			_case_end_4544515040:;
			_match_end_4544515232:;
		}
	});
	jule::Str _72113_def1_ident = _71213_get_ident(_70931_def1);
	jule::Str _72213_def2_ident = _71213_get_ident(_70942_def2);
	jule::Str _72313_refers_to = _1e7690a81_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_72113_def1_ident),jule::Any(_72213_def2_ident)}));
	_70958_message=((_1ce50a46e_str_repeat(jule::Str(" ", 1),4LL) + _72313_refers_to) + jule::Str("\n", 1)) + _70958_message;
}



inline jule::Bool _1b6703d45_TypeChecker::_method_are_equals_cross_cycle_data_0(jule::Any _72745_a,jule::Any _72753_b) {
	{
		auto _match_expr{ _72745_a };
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_TypeAlias>>())) { goto _case_end_4544556736; }
		_case_begin_4544556736:;
		{
			{
				auto _match_expr{ _72753_b };
				if (!(_match_expr.type_is<jule::Ref<_1b6703d45_TypeAlias>>())) { goto _case_end_4544557408; }
				_case_begin_4544557408:;
				{
					return (_72745_a.operator jule::Ref<_1b6703d45_TypeAlias>()).alloc == (_72753_b.operator jule::Ref<_1b6703d45_TypeAlias>()).alloc;
				}
				goto _match_end_4544555728;
				_case_end_4544557408:;
				_case_begin_4544556880:;
				{
					return false;
				}
				goto _match_end_4544555728;
				_case_end_4544556880:;
				_match_end_4544555728:;
			}
		}
		goto _match_end_4544555040;
		_case_end_4544556736:;
		_case_begin_4544554912:;
		{
			return false;
		}
		goto _match_end_4544555040;
		_case_end_4544554912:;
		_match_end_4544555040:;
	}
}

inline jule::Bool _1b6703d45_TypeChecker::_method_are_equals_cross_cycle_data_1(jule::Any _72745_a,jule::Any _72753_b) {
	{
		auto _match_expr{ _72745_a };
		if (!(_match_expr.type_is<jule::Ref<_1ce385eed_Struct>>())) { goto _case_end_4544569776; }
		_case_begin_4544569776:;
		{
			{
				auto _match_expr{ _72753_b };
				if (!(_match_expr.type_is<jule::Ref<_1ce385eed_Struct>>())) { goto _case_end_4544570448; }
				_case_begin_4544570448:;
				{
					return (_72745_a.operator jule::Ref<_1ce385eed_Struct>()).alloc == (_72753_b.operator jule::Ref<_1ce385eed_Struct>()).alloc;
				}
				goto _match_end_4544568768;
				_case_end_4544570448:;
				_case_begin_4544569920:;
				{
					return false;
				}
				goto _match_end_4544568768;
				_case_end_4544569920:;
				_match_end_4544568768:;
			}
		}
		goto _match_end_4544568080;
		_case_end_4544569776:;
		_case_begin_4544567952:;
		{
			return false;
		}
		goto _match_end_4544568080;
		_case_end_4544567952:;
		_match_end_4544568080:;
	}
}



inline jule::Bool _1b6703d45_TypeChecker::_method_check_cross_cycle(jule::Any _74032_decl,jule::Str& _74048_message) {
	{
		auto _match_expr{ _74032_decl };
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_TypeAlias>>())) { goto _case_end_4544525488; }
		_case_begin_4544525488:;
		{
			jule::Ref<_1b6703d45_TypeAlias> _74317_ta = _74032_decl.operator jule::Ref<_1b6703d45_TypeAlias>();
			for (auto _1b6703d45_d: _74317_ta->_field_refers) {
				{
					{
						auto _match_expr{ _1b6703d45_d };
						if (!(_match_expr.type_is<jule::Ref<_1b6703d45_TypeAlias>>())) { goto _case_end_4544546432; }
						_case_begin_4544546432:;
						{
							if ((*this)._method_are_equals_cross_cycle_data_0(_1b6703d45_d,(*this)._field_referencer->_field_owner)) {
								(*this)._method_push_cycle_error(jule::Any(_74317_ta),_1b6703d45_d,_74048_message);
								return false;
							}
						}
						goto _match_end_4544546880;
						_case_end_4544546432:;
						_match_end_4544546880:;
					}
					if ((!((*this)._method_check_cross_cycle(_1b6703d45_d,_74048_message)))) {
						(*this)._method_push_cycle_error(jule::Any(_74317_ta),_1b6703d45_d,_74048_message);
						return false;
					}
				}
			_iter_next_4544545344:;
			}
			_iter_end_4544545344:;
		}
		goto _match_end_4544525584;
		_case_end_4544525488:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385eed_Struct>>())) { goto _case_end_4544525904; }
		_case_begin_4544525904:;
		{
			jule::Ref<_1ce385eed_Struct> _76017_s = _74032_decl.operator jule::Ref<_1ce385eed_Struct>();
			for (auto _1b6703d45_d: _76017_s->_field_depends) {
				{
					if ((*this)._method_are_equals_cross_cycle_data_1(jule::Any(_1b6703d45_d),(*this)._field_referencer->_field_owner)) {
						(*this)._method_push_cycle_error(jule::Any(_76017_s),jule::Any(_1b6703d45_d),_74048_message);
						return false;
					}
					if ((!((*this)._method_check_cross_cycle(jule::Any(_1b6703d45_d),_74048_message)))) {
						(*this)._method_push_cycle_error(jule::Any(_76017_s),jule::Any(_1b6703d45_d),_74048_message);
						return false;
					}
				}
			_iter_next_4544546240:;
			}
			_iter_end_4544546240:;
		}
		goto _match_end_4544525584;
		_case_end_4544525904:;
		_match_end_4544525584:;
	}
	return true;
}



inline jule::Bool _1b6703d45_TypeChecker::_method_check_illegal_cycles(jule::Ref<_1ce385d22_IdentTypeDecl>& _78240_ident,jule::Any _78267_decl) {
	jule::Bool _78280_ok = jule::Bool();
	if ((!(jule::real((*this)._field_referencer)))) {
		_78280_ok = true;
		return _78280_ok;
	}
	{
		auto _match_expr{ _78267_decl };
		if (!(_match_expr.type_is<jule::Ref<_1ce385eed_Struct>>())) { goto _case_end_4544575936; }
		_case_begin_4544575936:;
		{
			if ((*this)._field_not_plain) {
				_78280_ok = true;
				return _78280_ok;
			}
		}
		goto _match_end_4544575584;
		_case_end_4544575936:;
		_match_end_4544575584:;
	}
	if ((*this)._field_referencer->_field_owner == _78267_decl) {
		(*this)._method_push_err(_78240_ident->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_78280_ok = false;
		return _78280_ok;
	}
	jule::Str _80117_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_78267_decl,_80117_message)))) {
		jule::Str _80421_err_msg = _80117_message;
		_80117_message=jule::Str("", 0);
		(*this)._method_push_cycle_error((*this)._field_referencer->_field_owner,_78267_decl,_80117_message);
		_80421_err_msg=_80421_err_msg + _80117_message;
		(*this)._method_push_err(_78240_ident->_field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_80421_err_msg)}));
		_78280_ok = false;
		return _78280_ok;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_TypeAlias>>())) { goto _case_end_4544586224; }
		_case_begin_4544586224:;
		{
			{
				(*((*this)._field_referencer->_field_refs))=jule::append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_78267_decl}));
			}
		}
		goto _match_end_4544586528;
		_case_end_4544586224:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385eed_Struct>>())) { goto _case_end_4544586608; }
		_case_begin_4544586608:;
		{
			{
				auto _match_expr{ _78267_decl };
				if (!(_match_expr.type_is<jule::Ref<_1ce385eed_Struct>>())) { goto _case_end_4544586736; }
				_case_begin_4544586736:;
				{
					jule::Ref<_1ce385eed_Struct> _81925_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_1ce385eed_Struct>();
					_81925_s->_field_depends=jule::append(_81925_s->_field_depends,jule::Slice<jule::Ref<_1ce385eed_Struct>>({_78267_decl.operator jule::Ref<_1ce385eed_Struct>()}));
				}
				goto _match_end_4544587664;
				_case_end_4544586736:;
				_match_end_4544587664:;
			}
		}
		goto _match_end_4544586528;
		_case_end_4544586608:;
		_match_end_4544586528:;
	}
	_78280_ok = true;
	return _78280_ok;
}



inline jule::Trait<_1b6703d45_Kind> _1b6703d45_TypeChecker::_method_from_type_alias(jule::Ref<_1ce385d22_IdentTypeDecl>& _82735_decl,jule::Ref<_1b6703d45_TypeAlias>& _82762_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_82762_ta->_field_public,_82762_ta->_field_token)))) {
		(*this)._method_push_err(_82735_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_82735_decl->_field_ident)}));
		return nullptr;
	}
	_82762_ta->_field_used=true;
	if (_82735_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_82735_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_82735_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _84017_ok = (*this)._method_check_illegal_cycles(_82735_decl,jule::Any(_82762_ta));
	if ((!(_84017_ok))) {
		return nullptr;
	}
	_84017_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_82762_ta,(*this)._field_lookup);
	if ((!(_84017_ok))) {
		return nullptr;
	}
	jule::Ref<_1b6703d45_TypeKind> _85117_kind = _82762_ta->_field_kind->_field_kind->_method_clone();
	_85117_kind->_field_generic=_82762_ta->_field_generic;
	if (_82762_ta->_field_cpp_linked) {
		_85117_kind->_field_cpp_ident=_82762_ta->_field_ident;
	}
	return _85117_kind;
}



inline jule::Ref<_1b61d7c58_Enum> _1b6703d45_TypeChecker::_method_from_enum(jule::Ref<_1ce385d22_IdentTypeDecl>& _86129_decl,jule::Ref<_1b61d7c58_Enum>& _86156_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_86156_e->_field_public,_86156_e->_field_token)))) {
		(*this)._method_push_err(_86129_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_86129_decl->_field_ident)}));
		return jule::new_ref<_1b61d7c58_Enum>();
	}
	if (_86129_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_86129_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_86129_decl->_field_ident)}));
		return jule::new_ref<_1b61d7c58_Enum>();
	}
	return _86156_e;
}



inline jule::Bool _1b6703d45_TypeChecker::_method_check_struct_ins(jule::Ref<_1ce385eed_StructIns>& _87540_ins,_1ce35e3a0_Token& _87558_error_token) {
	jule::Bool _87580_ok = jule::Bool();
	if (_87540_ins->_field_checked) {
		_87580_ok = true;
		return _87580_ok;
	}
	_87540_ins->_field_checked=true;
	if (jule::real((*this)._field_referencer) && ((*this)._field_referencer->_field_owner == _87540_ins->_field_decl)) {
		_87580_ok = true;
		return _87580_ok;
	}
	jule::Ref<_1b66b3a3b_SymbolTable> _88917_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_88917_old_file);
	});
	jule::Ref<_1b66b3a3b_SymbolTable> _89217_file = _1b622b76e_find_file((*this)._field_s->_field_files,_87540_ins->_field_decl->_field_token._field_file);
	if (jule::real(_89217_file)) {
		(*this)._field_s->_method_set_current_file(_89217_file);
	}
	jule::Ref<_1b6703d45_Referencer> _89717_referencer = jule::new_struct<_1b6703d45_Referencer>(new( std::nothrow ) _1b6703d45_Referencer(_87540_ins->_field_decl->_field_ident,jule::Any(_87540_ins->_field_decl),nullptr));
	jule::Slice<jule::Ref<_1b6703d45_TypeAlias>> _90217_generics = jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_87540_ins->_field_generics.len())));
	{
		jule::Int _1b6703d45_i = 0;
		for (auto _1b6703d45_g: _87540_ins->_field_generics) {
			{
				_90217_generics[static_cast<jule::Int>(_1b6703d45_i)]=jule::new_struct<_1b6703d45_TypeAlias>(new( std::nothrow ) _1b6703d45_TypeAlias(jule::Ref<_1ce385d22_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1ce35e3a0_Token(),_87540_ins->_field_decl->_field_generics[static_cast<jule::Int>(_1b6703d45_i)]->_field_ident,jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),_1b6703d45_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
		_iter_next_4544634672:;
		_1b6703d45_i++;
		}
		_iter_end_4544634672:;
	}
	jule::Ref<_1b66b3a3b_SymbolTable> _91217_old_sema_file = _87540_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_87540_ins->_field_decl->_field_sema->_method_set_current_file(_91217_old_sema_file);
	});
	_1b6703d45_TypeChecker _91517_tc = _1b6703d45_TypeChecker(_87540_ins->_field_decl->_field_sema,_87540_ins->_field_decl->_field_sema,_89717_referencer,_1ce35e3a0_Token(),jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>(),_90217_generics,jule::Bool());
	for (auto _1b6703d45_field: _87540_ins->_field_fields) {
		{
			jule::Ref<_1b6703d45_TypeKind> _92421_kind = _91517_tc._method_check_decl(_1b6703d45_field->_field_decl->_field_kind->_field_decl);
			_87580_ok=jule::real(_92421_kind);
			if ((jule::real(_87540_ins->_field_decl->_field_sema) && ((*this)._field_s != _87540_ins->_field_decl->_field_sema)) && (_87540_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
				(*this)._field_s->_field_errors=jule::append((*this)._field_s->_field_errors,_87540_ins->_field_decl->_field_sema->_field_errors);
			}
			if ((!(_87580_ok))) {
				_87580_ok = false;
				return _87580_ok;
			}
			_1b6703d45_field->_field_kind=_92421_kind;
			if (_1b6703d45_field->_field_kind->_method_mutable()) {
				_87540_ins->_field_mutable=true;
				(*this)._field_s->_method_check_struct_ins_derive_clone(_87540_ins);
			}
		}
	_iter_next_4544644016:;
	}
	_iter_end_4544644016:;
	if (_87540_ins->_field_generics.len() > 0LL) {
		for (auto _1b6703d45_m: _87540_ins->_field_methods) {
			{
				(*this)._field_s->_method_check_type_method(_87540_ins,_1b6703d45_m);
			}
		_iter_next_4544655280:;
		}
		_iter_end_4544655280:;
	}
	_87580_ok = true;
	return _87580_ok;
}



inline void _1b6703d45_TypeChecker::_method_append_used_struct_reference(jule::Ref<_1ce385eed_Struct>& _95152_s) {
	if ((!(jule::real((*this)._field_referencer)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_1ce385eed_Struct>>())) { goto _case_end_4544658992; }
		_case_begin_4544658992:;
		{
			jule::Ref<_1ce385eed_Struct> _95821_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_1ce385eed_Struct>();
			if ((!(_95821_ref_s->_method_is_uses(_95152_s)))) {
				_95821_ref_s->_field_uses=jule::append(_95821_ref_s->_field_uses,jule::Slice<jule::Ref<_1ce385eed_Struct>>({_95152_s}));
			}
		}
		goto _match_end_4544659504;
		_case_end_4544658992:;
		_match_end_4544659504:;
	}
}



inline jule::Ref<_1ce385eed_StructIns> _1b6703d45_TypeChecker::_method_from_struct(jule::Ref<_1ce385d22_IdentTypeDecl>& _96535_decl,jule::Ref<_1ce385eed_Struct>& _96562_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_96562_s->_field_public,_96562_s->_field_token)))) {
		(*this)._method_push_err(_96535_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_96535_decl->_field_ident)}));
		return jule::new_ref<_1ce385eed_StructIns>();
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return jule::new_ref<_1ce385eed_StructIns>();
	}
	jule::Bool _97617_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_96535_decl,jule::Any(_96562_s));
	if ((!(_97617_ok))) {
		return jule::new_ref<_1ce385eed_StructIns>();
	}
	(*this)._method_append_used_struct_reference(_96562_s);
	jule::Ref<_1ce385eed_StructIns> _98217_ins = _96562_s->_method_instance();
	_98217_ins->_field_generics=jule::Slice<jule::Ref<_1b6703d45_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_96535_decl->_field_generics.len())));
	jule::Ref<_1b6703d45_Referencer> _98417_referencer = (*this)._field_referencer;
	jule::drop((*this)._field_referencer);
	{
		jule::Int _1b6703d45_i = 0;
		for (auto _1b6703d45_g: _96535_decl->_field_generics) {
			{
				jule::Ref<_1b6703d45_TypeKind> _98721_kind = (*this)._method_build(_1b6703d45_g->_field_kind);
				if ((!(jule::real(_98721_kind)))) {
					_97617_ok=false;
					goto _iter_next_4544678048;
				}
				_98217_ins->_field_generics[static_cast<jule::Int>(_1b6703d45_i)]=_98721_kind;
			}
		_iter_next_4544678048:;
		_1b6703d45_i++;
		}
		_iter_end_4544678048:;
	}
	(*this)._field_referencer=_98417_referencer;
	if ((!(_97617_ok))) {
		return jule::new_ref<_1ce385eed_StructIns>();
	}
	_97617_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_98217_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_98217_ins->_field_generics.len()),_96535_decl->_field_token);
	if ((!(_97617_ok))) {
		return jule::new_ref<_1ce385eed_StructIns>();
	}
	jule::Ref<_1ce385eed_StructIns> _100617_exist_instance = _96562_s->_method_append_instance(_98217_ins);
	if (jule::real(_100617_exist_instance)) {
		return _100617_exist_instance;
	}
	_97617_ok=(*this)._method_check_struct_ins(_98217_ins,_96535_decl->_field_token);
	if ((!(_97617_ok))) {
		return jule::new_ref<_1ce385eed_StructIns>();
	}
	return _98217_ins;
}



inline jule::Trait<_1b6703d45_Kind> _1b6703d45_TypeChecker::_method_get_def(jule::Ref<_1ce385d22_IdentTypeDecl>& _102131_decl) {
	for (auto _1b6703d45_g: (*this)._field_ignore_generics) {
		{
			if (_1b6703d45_g->_field_ident == _102131_decl->_field_ident) {
				return _1b6703d45_build_prim_type(_1b6703d45_g->_field_ident);
			}
		}
	_iter_next_4544696128:;
	}
	_iter_end_4544696128:;
	for (auto _1b6703d45_g: (*this)._field_use_generics) {
		{
			if (_1b6703d45_g->_field_ident == _102131_decl->_field_ident) {
				jule::Ref<_1ce385eed_StructIns> _103025_st = _1b6703d45_g->_field_kind->_field_kind->_method_strct();
				if (jule::real(_103025_st)) {
					jule::Bool _103225_ok = (*this)._method_check_illegal_cycles(_102131_decl,jule::Any(_103025_st->_field_decl));
					if ((!(_103225_ok))) {
						return nullptr;
					}
				}
				return _1b6703d45_g->_field_kind->_field_kind->_field_kind;
			}
		}
	_iter_next_4544698656:;
	}
	_iter_end_4544698656:;
	if ((!(_102131_decl->_field_cpp_linked))) {
		jule::Ref<_1b61d7c58_Enum> _104221_e = (*this)._field_lookup.get()._method_find_enum(_102131_decl->_field_ident);
		if (jule::real(_104221_e)) {
			return (*this)._method_from_enum(_102131_decl,_104221_e);
		}
		jule::Ref<_1b61d7d79_Trait> _104721_t = (*this)._field_lookup.get()._method_find_trait(_102131_decl->_field_ident);
		if ((!(jule::real(_104721_t)))) {
			_104721_t=_1b6c3ed86_find_builtin_trait(_102131_decl->_field_ident);
		}
		if (jule::real(_104721_t)) {
			if ((!((*this)._field_s->_method_is_accessible_define(_104721_t->_field_public,_104721_t->_field_token)))) {
				(*this)._method_push_err(_102131_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_102131_decl->_field_ident)}));
				return nullptr;
			}
			if (_102131_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_102131_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_102131_decl->_field_ident)}));
				return nullptr;
			}
			return _104721_t;
		}
	}
	jule::Ref<_1ce385eed_Struct> _106517_s = (*this)._field_lookup.get()._method_find_struct(_102131_decl->_field_ident,_102131_decl->_field_cpp_linked);
	if (jule::real(_106517_s)) {
		return (*this)._method_from_struct(_102131_decl,_106517_s);
	}
	jule::Ref<_1b6703d45_TypeAlias> _107017_ta = (*this)._field_lookup.get()._method_find_type_alias(_102131_decl->_field_ident,_102131_decl->_field_cpp_linked);
	if ((!(jule::real(_107017_ta)))) {
		_107017_ta=_1b6c3ed86_find_builtin_type_alias(_102131_decl->_field_ident);
	}
	if (jule::real(_107017_ta)) {
		return (*this)._method_from_type_alias(_102131_decl,_107017_ta);
	}
	(*this)._method_push_err(_102131_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_102131_decl->_field_ident)}));
	return nullptr;
}



inline jule::Trait<_1b6703d45_Kind> _1b6703d45_TypeChecker::_method_build_ident(jule::Ref<_1ce385d22_IdentTypeDecl> _108234_decl) {
	{
		if (!((_1b6703d45_is_prim(_108234_decl->_field_ident)))) { goto _case_end_4544729440; }
		_case_begin_4544729440:;
		{
			return (*this)._method_build_prim(_108234_decl);
		}
		goto _match_end_4544727936;
		_case_end_4544729440:;
		_case_begin_4544728096:;
		{
			return (*this)._method_get_def(_108234_decl);
		}
		goto _match_end_4544727936;
		_case_end_4544728096:;
		_match_end_4544727936:;
	}
}



inline jule::Ref<_1b6703d45_Ref> _1b6703d45_TypeChecker::_method_build_ref_from_type(jule::Ref<_1b6703d45_TypeKind>& _108943_elem) {
	{
		if (!(((!(jule::real(_108943_elem)))))) { goto _case_end_4544728672; }
		_case_begin_4544728672:;
		{
			return jule::new_ref<_1b6703d45_Ref>();
		}
		goto _match_end_4544728512;
		_case_end_4544728672:;
		if (!((jule::real(_108943_elem->_method_strct())))) { goto _case_end_4544732192; }
		_case_begin_4544732192:;
		{
			jule::Ref<_1ce385eed_StructIns> _109617_s = _108943_elem->_method_strct();
			if (jule::real(_109617_s->_field_decl) && _109617_s->_field_decl->_field_cpp_linked) {
				(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1b6703d45_Ref>();
			}
		}
		goto _match_end_4544728512;
		_case_end_4544732192:;
		if (!((jule::real(_108943_elem->_method_ref())))) { goto _case_end_4544732304; }
		_case_begin_4544732304:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to another reference", 48),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b6703d45_Ref>();
		}
		goto _match_end_4544728512;
		_case_end_4544732304:;
		if (!((jule::real(_108943_elem->_method_ptr())))) { goto _case_end_4544732416; }
		_case_begin_4544732416:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to pointer", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b6703d45_Ref>();
		}
		goto _match_end_4544728512;
		_case_end_4544732416:;
		if (!((jule::real(_108943_elem->_method_enm())))) { goto _case_end_4544732528; }
		_case_begin_4544732528:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to enum", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b6703d45_Ref>();
		}
		goto _match_end_4544728512;
		_case_end_4544732528:;
		if (!((jule::real(_108943_elem->_method_arr())))) { goto _case_end_4544732640; }
		_case_begin_4544732640:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to array", 36),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b6703d45_Ref>();
		}
		goto _match_end_4544728512;
		_case_end_4544732640:;
		_match_end_4544728512:;
	}
	return jule::new_struct<_1b6703d45_Ref>(new( std::nothrow ) _1b6703d45_Ref(_108943_elem));
}



inline jule::Ref<_1b6703d45_Ref> _1b6703d45_TypeChecker::_method_build_ref(jule::Ref<_1ce385d22_RefTypeDecl> _112432_decl) {
	jule::Bool _112513_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_112513_not_plain;
	});
	jule::Ref<_1b6703d45_TypeKind> _112917_elem = (*this)._method_check_decl(_112432_decl->_field_elem);
	return (*this)._method_build_ref_from_type(_112917_elem);
}



inline jule::Ref<_1b6703d45_Ptr> _1b6703d45_TypeChecker::_method_build_ptr_from_type(jule::Ref<_1b6703d45_TypeKind>& _113343_elem) {
	{
		if (!(((!(jule::real(_113343_elem)))))) { goto _case_end_4544753440; }
		_case_begin_4544753440:;
		{
			return jule::new_ref<_1b6703d45_Ptr>();
		}
		goto _match_end_4544753200;
		_case_end_4544753440:;
		if (!((jule::real(_113343_elem->_method_ref())))) { goto _case_end_4544753552; }
		_case_begin_4544753552:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to reference", 34),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b6703d45_Ptr>();
		}
		goto _match_end_4544753200;
		_case_end_4544753552:;
		if (!((jule::real(_113343_elem->_method_enm())))) { goto _case_end_4544753664; }
		_case_begin_4544753664:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to enum", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b6703d45_Ptr>();
		}
		goto _match_end_4544753200;
		_case_end_4544753664:;
		if (!((jule::real(_113343_elem->_method_arr()) && _113343_elem->_method_arr()->_field_auto))) { goto _case_end_4544753776; }
		_case_begin_4544753776:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b6703d45_Ptr>();
		}
		goto _match_end_4544753200;
		_case_end_4544753776:;
		_match_end_4544753200:;
	}
	return jule::new_struct<_1b6703d45_Ptr>(new( std::nothrow ) _1b6703d45_Ptr(_113343_elem));
}



inline jule::Ref<_1b6703d45_Ptr> _1b6703d45_TypeChecker::_method_build_ptr(jule::Ref<_1ce385d22_PtrTypeDecl> _115732_decl) {
	jule::Bool _115813_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_115813_not_plain;
	});
	jule::Ref<_1b6703d45_TypeKind> _116217_elem = jule::new_ref<_1b6703d45_TypeKind>();
	if ((!(_115732_decl->_method_is_unsafe()))) {
		_116217_elem=(*this)._method_check_decl(_115732_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_116217_elem);
	}
	return jule::new_struct<_1b6703d45_Ptr>(new( std::nothrow ) _1b6703d45_Ptr(_116217_elem));
}



inline jule::Ref<_1b6703d45_Slc> _1b6703d45_TypeChecker::_method_build_slc(jule::Ref<_1ce385d22_SlcTypeDecl> _117432_decl) {
	jule::Bool _117513_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_117513_not_plain;
	});
	jule::Ref<_1b6703d45_TypeKind> _117917_elem = (*this)._method_check_decl(_117432_decl->_field_elem);
	{
		if (!(((!(jule::real(_117917_elem)))))) { goto _case_end_4544774960; }
		_case_begin_4544774960:;
		{
			return jule::new_ref<_1b6703d45_Slc>();
		}
		goto _match_end_4544774800;
		_case_end_4544774960:;
		if (!((jule::real(_117917_elem->_method_arr()) && _117917_elem->_method_arr()->_field_auto))) { goto _case_end_4544775072; }
		_case_begin_4544775072:;
		{
			(*this)._method_push_err(_117432_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b6703d45_Slc>();
		}
		goto _match_end_4544774800;
		_case_end_4544775072:;
		_match_end_4544774800:;
	}
	return jule::new_struct<_1b6703d45_Slc>(new( std::nothrow ) _1b6703d45_Slc(_117917_elem));
}



inline jule::Ref<_1b6703d45_Arr> _1b6703d45_TypeChecker::_method_build_arr(jule::Ref<_1ce385d22_ArrTypeDecl> _119632_decl) {
	jule::Bool _119713_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_119713_not_plain;
	});
	jule::Int _120117_n = 0LL;
	if ((!(_119632_decl->_method_auto_sized()))) {
		jule::Ref<_1b66db129_Data> _120421_size = (*this)._field_s->_method_eval((*this)._field_lookup)->_method_eval_expr(_119632_decl->_field_size);
		if ((!(jule::real(_120421_size)))) {
			return jule::new_ref<_1b6703d45_Arr>();
		}
		if ((!(_120421_size->_method_is_const()))) {
			(*this)._method_push_err(_119632_decl->_field_size->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b6703d45_Arr>();
		} else if ((!(jule::real(_120421_size->_field_kind->_method_prim()))) || (!(_1b6e2b4c3_is_int(_120421_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_119632_decl->_field_size->_field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b6703d45_Arr>();
		}
		_120117_n=static_cast<jule::Int>(_120421_size->_field_constant->_method_as_i64());
		if (_120117_n < 0LL) {
			(*this)._method_push_err(_119632_decl->_field_elem->_field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b6703d45_Arr>();
		}
	}
	jule::Ref<_1b6703d45_TypeKind> _122417_elem = (*this)._method_check_decl(_119632_decl->_field_elem);
	{
		if (!(((!(jule::real(_122417_elem)))))) { goto _case_end_4544798288; }
		_case_begin_4544798288:;
		{
			return jule::new_ref<_1b6703d45_Arr>();
		}
		goto _match_end_4544795344;
		_case_end_4544798288:;
		if (!((jule::real(_122417_elem->_method_arr()) && _122417_elem->_method_arr()->_field_auto))) { goto _case_end_4544798384; }
		_case_begin_4544798384:;
		{
			(*this)._method_push_err(_119632_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b6703d45_Arr>();
		}
		goto _match_end_4544795344;
		_case_end_4544798384:;
		_match_end_4544795344:;
	}
	return jule::new_struct<_1b6703d45_Arr>(new( std::nothrow ) _1b6703d45_Arr(_119632_decl->_method_auto_sized(),_120117_n,_122417_elem));
}



inline jule::Ref<_1b6703d45_Map> _1b6703d45_TypeChecker::_method_build_map(jule::Ref<_1ce385d22_MapTypeDecl> _124332_decl) {
	jule::Bool _124413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_124413_not_plain;
	});
	jule::Ref<_1b6703d45_TypeKind> _124817_key = (*this)._method_check_decl(_124332_decl->_field_key);
	if ((!(jule::real(_124817_key)))) {
		return jule::new_ref<_1b6703d45_Map>();
	}
	jule::Ref<_1b6703d45_TypeKind> _125317_val = (*this)._method_check_decl(_124332_decl->_field_val);
	if ((!(jule::real(_125317_val)))) {
		return jule::new_ref<_1b6703d45_Map>();
	}
	if (jule::real(_125317_val->_method_enm())) {
		(*this)._method_push_err(_124332_decl->_field_val->_field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>({}));
	}
	return jule::new_struct<_1b6703d45_Map>(new( std::nothrow ) _1b6703d45_Map(_124817_key,_125317_val));
}



inline jule::Ref<_1b6703d45_Tuple> _1b6703d45_TypeChecker::_method_build_tuple(jule::Ref<_1ce385d22_TupleTypeDecl> _126734_decl) {
	jule::Slice<jule::Ref<_1b6703d45_TypeKind>> _126817_types = jule::Slice<jule::Ref<_1b6703d45_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_126734_decl->_field_types.len())));
	{
		jule::Int _1b6703d45_i = 0;
		for (auto _1b6703d45_t: _126734_decl->_field_types) {
			{
				jule::Ref<_1b6703d45_TypeKind> _127021_kind = (*this)._method_check_decl(_1b6703d45_t);
				if ((!(jule::real(_127021_kind)))) {
					return jule::new_ref<_1b6703d45_Tuple>();
				}
				_126817_types[static_cast<jule::Int>(_1b6703d45_i)]=_127021_kind;
			}
		_iter_next_4544818032:;
		_1b6703d45_i++;
		}
		_iter_end_4544818032:;
	}
	return jule::new_struct<_1b6703d45_Tuple>(new( std::nothrow ) _1b6703d45_Tuple(_126817_types));
}



inline jule::Bool _1b6703d45_TypeChecker::_method_check_fn_types(jule::Ref<_1b6069348_FnIns>& _128038_f) {
	jule::Bool _128051_ok = jule::Bool();
	for (auto _1b6703d45_p: _128038_f->_field_params) {
		{
			_1b6703d45_p->_field_kind=(*this)._method_build(_1b6703d45_p->_field_decl->_field_kind->_field_decl->_field_kind);
			_128051_ok=jule::real(_1b6703d45_p->_field_kind);
			if ((!(_128051_ok))) {
				_128051_ok = false;
				return _128051_ok;
			}
		}
	_iter_next_4544825808:;
	}
	_iter_end_4544825808:;
	if ((!(_128038_f->_field_decl->_method_is_void()))) {
		_128038_f->_field_result=(*this)._method_build(_128038_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_128051_ok = jule::real(_128038_f->_field_result);
		return _128051_ok;
	}
	_128051_ok = true;
	return _128051_ok;
}



inline jule::Ref<_1b6069348_FnIns> _1b6703d45_TypeChecker::_method_build_fn(jule::Ref<_1ce385d22_FnDecl> _129731_decl) {
	if (_129731_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_129731_decl->_field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b6069348_FnIns>();
	}
	jule::Ref<_1b6069348_Fn> _130317_f = _1ce50a46e_build_fn(_129731_decl);
	jule::Ref<_1b6069348_FnIns> _130417_ins = _130317_f->_method_instance_force();
	_130417_ins->_field_anon=true;
	jule::Bool _130713_ok = (*this)._method_check_fn_types(_130417_ins);
	if ((!(_130713_ok))) {
		return jule::new_ref<_1b6069348_FnIns>();
	}
	return _130417_ins;
}



inline jule::Trait<_1b6703d45_Kind> _1b6703d45_TypeChecker::_method_build_by_namespace(jule::Ref<_1ce385d22_NamespaceTypeDecl> _131541_decl) {
	jule::Str _131613_path = _1b6703d45_build_link_path_by_tokens(_131541_decl->_field_idents);
	jule::Ref<_1b623bb7a_ImportInfo> _131717_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)>([=](jule::Ref<_1b623bb7a_ImportInfo> _131753_imp) mutable -> jule::Bool {
		if ((_131541_decl->_field_idents.len() == 1LL) && (_131753_imp->_field_alias == _131613_path)) {
			return true;
		}
		return _131753_imp->_field_link_path == _131613_path;
	}));
	if ((!(jule::real(_131717_imp))) || (!(_131717_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_131541_decl->_field_idents[0LL],jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_131613_path)}));
		return nullptr;
	}
	jule::Trait<_1b6b746d3_Lookup> _132917_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_131717_imp;
	jule::Trait<_1b6703d45_Kind> _133217_kind = (*this)._method_build_ident(_131541_decl->_field_kind);
	(*this)._field_lookup=_132917_lookup;
	return _133217_kind;
}



inline jule::Ref<_1b6703d45_TypeKind> _1b6703d45_TypeChecker::_method_build(jule::Any& _133929_decl_kind) {
	jule::Trait<_1b6703d45_Kind> _134017_kind = nullptr;
	{
		auto _match_expr{ _133929_decl_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_TypeKind>>())) { goto _case_end_4544860592; }
		_case_begin_4544860592:;
		{
			_134017_kind=_133929_decl_kind.operator jule::Ref<_1b6703d45_TypeKind>();
		}
		goto _match_end_4544857872;
		_case_end_4544860592:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_IdentTypeDecl>>())) { goto _case_end_4544861056; }
		_case_begin_4544861056:;
		{
			jule::Trait<_1b6703d45_Kind> _134721_t = (*this)._method_build_ident(_133929_decl_kind.operator jule::Ref<_1ce385d22_IdentTypeDecl>());
			if (_134721_t != nullptr) {
				_134017_kind=_134721_t;
			}
		}
		goto _match_end_4544857872;
		_case_end_4544861056:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_RefTypeDecl>>())) { goto _case_end_4544858320; }
		_case_begin_4544858320:;
		{
			jule::Ref<_1b6703d45_Ref> _135321_t = (*this)._method_build_ref(_133929_decl_kind.operator jule::Ref<_1ce385d22_RefTypeDecl>());
			if (jule::real(_135321_t)) {
				_134017_kind=_135321_t;
			}
		}
		goto _match_end_4544857872;
		_case_end_4544858320:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_PtrTypeDecl>>())) { goto _case_end_4544858416; }
		_case_begin_4544858416:;
		{
			jule::Ref<_1b6703d45_Ptr> _135921_t = (*this)._method_build_ptr(_133929_decl_kind.operator jule::Ref<_1ce385d22_PtrTypeDecl>());
			if (jule::real(_135921_t)) {
				_134017_kind=_135921_t;
			}
		}
		goto _match_end_4544857872;
		_case_end_4544858416:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_SlcTypeDecl>>())) { goto _case_end_4544858512; }
		_case_begin_4544858512:;
		{
			jule::Ref<_1b6703d45_Slc> _136521_t = (*this)._method_build_slc(_133929_decl_kind.operator jule::Ref<_1ce385d22_SlcTypeDecl>());
			if (jule::real(_136521_t)) {
				_134017_kind=_136521_t;
			}
		}
		goto _match_end_4544857872;
		_case_end_4544858512:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_ArrTypeDecl>>())) { goto _case_end_4544858608; }
		_case_begin_4544858608:;
		{
			jule::Ref<_1b6703d45_Arr> _137121_t = (*this)._method_build_arr(_133929_decl_kind.operator jule::Ref<_1ce385d22_ArrTypeDecl>());
			if (jule::real(_137121_t)) {
				_134017_kind=_137121_t;
			}
		}
		goto _match_end_4544857872;
		_case_end_4544858608:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_MapTypeDecl>>())) { goto _case_end_4544860016; }
		_case_begin_4544860016:;
		{
			jule::Ref<_1b6703d45_Map> _137721_t = (*this)._method_build_map(_133929_decl_kind.operator jule::Ref<_1ce385d22_MapTypeDecl>());
			if (jule::real(_137721_t)) {
				_134017_kind=_137721_t;
			}
		}
		goto _match_end_4544857872;
		_case_end_4544860016:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TupleTypeDecl>>())) { goto _case_end_4544860112; }
		_case_begin_4544860112:;
		{
			jule::Ref<_1b6703d45_Tuple> _138321_t = (*this)._method_build_tuple(_133929_decl_kind.operator jule::Ref<_1ce385d22_TupleTypeDecl>());
			if (jule::real(_138321_t)) {
				_134017_kind=_138321_t;
			}
		}
		goto _match_end_4544857872;
		_case_end_4544860112:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_FnDecl>>())) { goto _case_end_4544860208; }
		_case_begin_4544860208:;
		{
			jule::Ref<_1b6069348_FnIns> _138921_t = (*this)._method_build_fn(_133929_decl_kind.operator jule::Ref<_1ce385d22_FnDecl>());
			if (jule::real(_138921_t)) {
				_134017_kind=_138921_t;
			}
		}
		goto _match_end_4544857872;
		_case_end_4544860208:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_NamespaceTypeDecl>>())) { goto _case_end_4544860304; }
		_case_begin_4544860304:;
		{
			jule::Trait<_1b6703d45_Kind> _139521_t = (*this)._method_build_by_namespace(_133929_decl_kind.operator jule::Ref<_1ce385d22_NamespaceTypeDecl>());
			if (_139521_t != nullptr) {
				_134017_kind=_139521_t;
			}
		}
		goto _match_end_4544857872;
		_case_end_4544860304:;
		_case_begin_4544857296:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b6703d45_TypeKind>();
		}
		goto _match_end_4544857872;
		_case_end_4544857296:;
		_match_end_4544857872:;
	}
	if (_134017_kind == nullptr) {
		return jule::new_ref<_1b6703d45_TypeKind>();
	}
	{
		auto _match_expr{ _134017_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_TypeKind>>())) { goto _case_end_4544887632; }
		_case_begin_4544887632:;
		{
			return _134017_kind.operator jule::Ref<_1b6703d45_TypeKind>();
		}
		goto _match_end_4544886496;
		_case_end_4544887632:;
		_case_begin_4544886832:;
		{
			return jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_134017_kind));
		}
		goto _match_end_4544886496;
		_case_end_4544886832:;
		_match_end_4544886496:;
	}
}



inline jule::Ref<_1b6703d45_TypeKind> _1b6703d45_TypeChecker::_method_check_decl(jule::Ref<_1ce385d22_TypeDecl>& _142034_decl) {
	_1ce35e3a0_Token _142217_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_142034_decl->_field_token;
	jule::Ref<_1b6703d45_TypeKind> _142517_kind = (*this)._method_build(_142034_decl->_field_kind);
	(*this)._field_error_token=_142217_error_token;
	return _142517_kind;
}



inline void _1b6703d45_TypeChecker::_method_check(jule::Ref<_1b6703d45_TypeSymbol>& _143129_t) {
	if ((!(jule::real(_143129_t->_field_decl)))) {
		return;
	}
	jule::Ref<_1b6703d45_TypeKind> _143617_kind = (*this)._method_check_decl(_143129_t->_field_decl);
	if ((!(jule::real(_143617_kind)))) {
		_143129_t->_method_remove_kind();
		return;
	}
	_143129_t->_field_kind=_143617_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6703d45_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ref<_1cdd79d22_IR>,jule::Slice<_1e7690a81_Log>> _1cdd79d22_IR::_static_method_build(jule::Str _2525_path,jule::Int _2536_flags) {
	jule::Ref<_1ce135770_PlainImporter> _2617_importer = jule::new_struct<_1ce135770_PlainImporter>(new( std::nothrow ) _1ce135770_PlainImporter());
	jule::Slice<jule::Ref<_1ce2b7acd_Ast>> _2718_files;
	jule::Slice<_1e7690a81_Log> _2729_logs;
	std::tie(_2718_files,_2729_logs) = _2617_importer->_method_import_package(_2525_path);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1cdd79d22_IR>(),_2729_logs);
	}
	if (_2718_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_1cdd79d22_IR>(),nullptr);
	}
	jule::Ref<_1b623bb7a_Package> _3618_pkg;
	std::tie(_3618_pkg,_2729_logs) = _1b6b73ea7_analyze_package(_2718_files,_2617_importer,_2536_flags);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1cdd79d22_IR>(),_2729_logs);
	}
	jule::Ref<_1cdd79d22_IR> _4117_ir = jule::new_struct<_1cdd79d22_IR>(new( std::nothrow ) _1cdd79d22_IR(jule::Slice<jule::Str>(),_3618_pkg,_2617_importer->_field_all_packages,_1cde30c0d_OrderedDefines()));
	_4117_ir->_field_passes=_1cdd79d22_get_all_unique_passes(_4117_ir->_field_main,_4117_ir->_field_used);
	return std::make_tuple(_4117_ir,nullptr);
}



inline void _1cdd79d22_IR::_method_append_structs(jule::Ref<_1b623bb7a_Package>& _5234_p,jule::Slice<jule::Ref<_1ce385eed_Struct>>& _5258_buffer) {
	for (auto _1cdd79d22_f: _5234_p->_field_files) {
		{
			for (auto _1cdd79d22_s: _1cdd79d22_f->_field_structs) {
				{
					if ((!(_1cdd79d22_s->_field_cpp_linked))) {
						_5258_buffer=jule::append(_5258_buffer,jule::Slice<jule::Ref<_1ce385eed_Struct>>({_1cdd79d22_s}));
					}
				}
			_iter_next_4545126000:;
			}
			_iter_end_4545126000:;
		}
	_iter_next_4545124128:;
	}
	_iter_end_4545124128:;
}



inline jule::Slice<jule::Ref<_1ce385eed_Struct>> _1cdd79d22_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ref<_1ce385eed_Struct>> _6517_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_6517_buffer);
	for (auto _1cdd79d22_u: (*this)._field_used) {
		{
			if ((!(_1cdd79d22_u->_field_cpp_linked))) {
				(*this)._method_append_structs(_1cdd79d22_u->_field_package,_6517_buffer);
			}
		}
	_iter_next_4545129312:;
	}
	_iter_end_4545129312:;
	return _6517_buffer;
}



inline void _1cdd79d22_IR::_method_append_vars(jule::Ref<_1b623bb7a_Package>& _7831_p,jule::Slice<jule::Ref<_1b637edab_Var>>& _7855_buffer) {
	for (auto _1cdd79d22_f: _7831_p->_field_files) {
		{
			for (auto _1cdd79d22_v: _1cdd79d22_f->_field_vars) {
				{
					if ((!(_1cdd79d22_v->_field_cpp_linked)) && (!(_1cdd79d22_v->_field_constant))) {
						_7855_buffer=jule::append(_7855_buffer,jule::Slice<jule::Ref<_1b637edab_Var>>({_1cdd79d22_v}));
					}
				}
			_iter_next_4545138368:;
			}
			_iter_end_4545138368:;
		}
	_iter_next_4545136496:;
	}
	_iter_end_4545136496:;
}



inline jule::Slice<jule::Ref<_1b637edab_Var>> _1cdd79d22_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ref<_1b637edab_Var>> _9117_buffer = nullptr;
	(*this)._method_append_vars((*this)._field_main,_9117_buffer);
	for (auto _1cdd79d22_u: (*this)._field_used) {
		{
			if ((!(_1cdd79d22_u->_field_cpp_linked))) {
				(*this)._method_append_vars(_1cdd79d22_u->_field_package,_9117_buffer);
			}
		}
	_iter_next_4545143392:;
	}
	_iter_end_4545143392:;
	return _9117_buffer;
}



inline void _1cdd79d22_IR::_method_order(void) {
	(*this)._field_ordered._field_structs=(*this)._method_get_all_structures();
	(*this)._field_ordered._field_globals=(*this)._method_get_all_variables();
	_1cde30c0d_DefineOrderer::_static_method_order_variables((*this)._field_ordered._field_globals);
	_1cde30c0d_DefineOrderer::_static_method_order_structures((*this)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1cdd79d22_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61e873b_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_EnumItemDecl::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_expr)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_EnumDecl::_method_default_typed(void) {
	return (!(jule::real((*this)._field_kind)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1ce385d22_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_Expr::_method_is_fn_call(void) {
	if ((*this)._field_kind == nullptr) {
		return false;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_FnCallExpr>>())) { goto _case_end_4533772944; }
		_case_begin_4533772944:;
		{
			return true;
		}
		goto _match_end_4533770624;
		_case_end_4533772944:;
		_case_begin_4533771632:;
		{
			return false;
		}
		goto _match_end_4533770624;
		_case_end_4533771632:;
		_match_end_4533770624:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce6015a9_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ce385eed_FieldIns> _1ce385eed_Field::_method_instance(void) {
	return jule::new_struct<_1ce385eed_FieldIns>(new( std::nothrow ) _1ce385eed_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385eed_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ce385eed_StructIns> _1ce385eed_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	jule::Ref<_1ce385eed_StructIns> _6717_ins = jule::new_struct<_1ce385eed_StructIns>(new( std::nothrow ) _1ce385eed_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1ce385eed_FieldIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_fields.len()))),jule::Slice<jule::Ref<_1b6069348_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_methods.len()))),jule::Bool(),_1ce50a46e_ReferenceStack::_static_method_new()));
	{
		jule::Int _1ce385eed_i = 0;
		for (auto _1ce385eed_f: this->self->_field_fields) {
			{
				_6717_ins->_field_fields[static_cast<jule::Int>(_1ce385eed_i)]=_1ce385eed_f->_method_instance();
				if (jule::real(_1ce385eed_f->_field_kind->_field_kind) && _1ce385eed_f->_field_kind->_field_kind->_method_mutable()) {
					_6717_ins->_field_mutable=true;
				}
			}
		_iter_next_4538989888:;
		_1ce385eed_i++;
		}
		_iter_end_4538989888:;
	}
	{
		jule::Int _1ce385eed_i = 0;
		for (auto _1ce385eed_f: this->self->_field_methods) {
			{
				jule::Ref<_1b6069348_Fn> _8221_fins = jule::new_struct_ref<_1b6069348_Fn>(new( std::nothrow ) _1b6069348_Fn(_1ce385eed_f->_field_sema,_1ce385eed_f->_field_token,_1ce385eed_f->_field_global,_1ce385eed_f->_field_unsafety,_1ce385eed_f->_field_public,_1ce385eed_f->_field_cpp_linked,_1ce385eed_f->_field_statically,_1ce385eed_f->_field_ident,_1ce385eed_f->_field_directives,_1ce385eed_f->_field_doc,_1ce385eed_f->_field_scope,_1ce385eed_f->_field_generics,_1ce385eed_f->_field_result,_1ce385eed_f->_field_params,_1ce385eed_f->_field_owner,nullptr));
				_6717_ins->_field_methods[static_cast<jule::Int>(_1ce385eed_i)]=_8221_fins;
			}
		_iter_next_4538991424:;
		_1ce385eed_i++;
		}
		_iter_end_4538991424:;
	}
	return _6717_ins;
}



inline jule::Ref<_1ce385eed_StructIns> _1ce385eed_Struct::_method_append_instance(jule::Ref<_1ce385eed_StructIns>& _10839_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[0LL];
	}
	for (auto _1ce385eed_ains: (*this)._field_instances) {
		{
			if (_1ce385eed_ains->_method_same(_10839_ins)) {
				return _1ce385eed_ains;
			}
		}
	_iter_next_4539008240:;
	}
	_iter_end_4539008240:;
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1ce385eed_StructIns>>({_10839_ins}));
	return jule::new_ref<_1ce385eed_StructIns>();
}



inline jule::Ref<_1b6069348_Fn> _1ce385eed_Struct::_method_find_method(jule::Str _12634_ident,jule::Bool _12646_statically) {
	for (auto _1ce385eed_f: (*this)._field_methods) {
		{
			if ((_1ce385eed_f->_field_statically == _12646_statically) && (_1ce385eed_f->_field_ident == _12634_ident)) {
				return _1ce385eed_f;
			}
		}
	_iter_next_4539015504:;
	}
	_iter_end_4539015504:;
	return jule::new_ref<_1b6069348_Fn>();
}



inline jule::Ref<_1b637edab_Var> _1ce385eed_Struct::_method_find_static(jule::Str _13734_ident) {
	for (auto _1ce385eed_v: (*this)._field_statics) {
		{
			if (_1ce385eed_v->_field_ident == _13734_ident) {
				return _1ce385eed_v;
			}
		}
	_iter_next_4539020304:;
	}
	_iter_end_4539020304:;
	return jule::new_ref<_1b637edab_Var>();
}



inline jule::Ref<_1ce385eed_Field> _1ce385eed_Struct::_method_find_field(jule::Str _14833_ident) {
	for (auto _1ce385eed_f: (*this)._field_fields) {
		{
			if (_1ce385eed_f->_field_ident == _14833_ident) {
				return _1ce385eed_f;
			}
		}
	_iter_next_4539024672:;
	}
	_iter_end_4539024672:;
	return jule::new_ref<_1ce385eed_Field>();
}



inline jule::Bool _1ce385eed_Struct::_method_is_implements(jule::Ref<_1b61d7d79_Trait> _15832_t) {
	for (auto _1ce385eed_it: (*this)._field_implements) {
		{
			if ((_15832_t).alloc == (_1ce385eed_it).alloc) {
				return true;
			}
		}
	_iter_next_4539027968:;
	}
	_iter_end_4539027968:;
	return false;
}



inline jule::Bool _1ce385eed_Struct::_method_is_derives(jule::Str _16829_ident) {
	for (auto _1ce385eed_d: (*this)._field_directives) {
		{
			if (_1ce385eed_d->_field_tag == jule::Str("derive", 6)) {
				if ((_1ce385eed_d->_field_args.len() == 1LL) && (_1ce385eed_d->_field_args[0LL] == _16829_ident)) {
					return true;
				}
			}
		}
	_iter_next_4539031232:;
	}
	_iter_end_4539031232:;
	return false;
}



inline jule::Bool _1ce385eed_Struct::_method_is_uses(jule::Ref<_1ce385eed_Struct> _18026_s) {
	for (auto _1ce385eed_u: (*this)._field_uses) {
		{
			while ((_18026_s).alloc == (_1ce385eed_u).alloc) {
				{
					return true;
				}
			_iter_next_4539038640:;
			}
			_iter_end_4539038640:;
		}
	_iter_next_4539037504:;
	}
	_iter_end_4539037504:;
	return false;
}



inline jule::Bool _1ce385eed_Struct::_method_has_ref_accessible(void) {
	for (auto _1ce385eed_m: (*this)._field_methods) {
		{
			if ((_1ce385eed_m->_field_params.len() > 0LL) && _1ce385eed_m->_field_params[0LL]->_method_is_ref()) {
				return true;
			}
		}
	_iter_next_4539038448:;
	}
	_iter_end_4539038448:;
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385eed_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "concurrent:" << _Src._field_concurrent;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b6069348_ParamIns> _1b6069348_Param::_method_instance(void) {
	return jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(this->self,jule::Ref<_1b6703d45_TypeKind>()));
}



inline jule::Bool _1b6069348_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _1b6069348_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6069348_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b6069348_Fn::_method_is_void(void) {
	return (!(jule::real((*this)._field_result)));
}



inline jule::Bool _1b6069348_Fn::_method_is_method(void) {
	return jule::real((*this)._field_owner);
}



inline jule::Bool _1b6069348_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



inline jule::Bool _1b6069348_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



inline jule::Bool _1b6069348_Fn::_method_is_anon(void) {
	return _1ce35e3a0_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _1b6069348_Fn::_method_any_var(void) {
	return jule::real((*this)._field_result) && ((*this)._field_result->_field_idents.len() > 0LL);
}



inline jule::Bool _1b6069348_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	for (auto _1b6069348_p: (*this)._field_params) {
		{
			if (_1b6069348_parameter_uses_generics(_1b6069348_p,(*this)._field_generics)) {
				return true;
			}
		}
	_iter_next_4539100608:;
	}
	_iter_end_4539100608:;
	return false;
}



inline jule::Bool _1b6069348_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if ((!(jule::real((*this)._field_result->_field_kind))) || (!(jule::real((*this)._field_result->_field_kind->_field_kind)))) {
		return false;
	}
	return _1b6069348_kind_uses_generics((*this)._field_result->_field_kind->_field_kind,(*this)._field_generics);
}



inline jule::Ref<_1b6069348_FnIns> _1b6069348_Fn::_method_instance_force(void) {
	jule::Ref<_1b6069348_FnIns> _11017_ins = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),this->self,jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>(),jule::Ref<_1b6703d45_TypeKind>(),jule::new_struct<_1b61e873b_Scope>(new( std::nothrow ) _1b61e873b_Scope()),_1ce50a46e_ReferenceStack::_static_method_new(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(),jule::Bool(),jule::Bool()));
	if (this->self->_method_is_init()) {
		_11017_ins->_field_refers=_1ce50a46e_ReferenceStack::_static_method_new();
	}
	_11017_ins->_field_params=jule::Slice<jule::Ref<_1b6069348_ParamIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_params.len())));
	{
		jule::Int _1b6069348_i = 0;
		for (auto _1b6069348_p: this->self->_field_params) {
			{
				_11017_ins->_field_params[static_cast<jule::Int>(_1b6069348_i)]=_1b6069348_p->_method_instance();
			}
		_iter_next_4539114112:;
		_1b6069348_i++;
		}
		_iter_end_4539114112:;
	}
	if (jule::real(_11017_ins->_field_decl->_field_result)) {
		_11017_ins->_field_result=_11017_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _11017_ins;
}



inline jule::Ref<_1b6069348_FnIns> _1b6069348_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	return this->self->_method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _1b6069348_Fn::_method_append_instance(jule::Ref<_1b6069348_FnIns>& _14139_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1b6069348_FnIns>>({_14139_ins}));
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1b6069348_FnIns>>({_14139_ins}));
		return std::make_tuple(true,-1LL);
	}
	{
		jule::Int _1b6069348_j = 0;
		for (auto _1b6069348_ains: (*this)._field_instances) {
			{
				if (_1b6069348_ains->_method_same(_14139_ins)) {
					return std::make_tuple(false,_1b6069348_j);
				}
			}
		_iter_next_4539127584:;
		_1b6069348_j++;
		}
		_iter_end_4539127584:;
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1b6069348_FnIns>>({_14139_ins}));
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b6069348_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ce385d22_Node::_method_is_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_EnumDecl>>() || _match_expr.type_is<jule::Ref<_1ce385d22_FnDecl>>() || _match_expr.type_is<jule::Ref<_1ce385d22_StructDecl>>() || _match_expr.type_is<jule::Ref<_1ce385d22_TraitDecl>>() || _match_expr.type_is<jule::Ref<_1ce385d22_TypeAliasDecl>>() || _match_expr.type_is<jule::Ref<_1ce385d22_FieldDecl>>() || _match_expr.type_is<jule::Ref<_1ce385d22_UseDecl>>() || _match_expr.type_is<jule::Ref<_1ce385d22_VarDecl>>() || _match_expr.type_is<jule::Ref<_1ce385d22_TypeDecl>>())) { goto _case_end_4533734688; }
		_case_begin_4533734688:;
		{
			return true;
		}
		goto _match_end_4533734240;
		_case_end_4533734688:;
		_case_begin_4533733728:;
		{
			return false;
		}
		goto _match_end_4533734240;
		_case_end_4533733728:;
		_match_end_4533734240:;
	}
}



inline jule::Bool _1ce385d22_Node::_method_is_comment(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_Comment>>() || _match_expr.type_is<jule::Ref<_1ce385d22_CommentGroup>>())) { goto _case_end_4533749056; }
		_case_begin_4533749056:;
		{
			return true;
		}
		goto _match_end_4533748608;
		_case_end_4533749056:;
		_case_begin_4533747104:;
		{
			return false;
		}
		goto _match_end_4533748608;
		_case_end_4533747104:;
		_match_end_4533748608:;
	}
}



inline jule::Bool _1ce385d22_Node::_method_is_impl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_Impl>>())) { goto _case_end_4533752368; }
		_case_begin_4533752368:;
		{
			return true;
		}
		goto _match_end_4533751920;
		_case_end_4533752368:;
		_case_begin_4533750992:;
		{
			return false;
		}
		goto _match_end_4533751920;
		_case_end_4533750992:;
		_match_end_4533751920:;
	}
}



inline jule::Bool _1ce385d22_Node::_method_is_use_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_UseDecl>>())) { goto _case_end_4533755408; }
		_case_begin_4533755408:;
		{
			return true;
		}
		goto _match_end_4533754960;
		_case_end_4533755408:;
		_case_begin_4533752912:;
		{
			return false;
		}
		goto _match_end_4533754960;
		_case_end_4533752912:;
		_match_end_4533754960:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce385d22_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ce50a46e_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b61d7d79_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1b61d7d79_Trait::_method_equals(jule::Ref<_1b6703d45_TypeKind> _2521_other) {
	jule::Ref<_1b61d7d79_Trait> _2613_trt = (_2521_other).alloc->_method_trt();
	if ((!(jule::real(_2613_trt)))) {
		return false;
	}
	return (&((*this))) == (_2613_trt).alloc;
}



inline jule::Bool _1b61d7d79_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



inline jule::Ref<_1b6069348_Fn> _1b61d7d79_Trait::_method_find_method(jule::Str _4034_ident) {
	for (auto _1b61d7d79_f: (*this)._field_methods) {
		{
			if (_1b61d7d79_f->_field_ident == _4034_ident) {
				return _1b61d7d79_f;
			}
		}
	_iter_next_4539507088:;
	}
	_iter_end_4539507088:;
	return jule::new_ref<_1b6069348_Fn>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61d7d79_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61d7c58_EnumItem::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_value)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61d7c58_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b61d7c58_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1b61d7c58_Enum::_method_equals(jule::Ref<_1b6703d45_TypeKind> _3521_other) {
	jule::Ref<_1b61d7c58_Enum> _3613_enm = (_3521_other).alloc->_method_enm();
	if ((!(jule::real(_3613_enm)))) {
		return false;
	}
	return (&((*this))) == (_3613_enm).alloc;
}



inline jule::Ref<_1b61d7c58_EnumItem> _1b61d7c58_Enum::_method_find_item(jule::Str _4732_ident) {
	for (auto _1b61d7c58_item: (*this)._field_items) {
		{
			if (_1b61d7c58_item->_field_ident == _4732_ident) {
				return _1b61d7c58_item;
			}
		}
	_iter_next_4539519360:;
	}
	_iter_end_4539519360:;
	return jule::new_ref<_1b61d7c58_EnumItem>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61d7c58_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1b623bb7a_ImportInfo::_method_find_package(jule::Str ) {
	return jule::new_ref<_1b623bb7a_ImportInfo>();
}



inline jule::Ref<_1b623bb7a_ImportInfo> _1b623bb7a_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b623bb7a_ImportInfo>)> ) {
	return jule::new_ref<_1b623bb7a_ImportInfo>();
}



inline jule::Ref<_1b637edab_Var> _1b623bb7a_ImportInfo::_method_find_var(jule::Str _14731_ident,jule::Bool _14743_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14731_ident)))) {
		return jule::new_ref<_1b637edab_Var>();
	}
	return _1b623bb7a_find_var_in_package((*this)._field_package->_field_files,_14731_ident,false);
}



inline jule::Ref<_1b6703d45_TypeAlias> _1b623bb7a_ImportInfo::_method_find_type_alias(jule::Str _16038_ident,jule::Bool _16050_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_16038_ident)))) {
		return jule::new_ref<_1b6703d45_TypeAlias>();
	}
	return _1b623bb7a_find_type_alias_in_package((*this)._field_package->_field_files,_16038_ident,false);
}



inline jule::Ref<_1ce385eed_Struct> _1b623bb7a_ImportInfo::_method_find_struct(jule::Str _17334_ident,jule::Bool _17346_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17334_ident)))) {
		return jule::new_ref<_1ce385eed_Struct>();
	}
	return _1b623bb7a_find_struct_in_package((*this)._field_package->_field_files,_17334_ident,false);
}



inline jule::Ref<_1b6069348_Fn> _1b623bb7a_ImportInfo::_method_find_fn(jule::Str _18630_ident,jule::Bool _18642_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18630_ident)))) {
		return jule::new_ref<_1b6069348_Fn>();
	}
	return _1b623bb7a_find_fn_in_package((*this)._field_package->_field_files,_18630_ident,false);
}



inline jule::Ref<_1b61d7d79_Trait> _1b623bb7a_ImportInfo::_method_find_trait(jule::Str _19833_ident) {
	if ((!((*this)._method_is_lookupable(_19833_ident)))) {
		return jule::new_ref<_1b61d7d79_Trait>();
	}
	return _1b623bb7a_find_trait_in_package((*this)._field_package->_field_files,_19833_ident);
}



inline jule::Ref<_1b61d7c58_Enum> _1b623bb7a_ImportInfo::_method_find_enum(jule::Str _21032_ident) {
	if ((!((*this)._method_is_lookupable(_21032_ident)))) {
		return jule::new_ref<_1b61d7c58_Enum>();
	}
	return _1b623bb7a_find_enum_in_package((*this)._field_package->_field_files,_21032_ident);
}



inline jule::Bool _1b623bb7a_ImportInfo::_method_is_lookupable(jule::Str _22028_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_22028_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _1b623bb7a_ImportInfo::_method_exist_ident(jule::Str _24026_ident) {
	for (auto _1b623bb7a_sident: (*this)._field_selected) {
		{
			if (_1b623bb7a_sident._field_kind == _24026_ident) {
				return true;
			}
		}
	_iter_next_4540476112:;
	}
	_iter_end_4540476112:;
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b623bb7a_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ddc92_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1b61ddc92_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ddc92_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b637edab_Var::_method_is_initialized(void) {
	return jule::real((*this)._field_value);
}



inline jule::Bool _1b637edab_Var::_method_is_type_inferred(void) {
	return (!(jule::real((*this)._field_kind))) || (!(jule::real((*this)._field_kind->_field_decl)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b637edab_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline void _1b65a085c_TypeCompatibilityChecker::_method_push_err(jule::Str _14327_fmt,jule::Slice<jule::Any> _14340_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_14327_fmt,_14340_args);
}



inline jule::Bool _1b65a085c_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _14732_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_14732_ok = true;
		return _14732_ok;
	}
	jule::Ref<_1b61d7d79_Trait> _15213_trt = (*this)._field_dest->_method_trt();
	jule::Bool _15317_ref = false;
	{
		if (!((jule::real((*this)._field_src->_method_ref())))) { goto _case_end_4541550672; }
		_case_begin_4541550672:;
		{
			_15317_ref=true;
			(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
			if (jule::real((*this)._field_src->_method_strct())) {
				_14732_ok = false;
				return _14732_ok;
			}
			goto _case_begin_4541550208;
		}
		goto _match_end_4541549120;
		_case_end_4541550672:;
		if (!((jule::real((*this)._field_src->_method_strct())))) { goto _case_end_4541550208; }
		_case_begin_4541550208:;
		{
			jule::Ref<_1ce385eed_StructIns> _16417_s = (*this)._field_src->_method_strct();
			if ((!(_16417_s->_field_decl->_method_is_implements(_15213_trt)))) {
				_14732_ok = false;
				return _14732_ok;
			}
			if (_1b65a085c_trait_has_reference_receiver(_15213_trt) && (!(_15317_ref))) {
				(*this)._method_push_err(jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>({}));
				_14732_ok = false;
				return _14732_ok;
			}
			_14732_ok = true;
			return _14732_ok;
		}
		goto _match_end_4541549120;
		_case_end_4541550208:;
		if (!((jule::real((*this)._field_src->_method_trt())))) { goto _case_end_4541550304; }
		_case_begin_4541550304:;
		{
			_14732_ok = _15213_trt == (*this)._field_src->_method_trt();
			return _14732_ok;
		}
		goto _match_end_4541549120;
		_case_end_4541550304:;
		_case_begin_4541549232:;
		{
			_14732_ok = false;
			return _14732_ok;
		}
		goto _match_end_4541549120;
		_case_end_4541549232:;
		_match_end_4541549120:;
	}
}



inline jule::Bool _1b65a085c_TypeCompatibilityChecker::_method_check_ref(void) {
	jule::Bool _18430_ok = jule::Bool();
	if ((*this)._field_dest->_method_to_str() == (*this)._field_src->_method_to_str()) {
		_18430_ok = true;
		return _18430_ok;
	} else if ((!((*this)._field_deref))) {
		_18430_ok = false;
		return _18430_ok;
	} else if ((!(jule::real((*this)._field_src->_method_ref())))) {
		(*this)._field_dest=(*this)._field_dest->_method_ref()->_field_elem;
		_18430_ok = (*this)._method_check();
		return _18430_ok;
	}
	(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	_18430_ok = (*this)._method_check();
	return _18430_ok;
}



inline jule::Bool _1b65a085c_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _19830_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_19830_ok = true;
		return _19830_ok;
	}
	jule::Ref<_1b6703d45_Ptr> _20317_src = (*this)._field_src->_method_ptr();
	if ((!(jule::real(_20317_src)))) {
		_19830_ok = false;
		return _19830_ok;
	}
	jule::Ref<_1b6703d45_Ptr> _20817_dest = (*this)._field_dest->_method_ptr();
	if (_20817_dest->_method_is_unsafe()) {
		_19830_ok = true;
		return _19830_ok;
	}
	_1b65a085c_TypeCompatibilityChecker _21417_sub = _1b65a085c_TypeCompatibilityChecker((*this)._field_s,_20817_dest->_field_elem,_20317_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_19830_ok = _21417_sub._method_check();
	return _19830_ok;
}



inline jule::Bool _1b65a085c_TypeCompatibilityChecker::_method_check_slc(void) {
	jule::Bool _22530_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_22530_ok = true;
		return _22530_ok;
	}
	jule::Ref<_1b6703d45_Slc> _23017_src = (*this)._field_src->_method_slc();
	if ((!(jule::real(_23017_src)))) {
		_22530_ok = false;
		return _22530_ok;
	}
	jule::Ref<_1b6703d45_Slc> _23417_dest = (*this)._field_dest->_method_slc();
	_1b65a085c_TypeCompatibilityChecker _23617_sub = _1b65a085c_TypeCompatibilityChecker((*this)._field_s,_23417_dest->_field_elem,_23017_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_22530_ok = _23617_sub._method_check();
	return _22530_ok;
}



inline jule::Bool _1b65a085c_TypeCompatibilityChecker::_method_check_arr(void) {
	jule::Bool _24730_ok = jule::Bool();
	jule::Ref<_1b6703d45_Arr> _24817_src = (*this)._field_src->_method_arr();
	if ((!(jule::real(_24817_src)))) {
		_24730_ok = false;
		return _24730_ok;
	}
	jule::Ref<_1b6703d45_Arr> _25217_dest = (*this)._field_dest->_method_arr();
	if (_25217_dest->_field_n != _24817_src->_field_n) {
		_24730_ok = false;
		return _24730_ok;
	}
	_1b65a085c_TypeCompatibilityChecker _25717_sub = _1b65a085c_TypeCompatibilityChecker((*this)._field_s,_25217_dest->_field_elem,_24817_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_24730_ok = _25717_sub._method_check();
	return _24730_ok;
}



inline jule::Bool _1b65a085c_TypeCompatibilityChecker::_method_check_map(void) {
	jule::Bool _26830_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_26830_ok = true;
		return _26830_ok;
	}
	jule::Ref<_1b6703d45_Map> _27317_src = (*this)._field_src->_method_map();
	if ((!(jule::real(_27317_src)))) {
		_26830_ok = false;
		return _26830_ok;
	}
	jule::Ref<_1b6703d45_Map> _27817_dest = (*this)._field_dest->_method_map();
	_1b65a085c_TypeCompatibilityChecker _28017_sub = _1b65a085c_TypeCompatibilityChecker((*this)._field_s,_27817_dest->_field_key,_27317_src->_field_key,(*this)._field_error_token,jule::Bool(),jule::Bool(),true);
	if ((!(_28017_sub._method_check()))) {
		_26830_ok = false;
		return _26830_ok;
	}
	_28017_sub._field_src=_27317_src->_field_val;
	_28017_sub._field_dest=_27817_dest->_field_val;
	_26830_ok = _28017_sub._method_check();
	return _26830_ok;
}



inline jule::Bool _1b65a085c_TypeCompatibilityChecker::_method_check_struct(void) {
	jule::Bool _29633_ok = jule::Bool();
	jule::Ref<_1ce385eed_StructIns> _29717_src = (*this)._field_src->_method_strct();
	if ((!(jule::real(_29717_src)))) {
		_29633_ok = false;
		return _29633_ok;
	}
	jule::Ref<_1ce385eed_StructIns> _30117_dest = (*this)._field_dest->_method_strct();
	{
		if (!(((_30117_dest->_field_decl).alloc != (_29717_src->_field_decl).alloc))) { goto _case_end_4541611584; }
		_case_begin_4541611584:;
		{
			_29633_ok = false;
			return _29633_ok;
		}
		goto _match_end_4541611424;
		_case_end_4541611584:;
		if (!((_30117_dest->_field_generics.len() == 0LL))) { goto _case_end_4541611696; }
		_case_begin_4541611696:;
		{
			_29633_ok = true;
			return _29633_ok;
		}
		goto _match_end_4541611424;
		_case_end_4541611696:;
		_match_end_4541611424:;
	}
	{
		jule::Int _1b65a085c_i = 0;
		for (auto _1b65a085c_dg: _30117_dest->_field_generics) {
			{
				jule::Ref<_1b6703d45_TypeKind> _31121_sg = _29717_src->_field_generics[static_cast<jule::Int>(_1b65a085c_i)];
				_1b65a085c_TypeCompatibilityChecker _31221_sub = _1b65a085c_TypeCompatibilityChecker((*this)._field_s,_1b65a085c_dg,_31121_sg,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
				if ((!(_31221_sub._method_check()))) {
					_29633_ok = false;
					return _29633_ok;
				}
			}
		_iter_next_4541613968:;
		_1b65a085c_i++;
		}
		_iter_end_4541613968:;
	}
	_29633_ok = true;
	return _29633_ok;
}



inline jule::Bool _1b65a085c_TypeCompatibilityChecker::_method_check_fn(void) {
	jule::Bool _32529_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_32529_ok = true;
		return _32529_ok;
	}
	jule::Ref<_1b6069348_FnIns> _33017_src = (*this)._field_src->_method_fnc();
	if ((!(jule::real(_33017_src)))) {
		_32529_ok = false;
		return _32529_ok;
	}
	jule::Ref<_1b6069348_FnIns> _33517_dest = (*this)._field_dest->_method_fnc();
	if (jule::real(_33017_src->_field_result) != jule::real(_33517_dest->_field_result)) {
		_32529_ok = false;
		return _32529_ok;
	}
	if (_33017_src->_field_params.len() != _33517_dest->_field_params.len()) {
		_32529_ok = false;
		return _32529_ok;
	}
	{
		jule::Int _1b65a085c_i = 0;
		for (auto &_: _33017_src->_field_params) {
			{
				jule::Ref<_1b6069348_ParamIns> _34421_srcp = _33017_src->_field_params[static_cast<jule::Int>(_1b65a085c_i)];
				jule::Ref<_1b6069348_ParamIns> _34521_destp = _33517_dest->_field_params[static_cast<jule::Int>(_1b65a085c_i)];
				if (jule::real(_34421_srcp) != jule::real(_34521_destp)) {
					_32529_ok = false;
					return _32529_ok;
				}
				if (_34421_srcp->_field_decl->_field_reference != _34521_destp->_field_decl->_field_reference) {
					_32529_ok = false;
					return _32529_ok;
				}
				_1b65a085c_TypeCompatibilityChecker _35421_sub = _1b65a085c_TypeCompatibilityChecker((*this)._field_s,_34521_destp->_field_kind,_34421_srcp->_field_kind,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
				if ((!(_35421_sub._method_check()))) {
					_32529_ok = false;
					return _32529_ok;
				}
			}
		_iter_next_4541629280:;
		_1b65a085c_i++;
		}
		_iter_end_4541629280:;
	}
	if (jule::real(_33017_src->_field_result)) {
		_1b65a085c_TypeCompatibilityChecker _36621_sub = _1b65a085c_TypeCompatibilityChecker((*this)._field_s,_33517_dest->_field_result,_33017_src->_field_result,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
		if ((!(_36621_sub._method_check()))) {
			_32529_ok = false;
			return _32529_ok;
		}
	}
	_32529_ok = true;
	return _32529_ok;
}



inline jule::Bool _1b65a085c_TypeCompatibilityChecker::_method_check_enum(void) {
	jule::Bool _38031_ok = jule::Bool();
	jule::Ref<_1b61d7c58_Enum> _38113_r = (*this)._field_src->_method_enm();
	if ((!(jule::real(_38113_r)))) {
		_38031_ok = false;
		return _38031_ok;
	}
	_38031_ok = ((*this)._field_dest->_method_enm()).alloc == (_38113_r).alloc;
	return _38031_ok;
}



inline jule::Bool _1b65a085c_TypeCompatibilityChecker::_method_check_prim(void) {
	jule::Bool _38831_ok = jule::Bool();
	jule::Ref<_1b6703d45_Prim> _38913_dest = (*this)._field_dest->_method_prim();
	jule::Ref<_1b6703d45_Prim> _39017_src = (*this)._field_src->_method_prim();
	if ((!(jule::real(_39017_src)))) {
		_38831_ok = _38913_dest->_method_is_any();
		return _38831_ok;
	}
	if (_38913_dest->_method_is_any()) {
		_38831_ok = (!((*this)._field_ignore_any)) || _39017_src->_method_is_any();
		return _38831_ok;
	}
	_38831_ok = _1b6d578d8_types_are_compatible(_38913_dest->_method_to_str(),_39017_src->_method_to_str());
	return _38831_ok;
}



inline jule::Bool _1b65a085c_TypeCompatibilityChecker::_method_check_cpp_linked(void) {
	jule::Bool _40037_ok = jule::Bool();
	_40037_ok = (*this)._field_src->_method_cpp_linked() && ((*this)._field_dest->_field_cpp_ident == (*this)._field_src->_field_cpp_ident);
	return _40037_ok;
}



inline jule::Bool _1b65a085c_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _40526_ok = jule::Bool();
	if ((!(jule::real((*this)._field_src)))) {
		_40526_ok = false;
		return _40526_ok;
	}
	if ((*this)._field_dest->_field_variadic != (*this)._field_src->_field_variadic) {
		_40526_ok = false;
		return _40526_ok;
	} else if ((*this)._field_dest->_field_variadic) {
		(*this)._field_ignore_any=true;
	}
	if (jule::real((*this)._field_dest->_method_ref())) {
		_40526_ok = (*this)._method_check_ref();
		return _40526_ok;
	}
	if ((!((*this)._field_sub_check)) && jule::real((*this)._field_src->_method_ref())) {
		(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	}
	{
		if (!(((*this)._field_dest->_method_cpp_linked()))) { goto _case_end_4541668960; }
		_case_begin_4541668960:;
		{
			_40526_ok = (*this)._method_check_cpp_linked();
			return _40526_ok;
		}
		goto _match_end_4541664880;
		_case_end_4541668960:;
		if (!((jule::real((*this)._field_dest->_method_prim())))) { goto _case_end_4541668560; }
		_case_begin_4541668560:;
		{
			_40526_ok = (*this)._method_check_prim();
			return _40526_ok;
		}
		goto _match_end_4541664880;
		_case_end_4541668560:;
		if (!((jule::real((*this)._field_dest->_method_trt())))) { goto _case_end_4541668656; }
		_case_begin_4541668656:;
		{
			_40526_ok = (*this)._method_check_trait();
			return _40526_ok;
		}
		goto _match_end_4541664880;
		_case_end_4541668656:;
		if (!((jule::real((*this)._field_dest->_method_ptr())))) { goto _case_end_4541668752; }
		_case_begin_4541668752:;
		{
			_40526_ok = (*this)._method_check_ptr();
			return _40526_ok;
		}
		goto _match_end_4541664880;
		_case_end_4541668752:;
		if (!((jule::real((*this)._field_dest->_method_slc())))) { goto _case_end_4541668064; }
		_case_begin_4541668064:;
		{
			_40526_ok = (*this)._method_check_slc();
			return _40526_ok;
		}
		goto _match_end_4541664880;
		_case_end_4541668064:;
		if (!((jule::real((*this)._field_dest->_method_arr())))) { goto _case_end_4541668160; }
		_case_begin_4541668160:;
		{
			_40526_ok = (*this)._method_check_arr();
			return _40526_ok;
		}
		goto _match_end_4541664880;
		_case_end_4541668160:;
		if (!((jule::real((*this)._field_dest->_method_map())))) { goto _case_end_4541668256; }
		_case_begin_4541668256:;
		{
			_40526_ok = (*this)._method_check_map();
			return _40526_ok;
		}
		goto _match_end_4541664880;
		_case_end_4541668256:;
		if (!((jule::real((*this)._field_dest->_method_enm())))) { goto _case_end_4541668352; }
		_case_begin_4541668352:;
		{
			_40526_ok = (*this)._method_check_enum();
			return _40526_ok;
		}
		goto _match_end_4541664880;
		_case_end_4541668352:;
		if (!((jule::real((*this)._field_dest->_method_strct())))) { goto _case_end_4541669200; }
		_case_begin_4541669200:;
		{
			_40526_ok = (*this)._method_check_struct();
			return _40526_ok;
		}
		goto _match_end_4541664880;
		_case_end_4541669200:;
		if (!((jule::real((*this)._field_dest->_method_fnc())))) { goto _case_end_4541669296; }
		_case_begin_4541669296:;
		{
			_40526_ok = (*this)._method_check_fn();
			return _40526_ok;
		}
		goto _match_end_4541664880;
		_case_end_4541669296:;
		if (!(((*this)._field_dest->_method_nil_compatible()))) { goto _case_end_4541669392; }
		_case_begin_4541669392:;
		{
			_40526_ok = (*this)._field_src->_method_is_nil();
			return _40526_ok;
		}
		goto _match_end_4541664880;
		_case_end_4541669392:;
		_case_begin_4541667376:;
		{
			_40526_ok = false;
			return _40526_ok;
		}
		goto _match_end_4541664880;
		_case_end_4541667376:;
		_match_end_4541664880:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1b65a085c_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_any:" << _Src._field_ignore_any << ", ";
	_Stream << "deref:" << _Src._field_deref << ", ";
	_Stream << "sub_check:" << _Src._field_sub_check;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e788ad47_is_surrogate(jule::I32 _6021_r) {
	return (55296LL <= _6021_r) && (_6021_r < 57344LL);
}



inline jule::I32 _1e788ad47_decode_rune(jule::I32 _6720_r1,jule::I32 _6730_r2) {
	if ((((55296LL <= _6720_r1) && (_6720_r1 < 56320LL)) && (56320LL <= _6730_r2)) && (_6730_r2 < 57344LL)) {
		return static_cast<jule::I32>((((_6720_r1 - 55296LL) << 10LL) | (_6730_r2 - 56320LL)) + 65536LL);
	}
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _1e788ad47_encode_rune(jule::I32 _7724_r) {
	jule::I32 _7735_r1 = jule::I32();
	jule::I32 _7745_r2 = jule::I32();
	if ((_7724_r < 65536LL) || (_7724_r > 1114111LL)) {
		_7735_r1 = 65533LL;
		_7745_r2 = 65533LL;
		return std::make_tuple(_7735_r1,_7745_r2);
	}
	_7724_r-=65536LL;
	_7735_r1 = static_cast<jule::I32>(55296LL + ((_7724_r >> 10LL) & 1023LL));
	_7745_r2 = static_cast<jule::I32>(56320LL + (_7724_r & 1023LL));
	return std::make_tuple(_7735_r1,_7745_r2);
}



inline jule::Slice<jule::U16> _1e788ad47_encode(jule::Slice<jule::I32> _8615_s) {
	jule::I64 _8713_n = _8615_s.len();
	for (auto _1e788ad47_v: _8615_s) {
		{
			if (_1e788ad47_v >= 65536LL) {
				(_8713_n)++;
			}
		}
	_iter_next_4512582752:;
	}
	_iter_end_4512582752:;
	jule::Slice<jule::U16> _9413_a = jule::Slice<jule::U16>::alloc(static_cast<jule::Int>(_8713_n));
	_8713_n=0LL;
	for (auto _1e788ad47_v: _8615_s) {
		{
			{
				if (!(((0LL <= _1e788ad47_v) && (_1e788ad47_v < 55296LL)) || ((57344LL <= _1e788ad47_v) && (_1e788ad47_v < 65536LL)))) { goto _case_end_4519980608; }
				_case_begin_4519980608:;
				{
					_9413_a[static_cast<jule::Int>(_8713_n)]=static_cast<jule::U16>(_1e788ad47_v);
					(_8713_n)++;
				}
				goto _match_end_4520106304;
				_case_end_4519980608:;
				if (!(((65536LL <= _1e788ad47_v) && (_1e788ad47_v <= 1114111LL)))) { goto _case_end_4522308992; }
				_case_begin_4522308992:;
				{
					jule::I32 _10418_r1;
					jule::I32 _10422_r2;
					std::tie(_10418_r1,_10422_r2) = _1e788ad47_encode_rune(_1e788ad47_v);
					_9413_a[static_cast<jule::Int>(_8713_n)]=static_cast<jule::U16>(_10418_r1);
					_9413_a[static_cast<jule::Int>(_8713_n + 1LL)]=static_cast<jule::U16>(_10422_r2);
					_8713_n+=2LL;
				}
				goto _match_end_4520106304;
				_case_end_4522308992:;
				_case_begin_4519980352:;
				{
					_9413_a[static_cast<jule::Int>(_8713_n)]=static_cast<jule::U16>(65533LLU);
					(_8713_n)++;
				}
				goto _match_end_4520106304;
				_case_end_4519980352:;
				_match_end_4520106304:;
			}
		}
	_iter_next_4512799488:;
	}
	_iter_end_4512799488:;
	return _9413_a.slice(0LL,static_cast<jule::Int>(_8713_n));
}



inline jule::Slice<jule::I32> _1e788ad47_decode(jule::Slice<jule::U16> _11815_s) {
	jule::Slice<jule::I32> _11913_a = jule::Slice<jule::I32>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_11815_s.len())));
	jule::Int _12013_n = 0LL;
	jule::Int _12113_i = 0LL;
	for (; _12113_i < _11815_s.len(); (_12113_i)++) {
		{
			jule::U16 _12313_r = _11815_s[static_cast<jule::Int>(_12113_i)];
			{
				if (!((_12313_r < 55296LL) || (57344LL <= _12313_r))) { goto _case_end_4522921072; }
				_case_begin_4522921072:;
				{
					_11913_a[static_cast<jule::Int>(_12013_n)]=static_cast<jule::I32>(_12313_r);
				}
				goto _match_end_4522910000;
				_case_end_4522921072:;
				if (!((((((55296LL <= _12313_r) && (_12313_r < 56320LL)) && ((_12113_i + 1LL) < _11815_s.len())) && (56320LL <= _11815_s[static_cast<jule::Int>(_12113_i + 1LL)])) && (_11815_s[static_cast<jule::Int>(_12113_i + 1LL)] < 57344LL)))) { goto _case_end_4522963280; }
				_case_begin_4522963280:;
				{
					_11913_a[static_cast<jule::Int>(_12013_n)]=static_cast<jule::I32>(_1e788ad47_decode_rune(static_cast<jule::I32>(_12313_r),static_cast<jule::I32>(_11815_s[static_cast<jule::Int>(_12113_i + 1LL)])));
					(_12113_i)++;
				}
				goto _match_end_4522910000;
				_case_end_4522963280:;
				_case_begin_4522921760:;
				{
					_11913_a[static_cast<jule::Int>(_12013_n)]=65533LL;
				}
				goto _match_end_4522910000;
				_case_end_4522921760:;
				_match_end_4522910000:;
			}
			(_12013_n)++;
		}
	_iter_next_4523352384:;
	}
	_iter_end_4523352384:;
	return _11913_a.slice(0LL,static_cast<jule::Int>(_12013_n));
}



inline jule::Slice<jule::U16> _1e788ad47_append_rune(jule::Slice<jule::U16> _14524_a,jule::I32 _14534_r) {
	{
		if (!(((0LL <= _14534_r) && (_14534_r < 55296LL)) || ((57344LL <= _14534_r) && (_14534_r < 65536LL)))) { goto _case_end_4523389152; }
		_case_begin_4523389152:;
		{
			return jule::append(_14524_a,jule::Slice<jule::U16>({static_cast<jule::U16>(_14534_r)}));
		}
		goto _match_end_4523372416;
		_case_end_4523389152:;
		if (!(((65536LL <= _14534_r) && (_14534_r <= 1114111LL)))) { goto _case_end_4523398160; }
		_case_begin_4523398160:;
		{
			jule::I32 _15214_r1;
			jule::I32 _15218_r2;
			std::tie(_15214_r1,_15218_r2) = _1e788ad47_encode_rune(_14534_r);
			return jule::append(_14524_a,jule::Slice<jule::U16>({static_cast<jule::U16>(_15214_r1),static_cast<jule::U16>(_15218_r2)}));
		}
		goto _match_end_4523372416;
		_case_end_4523398160:;
		_match_end_4523372416:;
	}
	return jule::append(_14524_a,jule::Slice<jule::U16>({65533LLU}));
}



inline void* _1e78444c6_malloc(jule::Uint _2215_size) {
	return malloc(_2215_size);
}



inline void* _1e78444c6_calloc(jule::Uint _2915_size,jule::Uint _2927_n) {
	return calloc(_2915_size,_2927_n);
}



inline void* _1e78444c6_realloc(void* _3727_ptr,jule::Uint _3741_size) {
	return realloc(_3727_ptr,_3741_size);
}



inline void _1e78444c6_free(void* _4524_ptr) {
	free(_4524_ptr);
}























inline jule::Str _1e784454d_type_id(jule::Any _11316_a) {
	if (_11316_a == nullptr) {
		return jule::Str("", 0);
	}
	return __jule_type_id_of_any(_11316_a);
}



inline jule::Slice<jule::U16> _1e7872438_utf16_from_str(jule::Str _1523_s) {
	
	jule::Slice<jule::I32> _219_runes = static_cast<jule::Slice<jule::I32>>(_1523_s);
	jule::Slice<jule::U16> _2213_buff = jule::Slice<jule::U16>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_219_runes.len())));
	for (auto _1e7872438_r: _219_runes) {
		{
			if (_1e7872438_r == 0LL) {
				goto _iter_end_4523690816;
			}
			_2213_buff=_1e788ad47_append_rune(_2213_buff,_1e7872438_r);
		}
	_iter_next_4523690816:;
	}
	_iter_end_4523690816:;
	return _1e788ad47_append_rune(_2213_buff,0LL);
}



inline jule::Str _1e7872438_utf16_to_str(jule::Slice<jule::U16> _3521_s) {
	if (_3521_s == nullptr) {
		return jule::Str("", 0);
	}
	jule::Slice<jule::U16> _3913_code_page = (*((&(_3521_s))));
	{
		jule::Int _1e7872438_i = 0;
		for (auto _1e7872438_v: _3521_s) {
			{
				if (_1e7872438_v == 0LL) {
					_3913_code_page=_3913_code_page.slice(0LL,static_cast<jule::Int>(_1e7872438_i));
					goto _iter_end_4523252064;
				}
			}
		_iter_next_4523252064:;
		_1e7872438_i++;
		}
		_iter_end_4523252064:;
	}
	return static_cast<jule::Str>(_1e788ad47_decode(_3913_code_page));
}



inline jule::Str _1e7872438_u16_ptr_to_str(jule::U16* _5130_s) {
	if (_5130_s == nullptr) {
		return jule::Str("", 0);
	}
	jule::Slice<jule::U16> _5613_code_page = nullptr;
	jule::Int _5713_i = 0LL;
	for (; ; (_5713_i)++) {
		{
			jule::U16 _5913_r = _5130_s[static_cast<jule::Int>(_5713_i)];
			if (_5913_r == 0LL) {
				return static_cast<jule::Str>(_1e788ad47_decode(_5613_code_page));
			}
			_5613_code_page=jule::append(_5613_code_page,jule::Slice<jule::U16>({_5913_r}));
		}
	_iter_next_4523297184:;
	}
	_iter_end_4523297184:;
	return jule::Str("", 0);
}



inline jule::Str _1e7872438_byte_ptr_to_str(jule::U8* _7031_s) {
	if (_7031_s == nullptr) {
		return jule::Str("", 0);
	}
	return __jule_str_from_byte_ptr(_7031_s);
}



inline jule::Int _1e787bc7d_puts(jule::Str _913_s) {
	return puts(((char*)((&(_913_s[0LL])))));
}



inline jule::Int _1e77d0b7c_get_last_errno(void) {
	return errno;
}



inline jule::Int _1e77e85e0_stat(jule::U8* _4620_path,struct stat* _4637_stat) {
	return static_cast<jule::Int>(__jule_stat(((char*)(_4620_path)),_4637_stat));
}



inline jule::Int _1e77e85e0_open(jule::U8* _5120_path,jule::Int _5133_flag,jule::Int _5144_mode) {
	return static_cast<jule::Int>(open(((char*)(_5120_path)),_5133_flag,_5144_mode));
}



inline jule::U8* _1e77e85e0_getcwd(jule::U8* _5722_buff,jule::Uint _5735_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5722_buff)),_5735_bufflen)));
}



inline DIR* _1e77e85e0_opendir(jule::U8* _6223_path) {
	return opendir(((char*)(_6223_path)));
}



inline struct dirent* _1e77e85e0_readdir(DIR* _6527_dir) {
	return readdir(_6527_dir);
}



inline jule::Int _1e77e85e0_closedir(DIR* _6828_dir) {
	return static_cast<jule::Int>(closedir(_6828_dir));
}



inline jule::Int _1e77e85e0_chdir(jule::U8* _7121_path) {
	return static_cast<jule::Int>(chdir(((char*)(_7121_path))));
}



inline jule::Int _1e77e85e0_remove(jule::U8* _7422_path) {
	return static_cast<jule::Int>(remove(((char*)(_7422_path))));
}



inline jule::Int _1e77e85e0_mkdir(jule::U8* _7721_path,jule::Int _7734_mode) {
	return static_cast<jule::Int>(mkdir(((char*)(_7721_path)),_7734_mode));
}



inline jule::Int _1e77e85e0_rmdir(jule::U8* _8221_path) {
	return static_cast<jule::Int>(rmdir(((char*)(_8221_path))));
}



inline jule::Int _1e77e85e0_unlink(jule::U8* _8522_path) {
	return static_cast<jule::Int>(unlink(((char*)(_8522_path))));
}



inline jule::I64 _1e780dda8_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::Int _1e780dda8_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::Int _1e780dda8_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



inline jule::Int _1e780dda8_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _1e780dda8_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline jule::Int _1e77d0d03_get_last_os_error(void) {
	jule::Int _319_err = _1e77d0b7c_get_last_errno();
	{
		auto _match_expr{ _319_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4524388800; }
		_case_begin_4524388800:;
		{
			return 1LLU;
		}
		goto _match_end_4524387728;
		_case_end_4524388800:;
		if (!((5LL) == _match_expr)) { goto _case_end_4524388896; }
		_case_begin_4524388896:;
		{
			return 2LLU;
		}
		goto _match_end_4524387728;
		_case_end_4524388896:;
		if (!((40LL) == _match_expr)) { goto _case_end_4524388992; }
		_case_begin_4524388992:;
		{
			return 3LLU;
		}
		goto _match_end_4524387728;
		_case_end_4524388992:;
		if (!((36LL) == _match_expr)) { goto _case_end_4524389376; }
		_case_begin_4524389376:;
		{
			return 4LLU;
		}
		goto _match_end_4524387728;
		_case_end_4524389376:;
		if (!((2LL) == _match_expr)) { goto _case_end_4524389472; }
		_case_begin_4524389472:;
		{
			return 5LLU;
		}
		goto _match_end_4524387728;
		_case_end_4524389472:;
		if (!((20LL) == _match_expr)) { goto _case_end_4524389568; }
		_case_begin_4524389568:;
		{
			return 6LLU;
		}
		goto _match_end_4524387728;
		_case_end_4524389568:;
		if (!((12LL) == _match_expr)) { goto _case_end_4524388192; }
		_case_begin_4524388192:;
		{
			return 7LLU;
		}
		goto _match_end_4524387728;
		_case_end_4524388192:;
		_case_begin_4524386880:;
		{
			return 0LLU;
		}
		goto _match_end_4524387728;
		_case_end_4524386880:;
		_match_end_4524387728:;
	}
}



inline jule::Slice<jule::Str> _1e77d0a39_args(void) {
	return jule::args();
}



inline jule::Slice<jule::Str> _1e77d0a39_env(void) {
	return jule::args();
}



inline std::tuple<jule::Str,jule::Int> _1e77d0a39_working_dir(void) {
	jule::Str _3010_p;
	jule::Int _3013_err;
	std::tie(_3010_p,_3013_err) = _1e77e263e___getwd();
	return std::make_tuple(_3010_p,_3013_err);
}



inline jule::Int _1e77d0a39_set_working_dir(jule::Str _3924_path) {
	if (_3924_path == jule::Str("", 0)) {
		return 6LLU;
	}
	return _1e77e263e___chdir(_3924_path);
}



inline std::tuple<jule::Str,jule::Int> _1e77e263e___getwd(void) {
	jule::U8* _1113_buff = _1e77e85e0_getcwd(nullptr,0LLU);
	if (_1113_buff == nullptr) {
		return std::make_tuple(jule::Str("", 0),_1e77d0d03_get_last_os_error());
	}
	jule::Str _159_pwd = _1e7872438_byte_ptr_to_str(_1113_buff);
	{
		_1e78444c6_free(_1113_buff);
	}
	return std::make_tuple(_159_pwd,0LLU);
}



inline jule::Int _1e77e263e___chdir(jule::Str _2212_path) {
	if (_1e77e85e0_chdir((&(_2212_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1e77d0d03_get_last_os_error();
}



inline jule::Str _1e777b83c_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _1e7772c62_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(static_cast<jule::Int>(_1099_vol_len));
	if (_10718_path == jule::Str("", 0)) {
		if (((_1099_vol_len > 1LL) && _1e7772c62_is_path_sep(_1089_original_path[0LL])) && _1e7772c62_is_path_sep(_1089_original_path[1LL])) {
			return _1e777b83c_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _1e7772c62_is_path_sep(_10718_path[0LL]);
	jule::I64 _1259_n = _10718_path.len();
	_1e777b83c_LazyBuff _12613_out = _1e777b83c_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(47LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	while (_13114_r < _1259_n) {
		{
			{
				if (!((_1e7772c62_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)])))) { goto _case_end_4524456480; }
				_case_begin_4524456480:;
				{
					(_13114_r)++;
				}
				goto _match_end_4524446000;
				_case_end_4524456480:;
				if (!(((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (((_13114_r + 1LL) == _1259_n) || _1e7772c62_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 1LL)]))))) { goto _case_end_4524457264; }
				_case_begin_4524457264:;
				{
					(_13114_r)++;
				}
				goto _match_end_4524446000;
				_case_end_4524457264:;
				if (!((((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (_10718_path[static_cast<jule::Int>(_13114_r + 1LL)] == '.')) && (((_13114_r + 2LL) == _1259_n) || _1e7772c62_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 2LL)]))))) { goto _case_end_4524459552; }
				_case_begin_4524459552:;
				{
					_13114_r+=2LL;
					{
						if (!((_12613_out._field_w > _13121_dotdot))) { goto _case_end_4524467296; }
						_case_begin_4524467296:;
						{
							(_12613_out._field_w)--;
							while ((_12613_out._field_w > _13121_dotdot) && (!(_1e7772c62_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w)))))) {
								{
									(_12613_out._field_w)--;
								}
							_iter_next_4524468384:;
							}
							_iter_end_4524468384:;
						}
						goto _match_end_4524464448;
						_case_end_4524467296:;
						if (!(((!(_1189_rooted))))) { goto _case_end_4524467408; }
						_case_begin_4524467408:;
						{
							if (_12613_out._field_w > 0LL) {
								_12613_out._method_append(47LLU);
							}
							_12613_out._method_append('.');
							_12613_out._method_append('.');
							_13121_dotdot=_12613_out._field_w;
						}
						goto _match_end_4524464448;
						_case_end_4524467408:;
						_match_end_4524464448:;
					}
				}
				goto _match_end_4524446000;
				_case_end_4524459552:;
				_case_begin_4524446176:;
				{
					if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
						_12613_out._method_append(47LLU);
					}
					if (((false && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
						jule::Int _17425_i = _13114_r;
						for (; (_17425_i < _1259_n) && (!(_1e7772c62_is_path_sep(_10718_path[static_cast<jule::Int>(_17425_i)]))); (_17425_i)++) {
							{
								if (_10718_path[static_cast<jule::Int>(_17425_i)] == ':') {
									_12613_out._method_append('.');
									_12613_out._method_append(47LLU);
									goto _iter_end_4524448960;
								}
							}
						_iter_next_4524448960:;
						}
						_iter_end_4524448960:;
					}
					for (; (_13114_r < _1259_n) && (!(_1e7772c62_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)]))); (_13114_r)++) {
						{
							_12613_out._method_append(_10718_path[static_cast<jule::Int>(_13114_r)]);
						}
					_iter_next_4524451056:;
					}
					_iter_end_4524451056:;
				}
				goto _match_end_4524446000;
				_case_end_4524446176:;
				_match_end_4524446000:;
			}
		}
	_iter_next_4524445552:;
	}
	_iter_end_4524445552:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _1e777b83c_from_slash(_12613_out._method_string());
}



inline jule::Str _1e777b83c_to_slash(jule::Str _20017_path) {
	if (true) {
		return _20017_path;
	}
	return _20017_path.replace(static_cast<jule::Str>(47LL),jule::Str("/", 1),-1LL);
}



inline jule::Str _1e777b83c_from_slash(jule::Str _21019_path) {
	if (true) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _1e777b83c_join(jule::Slice<jule::Str> _22413_elem) {
	return _1e7772c62___join(_22413_elem);
}



inline jule::Str _1e777b83c_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	for (; (_23013_i >= 0LL) && (!(_1e7772c62_is_path_sep(_22912_path[static_cast<jule::Int>(_23013_i)]))); (_23013_i)--) {
		{
			if (_22912_path[static_cast<jule::Int>(_23013_i)] == '.') {
				return _22912_path.slice(static_cast<jule::Int>(_23013_i));
			}
		}
	_iter_next_4524486512:;
	}
	_iter_end_4524486512:;
	return jule::Str("", 0);
}



inline std::tuple<jule::Str,jule::Bool> _1e777b83c_abs(jule::Str _24412_path) {
	jule::Str _24510_abs_path;
	jule::Bool _24520_ok;
	std::tie(_24510_abs_path,_24520_ok) = _1e7772c62___abs(_24412_path);
	return std::make_tuple(_24510_abs_path,_24520_ok);
}



inline jule::Str _1e777b83c_base(jule::Str _25317_path) {
	if (_25317_path == jule::Str("", 0)) {
		return jule::Str(".", 1);
	}
	while ((_25317_path.len() > 0LL) && _1e7772c62_is_path_sep(_25317_path[static_cast<jule::Int>(_25317_path.len() - 1LL)])) {
		{
			_25317_path=_25317_path.slice(0LL,static_cast<jule::Int>(_25317_path.len() - 1LL));
		}
	_iter_next_4524495056:;
	}
	_iter_end_4524495056:;
	_25317_path=_25317_path.slice(static_cast<jule::Int>(_1e777b83c_volume_name(_25317_path).len()));
	jule::I64 _26413_i = _25317_path.len() - 1LL;
	while ((_26413_i >= 0LL) && (!(_1e7772c62_is_path_sep(_25317_path[static_cast<jule::Int>(_26413_i)])))) {
		{
			(_26413_i)--;
		}
	_iter_next_4524499776:;
	}
	_iter_end_4524499776:;
	if (_26413_i >= 0LL) {
		_25317_path=_25317_path.slice(static_cast<jule::Int>(_26413_i + 1LL));
	}
	if (_25317_path == jule::Str("", 0)) {
		return static_cast<jule::Str>(47LL);
	}
	return _25317_path;
}



inline jule::Str _1e777b83c_dir(jule::Str _28412_path) {
	jule::Str _2859_vol = _1e777b83c_volume_name(_28412_path);
	jule::I64 _28613_i = _28412_path.len() - 1LL;
	while ((_28613_i >= _2859_vol.len()) && (!(_1e7772c62_is_path_sep(_28412_path[static_cast<jule::Int>(_28613_i)])))) {
		{
			(_28613_i)--;
		}
	_iter_next_4524506176:;
	}
	_iter_end_4524506176:;
	jule::Str _2909_dir = _1e777b83c_clean(_28412_path.slice(static_cast<jule::Int>(_2859_vol.len()),static_cast<jule::Int>(_28613_i + 1LL)));
	if ((_2909_dir == jule::Str(".", 1)) && (_2859_vol.len() > 2LL)) {
		return _2859_vol;
	}
	return _2859_vol + _2909_dir;
}



inline jule::Str _1e777b83c_volume_name(jule::Str _30220_path) {
	return _1e777b83c_from_slash(_30220_path.slice(0LL,static_cast<jule::Int>(_1e7772c62_volume_name_len(_30220_path))));
}



inline jule::Bool _1e7772c62_is_path_sep(jule::U8 _4720_c) {
	return 47LL == _4720_c;
}



inline jule::Bool _1e7772c62_is_abs(jule::Str _5215_path) {
	return _5215_path.has_prefix(jule::Str("/", 1));
}



inline jule::Int _1e7772c62_volume_name_len(jule::Str _5620_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _1e7772c62___abs(jule::Str _5810_path) {
	jule::Bool _5828_ok = jule::Bool();
	if (_1e7772c62_is_abs(_5810_path)) {
		_5828_ok = true;
		return std::make_tuple(_1e777b83c_clean(_5810_path),_5828_ok);
	}
	jule::Str _6210_wd;
	jule::Int _6214_err;
	std::tie(_6210_wd,_6214_err) = _1e77d0a39_working_dir();
	if (_6214_err != 0LLU) {
		_5828_ok = false;
		return std::make_tuple(jule::Str("", 0),_5828_ok);
	}
	_5828_ok = true;
	return std::make_tuple(_1e7772c62___join(jule::Slice<jule::Str>({_6210_wd,_5810_path})),_5828_ok);
}



inline jule::Str _1e7772c62_str_join(jule::Slice<jule::Str> _6913_elems,jule::Str _6927_sep) {
	{
		auto _match_expr{ _6913_elems.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4524526000; }
		_case_begin_4524526000:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4524525456;
		_case_end_4524526000:;
		if (!((1LL) == _match_expr)) { goto _case_end_4524526096; }
		_case_begin_4524526096:;
		{
			return _6913_elems[0LL];
		}
		goto _match_end_4524525456;
		_case_end_4524526096:;
		_match_end_4524525456:;
	}
	jule::Str _7513_s = _6913_elems[0LL];
	for (auto _1e7772c62_elem: _6913_elems.slice(1LL)) {
		{
			_7513_s+=_6927_sep + _1e7772c62_elem;
		}
	_iter_next_4524529184:;
	}
	_iter_end_4524529184:;
	return _7513_s;
}



inline jule::Str _1e7772c62___join(jule::Slice<jule::Str> _8211_elem) {
	{
		jule::Int _1e7772c62_i = 0;
		for (auto _1e7772c62_e: _8211_elem) {
			{
				if (_1e7772c62_e != jule::Str("", 0)) {
					return _1e777b83c_clean(_1e7772c62_str_join(_8211_elem.slice(static_cast<jule::Int>(_1e7772c62_i)),static_cast<jule::Str>(47LL)));
				}
			}
		_iter_next_4524531616:;
		_1e7772c62_i++;
		}
		_iter_end_4524531616:;
	}
	return jule::Str("", 0);
}



inline void _1e77a41e4_exit(jule::Int _1213_code) {
	_1e780dda8_exit(_1213_code);
}



inline jule::Str _1e77a41e4_executable(void) {
	return jule::executable();
}



inline jule::Bool _1e7691048_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[static_cast<jule::Int>(_2627_p.len() - 1LL)] == '>');
}



inline jule::Bool _1e7691048_is_valid_header_ext(jule::Str _3128_ext) {
	for (auto _1e7691048_valid_ext: _1e7691048_CPP_HEADER_EXTS) {
		{
			if (_3128_ext == _1e7691048_valid_ext) {
				return true;
			}
		}
	_iter_next_4524702768:;
	}
	_iter_end_4524702768:;
	return false;
}



inline jule::Bool _1e7691048_is_valid_cpp_ext(jule::Str _4225_ext) {
	for (auto _1e7691048_e: _1e7691048_CPP_EXTS) {
		{
			if (_4225_ext == _1e7691048_e) {
				return true;
			}
		}
	_iter_next_4524707520:;
	}
	_iter_end_4524707520:;
	for (auto _1e7691048_e: _1e7691048_OBJECTIVE_CPP_EXTS) {
		{
			if (_4225_ext == _1e7691048_e) {
				return true;
			}
		}
	_iter_next_4524706640:;
	}
	_iter_end_4524706640:;
	return false;
}



inline jule::Str _1e7690a81_logf(jule::Str _26013_fmt,jule::Slice<jule::Any> _26026_args) {
	return _1e7690a81_apply_fmt(_26013_fmt,_26026_args);
}



inline jule::Str _1e7690a81_arg_to_str(jule::Any _26415_arg) {
	{
		auto _match_expr{ _26415_arg };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4524715360; }
		_case_begin_4524715360:;
		{
			return _26415_arg.operator jule::Str();
		}
		goto _match_end_4524712368;
		_case_end_4524715360:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_4524715552; }
		_case_begin_4524715552:;
		{
			return static_cast<jule::Str>(_26415_arg.operator jule::U8());
		}
		goto _match_end_4524712368;
		_case_end_4524715552:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_4524715648; }
		_case_begin_4524715648:;
		{
			return static_cast<jule::Str>(_26415_arg.operator jule::I32());
		}
		goto _match_end_4524712368;
		_case_end_4524715648:;
		_case_begin_4524713184:;
		{
			return jule::Str("<fmt?>", 6);
		}
		goto _match_end_4524712368;
		_case_end_4524713184:;
		_match_end_4524712368:;
	}
}



inline jule::Int _1e7690a81_find_next_fmt(jule::Str _27318_fmt) {
	{
		jule::Int _1e7690a81_i = 0;
		for (auto _1e7690a81_b: _27318_fmt) {
			{
				if (_1e7690a81_b == '@') {
					return _1e7690a81_i;
				}
			}
		_iter_next_4524714128:;
		_1e7690a81_i++;
		}
		_iter_end_4524714128:;
	}
	return -1LL;
}



inline jule::Str _1e7690a81_apply_fmt(jule::Str _28218_fmt,jule::Slice<jule::Any> _28228_args) {
	jule::Str _28313_s = jule::Str("", 0);
	for (auto _1e7690a81_arg: _28228_args) {
		{
			jule::Int _28613_i = _1e7690a81_find_next_fmt(_28218_fmt);
			if (_28613_i == -1LL) {
				goto _iter_end_4524722992;
			}
			_28313_s+=_28218_fmt.slice(0LL,static_cast<jule::Int>(_28613_i));
			_28313_s+=_1e7690a81_arg_to_str(_1e7690a81_arg);
			_28218_fmt=_28218_fmt.slice(static_cast<jule::Int>(_28613_i + 1LL));
		}
	_iter_next_4524722992:;
	}
	_iter_end_4524722992:;
	_28313_s+=_28218_fmt;
	return _28313_s;
}



inline jule::Bool _1e768bede_is_top_directive(jule::Str _3625_directive) {
	return (_3625_directive == jule::Str("pass", 4)) || (_3625_directive == jule::Str("build", 5));
}



inline jule::Bool _1e7731968_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



inline jule::Bool _1e7731968_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



inline jule::Bool _1e7731968_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



inline jule::Bool _1e7731968_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



inline jule::Bool _1e7731968_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



inline jule::Bool _1e7731968_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



inline jule::Bool _1e7731968_is_unix(jule::Str _6316_os) {
	return _1e7731968_is_darwin(_6316_os) || _1e7731968_is_linux(_6316_os);
}



inline jule::Bool _1e7731968_is_32bit(jule::Str _6517_arch) {
	return _1e7731968_is_i386(_6517_arch);
}



inline jule::Bool _1e7731968_is_64bit(jule::Str _6717_arch) {
	return _1e7731968_is_amd64(_6717_arch) || _1e7731968_is_arm64(_6717_arch);
}



inline void _1e77372ed_exit_err(jule::Str _1613_msg) {
	
	jule::outln(_1613_msg);
	_1e77a41e4_exit(1LL);
}



inline void _1e77372ed_init(void) {
	jule::Str _2413_path = _1e77a41e4_executable();
	if (_2413_path == jule::Str("", 0)) {
		_1e77372ed_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _2910_pwd;
	jule::Int _2915_err;
	std::tie(_2910_pwd,_2915_err) = _1e77d0a39_working_dir();
	if (_2915_err != 0LLU) {
		_1e77372ed_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
	}
	jule::Str _349_path_exec = _1e777b83c_dir(_2413_path);
	_2413_path=_1e777b83c_join(jule::Slice<jule::Str>({_349_path_exec,jule::Str("..", 2)}));
	{
		(*((&(_1e77372ed_PATH_WD))))=_2910_pwd;
		(*((&(_1e77372ed_PATH_EXEC))))=_349_path_exec;
		(*((&(_1e77372ed_PATH_STDLIB))))=_1e777b83c_join(jule::Slice<jule::Str>({_2413_path,jule::Str("std", 3)}));
		(*((&(_1e77372ed_PATH_API))))=_1e777b83c_join(jule::Slice<jule::Str>({_1e77372ed_PATH_EXEC,jule::Str("..", 2)}));
		(*((&(_1e77372ed_PATH_API))))=_1e777b83c_join(jule::Slice<jule::Str>({_1e77372ed_PATH_API,jule::Str("api", 3)}));
		(*((&(_1e77372ed_PATH_API))))=_1e777b83c_join(jule::Slice<jule::Str>({_1e77372ed_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Bool _1e774a8d8_is_jule(jule::Str _2316_path) {
	return _1e777b83c_ext(_2316_path) == jule::Str(".jule", 5);
}



inline jule::Int _1ce399a6c_leading_zeros(jule::Uint _4922_x) {
	return static_cast<jule::Int>(64LLU - _1ce399a6c_len(_4922_x));
}



inline jule::Int _1ce399a6c_leading_zeros8(jule::U8 _5223_x) {
	return static_cast<jule::Int>(8LL - _1ce399a6c_len8(_5223_x));
}



inline jule::Int _1ce399a6c_leading_zeros16(jule::U16 _5524_x) {
	return static_cast<jule::Int>(16LL - _1ce399a6c_len16(_5524_x));
}



inline jule::Int _1ce399a6c_leading_zeros32(jule::U32 _5824_x) {
	return static_cast<jule::Int>(32LL - _1ce399a6c_len32(_5824_x));
}



inline jule::Int _1ce399a6c_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - _1ce399a6c_len64(_6124_x));
}



inline jule::Int _1ce399a6c_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_1ce399a6c_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_1ce399a6c_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



inline jule::Int _1ce399a6c_trailing_zeros8(jule::U8 _9124_x) {
	return static_cast<jule::Int>(jule::Str("\b\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\a\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00", 256)[static_cast<jule::Int>(_9124_x)]);
}



inline jule::Int _1ce399a6c_trailing_zeros16(jule::U16 _9625_x) {
	if (_9625_x == 0LL) {
		return 16LL;
	}
	return static_cast<jule::Int>(_1ce399a6c_DE_BRUIJN32_TAB[static_cast<jule::Int>((static_cast<jule::U32>(_9625_x & (-(_9625_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _1ce399a6c_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_1ce399a6c_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _1ce399a6c_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_1ce399a6c_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



inline jule::Int _1ce399a6c_ones_count(jule::Uint _14119_x) {
	if (false) {
		return static_cast<jule::Int>(_1ce399a6c_ones_count32(static_cast<jule::U32>(_14119_x)));
	}
	return static_cast<jule::Int>(_1ce399a6c_ones_count64(static_cast<jule::U64>(_14119_x)));
}



inline jule::Int _1ce399a6c_ones_count8(jule::U8 _14920_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_14920_x)]);
}



inline jule::Int _1ce399a6c_ones_count16(jule::U16 _15421_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x >> 8LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x & 255LL)]);
}



inline jule::Int _1ce399a6c_ones_count32(jule::U32 _15921_x) {
	return static_cast<jule::Int>(((jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x >> 24LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 16LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 8LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x & 255LL)]);
}



inline jule::Int _1ce399a6c_ones_count64(jule::U64 _16425_x) {
	
	_16425_x=static_cast<jule::U64>(((_16425_x >> 1LL) & 6148914691236517205LL) + (_16425_x & 6148914691236517205LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 2LL) & 3689348814741910323LL) + (_16425_x & 3689348814741910323LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 4LL) + _16425_x) & 1085102592571150095LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 8LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 16LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 32LL);
	return static_cast<jule::Int>(static_cast<jule::Int>(_16425_x) & 127LLU);
}



inline jule::Uint _1ce399a6c_rotate_left(jule::Uint _20020_x,jule::Int _20029_k) {
	if (false) {
		return static_cast<jule::Uint>(_1ce399a6c_rotate_left32(static_cast<jule::U32>(_20020_x),_20029_k));
	}
	return static_cast<jule::Uint>(_1ce399a6c_rotate_left64(static_cast<jule::U64>(_20020_x),_20029_k));
}



inline jule::U8 _1ce399a6c_rotate_left8(jule::U8 _21121_x,jule::Int _21128_k) {
	
	jule::Uint _2139_s = static_cast<jule::Uint>(_21128_k) & 7LL;
	return static_cast<jule::U8>((_21121_x << _2139_s) | (_21121_x >> (8LL - _2139_s)));
}



inline jule::U16 _1ce399a6c_rotate_left16(jule::U16 _22122_x,jule::Int _22130_k) {
	
	jule::Uint _2239_s = static_cast<jule::Uint>(_22130_k) & 15LL;
	return static_cast<jule::U16>((_22122_x << _2239_s) | (_22122_x >> (16LL - _2239_s)));
}



inline jule::U32 _1ce399a6c_rotate_left32(jule::U32 _23122_x,jule::Int _23130_k) {
	
	jule::Uint _2339_s = static_cast<jule::Uint>(_23130_k) & 31LL;
	return static_cast<jule::U32>((_23122_x << _2339_s) | (_23122_x >> (32LL - _2339_s)));
}



inline jule::U64 _1ce399a6c_rotate_left64(jule::U64 _24122_x,jule::Int _24130_k) {
	
	jule::Uint _2439_s = static_cast<jule::Uint>(_24130_k) & 63LL;
	return static_cast<jule::U64>((_24122_x << _2439_s) | (_24122_x >> (64LL - _2439_s)));
}



inline jule::Uint _1ce399a6c_reverse(jule::Uint _25016_x) {
	if (false) {
		return static_cast<jule::Uint>(_1ce399a6c_reverse32(static_cast<jule::U32>(_25016_x)));
	}
	return static_cast<jule::Uint>(_1ce399a6c_reverse64(static_cast<jule::U64>(_25016_x)));
}



inline jule::U8 _1ce399a6c_reverse8(jule::U8 _25817_x) {
	return static_cast<jule::U8>(jule::Str("\x00\200@\300 \240`\340\020\220P\3200\260p\360\b\210H\310(\250h\350\030\230X\3308\270x\370\4\204D\304$\244d\344\024\224T\3244\264t\364\f\214L\314,\254l\354\034\234\\\334<\274|\374\2\202B\302\"\242b\342\022\222R\3222\262r\362\n\212J\312*\252j\352\032\232Z\332:\272z\372\6\206F\306&\246f\346\026\226V\3266\266v\366\016\216N\316.\256n\356\036\236^\336>\276~\376\1\201A\301!\241a\341\021\221Q\3211\261q\361\t\211I\311)\251i\351\031\231Y\3319\271y\371\5\205E\305%\245e\345\025\225U\3255\265u\365\r\215M\315-\255m\355\035\235]\335=\275}\375\3\203C\303#\243c\343\023\223S\3233\263s\363\v\213K\313+\253k\353\033\233[\333;\273{\373\a\207G\307'\247g\347\027\227W\3277\267w\367\017\217O\317/\257o\357\037\237_\337?\277\177\377", 256)[static_cast<jule::Int>(_25817_x)]);
}



inline jule::U16 _1ce399a6c_reverse16(jule::U16 _26318_x) {
	return static_cast<jule::U16>(static_cast<jule::U16>(jule::Str("\x00\200@\300 \240`\340\020\220P\3200\260p\360\b\210H\310(\250h\350\030\230X\3308\270x\370\4\204D\304$\244d\344\024\224T\3244\264t\364\f\214L\314,\254l\354\034\234\\\334<\274|\374\2\202B\302\"\242b\342\022\222R\3222\262r\362\n\212J\312*\252j\352\032\232Z\332:\272z\372\6\206F\306&\246f\346\026\226V\3266\266v\366\016\216N\316.\256n\356\036\236^\336>\276~\376\1\201A\301!\241a\341\021\221Q\3211\261q\361\t\211I\311)\251i\351\031\231Y\3319\271y\371\5\205E\305%\245e\345\025\225U\3255\265u\365\r\215M\315-\255m\355\035\235]\335=\275}\375\3\203C\303#\243c\343\023\223S\3233\263s\363\v\213K\313+\253k\353\033\233[\333;\273{\373\a\207G\307'\247g\347\027\227W\3277\267w\367\017\217O\317/\257o\357\037\237_\337?\277\177\377", 256)[static_cast<jule::Int>(_26318_x >> 8LL)]) | (static_cast<jule::U16>(jule::Str("\x00\200@\300 \240`\340\020\220P\3200\260p\360\b\210H\310(\250h\350\030\230X\3308\270x\370\4\204D\304$\244d\344\024\224T\3244\264t\364\f\214L\314,\254l\354\034\234\\\334<\274|\374\2\202B\302\"\242b\342\022\222R\3222\262r\362\n\212J\312*\252j\352\032\232Z\332:\272z\372\6\206F\306&\246f\346\026\226V\3266\266v\366\016\216N\316.\256n\356\036\236^\336>\276~\376\1\201A\301!\241a\341\021\221Q\3211\261q\361\t\211I\311)\251i\351\031\231Y\3319\271y\371\5\205E\305%\245e\345\025\225U\3255\265u\365\r\215M\315-\255m\355\035\235]\335=\275}\375\3\203C\303#\243c\343\023\223S\3233\263s\363\v\213K\313+\253k\353\033\233[\333;\273{\373\a\207G\307'\247g\347\027\227W\3277\267w\367\017\217O\317/\257o\357\037\237_\337?\277\177\377", 256)[static_cast<jule::Int>(_26318_x & 255LL)]) << 8LL));
}



inline jule::U32 _1ce399a6c_reverse32(jule::U32 _26822_x) {
	
	_26822_x=static_cast<jule::U32>(((_26822_x >> 1LL) & 1431655765LL) | ((_26822_x & 1431655765LL) << 1LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 2LL) & 858993459LL) | ((_26822_x & 858993459LL) << 2LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 4LL) & 252645135LL) | ((_26822_x & 252645135LL) << 4LL));
	return static_cast<jule::U32>(_1ce399a6c_reverse_bytes32(_26822_x));
}



inline jule::U64 _1ce399a6c_reverse64(jule::U64 _27722_x) {
	
	_27722_x=static_cast<jule::U64>(((_27722_x >> 1LL) & 6148914691236517205LL) | ((_27722_x & 6148914691236517205LL) << 1LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 2LL) & 3689348814741910323LL) | ((_27722_x & 3689348814741910323LL) << 2LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 4LL) & 1085102592571150095LL) | ((_27722_x & 1085102592571150095LL) << 4LL));
	return static_cast<jule::U64>(_1ce399a6c_reverse_bytes64(_27722_x));
}



inline jule::Uint _1ce399a6c_reverse_bytes(jule::Uint _29022_x) {
	if (false) {
		return static_cast<jule::Uint>(_1ce399a6c_reverse_bytes32(static_cast<jule::U32>(_29022_x)));
	}
	return static_cast<jule::Uint>(_1ce399a6c_reverse_bytes64(static_cast<jule::U64>(_29022_x)));
}



inline jule::U16 _1ce399a6c_reverse_bytes16(jule::U16 _30024_x) {
	return static_cast<jule::U16>((_30024_x >> 8LL) | (_30024_x << 8LL));
}



inline jule::U32 _1ce399a6c_reverse_bytes32(jule::U32 _30728_x) {
	
	_30728_x=static_cast<jule::U32>(((_30728_x >> 8LL) & 16711935LL) | ((_30728_x & 16711935LL) << 8LL));
	return static_cast<jule::U32>((_30728_x >> 16LL) | (_30728_x << 16LL));
}



inline jule::U64 _1ce399a6c_reverse_bytes64(jule::U64 _31628_x) {
	
	_31628_x=static_cast<jule::U64>(((_31628_x >> 8LL) & 71777214294589695LL) | ((_31628_x & 71777214294589695LL) << 8LL));
	_31628_x=static_cast<jule::U64>(((_31628_x >> 16LL) & 281470681808895LL) | ((_31628_x & 281470681808895LL) << 16LL));
	return static_cast<jule::U64>((_31628_x >> 32LL) | (_31628_x << 32LL));
}



inline jule::Int _1ce399a6c_len(jule::Uint _32712_x) {
	if (false) {
		return static_cast<jule::Int>(_1ce399a6c_len32(static_cast<jule::U32>(_32712_x)));
	}
	return static_cast<jule::Int>(_1ce399a6c_len64(static_cast<jule::U64>(_32712_x)));
}



inline jule::Int _1ce399a6c_len8(jule::U8 _33613_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_33613_x)]);
}



inline jule::Int _1ce399a6c_len16(jule::U16 _34218_x) {
	jule::Int _34228_n = jule::Int();
	if (_34218_x >= 256LLU) {
		_34218_x>>=8LL;
		_34228_n=8LL;
	}
	_34228_n = static_cast<jule::Int>(_34228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_34218_x)]));
	return _34228_n;
}



inline jule::Int _1ce399a6c_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LLU) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LLU) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::Int>(_35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]));
	return _35228_n;
}



inline jule::Int _1ce399a6c_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LLU) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LLU) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LLU) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::Int>(_36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]));
	return _36628_n;
}



inline std::tuple<jule::Uint,jule::Uint> _1ce399a6c_add(jule::Uint _38912_x,jule::Uint _38921_y,jule::Uint _38930_carry) {
	jule::Uint _38945_sum = jule::Uint();
	jule::Uint _38956_carry_out = jule::Uint();
	if (false) {
		jule::U32 _39114_s32;
		jule::U32 _39119_c32;
		std::tie(_39114_s32,_39119_c32) = _1ce399a6c_add32(static_cast<jule::U32>(_38912_x),static_cast<jule::U32>(_38921_y),static_cast<jule::U32>(_38930_carry));
		_38945_sum = static_cast<jule::Uint>(_39114_s32);
		_38956_carry_out = static_cast<jule::Uint>(_39119_c32);
		return std::make_tuple(_38945_sum,_38956_carry_out);
	}
	jule::U64 _39410_s64;
	jule::U64 _39415_c64;
	std::tie(_39410_s64,_39415_c64) = _1ce399a6c_add64(static_cast<jule::U64>(_38912_x),static_cast<jule::U64>(_38921_y),static_cast<jule::U64>(_38930_carry));
	_38945_sum = static_cast<jule::Uint>(_39410_s64);
	_38956_carry_out = static_cast<jule::Uint>(_39415_c64);
	return std::make_tuple(_38945_sum,_38956_carry_out);
}



inline std::tuple<jule::U32,jule::U32> _1ce399a6c_add32(jule::U32 _40314_x,jule::U32 _40322_y,jule::U32 _40330_carry) {
	jule::U32 _40344_sum = jule::U32();
	jule::U32 _40354_carryout = jule::U32();
	jule::U64 _4049_sum64 = (static_cast<jule::U64>(_40314_x) + static_cast<jule::U64>(_40322_y)) + static_cast<jule::U64>(_40330_carry);
	_40344_sum=static_cast<jule::U32>(_4049_sum64);
	_40354_carryout=static_cast<jule::U32>(_4049_sum64 >> 32LL);
	return std::make_tuple(_40344_sum,_40354_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1ce399a6c_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>((_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>(((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::Uint,jule::Uint> _1ce399a6c_sub(jule::Uint _43112_x,jule::Uint _43121_y,jule::Uint _43130_borrow) {
	jule::Uint _43146_diff = jule::Uint();
	jule::Uint _43158_borrow_out = jule::Uint();
	if (false) {
		jule::U32 _43314_d32;
		jule::U32 _43319_b32;
		std::tie(_43314_d32,_43319_b32) = _1ce399a6c_sub32(static_cast<jule::U32>(_43112_x),static_cast<jule::U32>(_43121_y),static_cast<jule::U32>(_43130_borrow));
		_43146_diff = static_cast<jule::Uint>(_43314_d32);
		_43158_borrow_out = static_cast<jule::Uint>(_43319_b32);
		return std::make_tuple(_43146_diff,_43158_borrow_out);
	}
	jule::U64 _43610_d64;
	jule::U64 _43615_b64;
	std::tie(_43610_d64,_43615_b64) = _1ce399a6c_sub64(static_cast<jule::U64>(_43112_x),static_cast<jule::U64>(_43121_y),static_cast<jule::U64>(_43130_borrow));
	_43146_diff = static_cast<jule::Uint>(_43610_d64);
	_43158_borrow_out = static_cast<jule::Uint>(_43615_b64);
	return std::make_tuple(_43146_diff,_43158_borrow_out);
}



inline std::tuple<jule::U32,jule::U32> _1ce399a6c_sub32(jule::U32 _44514_x,jule::U32 _44522_y,jule::U32 _44530_borrow) {
	jule::U32 _44545_diff = jule::U32();
	jule::U32 _44556_borrowout = jule::U32();
	_44545_diff=static_cast<jule::U32>((_44514_x - _44522_y) - _44530_borrow);
	_44556_borrowout=static_cast<jule::U32>((((~(_44514_x)) & _44522_y) | ((~(_44514_x ^ _44522_y)) & _44545_diff)) >> 31LL);
	return std::make_tuple(_44545_diff,_44556_borrowout);
}



inline std::tuple<jule::U64,jule::U64> _1ce399a6c_sub64(jule::U64 _46014_x,jule::U64 _46022_y,jule::U64 _46030_borrow) {
	jule::U64 _46045_diff = jule::U64();
	jule::U64 _46056_borrowout = jule::U64();
	_46045_diff=static_cast<jule::U64>((_46014_x - _46022_y) - _46030_borrow);
	_46056_borrowout=static_cast<jule::U64>((((~(_46014_x)) & _46022_y) | ((~(_46014_x ^ _46022_y)) & _46045_diff)) >> 63LL);
	return std::make_tuple(_46045_diff,_46056_borrowout);
}



inline std::tuple<jule::Uint,jule::Uint> _1ce399a6c_mul(jule::Uint _47412_x,jule::Uint _47421_y) {
	jule::Uint _47432_hi = jule::Uint();
	jule::Uint _47442_lo = jule::Uint();
	if (false) {
		jule::U32 _47614_h;
		jule::U32 _47617_l;
		std::tie(_47614_h,_47617_l) = _1ce399a6c_mul32(static_cast<jule::U32>(_47412_x),static_cast<jule::U32>(_47421_y));
		_47432_hi = static_cast<jule::Uint>(_47614_h);
		_47442_lo = static_cast<jule::Uint>(_47617_l);
		return std::make_tuple(_47432_hi,_47442_lo);
	}
	jule::U64 _47910_h;
	jule::U64 _47913_l;
	std::tie(_47910_h,_47913_l) = _1ce399a6c_mul64(static_cast<jule::U64>(_47412_x),static_cast<jule::U64>(_47421_y));
	_47432_hi = static_cast<jule::Uint>(_47910_h);
	_47442_lo = static_cast<jule::Uint>(_47913_l);
	return std::make_tuple(_47432_hi,_47442_lo);
}



inline std::tuple<jule::U32,jule::U32> _1ce399a6c_mul32(jule::U32 _48814_x,jule::U32 _48822_y) {
	jule::U32 _48832_hi = jule::U32();
	jule::U32 _48841_lo = jule::U32();
	jule::U64 _4899_tmp = static_cast<jule::U64>(_48814_x) * static_cast<jule::U64>(_48822_y);
	std::tie(_48832_hi,_48841_lo) = std::make_tuple(static_cast<jule::U32>(_4899_tmp >> 32LL),static_cast<jule::U32>(_4899_tmp));
	return std::make_tuple(_48832_hi,_48841_lo);
}



inline std::tuple<jule::U64,jule::U64> _1ce399a6c_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LLU;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LLU;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LLU;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline std::tuple<jule::Uint,jule::Uint> _1ce399a6c_div(jule::Uint _52112_hi,jule::Uint _52122_lo,jule::Uint _52132_y) {
	jule::Uint _52143_quo = jule::Uint();
	jule::Uint _52154_rem = jule::Uint();
	if (false) {
		jule::U32 _52314_q;
		jule::U32 _52317_r;
		std::tie(_52314_q,_52317_r) = _1ce399a6c_div32(static_cast<jule::U32>(_52112_hi),static_cast<jule::U32>(_52122_lo),static_cast<jule::U32>(_52132_y));
		_52143_quo = static_cast<jule::Uint>(_52314_q);
		_52154_rem = static_cast<jule::Uint>(_52317_r);
		return std::make_tuple(_52143_quo,_52154_rem);
	}
	jule::U64 _52610_q;
	jule::U64 _52613_r;
	std::tie(_52610_q,_52613_r) = _1ce399a6c_div64(static_cast<jule::U64>(_52112_hi),static_cast<jule::U64>(_52122_lo),static_cast<jule::U64>(_52132_y));
	_52143_quo = static_cast<jule::Uint>(_52610_q);
	_52154_rem = static_cast<jule::Uint>(_52613_r);
	return std::make_tuple(_52143_quo,_52154_rem);
}



inline std::tuple<jule::U32,jule::U32> _1ce399a6c_div32(jule::U32 _53414_hi,jule::U32 _53423_lo,jule::U32 _53432_y) {
	jule::U32 _53442_quo = jule::U32();
	jule::U32 _53452_rem = jule::U32();
	if (_53432_y == 0LL) {
		jule::panic(_1ce43d858_DIVIDE_ERROR);
	}
	if ((_53432_y != 0LL) && (_53432_y <= _53414_hi)) {
		jule::panic(_1ce43d858_OVERFLOW_ERROR);
	}
	jule::U64 _5419_z = (static_cast<jule::U64>(_53414_hi) << 32LL) | static_cast<jule::U64>(_53423_lo);
	std::tie(_53442_quo,_53452_rem) = std::make_tuple(static_cast<jule::U32>(jule::div(_5419_z,static_cast<jule::U64>(_53432_y))),static_cast<jule::U32>(jule::mod(_5419_z,static_cast<jule::U64>(_53432_y))));
	return std::make_tuple(_53442_quo,_53452_rem);
}



inline std::tuple<jule::U64,jule::U64> _1ce399a6c_div64(jule::U64 _55014_hi,jule::U64 _55023_lo,jule::U64 _55036_y) {
	jule::U64 _55046_quo = jule::U64();
	jule::U64 _55056_rem = jule::U64();
	
	
	if (_55036_y == 0LL) {
		jule::panic(_1ce43d858_DIVIDE_ERROR);
	}
	if (_55036_y <= _55014_hi) {
		jule::panic(_1ce43d858_OVERFLOW_ERROR);
	}
	jule::Uint _5609_s = static_cast<jule::Uint>(_1ce399a6c_leading_zeros64(_55036_y));
	_55036_y<<=_5609_s;
	jule::U64 _5639_yn1 = _55036_y >> 32LL;
	jule::U64 _5649_yn0 = _55036_y & 4294967295LLU;
	jule::U64 _5659_un32 = (_55014_hi << _5609_s) | (_55023_lo >> (64LL - _5609_s));
	jule::U64 _5669_un10 = _55023_lo << _5609_s;
	jule::U64 _5679_un1 = _5669_un10 >> 32LL;
	jule::U64 _5689_un0 = _5669_un10 & 4294967295LLU;
	jule::U64 _56913_q1 = jule::div(_5659_un32,_5639_yn1);
	jule::U64 _57013_rhat = _5659_un32 - (_56913_q1 * _5639_yn1);
	while ((_56913_q1 >= 4294967296LLU) || ((_56913_q1 * _5649_yn0) > ((4294967296LLU * _57013_rhat) + _5679_un1))) {
		{
			(_56913_q1)--;
			_57013_rhat+=_5639_yn1;
			if (_57013_rhat >= 4294967296LLU) {
				goto _iter_end_4525062128;
			}
		}
	_iter_next_4525062128:;
	}
	_iter_end_4525062128:;
	jule::U64 _5809_un21 = ((_5659_un32 * 4294967296LLU) + _5679_un1) - (_56913_q1 * _55036_y);
	jule::U64 _58113_q0 = jule::div(_5809_un21,_5639_yn1);
	_57013_rhat=static_cast<jule::U64>(_5809_un21 - (_58113_q0 * _5639_yn1));
	while ((_58113_q0 >= 4294967296LLU) || ((_58113_q0 * _5649_yn0) > ((4294967296LLU * _57013_rhat) + _5689_un0))) {
		{
			(_58113_q0)--;
			_57013_rhat+=_5639_yn1;
			if (_57013_rhat >= 4294967296LLU) {
				goto _iter_end_4525067984;
			}
		}
	_iter_next_4525067984:;
	}
	_iter_end_4525067984:;
	_55046_quo = static_cast<jule::U64>((_56913_q1 * 4294967296LLU) + _58113_q0);
	_55056_rem = static_cast<jule::U64>((((_5809_un21 * 4294967296LLU) + _5689_un0) - (_58113_q0 * _55036_y)) >> _5609_s);
	return std::make_tuple(_55046_quo,_55056_rem);
}



inline jule::Uint _1ce399a6c_rem(jule::Uint _59812_hi,jule::Uint _59822_lo,jule::Uint _59832_y) {
	if (false) {
		return static_cast<jule::Uint>(_1ce399a6c_rem32(static_cast<jule::U32>(_59812_hi),static_cast<jule::U32>(_59822_lo),static_cast<jule::U32>(_59832_y)));
	}
	return static_cast<jule::Uint>(_1ce399a6c_rem64(static_cast<jule::U64>(_59812_hi),static_cast<jule::U64>(_59822_lo),static_cast<jule::U64>(_59832_y)));
}



inline jule::U32 _1ce399a6c_rem32(jule::U32 _60814_hi,jule::U32 _60823_lo,jule::U32 _60832_y) {
	return static_cast<jule::U32>(jule::mod((static_cast<jule::U64>(_60814_hi) << 32LL) | static_cast<jule::U64>(_60823_lo),static_cast<jule::U64>(_60832_y)));
}



inline jule::U64 _1ce399a6c_rem64(jule::U64 _61514_hi,jule::U64 _61523_lo,jule::U64 _61532_y) {
	jule::U64 _62213_rem;
	std::tie(std::ignore,_62213_rem) = _1ce399a6c_div64(static_cast<jule::U64>(jule::mod(_61514_hi,_61532_y)),_61523_lo,_61532_y);
	return _62213_rem;
}



inline jule::F64 _1cdceb645_atanh(jule::F64 _7818_x) {
	
	{
		if (!((_7818_x < -1LL) || (_7818_x > 1LL) || (_1cddd8b83_is_nan(_7818_x)))) { goto _case_end_4525313680; }
		_case_begin_4525313680:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4525313504;
		_case_end_4525313680:;
		if (!((_7818_x == 1LL))) { goto _case_end_4525313792; }
		_case_begin_4525313792:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
		}
		goto _match_end_4525313504;
		_case_end_4525313792:;
		if (!((_7818_x == -1LL))) { goto _case_end_4525313904; }
		_case_begin_4525313904:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(-1LL));
		}
		goto _match_end_4525313504;
		_case_end_4525313904:;
		_match_end_4525313504:;
	}
	jule::Bool _8913_sign = false;
	if (_7818_x < 0LL) {
		_7818_x=static_cast<jule::F64>((-(_7818_x)));
		_8913_sign=true;
	}
	jule::F64 _9413_temp = 0LL;
	{
		if (!((_7818_x < 0.000000003725290298461914))) { goto _case_end_4525321216; }
		_case_begin_4525321216:;
		{
			_9413_temp=_7818_x;
		}
		goto _match_end_4525320368;
		_case_end_4525321216:;
		if (!((_7818_x < 0.5))) { goto _case_end_4525321376; }
		_case_begin_4525321376:;
		{
			_9413_temp=static_cast<jule::F64>(_7818_x + _7818_x);
			_9413_temp=static_cast<jule::F64>(0.5 * _1ce16c048_log1p(static_cast<jule::F64>(_9413_temp + jule::div(_9413_temp * _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4525320368;
		_case_end_4525321376:;
		_case_begin_4525320448:;
		{
			_9413_temp=static_cast<jule::F64>(0.5 * _1ce16c048_log1p(static_cast<jule::F64>(jule::div(_7818_x + _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4525320368;
		_case_end_4525320448:;
		_match_end_4525320368:;
	}
	if (_8913_sign) {
		_9413_temp=static_cast<jule::F64>((-(_9413_temp)));
	}
	return _9413_temp;
}



inline jule::U32 _1cdceb9db_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1cdceb9db_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1cdceb9db_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1cdceb9db_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline jule::F64 _1cdd1c545_cos(jule::F64 _14816_x) {
	
	
	
	if (_1cddd8b83_is_nan(_14816_x) || _1cddd8b83_is_inf(_14816_x,0LL)) {
		return static_cast<jule::F64>(_1cddd8b83_nan());
	}
	jule::Bool _15813_sign = false;
	_14816_x=static_cast<jule::F64>(_1cddeab62_abs(_14816_x));
	jule::U64 _16113_j = 0LLU;
	jule::F64 _16213_y = 0LL;
	jule::F64 _16313_z = 0LL;
	if (_14816_x >= 536870912LLU) {
		std::tie(_16113_j,_16313_z) = _1cdd733c0_trig_reduce(_14816_x);
	} else {
		_16113_j=static_cast<jule::U64>(_14816_x * 1.2732395447351628);
		_16213_y=static_cast<jule::F64>(_16113_j);
		if ((_16113_j & 1LL) == 1LL) {
			(_16113_j)++;
			(_16213_y)++;
		}
		_16113_j&=7LL;
		_16313_z=static_cast<jule::F64>(((_14816_x - (_16213_y * 0.7853981256484985)) - (_16213_y * 0.00000003774894707930798)) - (_16213_y * 0.0000000000000026951514290790595));
	}
	if (_16113_j > 3LL) {
		_16113_j-=4LL;
		_15813_sign=(!(_15813_sign));
	}
	if (_16113_j > 1LL) {
		_15813_sign=(!(_15813_sign));
	}
	jule::F64 _1879_zz = _16313_z * _16313_z;
	if ((_16113_j == 1LL) || (_16113_j == 2LL)) {
		_16213_y=static_cast<jule::F64>(_16313_z + ((_16313_z * _1879_zz) * ((((((((((_1cdd1c545__SIN[0LL] * _1879_zz) + _1cdd1c545__SIN[1LL]) * _1879_zz) + _1cdd1c545__SIN[2LL]) * _1879_zz) + _1cdd1c545__SIN[3LL]) * _1879_zz) + _1cdd1c545__SIN[4LL]) * _1879_zz) + _1cdd1c545__SIN[5LL])));
	} else {
		_16213_y=static_cast<jule::F64>((1LL - (0.5 * _1879_zz)) + ((_1879_zz * _1879_zz) * ((((((((((_1cdd1c545__COS[0LL] * _1879_zz) + _1cdd1c545__COS[1LL]) * _1879_zz) + _1cdd1c545__COS[2LL]) * _1879_zz) + _1cdd1c545__COS[3LL]) * _1879_zz) + _1cdd1c545__COS[4LL]) * _1879_zz) + _1cdd1c545__COS[5LL])));
	}
	if (_15813_sign) {
		_16213_y=static_cast<jule::F64>((-(_16213_y)));
	}
	return _16213_y;
}



inline jule::F64 _1cdd1c545_sin(jule::F64 _20516_x) {
	
	
	
	{
		if (!((_20516_x == 0LL) || (_1cddd8b83_is_nan(_20516_x)))) { goto _case_end_4525364384; }
		_case_begin_4525364384:;
		{
			return _20516_x;
		}
		goto _match_end_4525364224;
		_case_end_4525364384:;
		if (!((_1cddd8b83_is_inf(_20516_x,0LL)))) { goto _case_end_4525364496; }
		_case_begin_4525364496:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4525364224;
		_case_end_4525364496:;
		_match_end_4525364224:;
	}
	jule::Bool _21813_sign = false;
	if (_20516_x < 0LL) {
		_20516_x=static_cast<jule::F64>((-(_20516_x)));
		_21813_sign=true;
	}
	jule::U64 _22413_j = 0LLU;
	jule::F64 _22513_y = 0LL;
	jule::F64 _22613_z = 0LL;
	if (_20516_x >= 536870912LLU) {
		std::tie(_22413_j,_22613_z) = _1cdd733c0_trig_reduce(_20516_x);
	} else {
		_22413_j=static_cast<jule::U64>(_20516_x * 1.2732395447351628);
		_22513_y=static_cast<jule::F64>(_22413_j);
		if ((_22413_j & 1LL) == 1LL) {
			(_22413_j)++;
			(_22513_y)++;
		}
		_22413_j&=7LL;
		_22613_z=static_cast<jule::F64>(((_20516_x - (_22513_y * 0.7853981256484985)) - (_22513_y * 0.00000003774894707930798)) - (_22513_y * 0.0000000000000026951514290790595));
	}
	if (_22413_j > 3LL) {
		_21813_sign=(!(_21813_sign));
		_22413_j-=4LL;
	}
	jule::F64 _2469_zz = _22613_z * _22613_z;
	if ((_22413_j == 1LL) || (_22413_j == 2LL)) {
		_22513_y=static_cast<jule::F64>((1LL - (0.5 * _2469_zz)) + ((_2469_zz * _2469_zz) * ((((((((((_1cdd1c545__COS[0LL] * _2469_zz) + _1cdd1c545__COS[1LL]) * _2469_zz) + _1cdd1c545__COS[2LL]) * _2469_zz) + _1cdd1c545__COS[3LL]) * _2469_zz) + _1cdd1c545__COS[4LL]) * _2469_zz) + _1cdd1c545__COS[5LL])));
	} else {
		_22513_y=static_cast<jule::F64>(_22613_z + ((_22613_z * _2469_zz) * ((((((((((_1cdd1c545__SIN[0LL] * _2469_zz) + _1cdd1c545__SIN[1LL]) * _2469_zz) + _1cdd1c545__SIN[2LL]) * _2469_zz) + _1cdd1c545__SIN[3LL]) * _2469_zz) + _1cdd1c545__SIN[4LL]) * _2469_zz) + _1cdd1c545__SIN[5LL])));
	}
	if (_21813_sign) {
		_22513_y=static_cast<jule::F64>((-(_22513_y)));
	}
	return _22513_y;
}



inline jule::F64 _1cdd0066b_tan(jule::F64 _11316_x) {
	
	
	
	{
		if (!((_11316_x == 0LL) || (_1cddd8b83_is_nan(_11316_x)))) { goto _case_end_4525393840; }
		_case_begin_4525393840:;
		{
			return _11316_x;
		}
		goto _match_end_4525393680;
		_case_end_4525393840:;
		if (!((_1cddd8b83_is_inf(_11316_x,0LL)))) { goto _case_end_4525393952; }
		_case_begin_4525393952:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4525393680;
		_case_end_4525393952:;
		_match_end_4525393680:;
	}
	jule::Bool _12613_sign = false;
	if (_11316_x < 0LL) {
		_11316_x=static_cast<jule::F64>((-(_11316_x)));
		_12613_sign=true;
	}
	jule::U64 _13113_j = 0LLU;
	jule::F64 _13213_y = 0LL;
	jule::F64 _13313_z = 0LL;
	if (_11316_x >= 536870912LLU) {
		std::tie(_13113_j,_13313_z) = _1cdd733c0_trig_reduce(_11316_x);
	} else {
		_13113_j=static_cast<jule::U64>(_11316_x * 1.2732395447351628);
		_13213_y=static_cast<jule::F64>(_13113_j);
		if ((_13113_j & 1LL) == 1LL) {
			(_13113_j)++;
			(_13213_y)++;
		}
		_13313_z=static_cast<jule::F64>(((_11316_x - (_13213_y * 0.7853981256484985)) - (_13213_y * 0.00000003774894707930798)) - (_13213_y * 0.0000000000000026951514290790595));
	}
	jule::F64 _1489_zz = _13313_z * _13313_z;
	if (_1489_zz > 0.00000000000001) {
		_13213_y=static_cast<jule::F64>(_13313_z + (_13313_z * jule::div(_1489_zz * ((((_1cdd0066b__TAN_P[0LL] * _1489_zz) + _1cdd0066b__TAN_P[1LL]) * _1489_zz) + _1cdd0066b__TAN_P[2LL]),((((((_1489_zz + _1cdd0066b__TAN_Q[1LL]) * _1489_zz) + _1cdd0066b__TAN_Q[2LL]) * _1489_zz) + _1cdd0066b__TAN_Q[3LL]) * _1489_zz) + _1cdd0066b__TAN_Q[4LL])));
	} else {
		_13213_y=_13313_z;
	}
	if ((_13113_j & 2LL) == 2LL) {
		_13213_y=static_cast<jule::F64>(jule::div(-1LL,_13213_y));
	}
	if (_12613_sign) {
		_13213_y=static_cast<jule::F64>((-(_13213_y)));
	}
	return _13213_y;
}



inline jule::F64 _1cdd58949_mod(jule::F64 _5212_x,jule::F64 _5224_y) {
	if ((((_5224_y == 0LL) || _1cddd8b83_is_inf(_5212_x,0LL)) || _1cddd8b83_is_nan(_5212_x)) || _1cddd8b83_is_nan(_5224_y)) {
		return static_cast<jule::F64>(_1cddd8b83_nan());
	}
	_5224_y=static_cast<jule::F64>(_1cddeab62_abs(_5224_y));
	jule::F64 _5810_yfr;
	jule::Int _5815_yexp;
	std::tie(_5810_yfr,_5815_yexp) = _1cdd6801e_frexp(_5224_y);
	jule::F64 _5913_r = _5212_x;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5212_x)));
	}
	while (_5913_r >= _5224_y) {
		{
			jule::F64 _6514_rfr;
			jule::Int _6523_rexp;
			std::tie(_6514_rfr,_6523_rexp) = _1cdd6801e_frexp(_5913_r);
			if (_6514_rfr < _5810_yfr) {
				_6523_rexp=static_cast<jule::Int>(_6523_rexp - 1LL);
			}
			_5913_r=static_cast<jule::F64>(_5913_r - _1ce0a3226_ldexp(_5224_y,static_cast<jule::Int>(_6523_rexp - _5815_yexp)));
		}
	_iter_next_4525423088:;
	}
	_iter_end_4525423088:;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5913_r)));
	}
	return _5913_r;
}



inline std::tuple<jule::F64,jule::Int> _1cdd6801e_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::Int _4739_exp = jule::Int();
	{
		if (!((_4718_f == 0LL))) { goto _case_end_4525428928; }
		_case_begin_4525428928:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4525428704;
		_case_end_4525428928:;
		if (!((_1cddd8b83_is_inf(_4718_f,0LL)) || (_1cddd8b83_is_nan(_4718_f)))) { goto _case_end_4525429040; }
		_case_begin_4525429040:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4525428704;
		_case_end_4525429040:;
		_match_end_4525428704:;
	}
	std::tie(_4718_f,_4739_exp) = _1cddd8b83_normalize(_4718_f);
	jule::U64 _5613_x = _1cdceb9db_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::Int>((static_cast<jule::Int>((_5613_x >> 52LL) & 2047LL) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>(_5613_x & 9227875636482146303LLU);
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F32 _1cdd74976_nextafter32(jule::F32 _4420_x,jule::F32 _4428_y) {
	jule::F32 _4438_r = jule::F32();
	{
		if (!((_1cddd8b83_is_nan(static_cast<jule::F64>(_4420_x))) || (_1cddd8b83_is_nan(static_cast<jule::F64>(_4428_y))))) { goto _case_end_4525439104; }
		_case_begin_4525439104:;
		{
			_4438_r=static_cast<jule::F32>(_1cddd8b83_nan());
		}
		goto _match_end_4525438160;
		_case_end_4525439104:;
		if (!((_4420_x == _4428_y))) { goto _case_end_4525439600; }
		_case_begin_4525439600:;
		{
			_4438_r=_4420_x;
		}
		goto _match_end_4525438160;
		_case_end_4525439600:;
		if (!((_4420_x == 0LL))) { goto _case_end_4525439280; }
		_case_begin_4525439280:;
		{
			_4438_r=static_cast<jule::F32>(_1cdd70301_copysign(static_cast<jule::F64>(_1cdceb9db_f32_from_bits(1LLU)),static_cast<jule::F64>(_4428_y)));
		}
		goto _match_end_4525438160;
		_case_end_4525439280:;
		if (!(((_4428_y > _4420_x) == (_4420_x > 0LL)))) { goto _case_end_4525440720; }
		_case_begin_4525440720:;
		{
			_4438_r=static_cast<jule::F32>(_1cdceb9db_f32_from_bits(static_cast<jule::U32>(_1cdceb9db_f32_bits(_4420_x) + 1LL)));
		}
		goto _match_end_4525438160;
		_case_end_4525440720:;
		_case_begin_4525438320:;
		{
			_4438_r=static_cast<jule::F32>(_1cdceb9db_f32_from_bits(static_cast<jule::U32>(_1cdceb9db_f32_bits(_4420_x) - 1LL)));
		}
		goto _match_end_4525438160;
		_case_end_4525438320:;
		_match_end_4525438160:;
	}
	return _4438_r;
}



inline jule::F64 _1cdd74976_nextafter(jule::F64 _6618_x,jule::F64 _6626_y) {
	jule::F64 _6636_r = jule::F64();
	{
		if (!((_1cddd8b83_is_nan(_6618_x)) || (_1cddd8b83_is_nan(_6626_y)))) { goto _case_end_4525448832; }
		_case_begin_4525448832:;
		{
			_6636_r=static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4525447888;
		_case_end_4525448832:;
		if (!((_6618_x == _6626_y))) { goto _case_end_4525449344; }
		_case_begin_4525449344:;
		{
			_6636_r=_6618_x;
		}
		goto _match_end_4525447888;
		_case_end_4525449344:;
		if (!((_6618_x == 0LL))) { goto _case_end_4525449008; }
		_case_begin_4525449008:;
		{
			_6636_r=static_cast<jule::F64>(_1cdd70301_copysign(static_cast<jule::F64>(_1cdceb9db_f64_from_bits(1LLU)),_6626_y));
		}
		goto _match_end_4525447888;
		_case_end_4525449008:;
		if (!(((_6626_y > _6618_x) == (_6618_x > 0LL)))) { goto _case_end_4525450256; }
		_case_begin_4525450256:;
		{
			_6636_r=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>(_1cdceb9db_f64_bits(_6618_x) + 1LL)));
		}
		goto _match_end_4525447888;
		_case_end_4525450256:;
		_case_begin_4525448048:;
		{
			_6636_r=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>(_1cdceb9db_f64_bits(_6618_x) - 1LL)));
		}
		goto _match_end_4525447888;
		_case_end_4525448048:;
		_match_end_4525447888:;
	}
	return _6636_r;
}



inline jule::F64 _1cdd70301_copysign(jule::F64 _3917_f,jule::F64 _3925_sign) {
	
	return static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>((_1cdceb9db_f64_bits(_3917_f) & 9223372036854775807LLU) | (_1cdceb9db_f64_bits(_3925_sign) & 9223372036854775808LLU))));
}



inline std::tuple<jule::U64,jule::F64> _1cdd733c0_trig_reduce(jule::F64 _6020_x) {
	jule::U64 _6030_j = jule::U64();
	jule::F64 _6038_z = jule::F64();
	
	if (_6020_x < 0.7853981633974483) {
		_6030_j = 0LL;
		_6038_z = _6020_x;
		return std::make_tuple(_6030_j,_6038_z);
	}
	jule::U64 _6713_ix = _1cdceb9db_f64_bits(_6020_x);
	jule::Int _689_exp = (static_cast<jule::Int>((_6713_ix >> 52LL) & 2047LL) - 1023LL) - 52LL;
	_6713_ix=static_cast<jule::U64>(_6713_ix & 9227875636482146303LLU);
	_6713_ix|=4503599627370496LLU;
	jule::Uint _7410_digit = jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	jule::Uint _7417_bitshift = jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	std::tie(_7410_digit,_7417_bitshift) = std::make_tuple(jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL),jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL));
	jule::U64 _759_z0 = (_1cdd733c0_M_PI4[static_cast<jule::Int>(_7410_digit)] << _7417_bitshift) | (_1cdd733c0_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] >> (64LL - _7417_bitshift));
	jule::U64 _769_z1 = (_1cdd733c0_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] << _7417_bitshift) | (_1cdd733c0_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] >> (64LL - _7417_bitshift));
	jule::U64 _779_z2 = (_1cdd733c0_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] << _7417_bitshift) | (_1cdd733c0_M_PI4[static_cast<jule::Int>(_7410_digit + 3LL)] >> (64LL - _7417_bitshift));
	jule::U64 _7910_z2hi;
	std::tie(_7910_z2hi,std::ignore) = _1ce399a6c_mul64(_779_z2,_6713_ix);
	jule::U64 _8010_z1hi;
	jule::U64 _8016_z1lo;
	std::tie(_8010_z1hi,_8016_z1lo) = _1ce399a6c_mul64(_769_z1,_6713_ix);
	jule::U64 _819_z0lo = _759_z0 * _6713_ix;
	jule::U64 _8210_lo;
	jule::U64 _8214_c;
	std::tie(_8210_lo,_8214_c) = _1ce399a6c_add64(_8016_z1lo,_7910_z2hi,0LLU);
	jule::U64 _8314_hi;
	std::tie(_8314_hi,std::ignore) = _1ce399a6c_add64(_819_z0lo,_8010_z1hi,_8214_c);
	_6030_j=static_cast<jule::U64>(_8314_hi >> 61LL);
	_8314_hi=static_cast<jule::U64>((_8314_hi << 3LL) | (_8210_lo >> 61LL));
	jule::Uint _889_lz = static_cast<jule::Uint>(_1ce399a6c_leading_zeros64(_8314_hi));
	jule::U64 _899_e = static_cast<jule::U64>(1023LL - (_889_lz + 1LL));
	_8314_hi=static_cast<jule::U64>((_8314_hi << (_889_lz + 1LL)) | (_8210_lo >> (64LL - (_889_lz + 1LL))));
	_8314_hi>>=12LL;
	_8314_hi|=static_cast<jule::U64>(_899_e << 52LL);
	_6038_z=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(_8314_hi));
	if ((_6030_j & 1LL) == 1LL) {
		(_6030_j)++;
		_6030_j&=7LL;
		(_6038_z)--;
	}
	_6030_j = _6030_j;
	_6038_z = static_cast<jule::F64>(_6038_z * 0.7853981633974483);
	return std::make_tuple(_6030_j,_6038_z);
}



inline jule::F64 _1cdd944ce_atan2(jule::F64 _6014_y,jule::F64 _6022_x) {
	{
		if (!((_1cddd8b83_is_nan(_6014_y)) || (_1cddd8b83_is_nan(_6022_x)))) { goto _case_end_4525489552; }
		_case_begin_4525489552:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4525489296;
		_case_end_4525489552:;
		if (!((_6014_y == 0LL))) { goto _case_end_4525489664; }
		_case_begin_4525489664:;
		{
			if ((_6022_x >= 0LL) && (!(_1ce0be9a1_signbit(_6022_x)))) {
				return static_cast<jule::F64>(_1cdd70301_copysign(0LL,_6014_y));
			}
			return static_cast<jule::F64>(_1cdd70301_copysign(3.141592653589793,_6014_y));
		}
		goto _match_end_4525489296;
		_case_end_4525489664:;
		if (!((_6022_x == 0LL))) { goto _case_end_4525491856; }
		_case_begin_4525491856:;
		{
			return static_cast<jule::F64>(_1cdd70301_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4525489296;
		_case_end_4525491856:;
		if (!((_1cddd8b83_is_inf(_6022_x,0LL)))) { goto _case_end_4525491952; }
		_case_begin_4525491952:;
		{
			if (_1cddd8b83_is_inf(_6022_x,1LL)) {
				{
					if (!((_1cddd8b83_is_inf(_6014_y,0LL)))) { goto _case_end_4525500080; }
					_case_begin_4525500080:;
					{
						return static_cast<jule::F64>(_1cdd70301_copysign(0.7853981633974483,_6014_y));
					}
					goto _match_end_4525498560;
					_case_end_4525500080:;
					_case_begin_4525498736:;
					{
						return static_cast<jule::F64>(_1cdd70301_copysign(0LL,_6014_y));
					}
					goto _match_end_4525498560;
					_case_end_4525498736:;
					_match_end_4525498560:;
				}
			}
			{
				if (!((_1cddd8b83_is_inf(_6014_y,0LL)))) { goto _case_end_4525502448; }
				_case_begin_4525502448:;
				{
					return static_cast<jule::F64>(_1cdd70301_copysign(2.356194490192345,_6014_y));
				}
				goto _match_end_4525498880;
				_case_end_4525502448:;
				_case_begin_4525498960:;
				{
					return static_cast<jule::F64>(_1cdd70301_copysign(3.141592653589793,_6014_y));
				}
				goto _match_end_4525498880;
				_case_end_4525498960:;
				_match_end_4525498880:;
			}
		}
		goto _match_end_4525489296;
		_case_end_4525491952:;
		if (!((_1cddd8b83_is_inf(_6014_y,0LL)))) { goto _case_end_4525492048; }
		_case_begin_4525492048:;
		{
			return static_cast<jule::F64>(_1cdd70301_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4525489296;
		_case_end_4525492048:;
		_match_end_4525489296:;
	}
	jule::F64 _929_q = _1ce3402c6_atan(static_cast<jule::F64>(jule::div(_6014_y,_6022_x)));
	if (_6022_x < 0LL) {
		if (_929_q <= 0LL) {
			return static_cast<jule::F64>(_929_q + 3.141592653589793);
		}
		return static_cast<jule::F64>(_929_q - 3.141592653589793);
	}
	return _929_q;
}



inline jule::F64 _1cdd93ea1_floor(jule::F64 _4414_x) {
	if (((_4414_x == 0LL) || _1cddd8b83_is_nan(_4414_x)) || _1cddd8b83_is_inf(_4414_x,0LL)) {
		return _4414_x;
	}
	if (_4414_x < 0LL) {
		jule::F64 _4918_d;
		jule::F64 _4921_fract;
		std::tie(_4918_d,_4921_fract) = _1cdee74cd_modf(static_cast<jule::F64>((-(_4414_x))));
		if (_4921_fract != 0LL) {
			_4918_d=static_cast<jule::F64>(_4918_d + 1LL);
		}
		return static_cast<jule::F64>((-(_4918_d)));
	}
	jule::F64 _5510_d;
	std::tie(_5510_d,std::ignore) = _1cdee74cd_modf(_4414_x);
	return _5510_d;
}



inline jule::F64 _1cdd93ea1_ceil(jule::F64 _6513_x) {
	return static_cast<jule::F64>((-(_1cdd93ea1_floor(static_cast<jule::F64>((-(_6513_x)))))));
}



inline jule::F64 _1cdd93ea1_trunc(jule::F64 _7314_x) {
	if (((_7314_x == 0LL) || _1cddd8b83_is_nan(_7314_x)) || _1cddd8b83_is_inf(_7314_x,0LL)) {
		return _7314_x;
	}
	jule::F64 _7710_d;
	std::tie(_7710_d,std::ignore) = _1cdee74cd_modf(_7314_x);
	return _7710_d;
}



inline jule::F64 _1cdd93ea1_round(jule::F64 _8714_x) {
	jule::U64 _9713_bits = _1cdceb9db_f64_bits(_8714_x);
	jule::Uint _9813_e = static_cast<jule::Uint>(_9713_bits >> 52LL) & 2047LL;
	if (_9813_e < 1023LL) {
		_9713_bits&=9223372036854775808LLU;
		if (_9813_e == 1022LL) {
			_9713_bits|=4607182418800017408LL;
		}
	} else if (_9813_e < 1075LL) {
		
		_9813_e-=1023LL;
		_9713_bits+=static_cast<jule::Uint>(2251799813685248LLU >> _9813_e);
		_9713_bits&=static_cast<jule::Uint>((~(4503599627370495LLU >> _9813_e)));
	}
	return static_cast<jule::F64>(_1cdceb9db_f64_from_bits(_9713_bits));
}



inline jule::F64 _1cdd93ea1_round_even(jule::F64 _12419_x) {
	jule::U64 _13613_bits = _1cdceb9db_f64_bits(_12419_x);
	jule::Uint _13713_e = static_cast<jule::Uint>(_13613_bits >> 52LL) & 2047LL;
	if (_13713_e >= 1023LL) {
		
		_13713_e-=1023LL;
		_13613_bits+=static_cast<jule::U64>((2251799813685247LLU + ((_13613_bits >> (52LL - _13713_e)) & 1LL)) >> _13713_e);
		_13613_bits&=static_cast<jule::Uint>((~(4503599627370495LLU >> _13713_e)));
	} else if ((_13713_e == 1022LL) && ((_13613_bits & 4503599627370495LLU) != 0LL)) {
		_13613_bits=static_cast<jule::U64>((_13613_bits & 9223372036854775808LLU) | 4607182418800017408LL);
	} else {
		_13613_bits&=9223372036854775808LLU;
	}
	return static_cast<jule::F64>(_1cdceb9db_f64_from_bits(_13613_bits));
}



inline jule::F64 _1cddd8b83_nan(void) {
	return static_cast<jule::F64>(_1cdceb9db_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1cddd8b83_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _1cddd8b83_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_1cdceb9db_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_1cdceb9db_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1cddd8b83_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline std::tuple<jule::F64,jule::Int> _1cddd8b83_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::Int _8232_exp = jule::Int();
	
	if (_1cddeab62_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_8224_y = static_cast<jule::F64>(_8214_x * 4503599627370496LLU);
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline std::tuple<jule::F64,jule::F64> _1cddc17d6_sincos(jule::F64 _4619_x) {
	jule::F64 _4629_sin = jule::F64();
	jule::F64 _4639_cos = jule::F64();
	
	
	
	{
		if (!((_4619_x == 0LL))) { goto _case_end_4525549072; }
		_case_begin_4525549072:;
		{
			_4629_sin = _4619_x;
			_4639_cos = 1LL;
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4525548912;
		_case_end_4525549072:;
		if (!((_1cddd8b83_is_nan(_4619_x)) || (_1cddd8b83_is_inf(_4619_x,0LL)))) { goto _case_end_4525549184; }
		_case_begin_4525549184:;
		{
			_4629_sin = static_cast<jule::F64>(_1cddd8b83_nan());
			_4639_cos = static_cast<jule::F64>(_1cddd8b83_nan());
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4525548912;
		_case_end_4525549184:;
		_match_end_4525548912:;
	}
	jule::Bool _5914_sin_sign = false;
	jule::Bool _5928_cos_sign = false;
	std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple(false,false);
	if (_4619_x < 0LL) {
		_4619_x=static_cast<jule::F64>((-(_4619_x)));
		_5914_sin_sign=true;
	}
	jule::U64 _6513_j = 0LLU;
	jule::F64 _6613_y = 0LL;
	jule::F64 _6713_z = 0LL;
	if (_4619_x >= 536870912LLU) {
		std::tie(_6513_j,_6713_z) = _1cdd733c0_trig_reduce(_4619_x);
	} else {
		_6513_j=static_cast<jule::U64>(_4619_x * 1.2732395447351628);
		_6613_y=static_cast<jule::F64>(_6513_j);
		if ((_6513_j & 1LL) == 1LL) {
			(_6513_j)++;
			(_6613_y)++;
		}
		_6513_j&=7LL;
		_6713_z=static_cast<jule::F64>(((_4619_x - (_6613_y * 0.7853981256484985)) - (_6613_y * 0.00000003774894707930798)) - (_6613_y * 0.0000000000000026951514290790595));
	}
	if (_6513_j > 3LL) {
		_6513_j-=4LL;
		std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple((!(_5914_sin_sign)),(!(_5928_cos_sign)));
	}
	if (_6513_j > 1LL) {
		_5928_cos_sign=(!(_5928_cos_sign));
	}
	jule::F64 _899_zz = _6713_z * _6713_z;
	_4639_cos=static_cast<jule::F64>((1LL - (0.5 * _899_zz)) + ((_899_zz * _899_zz) * ((((((((((_1cdd1c545__COS[0LL] * _899_zz) + _1cdd1c545__COS[1LL]) * _899_zz) + _1cdd1c545__COS[2LL]) * _899_zz) + _1cdd1c545__COS[3LL]) * _899_zz) + _1cdd1c545__COS[4LL]) * _899_zz) + _1cdd1c545__COS[5LL])));
	_4629_sin=static_cast<jule::F64>(_6713_z + ((_6713_z * _899_zz) * ((((((((((_1cdd1c545__SIN[0LL] * _899_zz) + _1cdd1c545__SIN[1LL]) * _899_zz) + _1cdd1c545__SIN[2LL]) * _899_zz) + _1cdd1c545__SIN[3LL]) * _899_zz) + _1cdd1c545__SIN[4LL]) * _899_zz) + _1cdd1c545__SIN[5LL])));
	if ((_6513_j == 1LL) || (_6513_j == 2LL)) {
		std::tie(_4629_sin,_4639_cos) = std::make_tuple(_4639_cos,_4629_sin);
	}
	if (_5928_cos_sign) {
		_4639_cos=static_cast<jule::F64>((-(_4639_cos)));
	}
	if (_5914_sin_sign) {
		_4629_sin=static_cast<jule::F64>((-(_4629_sin)));
	}
	return std::make_tuple(_4629_sin,_4639_cos);
}



inline jule::F64 _1cdde6014_dim(jule::F64 _4412_x,jule::F64 _4420_y) {
	jule::F64 _509_v = _4412_x - _4420_y;
	if (_509_v <= 0LL) {
		return 0LL;
	}
	return _509_v;
}



inline jule::F64 _1cdde6014_max(jule::F64 _6612_x,jule::F64 _6620_y) {
	{
		if (!((_1cddd8b83_is_inf(_6612_x,1LL)) || (_1cddd8b83_is_inf(_6620_y,1LL)))) { goto _case_end_4525584432; }
		_case_begin_4525584432:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
		}
		goto _match_end_4525584208;
		_case_end_4525584432:;
		if (!((_1cddd8b83_is_nan(_6612_x)) || (_1cddd8b83_is_nan(_6620_y)))) { goto _case_end_4525584544; }
		_case_begin_4525584544:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4525584208;
		_case_end_4525584544:;
		if (!(((_6612_x == 0LL) && (_6612_x == _6620_y)))) { goto _case_end_4525584656; }
		_case_begin_4525584656:;
		{
			if (_1ce0be9a1_signbit(_6612_x)) {
				return _6620_y;
			}
			return _6612_x;
		}
		goto _match_end_4525584208;
		_case_end_4525584656:;
		_match_end_4525584208:;
	}
	if (_6612_x > _6620_y) {
		return _6612_x;
	}
	return _6620_y;
}



inline jule::F64 _1cdde6014_min(jule::F64 _9212_x,jule::F64 _9220_y) {
	{
		if (!((_1cddd8b83_is_inf(_9212_x,-1LL)) || (_1cddd8b83_is_inf(_9220_y,-1LL)))) { goto _case_end_4525590784; }
		_case_begin_4525590784:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(-1LL));
		}
		goto _match_end_4525590592;
		_case_end_4525590784:;
		if (!((_1cddd8b83_is_nan(_9212_x)) || (_1cddd8b83_is_nan(_9220_y)))) { goto _case_end_4525590896; }
		_case_begin_4525590896:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4525590592;
		_case_end_4525590896:;
		if (!(((_9212_x == 0LL) && (_9212_x == _9220_y)))) { goto _case_end_4525591008; }
		_case_begin_4525591008:;
		{
			if (_1ce0be9a1_signbit(_9212_x)) {
				return _9212_x;
			}
			return _9220_y;
		}
		goto _match_end_4525590592;
		_case_end_4525591008:;
		_match_end_4525590592:;
	}
	if (_9212_x < _9220_y) {
		return _9212_x;
	}
	return _9220_y;
}



inline jule::F64 _1cddda0b3_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		if (!((_1cddd8b83_is_nan(_11112_x)) || (_1cddd8b83_is_inf(_11112_x,1LL)))) { goto _case_end_4525603952; }
		_case_begin_4525603952:;
		{
			return _11112_x;
		}
		goto _match_end_4525603776;
		_case_end_4525603952:;
		if (!((_11112_x < 0LL))) { goto _case_end_4525604064; }
		_case_begin_4525604064:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4525603776;
		_case_end_4525604064:;
		if (!((_11112_x == 0LL))) { goto _case_end_4525604176; }
		_case_begin_4525604176:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(-1LL));
		}
		goto _match_end_4525603776;
		_case_end_4525604176:;
		_match_end_4525603776:;
	}
	jule::F64 _13314_f1;
	jule::Int _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _1cdd6801e_frexp(_11112_x);
	if (_13314_f1 < 0.7071067811865476) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = _13314_f1 - 1LL;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,2LL + _1389_f);
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586))))));
	jule::F64 _1469_t2 = _1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f));
}



inline jule::F64 _1cde4a73e_expm1(jule::F64 _15618_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1cddd8b83_is_inf(_15618_x,1LL)) || (_1cddd8b83_is_nan(_15618_x)))) { goto _case_end_4525632416; }
		_case_begin_4525632416:;
		{
			return _15618_x;
		}
		goto _match_end_4525632272;
		_case_end_4525632416:;
		if (!((_1cddd8b83_is_inf(_15618_x,-1LL)))) { goto _case_end_4525632528; }
		_case_begin_4525632528:;
		{
			return -1LL;
		}
		goto _match_end_4525632272;
		_case_end_4525632528:;
		_match_end_4525632272:;
	}
	jule::F64 _18013_absx = _15618_x;
	jule::Bool _18113_sign = false;
	if (_15618_x < 0LL) {
		_18013_absx=static_cast<jule::F64>((-(_18013_absx)));
		_18113_sign=true;
	}
	if (_18013_absx >= 38.816242111356935) {
		if (_18113_sign) {
			return -1LL;
		}
		if (_18013_absx >= 709.782712893384) {
			return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
		}
	}
	jule::F64 _19813_c = 0LL;
	jule::Int _19913_k = 0LL;
	if (_18013_absx > 0.34657359027997264) {
		jule::F64 _20117_hi = 0LL;
		jule::F64 _20217_lo = 0LL;
		if (_18013_absx < 1.0397207708399179) {
			if ((!(_18113_sign))) {
				_20117_hi=static_cast<jule::F64>(_15618_x - 0.6931471803691238);
				_20217_lo=0.00000000019082149292705877;
				_19913_k=1LL;
			} else {
				_20117_hi=static_cast<jule::F64>(_15618_x + 0.6931471803691238);
				_20217_lo=-0.00000000019082149292705877;
				_19913_k=-1LL;
			}
		} else {
			if ((!(_18113_sign))) {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) + 0.5);
			} else {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) - 0.5);
			}
			jule::F64 _21917_t = static_cast<jule::F64>(_19913_k);
			_20117_hi=static_cast<jule::F64>(_15618_x - (_21917_t * 0.6931471803691238));
			_20217_lo=static_cast<jule::F64>(_21917_t * 0.00000000019082149292705877);
		}
		_15618_x=static_cast<jule::F64>(_20117_hi - _20217_lo);
		_19813_c=static_cast<jule::F64>((_20117_hi - _15618_x) - _20217_lo);
	} else if (_18013_absx < 0.00000000000000005551115123125783) {
		return _15618_x;
	} else {
		_19913_k=0LL;
	}
	jule::F64 _2329_hfx = 0.5 * _15618_x;
	jule::F64 _2339_hxs = _15618_x * _2329_hfx;
	jule::F64 _2349_r1 = 1LL + (_2339_hxs * (-0.03333333333333313 + (_2339_hxs * (0.0015873015872548146 + (_2339_hxs * (-0.0000793650757867488 + (_2339_hxs * (0.000004008217827329362 + (_2339_hxs * -0.00000020109921818362437)))))))));
	jule::F64 _23513_t = 3LL - (_2349_r1 * _2329_hfx);
	jule::F64 _23613_e = _2339_hxs * jule::div(_2349_r1 - _23513_t,6LL - (_15618_x * _23513_t));
	if (_19913_k == 0LL) {
		return static_cast<jule::F64>(_15618_x - ((_15618_x * _23613_e) - _2339_hxs));
	}
	_23613_e=static_cast<jule::F64>((_15618_x * (_23613_e - _19813_c)) - _19813_c);
	_23613_e-=_2339_hxs;
	{
		if (!((_19913_k == -1LL))) { goto _case_end_4525678304; }
		_case_begin_4525678304:;
		{
			return static_cast<jule::F64>((0.5 * (_15618_x - _23613_e)) - 0.5);
		}
		goto _match_end_4525679056;
		_case_end_4525678304:;
		if (!((_19913_k == 1LL))) { goto _case_end_4525678144; }
		_case_begin_4525678144:;
		{
			if (_15618_x < -0.25) {
				return static_cast<jule::F64>(-2LL * (_23613_e - (_15618_x + 0.5)));
			}
			return static_cast<jule::F64>(1LL + (2LL * (_15618_x - _23613_e)));
		}
		goto _match_end_4525679056;
		_case_end_4525678144:;
		if (!((_19913_k <= -2LL) || (_19913_k > 56LL))) { goto _case_end_4525679456; }
		_case_begin_4525679456:;
		{
			jule::F64 _25117_y = 1LL - (_23613_e - _15618_x);
			_25117_y=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>(_1cdceb9db_f64_bits(_25117_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
			return static_cast<jule::F64>(_25117_y - 1LL);
		}
		goto _match_end_4525679056;
		_case_end_4525679456:;
		_match_end_4525679056:;
	}
	if (_19913_k < 20LL) {
		_23513_t=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>(4607182418800017408LL - (9007199254740992LL >> static_cast<jule::Uint>(_19913_k)))));
		jule::F64 _25717_y = _23513_t - (_23613_e - _15618_x);
		_25717_y=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>(_1cdceb9db_f64_bits(_25717_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
		return _25717_y;
	}
	_23513_t=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>(static_cast<jule::U64>(1023LL - _19913_k) << 52LL)));
	jule::F64 _26213_y = _15618_x - (_23613_e + _23513_t);
	(_26213_y)++;
	_26213_y=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>(_1cdceb9db_f64_bits(_26213_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
	return _26213_y;
}



inline jule::F64 _1cddeab62_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>(_1cdceb9db_f64_bits(_4312_x) & 9223372036854775807LLU)));
}



inline jule::F64 _1cddeabd9_j1(jule::F64 _10515_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1cddd8b83_is_nan(_10515_x)))) { goto _case_end_4525705824; }
		_case_begin_4525705824:;
		{
			return _10515_x;
		}
		goto _match_end_4525705664;
		_case_end_4525705824:;
		if (!((_1cddd8b83_is_inf(_10515_x,0LL)) || (_10515_x == 0LL))) { goto _case_end_4525705936; }
		_case_begin_4525705936:;
		{
			return 0LL;
		}
		goto _match_end_4525705664;
		_case_end_4525705936:;
		_match_end_4525705664:;
	}
	jule::Bool _12613_sign = false;
	if (_10515_x < 0LL) {
		_10515_x=static_cast<jule::F64>((-(_10515_x)));
		_12613_sign=true;
	}
	if (_10515_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _1cddc17d6_sincos(_10515_x);
		jule::F64 _13317_ss = (-(_13214_s)) - _13217_c;
		jule::F64 _13417_cc = _13214_s - _13217_c;
		if (_10515_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = _1cdd1c545_cos(static_cast<jule::F64>(_10515_x + _10515_x));
			if ((_13214_s * _13217_c) > 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10515_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_1ce260108_sqrt(_10515_x)));
		} else {
			jule::F64 _15317_u = _1cddeabd9_pone(_10515_x);
			jule::F64 _15417_v = _1cddeabd9_qone(_10515_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_1ce260108_sqrt(_10515_x)));
		}
		if (_12613_sign) {
			return static_cast<jule::F64>((-(_14917_z)));
		}
		return _14917_z;
	}
	if (_10515_x < 0.000000007450580596923828) {
		return static_cast<jule::F64>(0.5 * _10515_x);
	}
	jule::F64 _16613_z = _10515_x * _10515_x;
	jule::F64 _16713_r = _16613_z * (-0.0625 + (_16613_z * (0.001407056669551897 + (_16613_z * (-0.00001599556310840356 + (_16613_z * 0.000000049672799960958445))))));
	jule::F64 _1689_s = 1LL + (_16613_z * (0.019153759953836346 + (_16613_z * (0.00018594678558863092 + (_16613_z * (0.0000011771846404262368 + (_16613_z * (0.0000000050463625707621704 + (_16613_z * 0.000000000012354227442613791)))))))));
	_16713_r*=_10515_x;
	_16613_z=static_cast<jule::F64>((0.5 * _10515_x) + jule::div(_16713_r,_1689_s));
	if (_12613_sign) {
		return static_cast<jule::F64>((-(_16613_z)));
	}
	return _16613_z;
}



inline jule::F64 _1cddeabd9_y1(jule::F64 _18411_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18411_x < 0LL) || (_1cddd8b83_is_nan(_18411_x)))) { goto _case_end_4525742144; }
		_case_begin_4525742144:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4525741968;
		_case_end_4525742144:;
		if (!((_1cddd8b83_is_inf(_18411_x,1LL)))) { goto _case_end_4525742256; }
		_case_begin_4525742256:;
		{
			return 0LL;
		}
		goto _match_end_4525741968;
		_case_end_4525742256:;
		if (!((_18411_x == 0LL))) { goto _case_end_4525742368; }
		_case_begin_4525742368:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(-1LL));
		}
		goto _match_end_4525741968;
		_case_end_4525742368:;
		_match_end_4525741968:;
	}
	if (_18411_x >= 2LL) {
		jule::F64 _20814_s;
		jule::F64 _20817_c;
		std::tie(_20814_s,_20817_c) = _1cddc17d6_sincos(_18411_x);
		jule::F64 _20917_ss = (-(_20814_s)) - _20817_c;
		jule::F64 _21017_cc = _20814_s - _20817_c;
		if (_18411_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _21417_z = _1cdd1c545_cos(static_cast<jule::F64>(_18411_x + _18411_x));
			if ((_20814_s * _20817_c) > 0LL) {
				_21017_cc=static_cast<jule::F64>(jule::div(_21417_z,_20917_ss));
			} else {
				_20917_ss=static_cast<jule::F64>(jule::div(_21417_z,_21017_cc));
			}
		}
		jule::F64 _23217_z = 0LL;
		if (_18411_x > 5188146770730811392LL) {
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _20917_ss,_1ce260108_sqrt(_18411_x)));
		} else {
			jule::F64 _23617_u = _1cddeabd9_pone(_18411_x);
			jule::F64 _23717_v = _1cddeabd9_qone(_18411_x);
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23617_u * _20917_ss) + (_23717_v * _21017_cc)),_1ce260108_sqrt(_18411_x)));
		}
		return _23217_z;
	}
	if (_18411_x <= 0.00000000000000005551115123125783) {
		return static_cast<jule::F64>(jule::div(-0.6366197723675814,_18411_x));
	}
	jule::F64 _2459_z = _18411_x * _18411_x;
	jule::F64 _2469_u = -0.19605709064623894 + (_2459_z * (0.05044387166398113 + (_2459_z * (-0.0019125689587576355 + (_2459_z * (0.00002352526005616105 + (_2459_z * -0.00000009190991580398789)))))));
	jule::F64 _2479_v = 1LL + (_2459_z * (0.01991673182366499 + (_2459_z * (0.00020255258102513517 + (_2459_z * (0.0000013560880109751623 + (_2459_z * (0.000000006227414523646215 + (_2459_z * 0.000000000016655924620799208)))))))));
	return static_cast<jule::F64>((_18411_x * jule::div(_2469_u,_2479_v)) + (0.6366197723675814 * ((_1cddeabd9_j1(_18411_x) * _1cddda0b3_log(_18411_x)) - jule::div(1LL,_18411_x))));
}



inline jule::F64 _1cddeabd9_pone(jule::F64 _3289_x) {
	jule::Array<jule::F64,6>* _32913_p = nullptr;
	jule::Array<jule::F64,5>* _33013_q = nullptr;
	if (_3289_x >= 8LL) {
		_32913_p=(&(_1cddeabd9_P_1R8));
		_33013_q=(&(_1cddeabd9_P_1S8));
	} else if (_3289_x >= 4.5454) {
		_32913_p=(&(_1cddeabd9_P_1R5));
		_33013_q=(&(_1cddeabd9_P_1S5));
	} else if (_3289_x >= 2.8571) {
		_32913_p=(&(_1cddeabd9_P_1R3));
		_33013_q=(&(_1cddeabd9_P_1S3));
	} else if (_3289_x >= 2LL) {
		_32913_p=(&(_1cddeabd9_P_1R2));
		_33013_q=(&(_1cddeabd9_P_1S2));
	}
	{
		jule::F64 _34513_z = jule::div(1LL,_3289_x * _3289_x);
		jule::F64 _34613_r = (*(_32913_p))[0LL] + (_34513_z * ((*(_32913_p))[1LL] + (_34513_z * ((*(_32913_p))[2LL] + (_34513_z * ((*(_32913_p))[3LL] + (_34513_z * ((*(_32913_p))[4LL] + (_34513_z * (*(_32913_p))[5LL])))))))));
		jule::F64 _34713_s = 1LL + (_34513_z * ((*(_33013_q))[0LL] + (_34513_z * ((*(_33013_q))[1LL] + (_34513_z * ((*(_33013_q))[2LL] + (_34513_z * ((*(_33013_q))[3LL] + (_34513_z * (*(_33013_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34613_r,_34713_s));
	}
}



inline jule::F64 _1cddeabd9_qone(jule::F64 _4339_x) {
	jule::Array<jule::F64,6>* _43413_p = nullptr;
	jule::Array<jule::F64,6>* _43513_q = nullptr;
	if (_4339_x >= 8LL) {
		_43413_p=(&(_1cddeabd9_Q_1R8));
		_43513_q=(&(_1cddeabd9_Q_1S8));
	} else if (_4339_x >= 4.5454) {
		_43413_p=(&(_1cddeabd9_Q_1R5));
		_43513_q=(&(_1cddeabd9_Q_1S5));
	} else if (_4339_x >= 2.8571) {
		_43413_p=(&(_1cddeabd9_Q_1R3));
		_43513_q=(&(_1cddeabd9_Q_1S3));
	} else if (_4339_x >= 2LL) {
		_43413_p=(&(_1cddeabd9_Q_1R2));
		_43513_q=(&(_1cddeabd9_Q_1S2));
	}
	{
		jule::F64 _45013_z = jule::div(1LL,_4339_x * _4339_x);
		jule::F64 _45113_r = (*(_43413_p))[0LL] + (_45013_z * ((*(_43413_p))[1LL] + (_45013_z * ((*(_43413_p))[2LL] + (_45013_z * ((*(_43413_p))[3LL] + (_45013_z * ((*(_43413_p))[4LL] + (_45013_z * (*(_43413_p))[5LL])))))))));
		jule::F64 _45213_s = 1LL + (_45013_z * ((*(_43513_q))[0LL] + (_45013_z * ((*(_43513_q))[1LL] + (_45013_z * ((*(_43513_q))[2LL] + (_45013_z * ((*(_43513_q))[3LL] + (_45013_z * ((*(_43513_q))[4LL] + (_45013_z * (*(_43513_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(0.375 + jule::div(_45113_r,_45213_s),_4339_x));
	}
}



inline jule::U64 _1cdee28c4_zero(jule::U64 _409_x) {
	if (_409_x == 0LL) {
		return 1LL;
	}
	return 0LL;
}



inline jule::U64 _1cdee28c4_nonzero(jule::U64 _4912_x) {
	if (_4912_x != 0LL) {
		return 1LL;
	}
	return 0LL;
}



inline std::tuple<jule::U64,jule::U64> _1cdee28c4_shl(jule::U64 _588_u1,jule::U64 _5817_u2,jule::Uint _5826_n) {
	jule::U64 _5837_r1 = jule::U64();
	jule::U64 _5846_r2 = jule::U64();
	_5837_r1=static_cast<jule::U64>(((_588_u1 << _5826_n) | (_5817_u2 >> (64LL - _5826_n))) | (_5817_u2 << (_5826_n - 64LL)));
	_5846_r2=static_cast<jule::U64>(_5817_u2 << _5826_n);
	return std::make_tuple(_5837_r1,_5846_r2);
}



inline std::tuple<jule::U64,jule::U64> _1cdee28c4_shr(jule::U64 _648_u1,jule::U64 _6417_u2,jule::Uint _6426_n) {
	jule::U64 _6437_r1 = jule::U64();
	jule::U64 _6446_r2 = jule::U64();
	jule::U64 _7113_shift = _648_u1;
	jule::Uint _7213_shift_n = _6426_n - 64LL;
	while ((_7113_shift > 0LL) && (_7213_shift_n > 0LL)) {
		{
			(_7213_shift_n)--;
			_7113_shift>>=1LL;
		}
	_iter_next_4525816784:;
	}
	_iter_end_4525816784:;
	_6446_r2=static_cast<jule::U64>(((_6417_u2 >> _6426_n) | (_648_u1 << (64LL - _6426_n))) | _7113_shift);
	_6437_r1=static_cast<jule::U64>(_648_u1 >> _6426_n);
	return std::make_tuple(_6437_r1,_6446_r2);
}



inline std::tuple<jule::U64,jule::U64> _1cdee28c4_shrcompress(jule::U64 _8716_u1,jule::U64 _8725_u2,jule::Uint _8734_n) {
	jule::U64 _8745_r1 = jule::U64();
	jule::U64 _8754_r2 = jule::U64();
	{
		if (!((_8734_n == 0LL))) { goto _case_end_4525822752; }
		_case_begin_4525822752:;
		{
			_8745_r1 = _8716_u1;
			_8754_r2 = _8725_u2;
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4525822512;
		_case_end_4525822752:;
		if (!((_8734_n == 64LL))) { goto _case_end_4525822864; }
		_case_begin_4525822864:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_8716_u1 | _1cdee28c4_nonzero(_8725_u2));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4525822512;
		_case_end_4525822864:;
		if (!((_8734_n >= 128LL))) { goto _case_end_4525822976; }
		_case_begin_4525822976:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_1cdee28c4_nonzero(static_cast<jule::U64>(_8716_u1 | _8725_u2)));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4525822512;
		_case_end_4525822976:;
		if (!((_8734_n < 64LL))) { goto _case_end_4525823088; }
		_case_begin_4525823088:;
		{
			std::tie(_8745_r1,_8754_r2) = _1cdee28c4_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_1cdee28c4_nonzero(static_cast<jule::U64>(_8725_u2 & ((1LL << _8734_n) - 1LL))));
		}
		goto _match_end_4525822512;
		_case_end_4525823088:;
		if (!((_8734_n < 128LL))) { goto _case_end_4525823200; }
		_case_begin_4525823200:;
		{
			std::tie(_8745_r1,_8754_r2) = _1cdee28c4_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_1cdee28c4_nonzero(static_cast<jule::U64>((_8716_u1 & ((1LL << (_8734_n - 64LL)) - 1LL)) | _8725_u2)));
		}
		goto _match_end_4525822512;
		_case_end_4525823200:;
		_match_end_4525822512:;
	}
	return std::make_tuple(_8745_r1,_8754_r2);
}



inline jule::I32 _1cdee28c4_lz(jule::U64 _1057_u1,jule::U64 _10516_u2) {
	jule::I32 _10527_l = jule::I32();
	_10527_l=static_cast<jule::I32>(_1ce399a6c_leading_zeros64(_1057_u1));
	if (_10527_l == 64LL) {
		_10527_l+=static_cast<jule::I32>(_1ce399a6c_leading_zeros64(_10516_u2));
	}
	_10527_l = _10527_l;
	return _10527_l;
}



inline std::tuple<jule::U32,jule::I32,jule::U64> _1cdee28c4_split(jule::U64 _11610_b) {
	jule::U32 _11620_sign = jule::U32();
	jule::I32 _11631_exp = jule::I32();
	jule::U64 _11641_mantissa = jule::U64();
	_11620_sign=static_cast<jule::U32>(_11610_b >> 63LL);
	_11631_exp=static_cast<jule::I32>(static_cast<jule::I32>(_11610_b >> 52LL) & 2047LL);
	_11641_mantissa=static_cast<jule::U64>(_11610_b & 4503599627370495LLU);
	if (_11631_exp == 0LL) {
		jule::Uint _12313_shift = static_cast<jule::Uint>(_1ce399a6c_leading_zeros64(_11641_mantissa) - 11LL);
		_11641_mantissa<<=_12313_shift;
		_11631_exp=static_cast<jule::I32>(1LL - static_cast<jule::I32>(_12313_shift));
	} else {
		_11641_mantissa|=4503599627370496LLU;
	}
	return std::make_tuple(_11620_sign,_11631_exp,_11641_mantissa);
}



inline jule::F64 _1cdee28c4_fma(jule::F64 _13512_x,jule::F64 _13520_y,jule::F64 _13528_z) {
	jule::U64 _13610_bx = _1cdceb9db_f64_bits(_13512_x);
	jule::U64 _13614_by = _1cdceb9db_f64_bits(_13520_y);
	jule::U64 _13618_bz = _1cdceb9db_f64_bits(_13528_z);
	std::tie(_13610_bx,_13614_by,_13618_bz) = std::make_tuple(_1cdceb9db_f64_bits(_13512_x),_1cdceb9db_f64_bits(_13520_y),_1cdceb9db_f64_bits(_13528_z));
	if (((((_13512_x == 0LL) || (_13520_y == 0LL)) || (_13528_z == 0LL)) || ((_13610_bx & 9218868437227405312LL) == 9218868437227405312LL)) || ((_13614_by & 9218868437227405312LL) == 9218868437227405312LL)) {
		return static_cast<jule::F64>((_13512_x * _13520_y) + _13528_z);
	}
	if ((_13618_bz & 9218868437227405312LL) == 9218868437227405312LL) {
		return _13528_z;
	}
	jule::U32 _15010_xs;
	jule::I32 _15014_xe;
	jule::U64 _15018_xm;
	std::tie(_15010_xs,_15014_xe,_15018_xm) = _1cdee28c4_split(_13610_bx);
	jule::U32 _15110_ys;
	jule::I32 _15114_ye;
	jule::U64 _15118_ym;
	std::tie(_15110_ys,_15114_ye,_15118_ym) = _1cdee28c4_split(_13614_by);
	jule::U32 _15214_zs;
	jule::I32 _15222_ze;
	jule::U64 _15226_zm;
	std::tie(_15214_zs,_15222_ze,_15226_zm) = _1cdee28c4_split(_13618_bz);
	jule::I32 _15613_pe = ((_15014_xe + _15114_ye) - 1023LL) + 1LL;
	jule::U64 _16114_pm1;
	jule::U64 _16123_pm2;
	std::tie(_16114_pm1,_16123_pm2) = _1ce399a6c_mul64(static_cast<jule::U64>(_15018_xm << 10LL),static_cast<jule::U64>(_15118_ym << 11LL));
	jule::U64 _16214_zm1 = _15226_zm << 10LL;
	jule::U64 _16223_zm2 = static_cast<jule::U64>(0LLU);
	std::tie(_16214_zm1,_16223_zm2) = std::make_tuple(_15226_zm << 10LL,static_cast<jule::U64>(0LLU));
	jule::U32 _16313_ps = _15010_xs ^ _15110_ys;
	jule::Uint _1669_is62zero = static_cast<jule::Uint>(((~(_16114_pm1)) >> 62LL) & 1LL);
	std::tie(_16114_pm1,_16123_pm2) = _1cdee28c4_shl(_16114_pm1,_16123_pm2,_1669_is62zero);
	_15613_pe-=static_cast<jule::I32>(_1669_is62zero);
	if ((_15613_pe < _15222_ze) || ((_15613_pe == _15222_ze) && (_16114_pm1 < _16214_zm1))) {
		std::tie(_16313_ps,_15613_pe,_16114_pm1,_16123_pm2,_15214_zs,_15222_ze,_16214_zm1,_16223_zm2) = std::make_tuple(_15214_zs,_15222_ze,_16214_zm1,_16223_zm2,_16313_ps,static_cast<jule::I32>(_15613_pe),_16114_pm1,_16123_pm2);
	}
	std::tie(_16214_zm1,_16223_zm2) = _1cdee28c4_shrcompress(_16214_zm1,_16223_zm2,static_cast<jule::Uint>(_15613_pe - _15222_ze));
	jule::U64 _17913_m = 0LLU;
	jule::U64 _18013_c = 0LLU;
	if (_16313_ps == _15214_zs) {
		std::tie(_16123_pm2,_18013_c) = _1ce399a6c_add64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _1ce399a6c_add64(_16114_pm1,_16214_zm1,_18013_c);
		_15613_pe-=static_cast<jule::I32>((~(_16114_pm1)) >> 63LL);
		std::tie(_16114_pm1,_17913_m) = _1cdee28c4_shrcompress(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(64LL + (_16114_pm1 >> 63LL)));
	} else {
		std::tie(_16123_pm2,_18013_c) = _1ce399a6c_sub64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _1ce399a6c_sub64(_16114_pm1,_16214_zm1,_18013_c);
		jule::I32 _19113_nz = _1cdee28c4_lz(_16114_pm1,_16123_pm2);
		_15613_pe-=_19113_nz;
		std::tie(_17913_m,_16123_pm2) = _1cdee28c4_shl(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(_19113_nz - 1LL));
		_17913_m|=static_cast<jule::U64>(_1cdee28c4_nonzero(_16123_pm2));
	}
	if ((_15613_pe > 2045LL) || ((_15613_pe == 2045LL) && (((_17913_m + 512LLU) >> 63LL) == 1LL))) {
		return static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(_16313_ps) << 63LL) | 9218868437227405312LL)));
	}
	if (_15613_pe < 0LL) {
		jule::Uint _20313_n = static_cast<jule::Uint>((-(_15613_pe)));
		_17913_m=static_cast<jule::U64>((_17913_m >> _20313_n) | _1cdee28c4_nonzero(static_cast<jule::U64>(_17913_m & ((1LL << _20313_n) - 1LL))));
		_15613_pe=0LL;
	}
	_17913_m=static_cast<jule::U64>(((_17913_m + 512LLU) >> 10LL) & (~(_1cdee28c4_zero(static_cast<jule::U64>((_17913_m & 1023LLU) ^ 512LLU)))));
	_15613_pe&=static_cast<jule::I32>((-(static_cast<jule::I32>(_1cdee28c4_nonzero(_17913_m)))));
	return static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>(((static_cast<jule::U64>(_16313_ps) << 63LL) + (static_cast<jule::U64>(_15613_pe) << 52LL)) + _17913_m)));
}



inline std::tuple<jule::F64,jule::F64> _1cdee74cd_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _1cddeab62_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if (_469_abs_f > 4503599627370496LL) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>(_469_abs_f + 4503599627370496LL);
		_4713_i-=4503599627370496LL;
		while (_4713_i > _469_abs_f) {
			{
				(_4713_i)--;
			}
		_iter_next_4525894000:;
		}
		_iter_end_4525894000:;
		if (_4413_f < 0LL) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1ce02c5ac_log10(jule::F64 _4014_x) {
	return static_cast<jule::F64>(_1cddda0b3_log(_4014_x) * 0.43429448190325176);
}



inline jule::F64 _1ce02c5ac_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::Int _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _1cdd6801e_frexp(_4413_x);
	if (_4510_frac == 0.5) {
		return static_cast<jule::F64>(_4516_exp - 1LL);
	}
	return static_cast<jule::F64>((_1cddda0b3_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp));
}



inline jule::F64 _1ce03e206_hypot(jule::F64 _5018_p,jule::F64 _5030_q) {
	{
		if (!((_1cddd8b83_is_inf(_5018_p,0LL)) || (_1cddd8b83_is_inf(_5030_q,0LL)))) { goto _case_end_4525904992; }
		_case_begin_4525904992:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
		}
		goto _match_end_4525904800;
		_case_end_4525904992:;
		if (!((_1cddd8b83_is_nan(_5018_p)) || (_1cddd8b83_is_nan(_5030_q)))) { goto _case_end_4525905104; }
		_case_begin_4525905104:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4525904800;
		_case_end_4525905104:;
		_match_end_4525904800:;
	}
	std::tie(_5018_p,_5030_q) = std::make_tuple(static_cast<jule::F64>(_1cddeab62_abs(_5018_p)),static_cast<jule::F64>(_1cddeab62_abs(_5030_q)));
	if (_5018_p < _5030_q) {
		std::tie(_5018_p,_5030_q) = std::make_tuple(_5030_q,_5018_p);
	}
	if (_5018_p == 0LL) {
		return 0LL;
	}
	_5030_q=static_cast<jule::F64>(jule::div(_5030_q,_5018_p));
	return static_cast<jule::F64>(_5018_p * _1ce260108_sqrt(static_cast<jule::F64>(1LL + (_5030_q * _5030_q))));
}



inline jule::F64 _1ce04ca0b_j0(jule::F64 _10715_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1cddd8b83_is_nan(_10715_x)))) { goto _case_end_4525921968; }
		_case_begin_4525921968:;
		{
			return _10715_x;
		}
		goto _match_end_4525921792;
		_case_end_4525921968:;
		if (!((_1cddd8b83_is_inf(_10715_x,0LL)))) { goto _case_end_4525922080; }
		_case_begin_4525922080:;
		{
			return 0LL;
		}
		goto _match_end_4525921792;
		_case_end_4525922080:;
		if (!((_10715_x == 0LL))) { goto _case_end_4525922192; }
		_case_begin_4525922192:;
		{
			return 1LL;
		}
		goto _match_end_4525921792;
		_case_end_4525922192:;
		_match_end_4525921792:;
	}
	_10715_x=static_cast<jule::F64>(_1cddeab62_abs(_10715_x));
	if (_10715_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _1cddc17d6_sincos(_10715_x);
		jule::F64 _13317_ss = _13214_s - _13217_c;
		jule::F64 _13417_cc = _13214_s + _13217_c;
		if (_10715_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = (-(_1cdd1c545_cos(static_cast<jule::F64>(_10715_x + _10715_x))));
			if ((_13214_s * _13217_c) < 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10715_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_1ce260108_sqrt(_10715_x)));
		} else {
			jule::F64 _15317_u = _1ce04ca0b_pzero(_10715_x);
			jule::F64 _15417_v = _1ce04ca0b_qzero(_10715_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_1ce260108_sqrt(_10715_x)));
		}
		return _14917_z;
	}
	if (_10715_x < 0.0001220703125) {
		if (_10715_x < 0.000000007450580596923828) {
			return 1LL;
		}
		return static_cast<jule::F64>(1LL - ((0.25 * _10715_x) * _10715_x));
	}
	jule::F64 _1659_z = _10715_x * _10715_x;
	jule::F64 _1669_r = _1659_z * (0.015624999999999995 + (_1659_z * (-0.00018997929423885472 + (_1659_z * (0.0000018295404953270067 + (_1659_z * -0.000000004618326885321032))))));
	jule::F64 _1679_s = 1LL + (_1659_z * (0.015619102946489001 + (_1659_z * (0.00011692678466333745 + (_1659_z * (0.0000005135465502073181 + (_1659_z * 0.0000000011661400333379)))))));
	if (_10715_x < 1LL) {
		return static_cast<jule::F64>(1LL + (_1659_z * (-0.25 + jule::div(_1669_r,_1679_s))));
	}
	jule::F64 _1719_u = 0.5 * _10715_x;
	return static_cast<jule::F64>(((1LL + _1719_u) * (1LL - _1719_u)) + (_1659_z * jule::div(_1669_r,_1679_s)));
}



inline jule::F64 _1ce04ca0b_y0(jule::F64 _18211_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18211_x < 0LL) || (_1cddd8b83_is_nan(_18211_x)))) { goto _case_end_4525959456; }
		_case_begin_4525959456:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4525959280;
		_case_end_4525959456:;
		if (!((_1cddd8b83_is_inf(_18211_x,1LL)))) { goto _case_end_4525959568; }
		_case_begin_4525959568:;
		{
			return 0LL;
		}
		goto _match_end_4525959280;
		_case_end_4525959568:;
		if (!((_18211_x == 0LL))) { goto _case_end_4525959680; }
		_case_begin_4525959680:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(-1LL));
		}
		goto _match_end_4525959280;
		_case_end_4525959680:;
		_match_end_4525959280:;
	}
	if (_18211_x >= 2LL) {
		jule::F64 _21814_s;
		jule::F64 _21817_c;
		std::tie(_21814_s,_21817_c) = _1cddc17d6_sincos(_18211_x);
		jule::F64 _21917_ss = _21814_s - _21817_c;
		jule::F64 _22017_cc = _21814_s + _21817_c;
		if (_18211_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _22717_z = (-(_1cdd1c545_cos(static_cast<jule::F64>(_18211_x + _18211_x))));
			if ((_21814_s * _21817_c) < 0LL) {
				_22017_cc=static_cast<jule::F64>(jule::div(_22717_z,_21917_ss));
			} else {
				_21917_ss=static_cast<jule::F64>(jule::div(_22717_z,_22017_cc));
			}
		}
		jule::F64 _23417_z = 0LL;
		if (_18211_x > 5188146770730811392LL) {
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _21917_ss,_1ce260108_sqrt(_18211_x)));
		} else {
			jule::F64 _23817_u = _1ce04ca0b_pzero(_18211_x);
			jule::F64 _23917_v = _1ce04ca0b_qzero(_18211_x);
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23817_u * _21917_ss) + (_23917_v * _22017_cc)),_1ce260108_sqrt(_18211_x)));
		}
		return _23417_z;
	}
	if (_18211_x <= 0.000000007450580596923828) {
		return static_cast<jule::F64>(-0.07380429510868723 + (0.6366197723675814 * _1cddda0b3_log(_18211_x)));
	}
	jule::F64 _2479_z = _18211_x * _18211_x;
	jule::F64 _2489_u = -0.07380429510868723 + (_2479_z * (0.17666645250918112 + (_2479_z * (-0.01381856719455969 + (_2479_z * (0.00034745343209368365 + (_2479_z * (-0.0000038140705372436416 + (_2479_z * (0.000000019559013703502292 + (_2479_z * -0.00000000003982051941321034)))))))))));
	jule::F64 _2499_v = 1LL + (_2479_z * (0.01273048348341237 + (_2479_z * (0.00007600686273503533 + (_2479_z * (0.0000002591508518404578 + (_2479_z * 0.00000000044111031133267547)))))));
	return static_cast<jule::F64>(jule::div(_2489_u,_2499_v) + ((0.6366197723675814 * _1ce04ca0b_j0(_18211_x)) * _1cddda0b3_log(_18211_x)));
}



inline jule::F64 _1ce04ca0b_pzero(jule::F64 _33010_x) {
	jule::Array<jule::F64,6>* _33113_p = nullptr;
	jule::Array<jule::F64,5>* _33213_q = nullptr;
	if (_33010_x >= 8LL) {
		_33113_p=(&(_1ce04ca0b_P_0R8));
		_33213_q=(&(_1ce04ca0b_P_0S8));
	} else if (_33010_x >= 4.5454) {
		_33113_p=(&(_1ce04ca0b_P_0R5));
		_33213_q=(&(_1ce04ca0b_P_0S5));
	} else if (_33010_x >= 2.8571) {
		_33113_p=(&(_1ce04ca0b_P_0R3));
		_33213_q=(&(_1ce04ca0b_P_0S3));
	} else if (_33010_x >= 2LL) {
		_33113_p=(&(_1ce04ca0b_P_0R2));
		_33213_q=(&(_1ce04ca0b_P_0S2));
	}
	{
		jule::F64 _34713_z = jule::div(1LL,_33010_x * _33010_x);
		jule::F64 _34813_r = (*(_33113_p))[0LL] + (_34713_z * ((*(_33113_p))[1LL] + (_34713_z * ((*(_33113_p))[2LL] + (_34713_z * ((*(_33113_p))[3LL] + (_34713_z * ((*(_33113_p))[4LL] + (_34713_z * (*(_33113_p))[5LL])))))))));
		jule::F64 _34913_s = 1LL + (_34713_z * ((*(_33213_q))[0LL] + (_34713_z * ((*(_33213_q))[1LL] + (_34713_z * ((*(_33213_q))[2LL] + (_34713_z * ((*(_33213_q))[3LL] + (_34713_z * (*(_33213_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34813_r,_34913_s));
	}
}



inline jule::F64 _1ce04ca0b_qzero(jule::F64 _43510_x) {
	jule::Array<jule::F64,6>* _43613_p = nullptr;
	jule::Array<jule::F64,6>* _43713_q = nullptr;
	if (_43510_x >= 8LL) {
		_43613_p=(&(_1ce04ca0b_Q_0R8));
		_43713_q=(&(_1ce04ca0b_Q_0S8));
	} else if (_43510_x >= 4.5454) {
		_43613_p=(&(_1ce04ca0b_Q_0R5));
		_43713_q=(&(_1ce04ca0b_Q_0S5));
	} else if (_43510_x >= 2.8571) {
		_43613_p=(&(_1ce04ca0b_Q_0R3));
		_43713_q=(&(_1ce04ca0b_Q_0S3));
	} else if (_43510_x >= 2LL) {
		_43613_p=(&(_1ce04ca0b_Q_0R2));
		_43713_q=(&(_1ce04ca0b_Q_0S2));
	}
	{
		jule::F64 _45213_z = jule::div(1LL,_43510_x * _43510_x);
		jule::F64 _45313_r = (*(_43613_p))[0LL] + (_45213_z * ((*(_43613_p))[1LL] + (_45213_z * ((*(_43613_p))[2LL] + (_45213_z * ((*(_43613_p))[3LL] + (_45213_z * ((*(_43613_p))[4LL] + (_45213_z * (*(_43613_p))[5LL])))))))));
		jule::F64 _45413_s = 1LL + (_45213_z * ((*(_43713_q))[0LL] + (_45213_z * ((*(_43713_q))[1LL] + (_45213_z * ((*(_43713_q))[2LL] + (_45213_z * ((*(_43713_q))[3LL] + (_45213_z * ((*(_43713_q))[4LL] + (_45213_z * (*(_43713_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(-0.125 + jule::div(_45313_r,_45413_s),_43510_x));
	}
}



inline jule::F64 _1ce0a3226_ldexp(jule::F64 _4518_frac,jule::Int _4533_exp) {
	{
		if (!((_4518_frac == 0LL))) { goto _case_end_4526009952; }
		_case_begin_4526009952:;
		{
			return _4518_frac;
		}
		goto _match_end_4526011072;
		_case_end_4526009952:;
		if (!((_1cddd8b83_is_inf(_4518_frac,0LL)) || (_1cddd8b83_is_nan(_4518_frac)))) { goto _case_end_4526023840; }
		_case_begin_4526023840:;
		{
			return _4518_frac;
		}
		goto _match_end_4526011072;
		_case_end_4526023840:;
		_match_end_4526011072:;
	}
	jule::Int _5313_e = 0LL;
	std::tie(_4518_frac,_5313_e) = _1cddd8b83_normalize(_4518_frac);
	_4533_exp+=_5313_e;
	jule::U64 _5613_x = _1cdceb9db_f64_bits(_4518_frac);
	_4533_exp+=static_cast<jule::Int>((static_cast<jule::Int>(_5613_x >> 52LL) & 2047LL) - 1023LL);
	if (_4533_exp < -1075LL) {
		return static_cast<jule::F64>(_1cdd70301_copysign(0LL,_4518_frac));
	}
	if (_4533_exp > 1023LL) {
		if (_4518_frac < 0LL) {
			return static_cast<jule::F64>(_1cddd8b83_inf(-1LL));
		}
		return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
	}
	jule::F64 _6713_m = 1LL;
	if (_4533_exp < -1022LL) {
		_4533_exp+=53LL;
		_6713_m=0.00000000000000011102230246251565;
	}
	_5613_x=static_cast<jule::U64>(_5613_x & 9227875636482146303LLU);
	_5613_x|=static_cast<jule::U64>(static_cast<jule::U64>(_4533_exp + 1023LL) << 52LL);
	return static_cast<jule::F64>(_6713_m * _1cdceb9db_f64_from_bits(_5613_x));
}



inline jule::Bool _1ce0be9a1_signbit(jule::F64 _3916_x) {
	return (_1cdceb9db_f64_bits(_3916_x) & 9223372036854775808LLU) != 0LL;
}



inline jule::F64 _1ce0a44be_sinh(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	jule::Bool _6613_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_6613_sign=true;
	}
	jule::F64 _7213_temp = 0LL;
	{
		if (!((_5617_x > 21LL))) { goto _case_end_4526047568; }
		_case_begin_4526047568:;
		{
			_7213_temp=static_cast<jule::F64>(_1ce1555b4_exp(_5617_x) * 0.5);
		}
		goto _match_end_4526046304;
		_case_end_4526047568:;
		if (!((_5617_x > 0.5))) { goto _case_end_4526048416; }
		_case_begin_4526048416:;
		{
			jule::F64 _7713_ex = _1ce1555b4_exp(_5617_x);
			_7213_temp=static_cast<jule::F64>((_7713_ex - jule::div(1LL,_7713_ex)) * 0.5);
		}
		goto _match_end_4526046304;
		_case_end_4526048416:;
		_case_begin_4526046384:;
		{
			jule::F64 _8013_sq = _5617_x * _5617_x;
			_7213_temp=static_cast<jule::F64>(((((((-26.30563213397497 * _8013_sq) + -2894.211355989564) * _8013_sq) + -89912.72022039509) * _8013_sq) + -630767.3640497717) * _5617_x);
			_7213_temp=static_cast<jule::F64>(jule::div(_7213_temp,((((_8013_sq + -173.6789535582337) * _8013_sq) + 15215.17378790019) * _8013_sq) + -630767.3640497717));
		}
		goto _match_end_4526046304;
		_case_end_4526046384:;
		_match_end_4526046304:;
	}
	if (_6613_sign) {
		_7213_temp=static_cast<jule::F64>((-(_7213_temp)));
	}
	return _7213_temp;
}



inline jule::F64 _1ce0a44be_cosh(jule::F64 _9717_x) {
	_9717_x=static_cast<jule::F64>(_1cddeab62_abs(_9717_x));
	if (_9717_x > 21LL) {
		return static_cast<jule::F64>(_1ce1555b4_exp(_9717_x) * 0.5);
	}
	jule::F64 _1029_ex = _1ce1555b4_exp(_9717_x);
	return static_cast<jule::F64>((_1029_ex + jule::div(1LL,_1029_ex)) * 0.5);
}



inline std::tuple<jule::F64,jule::Int> _1ce0d9449_lgamma(jule::F64 _20519_x) {
	jule::F64 _20529_lgamma = jule::F64();
	jule::Int _20542_sign = jule::Int();
	
	
	
	
	
	
	
	_20542_sign=1LL;
	{
		if (!((_1cddd8b83_is_nan(_20519_x)))) { goto _case_end_4526066272; }
		_case_begin_4526066272:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4526062640;
		_case_end_4526066272:;
		if (!((_1cddd8b83_is_inf(_20519_x,0LL)))) { goto _case_end_4526066560; }
		_case_begin_4526066560:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4526062640;
		_case_end_4526066560:;
		if (!((_20519_x == 0LL))) { goto _case_end_4526066656; }
		_case_begin_4526066656:;
		{
			_20529_lgamma=static_cast<jule::F64>(_1cddd8b83_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4526062640;
		_case_end_4526066656:;
		_match_end_4526062640:;
	}
	jule::Bool _22813_neg = false;
	if (_20519_x < 0LL) {
		_20519_x=static_cast<jule::F64>((-(_20519_x)));
		_22813_neg=true;
	}
	if (_20519_x < 0.000000000000000000000847033) {
		if (_22813_neg) {
			_20542_sign=-1LL;
		}
		_20529_lgamma=static_cast<jule::F64>((-(_1cddda0b3_log(_20519_x))));
		return std::make_tuple(_20529_lgamma,_20542_sign);
	}
	jule::F64 _24113_nadj = 0LL;
	if (_22813_neg) {
		if (_20519_x >= 4503599627370496LLU) {
			_20529_lgamma=static_cast<jule::F64>(_1cddd8b83_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		jule::F64 _24713_t = _1ce0d9449_sin_pi(_20519_x);
		if (_24713_t == 0LL) {
			_20529_lgamma=static_cast<jule::F64>(_1cddd8b83_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		_24113_nadj=static_cast<jule::F64>(_1cddda0b3_log(static_cast<jule::F64>(jule::div(3.141592653589793,_1cddeab62_abs(static_cast<jule::F64>(_24713_t * _20519_x))))));
		if (_24713_t < 0LL) {
			_20542_sign=-1LL;
		}
	}
	{
		if (!((_20519_x == 1LL) || (_20519_x == 2LL))) { goto _case_end_4526080256; }
		_case_begin_4526080256:;
		{
			_20529_lgamma=0LL;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4526081040;
		_case_end_4526080256:;
		if (!((_20519_x < 2LL))) { goto _case_end_4526082432; }
		_case_begin_4526082432:;
		{
			jule::F64 _26317_y = 0LL;
			jule::Int _26417_i = 0LL;
			if (_20519_x <= 0.9) {
				_20529_lgamma=static_cast<jule::F64>((-(_1cddda0b3_log(_20519_x))));
				{
					if (!((_20519_x >= 0.7316321449683623))) { goto _case_end_4526088464; }
					_case_begin_4526088464:;
					{
						_26317_y=static_cast<jule::F64>(1LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4526086704;
					_case_end_4526088464:;
					if (!((_20519_x >= 0.19163214496836223))) { goto _case_end_4526088560; }
					_case_begin_4526088560:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 0.46163214496836225);
						_26417_i=1LL;
					}
					goto _match_end_4526086704;
					_case_end_4526088560:;
					_case_begin_4526087568:;
					{
						_26317_y=_20519_x;
						_26417_i=2LL;
					}
					goto _match_end_4526086704;
					_case_end_4526087568:;
					_match_end_4526086704:;
				}
			} else {
				_20529_lgamma=0LL;
				{
					if (!((_20519_x >= 1.7316321449683623))) { goto _case_end_4526093008; }
					_case_begin_4526093008:;
					{
						_26317_y=static_cast<jule::F64>(2LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4526086352;
					_case_end_4526093008:;
					if (!((_20519_x >= 1.1916321449683622))) { goto _case_end_4526093472; }
					_case_begin_4526093472:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1.4616321449683622);
						_26417_i=1LL;
					}
					goto _match_end_4526086352;
					_case_end_4526093472:;
					_case_begin_4526091616:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1LL);
						_26417_i=2LL;
					}
					goto _match_end_4526086352;
					_case_end_4526091616:;
					_match_end_4526086352:;
				}
			}
			{
				auto _match_expr{ _26417_i };
				if (!((0LL) == _match_expr)) { goto _case_end_4526095808; }
				_case_begin_4526095808:;
				{
					jule::F64 _29417_z = _26317_y * _26317_y;
					jule::F64 _29517_p1 = _1ce0d9449__LGAM_A[0LL] + (_29417_z * (_1ce0d9449__LGAM_A[2LL] + (_29417_z * (_1ce0d9449__LGAM_A[4LL] + (_29417_z * (_1ce0d9449__LGAM_A[6LL] + (_29417_z * (_1ce0d9449__LGAM_A[8LL] + (_29417_z * _1ce0d9449__LGAM_A[10LL])))))))));
					jule::F64 _29617_p2 = _29417_z * (_1ce0d9449__LGAM_A[1LL] + (_29417_z * ((+(_1ce0d9449__LGAM_A[3LL])) + (_29417_z * (_1ce0d9449__LGAM_A[5LL] + (_29417_z * (_1ce0d9449__LGAM_A[7LL] + (_29417_z * (_1ce0d9449__LGAM_A[9LL] + (_29417_z * _1ce0d9449__LGAM_A[11LL]))))))))));
					jule::F64 _29717_p = (_26317_y * _29517_p1) + _29617_p2;
					_20529_lgamma+=static_cast<jule::F64>(_29717_p - (0.5 * _26317_y));
				}
				goto _match_end_4526093952;
				_case_end_4526095808:;
				if (!((1LL) == _match_expr)) { goto _case_end_4526087728; }
				_case_begin_4526087728:;
				{
					jule::F64 _30017_z = _26317_y * _26317_y;
					jule::F64 _30117_w = _30017_z * _26317_y;
					jule::F64 _30217_p1 = _1ce0d9449__LGAM_T[0LL] + (_30117_w * (_1ce0d9449__LGAM_T[3LL] + (_30117_w * (_1ce0d9449__LGAM_T[6LL] + (_30117_w * (_1ce0d9449__LGAM_T[9LL] + (_30117_w * _1ce0d9449__LGAM_T[12LL])))))));
					jule::F64 _30317_p2 = _1ce0d9449__LGAM_T[1LL] + (_30117_w * (_1ce0d9449__LGAM_T[4LL] + (_30117_w * (_1ce0d9449__LGAM_T[7LL] + (_30117_w * (_1ce0d9449__LGAM_T[10LL] + (_30117_w * _1ce0d9449__LGAM_T[13LL])))))));
					jule::F64 _30417_p3 = _1ce0d9449__LGAM_T[2LL] + (_30117_w * (_1ce0d9449__LGAM_T[5LL] + (_30117_w * (_1ce0d9449__LGAM_T[8LL] + (_30117_w * (_1ce0d9449__LGAM_T[11LL] + (_30117_w * _1ce0d9449__LGAM_T[14LL])))))));
					jule::F64 _30517_p = (_30017_z * _30217_p1) - (-0.000000000000000003638676997039505 - (_30117_w * (_30317_p2 + (_26317_y * _30417_p3))));
					_20529_lgamma+=static_cast<jule::F64>(-0.12148629053584961 + _30517_p);
				}
				goto _match_end_4526093952;
				_case_end_4526087728:;
				if (!((2LL) == _match_expr)) { goto _case_end_4526087824; }
				_case_begin_4526087824:;
				{
					jule::F64 _30817_p1 = _26317_y * (_1ce0d9449__LGAM_U[0LL] + (_26317_y * (_1ce0d9449__LGAM_U[1LL] + (_26317_y * (_1ce0d9449__LGAM_U[2LL] + (_26317_y * (_1ce0d9449__LGAM_U[3LL] + (_26317_y * (_1ce0d9449__LGAM_U[4LL] + (_26317_y * _1ce0d9449__LGAM_U[5LL]))))))))));
					jule::F64 _30917_p2 = 1LL + (_26317_y * (_1ce0d9449__LGAM_V[1LL] + (_26317_y * (_1ce0d9449__LGAM_V[2LL] + (_26317_y * (_1ce0d9449__LGAM_V[3LL] + (_26317_y * (_1ce0d9449__LGAM_V[4LL] + (_26317_y * _1ce0d9449__LGAM_V[5LL])))))))));
					_20529_lgamma+=static_cast<jule::F64>((-0.5 * _26317_y) + jule::div(_30817_p1,_30917_p2));
				}
				goto _match_end_4526093952;
				_case_end_4526087824:;
				_match_end_4526093952:;
			}
		}
		goto _match_end_4526081040;
		_case_end_4526082432:;
		if (!((_20519_x < 8LL))) { goto _case_end_4526081776; }
		_case_begin_4526081776:;
		{
			jule::Int _31313_i = static_cast<jule::Int>(_20519_x);
			jule::F64 _31413_y = _20519_x - static_cast<jule::F64>(_31313_i);
			jule::F64 _31513_p = _31413_y * (_1ce0d9449__LGAM_S[0LL] + (_31413_y * (_1ce0d9449__LGAM_S[1LL] + (_31413_y * (_1ce0d9449__LGAM_S[2LL] + (_31413_y * (_1ce0d9449__LGAM_S[3LL] + (_31413_y * (_1ce0d9449__LGAM_S[4LL] + (_31413_y * (_1ce0d9449__LGAM_S[5LL] + (_31413_y * _1ce0d9449__LGAM_S[6LL]))))))))))));
			jule::F64 _31613_q = 1LL + (_31413_y * (_1ce0d9449__LGAM_R[1LL] + (_31413_y * (_1ce0d9449__LGAM_R[2LL] + (_31413_y * (_1ce0d9449__LGAM_R[3LL] + (_31413_y * (_1ce0d9449__LGAM_R[4LL] + (_31413_y * (_1ce0d9449__LGAM_R[5LL] + (_31413_y * _1ce0d9449__LGAM_R[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>((0.5 * _31413_y) + jule::div(_31513_p,_31613_q));
			jule::F64 _31817_z = 1LL;
			{
				auto _match_expr{ _31313_i };
				if (!((7LL) == _match_expr)) { goto _case_end_4526153616; }
				_case_begin_4526153616:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 6LL);
					goto _case_begin_4526142832;
				}
				goto _match_end_4526153488;
				_case_end_4526153616:;
				if (!((6LL) == _match_expr)) { goto _case_end_4526142832; }
				_case_begin_4526142832:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 5LL);
					goto _case_begin_4526154048;
				}
				goto _match_end_4526153488;
				_case_end_4526142832:;
				if (!((5LL) == _match_expr)) { goto _case_end_4526154048; }
				_case_begin_4526154048:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 4LL);
					goto _case_begin_4526154144;
				}
				goto _match_end_4526153488;
				_case_end_4526154048:;
				if (!((4LL) == _match_expr)) { goto _case_end_4526154144; }
				_case_begin_4526154144:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 3LL);
					goto _case_begin_4526154240;
				}
				goto _match_end_4526153488;
				_case_end_4526154144:;
				if (!((3LL) == _match_expr)) { goto _case_end_4526154240; }
				_case_begin_4526154240:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 2LL);
					_20529_lgamma+=static_cast<jule::F64>(_1cddda0b3_log(_31817_z));
				}
				goto _match_end_4526153488;
				_case_end_4526154240:;
				_match_end_4526153488:;
			}
		}
		goto _match_end_4526081040;
		_case_end_4526081776:;
		if (!((_20519_x < 288230376151711744LLU))) { goto _case_end_4526081872; }
		_case_begin_4526081872:;
		{
			jule::F64 _33713_t = _1cddda0b3_log(_20519_x);
			jule::F64 _33813_z = jule::div(1LL,_20519_x);
			jule::F64 _33913_y = _33813_z * _33813_z;
			jule::F64 _34013_w = _1ce0d9449__LGAM_W[0LL] + (_33813_z * (_1ce0d9449__LGAM_W[1LL] + (_33913_y * (_1ce0d9449__LGAM_W[2LL] + (_33913_y * (_1ce0d9449__LGAM_W[3LL] + (_33913_y * (_1ce0d9449__LGAM_W[4LL] + (_33913_y * (_1ce0d9449__LGAM_W[5LL] + (_33913_y * _1ce0d9449__LGAM_W[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>(((_20519_x - 0.5) * (_33713_t - 1LL)) + _34013_w);
		}
		goto _match_end_4526081040;
		_case_end_4526081872:;
		_case_begin_4526080160:;
		{
			_20529_lgamma=static_cast<jule::F64>(_20519_x * (_1cddda0b3_log(_20519_x) - 1LL));
		}
		goto _match_end_4526081040;
		_case_end_4526080160:;
		_match_end_4526081040:;
	}
	if (_22813_neg) {
		_20529_lgamma=static_cast<jule::F64>(_24113_nadj - _20529_lgamma);
	}
	return std::make_tuple(_20529_lgamma,_20542_sign);
}



inline jule::F64 _1ce0d9449_sin_pi(jule::F64 _35215_x) {
	
	
	if (_35215_x < 0.25) {
		return static_cast<jule::F64>((-(_1cdd1c545_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)))));
	}
	jule::F64 _36013_z = _1cdd93ea1_floor(_35215_x);
	jule::Int _36113_n = 0LL;
	if (_36013_z != _35215_x) {
		_35215_x=static_cast<jule::F64>(_1cdd58949_mod(_35215_x,2LL));
		_36113_n=static_cast<jule::Int>(_35215_x * 4LL);
	} else {
		if (_35215_x >= 9007199254740992LLU) {
			_35215_x=0LL;
			_36113_n=0LL;
		} else {
			if (_35215_x < 4503599627370496LLU) {
				_36013_z=static_cast<jule::F64>(_35215_x + 4503599627370496LLU);
			}
			_36113_n=static_cast<jule::Int>(1LL & _1cdceb9db_f64_bits(_36013_z));
			_35215_x=static_cast<jule::F64>(_36113_n);
			_36113_n<<=2LL;
		}
	}
	{
		auto _match_expr{ _36113_n };
		if (!((0LL) == _match_expr)) { goto _case_end_4526176896; }
		_case_begin_4526176896:;
		{
			_35215_x=static_cast<jule::F64>(_1cdd1c545_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)));
		}
		goto _match_end_4526180880;
		_case_end_4526176896:;
		if (!((1LL) == _match_expr || (2LL) == _match_expr)) { goto _case_end_4526182032; }
		_case_begin_4526182032:;
		{
			_35215_x=static_cast<jule::F64>(_1cdd1c545_cos(static_cast<jule::F64>(3.141592653589793 * (0.5 - _35215_x))));
		}
		goto _match_end_4526180880;
		_case_end_4526182032:;
		if (!((3LL) == _match_expr || (4LL) == _match_expr)) { goto _case_end_4526182128; }
		_case_begin_4526182128:;
		{
			_35215_x=static_cast<jule::F64>(_1cdd1c545_sin(static_cast<jule::F64>(3.141592653589793 * (1LL - _35215_x))));
		}
		goto _match_end_4526180880;
		_case_end_4526182128:;
		if (!((5LL) == _match_expr || (6LL) == _match_expr)) { goto _case_end_4526178224; }
		_case_begin_4526178224:;
		{
			_35215_x=static_cast<jule::F64>((-(_1cdd1c545_cos(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 1.5))))));
		}
		goto _match_end_4526180880;
		_case_end_4526178224:;
		_case_begin_4526174768:;
		{
			_35215_x=static_cast<jule::F64>(_1cdd1c545_sin(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 2LL))));
		}
		goto _match_end_4526180880;
		_case_end_4526174768:;
		_match_end_4526180880:;
	}
	return static_cast<jule::F64>((-(_35215_x)));
}



inline jule::F64 _1ce133d67_acosh(jule::F64 _7314_x) {
	
	{
		if (!((_7314_x < 1LL) || (_1cddd8b83_is_nan(_7314_x)))) { goto _case_end_4526188512; }
		_case_begin_4526188512:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4526188352;
		_case_end_4526188512:;
		if (!((_7314_x == 1LL))) { goto _case_end_4526188608; }
		_case_begin_4526188608:;
		{
			return 0LL;
		}
		goto _match_end_4526188352;
		_case_end_4526188608:;
		if (!((_7314_x >= 268435456LLU))) { goto _case_end_4526188704; }
		_case_begin_4526188704:;
		{
			return static_cast<jule::F64>(_1cddda0b3_log(_7314_x) + 0.6931471805599453);
		}
		goto _match_end_4526188352;
		_case_end_4526188704:;
		if (!((_7314_x > 2LL))) { goto _case_end_4526188816; }
		_case_begin_4526188816:;
		{
			return static_cast<jule::F64>(_1cddda0b3_log(static_cast<jule::F64>((2LL * _7314_x) - jule::div(1LL,_7314_x + _1ce260108_sqrt(static_cast<jule::F64>((_7314_x * _7314_x) - 1LL))))));
		}
		goto _match_end_4526188352;
		_case_end_4526188816:;
		_match_end_4526188352:;
	}
	jule::F64 _869_t = _7314_x - 1LL;
	return static_cast<jule::F64>(_1ce16c048_log1p(static_cast<jule::F64>(_869_t + _1ce260108_sqrt(static_cast<jule::F64>((2LL * _869_t) + (_869_t * _869_t))))));
}



inline jule::F64 _1ce141539_tanh(jule::F64 _10613_x) {
	
	jule::F64 _10813_z = _1cddeab62_abs(_10613_x);
	{
		if (!((_10813_z > 44.014845965556525))) { goto _case_end_4526200704; }
		_case_begin_4526200704:;
		{
			if (_10613_x < 0LL) {
				return -1LL;
			}
			return 1LL;
		}
		goto _match_end_4526198400;
		_case_end_4526200704:;
		if (!((_10813_z >= 0.625))) { goto _case_end_4526207168; }
		_case_begin_4526207168:;
		{
			jule::F64 _11613_s = _1ce1555b4_exp(static_cast<jule::F64>(2LL * _10813_z));
			_10813_z=static_cast<jule::F64>(1LL - jule::div(2LL,_11613_s + 1LL));
			if (_10613_x < 0LL) {
				_10813_z=static_cast<jule::F64>((-(_10813_z)));
			}
		}
		goto _match_end_4526198400;
		_case_end_4526207168:;
		_case_begin_4526198640:;
		{
			if (_10613_x == 0LL) {
				return _10613_x;
			}
			jule::F64 _12513_s = _10613_x * _10613_x;
			_10813_z=static_cast<jule::F64>(_10613_x + jule::div((_10613_x * _12513_s) * ((((_1ce141539_TANH_P[0LL] * _12513_s) + _1ce141539_TANH_P[1LL]) * _12513_s) + _1ce141539_TANH_P[2LL]),((((_12513_s + _1ce141539_TANH_Q[0LL]) * _12513_s) + _1ce141539_TANH_Q[1LL]) * _12513_s) + _1ce141539_TANH_Q[2LL]));
		}
		goto _match_end_4526198400;
		_case_end_4526198640:;
		_match_end_4526198400:;
	}
	return _10813_z;
}



inline jule::F64 _1ce150e0b_cbrt(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	
	if (((_5617_x == 0LL) || _1cddd8b83_is_nan(_5617_x)) || _1cddd8b83_is_inf(_5617_x,0LL)) {
		return _5617_x;
	}
	jule::Bool _7113_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_7113_sign=true;
	}
	jule::F64 _7813_t = _1cdceb9db_f64_from_bits(static_cast<jule::U64>(jule::div(_1cdceb9db_f64_bits(_5617_x),3LL) + 3071306043645493248LLU));
	if (_5617_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_7813_t=static_cast<jule::F64>(18014398509481984LL);
		_7813_t*=_5617_x;
		_7813_t=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>(jule::div(_1cdceb9db_f64_bits(_7813_t),3LL) + 2990241250352824320LLU)));
	}
	jule::F64 _8713_r = jule::div(_7813_t * _7813_t,_5617_x);
	jule::F64 _8813_s = 0.5428571428571428 + (_8713_r * _7813_t);
	_7813_t*=static_cast<jule::F64>(0.35714285714285715 + jule::div(1.6071428571428572,(_8813_s + 1.4142857142857144) + jule::div(-0.7053061224489796,_8813_s)));
	_7813_t=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>((_1cdceb9db_f64_bits(_7813_t) & 18446744072635809792LLU) + 1073741824LLU)));
	_8813_s=static_cast<jule::F64>(_7813_t * _7813_t);
	_8713_r=static_cast<jule::F64>(jule::div(_5617_x,_8813_s));
	jule::F64 _979_w = _7813_t + _7813_t;
	_8713_r=static_cast<jule::F64>(jule::div(_8713_r - _7813_t,_979_w + _8713_r));
	_7813_t=static_cast<jule::F64>(_7813_t + (_7813_t * _8713_r));
	if (_7113_sign) {
		_7813_t=static_cast<jule::F64>((-(_7813_t)));
	}
	return _7813_t;
}



inline jule::F64 _1ce14d414_pow(jule::F64 _6412_x,jule::F64 _6420_y) {
	{
		if (!((_6420_y == 0LL) || (_6412_x == 1LL))) { goto _case_end_4526235136; }
		_case_begin_4526235136:;
		{
			return 1LL;
		}
		goto _match_end_4526234832;
		_case_end_4526235136:;
		if (!((_6420_y == 1LL))) { goto _case_end_4526235248; }
		_case_begin_4526235248:;
		{
			return _6412_x;
		}
		goto _match_end_4526234832;
		_case_end_4526235248:;
		if (!((_1cddd8b83_is_nan(_6412_x)) || (_1cddd8b83_is_nan(_6420_y)))) { goto _case_end_4526235360; }
		_case_begin_4526235360:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4526234832;
		_case_end_4526235360:;
		if (!((_6412_x == 0LL))) { goto _case_end_4526235472; }
		_case_begin_4526235472:;
		{
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4526238304; }
				_case_begin_4526238304:;
				{
					if (_1ce14d414_is_odd_int(_6420_y)) {
						return static_cast<jule::F64>(_1cdd70301_copysign(static_cast<jule::F64>(_1cddd8b83_inf(1LL)),_6412_x));
					}
					return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
				}
				goto _match_end_4526238896;
				_case_end_4526238304:;
				if (!((_6420_y > 0LL))) { goto _case_end_4526238400; }
				_case_begin_4526238400:;
				{
					if (_1ce14d414_is_odd_int(_6420_y)) {
						return _6412_x;
					}
					return 0LL;
				}
				goto _match_end_4526238896;
				_case_end_4526238400:;
				_match_end_4526238896:;
			}
		}
		goto _match_end_4526234832;
		_case_end_4526235472:;
		if (!((_1cddd8b83_is_inf(_6420_y,0LL)))) { goto _case_end_4526235584; }
		_case_begin_4526235584:;
		{
			{
				if (!((_6412_x == -1LL))) { goto _case_end_4526246336; }
				_case_begin_4526246336:;
				{
					return 1LL;
				}
				goto _match_end_4526244224;
				_case_end_4526246336:;
				if (!(((_1cddeab62_abs(_6412_x) < 1LL) == _1cddd8b83_is_inf(_6420_y,1LL)))) { goto _case_end_4526245536; }
				_case_begin_4526245536:;
				{
					return 0LL;
				}
				goto _match_end_4526244224;
				_case_end_4526245536:;
				_case_begin_4526241008:;
				{
					return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
				}
				goto _match_end_4526244224;
				_case_end_4526241008:;
				_match_end_4526244224:;
			}
		}
		goto _match_end_4526234832;
		_case_end_4526235584:;
		if (!((_1cddd8b83_is_inf(_6412_x,0LL)))) { goto _case_end_4526235696; }
		_case_begin_4526235696:;
		{
			if (_1cddd8b83_is_inf(_6412_x,-1LL)) {
				return static_cast<jule::F64>(_1ce14d414_pow(static_cast<jule::F64>(jule::div(1LL,_6412_x)),static_cast<jule::F64>((-(_6420_y)))));
			}
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4526250176; }
				_case_begin_4526250176:;
				{
					return 0LL;
				}
				goto _match_end_4526250032;
				_case_end_4526250176:;
				if (!((_6420_y > 0LL))) { goto _case_end_4526248272; }
				_case_begin_4526248272:;
				{
					return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
				}
				goto _match_end_4526250032;
				_case_end_4526248272:;
				_match_end_4526250032:;
			}
		}
		goto _match_end_4526234832;
		_case_end_4526235696:;
		if (!((_6420_y == 0.5))) { goto _case_end_4526235808; }
		_case_begin_4526235808:;
		{
			return static_cast<jule::F64>(_1ce260108_sqrt(_6412_x));
		}
		goto _match_end_4526234832;
		_case_end_4526235808:;
		if (!((_6420_y == -0.5))) { goto _case_end_4526235920; }
		_case_begin_4526235920:;
		{
			return static_cast<jule::F64>(jule::div(1LL,_1ce260108_sqrt(_6412_x)));
		}
		goto _match_end_4526234832;
		_case_end_4526235920:;
		_match_end_4526234832:;
	}
	jule::F64 _10814_yi;
	jule::F64 _10822_yf;
	std::tie(_10814_yi,_10822_yf) = _1cdee74cd_modf(static_cast<jule::F64>(_1cddeab62_abs(_6420_y)));
	if ((_10822_yf != 0LL) && (_6412_x < 0LL)) {
		return static_cast<jule::F64>(_1cddd8b83_nan());
	}
	if (_10814_yi >= 9223372036854775808LLU) {
		{
			if (!((_6412_x == -1LL))) { goto _case_end_4526258560; }
			_case_begin_4526258560:;
			{
				return 1LL;
			}
			goto _match_end_4526254624;
			_case_end_4526258560:;
			if (!(((_1cddeab62_abs(_6412_x) < 1LL) == (_6420_y > 0LL)))) { goto _case_end_4526257760; }
			_case_begin_4526257760:;
			{
				return 0LL;
			}
			goto _match_end_4526254624;
			_case_end_4526257760:;
			_case_begin_4526256448:;
			{
				return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
			}
			goto _match_end_4526254624;
			_case_end_4526256448:;
			_match_end_4526254624:;
		}
	}
	jule::F64 _12613_a1 = 1LL;
	jule::Int _12713_ae = 0LL;
	if (_10822_yf != 0LL) {
		if (_10822_yf > 0.5) {
			(_10822_yf)--;
			(_10814_yi)++;
		}
		_12613_a1=static_cast<jule::F64>(_1ce1555b4_exp(static_cast<jule::F64>(_10822_yf * _1cddda0b3_log(_6412_x))));
	}
	jule::F64 _14214_x1;
	jule::Int _14222_xe;
	std::tie(_14214_x1,_14222_xe) = _1cdd6801e_frexp(_6412_x);
	jule::I64 _14313_i = static_cast<jule::I64>(_10814_yi);
	for (; _14313_i != 0LL; _14313_i>>=1LL) {
		{
			if ((_14222_xe < -4096LL) || (4096LLU < _14222_xe)) {
				_12713_ae+=_14222_xe;
				goto _iter_end_4526264672;
			}
			if ((_14313_i & 1LL) == 1LL) {
				_12613_a1*=_14214_x1;
				_12713_ae+=_14222_xe;
			}
			_14214_x1*=_14214_x1;
			_14222_xe<<=1LL;
			if (_14214_x1 < 0.5) {
				_14214_x1+=_14214_x1;
				(_14222_xe)--;
			}
		}
	_iter_next_4526264672:;
	}
	_iter_end_4526264672:;
	if (_6420_y < 0LL) {
		_12613_a1=static_cast<jule::F64>(jule::div(1LL,_12613_a1));
		_12713_ae=static_cast<jule::Int>((-(_12713_ae)));
	}
	return static_cast<jule::F64>(_1ce0a3226_ldexp(_12613_a1,_12713_ae));
}



inline jule::Bool _1ce14d414_is_odd_int(jule::F64 _17615_x) {
	jule::F64 _17710_xi;
	jule::F64 _17714_xf;
	std::tie(_17710_xi,_17714_xf) = _1cdee74cd_modf(_17615_x);
	return (_17714_xf == 0LL) && ((static_cast<jule::I64>(_17710_xi) & 1LL) == 1LL);
}



inline jule::F64 _1ce1555b4_exp(jule::F64 _12212_x) {
	
	
	
	
	
	
	{
		if (!((_1cddd8b83_is_nan(_12212_x)) || (_1cddd8b83_is_inf(_12212_x,1LL)))) { goto _case_end_4526279824; }
		_case_begin_4526279824:;
		{
			return _12212_x;
		}
		goto _match_end_4526279392;
		_case_end_4526279824:;
		if (!((_1cddd8b83_is_inf(_12212_x,-1LL)))) { goto _case_end_4526279920; }
		_case_begin_4526279920:;
		{
			return 0LL;
		}
		goto _match_end_4526279392;
		_case_end_4526279920:;
		if (!((_12212_x > 709.782712893384))) { goto _case_end_4526280016; }
		_case_begin_4526280016:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
		}
		goto _match_end_4526279392;
		_case_end_4526280016:;
		if (!((_12212_x < -745.1332191019411))) { goto _case_end_4526280112; }
		_case_begin_4526280112:;
		{
			return 0LL;
		}
		goto _match_end_4526279392;
		_case_end_4526280112:;
		if (!(((-0.000000003725290298461914 < _12212_x) && (_12212_x < 0.000000003725290298461914)))) { goto _case_end_4526280208; }
		_case_begin_4526280208:;
		{
			return static_cast<jule::F64>(1LL + _12212_x);
		}
		goto _match_end_4526279392;
		_case_end_4526280208:;
		_match_end_4526279392:;
	}
	jule::Int _14613_k = 0LL;
	{
		if (!((_12212_x < 0LL))) { goto _case_end_4526285200; }
		_case_begin_4526285200:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) - 0.5);
		}
		goto _match_end_4526285040;
		_case_end_4526285200:;
		if (!((_12212_x > 0LL))) { goto _case_end_4526285312; }
		_case_begin_4526285312:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) + 0.5);
		}
		goto _match_end_4526285040;
		_case_end_4526285312:;
		_match_end_4526285040:;
	}
	jule::F64 _1519_hi = _12212_x - (static_cast<jule::F64>(_14613_k) * 0.6931471803691238);
	jule::F64 _1529_lo = static_cast<jule::F64>(_14613_k) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_1ce1555b4_expmulti(_1519_hi,_1529_lo,_14613_k));
}



inline jule::F64 _1ce1555b4_exp2(jule::F64 _16013_x) {
	
	
	
	
	{
		if (!((_1cddd8b83_is_nan(_16013_x)) || (_1cddd8b83_is_inf(_16013_x,1LL)))) { goto _case_end_4526295760; }
		_case_begin_4526295760:;
		{
			return _16013_x;
		}
		goto _match_end_4526295600;
		_case_end_4526295760:;
		if (!((_1cddd8b83_is_inf(_16013_x,-1LL)))) { goto _case_end_4526295872; }
		_case_begin_4526295872:;
		{
			return 0LL;
		}
		goto _match_end_4526295600;
		_case_end_4526295872:;
		if (!((_16013_x > 1023.9999999999999))) { goto _case_end_4526295984; }
		_case_begin_4526295984:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
		}
		goto _match_end_4526295600;
		_case_end_4526295984:;
		if (!((_16013_x < -1074LL))) { goto _case_end_4526296096; }
		_case_begin_4526296096:;
		{
			return 0LL;
		}
		goto _match_end_4526295600;
		_case_end_4526296096:;
		_match_end_4526295600:;
	}
	jule::Int _18113_k = 0LL;
	{
		if (!((_16013_x > 0LL))) { goto _case_end_4526294528; }
		_case_begin_4526294528:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x + 0.5);
		}
		goto _match_end_4526300400;
		_case_end_4526294528:;
		if (!((_16013_x < 0LL))) { goto _case_end_4526300880; }
		_case_begin_4526300880:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x - 0.5);
		}
		goto _match_end_4526300400;
		_case_end_4526300880:;
		_match_end_4526300400:;
	}
	jule::F64 _1869_t = _16013_x - static_cast<jule::F64>(_18113_k);
	jule::F64 _1879_hi = _1869_t * 0.6931471803691238;
	jule::F64 _1889_lo = (-(_1869_t)) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_1ce1555b4_expmulti(_1879_hi,_1889_lo,_18113_k));
}



inline jule::F64 _1ce1555b4_expmulti(jule::F64 _19513_hi,jule::F64 _19522_lo,jule::Int _19531_k) {
	
	
	
	
	
	jule::F64 _2029_r = _19513_hi - _19522_lo;
	jule::F64 _2039_t = _2029_r * _2029_r;
	jule::F64 _2049_c = _2029_r - (_2039_t * (0.16666666666666666 + (_2039_t * (-0.0027777777777015593 + (_2039_t * (0.00006613756321437934 + (_2039_t * (-0.0000016533902205465252 + (_2039_t * 0.000000041381367970572385)))))))));
	jule::F64 _2059_y = 1LL - ((_19522_lo - jule::div(_2029_r * _2049_c,2LL - _2049_c)) - _19513_hi);
	return static_cast<jule::F64>(_1ce0a3226_ldexp(_2059_y,_19531_k));
}



inline jule::F64 _1ce16c048_log1p(jule::F64 _12614_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_12614_x < -1LL) || (_1cddd8b83_is_nan(_12614_x)))) { goto _case_end_4526325200; }
		_case_begin_4526325200:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4526324288;
		_case_end_4526325200:;
		if (!((_12614_x == -1LL))) { goto _case_end_4526325296; }
		_case_begin_4526325296:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(-1LL));
		}
		goto _match_end_4526324288;
		_case_end_4526325296:;
		if (!((_1cddd8b83_is_inf(_12614_x,1LL)))) { goto _case_end_4526331760; }
		_case_begin_4526331760:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
		}
		goto _match_end_4526324288;
		_case_end_4526331760:;
		_match_end_4526324288:;
	}
	jule::F64 _1529_absx = _1cddeab62_abs(_12614_x);
	jule::F64 _15413_f = 0LL;
	jule::U64 _15513_iu = 0LLU;
	jule::Int _15613_k = 1LL;
	if (_1529_absx < 0.41421356237309503) {
		if (_1529_absx < 0.000000001862645149230957) {
			if (_1529_absx < 0.00000000000000005551115123125783) {
				return _12614_x;
			}
			return static_cast<jule::F64>(_12614_x - ((_12614_x * _12614_x) * 0.5));
		}
		if (_12614_x > -0.2928932188134525) {
			_15613_k=0LL;
			_15413_f=_12614_x;
			_15513_iu=1LL;
		}
	}
	jule::F64 _17113_c = 0LL;
	if (_15613_k != 0LL) {
		jule::F64 _17317_u = 0LL;
		if (_1529_absx < 9007199254740992LLU) {
			_17317_u=static_cast<jule::F64>(1LL + _12614_x);
			_15513_iu=static_cast<jule::U64>(_1cdceb9db_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			if (_15613_k > 0LL) {
				_17113_c=static_cast<jule::F64>(1LL - (_17317_u - _12614_x));
			} else {
				_17113_c=static_cast<jule::F64>(_12614_x - (_17317_u - 1LL));
			}
			_17113_c = jule::div(_17113_c,_17317_u);
		} else {
			_17317_u=_12614_x;
			_15513_iu=static_cast<jule::U64>(_1cdceb9db_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			_17113_c=0LL;
		}
		_15513_iu&=4503599627370495LL;
		if (_15513_iu < 1865452045155277LL) {
			_17317_u=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4607182418800017408LL)));
		} else {
			(_15613_k)++;
			_17317_u=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4602678819172646912LL)));
			_15513_iu=static_cast<jule::U64>((4503599627370496LL - _15513_iu) >> 2LL);
		}
		_15413_f=static_cast<jule::F64>(_17317_u - 1LL);
	}
	jule::F64 _2029_hfsq = (0.5 * _15413_f) * _15413_f;
	jule::F64 _20313_s = 0LL;
	jule::F64 _20413_R = 0LL;
	jule::F64 _20513_z = 0LL;
	if (_15513_iu == 0LL) {
		if (_15413_f == 0LL) {
			if (_15613_k == 0LL) {
				return 0LL;
			}
			_17113_c+=static_cast<jule::F64>(static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877);
			return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) + _17113_c);
		}
		_20413_R=static_cast<jule::F64>(_2029_hfsq * (1LL - (0.6666666666666666 * _15413_f)));
		if (_15613_k == 0LL) {
			return static_cast<jule::F64>(_15413_f - _20413_R);
		}
		return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_20413_R - ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c)) - _15413_f));
	}
	_20313_s=static_cast<jule::F64>(jule::div(_15413_f,2LL + _15413_f));
	_20513_z=static_cast<jule::F64>(_20313_s * _20313_s);
	_20413_R=static_cast<jule::F64>(_20513_z * (0.6666666666666735 + (_20513_z * (0.3999999999940942 + (_20513_z * (0.2857142874366239 + (_20513_z * (0.22222198432149784 + (_20513_z * (0.1818357216161805 + (_20513_z * (0.15313837699209373 + (_20513_z * 0.14798198605116586)))))))))))));
	if (_15613_k == 0LL) {
		return static_cast<jule::F64>(_15413_f - (_2029_hfsq - (_20313_s * (_2029_hfsq + _20413_R))));
	}
	return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_2029_hfsq - ((_20313_s * (_2029_hfsq + _20413_R)) + ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c))) - _15413_f));
}



inline std::tuple<jule::F64,jule::F64> _1ce171aec_stirling(jule::F64 _13113_x) {
	if (_13113_x > 200LL) {
		return std::make_tuple(static_cast<jule::F64>(_1cddd8b83_inf(1LL)),1LL);
	}
	
	
	jule::F64 _13713_w = jule::div(1LL,_13113_x);
	_13713_w=static_cast<jule::F64>(1LL + (_13713_w * ((((((((_1ce171aec__GAM_S[0LL] * _13713_w) + _1ce171aec__GAM_S[1LL]) * _13713_w) + _1ce171aec__GAM_S[2LL]) * _13713_w) + _1ce171aec__GAM_S[3LL]) * _13713_w) + _1ce171aec__GAM_S[4LL])));
	jule::F64 _13913_y1 = _1ce1555b4_exp(_13113_x);
	jule::F64 _14013_y2 = 1LL;
	if (_13113_x > 143.01608) {
		jule::F64 _14213_v = _1ce14d414_pow(_13113_x,static_cast<jule::F64>((0.5 * _13113_x) - 0.25));
		std::tie(_13913_y1,_14013_y2) = std::make_tuple(_14213_v,static_cast<jule::F64>(jule::div(_14213_v,_13913_y1)));
	} else {
		_13913_y1=static_cast<jule::F64>(jule::div(_1ce14d414_pow(_13113_x,static_cast<jule::F64>(_13113_x - 0.5)),_13913_y1));
	}
	return std::make_tuple(_13913_y1,static_cast<jule::F64>((2.5066282746310007 * _13713_w) * _14013_y2));
}



inline jule::F64 _1ce171aec_gamma(jule::F64 _15918_x) {
	
	{
		if (!((_1ce171aec_is_neg_int(_15918_x)) || (_1cddd8b83_is_inf(_15918_x,-1LL)) || (_1cddd8b83_is_nan(_15918_x)))) { goto _case_end_4526389936; }
		_case_begin_4526389936:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4526389760;
		_case_end_4526389936:;
		if (!((_1cddd8b83_is_inf(_15918_x,1LL)))) { goto _case_end_4526390048; }
		_case_begin_4526390048:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
		}
		goto _match_end_4526389760;
		_case_end_4526390048:;
		if (!((_15918_x == 0LL))) { goto _case_end_4526390160; }
		_case_begin_4526390160:;
		{
			if (_1ce0be9a1_signbit(_15918_x)) {
				return static_cast<jule::F64>(_1cddd8b83_inf(-1LL));
			}
			return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
		}
		goto _match_end_4526389760;
		_case_end_4526390160:;
		_match_end_4526389760:;
	}
	jule::F64 _17313_q = _1cddeab62_abs(_15918_x);
	jule::F64 _17413_p = _1cdd93ea1_floor(_17313_q);
	if (_17313_q > 33LL) {
		if (_15918_x >= 0LL) {
			jule::F64 _17718_y1;
			jule::F64 _17722_y2;
			std::tie(_17718_y1,_17722_y2) = _1ce171aec_stirling(_15918_x);
			return static_cast<jule::F64>(_17718_y1 * _17722_y2);
		}
		jule::Int _18317_signgam = 1LL;
		jule::I64 _18413_ip = static_cast<jule::I64>(_17413_p);
		if ((_18413_ip & 1LL) == 0LL) {
			_18317_signgam=-1LL;
		}
		jule::F64 _18817_z = _17313_q - _17413_p;
		if (_18817_z > 0.5) {
			_17413_p=static_cast<jule::F64>(_17413_p + 1LL);
			_18817_z=static_cast<jule::F64>(_17313_q - _17413_p);
		}
		_18817_z=static_cast<jule::F64>(_17313_q * _1cdd1c545_sin(static_cast<jule::F64>(3.141592653589793 * _18817_z)));
		if (_18817_z == 0LL) {
			return static_cast<jule::F64>(_1cddd8b83_inf(_18317_signgam));
		}
		jule::F64 _19714_sq1;
		jule::F64 _19719_sq2;
		std::tie(_19714_sq1,_19719_sq2) = _1ce171aec_stirling(_17313_q);
		jule::F64 _19813_absz = _1cddeab62_abs(_18817_z);
		jule::F64 _19913_d = (_19813_absz * _19714_sq1) * _19719_sq2;
		if (_1cddd8b83_is_inf(_19913_d,0LL)) {
			_18817_z=static_cast<jule::F64>(jule::div(jule::div(jule::div(3.141592653589793,_19813_absz),_19714_sq1),_19719_sq2));
		} else {
			_18817_z=static_cast<jule::F64>(jule::div(3.141592653589793,_19913_d));
		}
		return static_cast<jule::F64>(static_cast<jule::F64>(_18317_signgam) * _18817_z);
	}
	jule::F64 _20913_z = 1LL;
	while (_15918_x >= 3LL) {
		{
			_15918_x=static_cast<jule::F64>(_15918_x - 1LL);
			_20913_z=static_cast<jule::F64>(_20913_z * _15918_x);
		}
	_iter_next_4526412560:;
	}
	_iter_end_4526412560:;
	while (_15918_x < 0LL) {
		{
			if (_15918_x > -0.000000001) {
				goto _julec_label_small;
			}
			_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
			_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
		}
	_iter_next_4526414496:;
	}
	_iter_end_4526414496:;
	while (_15918_x < 2LL) {
		{
			if (_15918_x < 0.000000001) {
				goto _julec_label_small;
			}
			_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
			_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
		}
	_iter_next_4526417024:;
	}
	_iter_end_4526417024:;
	if (_15918_x == 2LL) {
		return _20913_z;
	}
	_15918_x=static_cast<jule::F64>(_15918_x - 2LL);
	_17413_p=static_cast<jule::F64>((((((((((((_15918_x * _1ce171aec__GAM_P[0LL]) + _1ce171aec__GAM_P[1LL]) * _15918_x) + _1ce171aec__GAM_P[2LL]) * _15918_x) + _1ce171aec__GAM_P[3LL]) * _15918_x) + _1ce171aec__GAM_P[4LL]) * _15918_x) + _1ce171aec__GAM_P[5LL]) * _15918_x) + _1ce171aec__GAM_P[6LL]);
	_17313_q=static_cast<jule::F64>((((((((((((((_15918_x * _1ce171aec__GAM_Q[0LL]) + _1ce171aec__GAM_Q[1LL]) * _15918_x) + _1ce171aec__GAM_Q[2LL]) * _15918_x) + _1ce171aec__GAM_Q[3LL]) * _15918_x) + _1ce171aec__GAM_Q[4LL]) * _15918_x) + _1ce171aec__GAM_Q[5LL]) * _15918_x) + _1ce171aec__GAM_Q[6LL]) * _15918_x) + _1ce171aec__GAM_Q[7LL]);
	return static_cast<jule::F64>(jule::div(_20913_z * _17413_p,_17313_q));
	_julec_label_small:;
	if (_15918_x == 0LL) {
		return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
	}
	return static_cast<jule::F64>(jule::div(_20913_z,(1LL + (0.5772156649015329 * _15918_x)) * _15918_x));
}



inline jule::Bool _1ce171aec_is_neg_int(jule::F64 _24515_x) {
	if (_24515_x < 0LL) {
		jule::F64 _24717_xf;
		std::tie(std::ignore,_24717_xf) = _1cdee74cd_modf(_24515_x);
		return _24717_xf == 0LL;
	}
	return false;
}



inline jule::F64 _1ce2185ab_erfinv(jule::F64 _10519_x) {
	if ((_1cddd8b83_is_nan(_10519_x) || (_10519_x <= -1LL)) || (_10519_x >= 1LL)) {
		if ((_10519_x == -1LL) || (_10519_x == 1LL)) {
			return static_cast<jule::F64>(_1cddd8b83_inf(static_cast<jule::Int>(_10519_x)));
		}
		return static_cast<jule::F64>(_1cddd8b83_nan());
	}
	jule::Bool _11413_sign = false;
	if (_10519_x < 0LL) {
		_10519_x=static_cast<jule::F64>((-(_10519_x)));
		_11413_sign=true;
	}
	jule::F64 _12013_ans = 0LL;
	if (_10519_x <= 0.85) {
		jule::F64 _12213_r = 0.180625 - ((0.25 * _10519_x) * _10519_x);
		jule::F64 _12313_z1 = (((((((((((((887.0940696254552 * _12213_r) + 11819.493347062295) * _12213_r) + 23782.041382114385) * _12213_r) + 16235.862515167575) * _12213_r) + 4854.886889384388) * _12213_r) + 697.062665343896) * _12213_r) + 47.07268811238398) * _12213_r) + 1.1975323115670913;
		jule::F64 _12413_z2 = (((((((((((((5226.495278852854 * _12213_r) + 28729.085735721943) * _12213_r) + 39307.89580009271) * _12213_r) + 21213.794301586597) * _12213_r) + 5394.196021424751) * _12213_r) + 687.1870074920579) * _12213_r) + 42.31333070160091) * _12213_r) + 1LL;
		_12013_ans=static_cast<jule::F64>(jule::div(_10519_x * _12313_z1,_12413_z2));
	} else {
		jule::F64 _12717_z1 = 0LL;
		jule::F64 _12817_z2 = 0LL;
		jule::F64 _12917_r = _1ce260108_sqrt(static_cast<jule::F64>(0.6931471805599453 - _1cddda0b3_log(static_cast<jule::F64>(1LL - _10519_x))));
		if (_12917_r <= 5LL) {
			_12917_r-=1.6;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.0007745450142783414 * _12917_r) + 0.022723844989269184) * _12917_r) + 0.2417807251774506) * _12917_r) + 1.2704582524523684) * _12917_r) + 3.6478483247632045) * _12917_r) + 5.769497221460691) * _12917_r) + 4.630337846156546) * _12917_r) + 1.4234371107496835);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000014859850019840355 * _12917_r) + 0.0007744145906515771) * _12917_r) + 0.021494160384252878) * _12917_r) + 0.2094506521051275) * _12917_r) + 0.9754783200178743) * _12917_r) + 2.3707661626024534) * _12917_r) + 2.9036514445419948) * _12917_r) + 1.4142135623730951);
		} else {
			_12917_r-=5LL;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.00000020103343992922881 * _12917_r) + 0.000027115555687434876) * _12917_r) + 0.0012426609473880784) * _12917_r) + 0.026532189526576124) * _12917_r) + 0.29656057182850487) * _12917_r) + 1.7848265399172913) * _12917_r) + 5.463784911164114) * _12917_r) + 6.657904643501103);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000000000028910246058729655 * _12917_r) + 0.0000002010321207683943) * _12917_r) + 0.000026110884050805935) * _12917_r) + 0.0011128009970788597) * _12917_r) + 0.02103693768272069) * _12917_r) + 0.19364809469506591) * _12917_r) + 0.8482908416595164) * _12917_r) + 1.4142135623730951);
		}
		_12013_ans=static_cast<jule::F64>(jule::div(_12717_z1,_12817_z2));
	}
	if (_11413_sign) {
		return static_cast<jule::F64>((-(_12013_ans)));
	}
	return _12013_ans;
}



inline jule::F64 _1ce2185ab_erfcinv(jule::F64 _15516_x) {
	return static_cast<jule::F64>(_1ce2185ab_erfinv(static_cast<jule::F64>(1LL - _15516_x)));
}



inline jule::F64 _1ce25e7cd_erf(jule::F64 _21716_x) {
	
	
	{
		if (!((_1cddd8b83_is_nan(_21716_x)))) { goto _case_end_4526478864; }
		_case_begin_4526478864:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4526478480;
		_case_end_4526478864:;
		if (!((_1cddd8b83_is_inf(_21716_x,1LL)))) { goto _case_end_4526478960; }
		_case_begin_4526478960:;
		{
			return 1LL;
		}
		goto _match_end_4526478480;
		_case_end_4526478960:;
		if (!((_1cddd8b83_is_inf(_21716_x,-1LL)))) { goto _case_end_4526479056; }
		_case_begin_4526479056:;
		{
			return -1LL;
		}
		goto _match_end_4526478480;
		_case_end_4526479056:;
		_match_end_4526478480:;
	}
	jule::Bool _22913_sign = false;
	if (_21716_x < 0LL) {
		_21716_x=static_cast<jule::F64>((-(_21716_x)));
		_22913_sign=true;
	}
	if (_21716_x < 0.84375) {
		jule::F64 _23517_temp = 0LL;
		if (_21716_x < 0.000000003725290298461914) {
			if (_21716_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002848094538889218) {
				_23517_temp=static_cast<jule::F64>(0.125 * ((8LL * _21716_x) + (1.0270333367641007 * _21716_x)));
			} else {
				_23517_temp=static_cast<jule::F64>(_21716_x + (0.1283791670955126 * _21716_x));
			}
		} else {
			jule::F64 _24317_z = _21716_x * _21716_x;
			jule::F64 _24417_r = 0.12837916709551256 + (_24317_z * (-0.3250421072470015 + (_24317_z * (-0.02848174957559851 + (_24317_z * (-0.005770270296489442 + (_24317_z * -0.000023763016656650163)))))));
			jule::F64 _24517_s = 1LL + (_24317_z * (0.39791722395915535 + (_24317_z * (0.0650222499887673 + (_24317_z * (0.005081306281875766 + (_24317_z * (0.00013249473800432164 + (_24317_z * -0.000003960228278775368)))))))));
			jule::F64 _24617_y = jule::div(_24417_r,_24517_s);
			_23517_temp=static_cast<jule::F64>(_21716_x + (_21716_x * _24617_y));
		}
		if (_22913_sign) {
			return static_cast<jule::F64>((-(_23517_temp)));
		}
		return _23517_temp;
	}
	if (_21716_x < 1.25) {
		jule::F64 _25513_s = _21716_x - 1LL;
		jule::F64 _25613_P = -0.0023621185607526594 + (_25513_s * (0.41485611868374833 + (_25513_s * (-0.3722078760357013 + (_25513_s * (0.31834661990116175 + (_25513_s * (-0.11089469428239668 + (_25513_s * (0.035478304325618236 + (_25513_s * -0.002166375594868791)))))))))));
		jule::F64 _25713_Q = 1LL + (_25513_s * (0.10642088040084423 + (_25513_s * (0.540397917702171 + (_25513_s * (0.07182865441419627 + (_25513_s * (0.12617121980876164 + (_25513_s * (0.01363708391202905 + (_25513_s * 0.011984499846799107)))))))))));
		if (_22913_sign) {
			return static_cast<jule::F64>(-0.8450629115104675 - jule::div(_25613_P,_25713_Q));
		}
		return static_cast<jule::F64>(0.8450629115104675 + jule::div(_25613_P,_25713_Q));
	}
	if (_21716_x >= 6LL) {
		if (_22913_sign) {
			return -1LL;
		}
		return 1LL;
	}
	jule::F64 _2699_s = jule::div(1LL,_21716_x * _21716_x);
	jule::F64 _27013_R = 0LL;
	jule::F64 _27113_S = 0LL;
	if (_21716_x < 2.857142857142857) {
		_27013_R=static_cast<jule::F64>(-0.009864944034847148 + (_2699_s * (-0.6938585727071818 + (_2699_s * (-10.558626225323291 + (_2699_s * (-62.375332450326006 + (_2699_s * (-162.39666946257347 + (_2699_s * (-184.60509290671104 + (_2699_s * (-81.2874355063066 + (_2699_s * -9.814329344169145))))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (19.651271667439257 + (_2699_s * (137.65775414351904 + (_2699_s * (434.56587747522923 + (_2699_s * (645.3872717332679 + (_2699_s * (429.00814002756783 + (_2699_s * (108.63500554177944 + (_2699_s * (6.570249770319282 + (_2699_s * -0.0604244152148581))))))))))))))));
	} else {
		_27013_R=static_cast<jule::F64>(-0.0098649429247001 + (_2699_s * (-0.799283237680523 + (_2699_s * (-17.757954917754752 + (_2699_s * (-160.63638485582192 + (_2699_s * (-637.5664433683896 + (_2699_s * (-1025.0951316110772 + (_2699_s * -483.5191916086514))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (30.33806074348246 + (_2699_s * (325.7925129965739 + (_2699_s * (1536.729586084437 + (_2699_s * (3199.8582195085955 + (_2699_s * (2553.0504064331644 + (_2699_s * (474.52854120695537 + (_2699_s * -22.44095244658582))))))))))))));
	}
	jule::F64 _2799_z = _1cdceb9db_f64_from_bits(static_cast<jule::U64>(_1cdceb9db_f64_bits(_21716_x) & 18446744069414584320LLU));
	jule::F64 _2809_r = _1ce1555b4_exp(static_cast<jule::F64>(((-(_2799_z)) * _2799_z) - 0.5625)) * _1ce1555b4_exp(static_cast<jule::F64>(((_2799_z - _21716_x) * (_2799_z + _21716_x)) + jule::div(_27013_R,_27113_S)));
	if (_22913_sign) {
		return static_cast<jule::F64>(jule::div(_2809_r,_21716_x) - 1LL);
	}
	return static_cast<jule::F64>(1LL - jule::div(_2809_r,_21716_x));
}



inline jule::F64 _1ce25e7cd_erfc(jule::F64 _29317_x) {
	
	{
		if (!((_1cddd8b83_is_nan(_29317_x)))) { goto _case_end_4526528912; }
		_case_begin_4526528912:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4526528736;
		_case_end_4526528912:;
		if (!((_1cddd8b83_is_inf(_29317_x,1LL)))) { goto _case_end_4526529024; }
		_case_begin_4526529024:;
		{
			return 0LL;
		}
		goto _match_end_4526528736;
		_case_end_4526529024:;
		if (!((_1cddd8b83_is_inf(_29317_x,-1LL)))) { goto _case_end_4526529136; }
		_case_begin_4526529136:;
		{
			return 2LL;
		}
		goto _match_end_4526528736;
		_case_end_4526529136:;
		_match_end_4526528736:;
	}
	jule::Bool _30413_sign = false;
	if (_29317_x < 0LL) {
		_29317_x=static_cast<jule::F64>((-(_29317_x)));
		_30413_sign=true;
	}
	if (_29317_x < 0.84375) {
		jule::F64 _31017_temp = 0LL;
		if (_29317_x < 0.000000000000000013877787807814457) {
			_31017_temp=_29317_x;
		} else {
			jule::F64 _31417_z = _29317_x * _29317_x;
			jule::F64 _31517_r = 0.12837916709551256 + (_31417_z * (-0.3250421072470015 + (_31417_z * (-0.02848174957559851 + (_31417_z * (-0.005770270296489442 + (_31417_z * -0.000023763016656650163)))))));
			jule::F64 _31617_s = 1LL + (_31417_z * (0.39791722395915535 + (_31417_z * (0.0650222499887673 + (_31417_z * (0.005081306281875766 + (_31417_z * (0.00013249473800432164 + (_31417_z * -0.000003960228278775368)))))))));
			jule::F64 _31717_y = jule::div(_31517_r,_31617_s);
			if (_29317_x < 0.25) {
				_31017_temp=static_cast<jule::F64>(_29317_x + (_29317_x * _31717_y));
			} else {
				_31017_temp=static_cast<jule::F64>(0.5 + ((_29317_x * _31717_y) + (_29317_x - 0.5)));
			}
		}
		if (_30413_sign) {
			return static_cast<jule::F64>(1LL + _31017_temp);
		}
		return static_cast<jule::F64>(1LL - _31017_temp);
	}
	if (_29317_x < 1.25) {
		jule::F64 _33013_s = _29317_x - 1LL;
		jule::F64 _33113_P = -0.0023621185607526594 + (_33013_s * (0.41485611868374833 + (_33013_s * (-0.3722078760357013 + (_33013_s * (0.31834661990116175 + (_33013_s * (-0.11089469428239668 + (_33013_s * (0.035478304325618236 + (_33013_s * -0.002166375594868791)))))))))));
		jule::F64 _33213_Q = 1LL + (_33013_s * (0.10642088040084423 + (_33013_s * (0.540397917702171 + (_33013_s * (0.07182865441419627 + (_33013_s * (0.12617121980876164 + (_33013_s * (0.01363708391202905 + (_33013_s * 0.011984499846799107)))))))))));
		if (_30413_sign) {
			return static_cast<jule::F64>(1.8450629115104675 + jule::div(_33113_P,_33213_Q));
		}
		return static_cast<jule::F64>(0.15493708848953247 - jule::div(_33113_P,_33213_Q));
	}
	if (_29317_x < 28LL) {
		jule::F64 _34013_s = jule::div(1LL,_29317_x * _29317_x);
		jule::F64 _34117_R = 0LL;
		jule::F64 _34217_S = 0LL;
		if (_29317_x < 2.857142857142857) {
			_34117_R=static_cast<jule::F64>(-0.009864944034847148 + (_34013_s * (-0.6938585727071818 + (_34013_s * (-10.558626225323291 + (_34013_s * (-62.375332450326006 + (_34013_s * (-162.39666946257347 + (_34013_s * (-184.60509290671104 + (_34013_s * (-81.2874355063066 + (_34013_s * -9.814329344169145))))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (19.651271667439257 + (_34013_s * (137.65775414351904 + (_34013_s * (434.56587747522923 + (_34013_s * (645.3872717332679 + (_34013_s * (429.00814002756783 + (_34013_s * (108.63500554177944 + (_34013_s * (6.570249770319282 + (_34013_s * -0.0604244152148581))))))))))))))));
		} else {
			if (_30413_sign && (_29317_x > 6LL)) {
				return 2LL;
			}
			_34117_R=static_cast<jule::F64>(-0.0098649429247001 + (_34013_s * (-0.799283237680523 + (_34013_s * (-17.757954917754752 + (_34013_s * (-160.63638485582192 + (_34013_s * (-637.5664433683896 + (_34013_s * (-1025.0951316110772 + (_34013_s * -483.5191916086514))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (30.33806074348246 + (_34013_s * (325.7925129965739 + (_34013_s * (1536.729586084437 + (_34013_s * (3199.8582195085955 + (_34013_s * (2553.0504064331644 + (_34013_s * (474.52854120695537 + (_34013_s * -22.44095244658582))))))))))))));
		}
		jule::F64 _35313_z = _1cdceb9db_f64_from_bits(static_cast<jule::U64>(_1cdceb9db_f64_bits(_29317_x) & 18446744069414584320LLU));
		jule::F64 _35413_r = _1ce1555b4_exp(static_cast<jule::F64>(((-(_35313_z)) * _35313_z) - 0.5625)) * _1ce1555b4_exp(static_cast<jule::F64>(((_35313_z - _29317_x) * (_35313_z + _29317_x)) + jule::div(_34117_R,_34217_S)));
		if (_30413_sign) {
			return static_cast<jule::F64>(2LL - jule::div(_35413_r,_29317_x));
		}
		return static_cast<jule::F64>(jule::div(_35413_r,_29317_x));
	}
	if (_30413_sign) {
		return 2LL;
	}
	return 0LL;
}



inline jule::F64 _1ce1c518e_pow10(jule::Int _6114_n) {
	if ((0LL <= _6114_n) && (_6114_n <= 308LL)) {
		return static_cast<jule::F64>(_1ce1c518e_POW10_POSTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>(_6114_n),32LL))] * _1ce1c518e_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>(_6114_n),32LL))]);
	}
	if ((-323LL <= _6114_n) && (_6114_n <= 0LL)) {
		return static_cast<jule::F64>(jule::div(_1ce1c518e_POW10_NEGTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>((-(_6114_n))),32LL))],_1ce1c518e_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>((-(_6114_n))),32LL))]));
	}
	if (_6114_n > 0LL) {
		return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
	}
	return 0LL;
}



inline jule::F64 _1ce260108_sqrt(jule::F64 _12313_x) {
	{
		if (!((_12313_x == 0LL) || (_1cddd8b83_is_nan(_12313_x)) || (_1cddd8b83_is_inf(_12313_x,1LL)))) { goto _case_end_4526583072; }
		_case_begin_4526583072:;
		{
			return _12313_x;
		}
		goto _match_end_4526582848;
		_case_end_4526583072:;
		if (!((_12313_x < 0LL))) { goto _case_end_4526583904; }
		_case_begin_4526583904:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4526582848;
		_case_end_4526583904:;
		_match_end_4526582848:;
	}
	jule::U64 _13113_ix = _1cdceb9db_f64_bits(_12313_x);
	jule::Int _13313_exp = static_cast<jule::Int>((_13113_ix >> 52LL) & 2047LL);
	if (_13313_exp == 0LL) {
		while ((_13113_ix & 4503599627370496LLU) == 0LL) {
			{
				_13113_ix<<=1LL;
				(_13313_exp)--;
			}
		_iter_next_4526587968:;
		}
		_iter_end_4526587968:;
		(_13313_exp)++;
	}
	_13313_exp-=1023LL;
	_13113_ix=static_cast<jule::U64>(_13113_ix & 9227875636482146303LLU);
	_13113_ix|=4503599627370496LLU;
	if ((_13313_exp & 1LL) == 1LL) {
		_13113_ix<<=1LL;
	}
	_13313_exp>>=1LL;
	_13113_ix<<=1LL;
	jule::U64 _15013_q = 0LLU;
	jule::U64 _15113_s = 0LLU;
	jule::U64 _15213_r = static_cast<jule::U64>(9007199254740992LLU);
	while (_15213_r != 0LL) {
		{
			jule::U64 _15413_t = _15113_s + _15213_r;
			if (_15413_t <= _13113_ix) {
				_15113_s=static_cast<jule::U64>(_15413_t + _15213_r);
				_13113_ix-=_15413_t;
				_15013_q+=_15213_r;
			}
			_13113_ix<<=1LL;
			_15213_r>>=1LL;
		}
	_iter_next_4526594592:;
	}
	_iter_end_4526594592:;
	if (_13113_ix != 0LL) {
		_15013_q+=static_cast<jule::U64>(_15013_q & 1LL);
	}
	_13113_ix=static_cast<jule::U64>((_15013_q >> 1LL) + (static_cast<jule::U64>((_13313_exp - 1LL) + 1023LL) << 52LL));
	return static_cast<jule::F64>(_1cdceb9db_f64_from_bits(_13113_ix));
}



inline jule::F64 _1ce2b9c89_logb(jule::F64 _4413_x) {
	{
		if (!((_4413_x == 0LL))) { goto _case_end_4526602064; }
		_case_begin_4526602064:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(-1LL));
		}
		goto _match_end_4526601808;
		_case_end_4526602064:;
		if (!((_1cddd8b83_is_inf(_4413_x,0LL)))) { goto _case_end_4526602160; }
		_case_begin_4526602160:;
		{
			return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
		}
		goto _match_end_4526601808;
		_case_end_4526602160:;
		if (!((_1cddd8b83_is_nan(_4413_x)))) { goto _case_end_4526602272; }
		_case_begin_4526602272:;
		{
			return _4413_x;
		}
		goto _match_end_4526601808;
		_case_end_4526602272:;
		_match_end_4526601808:;
	}
	return static_cast<jule::F64>(_1ce2b9c89__ilogb(_4413_x));
}



inline jule::Int _1ce2b9c89_ilogb(jule::F64 _6314_x) {
	{
		if (!((_6314_x == 0LL))) { goto _case_end_4526606480; }
		_case_begin_4526606480:;
		{
			return -2147483648LL;
		}
		goto _match_end_4526604848;
		_case_end_4526606480:;
		if (!((_1cddd8b83_is_nan(_6314_x)))) { goto _case_end_4526606576; }
		_case_begin_4526606576:;
		{
			return 2147483647LL;
		}
		goto _match_end_4526604848;
		_case_end_4526606576:;
		if (!((_1cddd8b83_is_inf(_6314_x,0LL)))) { goto _case_end_4526606672; }
		_case_begin_4526606672:;
		{
			return 2147483647LL;
		}
		goto _match_end_4526604848;
		_case_end_4526606672:;
		_match_end_4526604848:;
	}
	return static_cast<jule::Int>(_1ce2b9c89__ilogb(_6314_x));
}



inline jule::Int _1ce2b9c89__ilogb(jule::F64 _7715_x) {
	jule::Int _7813_exp = 0LL;
	std::tie(_7715_x,_7813_exp) = _1cddd8b83_normalize(_7715_x);
	return static_cast<jule::Int>((static_cast<jule::Int>((_1cdceb9db_f64_bits(_7715_x) >> 52LL) & 2047LL) - 1023LL) + _7813_exp);
}



inline jule::F64 _1ce26114d_jn(jule::Int _8415_n,jule::F64 _8427_x) {
	
	
	{
		if (!((_1cddd8b83_is_nan(_8427_x)))) { goto _case_end_4526616192; }
		_case_begin_4526616192:;
		{
			return _8427_x;
		}
		goto _match_end_4526615952;
		_case_end_4526616192:;
		if (!((_1cddd8b83_is_inf(_8427_x,0LL)))) { goto _case_end_4526616288; }
		_case_begin_4526616288:;
		{
			return 0LL;
		}
		goto _match_end_4526615952;
		_case_end_4526616288:;
		_match_end_4526615952:;
	}
	if (_8415_n == 0LL) {
		return static_cast<jule::F64>(_1ce04ca0b_j0(_8427_x));
	}
	if (_8427_x == 0LL) {
		return 0LL;
	}
	if (_8415_n < 0LL) {
		std::tie(_8415_n,_8427_x) = std::make_tuple(static_cast<jule::Int>((-(_8415_n))),static_cast<jule::F64>((-(_8427_x))));
	}
	if (_8415_n == 1LL) {
		return static_cast<jule::F64>(_1cddeabd9_j1(_8427_x));
	}
	jule::Bool _10913_sign = false;
	if (_8427_x < 0LL) {
		_8427_x=static_cast<jule::F64>((-(_8427_x)));
		if ((_8415_n & 1LL) == 1LL) {
			_10913_sign=true;
		}
	}
	jule::F64 _11613_b = 0LL;
	if (static_cast<jule::F64>(_8415_n) <= _8427_x) {
		if (_8427_x >= 5967269506265907200LL) {
			jule::F64 _13321_temp = 0LL;
			jule::F64 _13418_s;
			jule::F64 _13421_c;
			std::tie(_13418_s,_13421_c) = _1cddc17d6_sincos(_8427_x);
			{
				auto _match_expr{ _8415_n & 3LL };
				if (!((0LL) == _match_expr)) { goto _case_end_4526630432; }
				_case_begin_4526630432:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c + _13418_s);
				}
				goto _match_end_4526630016;
				_case_end_4526630432:;
				if (!((1LL) == _match_expr)) { goto _case_end_4526630528; }
				_case_begin_4526630528:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) + _13418_s);
				}
				goto _match_end_4526630016;
				_case_end_4526630528:;
				if (!((2LL) == _match_expr)) { goto _case_end_4526630624; }
				_case_begin_4526630624:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) - _13418_s);
				}
				goto _match_end_4526630016;
				_case_end_4526630624:;
				if (!((3LL) == _match_expr)) { goto _case_end_4526630720; }
				_case_begin_4526630720:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c - _13418_s);
				}
				goto _match_end_4526630016;
				_case_end_4526630720:;
				_match_end_4526630016:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13321_temp,_1ce260108_sqrt(_8427_x)));
		} else {
			_11613_b=static_cast<jule::F64>(_1cddeabd9_j1(_8427_x));
			jule::Int _14422_i = 1LL;
			jule::F64 _14429_a = _1ce04ca0b_j0(_8427_x);
			std::tie(_14422_i,_14429_a) = std::make_tuple(1LL,_1ce04ca0b_j0(_8427_x));
			for (; _14422_i < _8415_n; (_14422_i)++) {
				{
					std::tie(_14429_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>((_11613_b * jule::div(static_cast<jule::F64>(_14422_i + _14422_i),_8427_x)) - _14429_a));
				}
			_iter_next_4526635472:;
			}
			_iter_end_4526635472:;
		}
	} else {
		if (_8427_x < 0.000000001862645149230957) {
			if (_8415_n > 33LL) {
				_11613_b=0LL;
			} else {
				jule::F64 _15721_temp = _8427_x * 0.5;
				_11613_b=_15721_temp;
				jule::F64 _15925_a = 1LL;
				jule::Int _16025_i = 2LL;
				for (; _16025_i <= _8415_n; (_16025_i)++) {
					{
						_15925_a*=static_cast<jule::F64>(_16025_i);
						_11613_b*=_15721_temp;
					}
				_iter_next_4526640880:;
				}
				_iter_end_4526640880:;
				_11613_b = jule::div(_11613_b,_15925_a);
			}
		} else {
			jule::F64 _19717_w = jule::div(static_cast<jule::F64>(_8415_n + _8415_n),_8427_x);
			jule::F64 _19817_h = jule::div(2LL,_8427_x);
			jule::F64 _19921_q0 = _19717_w;
			jule::F64 _20021_z = _19717_w + _19817_h;
			jule::F64 _20121_q1 = (_19717_w * _20021_z) - 1LL;
			jule::Int _20221_k = 1LL;
			while (_20121_q1 < 1000000000LL) {
				{
					(_20221_k)++;
					_20021_z+=_19817_h;
					std::tie(_19921_q0,_20121_q1) = std::make_tuple(_20121_q1,static_cast<jule::F64>((_20021_z * _20121_q1) - _19921_q0));
				}
			_iter_next_4526648656:;
			}
			_iter_end_4526648656:;
			jule::Int _20817_m = _8415_n + _8415_n;
			jule::F64 _20921_t = 0LL;
			jule::Int _21021_i = 2LL * (_8415_n + _20221_k);
			for (; _21021_i >= _20817_m; _21021_i-=2LL) {
				{
					_20921_t=static_cast<jule::F64>(jule::div(1LL,jule::div(static_cast<jule::F64>(_21021_i),_8427_x) - _20921_t));
				}
			_iter_next_4526655488:;
			}
			_iter_end_4526655488:;
			jule::F64 _21421_a = _20921_t;
			_11613_b=1LL;
			jule::F64 _22421_tmp = static_cast<jule::F64>(_8415_n);
			jule::F64 _22517_v = jule::div(2LL,_8427_x);
			_22421_tmp=static_cast<jule::F64>(_22421_tmp * _1cddda0b3_log(static_cast<jule::F64>(_1cddeab62_abs(static_cast<jule::F64>(_22517_v * _22421_tmp)))));
			if (_22421_tmp < 709.782712893384) {
				_21021_i=static_cast<jule::Int>(_8415_n - 1LL);
				for (; _21021_i > 0LL; (_21021_i)--) {
					{
						jule::F64 _23025_di = static_cast<jule::F64>(_21021_i + _21021_i);
						std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23025_di,_8427_x) - _21421_a));
					}
				_iter_next_4526660304:;
				}
				_iter_end_4526660304:;
			} else {
				_21021_i=static_cast<jule::Int>(_8415_n - 1LL);
				for (; _21021_i > 0LL; (_21021_i)--) {
					{
						jule::F64 _23625_di = static_cast<jule::F64>(_21021_i + _21021_i);
						std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23625_di,_8427_x) - _21421_a));
						if (_11613_b > 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
							_21421_a = jule::div(_21421_a,_11613_b);
							_20921_t = jule::div(_20921_t,_11613_b);
							_11613_b=1LL;
						}
					}
				_iter_next_4526665616:;
				}
				_iter_end_4526665616:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(_20921_t * _1ce04ca0b_j0(_8427_x),_11613_b));
		}
	}
	if (_10913_sign) {
		return static_cast<jule::F64>((-(_11613_b)));
	}
	return _11613_b;
}



inline jule::F64 _1ce26114d_yn(jule::Int _26315_n,jule::F64 _26323_x) {
	
	{
		if (!((_26323_x < 0LL) || (_1cddd8b83_is_nan(_26323_x)))) { goto _case_end_4526672432; }
		_case_begin_4526672432:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4526672272;
		_case_end_4526672432:;
		if (!((_1cddd8b83_is_inf(_26323_x,1LL)))) { goto _case_end_4526672544; }
		_case_begin_4526672544:;
		{
			return 0LL;
		}
		goto _match_end_4526672272;
		_case_end_4526672544:;
		_match_end_4526672272:;
	}
	if (_26315_n == 0LL) {
		return static_cast<jule::F64>(_1ce04ca0b_y0(_26323_x));
	}
	if (_26323_x == 0LL) {
		if ((_26315_n < 0LL) && ((_26315_n & 1LL) == 1LL)) {
			return static_cast<jule::F64>(_1cddd8b83_inf(1LL));
		}
		return static_cast<jule::F64>(_1cddd8b83_inf(-1LL));
	}
	jule::Bool _28213_sign = false;
	if (_26315_n < 0LL) {
		_26315_n=static_cast<jule::Int>((-(_26315_n)));
		if ((_26315_n & 1LL) == 1LL) {
			_28213_sign=true;
		}
	}
	if (_26315_n == 1LL) {
		if (_28213_sign) {
			return static_cast<jule::F64>((-(_1cddeabd9_y1(_26323_x))));
		}
		return static_cast<jule::F64>(_1cddeabd9_y1(_26323_x));
	}
	jule::F64 _29513_b = 0LL;
	if (_26323_x >= 5967269506265907200LL) {
		jule::F64 _31017_temp = 0LL;
		jule::F64 _31114_s;
		jule::F64 _31117_c;
		std::tie(_31114_s,_31117_c) = _1cddc17d6_sincos(_26323_x);
		{
			auto _match_expr{ _26315_n & 3LL };
			if (!((0LL) == _match_expr)) { goto _case_end_4526687328; }
			_case_begin_4526687328:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s - _31117_c);
			}
			goto _match_end_4526686912;
			_case_end_4526687328:;
			if (!((1LL) == _match_expr)) { goto _case_end_4526687424; }
			_case_begin_4526687424:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) - _31117_c);
			}
			goto _match_end_4526686912;
			_case_end_4526687424:;
			if (!((2LL) == _match_expr)) { goto _case_end_4526687520; }
			_case_begin_4526687520:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) + _31117_c);
			}
			goto _match_end_4526686912;
			_case_end_4526687520:;
			if (!((3LL) == _match_expr)) { goto _case_end_4526687616; }
			_case_begin_4526687616:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s + _31117_c);
			}
			goto _match_end_4526686912;
			_case_end_4526687616:;
			_match_end_4526686912:;
		}
		_29513_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _31017_temp,_1ce260108_sqrt(_26323_x)));
	} else {
		jule::F64 _32017_a = _1ce04ca0b_y0(_26323_x);
		_29513_b=static_cast<jule::F64>(_1cddeabd9_y1(_26323_x));
		jule::Int _32317_i = 1LL;
		for (; (_32317_i < _26315_n) && (!(_1cddd8b83_is_inf(_29513_b,-1LL))); (_32317_i)++) {
			{
				std::tie(_32017_a,_29513_b) = std::make_tuple(_29513_b,static_cast<jule::F64>((jule::div(static_cast<jule::F64>(_32317_i + _32317_i),_26323_x) * _29513_b) - _32017_a));
			}
		_iter_next_4526682320:;
		}
		_iter_end_4526682320:;
	}
	if (_28213_sign) {
		return static_cast<jule::F64>((-(_29513_b)));
	}
	return _29513_b;
}



inline jule::F64 _1ce2b1ec3_remainder(jule::F64 _6822_x,jule::F64 _6834_y) {
	
	
	{
		if (!((_1cddd8b83_is_nan(_6822_x)) || (_1cddd8b83_is_nan(_6834_y)) || (_1cddd8b83_is_inf(_6822_x,0LL)) || (_6834_y == 0LL))) { goto _case_end_4526699792; }
		_case_begin_4526699792:;
		{
			return static_cast<jule::F64>(_1cddd8b83_nan());
		}
		goto _match_end_4526699168;
		_case_end_4526699792:;
		if (!((_1cddd8b83_is_inf(_6834_y,0LL)))) { goto _case_end_4526699888; }
		_case_begin_4526699888:;
		{
			return _6822_x;
		}
		goto _match_end_4526699168;
		_case_end_4526699888:;
		_match_end_4526699168:;
	}
	jule::Bool _7913_sign = false;
	if (_6822_x < 0LL) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
		_7913_sign=true;
	}
	if (_6834_y < 0LL) {
		_6834_y=static_cast<jule::F64>((-(_6834_y)));
	}
	if (_6822_x == _6834_y) {
		if (_7913_sign) {
			jule::F64 _8917_zero = 0LL;
			return static_cast<jule::F64>((-(_8917_zero)));
		}
		return 0LL;
	}
	if (_6834_y <= 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
		_6822_x=static_cast<jule::F64>(_1cdd58949_mod(_6822_x,static_cast<jule::F64>(_6834_y + _6834_y)));
	}
	if (_6834_y < 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403) {
		if ((_6822_x + _6822_x) > _6834_y) {
			_6822_x-=_6834_y;
			if ((_6822_x + _6822_x) >= _6834_y) {
				_6822_x-=_6834_y;
			}
		}
	} else {
		jule::F64 _10513_y_half = 0.5 * _6834_y;
		if (_6822_x > _10513_y_half) {
			_6822_x-=_6834_y;
			if (_6822_x >= _10513_y_half) {
				_6822_x-=_6834_y;
			}
		}
	}
	if (_7913_sign) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
	}
	return _6822_x;
}



inline jule::F64 _1ce3402c6_xatan(jule::F64 _8610_x) {
	
	
	
	
	
	
	
	
	
	
	jule::F64 _9813_z = _8610_x * _8610_x;
	_9813_z=static_cast<jule::F64>(jule::div(_9813_z * ((((((((-0.8750608600031904 * _9813_z) + -16.157537187333652) * _9813_z) + -75.00855792314705) * _9813_z) + -122.88666844901361) * _9813_z) + -64.85021904942025),((((((((_9813_z + 24.858464901423062) * _9813_z) + 165.02700983169885) * _9813_z) + 432.88106049129027) * _9813_z) + 485.3903996359137) * _9813_z) + 194.5506571482614));
	_9813_z=static_cast<jule::F64>((_8610_x * _9813_z) + _8610_x);
	return _9813_z;
}



inline jule::F64 _1ce3402c6_satan(jule::F64 _10610_x) {
	
	
	if (_10610_x <= 0.66) {
		return static_cast<jule::F64>(_1ce3402c6_xatan(_10610_x));
	}
	if (_10610_x > 2.414213562373095) {
		return static_cast<jule::F64>((1.5707963267948966 - _1ce3402c6_xatan(static_cast<jule::F64>(jule::div(1LL,_10610_x)))) + 0.00000000000000006123233995736766);
	}
	return static_cast<jule::F64>((0.7853981633974483 + _1ce3402c6_xatan(static_cast<jule::F64>(jule::div(_10610_x - 1LL,_10610_x + 1LL)))) + 0.00000000000000003061616997868383);
}



inline jule::F64 _1ce3402c6_atan(jule::F64 _12413_x) {
	if (_12413_x == 0LL) {
		return _12413_x;
	}
	if (_12413_x > 0LL) {
		return static_cast<jule::F64>(_1ce3402c6_satan(_12413_x));
	}
	return static_cast<jule::F64>((-(_1ce3402c6_satan(static_cast<jule::F64>((-(_12413_x)))))));
}



inline jule::F64 _1ce2dda05_asin(jule::F64 _5017_x) {
	if (_5017_x == 0LL) {
		return _5017_x;
	}
	jule::Bool _5413_sign = false;
	if (_5017_x < 0LL) {
		_5017_x=static_cast<jule::F64>((-(_5017_x)));
		_5413_sign=true;
	}
	if (_5017_x > 1LL) {
		return static_cast<jule::F64>(_1cddd8b83_nan());
	}
	jule::F64 _6313_temp = _1ce260108_sqrt(static_cast<jule::F64>(1LL - (_5017_x * _5017_x)));
	if (_5017_x > 0.7) {
		_6313_temp=static_cast<jule::F64>(1.5707963267948966 - _1ce3402c6_satan(static_cast<jule::F64>(jule::div(_6313_temp,_5017_x))));
	} else {
		_6313_temp=static_cast<jule::F64>(_1ce3402c6_satan(static_cast<jule::F64>(jule::div(_5017_x,_6313_temp))));
	}
	if (_5413_sign) {
		_6313_temp=static_cast<jule::F64>((-(_6313_temp)));
	}
	return _6313_temp;
}



inline jule::F64 _1ce2dda05_acos(jule::F64 _8013_x) {
	return static_cast<jule::F64>(1.5707963267948966 - _1ce2dda05_asin(_8013_x));
}



inline jule::F64 _1ce35d9cb_asinh(jule::F64 _7018_x) {
	
	
	
	if (_1cddd8b83_is_nan(_7018_x) || _1cddd8b83_is_inf(_7018_x,0LL)) {
		return _7018_x;
	}
	jule::Bool _7913_sign = false;
	if (_7018_x < 0LL) {
		_7018_x=static_cast<jule::F64>((-(_7018_x)));
		_7913_sign=true;
	}
	jule::F64 _8413_temp = 0LL;
	{
		if (!((_7018_x > 268435456LLU))) { goto _case_end_4526771392; }
		_case_begin_4526771392:;
		{
			_8413_temp=static_cast<jule::F64>(_1cddda0b3_log(_7018_x) + 0.6931471805599453);
		}
		goto _match_end_4526770288;
		_case_end_4526771392:;
		if (!((_7018_x > 2LL))) { goto _case_end_4526772320; }
		_case_begin_4526772320:;
		{
			_8413_temp=static_cast<jule::F64>(_1cddda0b3_log(static_cast<jule::F64>((2LL * _7018_x) + jule::div(1LL,_1ce260108_sqrt(static_cast<jule::F64>((_7018_x * _7018_x) + 1LL)) + _7018_x))));
		}
		goto _match_end_4526770288;
		_case_end_4526772320:;
		if (!((_7018_x < 0.000000003725290298461914))) { goto _case_end_4526773616; }
		_case_begin_4526773616:;
		{
			_8413_temp=_7018_x;
		}
		goto _match_end_4526770288;
		_case_end_4526773616:;
		_case_begin_4526770656:;
		{
			_8413_temp=static_cast<jule::F64>(_1ce16c048_log1p(static_cast<jule::F64>(_7018_x + jule::div(_7018_x * _7018_x,1LL + _1ce260108_sqrt(static_cast<jule::F64>(1LL + (_7018_x * _7018_x)))))));
		}
		goto _match_end_4526770288;
		_case_end_4526770656:;
		_match_end_4526770288:;
	}
	if (_7913_sign) {
		_8413_temp=static_cast<jule::F64>((-(_8413_temp)));
	}
	return _8413_temp;
}



inline std::tuple<jule::Bool,jule::Int> _1e76e9e3c_conv_bool(jule::Str _4118_s) {
	{
		auto _match_expr{ _4118_s };
		if (!((jule::Str("1", 1)) == _match_expr || (jule::Str("t", 1)) == _match_expr || (jule::Str("T", 1)) == _match_expr || (jule::Str("true", 4)) == _match_expr || (jule::Str("TRUE", 4)) == _match_expr || (jule::Str("True", 4)) == _match_expr)) { goto _case_end_4527194240; }
		_case_begin_4527194240:;
		{
			return std::make_tuple(true,0LLU);
		}
		goto _match_end_4527194128;
		_case_end_4527194240:;
		if (!((jule::Str("0", 1)) == _match_expr || (jule::Str("f", 1)) == _match_expr || (jule::Str("F", 1)) == _match_expr || (jule::Str("false", 5)) == _match_expr || (jule::Str("FALSE", 5)) == _match_expr || (jule::Str("False", 5)) == _match_expr)) { goto _case_end_4527194464; }
		_case_begin_4527194464:;
		{
			return std::make_tuple(false,0LLU);
		}
		goto _match_end_4527194128;
		_case_end_4527194464:;
		_match_end_4527194128:;
	}
	return std::make_tuple(false,2LLU);
}



inline jule::Str _1e76e9e3c_fmt_bool(jule::Bool _5217_b) {
	if (_5217_b) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1e770c537_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_1e770c537_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1e770c537_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_1e770c537_FloatInfo* _8413_flt = nullptr;
	{
		auto _match_expr{ _8270_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4527209664; }
		_case_begin_4527209664:;
		{
			_8313_bits=static_cast<jule::U64>(_1cdceb9db_f32_bits(static_cast<jule::F32>(_8234_val)));
			_8413_flt=(&(_1e770c537_F32_INFO));
		}
		goto _match_end_4527208144;
		_case_end_4527209664:;
		if (!((64LL) == _match_expr)) { goto _case_end_4527209200; }
		_case_begin_4527209200:;
		{
			_8313_bits=static_cast<jule::U64>(_1cdceb9db_f64_bits(_8234_val));
			_8413_flt=(&(_1e770c537_F64_INFO));
		}
		goto _match_end_4527208144;
		_case_end_4527209200:;
		_case_begin_4527207600:;
		{
			jule::panic(jule::Str("std::conv: illegal bit_size", 27));
		}
		goto _match_end_4527208144;
		_case_end_4527207600:;
		_match_end_4527208144:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & ((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto _match_expr{ _9713_exp };
		if (!(((1LL << _8413_flt->_field_expbits) - 1LL) == _match_expr)) { goto _case_end_4527218336; }
		_case_begin_4527218336:;
		{
			jule::Str _10317_s = jule::Str("", 0);
			{
				if (!((_9813_mant != 0LL))) { goto _case_end_4527222464; }
				_case_begin_4527222464:;
				{
					_10317_s=jule::Str("nan", 3);
				}
				goto _match_end_4527221568;
				_case_end_4527222464:;
				if (!((_969_neg))) { goto _case_end_4527223440; }
				_case_begin_4527223440:;
				{
					_10317_s=jule::Str("-inf", 4);
				}
				goto _match_end_4527221568;
				_case_end_4527223440:;
				_case_begin_4527221680:;
				{
					_10317_s=jule::Str("+inf", 4);
				}
				goto _match_end_4527221568;
				_case_end_4527221680:;
				_match_end_4527221568:;
			}
			return jule::append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
		}
		goto _match_end_4527217200;
		_case_end_4527218336:;
		if (!((0LL) == _match_expr)) { goto _case_end_4527219760; }
		_case_begin_4527219760:;
		{
			(_9713_exp)++;
		}
		goto _match_end_4527217200;
		_case_end_4527219760:;
		_case_begin_4527212144:;
		{
			_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
		}
		goto _match_end_4527217200;
		_case_end_4527212144:;
		_match_end_4527217200:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _1e770c537_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _1e770c537_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _1e770c537_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_1e770c537_DecimalSlice _13413_digs = _1e770c537_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		jule::Array<jule::U8,32> _14013_buf = jule::Array<jule::U8,32>({});
		_13413_digs._field_d=_14013_buf.slice(0LL);
		_1e86eaaa7_ryu_ftoa_shortest(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4527235984; }
			_case_begin_4527235984:;
			{
				_8259_prec=static_cast<jule::Int>(_1e770c537_max(static_cast<jule::Int>(_13413_digs._field_nd - 1LL),0LL));
			}
			goto _match_end_4527235904;
			_case_end_4527235984:;
			if (!(('f') == _match_expr)) { goto _case_end_4527236080; }
			_case_begin_4527236080:;
			{
				_8259_prec=static_cast<jule::Int>(_1e770c537_max(static_cast<jule::Int>(_13413_digs._field_nd - _13413_digs._field_dp),0LL));
			}
			goto _match_end_4527235904;
			_case_end_4527236080:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4527236464; }
			_case_begin_4527236464:;
			{
				_8259_prec=_13413_digs._field_nd;
			}
			goto _match_end_4527235904;
			_case_end_4527236464:;
			_match_end_4527235904:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15517_digits = _8259_prec;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4527242560; }
			_case_begin_4527242560:;
			{
				(_15517_digits)++;
			}
			goto _match_end_4527241248;
			_case_end_4527242560:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4527241616; }
			_case_begin_4527241616:;
			{
				if (_8259_prec == 0LL) {
					_8259_prec=1LL;
				}
				_15517_digits=_8259_prec;
			}
			goto _match_end_4527241248;
			_case_end_4527241616:;
			_case_begin_4527237312:;
			{
				_15517_digits=1LL;
			}
			goto _match_end_4527241248;
			_case_end_4527237312:;
			_match_end_4527241248:;
		}
		jule::Array<jule::U8,24> _16813_buf = jule::Array<jule::U8,24>({});
		if ((_8270_bit_size == 32LL) && (_15517_digits <= 9LL)) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_1e86eaaa7_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		} else if (_15517_digits <= 18LL) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_1e86eaaa7_ryu_ftoa_fixed64(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _1e770c537_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _1e770c537_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1e770c537_big_ftoa(jule::Slice<jule::U8> _18617_dst,jule::Int _18634_prec,jule::U8 _18645_fmt,jule::Bool _18656_neg,jule::U64 _18713_mant,jule::Int _18724_exp,_1e770c537_FloatInfo& _18735_flt) {
	_1e878448c_Decimal _18813_d = _1e878448c_Decimal();
	_18813_d._method_assign(_18713_mant);
	_18813_d._method_shift(static_cast<jule::Int>(_18724_exp - static_cast<jule::Int>(_18735_flt._field_mantbits)));
	_1e770c537_DecimalSlice _19113_digs = _1e770c537_DecimalSlice();
	jule::Bool _1929_shortest = _18634_prec < 0LL;
	if (_1929_shortest) {
		_1e770c537_round_shortest(_18813_d,_18713_mant,_18724_exp,_18735_flt);
		_19113_digs=_1e770c537_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4527265936; }
			_case_begin_4527265936:;
			{
				_18634_prec=static_cast<jule::Int>(_19113_digs._field_nd - 1LL);
			}
			goto _match_end_4527264672;
			_case_end_4527265936:;
			if (!(('f') == _match_expr)) { goto _case_end_4527266032; }
			_case_begin_4527266032:;
			{
				_18634_prec=static_cast<jule::Int>(_1e770c537_max(static_cast<jule::Int>(_19113_digs._field_nd - _19113_digs._field_dp),0LL));
			}
			goto _match_end_4527264672;
			_case_end_4527266032:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4527266192; }
			_case_begin_4527266192:;
			{
				_18634_prec=_19113_digs._field_nd;
			}
			goto _match_end_4527264672;
			_case_end_4527266192:;
			_match_end_4527264672:;
		}
	} else {
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4527270400; }
			_case_begin_4527270400:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18634_prec + 1LL));
			}
			goto _match_end_4527270320;
			_case_end_4527270400:;
			if (!(('f') == _match_expr)) { goto _case_end_4527266704; }
			_case_begin_4527266704:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18813_d._field_dp + _18634_prec));
			}
			goto _match_end_4527270320;
			_case_end_4527266704:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4527266800; }
			_case_begin_4527266800:;
			{
				if (_18634_prec == 0LL) {
					_18634_prec=1LL;
				}
				_18813_d._method_round(_18634_prec);
			}
			goto _match_end_4527270320;
			_case_end_4527266800:;
			_match_end_4527270320:;
		}
		_19113_digs=_1e770c537_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
	}
	return _1e770c537_fmt_digits(_18617_dst,_1929_shortest,_18656_neg,_19113_digs,_18634_prec,_18645_fmt);
}



inline jule::Slice<jule::U8> _1e770c537_fmt_digits(jule::Slice<jule::U8> _22319_dst,jule::Bool _22332_shortest,jule::Bool _22348_neg,_1e770c537_DecimalSlice _22413_digs,jule::Int _22437_prec,jule::U8 _22448_fmt) {
	{
		auto _match_expr{ _22448_fmt };
		if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4527280480; }
		_case_begin_4527280480:;
		{
			return _1e770c537_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec,_22448_fmt);
		}
		goto _match_end_4527280288;
		_case_end_4527280480:;
		if (!(('f') == _match_expr)) { goto _case_end_4527280592; }
		_case_begin_4527280592:;
		{
			return _1e770c537_fmt_f(_22319_dst,_22348_neg,_22413_digs,_22437_prec);
		}
		goto _match_end_4527280288;
		_case_end_4527280592:;
		if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4527280688; }
		_case_begin_4527280688:;
		{
			jule::Int _23217_eprec = _22437_prec;
			if ((_23217_eprec > _22413_digs._field_nd) && (_22413_digs._field_nd >= _22413_digs._field_dp)) {
				_23217_eprec=_22413_digs._field_nd;
			}
			if (_22332_shortest) {
				_23217_eprec=6LL;
			}
			jule::Int _24213_exp = _22413_digs._field_dp - 1LL;
			if ((_24213_exp < -4LL) || (_24213_exp >= _23217_eprec)) {
				if (_22437_prec > _22413_digs._field_nd) {
					_22437_prec=_22413_digs._field_nd;
				}
				return _1e770c537_fmt_e(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_22437_prec - 1LL),static_cast<jule::U8>((_22448_fmt + 'e') - 'g'));
			}
			if (_22437_prec > _22413_digs._field_dp) {
				_22437_prec=_22413_digs._field_nd;
			}
			return _1e770c537_fmt_f(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_1e770c537_max(static_cast<jule::Int>(_22437_prec - _22413_digs._field_dp),0LL)));
		}
		goto _match_end_4527280288;
		_case_end_4527280688:;
		_match_end_4527280288:;
	}
	return jule::append(_22319_dst,jule::Slice<jule::U8>({'%',_22448_fmt}));
}



inline void _1e770c537_round_shortest(_1e878448c_Decimal& _26124_d,jule::U64 _26136_mant,jule::Int _26147_exp,_1e770c537_FloatInfo& _26158_flt) {
	if (_26136_mant == 0LL) {
		_26124_d._field_nd=0LL;
		return;
	}
	jule::Int _2829_minexp = _26158_flt._field_bias + 1LL;
	if ((_26147_exp > _2829_minexp) && ((332LL * (_26124_d._field_dp - _26124_d._field_nd)) >= (100LL * (_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits))))) {
		return;
	}
	_1e878448c_Decimal _29113_upper = _1e878448c_Decimal();
	_29113_upper._method_assign(static_cast<jule::U64>((_26136_mant * 2LL) + 1LL));
	_29113_upper._method_shift(static_cast<jule::Int>((_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::U64 _30113_mantlo = 0LLU;
	jule::Int _30213_explo = 0LL;
	if ((_26136_mant > (1LL << _26158_flt._field_mantbits)) || (_26147_exp == _2829_minexp)) {
		_30113_mantlo=static_cast<jule::U64>(_26136_mant - 1LL);
		_30213_explo=_26147_exp;
	} else {
		_30113_mantlo=static_cast<jule::U64>((_26136_mant * 2LL) - 1LL);
		_30213_explo=static_cast<jule::Int>(_26147_exp - 1LL);
	}
	_1e878448c_Decimal _31013_lower = _1e878448c_Decimal();
	_31013_lower._method_assign(static_cast<jule::U64>((_30113_mantlo * 2LL) + 1LL));
	_31013_lower._method_shift(static_cast<jule::Int>((_30213_explo - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::Bool _3179_inclusive = jule::mod(_26136_mant,2LL) == 0LL;
	jule::U8 _33013_upperdelta = 0LLU;
	jule::Int _33413_ui = 0LL;
	for (; ; (_33413_ui)++) {
		{
			jule::Int _33913_mi = (_33413_ui - _29113_upper._field_dp) + _26124_d._field_dp;
			if (_33913_mi >= _26124_d._field_nd) {
				goto _iter_end_4527313808;
			}
			jule::Int _34313_li = (_33413_ui - _29113_upper._field_dp) + _31013_lower._field_dp;
			jule::U8 _34417_l = static_cast<jule::U8>(48LLU);
			if ((_34313_li >= 0LL) && (_34313_li < _31013_lower._field_nd)) {
				_34417_l=_31013_lower._field_d[static_cast<jule::Int>(_34313_li)];
			}
			jule::U8 _34817_m = static_cast<jule::U8>(48LLU);
			if (_33913_mi >= 0LL) {
				_34817_m=_26124_d._field_d[static_cast<jule::Int>(_33913_mi)];
			}
			jule::U8 _35217_u = static_cast<jule::U8>(48LLU);
			if (_33413_ui < _29113_upper._field_nd) {
				_35217_u=_29113_upper._field_d[static_cast<jule::Int>(_33413_ui)];
			}
			jule::Bool _36013_okdown = (_34417_l != _34817_m) || (_3179_inclusive && ((_34313_li + 1LL) == _31013_lower._field_nd));
			{
				if (!(((_33013_upperdelta == 0LL) && ((_34817_m + 1LL) < _35217_u)))) { goto _case_end_4527329472; }
				_case_begin_4527329472:;
				{
					_33013_upperdelta=2LL;
				}
				goto _match_end_4527326656;
				_case_end_4527329472:;
				if (!(((_33013_upperdelta == 0LL) && (_34817_m != _35217_u)))) { goto _case_end_4527329584; }
				_case_begin_4527329584:;
				{
					_33013_upperdelta=1LL;
				}
				goto _match_end_4527326656;
				_case_end_4527329584:;
				if (!(((_33013_upperdelta == 1LL) && ((_34817_m != '9') || (_35217_u != '0'))))) { goto _case_end_4527329920; }
				_case_begin_4527329920:;
				{
					_33013_upperdelta=2LL;
				}
				goto _match_end_4527326656;
				_case_end_4527329920:;
				_match_end_4527326656:;
			}
			jule::Bool _38113_okup = (_33013_upperdelta > 0LL) && ((_3179_inclusive || (_33013_upperdelta > 1LL)) || ((_33413_ui + 1LL) < _29113_upper._field_nd));
			{
				if (!((_36013_okdown && _38113_okup))) { goto _case_end_4527320160; }
				_case_begin_4527320160:;
				{
					_26124_d._method_round(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4527335248;
				_case_end_4527320160:;
				if (!((_36013_okdown))) { goto _case_end_4527335424; }
				_case_begin_4527335424:;
				{
					_26124_d._method_round_down(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4527335248;
				_case_end_4527335424:;
				if (!((_38113_okup))) { goto _case_end_4527335520; }
				_case_begin_4527335520:;
				{
					_26124_d._method_round_up(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4527335248;
				_case_end_4527335520:;
				_match_end_4527335248:;
			}
		}
	_iter_next_4527313808:;
	}
	_iter_end_4527313808:;
}



inline jule::Slice<jule::U8> _1e770c537_fmt_e(jule::Slice<jule::U8> _40014_dst,jule::Bool _40027_neg,_1e770c537_DecimalSlice _40038_d,jule::Int _40055_prec,jule::U8 _40066_fmt) {
	if (_40027_neg) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'-'}));
	}
	jule::U8 _40713_ch = '0';
	if (_40038_d._field_nd != 0LL) {
		_40713_ch=_40038_d._field_d[0LL];
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	if (_40055_prec > 0LL) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _41617_i = 1LL;
		jule::Int _41713_m = _1e770c537_min(_40038_d._field_nd,static_cast<jule::Int>(_40055_prec + 1LL));
		if (_41617_i < _41713_m) {
			_40014_dst=jule::append(_40014_dst,_40038_d._field_d.slice(static_cast<jule::Int>(_41617_i),static_cast<jule::Int>(_41713_m)));
			_41617_i=_41713_m;
		}
		for (; _41617_i <= _40055_prec; (_41617_i)++) {
			{
				_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0'}));
			}
		_iter_next_4527352400:;
		}
		_iter_end_4527352400:;
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40066_fmt}));
	jule::Int _42913_exp = _40038_d._field_dp - 1LL;
	if (_40038_d._field_nd == 0LL) {
		_42913_exp=0LL;
	}
	if (_42913_exp < 0LL) {
		_40713_ch='-';
		_42913_exp=static_cast<jule::Int>((-(_42913_exp)));
	} else {
		_40713_ch='+';
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	{
		if (!((_42913_exp < 10LL))) { goto _case_end_4527352992; }
		_case_begin_4527352992:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0',static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp) + '0')}));
		}
		goto _match_end_4527359744;
		_case_end_4527352992:;
		if (!((_42913_exp < 100LL))) { goto _case_end_4527358864; }
		_case_begin_4527358864:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4527359744;
		_case_end_4527358864:;
		_case_begin_4527357584:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,100LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_42913_exp,10LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4527359744;
		_case_end_4527357584:;
		_match_end_4527359744:;
	}
	return _40014_dst;
}



inline jule::Slice<jule::U8> _1e770c537_fmt_f(jule::Slice<jule::U8> _45514_dst,jule::Bool _45527_neg,_1e770c537_DecimalSlice _45538_d,jule::Int _45555_prec) {
	if (_45527_neg) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'-'}));
	}
	if (_45538_d._field_dp > 0LL) {
		jule::Int _46317_m = _1e770c537_min(_45538_d._field_nd,_45538_d._field_dp);
		_45514_dst=jule::append(_45514_dst,_45538_d._field_d.slice(0LL,static_cast<jule::Int>(_46317_m)));
		for (; _46317_m < _45538_d._field_dp; (_46317_m)++) {
			{
				_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
			}
		_iter_next_4527373200:;
		}
		_iter_end_4527373200:;
	} else {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
	}
	if (_45555_prec > 0LL) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _47417_i = 0LL;
		for (; _47417_i < _45555_prec; (_47417_i)++) {
			{
				jule::U8 _47621_ch = static_cast<jule::U8>(48LLU);
				jule::Int _47717_j = _45538_d._field_dp + _47417_i;
				if ((0LL <= _47717_j) && (_47717_j < _45538_d._field_nd)) {
					_47621_ch=_45538_d._field_d[static_cast<jule::Int>(_47717_j)];
				}
				_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({_47621_ch}));
			}
		_iter_next_4527376336:;
		}
		_iter_end_4527376336:;
	}
	return _45514_dst;
}



inline jule::Slice<jule::U8> _1e770c537_fmt_b(jule::Slice<jule::U8> _48814_dst,jule::Bool _48827_neg,jule::U64 _48838_mant,jule::Int _48853_exp,_1e770c537_FloatInfo& _48864_flt) {
	if (_48827_neg) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'-'}));
	}
	std::tie(_48814_dst,std::ignore) = _1e86edbba_fmt_bits(_48814_dst,_48838_mant,10LL,false,true);
	_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'p'}));
	_48853_exp-=static_cast<jule::Int>(_48864_flt._field_mantbits);
	if (_48853_exp >= 0LL) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'+'}));
	}
	std::tie(_48814_dst,std::ignore) = _1e86edbba_fmt_bits(_48814_dst,static_cast<jule::U64>(_48853_exp),10LL,_48853_exp < 0LL,true);
	return _48814_dst;
}



inline jule::Slice<jule::U8> _1e770c537_fmt_x(jule::Slice<jule::U8> _51014_dst,jule::Int _51027_prec,jule::U8 _51038_fmt,jule::Bool _51049_neg,jule::U64 _51113_mant,jule::Int _51128_exp,_1e770c537_FloatInfo& _51139_flt) {
	if (_51113_mant == 0LL) {
		_51128_exp=0LL;
	}
	_51113_mant<<=static_cast<jule::Uint>(60LL - _51139_flt._field_mantbits);
	while ((_51113_mant != 0LL) && ((_51113_mant & 1152921504606846976LLU) == 0LL)) {
		{
			_51113_mant<<=1LL;
			(_51128_exp)--;
		}
	_iter_next_4527393712:;
	}
	_iter_end_4527393712:;
	if ((_51027_prec >= 0LL) && (_51027_prec < 15LL)) {
		jule::Uint _52513_shift = static_cast<jule::Uint>(_51027_prec * 4LL);
		jule::U64 _52613_extra = (_51113_mant << _52513_shift) & 1152921504606846975LLU;
		_51113_mant>>=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_52613_extra | (_51113_mant & 1LL)) > 576460752303423488LLU) {
			(_51113_mant)++;
		}
		_51113_mant<<=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_51113_mant & 2305843009213693952LLU) != 0LL) {
			_51113_mant>>=1LL;
			(_51128_exp)++;
		}
	}
	jule::Str _53913_hex = jule::Str("0123456789abcdef", 16);
	if (_51038_fmt == 'X') {
		_53913_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_51049_neg) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'-'}));
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'0',_51038_fmt,static_cast<jule::U8>('0' + static_cast<jule::U8>((_51113_mant >> 60LL) & 1LL))}));
	_51113_mant<<=4LL;
	if ((_51027_prec < 0LL) && (_51113_mant != 0LL)) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		while (_51113_mant != 0LL) {
			{
				_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
				_51113_mant<<=4LL;
			}
		_iter_next_4527408192:;
		}
		_iter_end_4527408192:;
	} else if (_51027_prec > 0LL) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _56017_i = 0LL;
		for (; _56017_i < _51027_prec; (_56017_i)++) {
			{
				_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
				_51113_mant<<=4LL;
			}
		_iter_next_4527411664:;
		}
		_iter_end_4527411664:;
	}
	jule::U8 _56813_ch = static_cast<jule::U8>(80LLU);
	if (_51038_fmt == _1e7717cd4_lower(_51038_fmt)) {
		_56813_ch='p';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	if (_51128_exp < 0LL) {
		_56813_ch='-';
		_51128_exp=static_cast<jule::Int>((-(_51128_exp)));
	} else {
		_56813_ch='+';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	{
		if (!((_51128_exp < 100LL))) { goto _case_end_4527423648; }
		_case_begin_4527423648:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4527412512;
		_case_end_4527423648:;
		if (!((_51128_exp < 1000LL))) { goto _case_end_4527402624; }
		_case_begin_4527402624:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,100LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4527412512;
		_case_end_4527402624:;
		_case_begin_4527418448:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,1000LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_51128_exp,100LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4527412512;
		_case_end_4527418448:;
		_match_end_4527412512:;
	}
	return _51014_dst;
}



inline jule::Int _1e770c537_min(jule::Int _5938_a,jule::Int _59316_b) {
	if (_5938_a < _59316_b) {
		return _5938_a;
	}
	return _59316_b;
}



inline jule::Int _1e770c537_max(jule::Int _6008_a,jule::Int _60016_b) {
	if (_6008_a > _60016_b) {
		return _6008_a;
	}
	return _60016_b;
}



inline jule::U8 _1e7717cd4_lower(jule::U8 _4910_c) {
	return static_cast<jule::U8>(_4910_c | 32LL);
}



inline std::tuple<jule::U64,jule::Int> _1e7717cd4_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str("", 0)) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		if (!(((2LL <= _5435_base) && (_5435_base <= 36LL)))) { goto _case_end_4527436880; }
		goto _match_end_4527434368;
		_case_end_4527436880:;
		if (!((_5435_base == 0LL))) { goto _case_end_4527436080; }
		_case_begin_4527436080:;
		{
			_5435_base=10LL;
			if (_5423_s[0LL] == '0') {
				{
					if (!(((_5423_s.len() >= 3LL) && (_1e7717cd4_lower(_5423_s[1LL]) == 'b')))) { goto _case_end_4527440608; }
					_case_begin_4527440608:;
					{
						_5435_base=2LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4527439376;
					_case_end_4527440608:;
					if (!(((_5423_s.len() >= 3LL) && (_1e7717cd4_lower(_5423_s[1LL]) == 'o')))) { goto _case_end_4527440304; }
					_case_begin_4527440304:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4527439376;
					_case_end_4527440304:;
					if (!(((_5423_s.len() >= 3LL) && (_1e7717cd4_lower(_5423_s[1LL]) == 'x')))) { goto _case_end_4527441280; }
					_case_begin_4527441280:;
					{
						_5435_base=16LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4527439376;
					_case_end_4527441280:;
					_case_begin_4527439520:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(1LL);
					}
					goto _match_end_4527439376;
					_case_end_4527439520:;
					_match_end_4527439376:;
				}
			}
		}
		goto _match_end_4527434368;
		_case_end_4527436080:;
		_case_begin_4527433488:;
		{
			return std::make_tuple(0LL,3LLU);
		}
		goto _match_end_4527434368;
		_case_end_4527433488:;
		_match_end_4527434368:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LLU;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto _match_expr{ _5435_base };
		if (!((10LL) == _match_expr)) { goto _case_end_4527451296; }
		_case_begin_4527451296:;
		{
			_9313_cutoff=1844674407370955264LL;
		}
		goto _match_end_4527438512;
		_case_end_4527451296:;
		if (!((16LL) == _match_expr)) { goto _case_end_4527452336; }
		_case_begin_4527452336:;
		{
			_9313_cutoff=1152921504606846976LL;
		}
		goto _match_end_4527438512;
		_case_end_4527452336:;
		_case_begin_4527448800:;
		{
			_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
		}
		goto _match_end_4527438512;
		_case_end_4527448800:;
		_match_end_4527438512:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto _match_expr{ _5450_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4527450800; }
		_case_begin_4527450800:;
		{
			_10013_max_val=4294967295LLU;
		}
		goto _match_end_4527450720;
		_case_end_4527450800:;
		if (!((64LL) == _match_expr)) { goto _case_end_4527446928; }
		_case_begin_4527446928:;
		{
			_10013_max_val=jule::MAX_U64;
		}
		goto _match_end_4527450720;
		_case_end_4527446928:;
		_match_end_4527450720:;
	}
	jule::U64 _11213_n = 0LLU;
	for (auto _1e7717cd4_c: _5423_s) {
		{
			jule::U8 _11417_d = 0LLU;
			{
				if (!((('0' <= _1e7717cd4_c) && (_1e7717cd4_c <= '9')))) { goto _case_end_4527460592; }
				_case_begin_4527460592:;
				{
					_11417_d=static_cast<jule::U8>(_1e7717cd4_c - '0');
				}
				goto _match_end_4527458704;
				_case_end_4527460592:;
				if (!((('a' <= _1e7717cd4_lower(_1e7717cd4_c)) && (_1e7717cd4_lower(_1e7717cd4_c) <= 'z')))) { goto _case_end_4527459792; }
				_case_begin_4527459792:;
				{
					_11417_d=static_cast<jule::U8>((_1e7717cd4_lower(_1e7717cd4_c) - 'a') + 10LL);
				}
				goto _match_end_4527458704;
				_case_end_4527459792:;
				_case_begin_4527458816:;
				{
					return std::make_tuple(0LL,2LLU);
				}
				goto _match_end_4527458704;
				_case_end_4527458816:;
				_match_end_4527458704:;
			}
			if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
				return std::make_tuple(0LL,2LLU);
			}
			if (_11213_n >= _9313_cutoff) {
				return std::make_tuple(_10013_max_val,1LLU);
			}
			_11213_n*=static_cast<jule::U64>(_5435_base);
			jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
			if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
				return std::make_tuple(_10013_max_val,1LLU);
			}
			_11213_n=_13413_n1;
		}
	_iter_next_4527456128:;
	}
	_iter_end_4527456128:;
	return std::make_tuple(_11213_n,0LLU);
}



inline std::tuple<jule::I64,jule::Int> _1e7717cd4_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::I64 _16562_i = jule::I64();
	jule::Int _16570_err = 0LLU;
	if (_16522_s == jule::Str("", 0)) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[0LL] == '+') {
		_16522_s=_16522_s.slice(1LL);
	} else if (_16522_s[0LL] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(1LL);
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _1e7717cd4_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		_16570_err = _16570_err;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LLU;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>((-(static_cast<jule::I64>(_1909_cutoff))));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



inline std::tuple<jule::F64,jule::Bool> _1e7716530_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(9223372036854775808LLU));
		}
		_4158_f = _4158_f;
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _1ce399a6c_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _1ce399a6c_mul64(_4123_man,_1e7716530_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][1LL]);
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _1ce399a6c_mul64(_4123_man,_1e7716530_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>(_8013_ret_mantissa & 1LL);
	_8013_ret_mantissa>>=1LL;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_1cdceb9db_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e7716530_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1cdceb9db_f32_from_bits(2147483648LLU));
		}
		_11058_f = _11058_f;
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _1ce399a6c_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _1ce399a6c_mul64(_11023_man,_1e7716530_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][1LL]);
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _1ce399a6c_mul64(_11023_man,_1e7716530_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>(_15513_ret_mantissa & 1LL);
	_15513_ret_mantissa>>=1LL;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = static_cast<jule::F32>(_1cdceb9db_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _1e857a7c2_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	for (; _5013_i < _4613_n; (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[static_cast<jule::Int>(_5013_i)];
			if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
				_5217_c+=32LL;
			}
			if (_5217_c != _4542_prefix[static_cast<jule::Int>(_5013_i)]) {
				return _5013_i;
			}
		}
	_iter_next_4527559424:;
	}
	_iter_end_4527559424:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _1e857a7c2_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::Int _6834_n = jule::Int();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s == jule::Str("", 0)) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto _match_expr{ _6816_s[0LL] };
		if (!(('+') == _match_expr || ('-') == _match_expr)) { goto _case_end_4527572512; }
		_case_begin_4527572512:;
		{
			if (_6816_s[0LL] == '-') {
				_7213_sign=-1LL;
			}
			_7313_nsign=1LL;
			_6816_s=_6816_s.slice(1LL);
			goto _case_begin_4527572608;
		}
		goto _match_end_4527572432;
		_case_end_4527572512:;
		if (!(('i') == _match_expr || ('I') == _match_expr)) { goto _case_end_4527572608; }
		_case_begin_4527572608:;
		{
			jule::Int _8317_case_n = _1e857a7c2_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
			if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
				_8317_case_n=3LL;
			}
			if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
				_6826_f = static_cast<jule::F64>(_1cddd8b83_inf(_7213_sign));
				_6834_n = static_cast<jule::Int>(_7313_nsign + _6834_n);
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4527572432;
		_case_end_4527572608:;
		if (!(('n') == _match_expr || ('N') == _match_expr)) { goto _case_end_4527572704; }
		_case_begin_4527572704:;
		{
			if (_1e857a7c2_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
				_6826_f = static_cast<jule::F64>(_1cddd8b83_nan());
				_6834_n = 3LL;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4527572432;
		_case_end_4527572704:;
		_match_end_4527572432:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1e857a7c2_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::Int _10340_exp = jule::Int();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '+'))) { goto _case_end_4527588800; }
		_case_begin_4527588800:;
		{
			(_10449_i)++;
		}
		goto _match_end_4527588656;
		_case_end_4527588800:;
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '-'))) { goto _case_end_4527587792; }
		_case_begin_4527587792:;
		{
			_10350_neg=true;
			(_10449_i)++;
		}
		goto _match_end_4527588656;
		_case_end_4527587792:;
		_match_end_4527588656:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[static_cast<jule::Int>(_10449_i)] == '0')) && (_1e7717cd4_lower(_10315_s[static_cast<jule::Int>(_10449_i + 1LL)]) == 'x')) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	for (; _10449_i < _10315_s.len(); (_10449_i)++) {
		{
			jule::U8 _13413_c = _10315_s[static_cast<jule::Int>(_10449_i)];
			{
				if (!((_13413_c == '.'))) { goto _case_end_4527605648; }
				_case_begin_4527605648:;
				{
					if (_12813_sawdot) {
						goto _julec_label_loop_end;
					}
					_12813_sawdot=true;
					_13213_dp=_13013_nd;
					goto _iter_next_4527602000;
				}
				goto _match_end_4527605568;
				_case_end_4527605648:;
				if (!((('0' <= _13413_c) && (_13413_c <= '9')))) { goto _case_end_4527605744; }
				_case_begin_4527605744:;
				{
					_12913_sawdigits=true;
					if ((_13413_c == '0') && (_13013_nd == 0LL)) {
						(_13213_dp)--;
						goto _iter_next_4527602000;
					}
					(_13013_nd)++;
					if (_13113_nd_mant < _11913_max_mant_digits) {
						_10325_mantissa*=_11813_base;
						_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
						(_13113_nd_mant)++;
					} else if (_13413_c != '0') {
						_10425_trunc=true;
					}
					goto _iter_next_4527602000;
				}
				goto _match_end_4527605568;
				_case_end_4527605744:;
				if (!((((_11813_base == 16LL) && ('a' <= _1e7717cd4_lower(_13413_c))) && (_1e7717cd4_lower(_13413_c) <= 'f')))) { goto _case_end_4527605840; }
				_case_begin_4527605840:;
				{
					_12913_sawdigits=true;
					(_13013_nd)++;
					if (_13113_nd_mant < _11913_max_mant_digits) {
						_10325_mantissa*=16LL;
						_10325_mantissa+=static_cast<jule::U64>((_1e7717cd4_lower(_13413_c) - 'a') + 10LL);
						(_13113_nd_mant)++;
					} else {
						_10425_trunc=true;
					}
					goto _iter_next_4527602000;
				}
				goto _match_end_4527605568;
				_case_end_4527605840:;
				_match_end_4527605568:;
			}
			goto _iter_end_4527602000;
		}
	_iter_next_4527602000:;
	}
	_iter_end_4527602000:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_1e7717cd4_lower(_10315_s[static_cast<jule::Int>(_10449_i)]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[static_cast<jule::Int>(_10449_i)] == '+') {
			(_10449_i)++;
		} else if (_10315_s[static_cast<jule::Int>(_10449_i)] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[static_cast<jule::Int>(_10449_i)] < '0')) || (_10315_s[static_cast<jule::Int>(_10449_i)] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		for (; (_10449_i < _10315_s.len()) && (('0' <= _10315_s[static_cast<jule::Int>(_10449_i)]) && (_10315_s[static_cast<jule::Int>(_10449_i)] <= '9')); (_10449_i)++) {
			{
				if (_20517_e < 10000LL) {
					_20517_e=static_cast<jule::Int>(((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[static_cast<jule::Int>(_10449_i)])) - '0');
				}
			}
		_iter_next_4527628720:;
		}
		_iter_end_4527628720:;
		_13213_dp+=static_cast<jule::Int>(_20517_e * _19517_esign);
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=static_cast<jule::Int>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1e857a7c2_atof64_exact(jule::U64 _43317_mantissa,jule::Int _43336_exp,jule::Bool _43346_neg) {
	jule::F64 _43359_f = jule::F64();
	jule::Bool _43367_ok = jule::Bool();
	if ((_43317_mantissa >> _1e770c537_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_43359_f,_43367_ok);
	}
	_43359_f=static_cast<jule::F64>(_43317_mantissa);
	if (_43346_neg) {
		_43359_f=static_cast<jule::F64>((-(_43359_f)));
	}
	{
		if (!((_43336_exp == 0LL))) { goto _case_end_4527642512; }
		_case_begin_4527642512:;
		{
			_43359_f = _43359_f;
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4527643440;
		_case_end_4527642512:;
		if (!(((_43336_exp > 0LL) && (_43336_exp <= 37LL)))) { goto _case_end_4527642624; }
		_case_begin_4527642624:;
		{
			if (_43336_exp > 22LL) {
				_43359_f*=_1e857a7c2_F64_POW10[static_cast<jule::Int>(_43336_exp - 22LL)];
				_43336_exp=22LL;
			}
			if ((_43359_f > 1000000000000000LL) || (_43359_f < -1000000000000000LL)) {
				return std::make_tuple(_43359_f,_43367_ok);
			}
			_43359_f = static_cast<jule::F64>(_43359_f * _1e857a7c2_F64_POW10[static_cast<jule::Int>(_43336_exp)]);
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4527643440;
		_case_end_4527642624:;
		if (!(((_43336_exp < 0LL) && (_43336_exp >= -22LL)))) { goto _case_end_4527642736; }
		_case_begin_4527642736:;
		{
			_43359_f = static_cast<jule::F64>(jule::div(_43359_f,_1e857a7c2_F64_POW10[static_cast<jule::Int>((-(_43336_exp)))]));
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4527643440;
		_case_end_4527642736:;
		_match_end_4527643440:;
	}
	return std::make_tuple(_43359_f,_43367_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1e857a7c2_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::F64 _47258_f = jule::F64();
	jule::Bool _47266_ok = jule::Bool();
	if ((_47216_mantissa >> _1e770c537_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (!((_47235_exp == 0LL))) { goto _case_end_4527658096; }
		_case_begin_4527658096:;
		{
			_47258_f = _47258_f;
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4527658624;
		_case_end_4527658096:;
		if (!(((_47235_exp > 0LL) && (_47235_exp <= 37LL)))) { goto _case_end_4527657424; }
		_case_begin_4527657424:;
		{
			if (_47235_exp > 22LL) {
				_47258_f*=_1e857a7c2_F64_POW10[static_cast<jule::Int>(_47235_exp - 22LL)];
				_47235_exp=22LL;
			}
			if ((_47258_f > 1000000000000000LL) || (_47258_f < -1000000000000000LL)) {
				return std::make_tuple(_47258_f,_47266_ok);
			}
			_47258_f = static_cast<jule::F64>(_47258_f * _1e857a7c2_F64_POW10[static_cast<jule::Int>(_47235_exp)]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4527658624;
		_case_end_4527657424:;
		if (!(((_47235_exp < 0LL) && (_47235_exp >= -22LL)))) { goto _case_end_4527657536; }
		_case_begin_4527657536:;
		{
			_47258_f = static_cast<jule::F64>(jule::div(_47258_f,_1e857a7c2_F64_POW10[static_cast<jule::Int>((-(_47235_exp)))]));
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4527658624;
		_case_end_4527657536:;
		_match_end_4527658624:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e857a7c2_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::F32 _50662_f = jule::F32();
	jule::Bool _50670_ok = jule::Bool();
	if ((_50616_mantissa >> _1e770c537_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (!((_50635_exp == 0LL))) { goto _case_end_4527671952; }
		_case_begin_4527671952:;
		{
			_50662_f = _50662_f;
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4527672880;
		_case_end_4527671952:;
		if (!(((_50635_exp > 0LL) && (_50635_exp <= 17LL)))) { goto _case_end_4527672064; }
		_case_begin_4527672064:;
		{
			if (_50635_exp > 10LL) {
				_50662_f*=_1e857a7c2_F32_POW10[static_cast<jule::Int>(_50635_exp - 10LL)];
				_50635_exp=10LL;
			}
			if ((_50662_f > 10000000LL) || (_50662_f < -10000000LL)) {
				return std::make_tuple(_50662_f,_50670_ok);
			}
			_50662_f = static_cast<jule::F32>(_50662_f * _1e857a7c2_F32_POW10[static_cast<jule::Int>(_50635_exp)]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4527672880;
		_case_end_4527672064:;
		if (!(((_50635_exp < 0LL) && (_50635_exp >= -10LL)))) { goto _case_end_4527672176; }
		_case_begin_4527672176:;
		{
			_50662_f = static_cast<jule::F32>(jule::div(_50662_f,_1e857a7c2_F32_POW10[static_cast<jule::Int>((-(_50635_exp)))]));
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4527672880;
		_case_end_4527672176:;
		_match_end_4527672880:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



inline std::tuple<jule::F64,jule::Int> _1e857a7c2_atof_hex(jule::Str _54213_s,_1e770c537_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = ((1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	while ((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL)) {
		{
			_54242_mantissa<<=1LL;
			(_54261_exp)--;
		}
	_iter_next_4527687184:;
	}
	_iter_end_4527687184:;
	if (_54282_trunc) {
		_54242_mantissa|=1LL;
	}
	while ((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_4527689392:;
	}
	_iter_end_4527689392:;
	while ((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL))) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_4527691168:;
	}
	_iter_end_4527691168:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LL;
	_57413_round|=static_cast<jule::U64>(_54242_mantissa & 1LL);
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LL;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=static_cast<jule::Int>(_5439_max_exp + 1LL);
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & ((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Int>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _1e770c537_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_1cdceb9db_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_1cdceb9db_f64_from_bits(_59613_bits)),_58913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _1e857a7c2_atof32(jule::Str _60711_s) {
	jule::F32 _60721_f = jule::F32();
	jule::Int _60729_n = jule::Int();
	jule::Int _60737_err = 0LLU;
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _1e857a7c2_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60729_n = _60919__n;
			_60737_err = 0LLU;
			return std::make_tuple(_60721_f,_60729_n,_60737_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _1e857a7c2_read_float(_60711_s);
	_60729_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60729_n = _60729_n;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0LL;
		std::tie(_62217_ff,_60737_err) = _1e857a7c2_atof_hex(_60711_s.slice(0LL,static_cast<jule::Int>(_60729_n)),_1e770c537_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		_60729_n = _60729_n;
		_60737_err = _60737_err;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _1e857a7c2_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _1e7716530_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
			jule::F32 _64421_f_up = 0LL;
			std::tie(_64421_f_up,_61550_ok) = _1e7716530_eisel_lemire32(static_cast<jule::U64>(_61510_mantissa + 1LL),_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
	}
	_1e878448c_Decimal _65313_d = _1e878448c_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,static_cast<jule::Int>(_60729_n)))))) {
		_60721_f = 0LL;
		_60729_n = _60729_n;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_1e770c537_F32_INFO);
	_60721_f=static_cast<jule::F32>(_1cdceb9db_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60737_err=1LLU;
	}
	_60721_f = _60721_f;
	_60729_n = _60729_n;
	_60737_err = _60737_err;
	return std::make_tuple(_60721_f,_60729_n,_60737_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1e857a7c2_atof64(jule::Str _66511_s) {
	jule::F64 _66521_f = jule::F64();
	jule::Int _66529_n = jule::Int();
	jule::Int _66537_err = 0LLU;
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _1e857a7c2_special(_66511_s);
		if (_66723_ok) {
			_66521_f = _66714_val;
			_66529_n = _66719__n;
			_66537_err = 0LLU;
			return std::make_tuple(_66521_f,_66529_n,_66537_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _1e857a7c2_read_float(_66511_s);
	_66529_n=_67342__n;
	if ((!(_67350_ok))) {
		_66521_f = 0LL;
		_66529_n = _66529_n;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (_67337_hex) {
		std::tie(_66521_f,_66537_err) = _1e857a7c2_atof_hex(_66511_s.slice(0LL,static_cast<jule::Int>(_66529_n)),_1e770c537_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		_66521_f = _66521_f;
		_66529_n = _66529_n;
		_66537_err = _66537_err;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66521_f,_67350_ok) = _1e857a7c2_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
		std::tie(_66521_f,_67350_ok) = _1e7716530_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
			jule::F64 _70121_f_up = 0LL;
			std::tie(_70121_f_up,_67350_ok) = _1e7716530_eisel_lemire64(static_cast<jule::U64>(_67310_mantissa + 1LL),_67320_exp,_67325_neg);
			if (_67350_ok && (_66521_f == _70121_f_up)) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
	}
	_1e878448c_Decimal _71013_d = _1e878448c_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,static_cast<jule::Int>(_66529_n)))))) {
		_66521_f = 0LL;
		_66529_n = _66529_n;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_1e770c537_F64_INFO);
	_66521_f=static_cast<jule::F64>(_1cdceb9db_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66537_err=1LLU;
	}
	_66521_f = _66521_f;
	_66529_n = _66529_n;
	_66537_err = _66537_err;
	return std::make_tuple(_66521_f,_66529_n,_66537_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1e857a7c2_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _1e857a7c2_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	jule::F64 _72810_f;
	jule::Int _72813_n;
	jule::Int _72816_err;
	std::tie(_72810_f,_72813_n,_72816_err) = _1e857a7c2_atof64(_72223_s);
	return std::make_tuple(_72810_f,_72813_n,_72816_err);
}



inline std::tuple<jule::F64,jule::Int> _1e857a7c2_parse_float(jule::Str _75620_s,jule::Int _75628_bit_size) {
	jule::F64 _75710_f;
	jule::Int _75713_n;
	jule::Int _75716_err;
	std::tie(_75710_f,_75713_n,_75716_err) = _1e857a7c2_parse_float_prefix(_75620_s,_75628_bit_size);
	if ((_75713_n != _75620_s.len()) && ((_75716_err == 0LLU) || (_75716_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75710_f,_75716_err);
}



inline void _1e86eaaa7_ryu_ftoa_fixed32(_1e770c537_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42));
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37));
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _1ce399a6c_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_1e86eaaa7_mul_by_log2_log10(static_cast<jule::Int>(_6213_e2 + 24LL)))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1e86eaaa7_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49));
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _1e86eaaa7_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_1e86eaaa7_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1e86eaaa7_ryu_ftoa_fixed64(_1e770c537_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38));
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _1ce399a6c_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::Uint>(55LL - _1349_b));
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_1e86eaaa7_mul_by_log2_log10(static_cast<jule::Int>(_13313_e2 + 54LL)))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _1e86eaaa7_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _1e86eaaa7_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_1e86eaaa7_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _1e86eaaa7_format_decimal(_1e770c537_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _1e86eaaa7_U64_POW10[static_cast<jule::Int>(_20490_prec)];
	jule::Int _20613_trimmed = 0LL;
	while (_20445_m >= _2059_max) {
		{
			jule::U64 _20814_a = jule::div(_20445_m,10LL);
			jule::U64 _20817_b = jule::mod(_20445_m,10LL);
			std::tie(_20814_a,_20817_b) = std::make_tuple(jule::div(_20445_m,10LL),jule::mod(_20445_m,10LL));
			_20445_m=_20814_a;
			(_20613_trimmed)++;
			if (_20817_b > 5LL) {
				_20474_round_up=true;
			} else if (_20817_b < 5LL) {
				_20474_round_up=false;
			} else {
				_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
			}
			if (_20817_b != 0LL) {
				_20457_trunc=true;
			}
		}
	_iter_next_4527865344:;
	}
	_iter_end_4527865344:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m = jule::div(_20445_m,10LL);
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	while (_23513_v >= 100LL) {
		{
			jule::U64 _23717_v1 = 0LLU;
			jule::U64 _23817_v2 = 0LLU;
			if ((_23513_v >> 32LL) == 0LL) {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(jule::mod(static_cast<jule::U32>(_23513_v),100LL)));
			} else {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(_23513_v,100LL)),static_cast<jule::U64>(jule::mod(_23513_v,100LL)));
			}
			_23313_n-=2LL;
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
			_23513_v=_23717_v1;
		}
	_iter_next_4527872848:;
	}
	_iter_end_4527872848:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	while (_20424_d._field_d[static_cast<jule::Int>(_20424_d._field_nd - 1LL)] == '0') {
		{
			(_20424_d._field_nd)--;
			(_20613_trimmed)++;
		}
	_iter_next_4527891040:;
	}
	_iter_end_4527891040:;
	_20424_d._field_dp=static_cast<jule::Int>(_20424_d._field_nd + _20613_trimmed);
}



inline void _1e86eaaa7_ryu_ftoa_shortest(_1e770c537_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_1e770c537_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_1ce399a6c_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_1e86eaaa7_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _1e86eaaa7_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_1e86eaaa7_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _1e86eaaa7_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _1e770c537_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _1e86eaaa7_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _1e86eaaa7_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _1e86eaaa7_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _1e86eaaa7_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _1e86eaaa7_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _1e86eaaa7_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_1e86eaaa7_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_1e86eaaa7_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_1e86eaaa7_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_1e86eaaa7_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::Int _1e86eaaa7_mul_by_log2_log10(jule::Int _38322_x) {
	return static_cast<jule::Int>((_38322_x * 78913LL) >> 18LL);
}



inline jule::Int _1e86eaaa7_mul_by_log10_log2(jule::Int _39322_x) {
	return static_cast<jule::Int>((_39322_x * 108853LL) >> 15LL);
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1e86eaaa7_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_1e770c537_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::Int _40274_e2 = jule::Int();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 1LL);
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 2LL);
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _1e86eaaa7_ryu_digits(_1e770c537_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _1e86eaaa7_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _1e86eaaa7_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _1e86eaaa7_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_1e86eaaa7_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_1e86eaaa7_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		while (_43517_v > 0LL) {
			{
				jule::U32 _43718_v1 = jule::div(_43517_v,10LL);
				jule::U32 _43722_v2 = jule::mod(_43517_v,10LL);
				std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::div(_43517_v,10LL),jule::mod(_43517_v,10LL));
				_43517_v=_43718_v1;
				(_43417_n)--;
				_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
			}
		_iter_next_4527978320:;
		}
		_iter_end_4527978320:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_1e86eaaa7_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::Int>(_41520_d._field_nd + 8LL));
	}
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[static_cast<jule::Int>(_41520_d._field_nd - 1LL)] == '0')) {
		{
			(_41520_d._field_nd)--;
		}
	_iter_next_4527974624:;
	}
	_iter_end_4527974624:;
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0')) {
		{
			(_41520_d._field_nd)--;
			(_41520_d._field_dp)--;
			_41520_d._field_d=_41520_d._field_d.slice(1LL);
		}
	_iter_next_4527987744:;
	}
	_iter_end_4527987744:;
}



inline void _1e86eaaa7_ryu_digits32(_1e770c537_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=static_cast<jule::Int>(_46166_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	while (_46121_upper > 0LL) {
		{
			jule::U32 _47613_l = jule::div(_46043_lower + 9LL,10LL);
			jule::U32 _47718_c = jule::div(_46059_central,10LL);
			jule::U32 _47725_cdigit = jule::mod(_46059_central,10LL);
			std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::div(_46059_central,10LL),jule::mod(_46059_central,10LL));
			jule::U32 _47813_u = jule::div(_46121_upper,10LL);
			if (_47613_l > _47813_u) {
				goto _iter_end_4527995808;
			}
			if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
				(_47718_c)++;
				_47725_cdigit=0LL;
				_46151_cup=false;
			}
			(_46613_trimmed)++;
			_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
			_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
			std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
		}
	_iter_next_4527995808:;
	}
	_iter_end_4527995808:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	while (_51813_n > _46022_d._field_nd) {
		{
			jule::U32 _52014_v1 = jule::div(_51713_v,100LL);
			jule::U32 _52018_v2 = jule::mod(_51713_v,100LL);
			std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::div(_51713_v,100LL),jule::mod(_51713_v,100LL));
			_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
			_46022_d._field_d[static_cast<jule::Int>(_51813_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
			_51813_n-=2LL;
			_51713_v=_52014_v1;
		}
	_iter_next_4528009680:;
	}
	_iter_end_4528009680:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=static_cast<jule::Int>(_46166_endindex + 1LL);
	_46022_d._field_dp=static_cast<jule::Int>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _1e86eaaa7_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::Int _54262_resE = jule::Int();
	jule::Bool _54273_exact = jule::Bool();
	if (_54241_q == 0LL) {
		_54251_resM = static_cast<jule::U32>(_54220_m << 6LL);
		_54262_resE = static_cast<jule::Int>(_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44));
	}
	jule::U64 _55113_pow = _1e7716530_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_54241_q - -348LL)][1LL];
	if (_54241_q < 0LL) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _1ce399a6c_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_1e86eaaa7_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _1e86eaaa7_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::Int _57063_resE = jule::Int();
	jule::Bool _57074_exact = jule::Bool();
	if (_57042_q == 0LL) {
		_57052_resM = static_cast<jule::U64>(_57021_m << 8LL);
		_57063_resE = static_cast<jule::Int>(_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45));
	}
	jule::Array<jule::U64,2> _57913_pow = _1e7716530_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_57042_q - -348LL)];
	if (_57042_q < 0LL) {
		_57913_pow[0LL]+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((_1e86eaaa7_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _1ce399a6c_mul64(_57021_m,_57913_pow[0LL]);
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _1ce399a6c_mul64(_57021_m,_57913_pow[1LL]);
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _1ce399a6c_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>((_58814_h1 << 9LL) | (_58910_mid >> 55LL));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _1e86eaaa7_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	for (; _59813_i < _59434_k; (_59813_i)++) {
		{
			if (jule::mod(_59426_m,5LL) != 0LL) {
				return false;
			}
			_59426_m = jule::div(_59426_m,5LL);
		}
	_iter_next_4528056544:;
	}
	_iter_end_4528056544:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1e86eaaa7_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::div(_61014_x,1000000000LL)),static_cast<jule::U32>(jule::mod(_61014_x,1000000000LL)));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _1ce399a6c_mul64(static_cast<jule::U64>(_61014_x >> 1LL),9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1000000000LL)));
}



inline jule::Int _1e878448c_digit_zero(jule::Slice<jule::U8> _26519_dst) {
	{
		jule::Int _1e878448c_i = 0;
		for (auto &_: _26519_dst) {
			{
				_26519_dst[static_cast<jule::Int>(_1e878448c_i)]='0';
			}
		_iter_next_4528067120:;
		_1e878448c_i++;
		}
		_iter_end_4528067120:;
	}
	return static_cast<jule::I64>(_26519_dst.len());
}



inline void _1e878448c_trim(_1e878448c_Decimal& _27514_a) {
	while ((_27514_a._field_nd > 0LL) && (_27514_a._field_d[static_cast<jule::Int>(_27514_a._field_nd - 1LL)] == '0')) {
		{
			(_27514_a._field_nd)--;
		}
	_iter_next_4528067872:;
	}
	_iter_end_4528067872:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



inline void _1e878448c_right_shift(_1e878448c_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	for (; (_29013_n >> _28533_k) == 0LL; (_28613_r)++) {
		{
			if (_28613_r >= _28521_a._field_nd) {
				if (_29013_n == 0LL) {
					_28521_a._field_nd=0LL;
					return;
				}
				while ((_29013_n >> _28533_k) == 0LL) {
					{
						_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
						(_28613_r)++;
					}
				_iter_next_4528080448:;
				}
				_iter_end_4528080448:;
				goto _iter_end_4528075360;
			}
			jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _30413_c) - '0');
		}
	_iter_next_4528075360:;
	}
	_iter_end_4528075360:;
	_28521_a._field_dp-=static_cast<jule::Int>(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	for (; _28613_r < _28521_a._field_nd; (_28613_r)++) {
		{
			jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
			jule::Uint _31413_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_31413_dig + '0');
			(_28713_w)++;
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _31313_c) - '0');
		}
	_iter_next_4528084992:;
	}
	_iter_end_4528084992:;
	while (_29013_n > 0LL) {
		{
			jule::Uint _32313_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			if (_28713_w < 800LL) {
				_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_32313_dig + '0');
				(_28713_w)++;
			} else if (_32313_dig > 0LL) {
				_28521_a._field_trunc=true;
			}
			_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
		}
	_iter_next_4528089744:;
	}
	_iter_end_4528089744:;
	_28521_a._field_nd=_28713_w;
	_1e878448c_trim(_28521_a);
}



inline jule::Bool _1e878448c_prefix_is_less_than(jule::Slice<jule::U8> _33924_b,jule::Str _33935_s) {
	jule::Int _34013_i = 0LL;
	for (; _34013_i < _33935_s.len(); (_34013_i)++) {
		{
			if (_34013_i >= _33924_b.len()) {
				return true;
			}
			if (_33924_b[static_cast<jule::Int>(_34013_i)] != _33935_s[static_cast<jule::Int>(_34013_i)]) {
				return _33924_b[static_cast<jule::Int>(_34013_i)] < _33935_s[static_cast<jule::Int>(_34013_i)];
			}
		}
	_iter_next_4528099184:;
	}
	_iter_end_4528099184:;
	return false;
}



inline void _1e878448c_left_shift(_1e878448c_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _1e878448c_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_1e878448c_prefix_is_less_than(_35320_a._field_d.slice(0LL,static_cast<jule::Int>(_35320_a._field_nd)),_1e878448c_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	for (; _35913_r >= 0LL; (_35913_r)--) {
		{
			_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[static_cast<jule::Int>(_35913_r)]) - '0') << _35332_k);
			jule::Uint _36713_quo = jule::div(_36313_n,10LL);
			jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_36813_rem + '0');
			} else if (_36813_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_36713_quo;
		}
	_iter_next_4528113280:;
	}
	_iter_end_4528113280:;
	while (_36313_n > 0LL) {
		{
			jule::Uint _38013_quo = jule::div(_36313_n,10LL);
			jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_38113_rem + '0');
			} else if (_38113_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_38013_quo;
		}
	_iter_next_4528119200:;
	}
	_iter_end_4528119200:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_1e878448c_trim(_35320_a);
}



inline jule::Bool _1e878448c_should_round_up(_1e878448c_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[static_cast<jule::Int>(_40033_nd)] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (jule::mod(_40021_a._field_d[static_cast<jule::Int>(_40033_nd - 1LL)] - '0',2LL) != 0LL);
	}
	return _40021_a._field_d[static_cast<jule::Int>(_40033_nd)] >= '5';
}



inline jule::Str _1e86edbba_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _1e86edbba_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _1e86edbba_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _1e86edbba_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _1e86edbba_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _1e86edbba_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



inline jule::Str _1e86edbba_itoa(jule::Int _8213_i) {
	return _1e86edbba_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



inline jule::Str _1e86edbba_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(static_cast<jule::Int>(_8510_i),static_cast<jule::Int>(_8510_i + 1LL));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(static_cast<jule::Int>(_8510_i * 2LL),static_cast<jule::Int>((_8510_i * 2LL) + 2LL));
}



inline jule::Bool _1e86edbba_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e86edbba_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	jule::Str _9992_s = jule::Str();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23));
	}
	jule::Array<jule::U8,65> _10513_a = jule::Array<jule::U8,65>({});
	jule::Int _10613_i = 65LL;
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			while (_9934_u >= 1000000000LL) {
				{
					jule::U64 _12521_q = jule::div(_9934_u,1000000000LL);
					jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1000000000LL));
					jule::Int _12725_j = 4LL;
					for (; _12725_j > 0LL; (_12725_j)--) {
						{
							jule::Uint _12925_is = jule::mod(_12625_us,100LL) * 2LL;
							_12625_us = jule::div(_12625_us,100LL);
							_10613_i-=2LL;
							_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
							_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
						}
					_iter_next_4528163424:;
					}
					_iter_end_4528163424:;
					(_10613_i)--;
					_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
					_9934_u=_12521_q;
				}
			_iter_next_4528161856:;
			}
			_iter_end_4528161856:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		while (_14717_us >= 100LL) {
			{
				jule::Uint _14917_is = jule::mod(_14717_us,100LL) * 2LL;
				_14717_us = jule::div(_14717_us,100LL);
				_10613_i-=2LL;
				_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
				_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
			}
		_iter_next_4528175408:;
		}
		_iter_end_4528175408:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_1e86edbba_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_1ce399a6c_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		while (_9934_u >= _17313_b) {
			{
				(_10613_i)--;
				_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
				_9934_u>>=_17213_shift;
			}
		_iter_next_4528189056:;
		}
		_iter_end_4528189056:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		while (_9934_u >= _18513_b) {
			{
				(_10613_i)--;
				jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
				_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
				_9934_u=_19117_q;
			}
		_iter_next_4528197088:;
		}
		_iter_end_4528197088:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]='-';
	}
	if (_9964_append_) {
		_9981_d=jule::append(_9917_dst,_10513_a.slice(static_cast<jule::Int>(_10613_i)));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(static_cast<jule::Int>(_10613_i)));
	return std::make_tuple(_9981_d,_9992_s);
}



inline void _1ce1465e9_push_opt_level(jule::Int _3223_level) {
	{
		auto _match_expr{ _3223_level };
		if (!((0LLU) == _match_expr)) { goto _case_end_4528343216; }
		_case_begin_4528343216:;
		{
			_1ce1465e9_OPTIMIZATIONS=nullptr;
		}
		goto _match_end_4528342016;
		_case_end_4528343216:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4528343312; }
		_case_begin_4528343312:;
		{
			_1ce1465e9_OPTIMIZATIONS=jule::append(_1ce1465e9_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10),jule::Str("--opt-deadcode", 14),jule::Str("--opt-append", 12),jule::Str("--opt-math", 10),jule::Str("--opt-access", 12)}));
		}
		goto _match_end_4528342016;
		_case_end_4528343312:;
		_case_begin_4528341824:;
		{
			return;
		}
		goto _match_end_4528342016;
		_case_end_4528341824:;
		_match_end_4528342016:;
	}
}



inline jule::Bool _1ce1465e9_is_opt_enabled(jule::Str _5123_opt) {
	for (auto _1ce1465e9_oopt: _1ce1465e9_OPTIMIZATIONS) {
		{
			if (_5123_opt == _1ce1465e9_oopt) {
				return true;
			}
		}
	_iter_next_4528347200:;
	}
	_iter_end_4528347200:;
	return false;
}



inline jule::Int _1ce2b75e4_get_last_fs_error(void) {
	jule::Int _739_err = _1e77d0b7c_get_last_errno();
	{
		auto _match_expr{ _739_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4528381088; }
		_case_begin_4528381088:;
		{
			return 1LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528381088:;
		if (!((5LL) == _match_expr)) { goto _case_end_4528381184; }
		_case_begin_4528381184:;
		{
			return 2LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528381184:;
		if (!((40LL) == _match_expr)) { goto _case_end_4528380720; }
		_case_begin_4528380720:;
		{
			return 3LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528380720:;
		if (!((36LL) == _match_expr)) { goto _case_end_4528380816; }
		_case_begin_4528380816:;
		{
			return 4LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528380816:;
		if (!((2LL) == _match_expr)) { goto _case_end_4528380912; }
		_case_begin_4528380912:;
		{
			return 5LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528380912:;
		if (!((20LL) == _match_expr)) { goto _case_end_4528381296; }
		_case_begin_4528381296:;
		{
			return 6LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528381296:;
		if (!((75LL) == _match_expr)) { goto _case_end_4528381392; }
		_case_begin_4528381392:;
		{
			return 7LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528381392:;
		if (!((9LL) == _match_expr)) { goto _case_end_4528381488; }
		_case_begin_4528381488:;
		{
			return 8LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528381488:;
		if (!((24LL) == _match_expr)) { goto _case_end_4528380112; }
		_case_begin_4528380112:;
		{
			return 9LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528380112:;
		if (!((23LL) == _match_expr)) { goto _case_end_4528380208; }
		_case_begin_4528380208:;
		{
			return 10LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528380208:;
		if (!((12LL) == _match_expr)) { goto _case_end_4528380304; }
		_case_begin_4528380304:;
		{
			return 11LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528380304:;
		if (!((17LL) == _match_expr)) { goto _case_end_4528380400; }
		_case_begin_4528380400:;
		{
			return 12LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528380400:;
		if (!((4LL) == _match_expr)) { goto _case_end_4528382176; }
		_case_begin_4528382176:;
		{
			return 13LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528382176:;
		if (!((22LL) == _match_expr)) { goto _case_end_4528382272; }
		_case_begin_4528382272:;
		{
			return 14LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528382272:;
		if (!((21LL) == _match_expr)) { goto _case_end_4528382384; }
		_case_begin_4528382384:;
		{
			return 15LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528382384:;
		if (!((63LL) == _match_expr)) { goto _case_end_4528382496; }
		_case_begin_4528382496:;
		{
			return 16LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528382496:;
		if (!((28LL) == _match_expr)) { goto _case_end_4528382608; }
		_case_begin_4528382608:;
		{
			return 17LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528382608:;
		if (!((6LL) == _match_expr)) { goto _case_end_4528382720; }
		_case_begin_4528382720:;
		{
			return 18LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528382720:;
		if (!((30LL) == _match_expr)) { goto _case_end_4528382832; }
		_case_begin_4528382832:;
		{
			return 19LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528382832:;
		if (!((11LL) == _match_expr)) { goto _case_end_4528382944; }
		_case_begin_4528382944:;
		{
			return 20LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528382944:;
		if (!((26LL) == _match_expr || (16LL) == _match_expr)) { goto _case_end_4528383056; }
		_case_begin_4528383056:;
		{
			return 21LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528383056:;
		if (!((27LL) == _match_expr)) { goto _case_end_4528383168; }
		_case_begin_4528383168:;
		{
			return 22LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528383168:;
		if (!((32LL) == _match_expr)) { goto _case_end_4528383280; }
		_case_begin_4528383280:;
		{
			return 23LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528383280:;
		if (!((34LL) == _match_expr)) { goto _case_end_4528383392; }
		_case_begin_4528383392:;
		{
			return 24LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528383392:;
		if (!((29LL) == _match_expr)) { goto _case_end_4528383504; }
		_case_begin_4528383504:;
		{
			return 25LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528383504:;
		if (!((105LL) == _match_expr)) { goto _case_end_4528383616; }
		_case_begin_4528383616:;
		{
			return 26LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528383616:;
		if (!((74LL) == _match_expr)) { goto _case_end_4528383728; }
		_case_begin_4528383728:;
		{
			return 27LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528383728:;
		if (!((39LL) == _match_expr)) { goto _case_end_4528383840; }
		_case_begin_4528383840:;
		{
			return 28LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528383840:;
		_case_begin_4528378896:;
		{
			return 0LLU;
		}
		goto _match_end_4528379648;
		_case_end_4528378896:;
		_match_end_4528379648:;
	}
}



inline std::tuple<jule::Ref<_1ce2b21b0_File>,jule::Int> _1ce3432b8_open(jule::Str _6113_path,jule::Int _6124_flag,jule::Int _6137_mode) {
	jule::Int _629_handle = _1e77e85e0_open((&(_6113_path[0LL])),static_cast<jule::Int>(_6124_flag),_6137_mode);
	if (_629_handle == -1LL) {
		return std::make_tuple(_1ce2b21b0_File::_static_method_new(0LLU),_1ce2b75e4_get_last_fs_error());
	}
	return std::make_tuple(_1ce2b21b0_File::_static_method_new(static_cast<jule::Uintptr>(_629_handle)),0LLU);
}



inline jule::Int _1ce3432b8_remove_file(jule::Str _7320_path) {
	if (_1e77e85e0_unlink((&(_7320_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1ce2b75e4_get_last_fs_error();
}



inline std::tuple<jule::Ref<_1ce48210a_Status>,jule::Int> _1ce4735e6_stat(jule::Str _1113_path) {
	jule::Ref<_1ce48210a_Status> _1126_s = jule::Ref<_1ce48210a_Status>();
	jule::Int _1138_err = 0LLU;
	struct stat _1213_handle = (struct stat){};
	jule::Int _139_code = _1e77e85e0_stat((&(_1113_path[0LL])),(&(_1213_handle)));
	if (_139_code != -1LL) {
		_1138_err=0LLU;
		_1126_s=jule::new_struct<_1ce48210a_Status>(new( std::nothrow ) _1ce48210a_Status(static_cast<jule::Uint>(_1213_handle.st_mode),static_cast<jule::Uint>(_1213_handle.st_size)));
	} else {
		_1138_err=_1ce2b75e4_get_last_fs_error();
	}
	return std::make_tuple(_1126_s,_1138_err);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Int> _1ce2b21b0_read_file(jule::Str _8518_path) {
	jule::Ref<_1ce48210a_Status> _8610_s;
	jule::Int _8617_err;
	std::tie(_8610_s,_8617_err) = _1ce4735e6_stat(_8518_path);
	if (_8617_err != 0LLU) {
		return std::make_tuple(nullptr,_8617_err);
	}
	if ((!(_8610_s->_method_is_reg()))) {
		return std::make_tuple(nullptr,15LLU);
	}
	if (_8610_s->_field_size == 0LL) {
		return std::make_tuple(jule::Slice<jule::U8>::alloc(0LL),0LLU);
	}
	jule::Ref<_1ce2b21b0_File> _9914_f;
	std::tie(_9914_f,_8617_err) = _1ce3432b8_open(_8518_path,0LL,0LL);
	if (_8617_err != 0LLU) {
		return std::make_tuple(nullptr,_8617_err);
	}
	__JULE_DEFER({
		_9914_f->_method_close();
	});
	jule::Slice<jule::U8> _10513_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_8610_s->_field_size));
	jule::Int _10610_n;
	std::tie(_10610_n,_8617_err) = _9914_f->_method_read(_10513_buff);
	if (_8617_err != 0LLU) {
		return std::make_tuple(nullptr,_8617_err);
	}
	return std::make_tuple(_10513_buff.slice(0LL,static_cast<jule::Int>(_10610_n)),0LLU);
}



inline std::tuple<jule::Slice<jule::Ref<_1ce3851c8_DirEntry>>,jule::Int> _1ce4a45b1_read_dir(jule::Str _1517_path) {
	jule::Slice<jule::Ref<_1ce3851c8_DirEntry>> _1530_dirents = jule::Slice<jule::Ref<_1ce3851c8_DirEntry>>();
	jule::Int _1552_err = 0LLU;
	DIR* _1613_dir = _1e77e85e0_opendir((&(_1517_path[0LL])));
	if (_1613_dir == nullptr) {
		_1552_err=_1ce2b75e4_get_last_fs_error();
		return std::make_tuple(_1530_dirents,_1552_err);
	}
	for (;;) {
		{
			struct dirent* _2213_dirent = _1e77e85e0_readdir(_1613_dir);
			if (_2213_dirent == nullptr) {
				goto _iter_end_4528412256;
			}
			jule::Str _2613_name = _1e7872438_byte_ptr_to_str(((jule::U8*)(_2213_dirent->d_name)));
			jule::Ref<_1ce48210a_Status> _2718_stat;
			jule::Int _2724_serr;
			std::tie(_2718_stat,_2724_serr) = _1ce4735e6_stat(_1e777b83c_join(jule::Slice<jule::Str>({_1517_path,_2613_name})));
			if (_2724_serr != 0LLU) {
				_1552_err=_2724_serr;
				_1530_dirents=nullptr;
				goto _iter_end_4528412256;
			}
			_1530_dirents=jule::append(_1530_dirents,jule::Slice<jule::Ref<_1ce3851c8_DirEntry>>({jule::new_struct<_1ce3851c8_DirEntry>(new( std::nothrow ) _1ce3851c8_DirEntry(_2613_name,_2718_stat))}));
		}
	_iter_next_4528412256:;
	}
	_iter_end_4528412256:;
	_1e77e85e0_closedir(_1613_dir);
	return std::make_tuple(_1530_dirents,_1552_err);
}



inline jule::Int _1ce4a45b1_create_dir(jule::Str _4519_path) {
	if (_1e77e85e0_mkdir((&(_4519_path[0LL])),448LL) == 0LL) {
		return 0LLU;
	}
	return _1ce2b75e4_get_last_fs_error();
}



inline jule::Int _1ce4a45b1_remove_dir(jule::Str _5819_path) {
	if (_1e77e85e0_rmdir((&(_5819_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1ce2b75e4_get_last_fs_error();
}



inline jule::Bool _1ce55e54a_is_graphic(jule::I32 _5619_r) {
	if (static_cast<jule::U32>(_5619_r) <= 255LL) {
		return (_1ce5b689e__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_5619_r))] & 144LL) != 0LL;
	}
	return _1ce55e54a_is_in(_5619_r,_1ce55e54a_GRAPHIC_RANGES);
}



inline jule::Bool _1ce55e54a_is_in(jule::I32 _6614_r,jule::Slice<jule::Ref<_1b5a4a7db_RangeTable>> _6623_ranges) {
	for (auto _1ce55e54a_inside: _6623_ranges) {
		{
			if (_1b5a4a7db_is(_1ce55e54a_inside,_6614_r)) {
				return true;
			}
		}
	_iter_next_4532584336:;
	}
	_iter_end_4532584336:;
	return false;
}



inline jule::Bool _1ce55e54a_is_letter(jule::I32 _7618_r) {
	if (static_cast<jule::U32>(_7618_r) <= 255LL) {
		return (_1ce5b689e__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_7618_r))] & 96LL) != 0LL;
	}
	return _1b5a4a7db_is_excluding_latin(_1ce5b689e_LETTER,_7618_r);
}



inline jule::Bool _1ce55e54a_is_number(jule::I32 _8418_r) {
	if (static_cast<jule::U32>(_8418_r) <= 255LL) {
		return (_1ce5b689e__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_8418_r))] & 4LL) != 0LL;
	}
	return _1b5a4a7db_is_excluding_latin(_1ce5b689e_NUMBER,_8418_r);
}



inline jule::Bool _1ce55e54a_is_punct(jule::I32 _9217_r) {
	if (static_cast<jule::U32>(_9217_r) <= 255LL) {
		return (_1ce5b689e__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_9217_r))] & 2LL) != 0LL;
	}
	return _1b5a4a7db_is(_1ce5b689e_PUNCT,_9217_r);
}



inline jule::Bool _1ce55e54a_is_space(jule::I32 _10717_r) {
	if (static_cast<jule::U32>(_10717_r) <= 255LL) {
		{
			auto _match_expr{ _10717_r };
			if (!(('\t') == _match_expr || ('\n') == _match_expr || ('\v') == _match_expr || ('\f') == _match_expr || ('\r') == _match_expr || (' ') == _match_expr || (133LL) == _match_expr || (160LL) == _match_expr)) { goto _case_end_4532598160; }
			_case_begin_4532598160:;
			{
				return true;
			}
			goto _match_end_4532598048;
			_case_end_4532598160:;
			_match_end_4532598048:;
		}
		return false;
	}
	return _1b5a4a7db_is_excluding_latin(_1ce5b689e_WHITE_SPACE,_10717_r);
}



inline jule::Bool _1b5a49554_is_digit(jule::I32 _3917_r) {
	if (_3917_r <= 255LL) {
		return ('0' <= _3917_r) && (_3917_r <= '9');
	}
	return _1b5a4a7db_is_excluding_latin(_1ce5b689e_DIGIT,_3917_r);
}



inline std::tuple<jule::I32,jule::Bool> _1b5a4a7db___to(jule::Int _1259_case,jule::I32 _12520_r,jule::Slice<_1b5a4a7db_CaseRange> _12529_case_range) {
	jule::I32 _12556_mapped_rune = jule::I32();
	jule::Bool _12575_found_mapping = jule::Bool();
	if ((_1259_case < 0LL) || (3LL <= _1259_case)) {
		_12556_mapped_rune = 65533LL;
		_12575_found_mapping = false;
		return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
	}
	jule::Int _13113_lo = 0LL;
	jule::I64 _13213_hi = _12529_case_range.len();
	while (_13113_lo < _13213_hi) {
		{
			jule::Int _13413_m = _13113_lo + jule::div(_13213_hi - _13113_lo,2LL);
			_1b5a4a7db_CaseRange _13513_cr = _12529_case_range[static_cast<jule::Int>(_13413_m)];
			if ((static_cast<jule::I32>(_13513_cr._field_lo) <= _12520_r) && (_12520_r <= static_cast<jule::I32>(_13513_cr._field_hi))) {
				jule::I32 _13717_delta = _13513_cr._field_delta[static_cast<jule::Int>(_1259_case)];
				if (_13717_delta > 1114111LL) {
					_12556_mapped_rune = static_cast<jule::I32>(static_cast<jule::I32>(_13513_cr._field_lo) + (((_12520_r - static_cast<jule::I32>(_13513_cr._field_lo)) & -2LL) | static_cast<jule::I32>(_1259_case & 1LL)));
					_12575_found_mapping = true;
					return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
				}
				_12556_mapped_rune = static_cast<jule::I32>(_12520_r + _13717_delta);
				_12575_found_mapping = true;
				return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
			}
			if (_12520_r < static_cast<jule::I32>(_13513_cr._field_lo)) {
				_13213_hi=_13413_m;
			} else {
				_13113_lo=static_cast<jule::Int>(_13413_m + 1LL);
			}
		}
	_iter_next_4532602496:;
	}
	_iter_end_4532602496:;
	_12556_mapped_rune = _12520_r;
	_12575_found_mapping = false;
	return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
}



inline jule::I32 _1b5a4a7db_to(jule::Int _16311_case,jule::I32 _16326_r) {
	std::tie(_16326_r,std::ignore) = _1b5a4a7db___to(_16311_case,_16326_r,_1ce5b689e_CASE_RANGES);
	return _16326_r;
}



inline jule::I32 _1b5a4a7db_to_upper(jule::I32 _16921_r) {
	if (_16921_r <= 127LL) {
		if (('a' <= _16921_r) && (_16921_r <= 'z')) {
			_16921_r-=32LL;
		}
		return _16921_r;
	}
	return static_cast<jule::I32>(_1b5a4a7db_to(0LL,_16921_r));
}



inline jule::I32 _1b5a4a7db_to_lower(jule::I32 _18021_r) {
	if (_18021_r <= 127LL) {
		if (('A' <= _18021_r) && (_18021_r <= 'Z')) {
			_18021_r+=32LL;
		}
		return _18021_r;
	}
	return static_cast<jule::I32>(_1b5a4a7db_to(1LL,_18021_r));
}



inline jule::Bool _1b5a4a7db_is16(jule::Slice<_1b5a4a7db_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LL)) {
		{
			jule::Int _1b5a4a7db_i = 0;
			for (auto &_: _1919_ranges) {
				{
					_1b5a4a7db_Range16* _19417_range = (&(_1919_ranges[static_cast<jule::Int>(_1b5a4a7db_i)]));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LL) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LL);
						}
					}
				}
			_iter_next_4532631168:;
			_1b5a4a7db_i++;
			}
			_iter_end_4532631168:;
		}
		return false;
	}
	jule::Int _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	while (_20813_lo < _20913_hi) {
		{
			jule::Int _21113_m = _20813_lo + jule::div(_20913_hi - _20813_lo,2LL);
			_1b5a4a7db_Range16* _21213_range = (&(_1919_ranges[static_cast<jule::Int>(_21113_m)]));
			{
				if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
					return (_21213_range->_field_stride == 1LL) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LL);
				}
				if (_19128_r < _21213_range->_field_lo) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::Int>(_21113_m + 1LL);
				}
			}
		}
	_iter_next_4532594464:;
	}
	_iter_end_4532594464:;
	return false;
}



inline jule::Bool _1b5a4a7db_is32(jule::Slice<_1b5a4a7db_Range32> _2289_ranges,jule::U32 _22828_r) {
	if (_2289_ranges.len() <= 18LL) {
		{
			jule::Int _1b5a4a7db_i = 0;
			for (auto &_: _2289_ranges) {
				{
					_1b5a4a7db_Range32* _23117_range = (&(_2289_ranges[static_cast<jule::Int>(_1b5a4a7db_i)]));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LL) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LL);
						}
					}
				}
			_iter_next_4532643632:;
			_1b5a4a7db_i++;
			}
			_iter_end_4532643632:;
		}
		return false;
	}
	jule::Int _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	while (_24513_lo < _24613_hi) {
		{
			jule::Int _24813_m = _24513_lo + jule::div(_24613_hi - _24513_lo,2LL);
			_1b5a4a7db_Range32* _24913_range = (&(_2289_ranges[static_cast<jule::Int>(_24813_m)]));
			{
				if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
					return (_24913_range->_field_stride == 1LL) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LL);
				}
				if (_22828_r < _24913_range->_field_lo) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::Int>(_24813_m + 1LL);
				}
			}
		}
	_iter_next_4532630080:;
	}
	_iter_end_4532630080:;
	return false;
}



inline jule::Bool _1b5a4a7db_is(jule::Ref<_1b5a4a7db_RangeTable> _26511_range_tab,jule::I32 _26535_r) {
	jule::Slice<_1b5a4a7db_Range16> &_26610_r16 = _26511_range_tab->_field_r16;
	if ((_26610_r16.len() > 0LL) && (static_cast<jule::U32>(_26535_r) <= static_cast<jule::U32>(_26610_r16[static_cast<jule::Int>(_26610_r16.len() - 1LL)]._field_hi))) {
		return _1b5a4a7db_is16(_26610_r16,static_cast<jule::U16>(_26535_r));
	}
	jule::Slice<_1b5a4a7db_Range32> &_27110_r32 = _26511_range_tab->_field_r32;
	if ((_27110_r32.len() > 0LL) && (_26535_r >= static_cast<jule::I32>(_27110_r32[0LL]._field_lo))) {
		return _1b5a4a7db_is32(_27110_r32,static_cast<jule::U32>(_26535_r));
	}
	return false;
}



inline jule::Bool _1b5a4a7db_is_excluding_latin(jule::Ref<_1b5a4a7db_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_1b5a4a7db_Range16> &_28014_r16 = _27823_range_tab->_field_r16;
		jule::Int _28213_off = _27823_range_tab->_field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[static_cast<jule::Int>(_28014_r16.len() - 1LL)]._field_hi))) {
			return _1b5a4a7db_is16(_28014_r16.slice(static_cast<jule::Int>(_28213_off)),static_cast<jule::U16>(_27847_r));
		}
	}
	jule::Slice<_1b5a4a7db_Range32> &_28710_r32 = _27823_range_tab->_field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo))) {
		return _1b5a4a7db_is32(_28710_r32,static_cast<jule::U32>(_27847_r));
	}
	return false;
}



inline jule::Bool _1b5a4a7db_is_upper(jule::I32 _29517_r) {
	if (static_cast<jule::U32>(_29517_r) <= 255LL) {
		return (_1ce5b689e__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_29517_r))] & 96LL) == 32LL;
	}
	return _1b5a4a7db_is_excluding_latin(_1ce5b689e_UPPER,_29517_r);
}



inline jule::Bool _1b5a4a7db_is_lower(jule::I32 _30417_r) {
	if (static_cast<jule::U32>(_30417_r) <= 255LL) {
		return (_1ce5b689e__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_30417_r))] & 96LL) == 64LL;
	}
	return _1b5a4a7db_is_excluding_latin(_1ce5b689e_LOWER,_30417_r);
}



inline jule::Bool _1ce629071_full_rune(jule::Slice<jule::U8> _13718_p) {
	if (_13718_p.len() == 0LL) {
		return false;
	}
	jule::U8 _1419_x = _1ce629071_FIRST[static_cast<jule::Int>(_13718_p[0LL])];
	if (_13718_p.len() >= static_cast<jule::Int>(_1419_x & 7LL)) {
		return true;
	}
	_1ce629071_accept_range _1469_accept = _1ce629071_ACCEPT_RANGES[static_cast<jule::Int>(_1419_x >> 4LL)];
	if ((_13718_p.len() > 1LL) && ((_13718_p[1LL] < _1469_accept._field_lo) || (_1469_accept._field_hi < _13718_p[1LL]))) {
		return true;
	} else if ((_13718_p.len() > 2LL) && ((_13718_p[2LL] < 128LL) || (191LL < _13718_p[2LL]))) {
		return true;
	}
	return false;
}



inline jule::Bool _1ce629071_full_rune_str(jule::Str _15622_s) {
	if (_15622_s.len() == 0LL) {
		return false;
	}
	jule::U8 _1609_x = _1ce629071_FIRST[static_cast<jule::Int>(_15622_s[0LL])];
	if (_15622_s.len() >= static_cast<jule::Int>(_1609_x & 7LL)) {
		return true;
	}
	_1ce629071_accept_range _1659_accept = _1ce629071_ACCEPT_RANGES[static_cast<jule::Int>(_1609_x >> 4LL)];
	if ((_15622_s.len() > 1LL) && ((_15622_s[1LL] < _1659_accept._field_lo) || (_1659_accept._field_hi < _15622_s[1LL]))) {
		return true;
	} else if ((_15622_s.len() > 2LL) && ((_15622_s[2LL] < 128LL) || (191LL < _15622_s[2LL]))) {
		return true;
	}
	return false;
}



inline std::tuple<jule::I32,jule::Int> _1ce629071_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::Int _18242_size = jule::Int();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _1ce629071_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = static_cast<jule::U8>((_1879_x << 31LL) >> 31LL);
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_1ce629071_accept_range _1969_accept = _1ce629071_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::Int> _1ce629071_decode_rune_str(jule::Str _22924_s) {
	jule::I32 _22934_r = jule::I32();
	jule::Int _22943_size = jule::Int();
	if (_22924_s.len() < 1LL) {
		_22934_r = 65533LL;
		_22943_size = 0LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2339_s0 = _22924_s[0LL];
	jule::U8 _2349_x = _1ce629071_FIRST[static_cast<jule::Int>(_2339_s0)];
	if (_2349_x >= 240LL) {
		jule::I32 _23913_mask = static_cast<jule::U8>((_2349_x << 31LL) >> 31LL);
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_22924_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask));
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::Int _2429_sz = static_cast<jule::Int>(_2349_x & 7LL);
	_1ce629071_accept_range _2439_accept = _1ce629071_ACCEPT_RANGES[static_cast<jule::Int>(_2349_x >> 4LL)];
	if (_22924_s.len() < _2429_sz) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2479_s1 = _22924_s[1LL];
	if ((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 2LL) {
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_2339_s0 & 31LL) << 6LL) | static_cast<jule::I32>(_2479_s1 & 63LL));
		_22943_size = 2LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2549_s2 = _22924_s[2LL];
	if ((_2549_s2 < 128LL) || (191LL < _2549_s2)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 3LL) {
		_22934_r = static_cast<jule::I32>(((static_cast<jule::I32>(_2339_s0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2549_s2 & 63LL));
		_22943_size = 3LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2619_s3 = _22924_s[3LL];
	if ((_2619_s3 < 128LL) || (191LL < _2619_s3)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	_22934_r = static_cast<jule::I32>((((static_cast<jule::I32>(_2339_s0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2549_s2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2619_s3 & 63LL));
	_22943_size = 4LL;
	return std::make_tuple(_22934_r,_22943_size);
}



inline std::tuple<jule::I32,jule::Int> _1ce629071_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::Int _27647_size = jule::Int();
	if (_27625_p.len() == 0LL) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _2809_end = _27625_p.len();
	jule::I64 _28113_start = _2809_end - 1LL;
	_27638_r=static_cast<jule::I32>(_27625_p[static_cast<jule::Int>(_28113_start)]);
	if (_27638_r < 128LL) {
		_27638_r = _27638_r;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _28913_lim = _2809_end - 4LL;
	if (_28913_lim < 0LL) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	for (; _28113_start >= _28913_lim; (_28113_start)--) {
		{
			if (_1ce629071_rune_start(_27625_p[static_cast<jule::Int>(_28113_start)])) {
				goto _iter_end_4532846752;
			}
		}
	_iter_next_4532846752:;
	}
	_iter_end_4532846752:;
	if (_28113_start < 0LL) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _1ce629071_decode_rune(_27625_p.slice(static_cast<jule::Int>(_28113_start),static_cast<jule::Int>(_2809_end)));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	_27638_r = _27638_r;
	_27647_size = _27647_size;
	return std::make_tuple(_27638_r,_27647_size);
}



inline std::tuple<jule::I32,jule::Int> _1ce629071_decode_last_rune_str(jule::Str _31729_s) {
	jule::I32 _31739_r = jule::I32();
	jule::Int _31748_size = jule::Int();
	if (_31729_s.len() == 0LL) {
		_31739_r = 65533LL;
		_31748_size = 0LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _3219_end = _31729_s.len();
	jule::I64 _32213_start = _3219_end - 1LL;
	_31739_r=static_cast<jule::I32>(_31729_s[static_cast<jule::Int>(_32213_start)]);
	if (_31739_r < 128LL) {
		_31739_r = _31739_r;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _33013_lim = _3219_end - 4LL;
	if (_33013_lim < 0LL) {
		_33013_lim=0LL;
	}
	(_32213_start)--;
	for (; _32213_start >= _33013_lim; (_32213_start)--) {
		{
			if (_1ce629071_rune_start(_31729_s[static_cast<jule::Int>(_32213_start)])) {
				goto _iter_end_4532862080;
			}
		}
	_iter_next_4532862080:;
	}
	_iter_end_4532862080:;
	if (_32213_start < 0LL) {
		_32213_start=0LL;
	}
	std::tie(_31739_r,_31748_size) = _1ce629071_decode_rune_str(_31729_s.slice(static_cast<jule::Int>(_32213_start),static_cast<jule::Int>(_3219_end)));
	if ((_32213_start + _31748_size) != _3219_end) {
		_31739_r = 65533LL;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	_31739_r = _31739_r;
	_31748_size = _31748_size;
	return std::make_tuple(_31739_r,_31748_size);
}



inline jule::Int _1ce629071_rune_len(jule::I32 _35217_r) {
	{
		if (!((_35217_r < 0LL))) { goto _case_end_4532869632; }
		_case_begin_4532869632:;
		{
			return -1LL;
		}
		goto _match_end_4532860976;
		_case_end_4532869632:;
		if (!((_35217_r <= 127LLU))) { goto _case_end_4532869728; }
		_case_begin_4532869728:;
		{
			return 1LL;
		}
		goto _match_end_4532860976;
		_case_end_4532869728:;
		if (!((_35217_r <= 2047LLU))) { goto _case_end_4532869984; }
		_case_begin_4532869984:;
		{
			return 2LL;
		}
		goto _match_end_4532860976;
		_case_end_4532869984:;
		if (!(((55296LL <= _35217_r) && (_35217_r <= 57343LL)))) { goto _case_end_4532870096; }
		_case_begin_4532870096:;
		{
			return -1LL;
		}
		goto _match_end_4532860976;
		_case_end_4532870096:;
		if (!((_35217_r <= 65535LLU))) { goto _case_end_4532869264; }
		_case_begin_4532869264:;
		{
			return 3LL;
		}
		goto _match_end_4532860976;
		_case_end_4532869264:;
		if (!((_35217_r <= 1114111LL))) { goto _case_end_4532869360; }
		_case_begin_4532869360:;
		{
			return 4LL;
		}
		goto _match_end_4532860976;
		_case_end_4532869360:;
		_case_begin_4532868304:;
		{
			return -1LL;
		}
		goto _match_end_4532860976;
		_case_end_4532868304:;
		_match_end_4532860976:;
	}
}



inline jule::Int _1ce629071_encode_rune(jule::Slice<jule::U8> _36724_p,jule::I32 _36739_r) {
	jule::U32 _3699_i = static_cast<jule::U32>(_36739_r);
	{
		if (!((_3699_i <= 127LLU))) { goto _case_end_4532876768; }
		_case_begin_4532876768:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(_36739_r);
			return 1LL;
		}
		goto _match_end_4532875872;
		_case_end_4532876768:;
		if (!((_3699_i <= 2047LLU))) { goto _case_end_4532876272; }
		_case_begin_4532876272:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(192LL | static_cast<jule::U8>(_36739_r >> 6LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 2LL;
		}
		goto _match_end_4532875872;
		_case_end_4532876272:;
		if (!((_3699_i > 1114111LL) || ((55296LL <= _3699_i) && (_3699_i <= 57343LL)))) { goto _case_end_4532876368; }
		_case_begin_4532876368:;
		{
			_36739_r=65533LL;
			goto _case_begin_4532876464;
		}
		goto _match_end_4532875872;
		_case_end_4532876368:;
		if (!((_3699_i <= 65535LLU))) { goto _case_end_4532876464; }
		_case_begin_4532876464:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(224LL | static_cast<jule::U8>(_36739_r >> 12LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 3LL;
		}
		goto _match_end_4532875872;
		_case_end_4532876464:;
		_case_begin_4532875984:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(240LL | static_cast<jule::U8>(_36739_r >> 18LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 12LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[3LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 4LL;
		}
		goto _match_end_4532875872;
		_case_end_4532875984:;
		_match_end_4532875872:;
	}
}



inline jule::Slice<jule::U8> _1ce629071_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if (_39835_r <= 127LLU) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(_39835_r)}));
	}
	return _1ce629071_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _1ce629071_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		if (!((_4079_i <= 2047LLU))) { goto _case_end_4532901072; }
		_case_begin_4532901072:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LL | static_cast<jule::U8>(_40545_r >> 6LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4532899424;
		_case_end_4532901072:;
		if (!((_4079_i > 1114111LL) || ((55296LL <= _4079_i) && (_4079_i <= 57343LL)))) { goto _case_end_4532906272; }
		_case_begin_4532906272:;
		{
			_40545_r=65533LL;
			goto _case_begin_4532906368;
		}
		goto _match_end_4532899424;
		_case_end_4532906272:;
		if (!((_4079_i <= 65535LLU))) { goto _case_end_4532906368; }
		_case_begin_4532906368:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LL | static_cast<jule::U8>(_40545_r >> 12LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4532899424;
		_case_end_4532906368:;
		_case_begin_4532899568:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LL | static_cast<jule::U8>(_40545_r >> 18LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 12LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4532899424;
		_case_end_4532899568:;
		_match_end_4532899424:;
	}
}



inline jule::Int _1ce629071_rune_count(jule::Slice<jule::U8> _42319_p) {
	jule::Int _42332_n = jule::Int();
	jule::Int _42413_i = 0LL;
	while (_42413_i < _42319_p.len()) {
		{
			(_42332_n)++;
			jule::U8 _42717_c = _42319_p[static_cast<jule::Int>(_42413_i)];
			if (_42717_c < 128LL) {
				(_42413_i)++;
				goto _iter_next_4532910672;
			}
			jule::U8 _43313_x = _1ce629071_FIRST[static_cast<jule::Int>(_42717_c)];
			if (_43313_x == 241LL) {
				(_42413_i)++;
				goto _iter_next_4532910672;
			}
			jule::Int _43817_size = static_cast<jule::Int>(_43313_x & 7LL);
			if ((_42413_i + _43817_size) > _42319_p.len()) {
				(_42413_i)++;
				goto _iter_next_4532910672;
			}
			_1ce629071_accept_range _44313_accept = _1ce629071_ACCEPT_RANGES[static_cast<jule::Int>(_43313_x >> 4LL)];
			_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 1LL)];
			if ((_42717_c < _44313_accept._field_lo) || (_44313_accept._field_hi < _42717_c)) {
				_43817_size=1LL;
			} else if (_43817_size == 2LL) {
			} else {
				_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 2LL)];
				if ((_42717_c < 128LL) || (191LL < _42717_c)) {
					_43817_size=1LL;
				} else if (_43817_size == 3LL) {
				} else {
					_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 3LL)];
					if ((_42717_c < 128LL) || (191LL < _42717_c)) {
						_43817_size=1LL;
					}
				}
			}
			_42413_i+=_43817_size;
		}
	_iter_next_4532910672:;
	}
	_iter_end_4532910672:;
	_42332_n = _42332_n;
	return _42332_n;
}



inline jule::Int _1ce629071_rune_count_str(jule::Str _46623_s) {
	jule::Int _46633_n = jule::Int();
	jule::Int _46713_i = 0LL;
	for (; _46713_i < _46623_s.len(); (_46633_n)++) {
		{
			jule::U8 _46917_c = _46623_s[static_cast<jule::Int>(_46713_i)];
			if (_46917_c < 128LL) {
				(_46713_i)++;
				goto _iter_next_4532925792;
			}
			jule::U8 _47513_x = _1ce629071_FIRST[static_cast<jule::Int>(_46917_c)];
			if (_47513_x == 241LL) {
				(_46713_i)++;
				goto _iter_next_4532925792;
			}
			jule::Int _48017_size = static_cast<jule::Int>(_47513_x & 7LL);
			if ((_46713_i + _48017_size) > _46623_s.len()) {
				(_46713_i)++;
				goto _iter_next_4532925792;
			}
			_1ce629071_accept_range _48513_accept = _1ce629071_ACCEPT_RANGES[static_cast<jule::Int>(_47513_x >> 4LL)];
			_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 1LL)];
			if ((_46917_c < _48513_accept._field_lo) || (_48513_accept._field_hi < _46917_c)) {
				_48017_size=1LL;
			} else if (_48017_size == 2LL) {
			} else {
				_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 2LL)];
				if ((_46917_c < 128LL) || (191LL < _46917_c)) {
					_48017_size=1LL;
				} else if (_48017_size == 3LL) {
				} else {
					_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 3LL)];
					if ((_46917_c < 128LL) || (191LL < _46917_c)) {
						_48017_size=1LL;
					}
				}
			}
			_46713_i+=_48017_size;
		}
	_iter_next_4532925792:;
	}
	_iter_end_4532925792:;
	_46633_n = _46633_n;
	return _46633_n;
}



inline jule::Bool _1ce629071_rune_start(jule::U8 _51019_b) {
	return (_51019_b & 192LL) != 128LL;
}



inline jule::Bool _1ce629071_valid(jule::Slice<jule::U8> _51314_p) {
	jule::Slice<jule::U8> _51613_cp = (*((&(_51314_p))));
	while (_51613_cp.len() >= 8LL) {
		{
			jule::U32 _52213_first32 = ((static_cast<jule::U32>(_51613_cp[0LL]) | (static_cast<jule::U32>(_51613_cp[1LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[2LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[3LL]) << 24LL);
			jule::U32 _52313_second32 = ((static_cast<jule::U32>(_51613_cp[4LL]) | (static_cast<jule::U32>(_51613_cp[5LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[6LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[7LL]) << 24LL);
			if (((_52213_first32 | _52313_second32) & 2155905152LL) != 0LL) {
				goto _iter_end_4532953056;
			}
			_51613_cp=_51613_cp.slice(8LL);
		}
	_iter_next_4532953056:;
	}
	_iter_end_4532953056:;
	jule::Int _53013_i = 0LL;
	while (_53013_i < _51613_cp.len()) {
		{
			jule::U8 _53213_pi = _51613_cp[static_cast<jule::Int>(_53013_i)];
			if (_53213_pi < 128LL) {
				(_53013_i)++;
				goto _iter_next_4532953168;
			}
			jule::U8 _53713_x = _1ce629071_FIRST[static_cast<jule::Int>(_53213_pi)];
			if (_53713_x == 241LL) {
				return false;
			}
			jule::Int _54113_size = static_cast<jule::Int>(_53713_x & 7LL);
			if ((_53013_i + _54113_size) > _51613_cp.len()) {
				return false;
			}
			_1ce629071_accept_range _54513_accept = _1ce629071_ACCEPT_RANGES[static_cast<jule::Int>(_53713_x >> 4LL)];
			jule::U8 _54617_c = _51613_cp[static_cast<jule::Int>(_53013_i + 1LL)];
			if ((_54617_c < _54513_accept._field_lo) || (_54513_accept._field_hi < _54617_c)) {
				return false;
			} else if (_54113_size == 2LL) {
			} else {
				_54617_c=_51613_cp[static_cast<jule::Int>(_53013_i + 2LL)];
				if ((_54617_c < 128LL) || (191LL < _54617_c)) {
					return false;
				} else if (_54113_size == 3LL) {
				} else {
					_54617_c=_51613_cp[static_cast<jule::Int>(_53013_i + 3LL)];
					if ((_54617_c < 128LL) || (191LL < _54617_c)) {
						return false;
					}
				}
			}
			_53013_i+=_54113_size;
		}
	_iter_next_4532953168:;
	}
	_iter_end_4532953168:;
	return true;
}



inline jule::Bool _1ce629071_valid_str(jule::Str _56822_s) {
	while (_56822_s.len() >= 8LL) {
		{
			jule::U32 _57313_first32 = ((static_cast<jule::U32>(_56822_s[0LL]) | (static_cast<jule::U32>(_56822_s[1LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[2LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[3LL]) << 24LL);
			jule::U32 _57413_second32 = ((static_cast<jule::U32>(_56822_s[4LL]) | (static_cast<jule::U32>(_56822_s[5LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[6LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[7LL]) << 24LL);
			if (((_57313_first32 | _57413_second32) & 2155905152LL) != 0LL) {
				goto _iter_end_4532984064;
			}
			_56822_s=_56822_s.slice(8LL);
		}
	_iter_next_4532984064:;
	}
	_iter_end_4532984064:;
	jule::Int _58113_i = 0LL;
	while (_58113_i < _56822_s.len()) {
		{
			jule::U8 _58313_si = _56822_s[static_cast<jule::Int>(_58113_i)];
			if (_58313_si < 128LL) {
				(_58113_i)++;
				goto _iter_next_4533013216;
			}
			jule::U8 _58813_x = _1ce629071_FIRST[static_cast<jule::Int>(_58313_si)];
			if (_58813_x == 241LL) {
				return false;
			}
			jule::Int _59213_size = static_cast<jule::Int>(_58813_x & 7LL);
			if ((_58113_i + _59213_size) > _56822_s.len()) {
				return false;
			}
			_1ce629071_accept_range _59613_accept = _1ce629071_ACCEPT_RANGES[static_cast<jule::Int>(_58813_x >> 4LL)];
			jule::U8 _59717_c = _56822_s[static_cast<jule::Int>(_58113_i + 1LL)];
			if ((_59717_c < _59613_accept._field_lo) || (_59613_accept._field_hi < _59717_c)) {
				return false;
			} else if (_59213_size == 2LL) {
			} else {
				_59717_c=_56822_s[static_cast<jule::Int>(_58113_i + 2LL)];
				if ((_59717_c < 128LL) || (191LL < _59717_c)) {
					return false;
				} else if (_59213_size == 3LL) {
				} else {
					_59717_c=_56822_s[static_cast<jule::Int>(_58113_i + 3LL)];
					if ((_59717_c < 128LL) || (191LL < _59717_c)) {
						return false;
					}
				}
			}
			_58113_i+=_59213_size;
		}
	_iter_next_4533013216:;
	}
	_iter_end_4533013216:;
	return true;
}



inline jule::Bool _1ce629071_valid_rune(jule::I32 _62019_r) {
	{
		if (!(((0LL <= _62019_r) && (_62019_r < 55296LL)))) { goto _case_end_4533034720; }
		_case_begin_4533034720:;
		{
			return true;
		}
		goto _match_end_4533032928;
		_case_end_4533034720:;
		if (!(((57343LL < _62019_r) && (_62019_r <= 1114111LL)))) { goto _case_end_4533034816; }
		_case_begin_4533034816:;
		{
			return true;
		}
		goto _match_end_4533032928;
		_case_end_4533034816:;
		_case_begin_4533033104:;
		{
			return false;
		}
		goto _match_end_4533032928;
		_case_end_4533033104:;
		_match_end_4533032928:;
	}
}



inline jule::Bool _1ce35e3a0_is_unary_op(jule::Str _31120_kind) {
	for (auto _1ce35e3a0_op: _1ce35e3a0_UNARY_OPS) {
		{
			if (_31120_kind == _1ce35e3a0_op) {
				return true;
			}
		}
	_iter_next_4533204784:;
	}
	_iter_end_4533204784:;
	return false;
}



inline jule::Bool _1ce35e3a0_is_bin_op(jule::Str _32218_kind) {
	for (auto _1ce35e3a0_op: _1ce35e3a0_BIN_OPS) {
		{
			if (_32218_kind == _1ce35e3a0_op) {
				return true;
			}
		}
	_iter_next_4533208176:;
	}
	_iter_end_4533208176:;
	return false;
}



inline jule::Bool _1ce35e3a0_is_weak_op(jule::Str _33319_kind) {
	for (auto _1ce35e3a0_op: _1ce35e3a0_WEAK_OPS) {
		{
			if (_33319_kind == _1ce35e3a0_op) {
				return true;
			}
		}
	_iter_next_4533209952:;
	}
	_iter_end_4533209952:;
	return false;
}



inline jule::Bool _1ce35e3a0_is_str(jule::Str _34415_k) {
	return (_34415_k != jule::Str("", 0)) && ((_34415_k[0LL] == '\"') || _1ce35e3a0_is_raw_str(_34415_k));
}



inline jule::Bool _1ce35e3a0_is_raw_str(jule::Str _34619_k) {
	return (_34619_k != jule::Str("", 0)) && (_34619_k[0LL] == '`');
}



inline jule::Bool _1ce35e3a0_is_rune(jule::Str _34916_k) {
	return (_34916_k != jule::Str("", 0)) && (_34916_k[0LL] == '\'');
}



inline jule::Bool _1ce35e3a0_is_nil(jule::Str _35115_k) {
	return _35115_k == jule::Str("nil", 3);
}



inline jule::Bool _1ce35e3a0_is_bool(jule::Str _35316_k) {
	return (_35316_k == jule::Str("true", 4)) || (_35316_k == jule::Str("false", 5));
}



inline jule::Bool _1ce35e3a0_contains_any(jule::Str _35517_s,jule::Str _35525_bytes) {
	for (auto _1ce35e3a0_b: _35525_bytes) {
		{
			jule::Int _35713_i = _35517_s.find(static_cast<jule::Str>(_1ce35e3a0_b));
			if (_35713_i >= 0LL) {
				return true;
			}
		}
	_iter_next_4533213120:;
	}
	_iter_end_4533213120:;
	return false;
}



inline jule::Bool _1ce35e3a0_is_float(jule::Str _36717_k) {
	if (_36717_k.has_prefix(jule::Str("0x", 2))) {
		return _1ce35e3a0_contains_any(_36717_k,jule::Str(".pP", 3));
	}
	return _1ce35e3a0_contains_any(_36717_k,jule::Str(".eE", 3));
}



inline jule::Bool _1ce35e3a0_is_num(jule::Str _37615_k) {
	if (_37615_k == jule::Str("", 0)) {
		return false;
	}
	jule::U8 _3819_b = _37615_k[0LL];
	return (_3819_b == '.') || (('0' <= _3819_b) && (_3819_b <= '9'));
}



inline jule::Bool _1ce35e3a0_is_lit(jule::Str _38615_k) {
	return (((_1ce35e3a0_is_num(_38615_k) || _1ce35e3a0_is_str(_38615_k)) || _1ce35e3a0_is_rune(_38615_k)) || _1ce35e3a0_is_nil(_38615_k)) || _1ce35e3a0_is_bool(_38615_k);
}



inline jule::Bool _1ce35e3a0_is_ignore_ident(jule::Str _39124_ident) {
	return _39124_ident == jule::Str("_", 1);
}



inline jule::Bool _1ce35e3a0_is_anon_ident(jule::Str _39322_ident) {
	return _39322_ident == jule::Str("<anonymous>", 11);
}



inline jule::Bool _1ce35e3a0_is_punct(jule::I32 _39617_r) {
	for (auto _1ce35e3a0_cr: _1ce35e3a0_PUNCTS) {
		{
			if (_39617_r == _1ce35e3a0_cr) {
				return true;
			}
		}
	_iter_next_4533236544:;
	}
	_iter_end_4533236544:;
	return false;
}



inline jule::Bool _1ce35e3a0_is_space(jule::I32 _40717_r) {
	for (auto _1ce35e3a0_cr: _1ce35e3a0_SPACES) {
		{
			if (_40717_r == _1ce35e3a0_cr) {
				return true;
			}
		}
	_iter_next_4533238208:;
	}
	_iter_end_4533238208:;
	return false;
}



inline jule::Bool _1ce35e3a0_is_letter(jule::I32 _41818_r) {
	return _1ce55e54a_is_letter(_41818_r);
}



inline jule::Bool _1ce35e3a0_is_ident_rune(jule::Str _42422_s) {
	if (_42422_s == jule::Str("", 0)) {
		return false;
	}
	if (_42422_s[0LL] != '_') {
		jule::I32 _43014_r;
		std::tie(_43014_r,std::ignore) = _1ce629071_decode_rune_str(_42422_s);
		if ((!(_1ce35e3a0_is_letter(_43014_r)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _1ce35e3a0_is_decimal(jule::U8 _44019_b) {
	return ('0' <= _44019_b) && (_44019_b <= '9');
}



inline jule::Bool _1ce35e3a0_is_binary(jule::U8 _44218_b) {
	return (_44218_b == '0') || (_44218_b == '1');
}



inline jule::Bool _1ce35e3a0_is_octal(jule::U8 _44417_b) {
	return ('0' <= _44417_b) && (_44417_b <= '7');
}



inline jule::Bool _1ce35e3a0_is_hex(jule::U8 _44715_b) {
	{
		if (!((('0' <= _44715_b) && (_44715_b <= '9')))) { goto _case_end_4533250848; }
		_case_begin_4533250848:;
		{
			return true;
		}
		goto _match_end_4533250368;
		_case_end_4533250848:;
		if (!((('a' <= _44715_b) && (_44715_b <= 'f')))) { goto _case_end_4533250944; }
		_case_begin_4533250944:;
		{
			return true;
		}
		goto _match_end_4533250368;
		_case_end_4533250944:;
		if (!((('A' <= _44715_b) && (_44715_b <= 'F')))) { goto _case_end_4533251040; }
		_case_begin_4533251040:;
		{
			return true;
		}
		goto _match_end_4533250368;
		_case_end_4533251040:;
		_case_begin_4533250448:;
		{
			return false;
		}
		goto _match_end_4533250368;
		_case_end_4533250448:;
		_match_end_4533250368:;
	}
}



inline jule::Bool _1ce35e3a0_is_assign(jule::Uint _45918_id) {
	return ((((((_45918_id == 2LLU) || (_45918_id == 31LLU)) || (_45918_id == 34LLU)) || (_45918_id == 20LLU)) || (_45918_id == 28LLU)) || (_45918_id == 3LLU)) || (_45918_id == 7LLU);
}



inline jule::Bool _1ce35e3a0_is_postfix_op(jule::Str _47222_kind) {
	for (auto _1ce35e3a0_op: _1ce35e3a0_POSTFIX_OPS) {
		{
			if (_47222_kind == _1ce35e3a0_op) {
				return true;
			}
		}
	_iter_next_4533257472:;
	}
	_iter_end_4533257472:;
	return false;
}



inline jule::Bool _1ce35e3a0_is_assign_op(jule::Str _48321_kind) {
	if (_1ce35e3a0_is_postfix_op(_48321_kind)) {
		return true;
	}
	for (auto _1ce35e3a0_op: _1ce35e3a0_ASSING_OPS) {
		{
			if (_48321_kind == _1ce35e3a0_op) {
				return true;
			}
		}
	_iter_next_4533260784:;
	}
	_iter_end_4533260784:;
	return false;
}



inline jule::Ref<_1ce4aae47_File> _1ce4aae47_new_file_set(jule::Str _6421_path) {
	return jule::new_struct<_1ce4aae47_File>(new( std::nothrow ) _1ce4aae47_File(jule::Slice<jule::U8>(),_6421_path,jule::Slice<_1ce35e3a0_Token>()));
}



inline _1e7690a81_Log _1ce494282_make_err(jule::Int _10313_row,jule::Int _10323_col,jule::Ref<_1ce4aae47_File>& _10334_f,jule::Str _10344_fmt,jule::Slice<jule::Any> _10357_args) {
	return _1e7690a81_Log(1LLU,_10313_row,_10323_col,_10334_f->_method_path(),_1e7690a81_logf(_10344_fmt,_10357_args),jule::Str(),jule::Str());
}



inline jule::Bool _1ce494282_bytes_has_prefix(jule::Slice<jule::U8>& _11322_bytes,jule::Str _11337_prefix) {
	if (_11322_bytes.len() < _11337_prefix.len()) {
		return false;
	}
	{
		jule::Int _1ce494282_i = 0;
		for (auto &_: _11337_prefix) {
			{
				if (_11322_bytes[static_cast<jule::Int>(_1ce494282_i)] != _11337_prefix[static_cast<jule::Int>(_1ce494282_i)]) {
					return false;
				}
			}
		_iter_next_4533269520:;
		_1ce494282_i++;
		}
		_iter_end_4533269520:;
	}
	return true;
}



inline jule::Str _1ce494282_float_fmt_e(jule::Slice<jule::U8>& _12517_txt,jule::Int _12534_i) {
	jule::Str _12544_lit = jule::Str();
	(_12534_i)++;
	if (_12534_i >= _12517_txt.len()) {
		return _12544_lit;
	}
	jule::U8 _13113_b = _12517_txt[static_cast<jule::Int>(_12534_i)];
	if ((_13113_b == '+') || (_13113_b == '-')) {
		(_12534_i)++;
		if (_12534_i >= _12517_txt.len()) {
			return _12544_lit;
		}
	}
	jule::Int _1399_first = _12534_i;
	for (; _12534_i < _12517_txt.len(); (_12534_i)++) {
		{
			_13113_b=_12517_txt[static_cast<jule::Int>(_12534_i)];
			if ((!(_1ce35e3a0_is_decimal(_13113_b)))) {
				goto _iter_end_4533278096;
			}
		}
	_iter_next_4533278096:;
	}
	_iter_end_4533278096:;
	if (_12534_i == _1399_first) {
		_12544_lit = jule::Str("", 0);
		return _12544_lit;
	}
	_12544_lit = static_cast<jule::Str>(_12517_txt.slice(0LL,static_cast<jule::Int>(_12534_i)));
	return _12544_lit;
}



inline jule::Str _1ce494282_float_fmt_p(jule::Slice<jule::U8>& _15317_txt,jule::Int _15330_i) {
	return _1ce494282_float_fmt_e(_15317_txt,_15330_i);
}



inline jule::Str _1ce494282_float_fmt_dotnp(jule::Slice<jule::U8>& _15521_txt,jule::Int _15538_i) {
	if (_15521_txt[static_cast<jule::Int>(_15538_i)] != '.') {
		return jule::Str("", 0);
	}
	(_15538_i)++;
	_julec_label_loop:;
	for (; _15538_i < _15521_txt.len(); (_15538_i)++) {
		{
			jule::U8 _16313_b = _15521_txt[static_cast<jule::Int>(_15538_i)];
			{
				if (!((_1ce35e3a0_is_decimal(_16313_b)))) { goto _case_end_4533291856; }
				_case_begin_4533291856:;
				{
					goto _iter_next_4533289056;
				}
				goto _match_end_4533291408;
				_case_end_4533291856:;
				if (!((_1ce494282_is_float_fmt_p(_16313_b,_15538_i)))) { goto _case_end_4533291952; }
				_case_begin_4533291952:;
				{
					return _1ce494282_float_fmt_p(_15521_txt,_15538_i);
				}
				goto _match_end_4533291408;
				_case_end_4533291952:;
				_case_begin_4533291520:;
				{
					goto _iter_end_4533289056;
				}
				goto _match_end_4533291408;
				_case_end_4533291520:;
				_match_end_4533291408:;
			}
		}
	_iter_next_4533289056:;
	}
	_iter_end_4533289056:;
	return jule::Str("", 0);
}



inline jule::Str _1ce494282_float_fmt_dotfp(jule::Slice<jule::U8>& _17321_txt,jule::Int _17338_i) {
	_17338_i+=2LL;
	return _1ce494282_float_fmt_e(_17321_txt,_17338_i);
}



inline jule::Str _1ce494282_float_fmt_dotp(jule::Slice<jule::U8>& _18020_txt,jule::Int _18037_i) {
	(_18037_i)++;
	return _1ce494282_float_fmt_e(_18020_txt,_18037_i);
}



inline jule::Str _1ce494282_float_num(jule::Slice<jule::U8>& _18715_txt,jule::Int _18732_i) {
	jule::Str _18742_lit = jule::Str();
	(_18732_i)++;
	for (; _18732_i < _18715_txt.len(); (_18732_i)++) {
		{
			jule::U8 _19013_b = _18715_txt[static_cast<jule::Int>(_18732_i)];
			if ((_18732_i > 1LL) && ((_19013_b == 'e') || (_19013_b == 'E'))) {
				_18742_lit = _1ce494282_float_fmt_e(_18715_txt,_18732_i);
				return _18742_lit;
			}
			if ((!(_1ce35e3a0_is_decimal(_19013_b)))) {
				goto _iter_end_4533298448;
			}
		}
	_iter_next_4533298448:;
	}
	_iter_end_4533298448:;
	if (_18732_i == 1LL) {
		return _18742_lit;
	}
	_18742_lit = static_cast<jule::Str>(_18715_txt.slice(0LL,static_cast<jule::Int>(_18732_i)));
	return _18742_lit;
}



inline jule::Str _1ce494282_common_num(jule::Slice<jule::U8>& _20516_txt) {
	jule::Str _20531_lit = jule::Str();
	jule::Int _20613_i = 0LL;
	_julec_label_loop:;
	for (; _20613_i < _20516_txt.len(); (_20613_i)++) {
		{
			jule::U8 _20913_b = _20516_txt[static_cast<jule::Int>(_20613_i)];
			{
				if (!((_20913_b == '.'))) { goto _case_end_4533311376; }
				_case_begin_4533311376:;
				{
					_20531_lit = _1ce494282_float_num(_20516_txt,_20613_i);
					return _20531_lit;
				}
				goto _match_end_4533311200;
				_case_end_4533311376:;
				if (!((_1ce494282_is_float_fmt_e(_20913_b,_20613_i)))) { goto _case_end_4533311488; }
				_case_begin_4533311488:;
				{
					_20531_lit = _1ce494282_float_fmt_e(_20516_txt,_20613_i);
					return _20531_lit;
				}
				goto _match_end_4533311200;
				_case_end_4533311488:;
				if (!(((!(_1ce35e3a0_is_decimal(_20913_b)))))) { goto _case_end_4533311600; }
				_case_begin_4533311600:;
				{
					goto _iter_end_4533308464;
				}
				goto _match_end_4533311200;
				_case_end_4533311600:;
				_match_end_4533311200:;
			}
		}
	_iter_next_4533308464:;
	}
	_iter_end_4533308464:;
	if (_20613_i == 0LL) {
		return _20531_lit;
	}
	_20531_lit = static_cast<jule::Str>(_20516_txt.slice(0LL,static_cast<jule::Int>(_20613_i)));
	return _20531_lit;
}



inline jule::Str _1ce494282_binary_num(jule::Slice<jule::U8>& _22316_txt) {
	jule::Str _22331_lit = jule::Str();
	if ((!(_1ce494282_bytes_has_prefix(_22316_txt,jule::Str("0b", 2))))) {
		_22331_lit = jule::Str("", 0);
		return _22331_lit;
	}
	if (_22316_txt.len() < 2LL) {
		return _22331_lit;
	}
	
	jule::Int _23213_i = 2LL;
	for (; _23213_i < _22316_txt.len(); (_23213_i)++) {
		{
			if ((!(_1ce35e3a0_is_binary(_22316_txt[static_cast<jule::Int>(_23213_i)])))) {
				goto _iter_end_4533317728;
			}
		}
	_iter_next_4533317728:;
	}
	_iter_end_4533317728:;
	if (_23213_i == 2LL) {
		return _22331_lit;
	}
	_22331_lit = static_cast<jule::Str>(_22316_txt.slice(0LL,static_cast<jule::Int>(_23213_i)));
	return _22331_lit;
}



inline jule::Bool _1ce494282_is_float_fmt_e(jule::U8 _24519_b,jule::Int _24528_i) {
	return (_24528_i > 0LL) && ((_24519_b == 'e') || (_24519_b == 'E'));
}



inline jule::Bool _1ce494282_is_float_fmt_p(jule::U8 _24619_b,jule::Int _24628_i) {
	return (_24628_i > 0LL) && ((_24619_b == 'p') || (_24619_b == 'P'));
}



inline jule::Bool _1ce494282_is_float_fmt_dotnp(jule::Slice<jule::U8>& _24824_txt,jule::Int _24841_i) {
	if (_24824_txt[static_cast<jule::Int>(_24841_i)] != '.') {
		return false;
	}
	(_24841_i)++;
	_julec_label_loop:;
	for (; _24841_i < _24824_txt.len(); (_24841_i)++) {
		{
			jule::U8 _25613_b = _24824_txt[static_cast<jule::Int>(_24841_i)];
			{
				if (!((_1ce35e3a0_is_decimal(_25613_b)))) { goto _case_end_4533334768; }
				_case_begin_4533334768:;
				{
					goto _iter_next_4533331456;
				}
				goto _match_end_4533334320;
				_case_end_4533334768:;
				if (!((_1ce494282_is_float_fmt_p(_25613_b,_24841_i)))) { goto _case_end_4533334864; }
				_case_begin_4533334864:;
				{
					return true;
				}
				goto _match_end_4533334320;
				_case_end_4533334864:;
				_case_begin_4533334432:;
				{
					goto _iter_end_4533331456;
				}
				goto _match_end_4533334320;
				_case_end_4533334432:;
				_match_end_4533334320:;
			}
		}
	_iter_next_4533331456:;
	}
	_iter_end_4533331456:;
	return false;
}



inline jule::Bool _1ce494282_is_float_fmt_dotp(jule::Slice<jule::U8>& _26723_txt,jule::Int _26736_i) {
	{
		if (!((_26723_txt.len() < 3LL))) { goto _case_end_4533340816; }
		_case_begin_4533340816:;
		{
			goto _case_begin_4533340912;
		}
		goto _match_end_4533339024;
		_case_end_4533340816:;
		if (!((_26723_txt[static_cast<jule::Int>(_26736_i)] != '.'))) { goto _case_end_4533340912; }
		_case_begin_4533340912:;
		{
			goto _case_begin_4533341024;
		}
		goto _match_end_4533339024;
		_case_end_4533340912:;
		if (!(((_26723_txt[static_cast<jule::Int>(_26736_i + 1LL)] != 'p') && (_26723_txt[static_cast<jule::Int>(_26736_i + 1LL)] != 'P')))) { goto _case_end_4533341024; }
		_case_begin_4533341024:;
		{
			return false;
		}
		goto _match_end_4533339024;
		_case_end_4533341024:;
		_case_begin_4533339184:;
		{
			return true;
		}
		goto _match_end_4533339024;
		_case_end_4533339184:;
		_match_end_4533339024:;
	}
}



inline jule::Bool _1ce494282_is_float_fmt_dotfp(jule::Slice<jule::U8>& _27624_txt,jule::Int _27637_i) {
	{
		if (!((_27624_txt.len() < 4LL))) { goto _case_end_4533347456; }
		_case_begin_4533347456:;
		{
			goto _case_begin_4533347552;
		}
		goto _match_end_4533345712;
		_case_end_4533347456:;
		if (!((_27624_txt[static_cast<jule::Int>(_27637_i)] != '.'))) { goto _case_end_4533347552; }
		_case_begin_4533347552:;
		{
			goto _case_begin_4533347664;
		}
		goto _match_end_4533345712;
		_case_end_4533347552:;
		if (!(((_27624_txt[static_cast<jule::Int>(_27637_i + 1LL)] != 'f') && (_27624_txt[static_cast<jule::Int>(_27637_i + 1LL)] != 'F')))) { goto _case_end_4533347664; }
		_case_begin_4533347664:;
		{
			goto _case_begin_4533346112;
		}
		goto _match_end_4533345712;
		_case_end_4533347664:;
		if (!(((_27624_txt[static_cast<jule::Int>(_27637_i + 2LL)] != 'p') && (_27624_txt[static_cast<jule::Int>(_27637_i + 1LL)] != 'P')))) { goto _case_end_4533346112; }
		_case_begin_4533346112:;
		{
			return false;
		}
		goto _match_end_4533345712;
		_case_end_4533346112:;
		_case_begin_4533345808:;
		{
			return true;
		}
		goto _match_end_4533345712;
		_case_end_4533345808:;
		_match_end_4533345712:;
	}
}



inline jule::Str _1ce494282_octal_num(jule::Slice<jule::U8>& _28615_txt) {
	jule::Str _28630_lit = jule::Str();
	if (_28615_txt[0LL] != '0') {
		_28630_lit = jule::Str("", 0);
		return _28630_lit;
	}
	if (_28615_txt.len() < 2LL) {
		return _28630_lit;
	}
	jule::Int _29413_octal_start = 1LL;
	if (_28615_txt[1LL] == 'o') {
		if (_28615_txt.len() < 3LL) {
			return _28630_lit;
		}
		(_29413_octal_start)++;
	}
	jule::Int _30313_i = _29413_octal_start;
	for (; _30313_i < _28615_txt.len(); (_30313_i)++) {
		{
			jule::U8 _30513_b = _28615_txt[static_cast<jule::Int>(_30313_i)];
			if (_1ce494282_is_float_fmt_e(_30513_b,_30313_i)) {
				_28630_lit = _1ce494282_float_fmt_e(_28615_txt,_30313_i);
				return _28630_lit;
			}
			if ((!(_1ce35e3a0_is_octal(_30513_b)))) {
				goto _iter_end_4533357840;
			}
		}
	_iter_next_4533357840:;
	}
	_iter_end_4533357840:;
	if (_30313_i == _29413_octal_start) {
		return _28630_lit;
	}
	_28630_lit = static_cast<jule::Str>(_28615_txt.slice(0LL,static_cast<jule::Int>(_30313_i)));
	return _28630_lit;
}



inline jule::Str _1ce494282_hex_num(jule::Slice<jule::U8>& _32013_txt) {
	jule::Str _32028_lit = jule::Str();
	if (_32013_txt.len() < 3LL) {
		return _32028_lit;
	}
	if ((_32013_txt[0LL] != '0') || ((_32013_txt[1LL] != 'x') && (_32013_txt[1LL] != 'X'))) {
		return _32028_lit;
	}
	
	jule::Int _32913_i = 2LL;
	_julec_label_loop:;
	for (; _32913_i < _32013_txt.len(); (_32913_i)++) {
		{
			jule::U8 _33213_b = _32013_txt[static_cast<jule::Int>(_32913_i)];
			{
				if (!((_1ce494282_is_float_fmt_dotp(_32013_txt,_32913_i)))) { goto _case_end_4533375408; }
				_case_begin_4533375408:;
				{
					_32028_lit = _1ce494282_float_fmt_dotp(_32013_txt,_32913_i);
					return _32028_lit;
				}
				goto _match_end_4533375200;
				_case_end_4533375408:;
				if (!((_1ce494282_is_float_fmt_dotfp(_32013_txt,_32913_i)))) { goto _case_end_4533375520; }
				_case_begin_4533375520:;
				{
					_32028_lit = _1ce494282_float_fmt_dotfp(_32013_txt,_32913_i);
					return _32028_lit;
				}
				goto _match_end_4533375200;
				_case_end_4533375520:;
				if (!((_1ce494282_is_float_fmt_p(_33213_b,_32913_i)))) { goto _case_end_4533375632; }
				_case_begin_4533375632:;
				{
					_32028_lit = _1ce494282_float_fmt_p(_32013_txt,_32913_i);
					return _32028_lit;
				}
				goto _match_end_4533375200;
				_case_end_4533375632:;
				if (!((_1ce494282_is_float_fmt_dotnp(_32013_txt,_32913_i)))) { goto _case_end_4533375744; }
				_case_begin_4533375744:;
				{
					_32028_lit = _1ce494282_float_fmt_dotnp(_32013_txt,_32913_i);
					return _32028_lit;
				}
				goto _match_end_4533375200;
				_case_end_4533375744:;
				if (!(((!(_1ce35e3a0_is_hex(_33213_b)))))) { goto _case_end_4533375856; }
				_case_begin_4533375856:;
				{
					goto _iter_end_4533372528;
				}
				goto _match_end_4533375200;
				_case_end_4533375856:;
				_match_end_4533375200:;
			}
		}
	_iter_next_4533372528:;
	}
	_iter_end_4533372528:;
	if (_32913_i == 2LL) {
		return _32028_lit;
	}
	_32028_lit = static_cast<jule::Str>(_32013_txt.slice(0LL,static_cast<jule::Int>(_32913_i)));
	return _32028_lit;
}



inline jule::Str _1ce494282_hex_escape(jule::Slice<jule::U8>& _35716_txt,jule::Int _35729_n) {
	jule::Str _35739_seq = jule::Str();
	if (_35716_txt.len() < _35729_n) {
		return _35739_seq;
	}
	
	jule::Int _36313_i = 2LL;
	for (; _36313_i < _35729_n; (_36313_i)++) {
		{
			if ((!(_1ce35e3a0_is_hex(_35716_txt[static_cast<jule::Int>(_36313_i)])))) {
				return _35739_seq;
			}
		}
	_iter_next_4533379632:;
	}
	_iter_end_4533379632:;
	_35739_seq=static_cast<jule::Str>(_35716_txt.slice(0LL,static_cast<jule::Int>(_35729_n)));
	return _35739_seq;
}



inline jule::Str _1ce494282_big_unicode_point_escape(jule::Slice<jule::U8>& _37530_txt) {
	return _1ce494282_hex_escape(_37530_txt,10LL);
}



inline jule::Str _1ce494282_little_unicode_point_escape(jule::Slice<jule::U8>& _37733_txt) {
	return _1ce494282_hex_escape(_37733_txt,6LL);
}



inline jule::Str _1ce494282_hex_byte_escape(jule::Slice<jule::U8>& _37921_txt) {
	return _1ce494282_hex_escape(_37921_txt,4LL);
}



inline jule::Str _1ce494282_byte_escape(jule::Slice<jule::U8>& _38217_txt) {
	jule::Str _38232_seq = jule::Str();
	if (_38217_txt.len() < 4LL) {
		return _38232_seq;
	}
	if (((!(_1ce35e3a0_is_octal(_38217_txt[1LL]))) || (!(_1ce35e3a0_is_octal(_38217_txt[2LL])))) || (!(_1ce35e3a0_is_octal(_38217_txt[3LL])))) {
		return _38232_seq;
	}
	_38232_seq = static_cast<jule::Str>(_38217_txt.slice(0LL,4LL));
	return _38232_seq;
}



inline jule::Slice<_1e7690a81_Log> _1ce494282_lex(jule::Ref<_1ce4aae47_File> _77816_f) {
	if ((!(jule::real(_77816_f)))) {
		return nullptr;
	}
	_1ce494282_Lex _78313_lex = _1ce494282_Lex(jule::Slice<_1ce35e3a0_Token>(),_77816_f,0LL,jule::Int(),-1LL,jule::Slice<_1e7690a81_Log>());
	_78313_lex._method_new_line();
	_78313_lex._method_lex();
	if (_78313_lex._field_errors.len() > 0LL) {
		return _78313_lex._field_errors;
	}
	_77816_f->_field__tokens=_78313_lex._field_tokens;
	return nullptr;
}



inline jule::Ref<_1ce38611e_FileInfo> _1ce38611e_parse_file(jule::Ref<_1ce4aae47_File> _2223_f) {
	if ((!(jule::real(_2223_f)))) {
		return jule::new_ref<_1ce38611e_FileInfo>();
	}
	jule::Ref<_1ce38611e_FileInfo> _2713_finf = jule::new_struct<_1ce38611e_FileInfo>(new( std::nothrow ) _1ce38611e_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _1ce38611e_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors.len() > 0LL) {
		jule::drop(_2713_finf->_field_ast);
	}
	return _2713_finf;
}



inline jule::Ref<_1ce38611e_PackageInfo> _1ce38611e_parse_package(jule::Slice<jule::Ref<_1ce4aae47_File>> _3926_filesets) {
	if (_3926_filesets == nullptr) {
		return jule::new_ref<_1ce38611e_PackageInfo>();
	}
	jule::Ref<_1ce38611e_PackageInfo> _4413_pinf = jule::new_struct<_1ce38611e_PackageInfo>(new( std::nothrow ) _1ce38611e_PackageInfo());
	_4413_pinf->_field_files=jule::Slice<jule::Ref<_1ce38611e_FileInfo>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_3926_filesets.len())));
	for (auto _1ce38611e_f: _3926_filesets) {
		{
			if ((!(jule::real(_1ce38611e_f)))) {
				goto _iter_next_4534010560;
			}
			jule::Ref<_1ce38611e_FileInfo> _5117_finfo = _1ce38611e_parse_file(_1ce38611e_f);
			_4413_pinf->_field_files=jule::append(_4413_pinf->_field_files,jule::Slice<jule::Ref<_1ce38611e_FileInfo>>({_5117_finfo}));
		}
	_iter_next_4534010560:;
	}
	_iter_end_4534010560:;
	return _4413_pinf;
}



inline std::tuple<jule::Ref<_1ce2b7acd_Ast>,jule::Slice<_1e7690a81_Log>> _1ce38611e_parse_fileset(jule::Ref<_1ce4aae47_File> _5822_f) {
	jule::Ref<_1b5c910d6_Parser> _5913_p = jule::new_struct_ref<_1b5c910d6_Parser>(new( std::nothrow ) _1b5c910d6_Parser());
	_5913_p->_method_parse(_5822_f);
	return std::make_tuple(_5913_p->_field_ast,_5913_p->_field_errors);
}



inline jule::Ref<_1ce385d22_ScopeTree> _1ce557587_new_scope(void) {
	return jule::new_struct<_1ce385d22_ScopeTree>(new( std::nothrow ) _1ce385d22_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _1ce557587_is_st(_1ce35e3a0_Token _4410_current,_1ce35e3a0_Token _4426_prev) {
	jule::Bool _4441_ok = jule::Bool();
	jule::Bool _4451_terminated = jule::Bool();
	_4441_ok=(_4410_current._field_id == 5LLU) || (_4426_prev._field_row < _4410_current._field_row);
	_4451_terminated=_4410_current._field_id == 5LLU;
	return std::make_tuple(_4441_ok,_4451_terminated);
}



inline jule::Bool _1ce557587_prev_is_incomplete_binary_expr(jule::Slice<_1ce35e3a0_Token>& _5036_tokens,jule::Int& _5054_i) {
	if ((_5054_i > 1LL) && (_5036_tokens[static_cast<jule::Int>(_5054_i - 2LL)]._field_id == 23LLU)) {
		return false;
	}
	{
		_1ce35e3a0_Token* _5713_prev = (&(_5036_tokens[static_cast<jule::Int>(_5054_i - 1LL)]));
		return ((_5713_prev->_field_id == 7LLU) && _1ce35e3a0_is_bin_op(_5713_prev->_field_kind)) && (_5713_prev->_field_row < _5036_tokens[static_cast<jule::Int>(_5054_i)]._field_row);
	}
}



inline std::tuple<jule::Int,jule::Bool> _1ce557587_next_st_pos(jule::Slice<_1ce35e3a0_Token>& _6517_tokens,jule::Int _6534_start) {
	jule::Int _6613_brace_n = 0LL;
	jule::Int _6713_i = _6534_start;
	for (; _6713_i < _6517_tokens.len(); (_6713_i)++) {
		{
			jule::Bool _6917_ok = false;
			jule::Bool _7017_terminated = false;
			_1ce35e3a0_Token _7113_tok = _6517_tokens[static_cast<jule::Int>(_6713_i)];
			{
				auto _match_expr{ _7113_tok._field_id };
				if (!((3LLU) == _match_expr)) { goto _case_end_4534039072; }
				_case_begin_4534039072:;
				{
					{
						auto _match_expr{ _7113_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4534066480; }
						_case_begin_4534066480:;
						{
							if ((_6613_brace_n == 0LL) && (_6713_i > _6534_start)) {
								if ((!(_1ce557587_prev_is_incomplete_binary_expr(_6517_tokens,_6713_i)))) {
									std::tie(_6917_ok,_7017_terminated) = _1ce557587_is_st(_7113_tok,_6517_tokens[static_cast<jule::Int>(_6713_i - 1LL)]);
									if (_6917_ok) {
										goto _julec_label_return;
									}
								}
							}
							(_6613_brace_n)++;
						}
						goto _match_end_4534060192;
						_case_end_4534066480:;
						_case_begin_4534059136:;
						{
							(_6613_brace_n)--;
							if ((_6613_brace_n == 0LL) && ((_6713_i + 1LL) < _6517_tokens.len())) {
								std::tie(_6917_ok,_7017_terminated) = _1ce557587_is_st(_6517_tokens[static_cast<jule::Int>(_6713_i + 1LL)],_7113_tok);
								if (_6917_ok) {
									(_6713_i)++;
									goto _julec_label_return;
								}
							}
						}
						goto _match_end_4534060192;
						_case_end_4534059136:;
						_match_end_4534060192:;
					}
					goto _iter_next_4534037136;
				}
				goto _match_end_4534042240;
				_case_end_4534039072:;
				_match_end_4534042240:;
			}
			if (_6613_brace_n != 0LL) {
				goto _iter_next_4534037136;
			}
			if (_6713_i > _6534_start) {
				if (_1ce557587_prev_is_incomplete_binary_expr(_6517_tokens,_6713_i)) {
					goto _iter_next_4534037136;
				}
				std::tie(_6917_ok,_7017_terminated) = _1ce557587_is_st(_7113_tok,_6517_tokens[static_cast<jule::Int>(_6713_i - 1LL)]);
			} else {
				std::tie(_6917_ok,_7017_terminated) = _1ce557587_is_st(_7113_tok,_7113_tok);
			}
			if ((!(_6917_ok))) {
				goto _iter_next_4534037136;
			}
			_julec_label_return:;
			if (_7017_terminated) {
				(_6713_i)++;
			}
			return std::make_tuple(_6713_i,_7017_terminated);
		}
	_iter_next_4534037136:;
	}
	_iter_end_4534037136:;
	return std::make_tuple(_6713_i,false);
}



inline std::tuple<jule::Slice<_1ce35e3a0_Token>,jule::Bool> _1ce557587_skip_st(jule::Int& _12817_i,jule::Slice<_1ce35e3a0_Token> _12829_tokens) {
	jule::Int _1299_start = _12817_i;
	jule::Bool _13013_terminated = false;
	std::tie(_12817_i,_13013_terminated) = _1ce557587_next_st_pos(_12829_tokens,_1299_start);
	jule::Slice<_1ce35e3a0_Token> _13213_st_tokens = _12829_tokens.slice(static_cast<jule::Int>(_1299_start),static_cast<jule::Int>(_12817_i));
	if (_13013_terminated) {
		if (_13213_st_tokens.len() == 1LL) {
			std::tie(_13213_st_tokens,_13013_terminated) = _1ce557587_skip_st(_12817_i,_12829_tokens);
			return std::make_tuple(_13213_st_tokens,_13013_terminated);
		}
		_13213_st_tokens=_13213_st_tokens.slice(0LL,static_cast<jule::Int>(_13213_st_tokens.len() - 1LL));
	}
	return std::make_tuple(_13213_st_tokens,_13013_terminated);
}



inline jule::Slice<jule::Ref<_1ce557587_Stmt>> _1ce557587_split_stms(jule::Slice<_1ce35e3a0_Token>& _15020_tokens) {
	jule::Slice<jule::Ref<_1ce557587_Stmt>> _15113_stms = nullptr;
	jule::Int _15213_pos = 0LL;
	while (_15213_pos < _15020_tokens.len()) {
		{
			jule::Slice<_1ce35e3a0_Token> _15418_tokens;
			jule::Bool _15426_terminated;
			std::tie(_15418_tokens,_15426_terminated) = _1ce557587_skip_st(_15213_pos,_15020_tokens);
			_15113_stms=jule::append(_15113_stms,jule::Slice<jule::Ref<_1ce557587_Stmt>>({jule::new_struct<_1ce557587_Stmt>(new( std::nothrow ) _1ce557587_Stmt(_15418_tokens,_15426_terminated))}));
		}
	_iter_next_4534086960:;
	}
	_iter_end_4534086960:;
	return _15113_stms;
}



inline jule::Slice<_1ce35e3a0_Token> _1ce5ee178_is_fn_call(jule::Slice<_1ce35e3a0_Token>& _4020_tokens) {
	{
		auto _match_expr{ _4020_tokens[0LL]._field_id };
		if (!((3LLU) == _match_expr || (2LLU) == _match_expr || (1LLU) == _match_expr)) { goto _case_end_4534098720; }
		goto _match_end_4534091616;
		_case_end_4534098720:;
		_case_begin_4534093728:;
		{
			_1ce35e3a0_Token _4813_tok = _4020_tokens[static_cast<jule::Int>(_4020_tokens.len() - 1LL)];
			if ((_4813_tok._field_id != 3LLU) && (_4813_tok._field_kind != jule::Str(")", 1))) {
				return nullptr;
			}
		}
		goto _match_end_4534091616;
		_case_end_4534093728:;
		_match_end_4534091616:;
	}
	_1ce35e3a0_Token _5313_tok = _4020_tokens[static_cast<jule::Int>(_4020_tokens.len() - 1LL)];
	if ((_5313_tok._field_id != 3LLU) || (_5313_tok._field_kind != jule::Str(")", 1))) {
		return nullptr;
	}
	jule::Int _5713_brace_n = 0LL;
	jule::I64 _6013_i = _4020_tokens.len() - 1LL;
	for (; _6013_i >= 1LL; (_6013_i)--) {
		{
			_5313_tok=_4020_tokens[static_cast<jule::Int>(_6013_i)];
			if (_5313_tok._field_id == 3LLU) {
				{
					auto _match_expr{ _5313_tok._field_kind };
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4534105136; }
					_case_begin_4534105136:;
					{
						(_5713_brace_n)++;
					}
					goto _match_end_4534108000;
					_case_end_4534105136:;
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4534108208; }
					_case_begin_4534108208:;
					{
						(_5713_brace_n)--;
					}
					goto _match_end_4534108000;
					_case_end_4534108208:;
					_match_end_4534108000:;
				}
				if (_5713_brace_n == 0LL) {
					return _4020_tokens.slice(0LL,static_cast<jule::Int>(_6013_i));
				}
			}
		}
	_iter_next_4534103792:;
	}
	_iter_end_4534103792:;
	return nullptr;
}



inline jule::Ref<_1ce5ee178_CallData> _1ce5ee178_get_call_data(jule::Slice<_1ce35e3a0_Token>& _8223_tokens) {
	jule::Ref<_1ce5ee178_CallData> _8313_data = jule::new_struct<_1ce5ee178_CallData>(new( std::nothrow ) _1ce5ee178_CallData());
	std::tie(_8313_data->_field_expr_tokens,_8313_data->_field_args_tokens) = _1b5c910d6_range_last(_8223_tokens);
	if (_8313_data->_field_expr_tokens.len() == 0LL) {
		return _8313_data;
	}
	_1ce35e3a0_Token _909_token = _8313_data->_field_expr_tokens[static_cast<jule::Int>(_8313_data->_field_expr_tokens.len() - 1LL)];
	if ((_909_token._field_id == 3LLU) && (_909_token._field_kind == jule::Str("]", 1))) {
		std::tie(_8313_data->_field_expr_tokens,_8313_data->_field_generics_tokens) = _1b5c910d6_range_last(_8313_data->_field_expr_tokens);
	}
	return _8313_data;
}



inline jule::Slice<_1ce35e3a0_Token> _1ce5ee178_get_block_expr(jule::Slice<_1ce35e3a0_Token>& _9824_tokens) {
	jule::Int _9913_brace_n = 0LL;
	{
		jule::Int _1ce5ee178_i = 0;
		for (auto _1ce5ee178_tok: _9824_tokens) {
			{
				if (_1ce5ee178_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1ce5ee178_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4534124464; }
						_case_begin_4534124464:;
						{
							if (_9913_brace_n > 0LL) {
								(_9913_brace_n)++;
								goto _match_end_4534123104;
							}
							return _9824_tokens.slice(0LL,static_cast<jule::Int>(_1ce5ee178_i));
						}
						goto _match_end_4534123104;
						_case_end_4534124464:;
						if (!((jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4534123872; }
						_case_begin_4534123872:;
						{
							(_9913_brace_n)++;
						}
						goto _match_end_4534123104;
						_case_end_4534123872:;
						_case_begin_4534122416:;
						{
							(_9913_brace_n)--;
						}
						goto _match_end_4534123104;
						_case_end_4534122416:;
						_match_end_4534123104:;
					}
				}
			}
		_iter_next_4534119792:;
		_1ce5ee178_i++;
		}
		_iter_end_4534119792:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_1ce35e3a0_Token>,jule::Slice<_1ce35e3a0_Token>> _1ce5ee178_split_colon(jule::Slice<_1ce35e3a0_Token>& _12421_tokens) {
	jule::Int _12513_range_n = 0LL;
	{
		jule::Int _1ce5ee178_i = 0;
		for (auto _1ce5ee178_token: _12421_tokens) {
			{
				{
					auto _match_expr{ _1ce5ee178_token._field_id };
					if (!((3LLU) == _match_expr)) { goto _case_end_4534129360; }
					_case_begin_4534129360:;
					{
						{
							auto _match_expr{ _1ce5ee178_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4534132320; }
							_case_begin_4534132320:;
							{
								(_12513_range_n)++;
								goto _iter_next_4534121856;
							}
							goto _match_end_4534130896;
							_case_end_4534132320:;
							_case_begin_4534129616:;
							{
								(_12513_range_n)--;
							}
							goto _match_end_4534130896;
							_case_end_4534129616:;
							_match_end_4534130896:;
						}
					}
					goto _match_end_4534129280;
					_case_end_4534129360:;
					if (!((11LLU) == _match_expr)) { goto _case_end_4534129456; }
					_case_begin_4534129456:;
					{
						if (_12513_range_n < 1LL) {
							jule::Slice<_1ce35e3a0_Token> _14225_l = _12421_tokens.slice(0LL,static_cast<jule::Int>(_1ce5ee178_i));
							jule::Slice<_1ce35e3a0_Token> _14325_r = _12421_tokens.slice(static_cast<jule::Int>(_1ce5ee178_i + 1LL));
							return std::make_tuple(_14225_l,_14325_r);
						}
					}
					goto _match_end_4534129280;
					_case_end_4534129456:;
					_match_end_4534129280:;
				}
			}
		_iter_next_4534121856:;
		_1ce5ee178_i++;
		}
		_iter_end_4534121856:;
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_1ce35e3a0_Token> _1ce5ee178_eliminate_comments(jule::Slice<_1ce35e3a0_Token>& _18228_tokens) {
	jule::Slice<_1ce35e3a0_Token> _18313_cutted = nullptr;
	for (auto _1ce5ee178_token: _18228_tokens) {
		{
			if (_1ce5ee178_token._field_id != 18LLU) {
				_18313_cutted=jule::append(_18313_cutted,jule::Slice<_1ce35e3a0_Token>({_1ce5ee178_token}));
			}
		}
	_iter_next_4534139008:;
	}
	_iter_end_4534139008:;
	return _18313_cutted;
}



inline jule::Int _1ce5ee178_find_lowest_prec_op(jule::Slice<_1ce35e3a0_Token>& _19425_tokens) {
	_1ce5ee178_Precedencer _19513_prec = _1ce5ee178_Precedencer();
	jule::Int _19613_brace_n = 0LL;
	jule::Bool _19713_skip_to_next_open = false;
	{
		jule::Int _1ce5ee178_i = 0;
		for (auto _1ce5ee178_token: _19425_tokens) {
			{
				{
					if (!((_1ce5ee178_token._field_id == 3LLU))) { goto _case_end_4534148608; }
					_case_begin_4534148608:;
					{
						{
							auto _match_expr{ _1ce5ee178_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4534151888; }
							_case_begin_4534151888:;
							{
								(_19613_brace_n)++;
								_19713_skip_to_next_open=false;
							}
							goto _match_end_4534151056;
							_case_end_4534151888:;
							_case_begin_4534150080:;
							{
								(_19613_brace_n)--;
							}
							goto _match_end_4534151056;
							_case_end_4534150080:;
							_match_end_4534151056:;
						}
						goto _iter_next_4534146208;
					}
					goto _match_end_4534148320;
					_case_end_4534148608:;
					if (!((_19713_skip_to_next_open))) { goto _case_end_4534148720; }
					_case_begin_4534148720:;
					{
						goto _iter_next_4534146208;
					}
					goto _match_end_4534148320;
					_case_end_4534148720:;
					if (!((_1ce5ee178_token._field_id == 16LLU))) { goto _case_end_4534148832; }
					_case_begin_4534148832:;
					{
						_19713_skip_to_next_open=true;
						goto _iter_next_4534146208;
					}
					goto _match_end_4534148320;
					_case_end_4534148832:;
					if (!((_1ce5ee178_i == 0LL))) { goto _case_end_4534148944; }
					_case_begin_4534148944:;
					{
						goto _iter_next_4534146208;
					}
					goto _match_end_4534148320;
					_case_end_4534148944:;
					if (!((_1ce5ee178_token._field_id != 7LLU))) { goto _case_end_4534149056; }
					_case_begin_4534149056:;
					{
						goto _iter_next_4534146208;
					}
					goto _match_end_4534148320;
					_case_end_4534149056:;
					if (!((_19613_brace_n > 0LL))) { goto _case_end_4534149168; }
					_case_begin_4534149168:;
					{
						goto _iter_next_4534146208;
					}
					goto _match_end_4534148320;
					_case_end_4534149168:;
					_match_end_4534148320:;
				}
				_1ce35e3a0_Token _23013_left = _19425_tokens[static_cast<jule::Int>(_1ce5ee178_i - 1LL)];
				if ((_23013_left._field_id == 7LLU) || (_23013_left._field_id == 11LLU)) {
					goto _iter_next_4534146208;
				}
				if (((_1ce5ee178_i > 1LL) && (_23013_left._field_id == 3LLU)) && (_23013_left._field_kind == jule::Str("]", 1))) {
					_1ce35e3a0_Token _23817_lleft = _19425_tokens[static_cast<jule::Int>(_1ce5ee178_i - 2LL)];
					if ((_23817_lleft._field_id == 3LLU) && (_23817_lleft._field_kind == jule::Str("[", 1))) {
						if ((_1ce5ee178_token._field_kind == jule::Str("&", 1)) || (_1ce5ee178_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_4534146208;
						}
					}
				}
				jule::Int _24713_p = _1ce5ee178_token._method_prec();
				if (_24713_p != -1LL) {
					_19513_prec._method_set(_24713_p,jule::Any(_1ce5ee178_i));
				}
			}
		_iter_next_4534146208:;
		_1ce5ee178_i++;
		}
		_iter_end_4534146208:;
	}
	jule::Any _2539_data = _19513_prec._method_get_lower();
	if (_2539_data == nullptr) {
		return -1LL;
	}
	return _2539_data.operator jule::Int();
}



inline jule::Ref<_1ce385d22_IdentExpr> _1ce5ee178_build_ident_expr(_1ce35e3a0_Token& _26026_token) {
	return jule::new_struct<_1ce385d22_IdentExpr>(new( std::nothrow ) _1ce385d22_IdentExpr(_26026_token,_26026_token._field_kind,false));
}



inline std::tuple<jule::Slice<_1ce35e3a0_Token>,jule::Int> _1ce5ee178_get_range_expr_tokens(jule::Slice<_1ce35e3a0_Token>& _26831_tokens) {
	jule::Int _26913_range_n = 0LL;
	jule::I64 _27013_i = _26831_tokens.len() - 1LL;
	for (; _27013_i >= 0LL; (_27013_i)--) {
		{
			_1ce35e3a0_Token _27213_tok = _26831_tokens[static_cast<jule::Int>(_27013_i)];
			if (_27213_tok._field_id == 3LLU) {
				{
					auto _match_expr{ _27213_tok._field_kind };
					if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4534179616; }
					_case_begin_4534179616:;
					{
						(_26913_range_n)++;
					}
					goto _match_end_4534178256;
					_case_end_4534179616:;
					_case_begin_4534177568:;
					{
						(_26913_range_n)--;
					}
					goto _match_end_4534178256;
					_case_end_4534177568:;
					_match_end_4534178256:;
				}
			}
			if (_26913_range_n == 0LL) {
				return std::make_tuple(_26831_tokens.slice(0LL,static_cast<jule::Int>(_27013_i)),_26913_range_n);
			}
		}
	_iter_next_4534171888:;
	}
	_iter_end_4534171888:;
	return std::make_tuple(nullptr,_26913_range_n);
}



inline jule::Bool _1ce6015a9_check_assign_tokens(jule::Slice<_1ce35e3a0_Token>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_1ce35e3a0_is_assign(_1625_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	for (auto _1ce6015a9_t: _1625_tokens) {
		{
			if (_1ce6015a9_t._field_id == 3LLU) {
				{
					auto _match_expr{ _1ce6015a9_t._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4534189104; }
					_case_begin_4534189104:;
					{
						(_2113_brace_n)++;
					}
					goto _match_end_4534187744;
					_case_end_4534189104:;
					_case_begin_4534187056:;
					{
						(_2113_brace_n)--;
					}
					goto _match_end_4534187744;
					_case_end_4534187056:;
					_match_end_4534187744:;
				}
			}
			if (_2113_brace_n < 0LL) {
				return false;
			} else if (_2113_brace_n > 0LL) {
				goto _iter_next_4534184992;
			} else if ((_1ce6015a9_t._field_id == 7LLU) && _1ce35e3a0_is_assign_op(_1ce6015a9_t._field_kind)) {
				return true;
			}
		}
	_iter_next_4534184992:;
	}
	_iter_end_4534184992:;
	return false;
}



inline _1e7690a81_Log _1b5c910d6_make_err(jule::Int _5113_row,jule::Int _5123_col,jule::Ref<_1ce4aae47_File>& _5134_f,jule::Str _5144_fmt,jule::Slice<jule::Any> _5157_args) {
	return _1e7690a81_Log(1LLU,_5113_row,_5123_col,_5134_f->_method_path(),_1e7690a81_logf(_5144_fmt,_5157_args),jule::Str(),jule::Str());
}



inline jule::Slice<_1ce35e3a0_Token> _1b5c910d6_range(jule::Int& _7015_i,jule::Str _7023_open,jule::Str _7040_close,jule::Slice<_1ce35e3a0_Token>& _7063_tokens) {
	if (_7015_i >= _7063_tokens.len()) {
		return nullptr;
	}
	_1ce35e3a0_Token _759_tok = _7063_tokens[static_cast<jule::Int>(_7015_i)];
	if ((_759_tok._field_id != 3LLU) || (_759_tok._field_kind != _7023_open)) {
		return nullptr;
	}
	(_7015_i)++;
	jule::Int _8113_range_n = 1LL;
	jule::Int _829_start = _7015_i;
	for (; (_8113_range_n != 0LL) && (_7015_i < _7063_tokens.len()); (_7015_i)++) {
		{
			_1ce35e3a0_Token _8413_token = _7063_tokens[static_cast<jule::Int>(_7015_i)];
			if (_8413_token._field_id == 3LLU) {
				{
					auto _match_expr{ _8413_token._field_kind };
					if (!((_7023_open) == _match_expr)) { goto _case_end_4534207968; }
					_case_begin_4534207968:;
					{
						(_8113_range_n)++;
					}
					goto _match_end_4534207888;
					_case_end_4534207968:;
					if (!((_7040_close) == _match_expr)) { goto _case_end_4534208064; }
					_case_begin_4534208064:;
					{
						(_8113_range_n)--;
					}
					goto _match_end_4534207888;
					_case_end_4534208064:;
					_match_end_4534207888:;
				}
			}
		}
	_iter_next_4534203072:;
	}
	_iter_end_4534203072:;
	return _7063_tokens.slice(static_cast<jule::Int>(_829_start),static_cast<jule::Int>(_7015_i - 1LL));
}



inline std::tuple<jule::Slice<_1ce35e3a0_Token>,jule::Slice<_1ce35e3a0_Token>> _1b5c910d6_range_last(jule::Slice<_1ce35e3a0_Token>& _10320_tokens) {
	jule::Slice<_1ce35e3a0_Token> _10339_cutted = jule::Slice<_1ce35e3a0_Token>();
	jule::Slice<_1ce35e3a0_Token> _10356_cut = jule::Slice<_1ce35e3a0_Token>();
	if (_10320_tokens.len() == 0LL) {
		_10339_cutted = _10320_tokens;
		_10356_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10356_cut);
	} else if (_10320_tokens[static_cast<jule::Int>(_10320_tokens.len() - 1LL)]._field_id != 3LLU) {
		_10339_cutted = _10320_tokens;
		_10356_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10356_cut);
	}
	jule::Int _11013_brace_n = 0LL;
	jule::I64 _11113_i = _10320_tokens.len() - 1LL;
	for (; _11113_i >= 0LL; (_11113_i)--) {
		{
			_1ce35e3a0_Token _11313_token = _10320_tokens[static_cast<jule::Int>(_11113_i)];
			if (_11313_token._field_id == 3LLU) {
				{
					auto _match_expr{ _11313_token._field_kind };
					if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4534222448; }
					_case_begin_4534222448:;
					{
						(_11013_brace_n)++;
						goto _iter_next_4534206640;
					}
					goto _match_end_4534221088;
					_case_end_4534222448:;
					_case_begin_4534220400:;
					{
						(_11013_brace_n)--;
					}
					goto _match_end_4534221088;
					_case_end_4534220400:;
					_match_end_4534221088:;
				}
			}
			if (_11013_brace_n == 0LL) {
				_10339_cutted = _10320_tokens.slice(0LL,static_cast<jule::Int>(_11113_i));
				_10356_cut = _10320_tokens.slice(static_cast<jule::Int>(_11113_i));
				return std::make_tuple(_10339_cutted,_10356_cut);
			}
		}
	_iter_next_4534206640:;
	}
	_iter_end_4534206640:;
	_10339_cutted = _10320_tokens;
	_10356_cut = nullptr;
	return std::make_tuple(_10339_cutted,_10356_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_1ce35e3a0_Token>>,jule::Slice<_1e7690a81_Log>> _1b5c910d6_parts(jule::Slice<_1ce35e3a0_Token>& _14115_tokens,jule::Uint _14132_id,jule::Bool _14145_expr_must) {
	if (_14115_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_1ce35e3a0_Token>> _14613_parts = nullptr;
	jule::Slice<_1e7690a81_Log> _14713_errors = nullptr;
	jule::Int _14913_range_n = 0LL;
	jule::Int _15013_last = 0LL;
	{
		jule::Int _1b5c910d6_i = 0;
		for (auto _1b5c910d6_token: _14115_tokens) {
			{
				if (_1b5c910d6_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1b5c910d6_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4534238048; }
						_case_begin_4534238048:;
						{
							(_14913_range_n)++;
							goto _iter_next_4534233072;
						}
						goto _match_end_4534236688;
						_case_end_4534238048:;
						_case_begin_4534236000:;
						{
							(_14913_range_n)--;
						}
						goto _match_end_4534236688;
						_case_end_4534236000:;
						_match_end_4534236688:;
					}
				}
				if (_14913_range_n > 0LL) {
					goto _iter_next_4534233072;
				}
				if (_1b5c910d6_token._field_id == _14132_id) {
					if (_14145_expr_must && ((_1b5c910d6_i - _15013_last) <= 0LL)) {
						_1e7690a81_Log _17021_err = _1b5c910d6_make_err(_1b5c910d6_token._field_row,_1b5c910d6_token._field_column,_1b5c910d6_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
						_14713_errors=jule::append(_14713_errors,jule::Slice<_1e7690a81_Log>({_17021_err}));
					}
					_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1ce35e3a0_Token>>({_14115_tokens.slice(static_cast<jule::Int>(_15013_last),static_cast<jule::Int>(_1b5c910d6_i))}));
					_15013_last=static_cast<jule::Int>(_1b5c910d6_i + 1LL);
				}
			}
		_iter_next_4534233072:;
		_1b5c910d6_i++;
		}
		_iter_end_4534233072:;
	}
	if (_15013_last < _14115_tokens.len()) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1ce35e3a0_Token>>({_14115_tokens.slice(static_cast<jule::Int>(_15013_last))}));
	} else if ((!(_14145_expr_must))) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1ce35e3a0_Token>>({jule::Slice<_1ce35e3a0_Token>({})}));
	}
	return std::make_tuple(_14613_parts,_14713_errors);
}



inline jule::Str _1b5c910d6_get_close_kind_of_brace(jule::Str _18728_left) {
	{
		auto _match_expr{ _18728_left };
		if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4534250368; }
		_case_begin_4534250368:;
		{
			return jule::Str("(", 1);
		}
		goto _match_end_4534246144;
		_case_end_4534250368:;
		if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4534249936; }
		_case_begin_4534249936:;
		{
			return jule::Str("{", 1);
		}
		goto _match_end_4534246144;
		_case_end_4534249936:;
		if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4534250032; }
		_case_begin_4534250032:;
		{
			return jule::Str("[", 1);
		}
		goto _match_end_4534246144;
		_case_end_4534250032:;
		_case_begin_4534245984:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4534246144;
		_case_end_4534245984:;
		_match_end_4534246144:;
	}
}



inline _1e7690a81_Log _1b5c910d6_compiler_err(_1ce35e3a0_Token& _19618_token,jule::Str& _19633_fmt,jule::Slice<jule::Any> _19646_args) {
	return _1e7690a81_Log(1LLU,_19618_token._field_row,_19618_token._field_column,_19618_token._field_file->_method_path(),_1e7690a81_logf(_19633_fmt,_19646_args),_19618_token._field_file->_method_get_row(_19618_token._field_row),jule::Str());
}



inline void _1b5c910d6_push_suggestion(_1e7690a81_Log* _20731_log,jule::Str _20742_fmt,jule::Slice<jule::Any> _20755_args) {
	_20731_log->_field_suggestion=_1e7690a81_logf(_20742_fmt,_20755_args);
}



inline jule::Ref<_1ce385d22_Comment> _1b5c910d6_build_comment(_1ce35e3a0_Token& _21123_token) {
	_21123_token._field_kind=_21123_token._field_kind.slice(2LL).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_1ce385d22_Comment>(new( std::nothrow ) _1ce385d22_Comment(_21123_token,_21123_token._field_kind));
}



inline jule::Str _1b5c910d6_tokstoa(jule::Slice<_1ce35e3a0_Token>& _22013_tokens) {
	jule::Str _22113_s = jule::Str("", 0);
	for (auto _1b5c910d6_token: _22013_tokens) {
		{
			_22113_s+=_1b5c910d6_token._field_kind;
		}
	_iter_next_4534263104:;
	}
	_iter_end_4534263104:;
	return _22113_s;
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_build_void_type(void) {
	return jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl());
}



inline jule::Ref<_1ce385d22_TypeDecl> _1b5d8e899_build_prim_type(_1ce35e3a0_Token _2024_token) {
	return jule::new_struct<_1ce385d22_TypeDecl>(new( std::nothrow ) _1ce385d22_TypeDecl(_2024_token,jule::Any(jule::new_struct<_1ce385d22_IdentTypeDecl>(new( std::nothrow ) _1ce385d22_IdentTypeDecl(_2024_token,_2024_token._field_kind,false,nullptr)))));
}



inline std::tuple<jule::Slice<_1ce35e3a0_Token>,jule::Int> _1b5d8e899_split_map_range(jule::Slice<_1ce35e3a0_Token>& _3525_tokens,jule::Int& _3547_i) {
	jule::Slice<_1ce35e3a0_Token> _3557_range_tokens = jule::Slice<_1ce35e3a0_Token>();
	jule::Int _3580_colon = jule::Int();
	_3580_colon=-1LL;
	jule::Int _3713_range_n = 0LL;
	jule::Int _389_start = _3547_i;
	for (; _3547_i < _3525_tokens.len(); (_3547_i)++) {
		{
			_1ce35e3a0_Token _4013_token = _3525_tokens[static_cast<jule::Int>(_3547_i)];
			if (_4013_token._field_id == 3LLU) {
				{
					auto _match_expr{ _4013_token._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4534276192; }
					_case_begin_4534276192:;
					{
						(_3713_range_n)++;
						goto _iter_next_4534269792;
					}
					goto _match_end_4534274832;
					_case_end_4534276192:;
					_case_begin_4534274144:;
					{
						(_3713_range_n)--;
					}
					goto _match_end_4534274832;
					_case_end_4534274144:;
					_match_end_4534274832:;
				}
			}
			if (_3713_range_n == 0LL) {
				if ((_389_start + 1LL) > _3547_i) {
					return std::make_tuple(_3557_range_tokens,_3580_colon);
				}
				_3557_range_tokens=_3525_tokens.slice(static_cast<jule::Int>(_389_start + 1LL),static_cast<jule::Int>(_3547_i));
				goto _iter_end_4534269792;
			} else if (_3713_range_n != 1LL) {
				goto _iter_next_4534269792;
			}
			if ((_3580_colon == -1LL) && (_4013_token._field_id == 11LLU)) {
				_3580_colon=static_cast<jule::Int>((_3547_i - _389_start) - 1LL);
			}
		}
	_iter_next_4534269792:;
	}
	_iter_end_4534269792:;
	return std::make_tuple(_3557_range_tokens,_3580_colon);
}



inline void _1b6d4076c_lshift_unsig(_1b6d4076c_Const& _55822_c,_1b6d4076c_Const& _55833_x) {
	jule::U64 _5599_l = _55822_c._method_as_u64();
	jule::U64 _5609_r = _55833_x._method_as_u64();
	_55822_c._method_set_u64(static_cast<jule::U64>(_5599_l << _5609_r));
}



inline void _1b6d4076c_rshift_unsig(_1b6d4076c_Const& _56422_c,_1b6d4076c_Const& _56433_x) {
	jule::U64 _5659_l = _56422_c._method_as_u64();
	jule::U64 _5669_r = _56433_x._method_as_u64();
	_56422_c._method_set_u64(static_cast<jule::U64>(_5659_l >> _5669_r));
}



inline jule::Bool _1b6d438d5_check_bit(jule::Str _914_v,jule::Int _922_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)> _932_checker) {
	{
		if (!((_914_v == jule::Str("", 0)))) { goto _case_end_4536978064; }
		_case_begin_4536978064:;
		{
			return false;
		}
		goto _match_end_4536976256;
		_case_end_4536978064:;
		if (!((_914_v.len() == 1LL))) { goto _case_end_4536978448; }
		_case_begin_4536978448:;
		{
			return true;
		}
		goto _match_end_4536976256;
		_case_end_4536978448:;
		if (!((_914_v.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4536978736; }
		_case_begin_4536978736:;
		{
			return _932_checker(_914_v.slice(2LL),16LL,_922_bit);
		}
		goto _match_end_4536976256;
		_case_end_4536978736:;
		if (!((_914_v.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4536978832; }
		_case_begin_4536978832:;
		{
			return _932_checker(_914_v.slice(2LL),2LL,_922_bit);
		}
		goto _match_end_4536976256;
		_case_end_4536978832:;
		if (!((_914_v.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4536978928; }
		_case_begin_4536978928:;
		{
			return _932_checker(_914_v.slice(2LL),8LL,_922_bit);
		}
		goto _match_end_4536976256;
		_case_end_4536978928:;
		if (!((_914_v[0LL] == '0'))) { goto _case_end_4536977376; }
		_case_begin_4536977376:;
		{
			return _932_checker(_914_v.slice(1LL),8LL,_922_bit);
		}
		goto _match_end_4536976256;
		_case_end_4536977376:;
		_case_begin_4536976400:;
		{
			return _932_checker(_914_v,10LL,_922_bit);
		}
		goto _match_end_4536976256;
		_case_end_4536976400:;
		_match_end_4536976256:;
	}
}



inline jule::Str _1b6d438d5_real_kind_of(jule::Str _2421_kind) {
	{
		auto _match_expr{ _2421_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4536987648; }
		_case_begin_4536987648:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4536988208;
		_case_end_4536987648:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("uintptr", 7)) == _match_expr)) { goto _case_end_4536987744; }
		_case_begin_4536987744:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4536988208;
		_case_end_4536987744:;
		_case_begin_4536986160:;
		{
			return _2421_kind;
		}
		goto _match_end_4536988208;
		_case_end_4536986160:;
		_match_end_4536988208:;
	}
}



inline jule::Int _1b6d438d5_bitsize_of(jule::Str _4019_k) {
	{
		auto _match_expr{ _4019_k };
		if (!((jule::Str("i8", 2)) == _match_expr || (jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4536991488; }
		_case_begin_4536991488:;
		{
			return 8LL;
		}
		goto _match_end_4536990560;
		_case_end_4536991488:;
		if (!((jule::Str("i16", 3)) == _match_expr || (jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4536991584; }
		_case_begin_4536991584:;
		{
			return 16LL;
		}
		goto _match_end_4536990560;
		_case_end_4536991584:;
		if (!((jule::Str("i32", 3)) == _match_expr || (jule::Str("u32", 3)) == _match_expr || (jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4536991840; }
		_case_begin_4536991840:;
		{
			return 32LL;
		}
		goto _match_end_4536990560;
		_case_end_4536991840:;
		if (!((jule::Str("i64", 3)) == _match_expr || (jule::Str("u64", 3)) == _match_expr || (jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4536991936; }
		_case_begin_4536991936:;
		{
			return 64LL;
		}
		goto _match_end_4536990560;
		_case_end_4536991936:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("int", 3)) == _match_expr)) { goto _case_end_4536991120; }
		_case_begin_4536991120:;
		{
			return 32LL;
		}
		goto _match_end_4536990560;
		_case_end_4536991120:;
		_case_begin_4536989712:;
		{
			return -1LL;
		}
		goto _match_end_4536990560;
		_case_end_4536989712:;
		_match_end_4536990560:;
	}
}



inline jule::Str _1b6d438d5_int_from_bits(jule::U64 _7222_bits) {
	{
		auto _match_expr{ _7222_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4536996080; }
		_case_begin_4536996080:;
		{
			return jule::Str("i8", 2);
		}
		goto _match_end_4536994448;
		_case_end_4536996080:;
		if (!((16LL) == _match_expr)) { goto _case_end_4536996176; }
		_case_begin_4536996176:;
		{
			return jule::Str("i16", 3);
		}
		goto _match_end_4536994448;
		_case_end_4536996176:;
		if (!((32LL) == _match_expr)) { goto _case_end_4536996272; }
		_case_begin_4536996272:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4536994448;
		_case_end_4536996272:;
		if (!((64LL) == _match_expr)) { goto _case_end_4536996704; }
		_case_begin_4536996704:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4536994448;
		_case_end_4536996704:;
		_case_begin_4536995280:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4536994448;
		_case_end_4536995280:;
		_match_end_4536994448:;
	}
}



inline jule::Str _1b6d438d5_uint_from_bits(jule::U64 _8523_bits) {
	{
		auto _match_expr{ _8523_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4536999744; }
		_case_begin_4536999744:;
		{
			return jule::Str("u8", 2);
		}
		goto _match_end_4536997632;
		_case_end_4536999744:;
		if (!((16LL) == _match_expr)) { goto _case_end_4536999840; }
		_case_begin_4536999840:;
		{
			return jule::Str("u16", 3);
		}
		goto _match_end_4536997632;
		_case_end_4536999840:;
		if (!((32LL) == _match_expr)) { goto _case_end_4536999936; }
		_case_begin_4536999936:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4536997632;
		_case_end_4536999936:;
		if (!((64LL) == _match_expr)) { goto _case_end_4537000368; }
		_case_begin_4537000368:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4536997632;
		_case_end_4537000368:;
		_case_begin_4536998064:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4536997632;
		_case_end_4536998064:;
		_match_end_4536997632:;
	}
}



inline jule::Str _1b6d438d5_float_from_bits(jule::U64 _9924_bits) {
	{
		auto _match_expr{ _9924_bits };
		if (!((32LL) == _match_expr)) { goto _case_end_4537003824; }
		_case_begin_4537003824:;
		{
			return jule::Str("f32", 3);
		}
		goto _match_end_4537001296;
		_case_end_4537003824:;
		if (!((64LL) == _match_expr)) { goto _case_end_4537003408; }
		_case_begin_4537003408:;
		{
			return jule::Str("f64", 3);
		}
		goto _match_end_4537001296;
		_case_end_4537003408:;
		_case_begin_4537001728:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4537001296;
		_case_end_4537001728:;
		_match_end_4537001296:;
	}
}



inline jule::Bool _1b6d438d5_check_bit_int(jule::Str _10822_v,jule::Int _10830_bit) {
	return _1b6d438d5_check_bit(_10822_v,_10830_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _10930_v,jule::Int _10938_base,jule::Int _10949_bit) mutable -> jule::Bool {
		jule::Int _11017_err;
		std::tie(std::ignore,_11017_err) = _1e7717cd4_parse_int(_10930_v,_10938_base,_10949_bit);
		return _11017_err == 0LLU;
	}));
}



inline jule::Bool _1b6d438d5_check_bit_uint(jule::Str _11623_v,jule::Int _11631_bit) {
	return _1b6d438d5_check_bit(_11623_v,_11631_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _11730_v,jule::Int _11738_base,jule::Int _11749_bit) mutable -> jule::Bool {
		jule::Int _11817_err;
		std::tie(std::ignore,_11817_err) = _1e7717cd4_parse_uint(_11730_v,_11738_base,_11749_bit);
		return _11817_err == 0LLU;
	}));
}



inline jule::Bool _1b6d438d5_check_bit_float(jule::Str _12424_val,jule::Int _12434_bit) {
	jule::Int _12513_err;
	std::tie(std::ignore,_12513_err) = _1e857a7c2_parse_float(_12424_val,_12434_bit);
	return _12513_err == 0LLU;
}



inline jule::U64 _1b6d438d5_bitsize_of_float(jule::F64 _13425_x) {
	{
		if (!(((-340282346638528860000000000000000000000.0 <= _13425_x) && (_13425_x <= 340282346638528860000000000000000000000.0)))) { goto _case_end_4537023696; }
		_case_begin_4537023696:;
		{
			return 32LL;
		}
		goto _match_end_4537021616;
		_case_end_4537023696:;
		_case_begin_4537021792:;
		{
			return 64LL;
		}
		goto _match_end_4537021616;
		_case_end_4537021792:;
		_match_end_4537021616:;
	}
}



inline jule::U64 _1b6d438d5_bitsize_of_int(jule::I64 _14823_x) {
	{
		if (!(((-128LL <= _14823_x) && (_14823_x <= 127LL)))) { goto _case_end_4537026096; }
		_case_begin_4537026096:;
		{
			return 8LL;
		}
		goto _match_end_4537024624;
		_case_end_4537026096:;
		if (!(((-32768LL <= _14823_x) && (_14823_x <= 32767LL)))) { goto _case_end_4537026432; }
		_case_begin_4537026432:;
		{
			return 16LL;
		}
		goto _match_end_4537024624;
		_case_end_4537026432:;
		if (!(((-2147483648LL <= _14823_x) && (_14823_x <= 2147483647LL)))) { goto _case_end_4537026528; }
		_case_begin_4537026528:;
		{
			return 32LL;
		}
		goto _match_end_4537024624;
		_case_end_4537026528:;
		_case_begin_4537024752:;
		{
			return 64LL;
		}
		goto _match_end_4537024624;
		_case_end_4537024752:;
		_match_end_4537024624:;
	}
}



inline jule::U64 _1b6d438d5_bitsize_of_uint(jule::U64 _16424_x) {
	{
		if (!((_16424_x <= 255LL))) { goto _case_end_4537030864; }
		_case_begin_4537030864:;
		{
			return 8LL;
		}
		goto _match_end_4537028816;
		_case_end_4537030864:;
		if (!((_16424_x <= 65535LL))) { goto _case_end_4537031200; }
		_case_begin_4537031200:;
		{
			return 16LL;
		}
		goto _match_end_4537028816;
		_case_end_4537031200:;
		if (!((_16424_x <= 4294967295LL))) { goto _case_end_4537031296; }
		_case_begin_4537031296:;
		{
			return 32LL;
		}
		goto _match_end_4537028816;
		_case_end_4537031296:;
		_case_begin_4537029520:;
		{
			return 64LL;
		}
		goto _match_end_4537028816;
		_case_end_4537029520:;
		_match_end_4537028816:;
	}
}



inline jule::F64 _1b6d47d3a_min(jule::Str _4316_k) {
	_4316_k=_1b6d438d5_real_kind_of(_4316_k);
	{
		auto _match_expr{ _4316_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4537035248; }
		_case_begin_4537035248:;
		{
			return -128LL;
		}
		goto _match_end_4537033712;
		_case_end_4537035248:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4537035344; }
		_case_begin_4537035344:;
		{
			return -32768LL;
		}
		goto _match_end_4537033712;
		_case_end_4537035344:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4537034080; }
		_case_begin_4537034080:;
		{
			return -2147483648LL;
		}
		goto _match_end_4537033712;
		_case_end_4537034080:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4537034176; }
		_case_begin_4537034176:;
		{
			return jule::MIN_I64;
		}
		goto _match_end_4537033712;
		_case_end_4537034176:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4537034288; }
		_case_begin_4537034288:;
		{
			return -340282346638528860000000000000000000000.0;
		}
		goto _match_end_4537033712;
		_case_end_4537034288:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4537034544; }
		_case_begin_4537034544:;
		{
			return jule::MIN_F64;
		}
		goto _match_end_4537033712;
		_case_end_4537034544:;
		_case_begin_4537031760:;
		{
			return 0LL;
		}
		goto _match_end_4537033712;
		_case_end_4537031760:;
		_match_end_4537033712:;
	}
}



inline jule::F64 _1b6d47d3a_max(jule::Str _5816_k) {
	_5816_k=_1b6d438d5_real_kind_of(_5816_k);
	{
		auto _match_expr{ _5816_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4537040432; }
		_case_begin_4537040432:;
		{
			return 127LL;
		}
		goto _match_end_4537036032;
		_case_end_4537040432:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4537039488; }
		_case_begin_4537039488:;
		{
			return 32767LL;
		}
		goto _match_end_4537036032;
		_case_end_4537039488:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4537039584; }
		_case_begin_4537039584:;
		{
			return 2147483647LL;
		}
		goto _match_end_4537036032;
		_case_end_4537039584:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4537039680; }
		_case_begin_4537039680:;
		{
			return jule::MAX_I64;
		}
		goto _match_end_4537036032;
		_case_end_4537039680:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4537039776; }
		_case_begin_4537039776:;
		{
			return 255LL;
		}
		goto _match_end_4537036032;
		_case_end_4537039776:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4537039872; }
		_case_begin_4537039872:;
		{
			return 65535LL;
		}
		goto _match_end_4537036032;
		_case_end_4537039872:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4537039984; }
		_case_begin_4537039984:;
		{
			return 4294967295LL;
		}
		goto _match_end_4537036032;
		_case_end_4537039984:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4537040096; }
		_case_begin_4537040096:;
		{
			return jule::MAX_U64;
		}
		goto _match_end_4537036032;
		_case_end_4537040096:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4537040208; }
		_case_begin_4537040208:;
		{
			return 340282346638528860000000000000000000000.0;
		}
		goto _match_end_4537036032;
		_case_end_4537040208:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4537040768; }
		_case_begin_4537040768:;
		{
			return jule::MAX_F64;
		}
		goto _match_end_4537036032;
		_case_end_4537040768:;
		_case_begin_4537037856:;
		{
			return 0LL;
		}
		goto _match_end_4537036032;
		_case_end_4537037856:;
		_match_end_4537036032:;
	}
}



inline jule::Bool _1b6d578d8_is_i8_compatible(jule::Str _629_k) {
	_629_k=_1b6d438d5_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



inline jule::Bool _1b6d578d8_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_1b6d438d5_real_kind_of(_1230_k);
	return ((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2));
}



inline jule::Bool _1b6d578d8_is_i32_compatible(jule::Str _2030_k) {
	_2030_k=_1b6d438d5_real_kind_of(_2030_k);
	return ((((_2030_k == jule::Str("i8", 2)) || (_2030_k == jule::Str("i16", 3))) || (_2030_k == jule::Str("i32", 3))) || (_2030_k == jule::Str("u8", 2))) || (_2030_k == jule::Str("u16", 3));
}



inline jule::Bool _1b6d578d8_is_i64_compatible(jule::Str _3030_k) {
	_3030_k=_1b6d438d5_real_kind_of(_3030_k);
	return ((((((_3030_k == jule::Str("i8", 2)) || (_3030_k == jule::Str("i16", 3))) || (_3030_k == jule::Str("i32", 3))) || (_3030_k == jule::Str("i64", 3))) || (_3030_k == jule::Str("u8", 2))) || (_3030_k == jule::Str("u16", 3))) || (_3030_k == jule::Str("u32", 3));
}



inline jule::Bool _1b6d578d8_is_u8_compatible(jule::Str _4229_k) {
	_4229_k=_1b6d438d5_real_kind_of(_4229_k);
	return _4229_k == jule::Str("u8", 2);
}



inline jule::Bool _1b6d578d8_is_u16_compatible(jule::Str _4830_k) {
	_4830_k=_1b6d438d5_real_kind_of(_4830_k);
	return (_4830_k == jule::Str("u8", 2)) || (_4830_k == jule::Str("u16", 3));
}



inline jule::Bool _1b6d578d8_is_u32_compatible(jule::Str _5430_k) {
	_5430_k=_1b6d438d5_real_kind_of(_5430_k);
	return ((_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3))) || (_5430_k == jule::Str("u32", 3));
}



inline jule::Bool _1b6d578d8_is_u64_compatible(jule::Str _6230_k) {
	_6230_k=_1b6d438d5_real_kind_of(_6230_k);
	return (((_6230_k == jule::Str("u8", 2)) || (_6230_k == jule::Str("u16", 3))) || (_6230_k == jule::Str("u32", 3))) || (_6230_k == jule::Str("u64", 3));
}



inline jule::Bool _1b6d578d8_is_f32_compatible(jule::Str _7130_k) {
	_7130_k=_1b6d438d5_real_kind_of(_7130_k);
	return _7130_k == jule::Str("f32", 3);
}



inline jule::Bool _1b6d578d8_is_f64_compatible(jule::Str _7730_k) {
	_7730_k=_1b6d438d5_real_kind_of(_7730_k);
	return (_7730_k == jule::Str("f64", 3)) || (_7730_k == jule::Str("f32", 3));
}



inline jule::Bool _1b6d578d8_types_are_compatible(jule::Str _8633_k1,jule::Str _8642_k2) {
	_8633_k1=_1b6d438d5_real_kind_of(_8633_k1);
	{
		auto _match_expr{ _8633_k1 };
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4537066208; }
		_case_begin_4537066208:;
		{
			return true;
		}
		goto _match_end_4537064464;
		_case_end_4537066208:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4537067072; }
		_case_begin_4537067072:;
		{
			return _1b6d578d8_is_i8_compatible(_8642_k2);
		}
		goto _match_end_4537064464;
		_case_end_4537067072:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4537067168; }
		_case_begin_4537067168:;
		{
			return _1b6d578d8_is_i16_compatible(_8642_k2);
		}
		goto _match_end_4537064464;
		_case_end_4537067168:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4537067264; }
		_case_begin_4537067264:;
		{
			return _1b6d578d8_is_i32_compatible(_8642_k2);
		}
		goto _match_end_4537064464;
		_case_end_4537067264:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4537067360; }
		_case_begin_4537067360:;
		{
			return _1b6d578d8_is_i64_compatible(_8642_k2);
		}
		goto _match_end_4537064464;
		_case_end_4537067360:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4537066480; }
		_case_begin_4537066480:;
		{
			return _1b6d578d8_is_u8_compatible(_8642_k2);
		}
		goto _match_end_4537064464;
		_case_end_4537066480:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4537066576; }
		_case_begin_4537066576:;
		{
			return _1b6d578d8_is_u16_compatible(_8642_k2);
		}
		goto _match_end_4537064464;
		_case_end_4537066576:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4537066672; }
		_case_begin_4537066672:;
		{
			return _1b6d578d8_is_u32_compatible(_8642_k2);
		}
		goto _match_end_4537064464;
		_case_end_4537066672:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4537066784; }
		_case_begin_4537066784:;
		{
			return _1b6d578d8_is_u64_compatible(_8642_k2);
		}
		goto _match_end_4537064464;
		_case_end_4537066784:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4537066896; }
		_case_begin_4537066896:;
		{
			return _1b6d578d8_is_f32_compatible(_8642_k2);
		}
		goto _match_end_4537064464;
		_case_end_4537066896:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4537067456; }
		_case_begin_4537067456:;
		{
			return _1b6d578d8_is_f64_compatible(_8642_k2);
		}
		goto _match_end_4537064464;
		_case_end_4537067456:;
		if (!((jule::Str("bool", 4)) == _match_expr)) { goto _case_end_4537067568; }
		_case_begin_4537067568:;
		{
			return _8642_k2 == jule::Str("bool", 4);
		}
		goto _match_end_4537064464;
		_case_end_4537067568:;
		if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4537067680; }
		_case_begin_4537067680:;
		{
			return _8642_k2 == jule::Str("str", 3);
		}
		goto _match_end_4537064464;
		_case_end_4537067680:;
		_case_begin_4537064368:;
		{
			return false;
		}
		goto _match_end_4537064464;
		_case_end_4537064368:;
		_match_end_4537064464:;
	}
}



inline jule::Bool _1b6d578d8_is_i16_greater(jule::Str _10727_k) {
	_10727_k=_1b6d438d5_real_kind_of(_10727_k);
	return _10727_k == jule::Str("u8", 2);
}



inline jule::Bool _1b6d578d8_is_i32_greater(jule::Str _11327_k) {
	_11327_k=_1b6d438d5_real_kind_of(_11327_k);
	return (_11327_k == jule::Str("i8", 2)) || (_11327_k == jule::Str("i16", 3));
}



inline jule::Bool _1b6d578d8_is_i64_greater(jule::Str _11927_k) {
	_11927_k=_1b6d438d5_real_kind_of(_11927_k);
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



inline jule::Bool _1b6d578d8_is_u8_greater(jule::Str _12726_k) {
	_12726_k=_1b6d438d5_real_kind_of(_12726_k);
	return _12726_k == jule::Str("i8", 2);
}



inline jule::Bool _1b6d578d8_is_u16_greater(jule::Str _13327_k) {
	_13327_k=_1b6d438d5_real_kind_of(_13327_k);
	return ((_13327_k == jule::Str("u8", 2)) || (_13327_k == jule::Str("i8", 2))) || (_13327_k == jule::Str("i16", 3));
}



inline jule::Bool _1b6d578d8_is_u32_greater(jule::Str _14127_k) {
	_14127_k=_1b6d438d5_real_kind_of(_14127_k);
	return ((((_14127_k == jule::Str("u8", 2)) || (_14127_k == jule::Str("u16", 3))) || (_14127_k == jule::Str("i8", 2))) || (_14127_k == jule::Str("i16", 3))) || (_14127_k == jule::Str("i32", 3));
}



inline jule::Bool _1b6d578d8_is_u64_greater(jule::Str _15127_k) {
	_15127_k=_1b6d438d5_real_kind_of(_15127_k);
	return ((((((_15127_k == jule::Str("u8", 2)) || (_15127_k == jule::Str("u16", 3))) || (_15127_k == jule::Str("u32", 3))) || (_15127_k == jule::Str("i8", 2))) || (_15127_k == jule::Str("i16", 3))) || (_15127_k == jule::Str("i32", 3))) || (_15127_k == jule::Str("i64", 3));
}



inline jule::Bool _1b6d578d8_is_f32_greater(jule::Str _16323_k) {
	return _16323_k != jule::Str("f64", 3);
}



inline jule::Bool _1b6d578d8_is_f64_greater(jule::Str _16523_k) {
	return true;
}



inline jule::Bool _1b6d578d8_is_greater(jule::Str _16823_k1,jule::Str _16832_k2) {
	_16823_k1=_1b6d438d5_real_kind_of(_16823_k1);
	{
		auto _match_expr{ _16823_k1 };
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4537093168; }
		_case_begin_4537093168:;
		{
			return _1b6d578d8_is_i16_greater(_16832_k2);
		}
		goto _match_end_4537092640;
		_case_end_4537093168:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4537093264; }
		_case_begin_4537093264:;
		{
			return _1b6d578d8_is_i32_greater(_16832_k2);
		}
		goto _match_end_4537092640;
		_case_end_4537093264:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4537094064; }
		_case_begin_4537094064:;
		{
			return _1b6d578d8_is_i64_greater(_16832_k2);
		}
		goto _match_end_4537092640;
		_case_end_4537094064:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4537094160; }
		_case_begin_4537094160:;
		{
			return _1b6d578d8_is_u16_greater(_16832_k2);
		}
		goto _match_end_4537092640;
		_case_end_4537094160:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4537094256; }
		_case_begin_4537094256:;
		{
			return _1b6d578d8_is_u8_greater(_16832_k2);
		}
		goto _match_end_4537092640;
		_case_end_4537094256:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4537093472; }
		_case_begin_4537093472:;
		{
			return _1b6d578d8_is_u32_greater(_16832_k2);
		}
		goto _match_end_4537092640;
		_case_end_4537093472:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4537093568; }
		_case_begin_4537093568:;
		{
			return _1b6d578d8_is_u64_greater(_16832_k2);
		}
		goto _match_end_4537092640;
		_case_end_4537093568:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4537093664; }
		_case_begin_4537093664:;
		{
			return _1b6d578d8_is_f32_greater(_16832_k2);
		}
		goto _match_end_4537092640;
		_case_end_4537093664:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4537093760; }
		_case_begin_4537093760:;
		{
			return _1b6d578d8_is_f64_greater(_16832_k2);
		}
		goto _match_end_4537092640;
		_case_end_4537093760:;
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4537093856; }
		_case_begin_4537093856:;
		{
			return true;
		}
		goto _match_end_4537092640;
		_case_end_4537093856:;
		_case_begin_4537091472:;
		{
			return false;
		}
		goto _match_end_4537092640;
		_case_end_4537091472:;
		_match_end_4537092640:;
	}
}



inline jule::Bool _1b6e2b4c3_is_sig_int(jule::Str _2723_k) {
	_2723_k=_1b6d438d5_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



inline jule::Bool _1b6e2b4c3_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_1b6d438d5_real_kind_of(_3825_k);
	return (((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3));
}



inline jule::Bool _1b6e2b4c3_is_int(jule::Str _4915_k) {
	return _1b6e2b4c3_is_sig_int(_4915_k) || _1b6e2b4c3_is_unsig_int(_4915_k);
}



inline jule::Bool _1b6e2b4c3_is_float(jule::Str _5417_k) {
	return (_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3));
}



inline jule::Bool _1b6e2b4c3_is_num(jule::Str _5915_k) {
	return _1b6e2b4c3_is_int(_5915_k) || _1b6e2b4c3_is_float(_5915_k);
}



inline jule::Bool _1b6e2b4c3_is_sig_num(jule::Str _6419_k) {
	return _1b6e2b4c3_is_sig_int(_6419_k) || _1b6e2b4c3_is_float(_6419_k);
}



inline jule::Bool _1b6e98d37_is_ascii(jule::I32 _1017_r) {
	
	return _1017_r <= 127LLU;
}



inline jule::I32 _1b6e98d37_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if (_1816_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _2313_r = 0LL;
	if ((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL)) {
		jule::Int _2517_i = 0LL;
		_2313_r=static_cast<jule::I32>(_1b6e98d37_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1ce629071_decode_rune(_1816_bytes);
	}
	return _2313_r;
}



inline jule::Str _1b6e98d37_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1b6e98d37_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if (_4215_bytes.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_4215_bytes.len())));
	jule::Int _4813_i = 0LL;
	while (_4813_i < _4215_bytes.len()) {
		{
			jule::U8 _5013_b = _4215_bytes[static_cast<jule::Int>(_4813_i)];
			if (_5013_b == '\\') {
				_4713_s=jule::append(_4713_s,_1b6e98d37_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;
				jule::Int _5421_size;
				std::tie(_5418_r,_5421_size) = _1ce629071_decode_rune(_4215_bytes.slice(static_cast<jule::Int>(_4813_i)));
				_4813_i+=_5421_size;
				_4713_s=_1ce629071_append_rune(_4713_s,_5418_r);
			}
		}
	_iter_next_4537130608:;
	}
	_iter_end_4537130608:;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1b6e98d37_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if ((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\')) {
		return std::make_tuple(_6241_seq,_6252_ok);
	}
	{
		auto _match_expr{ _6224_bytes[1LL] };
		if (!(('\\') == _match_expr)) { goto _case_end_4537142832; }
		_case_begin_4537142832:;
		{
			_6241_seq='\\';
		}
		goto _match_end_4537144000;
		_case_end_4537142832:;
		if (!(('\'') == _match_expr)) { goto _case_end_4537144704; }
		_case_begin_4537144704:;
		{
			_6241_seq='\'';
		}
		goto _match_end_4537144000;
		_case_end_4537144704:;
		if (!(('\"') == _match_expr)) { goto _case_end_4537144800; }
		_case_begin_4537144800:;
		{
			_6241_seq='\"';
		}
		goto _match_end_4537144000;
		_case_end_4537144800:;
		if (!(('a') == _match_expr)) { goto _case_end_4537144896; }
		_case_begin_4537144896:;
		{
			_6241_seq='\a';
		}
		goto _match_end_4537144000;
		_case_end_4537144896:;
		if (!(('b') == _match_expr)) { goto _case_end_4537145008; }
		_case_begin_4537145008:;
		{
			_6241_seq='\b';
		}
		goto _match_end_4537144000;
		_case_end_4537145008:;
		if (!(('f') == _match_expr)) { goto _case_end_4537145120; }
		_case_begin_4537145120:;
		{
			_6241_seq='\f';
		}
		goto _match_end_4537144000;
		_case_end_4537145120:;
		if (!(('n') == _match_expr)) { goto _case_end_4537145232; }
		_case_begin_4537145232:;
		{
			_6241_seq='\n';
		}
		goto _match_end_4537144000;
		_case_end_4537145232:;
		if (!(('r') == _match_expr)) { goto _case_end_4537145344; }
		_case_begin_4537145344:;
		{
			_6241_seq='\r';
		}
		goto _match_end_4537144000;
		_case_end_4537145344:;
		if (!(('t') == _match_expr)) { goto _case_end_4537145456; }
		_case_begin_4537145456:;
		{
			_6241_seq='\t';
		}
		goto _match_end_4537144000;
		_case_end_4537145456:;
		if (!(('v') == _match_expr)) { goto _case_end_4537145568; }
		_case_begin_4537145568:;
		{
			_6241_seq='\v';
		}
		goto _match_end_4537144000;
		_case_end_4537145568:;
		_match_end_4537144000:;
	}
	_6252_ok=_6241_seq != 0LL;
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1b6e98d37_rune_from_esq_seq(jule::Slice<jule::U8> _8422_bytes,jule::Int& _8442_i) {
	jule::U8 _8510_b;
	jule::Bool _8513_ok;
	std::tie(_8510_b,_8513_ok) = _1b6e98d37_try_btoa_common_esq(_8422_bytes.slice(static_cast<jule::Int>(_8442_i)));
	(_8442_i)++;
	if (_8513_ok) {
		(_8442_i)++;
		return static_cast<jule::I32>(_8510_b);
	}
	{
		auto _match_expr{ _8422_bytes[static_cast<jule::Int>(_8442_i)] };
		if (!(('u') == _match_expr)) { goto _case_end_4537160512; }
		_case_begin_4537160512:;
		{
			
			jule::U64 _9514_rc;
			std::tie(_9514_rc,std::ignore) = _1e7717cd4_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(static_cast<jule::Int>(_8442_i + 1LL),static_cast<jule::Int>(_8442_i + 5LL))),16LL,64LL);
			_8442_i+=5LL;
			jule::I32 _9713_r = static_cast<jule::I32>(_9514_rc);
			return _9713_r;
		}
		goto _match_end_4537154448;
		_case_end_4537160512:;
		if (!(('U') == _match_expr)) { goto _case_end_4537160992; }
		_case_begin_4537160992:;
		{
			
			jule::U64 _10214_rc;
			std::tie(_10214_rc,std::ignore) = _1e7717cd4_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(static_cast<jule::Int>(_8442_i + 1LL),static_cast<jule::Int>(_8442_i + 9LL))),16LL,64LL);
			_8442_i+=9LL;
			jule::I32 _10413_r = static_cast<jule::I32>(_10214_rc);
			return _10413_r;
		}
		goto _match_end_4537154448;
		_case_end_4537160992:;
		if (!(('x') == _match_expr)) { goto _case_end_4537161088; }
		_case_begin_4537161088:;
		{
			
			jule::Slice<jule::U8> _10913_seq = _8422_bytes.slice(static_cast<jule::Int>(_8442_i + 1LL),static_cast<jule::Int>(_8442_i + 3LL));
			_8442_i+=3LL;
			jule::U64 _11114_b;
			std::tie(_11114_b,std::ignore) = _1e7717cd4_parse_uint(static_cast<jule::Str>(_10913_seq),16LL,64LL);
			return static_cast<jule::I32>(_11114_b);
		}
		goto _match_end_4537154448;
		_case_end_4537161088:;
		_case_begin_4537154032:;
		{
			
			jule::Slice<jule::U8> _11613_seq = _8422_bytes.slice(static_cast<jule::Int>(_8442_i),static_cast<jule::Int>(_8442_i + 3LL));
			_8442_i+=3LL;
			jule::U64 _11814_b;
			std::tie(_11814_b,std::ignore) = _1e7717cd4_parse_uint(static_cast<jule::Str>(_11613_seq.slice(1LL)),8LL,64LL);
			return static_cast<jule::I32>(_11814_b);
		}
		goto _match_end_4537154448;
		_case_end_4537154032:;
		_match_end_4537154448:;
	}
}



inline jule::Slice<jule::U8> _1b6e98d37_str_esq_seq(jule::Slice<jule::U8> _12316_bytes,jule::Int& _12336_i) {
	jule::I32 _1249_r = _1b6e98d37_rune_from_esq_seq(_12316_bytes,_12336_i);
	if (_1249_r <= 255LL) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(_1249_r)});
	}
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1249_r));
}



inline jule::Bool _1b6069348_kind_uses_generics(jule::Ref<_1b6703d45_TypeKind> _38823_k,jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>& _38838_generics) {
	jule::Str _3899_pk = _38823_k->_method_to_str();
	for (auto _1b6069348_g: _38838_generics) {
		{
			if (_3899_pk.find(_1b6069348_g->_field_ident) != -1LL) {
				return true;
			}
		}
	_iter_next_4537995696:;
	}
	_iter_end_4537995696:;
	return false;
}



inline jule::Bool _1b6069348_parameter_uses_generics(jule::Ref<_1b6069348_Param>& _39829_p,jule::Slice<jule::Ref<_1ce385d22_GenericDecl>>& _39841_generics) {
	if (_39829_p->_method_is_self()) {
		return false;
	}
	return _1b6069348_kind_uses_generics(_39829_p->_field_kind->_field_kind,_39841_generics);
}



inline jule::Str _1ce50a46e_str_repeat(jule::Str _8715_sub,jule::Int _8729_n) {
	if (_8729_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _9213_s = jule::Str("", 0);
	for (; _8729_n > 0LL; (_8729_n)--) {
		{
			_9213_s+=_8715_sub;
		}
	_iter_next_4538004864:;
	}
	_iter_end_4538004864:;
	return _9213_s;
}



inline jule::Str _1ce50a46e_build_doc(jule::Ref<_1ce385d22_CommentGroup> _9918_cg) {
	if ((!(jule::real(_9918_cg)))) {
		return jule::Str("", 0);
	}
	jule::Str _10413_doc = jule::Str("", 0);
	for (auto _1ce50a46e_c: _9918_cg->_field_comments) {
		{
			_10413_doc+=_1ce50a46e_c->_field_text;
			_10413_doc+=jule::Str(" ", 1);
		}
	_iter_next_4538007872:;
	}
	_iter_end_4538007872:;
	return _10413_doc;
}



inline jule::Ref<_1b6703d45_TypeSymbol> _1ce50a46e_build_type(jule::Ref<_1ce385d22_TypeDecl> _11219_t) {
	if ((!(jule::real(_11219_t)))) {
		return jule::new_ref<_1b6703d45_TypeSymbol>();
	}
	return jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(_11219_t,jule::Ref<_1b6703d45_TypeKind>()));
}



inline jule::Ref<_1b66db129_Value> _1ce50a46e_build_expr(jule::Ref<_1ce385d22_Expr> _12119_expr) {
	if ((!(jule::real(_12119_expr)))) {
		return jule::new_ref<_1b66db129_Value>();
	}
	return jule::new_struct<_1b66db129_Value>(new( std::nothrow ) _1b66db129_Value(_12119_expr,jule::Ref<_1b66db129_Data>()));
}



inline jule::Ref<_1b6703d45_TypeAlias> _1ce50a46e_build_type_alias(jule::Ref<_1ce385d22_TypeAliasDecl> _13125_decl) {
	return jule::new_struct<_1b6703d45_TypeAlias>(new( std::nothrow ) _1b6703d45_TypeAlias(_13125_decl->_field_scope,_13125_decl->_field_public,_13125_decl->_field_cpp_linked,jule::Bool(),jule::Bool(),_13125_decl->_field_token,_13125_decl->_field_ident,_1ce50a46e_build_type(_13125_decl->_field_kind),_1ce50a46e_build_doc(_13125_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



inline jule::Ref<_1ce385eed_Field> _1ce50a46e_build_field(jule::Ref<_1ce385d22_FieldDecl> _14320_decl) {
	return jule::new_struct_ref<_1ce385eed_Field>(new( std::nothrow ) _1ce385eed_Field(jule::Ref<_1ce385eed_Struct>(),_14320_decl->_field_token,_14320_decl->_field_public,_14320_decl->_field_mutable,_14320_decl->_field_ident,_1ce50a46e_build_type(_14320_decl->_field_kind)));
}



inline jule::Slice<jule::Ref<_1ce385eed_Field>> _1ce50a46e_build_fields(jule::Slice<jule::Ref<_1ce385d22_FieldDecl>>& _15322_decls) {
	jule::Slice<jule::Ref<_1ce385eed_Field>> _15413_fields = jule::Slice<jule::Ref<_1ce385eed_Field>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_15322_decls.len())));
	{
		jule::Int _1ce50a46e_i = 0;
		for (auto _1ce50a46e_decl: _15322_decls) {
			{
				_15413_fields[static_cast<jule::Int>(_1ce50a46e_i)]=_1ce50a46e_build_field(_1ce50a46e_decl);
			}
		_iter_next_4538022064:;
		_1ce50a46e_i++;
		}
		_iter_end_4538022064:;
	}
	return _15413_fields;
}



inline jule::Ref<_1ce385eed_Struct> _1ce50a46e_build_struct(jule::Ref<_1ce385d22_StructDecl> _16121_decl) {
	return jule::new_struct_ref<_1ce385eed_Struct>(new( std::nothrow ) _1ce385eed_Struct(jule::Ref<_1b622b76e_Sema>(),jule::Slice<jule::Ref<_1ce385eed_Struct>>(),jule::Slice<jule::Ref<_1ce385eed_Struct>>(),_16121_decl->_field_token,_16121_decl->_field_ident,_1ce50a46e_build_fields(_16121_decl->_field_fields),jule::Slice<jule::Ref<_1b6069348_Fn>>(),jule::Slice<jule::Ref<_1b637edab_Var>>(),_16121_decl->_field_public,_16121_decl->_field_cpp_linked,_16121_decl->_field_directives,_1ce50a46e_build_doc(_16121_decl->_field_doc_comments),_16121_decl->_field_generics,jule::Slice<jule::Ref<_1b61d7d79_Trait>>(),jule::Slice<jule::Ref<_1ce385eed_StructIns>>()));
}



inline jule::Ref<_1b6069348_Param> _1ce50a46e_build_param(jule::Ref<_1ce385d22_ParamDecl> _17420_decl) {
	return jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_17420_decl->_field_token,_17420_decl->_field_mutable,_17420_decl->_field_variadic,_17420_decl->_field_reference,_1ce50a46e_build_type(_17420_decl->_field_kind),_17420_decl->_field_ident));
}



inline jule::Slice<jule::Ref<_1b6069348_Param>> _1ce50a46e_build_params(jule::Slice<jule::Ref<_1ce385d22_ParamDecl>>& _18522_decls) {
	jule::Slice<jule::Ref<_1b6069348_Param>> _18613_params = jule::Slice<jule::Ref<_1b6069348_Param>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_18522_decls.len())));
	{
		jule::Int _1ce50a46e_i = 0;
		for (auto _1ce50a46e_decl: _18522_decls) {
			{
				_18613_params[static_cast<jule::Int>(_1ce50a46e_i)]=_1ce50a46e_build_param(_1ce50a46e_decl);
			}
		_iter_next_4538033952:;
		_1ce50a46e_i++;
		}
		_iter_end_4538033952:;
	}
	return _18613_params;
}



inline jule::Ref<_1b6069348_RetType> _1ce50a46e_build_ret_type(jule::Ref<_1ce385d22_RetTypeDecl> _19323_decl) {
	if ((_19323_decl->_field_idents == nullptr) && (!(jule::real(_19323_decl->_field_kind)))) {
		return jule::new_ref<_1b6069348_RetType>();
	}
	return jule::new_struct<_1b6069348_RetType>(new( std::nothrow ) _1b6069348_RetType(_1ce50a46e_build_type(_19323_decl->_field_kind),_19323_decl->_field_idents));
}



inline jule::Ref<_1b6069348_Fn> _1ce50a46e_build_fn(jule::Ref<_1ce385d22_FnDecl> _20317_decl) {
	return jule::new_struct_ref<_1b6069348_Fn>(new( std::nothrow ) _1b6069348_Fn(jule::Ref<_1b622b76e_Sema>(),_20317_decl->_field_token,_20317_decl->_field_global,_20317_decl->_field_unsafety,_20317_decl->_field_public,_20317_decl->_field_cpp_linked,_20317_decl->_field_statically,_20317_decl->_field_ident,_20317_decl->_field_directives,_1ce50a46e_build_doc(_20317_decl->_field_doc_comments),_20317_decl->_field_scope,_20317_decl->_field_generics,_1ce50a46e_build_ret_type(_20317_decl->_field_result),_1ce50a46e_build_params(_20317_decl->_field_params),jule::Ref<_1ce385eed_Struct>(),jule::Slice<jule::Ref<_1b6069348_FnIns>>()));
}



inline jule::Slice<jule::Ref<_1b6069348_Fn>> _1ce50a46e_build_methods(jule::Slice<jule::Ref<_1ce385d22_FnDecl>>& _22123_decls) {
	jule::Slice<jule::Ref<_1b6069348_Fn>> _22213_methods = jule::Slice<jule::Ref<_1b6069348_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_22123_decls.len())));
	{
		jule::Int _1ce50a46e_i = 0;
		for (auto _1ce50a46e_decl: _22123_decls) {
			{
				_22213_methods[static_cast<jule::Int>(_1ce50a46e_i)]=_1ce50a46e_build_fn(_1ce50a46e_decl);
			}
		_iter_next_4538047648:;
		_1ce50a46e_i++;
		}
		_iter_end_4538047648:;
	}
	return _22213_methods;
}



inline jule::Ref<_1b61d7d79_Trait> _1ce50a46e_build_trait(jule::Ref<_1ce385d22_TraitDecl> _22920_decl) {
	return jule::new_struct<_1b61d7d79_Trait>(new( std::nothrow ) _1b61d7d79_Trait(_22920_decl->_field_token,_22920_decl->_field_ident,_22920_decl->_field_public,jule::Bool(),_1ce50a46e_build_doc(_22920_decl->_field_doc_comments),_1ce50a46e_build_methods(_22920_decl->_field_methods),jule::Slice<jule::Ref<_1ce385eed_Struct>>()));
}



inline jule::Ref<_1b61d7c58_EnumItem> _1ce50a46e_build_enum_item(jule::Ref<_1ce385d22_EnumItemDecl> _23924_decl) {
	return jule::new_struct<_1b61d7c58_EnumItem>(new( std::nothrow ) _1b61d7c58_EnumItem(_23924_decl->_field_token,_23924_decl->_field_ident,_1ce50a46e_build_expr(_23924_decl->_field_expr)));
}



inline jule::Slice<jule::Ref<_1b61d7c58_EnumItem>> _1ce50a46e_build_enum_items(jule::Slice<jule::Ref<_1ce385d22_EnumItemDecl>>& _24726_decls) {
	jule::Slice<jule::Ref<_1b61d7c58_EnumItem>> _24813_items = jule::Slice<jule::Ref<_1b61d7c58_EnumItem>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_24726_decls.len())));
	{
		jule::Int _1ce50a46e_i = 0;
		for (auto _1ce50a46e_decl: _24726_decls) {
			{
				_24813_items[static_cast<jule::Int>(_1ce50a46e_i)]=_1ce50a46e_build_enum_item(_1ce50a46e_decl);
			}
		_iter_next_4538057904:;
		_1ce50a46e_i++;
		}
		_iter_end_4538057904:;
	}
	return _24813_items;
}



inline jule::Ref<_1b61d7c58_Enum> _1ce50a46e_build_enum(jule::Ref<_1ce385d22_EnumDecl> _25519_decl) {
	return jule::new_struct<_1b61d7c58_Enum>(new( std::nothrow ) _1b61d7c58_Enum(_25519_decl->_field_token,_25519_decl->_field_public,_25519_decl->_field_ident,_1ce50a46e_build_type(_25519_decl->_field_kind),_1ce50a46e_build_enum_items(_25519_decl->_field_items),_1ce50a46e_build_doc(_25519_decl->_field_doc_comments)));
}



inline jule::Ref<_1b637edab_Var> _1ce50a46e_build_var(jule::Ref<_1ce385d22_VarDecl> _26618_decl) {
	return jule::new_struct<_1b637edab_Var>(new( std::nothrow ) _1b637edab_Var(jule::Ref<_1b61e873b_Scope>(),_26618_decl->_field_token,_26618_decl->_field_ident,_26618_decl->_field_cpp_linked,_26618_decl->_field_constant,_26618_decl->_field_mutable,_26618_decl->_field_public,jule::Bool(),_26618_decl->_field_statically,_26618_decl->_field_reference,_1ce50a46e_build_doc(_26618_decl->_field_doc_comments),_1ce50a46e_build_type(_26618_decl->_field_kind),_1ce50a46e_build_expr(_26618_decl->_field_expr),_1ce50a46e_ReferenceStack::_static_method_new(),_26618_decl->_field_directives,jule::Slice<jule::Ref<_1b637edab_Var>>()));
}



inline jule::Slice<jule::Ref<_1b637edab_Var>> _1ce50a46e_build_vars(jule::Slice<jule::Ref<_1ce385d22_VarDecl>> _28419_decls) {
	jule::Slice<jule::Ref<_1b637edab_Var>> _28513_vars = jule::Slice<jule::Ref<_1b637edab_Var>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_28419_decls.len())));
	for (auto _1ce50a46e_decl: _28419_decls) {
		{
			_28513_vars=jule::append(_28513_vars,jule::Slice<jule::Ref<_1b637edab_Var>>({_1ce50a46e_build_var(_1ce50a46e_decl)}));
		}
	_iter_next_4538071648:;
	}
	_iter_end_4538071648:;
	return _28513_vars;
}



inline jule::Ref<_1b61ddc92_Impl> _1ce50a46e_build_impl(jule::Ref<_1ce385d22_Impl> _29219_decl) {
	return jule::new_struct<_1b61ddc92_Impl>(new( std::nothrow ) _1b61ddc92_Impl(_29219_decl->_field_base,_29219_decl->_field_dest,_1ce50a46e_build_methods(_29219_decl->_field_methods),_1ce50a46e_build_vars(_29219_decl->_field_statics)));
}



inline jule::Ref<_1b61e873b_ScopeChecker> _1b61e873b_new_scope_checker_base(jule::Ref<_1b622b76e_Sema> _3831_s,jule::Ref<_1b6069348_FnIns> _3845_owner) {
	return jule::new_struct_ref<_1b61e873b_ScopeChecker>(new( std::nothrow ) _1b61e873b_ScopeChecker(_3831_s,_3845_owner,jule::Ref<_1b61e873b_ScopeChecker>(),jule::Int(),jule::new_struct<_1b66b3a3b_SymbolTable>(new( std::nothrow ) _1b66b3a3b_SymbolTable()),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce385d22_ScopeTree>(),jule::Uintptr(),jule::Uintptr(),jule::Ref<jule::Slice<jule::Ref<_1b61e873b_ScopeLabel>>>(),jule::Ref<jule::Slice<jule::Ref<_1b61e873b_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ref<_1b61e873b_ScopeChecker> _1b61e873b_new_scope_checker(jule::Ref<_1b622b76e_Sema> _4626_s,jule::Ref<_1b6069348_FnIns> _4640_owner) {
	jule::Ref<_1b61e873b_ScopeChecker> _4713_base = _1b61e873b_new_scope_checker_base(_4626_s,_4640_owner);
	_4713_base->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_1b61e873b_ScopeLabel>>>(nullptr);
	_4713_base->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_1b61e873b_ScopeGoto>>>(nullptr);
	return _4713_base;
}



inline jule::Ref<_1b61e873b_ScopeLabel> _1b61e873b_find_label_parent(jule::Str _5622_ident,jule::Ref<_1b61e873b_ScopeChecker> _5638_scope) {
	jule::Ref<_1b61e873b_ScopeLabel> _5713_label = _5638_scope->_method_find_label_scope(_5622_ident);
	while ((!(jule::real(_5713_label)))) {
		{
			if ((!(jule::real(_5638_scope->_field_parent))) || jule::real(_5638_scope->_field_owner)) {
				return jule::new_ref<_1b61e873b_ScopeLabel>();
			}
			_5638_scope=_5638_scope->_field_parent;
			_5713_label=_5638_scope->_method_find_label_scope(_5622_ident);
		}
	_iter_next_4538083184:;
	}
	_iter_end_4538083184:;
	return _5713_label;
}



inline jule::Int _1b61e873b_count_match_type(jule::Ref<_1b61e873b_Match> _7021_m,jule::Ref<_1b6703d45_TypeKind> _7032_t) {
	jule::Int _7113_n = 0LL;
	jule::Str _729_kind = _7032_t->_method_to_str();
	_julec_label_loop:;
	for (auto _1b61e873b_c: _7021_m->_field_cases) {
		{
			if ((!(jule::real(_1b61e873b_c)))) {
				goto _iter_next_4538092688;
			}
			for (auto _1b61e873b_expr: _1b61e873b_c->_field_exprs) {
				{
					if (_1b61e873b_expr == nullptr) {
						goto _iter_end_4538092688;
					}
					if (_729_kind == _1b61e873b_expr.operator jule::Ref<_1b6703d45_TypeKind>()->_method_to_str()) {
						(_7113_n)++;
					}
				}
			_iter_next_4538095008:;
			}
			_iter_end_4538095008:;
		}
	_iter_next_4538092688:;
	}
	_iter_end_4538092688:;
	return _7113_n;
}



inline jule::Slice<jule::Ref<_1b66db129_Data>> _1b61e873b_get_datas_from_tuple_data(jule::Ref<_1b66db129_Data> _9434_d) {
	if (jule::real(_9434_d->_field_kind->_method_tup())) {
		{
			auto _match_expr{ _9434_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1b61decc6_TupleExprModel>>())) { goto _case_end_4538109552; }
			_case_begin_4538109552:;
			{
				return _9434_d->_field_model.operator jule::Ref<_1b61decc6_TupleExprModel>()->_field_datas;
			}
			goto _match_end_4538100416;
			_case_end_4538109552:;
			_case_begin_4538099872:;
			{
				jule::Ref<_1b6703d45_Tuple> _10121_t = _9434_d->_field_kind->_method_tup();
				jule::Slice<jule::Ref<_1b66db129_Data>> _10221_r = jule::Slice<jule::Ref<_1b66db129_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_10121_t->_field_types.len())));
				{
					jule::Int _1b61e873b_i = 0;
					for (auto _1b61e873b_kind: _10121_t->_field_types) {
						{
							_10221_r[static_cast<jule::Int>(_1b61e873b_i)]=jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(_1b61e873b_kind,jule::Ref<_1b6703d45_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
						}
					_iter_next_4538105792:;
					_1b61e873b_i++;
					}
					_iter_end_4538105792:;
				}
				return _10221_r;
			}
			goto _match_end_4538100416;
			_case_end_4538099872:;
			_match_end_4538100416:;
		}
	} else {
		return jule::Slice<jule::Ref<_1b66db129_Data>>({_9434_d});
	}
}



inline jule::Slice<jule::Any> _1b61e873b_get_expr_models(jule::Any _11624_m) {
	{
		auto _match_expr{ _11624_m };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_TupleExpr>>())) { goto _case_end_4538112832; }
		_case_begin_4538112832:;
		{
			jule::Ref<_1ce385d22_TupleExpr> _11917_tup = _11624_m.operator jule::Ref<_1ce385d22_TupleExpr>();
			jule::Slice<jule::Any> _12017_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_11917_tup->_field_expr.len())));
			for (auto _1b61e873b_expr: _11917_tup->_field_expr) {
				{
					_12017_models=jule::append(_12017_models,jule::Slice<jule::Any>({_1b61e873b_expr->_field_kind}));
				}
			_iter_next_4538116704:;
			}
			_iter_end_4538116704:;
			return _12017_models;
		}
		goto _match_end_4538099328;
		_case_end_4538112832:;
		_case_begin_4538099168:;
		{
			return jule::Slice<jule::Any>({_11624_m});
		}
		goto _match_end_4538099328;
		_case_end_4538099168:;
		_match_end_4538099328:;
	}
}



inline jule::Bool _1b61e873b_check_mut(jule::Ref<_1b622b76e_Sema> _13118_s,jule::Ref<_1b66db129_Data> _13128_left,jule::Ref<_1b66db129_Data> _13145_right,_1ce35e3a0_Token _13159_error_token) {
	jule::Bool _13181_ok = jule::Bool();
	{
		if (!(((!(_13128_left->_field_mutable))))) { goto _case_end_4538122464; }
		_case_begin_4538122464:;
		{
			_13118_s->_method_push_err(_13159_error_token,jule::Str("cannot assign to immutable define", 33),jule::Slice<jule::Any>({}));
			_13181_ok = false;
			return _13181_ok;
		}
		goto _match_end_4538120864;
		_case_end_4538122464:;
		if (!(((jule::real(_13145_right) && (!(_13145_right->_field_mutable))) && _13145_right->_field_kind->_method_mutable()))) { goto _case_end_4538122016; }
		_case_begin_4538122016:;
		{
			_13118_s->_method_push_err(_13159_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
			_13181_ok = false;
			return _13181_ok;
		}
		goto _match_end_4538120864;
		_case_end_4538122016:;
		_case_begin_4538121040:;
		{
			_13181_ok = true;
			return _13181_ok;
		}
		goto _match_end_4538120864;
		_case_end_4538121040:;
		_match_end_4538120864:;
	}
}



inline jule::Bool _1b61e873b_check_assign(jule::Ref<_1b622b76e_Sema> _14621_s,jule::Ref<_1b66db129_Data> _14635_left,jule::Ref<_1b66db129_Data> _14652_right,_1ce35e3a0_Token _14666_error_token) {
	jule::Bool _14688_ok = jule::Bool();
	jule::Ref<_1b6069348_FnIns> _1479_f = _14635_left->_field_kind->_method_fnc();
	if ((jule::real(_1479_f) && jule::real(_1479_f->_field_decl)) && _1479_f->_field_decl->_field_global) {
		_14621_s->_method_push_err(_14666_error_token,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>({}));
		_14688_ok = false;
		return _14688_ok;
	}
	{
		if (!((_14635_left->_method_is_const()))) { goto _case_end_4538137136; }
		_case_begin_4538137136:;
		{
			_14621_s->_method_push_err(_14666_error_token,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>({}));
			_14621_s->_method_push_suggestion(jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>({}));
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4538134960;
		_case_end_4538137136:;
		if (!(((!(_14635_left->_field_lvalue))))) { goto _case_end_4538136672; }
		_case_begin_4538136672:;
		{
			_14621_s->_method_push_err(_14666_error_token,jule::Str("assignment required lvalue", 26),jule::Slice<jule::Any>({}));
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4538134960;
		_case_end_4538136672:;
		if (!(((!(_1b61e873b_check_mut(_14621_s,_14635_left,_14652_right,_14666_error_token)))))) { goto _case_end_4538136768; }
		_case_begin_4538136768:;
		{
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4538134960;
		_case_end_4538136768:;
		_case_begin_4538135760:;
		{
			_14688_ok = true;
			return _14688_ok;
		}
		goto _match_end_4538134960;
		_case_end_4538135760:;
		_match_end_4538134960:;
	}
}



inline jule::Bool _1b61e873b_is_valid_ast_st_for_next_st(jule::Any _17136_n) {
	{
		auto _match_expr{ _17136_n };
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_AssignSt>>())) { goto _case_end_4538145856; }
		_case_begin_4538145856:;
		{
			return (!(_17136_n.operator jule::Ref<_1ce385d22_AssignSt>()->_field_declarative));
		}
		goto _match_end_4538143488;
		_case_end_4538145856:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385d22_FnCallExpr>>() || _match_expr.type_is<jule::Ref<_1ce385d22_Expr>>())) { goto _case_end_4538145952; }
		_case_begin_4538145952:;
		{
			return true;
		}
		goto _match_end_4538143488;
		_case_end_4538145952:;
		_case_begin_4538144528:;
		{
			return false;
		}
		goto _match_end_4538143488;
		_case_end_4538144528:;
		_match_end_4538143488:;
	}
}



inline jule::Bool _1b61e873b_is_valid_st_for_next_st(jule::Any _18528_st) {
	{
		auto _match_expr{ _18528_st };
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_FnCallExprModel>>() || _match_expr.type_is<jule::Ref<_1b61e873b_Postfix>>() || _match_expr.type_is<jule::Ref<_1b61e873b_Assign>>() || _match_expr.type_is<jule::Ref<_1b61e873b_MultiAssign>>())) { goto _case_end_4538148560; }
		_case_begin_4538148560:;
		{
			return true;
		}
		goto _match_end_4538147616;
		_case_end_4538148560:;
		if (!(_match_expr.type_is<jule::Ref<_1b66db129_Data>>())) { goto _case_end_4538148656; }
		_case_begin_4538148656:;
		{
			{
				auto _match_expr{ _18528_st.operator jule::Ref<_1b66db129_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1b61decc6_FnCallExprModel>>())) { goto _case_end_4538155392; }
				_case_begin_4538155392:;
				{
					return true;
				}
				goto _match_end_4538155088;
				_case_end_4538155392:;
				_case_begin_4538149504:;
				{
					return false;
				}
				goto _match_end_4538155088;
				_case_end_4538149504:;
				_match_end_4538155088:;
			}
		}
		goto _match_end_4538147616;
		_case_end_4538148656:;
		_case_begin_4538148256:;
		{
			return false;
		}
		goto _match_end_4538147616;
		_case_end_4538148256:;
		_match_end_4538147616:;
	}
}



inline jule::Bool _1b61e873b_st_is_def(jule::Any _20414_st) {
	{
		auto _match_expr{ _20414_st };
		if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4538158208; }
		_case_begin_4538158208:;
		{
			return true;
		}
		goto _match_end_4538156160;
		_case_end_4538158208:;
		_case_begin_4538156576:;
		{
			return false;
		}
		goto _match_end_4538156160;
		_case_end_4538156576:;
		_match_end_4538156160:;
	}
}



inline jule::Ref<_1b637edab_Var> _1b623bb7a_find_var_in_package(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>& _2729_files,jule::Str _2752_ident,jule::Bool _2764_cpp_linked) {
	for (auto _1b623bb7a_f: _2729_files) {
		{
			jule::Ref<_1b637edab_Var> _2917_v = _1b623bb7a_f->_method_find_var(_2752_ident,_2764_cpp_linked);
			if (jule::real(_2917_v)) {
				return _2917_v;
			}
		}
	_iter_next_4538159808:;
	}
	_iter_end_4538159808:;
	return jule::new_ref<_1b637edab_Var>();
}



inline jule::Ref<_1b6703d45_TypeAlias> _1b623bb7a_find_type_alias_in_package(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>& _3936_files,jule::Str _3959_ident,jule::Bool _3971_cpp_linked) {
	for (auto _1b623bb7a_f: _3936_files) {
		{
			jule::Ref<_1b6703d45_TypeAlias> _4117_ta = _1b623bb7a_f->_method_find_type_alias(_3959_ident,_3971_cpp_linked);
			if (jule::real(_4117_ta)) {
				return _4117_ta;
			}
		}
	_iter_next_4538160800:;
	}
	_iter_end_4538160800:;
	return jule::new_ref<_1b6703d45_TypeAlias>();
}



inline jule::Ref<_1ce385eed_Struct> _1b623bb7a_find_struct_in_package(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>& _5132_files,jule::Str _5155_ident,jule::Bool _5167_cpp_linked) {
	for (auto _1b623bb7a_f: _5132_files) {
		{
			jule::Ref<_1ce385eed_Struct> _5317_s = _1b623bb7a_f->_method_find_struct(_5155_ident,_5167_cpp_linked);
			if (jule::real(_5317_s)) {
				return _5317_s;
			}
		}
	_iter_next_4538171600:;
	}
	_iter_end_4538171600:;
	return jule::new_ref<_1ce385eed_Struct>();
}



inline jule::Ref<_1b6069348_Fn> _1b623bb7a_find_fn_in_package(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>& _6328_files,jule::Str _6351_ident,jule::Bool _6363_cpp_linked) {
	for (auto _1b623bb7a_file: _6328_files) {
		{
			jule::Ref<_1b6069348_Fn> _6517_f = _1b623bb7a_file->_method_find_fn(_6351_ident,_6363_cpp_linked);
			if (jule::real(_6517_f)) {
				return _6517_f;
			}
		}
	_iter_next_4538172544:;
	}
	_iter_end_4538172544:;
	return jule::new_ref<_1b6069348_Fn>();
}



inline jule::Ref<_1b61d7d79_Trait> _1b623bb7a_find_trait_in_package(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>& _7531_files,jule::Str _7554_ident) {
	for (auto _1b623bb7a_f: _7531_files) {
		{
			jule::Ref<_1b61d7d79_Trait> _7717_t = _1b623bb7a_f->_method_find_trait(_7554_ident);
			if (jule::real(_7717_t)) {
				return _7717_t;
			}
		}
	_iter_next_4538182720:;
	}
	_iter_end_4538182720:;
	return jule::new_ref<_1b61d7d79_Trait>();
}



inline jule::Ref<_1b61d7c58_Enum> _1b623bb7a_find_enum_in_package(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>& _8730_files,jule::Str _8753_ident) {
	for (auto _1b623bb7a_f: _8730_files) {
		{
			jule::Ref<_1b61d7c58_Enum> _8917_e = _1b623bb7a_f->_method_find_enum(_8753_ident);
			if (jule::real(_8917_e)) {
				return _8917_e;
			}
		}
	_iter_next_4538187072:;
	}
	_iter_end_4538187072:;
	return jule::new_ref<_1b61d7c58_Enum>();
}



inline jule::Bool _1b622b76e_is_valid_model_for_ref(jule::Any _1527_m) {
	{
		auto _match_expr{ _1527_m };
		if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4538188528; }
		_case_begin_4538188528:;
		{
			return true;
		}
		goto _match_end_4538192384;
		_case_end_4538188528:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_StructSubIdentExprModel>>())) { goto _case_end_4538188624; }
		_case_begin_4538188624:;
		{
			jule::Ref<_1b61decc6_StructSubIdentExprModel> _2113_model = _1527_m.operator jule::Ref<_1b61decc6_StructSubIdentExprModel>();
			return _1b622b76e_is_valid_model_for_ref(_2113_model->_field_expr);
		}
		goto _match_end_4538192384;
		_case_end_4538188624:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_TraitSubIdentExprModel>>())) { goto _case_end_4538188720; }
		_case_begin_4538188720:;
		{
			jule::Ref<_1b61decc6_TraitSubIdentExprModel> _2513_model = _1527_m.operator jule::Ref<_1b61decc6_TraitSubIdentExprModel>();
			return _1b622b76e_is_valid_model_for_ref(_2513_model->_field_expr);
		}
		goto _match_end_4538192384;
		_case_end_4538188720:;
		_case_begin_4538191552:;
		{
			return false;
		}
		goto _match_end_4538192384;
		_case_end_4538191552:;
		_match_end_4538192384:;
	}
}



inline _1e7690a81_Log _1b622b76e_compiler_err(_1ce35e3a0_Token& _3318_token,jule::Bool _3332_line,jule::Str _3344_fmt,jule::Slice<jule::Any> _3357_args) {
	_1e7690a81_Log _3413_log = _1e7690a81_Log(1LLU,_3318_token._field_row,_3318_token._field_column,_3318_token._field_file->_method_path(),_1e7690a81_logf(_3344_fmt,_3357_args),jule::Str(),jule::Str());
	if (_3332_line) {
		_3413_log._field_line=_3318_token._field_file->_method_get_row(_3318_token._field_row);
	}
	return _3413_log;
}



inline jule::Bool _1b622b76e_imp_is_lookupable(jule::Ref<_1b623bb7a_ImportInfo>& _4723_i,jule::Str _4739_ident) {
	if (_4723_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_4723_i->_field_import_all))) {
		if (_4723_i->_field_selected.len() > 0LL) {
			return _4723_i->_method_exist_ident(_4739_ident);
		}
	}
	return _4723_i->_field_import_all;
}



inline jule::Slice<jule::Ref<_1b637edab_Var>> _1b622b76e_build_ret_vars(jule::Ref<_1b6069348_FnIns>& _6024_f) {
	if (_6024_f->_field_decl->_method_is_void() || (!(jule::real(_6024_f->_field_result)))) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1b637edab_Var>> _6513_vars = nullptr;
	jule::Slice<jule::Ref<_1b6703d45_TypeKind>> _6613_types = _1b65a085c_get_fn_result_types(_6024_f);
	{
		jule::Int _1b622b76e_i = 0;
		for (auto _1b622b76e_ident: _6024_f->_field_decl->_field_result->_field_idents) {
			{
				if (_1ce35e3a0_is_ignore_ident(_1b622b76e_ident._field_kind)) {
					goto _iter_next_4538218160;
				}
				jule::Ref<_1b637edab_Var> _7217_v = jule::new_struct<_1b637edab_Var>(new( std::nothrow ) _1b637edab_Var(_6024_f->_field_scope,_1b622b76e_ident,_1b622b76e_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),_6613_types[static_cast<jule::Int>(_1b622b76e_i)])),jule::new_struct<_1b66db129_Value>(new( std::nothrow ) _1b66db129_Value(jule::Ref<_1ce385d22_Expr>(),jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data()))),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Slice<jule::Ref<_1ce385d22_Directive>>(),jule::Slice<jule::Ref<_1b637edab_Var>>()));
				_6513_vars=jule::append(_6513_vars,jule::Slice<jule::Ref<_1b637edab_Var>>({_7217_v}));
			}
		_iter_next_4538218160:;
		_1b622b76e_i++;
		}
		_iter_end_4538218160:;
	}
	return _6513_vars;
}



inline jule::Slice<jule::Ref<_1b637edab_Var>> _1b622b76e_build_param_vars(jule::Ref<_1b6069348_FnIns>& _8926_f) {
	if (_8926_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1b637edab_Var>> _9413_vars = jule::Slice<jule::Ref<_1b637edab_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_8926_f->_field_params.len())));
	{
		jule::Int _1b622b76e_i = 0;
		for (auto _1b622b76e_p: _8926_f->_field_params) {
			{
				jule::Ref<_1b637edab_Var> _9617_v = jule::new_struct<_1b637edab_Var>(new( std::nothrow ) _1b637edab_Var(_8926_f->_field_scope,_1b622b76e_p->_field_decl->_field_token,_1b622b76e_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_1b622b76e_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol()),jule::new_struct<_1b66db129_Value>(new( std::nothrow ) _1b66db129_Value(jule::Ref<_1ce385d22_Expr>(),jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data()))),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Slice<jule::Ref<_1ce385d22_Directive>>(),jule::Slice<jule::Ref<_1b637edab_Var>>()));
				{
					if (!((_1b622b76e_p->_field_decl->_method_is_self()))) { goto _case_end_4538236656; }
					_case_begin_4538236656:;
					{
						_9617_v->_field_kind->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_8926_f->_field_owner));
						_9617_v->_field_reference=true;
						if (_1b622b76e_p->_field_decl->_method_is_ref()) {
							_9617_v->_field_ident=_9617_v->_field_ident.slice(1LL);
							_9617_v->_field_kind->_field_kind->_field_kind=jule::new_struct<_1b6703d45_Ref>(new( std::nothrow ) _1b6703d45_Ref(_9617_v->_field_kind->_field_kind->_method_clone()));
						}
					}
					goto _match_end_4538235744;
					_case_end_4538236656:;
					if (!((_1b622b76e_p->_field_decl->_field_variadic))) { goto _case_end_4538256080; }
					_case_begin_4538256080:;
					{
						_9617_v->_field_kind->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6703d45_Slc>(new( std::nothrow ) _1b6703d45_Slc(_1b622b76e_p->_field_kind->_method_clone()))));
					}
					goto _match_end_4538235744;
					_case_end_4538256080:;
					_case_begin_4538236304:;
					{
						_9617_v->_field_kind->_field_kind=_1b622b76e_p->_field_kind->_method_clone();
					}
					goto _match_end_4538235744;
					_case_end_4538236304:;
					_match_end_4538235744:;
				}
				_9413_vars[static_cast<jule::Int>(_1b622b76e_i)]=_9617_v;
			}
		_iter_next_4538230112:;
		_1b622b76e_i++;
		}
		_iter_end_4538230112:;
	}
	return _9413_vars;
}



inline jule::Slice<jule::Ref<_1b6703d45_TypeAlias>> _1b622b76e_build_generic_type_aliases(jule::Ref<_1b6069348_FnIns>& _13736_f) {
	jule::I64 _13813_size = _13736_f->_field_generics.len();
	if (jule::real(_13736_f->_field_decl->_field_owner)) {
		_13813_size+=static_cast<jule::I64>(_13736_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_13813_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1b6703d45_TypeAlias>> _14713_aliases = jule::Slice<jule::Ref<_1b6703d45_TypeAlias>>::alloc(static_cast<jule::Int>(_13813_size));
	{
		jule::Int _1b622b76e_i = 0;
		for (auto _1b622b76e_g: _13736_f->_field_generics) {
			{
				jule::Ref<_1ce385d22_GenericDecl> _15017_decl = _13736_f->_field_decl->_field_generics[static_cast<jule::Int>(_1b622b76e_i)];
				_14713_aliases[static_cast<jule::Int>(_1b622b76e_i)]=jule::new_struct<_1b6703d45_TypeAlias>(new( std::nothrow ) _1b6703d45_TypeAlias(_13736_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_15017_decl->_field_token,_15017_decl->_field_ident,jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),_1b622b76e_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
		_iter_next_4538270416:;
		_1b622b76e_i++;
		}
		_iter_end_4538270416:;
	}
	if (jule::real(_13736_f->_field_decl->_field_owner)) {
		jule::Ref<_1ce385eed_StructIns> _16217_owner = _13736_f->_field_owner;
		{
			jule::Int _1b622b76e_i = 0;
			for (auto _1b622b76e_g: _16217_owner->_field_generics) {
				{
					jule::Ref<_1ce385d22_GenericDecl> _16421_decl = _16217_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1b622b76e_i)];
					_14713_aliases[static_cast<jule::Int>(_13736_f->_field_generics.len() + _1b622b76e_i)]=jule::new_struct<_1b6703d45_TypeAlias>(new( std::nothrow ) _1b6703d45_TypeAlias(_13736_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_16421_decl->_field_token,_16421_decl->_field_ident,jule::new_struct<_1b6703d45_TypeSymbol>(new( std::nothrow ) _1b6703d45_TypeSymbol(jule::Ref<_1ce385d22_TypeDecl>(),_1b622b76e_g)),jule::Str(),jule::Slice<jule::Any>()));
				}
			_iter_next_4538278720:;
			_1b622b76e_i++;
			}
			_iter_end_4538278720:;
		}
	}
	return _14713_aliases;
}



inline jule::Ref<_1b66b3a3b_SymbolTable> _1b622b76e_find_file(jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>& _17919_files,jule::Ref<_1ce4aae47_File>& _17943_handler) {
	for (auto _1b622b76e_fl: _17919_files) {
		{
			if ((_1b622b76e_fl->_field_file).alloc == (_17943_handler).alloc) {
				return _1b622b76e_fl;
			}
		}
	_iter_next_4538271808:;
	}
	_iter_end_4538271808:;
	return jule::new_ref<_1b66b3a3b_SymbolTable>();
}



inline std::tuple<jule::Bool,jule::Bool> _1b622b76e_conditional_has_ret(jule::Ref<_1b61e873b_Conditional> _18828_c) {
	jule::Bool _18847_ok = jule::Bool();
	jule::Bool _18857_breaking = jule::Bool();
	jule::Bool _18913_breaked = false;
	for (auto _1b622b76e_elif: _18828_c->_field_elifs) {
		{
			if ((!(jule::real(_1b622b76e_elif)))) {
				_18847_ok = false;
				_18857_breaking = false;
				return std::make_tuple(_18847_ok,_18857_breaking);
			}
			std::tie(_18847_ok,std::ignore,_18857_breaking) = _1b622b76e___has_ret(_1b622b76e_elif->_field_scope);
			_18913_breaked=_18913_breaked || _18857_breaking;
			if ((!(_18847_ok))) {
				_18847_ok = false;
				_18857_breaking = _18913_breaked;
				return std::make_tuple(_18847_ok,_18857_breaking);
			}
		}
	_iter_next_4538291024:;
	}
	_iter_end_4538291024:;
	if ((!(jule::real(_18828_c->_field_default)))) {
		_18847_ok = false;
		_18857_breaking = _18913_breaked;
		return std::make_tuple(_18847_ok,_18857_breaking);
	}
	std::tie(_18847_ok,std::ignore,_18857_breaking) = _1b622b76e___has_ret(_18828_c->_field_default->_field_scope);
	_18913_breaked=_18913_breaked || _18857_breaking;
	_18847_ok = _18847_ok;
	_18857_breaking = _18913_breaked;
	return std::make_tuple(_18847_ok,_18857_breaking);
}



inline jule::Bool _1b622b76e_match_has_ret(jule::Ref<_1b61e873b_Match> _21022_m) {
	if ((!(jule::real(_21022_m->_field_default)))) {
		return false;
	}
	jule::Bool _21513_ok = true;
	jule::Bool _21613_falled = false;
	jule::Bool _21713_breaked = false;
	for (auto _1b622b76e_c: _21022_m->_field_cases) {
		{
			if ((!(jule::real(_1b622b76e_c)))) {
				return false;
			}
			std::tie(_21513_ok,_21613_falled,_21713_breaked) = _1b622b76e___has_ret(_1b622b76e_c->_field_scope);
			if (((!(_21513_ok)) && (!(_21613_falled))) || _21713_breaked) {
				return false;
			}
			{
				if (!(((!(_21513_ok))))) { goto _case_end_4538307472; }
				_case_begin_4538307472:;
				{
					if ((!(_21613_falled))) {
						return false;
					}
					goto _case_begin_4538307568;
				}
				goto _match_end_4538307344;
				_case_end_4538307472:;
				if (!((_21613_falled))) { goto _case_end_4538307568; }
				_case_begin_4538307568:;
				{
					if ((!(jule::real(_1b622b76e_c->_field_next)))) {
						return false;
					}
					goto _iter_next_4538303168;
				}
				goto _match_end_4538307344;
				_case_end_4538307568:;
				_match_end_4538307344:;
			}
			_21613_falled=false;
		}
	_iter_next_4538303168:;
	}
	_iter_end_4538303168:;
	return _1b622b76e_has_ret(_21022_m->_field_default->_field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1b622b76e___has_ret(jule::Ref<_1b61e873b_Scope> _24618_s) {
	jule::Bool _24631_ok = jule::Bool();
	jule::Bool _24641_falled = jule::Bool();
	jule::Bool _24655_breaked = jule::Bool();
	if ((!(jule::real(_24618_s)))) {
		_24631_ok = false;
		_24641_falled = false;
		_24655_breaked = false;
		return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
	}
	for (auto _1b622b76e_st: _24618_s->_field_stmts) {
		{
			{
				auto _match_expr{ _1b622b76e_st };
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_FallSt>>())) { goto _case_end_4538317136; }
				_case_begin_4538317136:;
				{
					_24641_falled=true;
				}
				goto _match_end_4538317584;
				_case_end_4538317136:;
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_BreakSt>>())) { goto _case_end_4538317664; }
				_case_begin_4538317664:;
				{
					_24631_ok = false;
					_24641_falled = false;
					_24655_breaked = true;
					return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
				}
				goto _match_end_4538317584;
				_case_end_4538317664:;
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_ContSt>>())) { goto _case_end_4538317952; }
				_case_begin_4538317952:;
				{
					_24631_ok = false;
					_24641_falled = false;
					_24655_breaked = true;
					return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
				}
				goto _match_end_4538317584;
				_case_end_4538317952:;
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_InfIter>>())) { goto _case_end_4538318048; }
				_case_begin_4538318048:;
				{
					_24631_ok=_1b622b76e_has_ret(_1b622b76e_st.operator jule::Ref<_1b61e873b_InfIter>()->_field_scope);
					if (_24631_ok) {
						_24631_ok = true;
						_24641_falled = false;
						_24655_breaked = false;
						return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
					}
				}
				goto _match_end_4538317584;
				_case_end_4538318048:;
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_RetSt>>())) { goto _case_end_4538318144; }
				_case_begin_4538318144:;
				{
					_24631_ok = true;
					_24641_falled = _24641_falled;
					_24655_breaked = _24655_breaked;
					return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
				}
				goto _match_end_4538317584;
				_case_end_4538318144:;
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Scope>>())) { goto _case_end_4538318240; }
				_case_begin_4538318240:;
				{
					_24631_ok=_1b622b76e_has_ret(_1b622b76e_st.operator jule::Ref<_1b61e873b_Scope>());
					if (_24631_ok) {
						_24631_ok = true;
						_24641_falled = false;
						_24655_breaked = false;
						return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
					}
				}
				goto _match_end_4538317584;
				_case_end_4538318240:;
				if (!(_match_expr.type_is<jule::Ref<_1b66db129_Data>>())) { goto _case_end_4538318352; }
				_case_begin_4538318352:;
				{
					{
						auto _match_expr{ _1b622b76e_st.operator jule::Ref<_1b66db129_Data>()->_field_model };
						if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BuiltinPanicCallExprModel>>())) { goto _case_end_4538333904; }
						_case_begin_4538333904:;
						{
							_24631_ok = true;
							_24641_falled = _24641_falled;
							_24655_breaked = _24655_breaked;
							return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
						}
						goto _match_end_4538334288;
						_case_end_4538333904:;
						_match_end_4538334288:;
					}
				}
				goto _match_end_4538317584;
				_case_end_4538318352:;
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Recover>>())) { goto _case_end_4538318464; }
				_case_begin_4538318464:;
				{
					jule::Bool _28418_ok;
					jule::Bool _28422__falled;
					jule::Bool _28431__breaked;
					std::tie(_28418_ok,_28422__falled,_28431__breaked) = _1b622b76e___has_ret(_1b622b76e_st.operator jule::Ref<_1b61e873b_Recover>()->_field_scope);
					if (_28418_ok) {
						_24631_ok = true;
						_24641_falled = _28422__falled;
						_24655_breaked = _28431__breaked;
						return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
					}
				}
				goto _match_end_4538317584;
				_case_end_4538318464:;
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Conditional>>())) { goto _case_end_4538318576; }
				_case_begin_4538318576:;
				{
					std::tie(_24631_ok,_24655_breaked) = _1b622b76e_conditional_has_ret(_1b622b76e_st.operator jule::Ref<_1b61e873b_Conditional>());
					if (_24631_ok) {
						_24631_ok = true;
						_24641_falled = false;
						_24655_breaked = false;
						return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
					}
					if (_24655_breaked) {
						_24631_ok = false;
						_24641_falled = false;
						_24655_breaked = _24655_breaked;
						return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
					}
				}
				goto _match_end_4538317584;
				_case_end_4538318576:;
				if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Match>>())) { goto _case_end_4538318688; }
				_case_begin_4538318688:;
				{
					_24631_ok=_1b622b76e_match_has_ret(_1b622b76e_st.operator jule::Ref<_1b61e873b_Match>());
					if (_24631_ok) {
						_24631_ok = true;
						_24641_falled = false;
						_24655_breaked = false;
						return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
					}
				}
				goto _match_end_4538317584;
				_case_end_4538318688:;
				_match_end_4538317584:;
			}
		}
	_iter_next_4538314128:;
	}
	_iter_end_4538314128:;
	_24631_ok = false;
	_24641_falled = _24641_falled;
	_24655_breaked = _24655_breaked;
	return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
}



inline jule::Bool _1b622b76e_has_ret(jule::Ref<_1b61e873b_Scope> _31016_s) {
	jule::Bool _31110_ok;
	std::tie(_31110_ok,std::ignore,std::ignore) = _1b622b76e___has_ret(_31016_s);
	return _31110_ok;
}



inline void _1b622b76e_push_suggestion(_1e7690a81_Log* _31531_log,jule::Str _31542_fmt,jule::Slice<jule::Any> _31555_args) {
	_31531_log->_field_suggestion=_1e7690a81_logf(_31542_fmt,_31555_args);
}



inline jule::Slice<jule::Ref<_1b6703d45_TypeKind>> _1b65a085c_get_fn_result_types(jule::Ref<_1b6069348_FnIns>& _2629_f) {
	{
		if (!((_2629_f->_field_decl->_method_is_void() || (!(jule::real(_2629_f->_field_result)))))) { goto _case_end_4538356336; }
		_case_begin_4538356336:;
		{
			return nullptr;
		}
		goto _match_end_4538354816;
		_case_end_4538356336:;
		if (!(((!(jule::real(_2629_f->_field_result->_method_tup())))))) { goto _case_end_4538357248; }
		_case_begin_4538357248:;
		{
			return jule::Slice<jule::Ref<_1b6703d45_TypeKind>>({_2629_f->_field_result});
		}
		goto _match_end_4538354816;
		_case_end_4538357248:;
		_case_begin_4538355024:;
		{
			return _2629_f->_field_result->_method_tup()->_field_types;
		}
		goto _match_end_4538354816;
		_case_end_4538355024:;
		_match_end_4538354816:;
	}
}



inline jule::Bool _1b65a085c_trait_has_reference_receiver(jule::Ref<_1b61d7d79_Trait>& _3934_t) {
	for (auto _1b65a085c_f: _3934_t->_field_methods) {
		{
			if (_1b65a085c_f->_field_statically) {
				goto _iter_next_4538358864;
			}
			jule::Ref<_1b6069348_Param> _4613_p = _1b65a085c_f->_field_params[0LL];
			if (_4613_p->_method_is_ref() && _4613_p->_method_is_self()) {
				return true;
			}
		}
	_iter_next_4538358864:;
	}
	_iter_end_4538358864:;
	return false;
}



inline jule::Bool _1b65a085c_float_assignable(jule::Str _5421_kind,jule::Ref<_1b66db129_Data>& _5433_d) {
	jule::Str _559_value = _1e770c537_fmt_float(static_cast<jule::F64>(_5433_d->_field_constant->_method_as_f64()),'g',-1LL,64LL);
	return _1b6d438d5_check_bit_float(_559_value,static_cast<jule::Int>(_1b6d438d5_bitsize_of(_5421_kind)));
}



inline jule::Bool _1b65a085c_sig_assignable(jule::Str _5919_kind,jule::Ref<_1b66db129_Data>& _5931_d) {
	jule::F64 _609_min = _1b6d47d3a_min(_5919_kind);
	jule::F64 _619_max = _1b6d47d3a_max(_5919_kind);
	{
		if (!((_5931_d->_field_constant->_method_is_f64()))) { goto _case_end_4538373184; }
		_case_begin_4538373184:;
		{
			jule::F64 _6513_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_f64());
			jule::F64 _6614_i;
			jule::F64 _6617_frac;
			std::tie(_6614_i,_6617_frac) = _1cdee74cd_modf(_6513_x);
			if (_6617_frac != 0LL) {
				return false;
			}
			return (_6614_i >= _609_min) && (_6614_i <= _619_max);
		}
		goto _match_end_4538372848;
		_case_end_4538373184:;
		if (!((_5931_d->_field_constant->_method_is_u64()))) { goto _case_end_4538373280; }
		_case_begin_4538373280:;
		{
			jule::F64 _7313_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_u64());
			if (_7313_x <= _619_max) {
				return true;
			}
		}
		goto _match_end_4538372848;
		_case_end_4538373280:;
		if (!((_5931_d->_field_constant->_method_is_i64()))) { goto _case_end_4538373376; }
		_case_begin_4538373376:;
		{
			jule::F64 _7913_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_i64());
			return (_609_min <= _7913_x) && (_7913_x <= _619_max);
		}
		goto _match_end_4538372848;
		_case_end_4538373376:;
		_match_end_4538372848:;
	}
	return false;
}



inline jule::Bool _1b65a085c_unsig_assignable(jule::Str _8621_kind,jule::Ref<_1b66db129_Data>& _8633_d) {
	jule::F64 _879_max = _1b6d47d3a_max(_8621_kind);
	if (_8633_d->_field_is_rune && (_8621_kind == jule::Str("u8", 2))) {
		return _1b6e98d37_is_ascii(static_cast<jule::I32>(_8633_d->_field_constant->_method_read_i64()));
	}
	{
		if (!((_8633_d->_field_constant->_method_is_f64()))) { goto _case_end_4538388704; }
		_case_begin_4538388704:;
		{
			jule::F64 _9413_x = _8633_d->_field_constant->_method_read_f64();
			if (_9413_x < 0LL) {
				return false;
			}
			jule::F64 _9914_i;
			jule::F64 _9917_frac;
			std::tie(_9914_i,_9917_frac) = _1cdee74cd_modf(_9413_x);
			if (_9917_frac != 0LL) {
				return false;
			}
			return _9914_i <= _879_max;
		}
		goto _match_end_4538387136;
		_case_end_4538388704:;
		if (!((_8633_d->_field_constant->_method_is_u64()))) { goto _case_end_4538386352; }
		_case_begin_4538386352:;
		{
			jule::F64 _10613_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_u64());
			if (_10613_x <= _879_max) {
				return true;
			}
		}
		goto _match_end_4538387136;
		_case_end_4538386352:;
		if (!((_8633_d->_field_constant->_method_is_i64()))) { goto _case_end_4538386448; }
		_case_begin_4538386448:;
		{
			jule::F64 _11213_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_i64());
			return (0LL <= _11213_x) && (_11213_x <= _879_max);
		}
		goto _match_end_4538387136;
		_case_end_4538386448:;
		_match_end_4538387136:;
	}
	return false;
}



inline jule::Bool _1b65a085c_int_assignable(jule::Str _11919_kind,jule::Ref<_1b66db129_Data>& _11931_d) {
	{
		if (!((_1b6e2b4c3_is_sig_int(_11919_kind)))) { goto _case_end_4538402592; }
		_case_begin_4538402592:;
		{
			return _1b65a085c_sig_assignable(_11919_kind,_11931_d);
		}
		goto _match_end_4538389584;
		_case_end_4538402592:;
		if (!((_1b6e2b4c3_is_unsig_int(_11919_kind)))) { goto _case_end_4538402688; }
		_case_begin_4538402688:;
		{
			return _1b65a085c_unsig_assignable(_11919_kind,_11931_d);
		}
		goto _match_end_4538389584;
		_case_end_4538402688:;
		_case_begin_4538399488:;
		{
			return false;
		}
		goto _match_end_4538389584;
		_case_end_4538399488:;
		_match_end_4538389584:;
	}
}



inline jule::Any _1b66db129_find_builtins_import(jule::Str _4625_ident,jule::Ref<_1b623bb7a_ImportInfo> _4637_imp) {
	return _1b6c3ed86_find_package_builtin_def(_4637_imp->_field_link_path,_4625_ident);
}



inline jule::Any _1b66db129_find_builtins_sema(jule::Str _5023_ident,jule::Ref<_1b622b76e_Sema> _5039_s) {
	for (auto _1b66db129_imp: _5039_s->_field_file->_field_imports) {
		{
			if (_1b66db129_imp->_field_import_all || _1b66db129_imp->_method_exist_ident(_5023_ident)) {
				jule::Any _5321_def = _1b66db129_find_builtins_import(_5023_ident,_1b66db129_imp);
				if (_5321_def != nullptr) {
					return _5321_def;
				}
			}
		}
	_iter_next_4538407152:;
	}
	_iter_end_4538407152:;
	return jule::Any(nullptr);
}



inline jule::Bool _1b66db129_is_ok_for_shifting(jule::Ref<_1b66db129_Data> _6227_d) {
	jule::Ref<_1b6703d45_Prim> _639_prim = _6227_d->_field_kind->_method_prim();
	if ((!(jule::real(_639_prim))) || (!(_1b6e2b4c3_is_int(_639_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_6227_d->_method_is_const()))) {
		return true;
	}
	{
		if (!((_6227_d->_field_constant->_method_is_i64()))) { goto _case_end_4538418560; }
		_case_begin_4538418560:;
		{
			return _6227_d->_field_constant->_method_read_i64() >= 0LL;
		}
		goto _match_end_4538416432;
		_case_end_4538418560:;
		if (!((_6227_d->_field_constant->_method_is_u64()))) { goto _case_end_4538418656; }
		_case_begin_4538418656:;
		{
			return true;
		}
		goto _match_end_4538416432;
		_case_end_4538418656:;
		_case_begin_4538416544:;
		{
			return false;
		}
		goto _match_end_4538416432;
		_case_end_4538416544:;
		_match_end_4538416432:;
	}
}



inline jule::Bool _1b66db129_is_instanced_struct(jule::Ref<_1ce385eed_StructIns> _7924_s) {
	return _7924_s->_field_decl->_field_generics.len() == _7924_s->_field_generics.len();
}



inline jule::Bool _1b66db129_is_ptr_arithmetic_compatible_int(jule::Ref<_1b66db129_Data>& _8342_d) {
	if (_8342_d->_method_is_const()) {
		return _1b65a085c_int_assignable(jule::Str("int", 3),_8342_d);
	}
	_1b65a085c_TypeCompatibilityChecker _8713_tcc = _1b65a085c_TypeCompatibilityChecker(jule::Ref<_1b622b76e_Sema>(),jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("int", 3)))),_8342_d->_field_kind,_1ce35e3a0_Token(),jule::Bool(),true,jule::Bool());
	return _8713_tcc._method_check();
}



inline void _1b66db129_normalize_bitsize(jule::Ref<_1b66db129_Data> _9526_d) {
	if ((!(_9526_d->_method_is_const()))) {
		return;
	}
	jule::Str _10013_kind = jule::Str("", 0);
	{
		if (!((_9526_d->_field_constant->_method_is_i64()))) { goto _case_end_4538438160; }
		_case_begin_4538438160:;
		{
			jule::I64 _10313_x = _9526_d->_field_constant->_method_read_i64();
			_10013_kind=_1b6d438d5_int_from_bits(static_cast<jule::U64>(_1b6d438d5_bitsize_of_int(_10313_x)));
		}
		goto _match_end_4538436960;
		_case_end_4538438160:;
		if (!((_9526_d->_field_constant->_method_is_u64()))) { goto _case_end_4538438256; }
		_case_begin_4538438256:;
		{
			jule::U64 _10713_x = _9526_d->_field_constant->_method_read_u64();
			_10013_kind=_1b6d438d5_uint_from_bits(static_cast<jule::U64>(_1b6d438d5_bitsize_of_uint(_10713_x)));
		}
		goto _match_end_4538436960;
		_case_end_4538438256:;
		_case_begin_4538437200:;
		{
			return;
		}
		goto _match_end_4538436960;
		_case_end_4538437200:;
		_match_end_4538436960:;
	}
	if (jule::real(_9526_d->_field_kind->_method_enm())) {
		return;
	}
	_9526_d->_field_kind->_field_kind=_1b6703d45_build_prim_type(_10013_kind);
}



inline void _1b66db129_normalize_type(jule::Ref<_1b66db129_Data> _12223_d) {
	{
		if (!((_1b65a085c_int_assignable(jule::Str("int", 3),_12223_d)))) { goto _case_end_4538446992; }
		_case_begin_4538446992:;
		{
			_12223_d->_field_kind->_field_kind=_1b6703d45_build_prim_type(jule::Str("int", 3));
			_12223_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_12223_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4538446768;
		_case_end_4538446992:;
		if (!((_1b65a085c_int_assignable(jule::Str("uint", 4),_12223_d)))) { goto _case_end_4538447104; }
		_case_begin_4538447104:;
		{
			_12223_d->_field_kind->_field_kind=_1b6703d45_build_prim_type(jule::Str("uint", 4));
			_12223_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_12223_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4538446768;
		_case_end_4538447104:;
		_match_end_4538446768:;
	}
}



inline void _1b66db129_apply_cast_kind_model(jule::Ref<_1b66db129_Data> _13430_d) {
	_13430_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_CastingExprModel>(new( std::nothrow ) _1b61decc6_CastingExprModel(_13430_d->_field_model,_13430_d->_field_cast_kind,_13430_d->_field_kind)));
}



inline void _1b66db129_apply_cast_kind(jule::Ref<_1b66db129_Data> _14224_d) {
	if ((!(jule::real(_14224_d->_field_cast_kind)))) {
		return;
	}
	_1b66db129_apply_cast_kind_model(_14224_d);
	_14224_d->_field_kind=_14224_d->_field_cast_kind;
	jule::drop(_14224_d->_field_cast_kind);
}



inline jule::Ref<_1b66db129_Data> _1b66db129_build_void_data(void) {
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("void", 4)))),jule::Ref<_1b6703d45_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1b6d4076c_Const>()));
}



inline jule::Str _1b66db129_kind_by_bitsize(jule::Any _16320_expr) {
	{
		auto _match_expr{ _16320_expr };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4538463568; }
		_case_begin_4538463568:;
		{
			jule::F64 _16613_x = _16320_expr.operator jule::F64();
			return _1b6d438d5_float_from_bits(static_cast<jule::U64>(_1b6d438d5_bitsize_of_float(_16613_x)));
		}
		goto _match_end_4538460336;
		_case_end_4538463568:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4538463136; }
		_case_begin_4538463136:;
		{
			jule::I64 _17013_x = _16320_expr.operator jule::I64();
			return _1b6d438d5_int_from_bits(static_cast<jule::U64>(_1b6d438d5_bitsize_of_int(_17013_x)));
		}
		goto _match_end_4538460336;
		_case_end_4538463136:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4538463232; }
		_case_begin_4538463232:;
		{
			jule::U64 _17413_x = _16320_expr.operator jule::U64();
			return _1b6d438d5_uint_from_bits(static_cast<jule::U64>(_1b6d438d5_bitsize_of_uint(_17413_x)));
		}
		goto _match_end_4538460336;
		_case_end_4538463232:;
		_case_begin_4538458368:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4538460336;
		_case_end_4538458368:;
		_match_end_4538460336:;
	}
}



inline jule::Str _1b66db129_check_data_for_integer_indexing(jule::Ref<_1b66db129_Data> _18240_d) {
	jule::Str _18252_err_fmt = jule::Str("", 0);
	if ((!(jule::real(_18240_d)))) {
		_18252_err_fmt = jule::Str("", 0);
		return _18252_err_fmt;
	}
	jule::Ref<_1b6703d45_TypeKind> _18713_kind = _18240_d->_field_kind;
	if (jule::real(_18713_kind->_method_ref())) {
		_18713_kind=_18713_kind->_method_ref()->_field_elem;
	}
	{
		if (!(((!(jule::real(_18713_kind->_method_prim())))))) { goto _case_end_4538477264; }
		_case_begin_4538477264:;
		{
			_18252_err_fmt = jule::Str("invalid expression", 18);
			return _18252_err_fmt;
		}
		goto _match_end_4538471136;
		_case_end_4538477264:;
		if (!(((!(_1b6e2b4c3_is_int(_18713_kind->_method_prim()->_method_to_str())))))) { goto _case_end_4538477360; }
		_case_begin_4538477360:;
		{
			_18252_err_fmt = jule::Str("invalid expression", 18);
			return _18252_err_fmt;
		}
		goto _match_end_4538471136;
		_case_end_4538477360:;
		if (!((_18240_d->_method_is_const()))) { goto _case_end_4538475088; }
		_case_begin_4538475088:;
		{
			if (_18240_d->_field_constant->_method_as_f64() < 0LL) {
				_18252_err_fmt = jule::Str("overflow the limit of data-type", 31);
				return _18252_err_fmt;
			}
		}
		goto _match_end_4538471136;
		_case_end_4538475088:;
		_case_begin_4538472448:;
		{
			_18240_d->_field_cast_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("int", 3))));
			_1b66db129_apply_cast_kind(_18240_d);
		}
		goto _match_end_4538471136;
		_case_end_4538472448:;
		_match_end_4538471136:;
	}
	_18252_err_fmt = jule::Str("", 0);
	return _18252_err_fmt;
}



inline jule::Bool _1b6703d45_can_get_ptr(jule::Ref<_1b66db129_Data>& _56121_d) {
	if ((!(_56121_d->_field_lvalue)) || _56121_d->_method_is_const()) {
		return false;
	}
	{
		if (!((jule::real(_56121_d->_field_kind->_method_fnc()) || jule::real(_56121_d->_field_kind->_method_enm())))) { goto _case_end_4538483456; }
		_case_begin_4538483456:;
		{
			return false;
		}
		goto _match_end_4538483072;
		_case_end_4538483456:;
		_case_begin_4538482656:;
		{
			return true;
		}
		goto _match_end_4538483072;
		_case_end_4538482656:;
		_match_end_4538483072:;
	}
}



inline jule::Bool _1b6703d45_is_valid_for_ref_type(jule::Ref<_1b6703d45_TypeKind>& _57631_t) {
	jule::Ref<_1ce385eed_StructIns> _57713_s = _57631_t->_method_strct();
	if ((jule::real(_57713_s) && jule::real(_57713_s->_field_decl)) && _57713_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return (!(((jule::real(_57631_t->_method_enm()) || jule::real(_57631_t->_method_ptr())) || jule::real(_57631_t->_method_ref())) || jule::real(_57631_t->_method_arr())));
}



inline jule::Bool _1b6703d45_is_valid_for_ref(jule::Ref<_1b6703d45_TypeKind>& _58526_t) {
	return (!(jule::real(_58526_t->_method_fnc())));
}



inline jule::Str _1b6703d45_build_link_path_by_tokens(jule::Slice<_1ce35e3a0_Token>& _58931_tokens) {
	jule::Str _59013_s = _58931_tokens[0LL]._field_kind;
	for (auto _1b6703d45_token: _58931_tokens.slice(1LL)) {
		{
			_59013_s+=jule::Str("::", 2);
			_59013_s+=_1b6703d45_token._field_kind;
		}
	_iter_next_4538496896:;
	}
	_iter_end_4538496896:;
	return _59013_s;
}



inline jule::Ref<_1b6703d45_Prim> _1b6703d45_build_prim_type(jule::Str _59820_kind) {
	return jule::new_struct<_1b6703d45_Prim>(new( std::nothrow ) _1b6703d45_Prim(_59820_kind));
}



inline jule::Ref<_1ce385eed_Struct> _1b6703d45_get_struct_from_kind(jule::Ref<_1b6703d45_TypeKind> _60429_k) {
	{
		if (!(((!(jule::real(_60429_k)))))) { goto _case_end_4538502624; }
		_case_begin_4538502624:;
		{
			return jule::new_ref<_1ce385eed_Struct>();
		}
		goto _match_end_4538500240;
		_case_end_4538502624:;
		if (!((jule::real(_60429_k->_method_strct())))) { goto _case_end_4538501968; }
		_case_begin_4538501968:;
		{
			return _60429_k->_method_strct()->_field_decl;
		}
		goto _match_end_4538500240;
		_case_end_4538501968:;
		if (!((jule::real(_60429_k->_method_ref())))) { goto _case_end_4538501760; }
		_case_begin_4538501760:;
		{
			return _1b6703d45_get_struct_from_kind(_60429_k->_method_ref()->_field_elem);
		}
		goto _match_end_4538500240;
		_case_end_4538501760:;
		if (!((jule::real(_60429_k->_method_slc())))) { goto _case_end_4538501856; }
		_case_begin_4538501856:;
		{
			return _1b6703d45_get_struct_from_kind(_60429_k->_method_slc()->_field_elem);
		}
		goto _match_end_4538500240;
		_case_end_4538501856:;
		if (!((jule::real(_60429_k->_method_arr())))) { goto _case_end_4538502352; }
		_case_begin_4538502352:;
		{
			return _1b6703d45_get_struct_from_kind(_60429_k->_method_arr()->_field_elem);
		}
		goto _match_end_4538500240;
		_case_end_4538502352:;
		if (!((jule::real(_60429_k->_method_ptr())))) { goto _case_end_4538502448; }
		_case_begin_4538502448:;
		{
			return jule::new_ref<_1ce385eed_Struct>();
		}
		goto _match_end_4538500240;
		_case_end_4538502448:;
		_case_begin_4538500416:;
		{
			return jule::new_ref<_1ce385eed_Struct>();
		}
		goto _match_end_4538500240;
		_case_end_4538500416:;
		_match_end_4538500240:;
	}
}



inline jule::Bool _1b6703d45_is_prim(jule::Str _63312_kind) {
	return (((((((((((((((_63312_kind == jule::Str("i8", 2)) || (_63312_kind == jule::Str("i16", 3))) || (_63312_kind == jule::Str("i32", 3))) || (_63312_kind == jule::Str("i64", 3))) || (_63312_kind == jule::Str("u8", 2))) || (_63312_kind == jule::Str("u16", 3))) || (_63312_kind == jule::Str("u32", 3))) || (_63312_kind == jule::Str("u64", 3))) || (_63312_kind == jule::Str("f32", 3))) || (_63312_kind == jule::Str("f64", 3))) || (_63312_kind == jule::Str("int", 3))) || (_63312_kind == jule::Str("uint", 4))) || (_63312_kind == jule::Str("uintptr", 7))) || (_63312_kind == jule::Str("bool", 4))) || (_63312_kind == jule::Str("str", 3))) || (_63312_kind == jule::Str("any", 3));
}



inline std::tuple<jule::Ref<_1b66b3a3b_SymbolTable>,jule::Slice<_1e7690a81_Log>> _1b6b73ea7_build_symbols(jule::Ref<_1ce2b7acd_Ast>& _1523_ast,jule::Trait<_1b623bb7a_Importer>& _1539_importer,jule::Ref<_1ce50a46e_SymbolBuilder> _1563_owner) {
	jule::Ref<_1ce50a46e_SymbolBuilder> _1613_sb = jule::new_struct_ref<_1ce50a46e_SymbolBuilder>(new( std::nothrow ) _1ce50a46e_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_1e7690a81_Log>(),_1523_ast,jule::Ref<_1b66b3a3b_SymbolTable>()));
	_1613_sb->_method_build();
	if (_1613_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1613_sb->_field_table,nullptr);
	}
	return std::make_tuple(jule::new_ref<_1b66b3a3b_SymbolTable>(),_1613_sb->_field_errors);
}



inline std::tuple<jule::Ref<_1b623bb7a_Package>,jule::Slice<_1e7690a81_Log>> _1b6b73ea7___analyze_package(jule::Slice<jule::Ref<_1ce2b7acd_Ast>>& _2927_files,jule::Trait<_1b623bb7a_Importer>& _2947_importer,jule::Int& _2968_flags) {
	jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>> _3113_tables = jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_2927_files.len())));
	{
		jule::Int _1b6b73ea7_i = 0;
		for (auto _1b6b73ea7_f: _2927_files) {
			{
				jule::Ref<_1b66b3a3b_SymbolTable> _3318_table;
				jule::Slice<_1e7690a81_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _1b6b73ea7_build_symbols(_1b6b73ea7_f,_2947_importer,jule::new_ref<_1ce50a46e_SymbolBuilder>());
				if (_3329_errors.len() > 0LL) {
					return std::make_tuple(jule::new_ref<_1b623bb7a_Package>(),_3329_errors);
				}
				_3113_tables[static_cast<jule::Int>(_1b6b73ea7_i)]=_3318_table;
			}
		_iter_next_4538525616:;
		_1b6b73ea7_i++;
		}
		_iter_end_4538525616:;
	}
	jule::Ref<_1b622b76e_Sema> _4013_sema = jule::new_struct_ref<_1b622b76e_Sema>(new( std::nothrow ) _1b622b76e_Sema(jule::Slice<_1e7690a81_Log>(),jule::Slice<jule::Ref<_1b66b3a3b_SymbolTable>>(),jule::Ref<_1b66b3a3b_SymbolTable>(),_2968_flags));
	_4013_sema->_method_check(_3113_tables);
	if (_4013_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1b623bb7a_Package>(),_4013_sema->_field_errors);
	}
	jule::Ref<_1b623bb7a_Package> _4813_pkg = jule::new_struct<_1b623bb7a_Package>(new( std::nothrow ) _1b623bb7a_Package(_4013_sema->_field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ref<_1b623bb7a_Package>,jule::Slice<_1e7690a81_Log>> _1b6b73ea7_analyze_package(jule::Slice<jule::Ref<_1ce2b7acd_Ast>> _7228_files,jule::Trait<_1b623bb7a_Importer> _7247_importer,jule::Int _7267_flags) {
	if (_7228_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_1b623bb7a_Package>(),nullptr);
	}
	jule::Ref<_1b623bb7a_Package> _7714_package;
	jule::Slice<_1e7690a81_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _1b6b73ea7___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline std::tuple<jule::Ref<_1b66b3a3b_SymbolTable>,jule::Slice<_1e7690a81_Log>> _1b6b73ea7_analyze_file(jule::Ref<_1ce2b7acd_Ast> _9825_f,jule::Trait<_1b623bb7a_Importer> _9838_importer,jule::Int _9858_flags) {
	jule::Slice<jule::Ref<_1ce2b7acd_Ast>> _9913_files = jule::Slice<jule::Ref<_1ce2b7acd_Ast>>({_9825_f});
	jule::Ref<_1b623bb7a_Package> _10014_pkg;
	jule::Slice<_1e7690a81_Log> _10023_errors;
	std::tie(_10014_pkg,_10023_errors) = _1b6b73ea7_analyze_package(_9913_files,_9838_importer,_9858_flags);
	if (_10023_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1b66b3a3b_SymbolTable>(),_10023_errors);
	}
	jule::Ref<_1b66b3a3b_SymbolTable> _10713_table = _10014_pkg->_field_files[0LL];
	return std::make_tuple(_10713_table,nullptr);
}



inline void _1b6c3ed86_init(void) {
	_1b6c3ed86_BUILTIN_FN_OUT->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_out);
	_1b6c3ed86_BUILTIN_FN_OUTLN->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_outln);
	_1b6c3ed86_BUILTIN_FN_NEW->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_new);
	_1b6c3ed86_BUILTIN_FN_REAL->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_real);
	_1b6c3ed86_BUILTIN_FN_DROP->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_drop);
	_1b6c3ed86_BUILTIN_FN_PANIC->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_panic);
	_1b6c3ed86_BUILTIN_FN_MAKE->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_make);
	_1b6c3ed86_BUILTIN_FN_APPEND->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_append);
	_1b6c3ed86_BUILTIN_FN_COPY->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_copy);
	_1b6c3ed86_BUILTIN_FN_RECOVER->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_recover);
	_1b6c3ed86_BUILTIN_FN_CLONE->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_clone);
	_1b6c3ed86_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_std_mem_size_of);
	_1b6c3ed86_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_std_mem_align_of);
	_1b6c3ed86_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_std_jule_integrated_to_str);
	jule::Ref<_1b6069348_Fn> _11213_error_method = _1b6c3ed86_BUILTIN_TRAIT_ERROR->_method_find_method(jule::Str("error", 5));
	jule::Ref<_1b6069348_FnIns> _11313_error_method_ins = _11213_error_method->_method_instance();
	_11313_error_method_ins->_field_result=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("str", 3))));
	_11313_error_method_ins->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common);
	_11213_error_method->_method_append_instance(_11313_error_method_ins);
	jule::Ref<_1b6069348_Fn> _11813_dispose_method = _1b6c3ed86_BUILTIN_TRAIT_DISPOSE->_method_find_method(jule::Str("dispose", 7));
	jule::Ref<_1b6069348_FnIns> _11913_dispose_method_ins = _11813_dispose_method->_method_instance();
	_11913_dispose_method_ins->_field_caller=jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common);
	_11813_dispose_method->_method_append_instance(_11913_dispose_method_ins);
}



inline jule::Ref<_1b6069348_FnIns> _1b6c3ed86_find_builtin_fn(jule::Str _12420_ident) {
	{
		auto _match_expr{ _12420_ident };
		if (!((jule::Str("out", 3)) == _match_expr)) { goto _case_end_4538575184; }
		_case_begin_4538575184:;
		{
			return _1b6c3ed86_BUILTIN_FN_OUT;
		}
		goto _match_end_4538573520;
		_case_end_4538575184:;
		if (!((jule::Str("outln", 5)) == _match_expr)) { goto _case_end_4538575664; }
		_case_begin_4538575664:;
		{
			return _1b6c3ed86_BUILTIN_FN_OUTLN;
		}
		goto _match_end_4538573520;
		_case_end_4538575664:;
		if (!((jule::Str("new", 3)) == _match_expr)) { goto _case_end_4538575008; }
		_case_begin_4538575008:;
		{
			return _1b6c3ed86_BUILTIN_FN_NEW;
		}
		goto _match_end_4538573520;
		_case_end_4538575008:;
		if (!((jule::Str("real", 4)) == _match_expr)) { goto _case_end_4538574800; }
		_case_begin_4538574800:;
		{
			return _1b6c3ed86_BUILTIN_FN_REAL;
		}
		goto _match_end_4538573520;
		_case_end_4538574800:;
		if (!((jule::Str("drop", 4)) == _match_expr)) { goto _case_end_4538574896; }
		_case_begin_4538574896:;
		{
			return _1b6c3ed86_BUILTIN_FN_DROP;
		}
		goto _match_end_4538573520;
		_case_end_4538574896:;
		if (!((jule::Str("panic", 5)) == _match_expr)) { goto _case_end_4538575392; }
		_case_begin_4538575392:;
		{
			return _1b6c3ed86_BUILTIN_FN_PANIC;
		}
		goto _match_end_4538573520;
		_case_end_4538575392:;
		if (!((jule::Str("make", 4)) == _match_expr)) { goto _case_end_4538575488; }
		_case_begin_4538575488:;
		{
			return _1b6c3ed86_BUILTIN_FN_MAKE;
		}
		goto _match_end_4538573520;
		_case_end_4538575488:;
		if (!((jule::Str("append", 6)) == _match_expr)) { goto _case_end_4538574432; }
		_case_begin_4538574432:;
		{
			return _1b6c3ed86_BUILTIN_FN_APPEND;
		}
		goto _match_end_4538573520;
		_case_end_4538574432:;
		if (!((jule::Str("copy", 4)) == _match_expr)) { goto _case_end_4538574528; }
		_case_begin_4538574528:;
		{
			return _1b6c3ed86_BUILTIN_FN_COPY;
		}
		goto _match_end_4538573520;
		_case_end_4538574528:;
		if (!((jule::Str("recover", 7)) == _match_expr)) { goto _case_end_4538574624; }
		_case_begin_4538574624:;
		{
			return _1b6c3ed86_BUILTIN_FN_RECOVER;
		}
		goto _match_end_4538573520;
		_case_end_4538574624:;
		if (!((jule::Str("clone", 5)) == _match_expr)) { goto _case_end_4538573824; }
		_case_begin_4538573824:;
		{
			return _1b6c3ed86_BUILTIN_FN_CLONE;
		}
		goto _match_end_4538573520;
		_case_end_4538573824:;
		_case_begin_4538572912:;
		{
			return jule::new_ref<_1b6069348_FnIns>();
		}
		goto _match_end_4538573520;
		_case_end_4538572912:;
		_match_end_4538573520:;
	}
}



inline jule::Ref<_1b6703d45_TypeAlias> _1b6c3ed86_find_builtin_type_alias(jule::Str _14128_ident) {
	{
		auto _match_expr{ _14128_ident };
		if (!((jule::Str("byte", 4)) == _match_expr)) { goto _case_end_4538582496; }
		_case_begin_4538582496:;
		{
			return _1b6c3ed86_BUILTIN_TYPE_ALIAS_BYTE;
		}
		goto _match_end_4538576768;
		_case_end_4538582496:;
		if (!((jule::Str("rune", 4)) == _match_expr)) { goto _case_end_4538582976; }
		_case_begin_4538582976:;
		{
			return _1b6c3ed86_BUILTIN_TYPE_ALIAS_RUNE;
		}
		goto _match_end_4538576768;
		_case_end_4538582976:;
		_case_begin_4538580240:;
		{
			return jule::new_ref<_1b6703d45_TypeAlias>();
		}
		goto _match_end_4538576768;
		_case_end_4538580240:;
		_match_end_4538576768:;
	}
}



inline jule::Ref<_1b61d7d79_Trait> _1b6c3ed86_find_builtin_trait(jule::Str _14923_ident) {
	{
		auto _match_expr{ _14923_ident };
		if (!((jule::Str("Error", 5)) == _match_expr)) { goto _case_end_4538585184; }
		_case_begin_4538585184:;
		{
			return _1b6c3ed86_BUILTIN_TRAIT_ERROR;
		}
		goto _match_end_4538583312;
		_case_end_4538585184:;
		if (!((jule::Str("Dispose", 7)) == _match_expr)) { goto _case_end_4538585664; }
		_case_begin_4538585664:;
		{
			return _1b6c3ed86_BUILTIN_TRAIT_DISPOSE;
		}
		goto _match_end_4538583312;
		_case_end_4538585664:;
		_case_begin_4538581488:;
		{
			return jule::new_ref<_1b61d7d79_Trait>();
		}
		goto _match_end_4538583312;
		_case_end_4538581488:;
		_match_end_4538583312:;
	}
}



inline jule::Any _1b6c3ed86_find_builtin_def(jule::Str _15721_ident) {
	jule::Ref<_1b6069348_FnIns> _15813_f = _1b6c3ed86_find_builtin_fn(_15721_ident);
	if (jule::real(_15813_f)) {
		return jule::Any(_15813_f);
	}
	jule::Ref<_1b6703d45_TypeAlias> _16313_ta = _1b6c3ed86_find_builtin_type_alias(_15721_ident);
	if (jule::real(_16313_ta)) {
		return jule::Any(_16313_ta);
	}
	jule::Ref<_1b61d7d79_Trait> _16813_t = _1b6c3ed86_find_builtin_trait(_15721_ident);
	if (jule::real(_16813_t)) {
		return jule::Any(_16813_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _1b6c3ed86_find_builtin_def_std_mem(jule::Str _17629_ident) {
	{
		auto _match_expr{ _17629_ident };
		if (!((jule::Str("size_of", 7)) == _match_expr)) { goto _case_end_4538593952; }
		_case_begin_4538593952:;
		{
			return jule::Any(_1b6c3ed86_BUILTIN_FN_STD_MEM_SIZE_OF);
		}
		goto _match_end_4538591232;
		_case_end_4538593952:;
		if (!((jule::Str("align_of", 8)) == _match_expr)) { goto _case_end_4538593456; }
		_case_begin_4538593456:;
		{
			return jule::Any(_1b6c3ed86_BUILTIN_FN_STD_MEM_ALIGN_OF);
		}
		goto _match_end_4538591232;
		_case_end_4538593456:;
		_case_begin_4538591136:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4538591232;
		_case_end_4538591136:;
		_match_end_4538591232:;
	}
}



inline jule::Any _1b6c3ed86_find_builtin_def_std_jule_integrated(jule::Str _18441_ident) {
	{
		auto _match_expr{ _18441_ident };
		if (!((jule::Str("to_str", 6)) == _match_expr)) { goto _case_end_4538596928; }
		_case_begin_4538596928:;
		{
			return jule::Any(_1b6c3ed86_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR);
		}
		goto _match_end_4538595536;
		_case_end_4538596928:;
		_case_begin_4538593088:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4538595536;
		_case_end_4538593088:;
		_match_end_4538595536:;
	}
}



inline jule::Any _1b6c3ed86_find_package_builtin_def(jule::Str _19129_link_path,jule::Str _19145_ident) {
	{
		auto _match_expr{ _19129_link_path };
		if (!((jule::Str("std::mem", 8)) == _match_expr)) { goto _case_end_4538599808; }
		_case_begin_4538599808:;
		{
			return _1b6c3ed86_find_builtin_def_std_mem(_19145_ident);
		}
		goto _match_end_4538597792;
		_case_end_4538599808:;
		if (!((jule::Str("std::jule::integrated", 21)) == _match_expr)) { goto _case_end_4538599312; }
		_case_begin_4538599312:;
		{
			return _1b6c3ed86_find_builtin_def_std_jule_integrated(_19145_ident);
		}
		goto _match_end_4538597792;
		_case_end_4538599312:;
		_case_begin_4538597680:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4538597792;
		_case_end_4538597680:;
		_match_end_4538597792:;
	}
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_common_plain(jule::Ref<_1b66db129_Eval>& _19937_e,jule::Ref<_1ce385d22_FnCallExpr>& _19952_fc,jule::Ref<_1b66db129_Data>& _19974_d) {
	jule::Ref<_1b6069348_FnIns> _20013_f = _19974_d->_field_kind->_method_fnc();
	_1b65a085c_FnCallArgChecker _20213_fcac = _1b65a085c_FnCallArgChecker(_19937_e,_19952_fc->_field_args,_19952_fc->_field_token,_20013_f,false,jule::Slice<jule::Any>());
	_20213_fcac._method_check();
	jule::Ref<_1b61decc6_FnCallExprModel> _21113_model = jule::new_struct<_1b61decc6_FnCallExprModel>(new( std::nothrow ) _1b61decc6_FnCallExprModel(_20013_f,_19952_fc->_field_concurrent,_19974_d->_field_model,_20213_fcac._field_arg_models));
	if ((!(jule::real(_20013_f->_field_result)))) {
		_19974_d=_1b66db129_build_void_data();
	} else {
		_19974_d=jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(_20013_f->_field_result,jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
	}
	_19974_d->_field_model=jule::Any(_21113_model);
	return _19974_d;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_common(jule::Ref<_1b66db129_Eval>& _23031_e,jule::Ref<_1ce385d22_FnCallExpr>& _23046_fc,jule::Ref<_1b66db129_Data>& _23068_d) {
	if (_23046_fc->_field_generics.len() > 0LL) {
		_23031_e->_method_push_err(_23046_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	return _1b6c3ed86_builtin_caller_common_plain(_23031_e,_23046_fc,_23068_d);
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_common_mut(jule::Ref<_1b66db129_Eval>& _23835_e,jule::Ref<_1ce385d22_FnCallExpr>& _23850_fc,jule::Ref<_1b66db129_Data>& _23872_d) {
	if ((!(_23872_d->_field_mutable))) {
		_23835_e->_method_push_err(_23850_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	return _1b6c3ed86_builtin_caller_common(_23835_e,_23850_fc,_23872_d);
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_out(jule::Ref<_1b66db129_Eval>& _24528_e,jule::Ref<_1ce385d22_FnCallExpr>& _24543_fc,jule::Ref<_1b66db129_Data>& ) {
	if (_24543_fc->_field_generics.len() > 0LL) {
		_24528_e->_method_push_err(_24543_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_24543_fc->_field_args.len() < 1LL) {
		_24528_e->_method_push_err(_24543_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_24543_fc->_field_args.len() > 1LL) {
		_24528_e->_method_push_err(_24543_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _25713_expr = _24528_e->_method_eval_expr(_24543_fc->_field_args[0LL]);
	if ((!(jule::real(_25713_expr)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if ((_25713_expr->_method_is_void() || jule::real(_25713_expr->_field_kind->_method_fnc())) || jule::real(_25713_expr->_field_kind->_method_tup())) {
		_24528_e->_method_push_err(_24543_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b66db129_Data> _26713_d = _1b66db129_build_void_data();
	_26713_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_BuiltinOutCallExprModel>(new( std::nothrow ) _1b61decc6_BuiltinOutCallExprModel(_25713_expr->_field_model)));
	return _26713_d;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_outln(jule::Ref<_1b66db129_Eval>& _27230_e,jule::Ref<_1ce385d22_FnCallExpr>& _27245_fc,jule::Ref<_1b66db129_Data>& _27267_d) {
	_27267_d=_1b6c3ed86_builtin_caller_out(_27230_e,_27245_fc,_27267_d);
	if ((!(jule::real(_27267_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	_27267_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_BuiltinOutlnCallExprModel>(new( std::nothrow ) _1b61decc6_BuiltinOutlnCallExprModel(_27267_d->_field_model.operator jule::Ref<_1b61decc6_BuiltinOutCallExprModel>()->_field_expr)));
	return _27267_d;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_new(jule::Ref<_1b66db129_Eval>& _28428_e,jule::Ref<_1ce385d22_FnCallExpr>& _28443_fc,jule::Ref<_1b66db129_Data>& _28465_d) {
	if (_28443_fc->_field_generics.len() > 0LL) {
		_28428_e->_method_push_err(_28443_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_28443_fc->_field_args.len() < 1LL) {
		_28428_e->_method_push_err(_28443_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_28443_fc->_field_args.len() > 2LL) {
		_28428_e->_method_push_err(_28443_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _29613_t = _28428_e->_method_eval_expr_kind(_28443_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_29613_t)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if ((!(_29613_t->_field_decl))) {
		_28428_e->_method_push_err(_28443_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	if ((!(_1b6703d45_is_valid_for_ref_type(_29613_t->_field_kind)))) {
		jule::Ref<_1ce385eed_StructIns> _30717_s = _29613_t->_field_kind->_method_strct();
		if ((jule::real(_30717_s) && jule::real(_30717_s->_field_decl)) && _30717_s->_field_decl->_field_cpp_linked) {
			_28428_e->_method_push_err(_28443_fc->_field_args[0LL]->_field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
		} else {
			_28428_e->_method_push_err(_28443_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_1b66db129_Data>();
	}
	_28465_d->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1b6703d45_Ref>(new( std::nothrow ) _1b6703d45_Ref(_29613_t->_field_kind->_method_clone()))));
	if (_28443_fc->_field_args.len() == 2LL) {
		jule::Ref<_1b66db129_Data> _31917_init = _28428_e->_field_s->_method_evalp(_28428_e->_field_lookup,_29613_t->_field_kind)->_method_eval_expr(_28443_fc->_field_args[1LL]);
		if (jule::real(_31917_init)) {
			_29613_t->_field_mutable=true;
			_1b61e873b_check_mut(_28428_e->_field_s,_29613_t,_31917_init,_28443_fc->_field_args[1LL]->_field_token);
			_28428_e->_field_s->_method_check_assign_type(false,_29613_t->_field_kind,_31917_init,_28443_fc->_field_args[1LL]->_field_token,false);
			if (jule::real(_31917_init->_field_kind->_method_ref())) {
				_31917_init->_field_model=jule::Any(jule::new_struct<_1b61decc6_ExplicitDerefExprModel>(new( std::nothrow ) _1b61decc6_ExplicitDerefExprModel(_31917_init->_field_model)));
			}
			_28465_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_BuiltinNewCallExprModel>(new( std::nothrow ) _1b61decc6_BuiltinNewCallExprModel(_29613_t->_field_kind,_31917_init->_field_model)));
		}
	} else {
		_28465_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_BuiltinNewCallExprModel>(new( std::nothrow ) _1b61decc6_BuiltinNewCallExprModel(_29613_t->_field_kind,jule::Any())));
	}
	return _28465_d;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_real(jule::Ref<_1b66db129_Eval>& _34329_e,jule::Ref<_1ce385d22_FnCallExpr>& _34344_fc,jule::Ref<_1b66db129_Data>& _34366_d) {
	if (_34344_fc->_field_generics.len() > 0LL) {
		_34329_e->_method_push_err(_34344_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_34344_fc->_field_args.len() < 1LL) {
		_34329_e->_method_push_err(_34344_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_34344_fc->_field_args.len() > 1LL) {
		_34329_e->_method_push_err(_34344_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _35513_ref = _34329_e->_method_eval_expr(_34344_fc->_field_args[0LL]);
	if ((!(jule::real(_35513_ref)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if ((!(jule::real(_35513_ref->_field_kind->_method_ref())))) {
		_34329_e->_method_push_err(_34344_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_34329_e->_method_push_suggestion(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	_34366_d->_field_kind=_1b6c3ed86_BUILTIN_FN_REAL->_field_result;
	_34366_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_BuiltinRealCallExprModel>(new( std::nothrow ) _1b61decc6_BuiltinRealCallExprModel(_35513_ref->_field_model)));
	return _34366_d;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_drop(jule::Ref<_1b66db129_Eval>& _37129_e,jule::Ref<_1ce385d22_FnCallExpr>& _37144_fc,jule::Ref<_1b66db129_Data>& ) {
	if (_37144_fc->_field_generics.len() > 0LL) {
		_37129_e->_method_push_err(_37144_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_37144_fc->_field_args.len() < 1LL) {
		_37129_e->_method_push_err(_37144_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_37144_fc->_field_args.len() > 1LL) {
		_37129_e->_method_push_err(_37144_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _38313_ref = _37129_e->_method_eval_expr(_37144_fc->_field_args[0LL]);
	if ((!(jule::real(_38313_ref)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if ((!(jule::real(_38313_ref->_field_kind->_method_ref())))) {
		_37129_e->_method_push_err(_37144_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_37129_e->_method_push_suggestion(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	_1b61e873b_check_mut(_37129_e->_field_s,_38313_ref,jule::new_ref<_1b66db129_Data>(),_37144_fc->_field_args[0LL]->_field_token);
	jule::Ref<_1b66db129_Data> _39613_d = _1b66db129_build_void_data();
	_39613_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_BuiltinDropCallExprModel>(new( std::nothrow ) _1b61decc6_BuiltinDropCallExprModel(_38313_ref->_field_model)));
	return _39613_d;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_panic(jule::Ref<_1b66db129_Eval>& _40130_e,jule::Ref<_1ce385d22_FnCallExpr>& _40145_fc,jule::Ref<_1b66db129_Data>& ) {
	if (_40145_fc->_field_generics.len() > 0LL) {
		_40130_e->_method_push_err(_40145_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_40145_fc->_field_args.len() < 1LL) {
		_40130_e->_method_push_err(_40145_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("error", 5))}));
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_40145_fc->_field_args.len() > 1LL) {
		_40130_e->_method_push_err(_40145_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _41313_expr = _40130_e->_method_eval_expr(_40145_fc->_field_args[0LL]);
	if ((!(jule::real(_41313_expr)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if (jule::real(_41313_expr->_field_kind->_method_strct())) {
		jule::Ref<_1ce385eed_StructIns> _41913_s = _41313_expr->_field_kind->_method_strct();
		if (_41913_s->_field_decl->_method_is_implements(_1b6c3ed86_BUILTIN_TRAIT_ERROR)) {
			_41313_expr->_field_cast_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6c3ed86_BUILTIN_TRAIT_ERROR));
			_1b66db129_apply_cast_kind(_41313_expr);
		}
	}
	jule::Ref<_1b66db129_Data> _42813_d = _1b66db129_build_void_data();
	_42813_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_BuiltinPanicCallExprModel>(new( std::nothrow ) _1b61decc6_BuiltinPanicCallExprModel(_41313_expr->_field_model)));
	return _42813_d;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_make(jule::Ref<_1b66db129_Eval>& _43329_e,jule::Ref<_1ce385d22_FnCallExpr>& _43344_fc,jule::Ref<_1b66db129_Data>& _43366_d) {
	if (_43344_fc->_field_generics.len() > 0LL) {
		_43329_e->_method_push_err(_43344_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_43344_fc->_field_args.len() < 2LL) {
		if (_43344_fc->_field_args.len() == 1LL) {
			_43329_e->_method_push_err(_43344_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return jule::new_ref<_1b66db129_Data>();
		}
		_43329_e->_method_push_err(_43344_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_43344_fc->_field_args.len() > 3LL) {
		_43329_e->_method_push_err(_43344_fc->_field_args[3LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _44913_t = _43329_e->_method_eval_expr_kind(_43344_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_44913_t)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if ((!(_44913_t->_field_decl)) || (!(jule::real(_44913_t->_field_kind->_method_slc())))) {
		_43329_e->_method_push_err(_43344_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	_43366_d->_field_kind=_44913_t->_field_kind;
	jule::Ref<_1b66db129_Data> _46113_len = _43329_e->_field_s->_method_evalp(_43329_e->_field_lookup,_44913_t->_field_kind)->_method_eval_expr(_43344_fc->_field_args[1LL]);
	if ((!(jule::real(_46113_len)))) {
		return _43366_d;
	}
	_43329_e->_method_check_integer_indexing_by_data(_46113_len,_43344_fc->_field_args[1LL]->_field_token);
	if (_43344_fc->_field_args.len() == 3LL) {
		jule::Ref<_1b66db129_Data> _46917_cap = _43329_e->_field_s->_method_evalp(_43329_e->_field_lookup,_44913_t->_field_kind)->_method_eval_expr(_43344_fc->_field_args[2LL]);
		if ((!(jule::real(_46917_cap)))) {
			return _43366_d;
		}
		_43329_e->_method_check_integer_indexing_by_data(_46917_cap,_43344_fc->_field_args[2LL]->_field_token);
		_43366_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_BuiltinMakeCallExprModel>(new( std::nothrow ) _1b61decc6_BuiltinMakeCallExprModel(_44913_t->_field_kind,_46113_len->_field_model,_46917_cap->_field_model)));
	} else {
		_43366_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_BuiltinMakeCallExprModel>(new( std::nothrow ) _1b61decc6_BuiltinMakeCallExprModel(_44913_t->_field_kind,_46113_len->_field_model,jule::Any())));
	}
	return _43366_d;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_append(jule::Ref<_1b66db129_Eval>& _49031_e,jule::Ref<_1ce385d22_FnCallExpr>& _49046_fc,jule::Ref<_1b66db129_Data>& _49068_d) {
	if (_49046_fc->_field_generics.len() > 0LL) {
		_49031_e->_method_push_err(_49046_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_49046_fc->_field_args.len() < 2LL) {
		if (_49046_fc->_field_args.len() == 1LL) {
			_49031_e->_method_push_err(_49046_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_1b66db129_Data>();
		}
		_49031_e->_method_push_err(_49046_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b66db129_Data> _50313_t = _49031_e->_method_eval_expr(_49046_fc->_field_args[0LL]);
	if ((!(jule::real(_50313_t)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Bool _50813_ref = false;
	if (jule::real(_50313_t->_field_kind->_method_ref())) {
		_50313_t->_field_kind=_50313_t->_field_kind->_method_ref()->_field_elem;
		_50813_ref=true;
	}
	if ((!(jule::real(_50313_t->_field_kind->_method_slc())))) {
		_49031_e->_method_push_err(_49046_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Ref<_1b6069348_FnIns> _51913_f = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>({jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str())),_50313_t->_field_kind->_method_clone())),jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),true,true,jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str())),_50313_t->_field_kind->_method_slc()->_field_elem->_method_clone()))}),_50313_t->_field_kind->_method_clone(),jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_49068_d->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_51913_f));
	_49068_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_CommonIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonIdentExprModel(jule::Str("append", 6))));
	_49068_d=_1b6c3ed86_builtin_caller_common_plain(_49031_e,_49046_fc,_49068_d);
	if (jule::real(_49068_d)) {
		jule::Ref<_1b61decc6_FnCallExprModel> _54317_model = _49068_d->_field_model.operator jule::Ref<_1b61decc6_FnCallExprModel>();
		if (_50813_ref) {
			_54317_model->_field_args[0LL]=jule::Any(jule::new_struct<_1b61decc6_ExplicitDerefExprModel>(new( std::nothrow ) _1b61decc6_ExplicitDerefExprModel(_50313_t->_field_model)));
		}
		_49068_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_BuiltinAppendCallExprModel>(new( std::nothrow ) _1b61decc6_BuiltinAppendCallExprModel(_54317_model->_field_args[0LL],_54317_model->_field_args[1LL])));
	}
	return _49068_d;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_copy(jule::Ref<_1b66db129_Eval>& _55729_e,jule::Ref<_1ce385d22_FnCallExpr>& _55744_fc,jule::Ref<_1b66db129_Data>& _55766_d) {
	if (_55744_fc->_field_generics.len() > 0LL) {
		_55729_e->_method_push_err(_55744_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_55744_fc->_field_args.len() < 2LL) {
		if (_55744_fc->_field_args.len() == 1LL) {
			_55729_e->_method_push_err(_55744_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_1b66db129_Data>();
		}
		_55729_e->_method_push_err(_55744_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_55744_fc->_field_args.len() > 2LL) {
		_55729_e->_method_push_err(_55744_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _57313_t = _55729_e->_method_eval_expr(_55744_fc->_field_args[0LL]);
	if ((!(jule::real(_57313_t)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Bool _57813_ref = false;
	if (jule::real(_57313_t->_field_kind->_method_ref())) {
		_57313_t->_field_kind=_57313_t->_field_kind->_method_ref()->_field_elem;
		_57813_ref=false;
	}
	if ((!(jule::real(_57313_t->_field_kind->_method_slc())))) {
		_55729_e->_method_push_err(_55744_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	if ((!(_57313_t->_field_mutable))) {
		_55729_e->_method_push_err(_55744_fc->_field_args[0LL]->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b6069348_FnIns> _59313_f = jule::new_struct<_1b6069348_FnIns>(new( std::nothrow ) _1b6069348_FnIns(jule::Ref<_1ce385eed_StructIns>(),jule::Ref<_1b6069348_Fn>(),jule::Slice<jule::Ref<_1b6703d45_TypeKind>>(),jule::Slice<jule::Ref<_1b6069348_ParamIns>>({jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param()),_57313_t->_field_kind->_method_clone())),jule::new_struct<_1b6069348_ParamIns>(new( std::nothrow ) _1b6069348_ParamIns(jule::new_struct_ref<_1b6069348_Param>(new( std::nothrow ) _1b6069348_Param(_1ce35e3a0_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1b6703d45_TypeSymbol>(),jule::Str())),_57313_t->_field_kind->_method_clone()))}),_1b6c3ed86_BUILTIN_FN_COPY->_field_result,jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Ref<_1ce50a46e_ReferenceStack>(),jule::Fn<jule::Ref<_1b66db129_Data>(jule::Ref<_1b66db129_Eval>&,jule::Ref<_1ce385d22_FnCallExpr>&,jule::Ref<_1b66db129_Data>&)>(_1b6c3ed86_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_55766_d->_field_kind=jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_59313_f));
	_55766_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_CommonIdentExprModel>(new( std::nothrow ) _1b61decc6_CommonIdentExprModel(jule::Str("copy", 4))));
	_55766_d=_1b6c3ed86_builtin_caller_common_plain(_55729_e,_55744_fc,_55766_d);
	if (jule::real(_55766_d) && _57813_ref) {
		_55766_d->_field_model.operator jule::Ref<_1b61decc6_FnCallExprModel>()->_field_args[0LL]=jule::Any(jule::new_struct<_1b61decc6_ExplicitDerefExprModel>(new( std::nothrow ) _1b61decc6_ExplicitDerefExprModel(_57313_t->_field_model)));
	}
	return _55766_d;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_recover(jule::Ref<_1b66db129_Eval>& _62232_e,jule::Ref<_1ce385d22_FnCallExpr>& _62247_fc,jule::Ref<_1b66db129_Data>& ) {
	if (_62247_fc->_field_generics.len() > 0LL) {
		_62232_e->_method_push_err(_62247_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	
	if (_62247_fc->_field_args.len() < 1LL) {
		_62232_e->_method_push_err(_62247_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("handler", 7))}));
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_62247_fc->_field_args.len() > 1LL) {
		_62232_e->_method_push_err(_62247_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _63613_t = _62232_e->_method_eval_expr(_62247_fc->_field_args[0LL]);
	if ((!(jule::real(_63613_t)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	if ((!(jule::real(_63613_t->_field_kind->_method_fnc())))) {
		_62232_e->_method_push_err(_62247_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Str _6469_tkind = _63613_t->_field_kind->_method_fnc()->_method_to_str();
	if (_6469_tkind != jule::Str("fn(Error)", 9)) {
		_62232_e->_method_push_err(_62247_fc->_field_args[0LL]->_field_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_6469_tkind),jule::Any(jule::Str("fn(Error)", 9))}));
	}
	jule::Ref<_1b66db129_Data> _65113_d = _1b66db129_build_void_data();
	_65113_d->_field_kind=_63613_t->_field_kind->_method_clone();
	_65113_d->_field_model=jule::Any(jule::new_struct<_1b61e873b_Recover>(new( std::nothrow ) _1b61e873b_Recover(jule::Ref<_1b6069348_FnIns>(),_63613_t->_field_model,jule::Ref<_1b61e873b_Scope>(),jule::Ref<_1b6069348_FnIns>())));
	return _65113_d;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_clone(jule::Ref<_1b66db129_Eval>& _65930_e,jule::Ref<_1ce385d22_FnCallExpr>& _65945_fc,jule::Ref<_1b66db129_Data>& ) {
	if (_65945_fc->_field_generics.len() > 0LL) {
		_65930_e->_method_push_err(_65945_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_65945_fc->_field_args.len() < 1LL) {
		_65930_e->_method_push_err(_65945_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_65945_fc->_field_args.len() > 1LL) {
		_65930_e->_method_push_err(_65945_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _67213_d = _65930_e->_method_eval_expr_kind(_65945_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_67213_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	jule::Fn<void(jule::Ref<_1b6703d45_TypeKind>)> _6779_check_kind = jule::Fn<void(jule::Ref<_1b6703d45_TypeKind>)>([=](jule::Ref<_1b6703d45_TypeKind> _67729_k) mutable -> void {
		{
			if (!((jule::real(_67729_k->_method_slc())))) { goto _case_end_4538895136; }
			_case_begin_4538895136:;
			{
				if ((!(_67729_k->_method_slc()->_field_elem->_method_supports_cloning()))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4538894176;
			_case_end_4538895136:;
			if (!((jule::real(_67729_k->_method_map())))) { goto _case_end_4538894640; }
			_case_begin_4538894640:;
			{
				jule::Ref<_1b6703d45_Map> _68517_m = _67729_k->_method_map();
				if ((!(_68517_m->_field_key->_method_supports_cloning())) || (!(_68517_m->_field_val->_method_supports_cloning()))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4538894176;
			_case_end_4538894640:;
			if (!((jule::real(_67729_k->_method_arr())))) { goto _case_end_4538894736; }
			_case_begin_4538894736:;
			{
				if ((!(_67729_k->_method_arr()->_field_elem->_method_supports_cloning()))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4538894176;
			_case_end_4538894736:;
			if (!((jule::real(_67729_k->_method_ref())))) { goto _case_end_4538894832; }
			_case_begin_4538894832:;
			{
				if ((!(_67729_k->_method_ref()->_field_elem->_method_supports_cloning()))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4538894176;
			_case_end_4538894832:;
			if (!((jule::real(_67729_k->_method_strct())))) { goto _case_end_4538894928; }
			_case_begin_4538894928:;
			{
				jule::Ref<_1ce385eed_StructIns> _70117_s = _67213_d->_field_kind->_method_strct();
				if ((!(_70117_s->_field_mutable))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any(_67213_d->_field_kind->_method_to_str())}));
				}
				if (((!(jule::real(_70117_s->_field_decl))) || _70117_s->_field_decl->_field_cpp_linked) || (!(_70117_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_67213_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				}
			}
			goto _match_end_4538894176;
			_case_end_4538894928:;
			_case_begin_4538894352:;
			{
				_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_67213_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
			}
			goto _match_end_4538894176;
			_case_end_4538894352:;
			_match_end_4538894176:;
		}
	});
	{
		if (!(((!(_67213_d->_field_lvalue))))) { goto _case_end_4538918640; }
		_case_begin_4538918640:;
		{
			_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("non-lvalue expressions cannot be clone", 38),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4538929392;
		_case_end_4538918640:;
		if (!(((!(_67213_d->_field_kind->_method_supports_cloning()))))) { goto _case_end_4538918736; }
		_case_begin_4538918736:;
		{
			_6779_check_kind(_67213_d->_field_kind);
		}
		goto _match_end_4538929392;
		_case_end_4538918736:;
		_match_end_4538929392:;
	}
	_67213_d->_field_mutable=true;
	_67213_d->_field_model=jule::Any(jule::new_struct<_1b61decc6_BuiltinCloneCallExprModel>(new( std::nothrow ) _1b61decc6_BuiltinCloneCallExprModel(_67213_d->_field_model)));
	return _67213_d;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_std_mem_size_of(jule::Ref<_1b66db129_Eval>& _72740_e,jule::Ref<_1ce385d22_FnCallExpr>& _72755_fc,jule::Ref<_1b66db129_Data>& ) {
	if (_72755_fc->_field_generics.len() > 0LL) {
		_72740_e->_method_push_err(_72755_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _73113_result = jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
	if (_72755_fc->_field_args.len() < 1LL) {
		_72740_e->_method_push_err(_72755_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _73113_result;
	}
	if (_72755_fc->_field_args.len() > 1LL) {
		_72740_e->_method_push_err(_72755_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _74313_d = _72740_e->_method_eval_expr_kind(_72755_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_74313_d)))) {
		return _73113_result;
	}
	_73113_result->_field_model=jule::Any(jule::new_struct<_1b61decc6_SizeofExprModel>(new( std::nothrow ) _1b61decc6_SizeofExprModel(_74313_d->_field_model)));
	return _73113_result;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_std_mem_align_of(jule::Ref<_1b66db129_Eval>& _75241_e,jule::Ref<_1ce385d22_FnCallExpr>& _75256_fc,jule::Ref<_1b66db129_Data>& ) {
	if (_75256_fc->_field_generics.len() > 0LL) {
		_75241_e->_method_push_err(_75256_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _75613_result = jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
	if (_75256_fc->_field_args.len() < 1LL) {
		_75241_e->_method_push_err(_75256_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _75613_result;
	}
	if (_75256_fc->_field_args.len() > 1LL) {
		_75241_e->_method_push_err(_75256_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _76813_d = _75241_e->_method_eval_expr_kind(_75256_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_76813_d)))) {
		return _75613_result;
	}
	_75613_result->_field_model=jule::Any(jule::new_struct<_1b61decc6_AlignofExprModel>(new( std::nothrow ) _1b61decc6_AlignofExprModel(_76813_d->_field_model)));
	return _75613_result;
}



inline jule::Ref<_1b66db129_Data> _1b6c3ed86_builtin_caller_std_jule_integrated_to_str(jule::Ref<_1b66db129_Eval>& _77751_e,jule::Ref<_1ce385d22_FnCallExpr>& _77766_fc,jule::Ref<_1b66db129_Data>& ) {
	if (_77766_fc->_field_generics.len() > 0LL) {
		_77751_e->_method_push_err(_77766_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_77766_fc->_field_args.len() < 1LL) {
		_77751_e->_method_push_err(_77766_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_1b66db129_Data>();
	}
	if (_77766_fc->_field_args.len() > 1LL) {
		_77751_e->_method_push_err(_77766_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b66db129_Data> _79013_d = _77751_e->_method_eval_expr_kind(_77766_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_79013_d)))) {
		return jule::new_ref<_1b66db129_Data>();
	}
	return jule::new_struct<_1b66db129_Data>(new( std::nothrow ) _1b66db129_Data(jule::new_struct_ref<_1b6703d45_TypeKind>(new( std::nothrow ) _1b6703d45_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1b6703d45_build_prim_type(jule::Str("str", 3)))),jule::Ref<_1b6703d45_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b61decc6_IntegratedToStrExprModel>(new( std::nothrow ) _1b61decc6_IntegratedToStrExprModel(_79013_d->_field_model))),jule::Bool(),jule::Ref<_1b6d4076c_Const>()));
}



inline std::tuple<jule::Bool,jule::Bool> _1cde55d87_check_os(jule::Str _1013_arg) {
	jule::Bool _1025_ok = jule::Bool();
	jule::Bool _1035_exist = jule::Bool();
	_1025_ok=false;
	_1035_exist=true;
	{
		auto _match_expr{ _1013_arg };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4544922608; }
		_case_begin_4544922608:;
		{
			_1025_ok=_1e7731968_is_windows(_1ce039ac5_OS);
		}
		goto _match_end_4544921968;
		_case_end_4544922608:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4544923120; }
		_case_begin_4544923120:;
		{
			_1025_ok=_1e7731968_is_darwin(_1ce039ac5_OS);
		}
		goto _match_end_4544921968;
		_case_end_4544923120:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4544923584; }
		_case_begin_4544923584:;
		{
			_1025_ok=_1e7731968_is_linux(_1ce039ac5_OS);
		}
		goto _match_end_4544921968;
		_case_end_4544923584:;
		if (!((jule::Str("unix", 4)) == _match_expr)) { goto _case_end_4544922912; }
		_case_begin_4544922912:;
		{
			_1025_ok=_1e7731968_is_unix(_1ce039ac5_OS);
		}
		goto _match_end_4544921968;
		_case_end_4544922912:;
		_case_begin_4544921776:;
		{
			_1025_ok=true;
			_1035_exist=false;
		}
		goto _match_end_4544921968;
		_case_end_4544921776:;
		_match_end_4544921968:;
	}
	return std::make_tuple(_1025_ok,_1035_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1cde55d87_check_arch(jule::Str _2715_arg) {
	jule::Bool _2727_ok = jule::Bool();
	jule::Bool _2737_exist = jule::Bool();
	_2727_ok=false;
	_2737_exist=true;
	{
		auto _match_expr{ _2715_arg };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4544929504; }
		_case_begin_4544929504:;
		{
			_2727_ok=_1e7731968_is_i386(_1ce039ac5_ARCH);
		}
		goto _match_end_4544928352;
		_case_end_4544929504:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4544929968; }
		_case_begin_4544929968:;
		{
			_2727_ok=_1e7731968_is_amd64(_1ce039ac5_ARCH);
		}
		goto _match_end_4544928352;
		_case_end_4544929968:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4544929296; }
		_case_begin_4544929296:;
		{
			_2727_ok=_1e7731968_is_arm64(_1ce039ac5_ARCH);
		}
		goto _match_end_4544928352;
		_case_end_4544929296:;
		if (!((jule::Str("64bit", 5)) == _match_expr)) { goto _case_end_4544928544; }
		_case_begin_4544928544:;
		{
			_2727_ok=_1e7731968_is_64bit(_1ce039ac5_ARCH);
		}
		goto _match_end_4544928352;
		_case_end_4544928544:;
		if (!((jule::Str("32bit", 5)) == _match_expr)) { goto _case_end_4544928640; }
		_case_begin_4544928640:;
		{
			_2727_ok=_1e7731968_is_32bit(_1ce039ac5_ARCH);
		}
		goto _match_end_4544928352;
		_case_end_4544928640:;
		_case_begin_4544928160:;
		{
			_2727_ok=true;
			_2737_exist=false;
		}
		goto _match_end_4544928352;
		_case_end_4544928160:;
		_match_end_4544928352:;
	}
	return std::make_tuple(_2727_ok,_2737_exist);
}



inline jule::Bool _1cde55d87_is_pass_file_annotation(jule::Str _4632_p) {
	_4632_p=_1e777b83c_base(_4632_p);
	jule::I64 _489_n = _4632_p.len();
	_4632_p=_4632_p.slice(0LL,static_cast<jule::Int>(_489_n - _1e777b83c_ext(_4632_p).len()));
	jule::Str _5413_a1 = jule::Str("", 0);
	jule::Str _5713_a2 = jule::Str("", 0);
	jule::Int _6013_i = _4632_p.rfind(jule::Str("_", 1));
	if (_6013_i == -1LL) {
		jule::Bool _6318_ok;
		jule::Bool _6326_exist;
		std::tie(_6318_ok,_6326_exist) = _1cde55d87_check_os(_4632_p);
		if (_6326_exist) {
			return _6318_ok;
		}
		std::tie(_6318_ok,_6326_exist) = _1cde55d87_check_arch(_4632_p);
		return (!(_6326_exist)) || _6318_ok;
	}
	if ((_6013_i + 1LL) >= _489_n) {
		return true;
	}
	_5413_a1=_4632_p.slice(static_cast<jule::Int>(_6013_i + 1LL));
	_4632_p=_4632_p.slice(0LL,static_cast<jule::Int>(_6013_i));
	_6013_i=static_cast<jule::Int>(_4632_p.rfind(jule::Str("_", 1)));
	if (_6013_i != -1LL) {
		_5713_a2=_4632_p.slice(static_cast<jule::Int>(_6013_i + 1LL));
	}
	if (_5713_a2 == jule::Str("", 0)) {
		jule::Bool _8418_ok;
		jule::Bool _8426_exist;
		std::tie(_8418_ok,_8426_exist) = _1cde55d87_check_os(_5413_a1);
		if (_8426_exist) {
			return _8418_ok;
		}
		std::tie(_8418_ok,_8426_exist) = _1cde55d87_check_arch(_5413_a1);
		return (!(_8426_exist)) || _8418_ok;
	}
	jule::Bool _9214_ok;
	jule::Bool _9222_exist;
	std::tie(_9214_ok,_9222_exist) = _1cde55d87_check_arch(_5413_a1);
	if (_9222_exist) {
		if ((!(_9214_ok))) {
			return false;
		}
		jule::Bool _9714_ok;
		jule::Bool _9718_exist;
		std::tie(_9714_ok,_9718_exist) = _1cde55d87_check_os(_5713_a2);
		return (!(_9718_exist)) || _9714_ok;
	}
	std::tie(_9214_ok,_9222_exist) = _1cde55d87_check_os(_5413_a1);
	return (!(_9222_exist)) || _9214_ok;
}



inline jule::Bool _1cde5645e_eval_directive_ident(jule::Str _625_ident) {
	if (_625_ident == jule::Str("", 0)) {
		return false;
	}
	for (auto _1cde5645e_flag: _1cde565e6_FLAGS) {
		{
			if (_1cde5645e_flag == _625_ident) {
				return true;
			}
		}
	_iter_next_4544952464:;
	}
	_iter_end_4544952464:;
	return false;
}



inline jule::Bool _1cde5645e_eval_directive_part(jule::Str _2228_part) {
	jule::Bool _239_logical_not = _2228_part[0LL] == '!';
	if (_239_logical_not) {
		_2228_part=_2228_part.slice(1LL);
	}
	jule::Bool _2813_result = _1cde5645e_eval_directive_ident(_2228_part);
	if (_239_logical_not) {
		_2813_result=(!(_2813_result));
	}
	return _2813_result;
}



inline jule::Slice<jule::Str> _1cde5645e_split_operans(jule::Str _3718_op,jule::Str _3727_expr) {
	jule::Slice<jule::Str> _3813_parts = jule::Slice<jule::Str>::alloc(0LL,10LL);
	jule::Int _4013_range_n = 0LL;
	jule::Int _4113_i = 0LL;
	jule::Int _4213_last = 0LL;
	for (; _4113_i < (_3727_expr.len() - 1LL); (_4113_i)++) {
		{
			jule::U8 _4413_b = _3727_expr[static_cast<jule::Int>(_4113_i)];
			if (_4413_b == '(') {
				(_4013_range_n)++;
				goto _iter_next_4544965744;
			} else if (_4413_b == ')') {
				(_4013_range_n)--;
			}
			if (_4013_range_n > 0LL) {
				goto _iter_next_4544965744;
			}
			{
				auto _match_expr{ _3718_op };
				if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4544970640; }
				_case_begin_4544970640:;
				{
					if ((_4413_b == '|') && (_3727_expr[static_cast<jule::Int>(_4113_i + 1LL)] == '|')) {
						_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last),static_cast<jule::Int>(_4113_i))}));
						_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
					}
				}
				goto _match_end_4544972464;
				_case_end_4544970640:;
				if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4544972736; }
				_case_begin_4544972736:;
				{
					if ((_4413_b == '&') && (_3727_expr[static_cast<jule::Int>(_4113_i + 1LL)] == '&')) {
						_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last),static_cast<jule::Int>(_4113_i))}));
						_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
					}
				}
				goto _match_end_4544972464;
				_case_end_4544972736:;
				_match_end_4544972464:;
			}
		}
	_iter_next_4544965744:;
	}
	_iter_end_4544965744:;
	if (_4213_last < _3727_expr.len()) {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last))}));
	} else {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({jule::Str("", 0)}));
	}
	return _3813_parts;
}



inline jule::Bool _1cde5645e_eval_directive_expr(jule::Str _8724_expr) {
	if (_8724_expr == jule::Str("", 0)) {
		return false;
	}
	jule::Bool _9213_result = false;
	jule::Slice<jule::Str> _949_logical_or_parts = _1cde5645e_split_operans(jule::Str("||", 2),_8724_expr);
	for (auto _1cde5645e_part: _949_logical_or_parts) {
		{
			if (_1cde5645e_part == jule::Str("", 0)) {
				return false;
			}
			jule::Bool _10017_and = true;
			jule::Slice<jule::Str> _10113_logical_and_parts = _1cde5645e_split_operans(jule::Str("&&", 2),_1cde5645e_part);
			for (auto _1cde5645e_and_part: _10113_logical_and_parts) {
				{
					if (_1cde5645e_and_part.find(jule::Str("(", 1)) != -1LL) {
						if (_1cde5645e_and_part[static_cast<jule::Int>(_1cde5645e_and_part.len() - 1LL)] != ')') {
							return false;
						}
						jule::Str _10721__expr = _1cde5645e_and_part.slice(1LL,static_cast<jule::Int>(_1cde5645e_and_part.len() - 1LL));
						_10017_and=_10017_and && _1cde5645e_eval_directive_expr(_10721__expr);
					} else {
						_10017_and=_10017_and && _1cde5645e_eval_directive_part(_1cde5645e_and_part);
					}
				}
			_iter_next_4544991952:;
			}
			_iter_end_4544991952:;
			_9213_result=_9213_result || _10017_and;
		}
	_iter_next_4544987824:;
	}
	_iter_end_4544987824:;
	return _9213_result;
}



inline void _1cde565e6_set_os_flags(void) {
	{
		auto _match_expr{ _1ce039ac5_OS };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4545000896; }
		_case_begin_4545000896:;
		{
			_1cde565e6_FLAGS=jule::append(_1cde565e6_FLAGS,jule::Slice<jule::Str>({jule::Str("windows", 7)}));
		}
		goto _match_end_4544991264;
		_case_end_4545000896:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4544999152; }
		_case_begin_4544999152:;
		{
			_1cde565e6_FLAGS=jule::append(_1cde565e6_FLAGS,jule::Slice<jule::Str>({jule::Str("linux", 5)}));
		}
		goto _match_end_4544991264;
		_case_end_4544999152:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4544988384; }
		_case_begin_4544988384:;
		{
			_1cde565e6_FLAGS=jule::append(_1cde565e6_FLAGS,jule::Slice<jule::Str>({jule::Str("darwin", 6)}));
		}
		goto _match_end_4544991264;
		_case_end_4544988384:;
		_match_end_4544991264:;
	}
	if (_1e7731968_is_unix(_1ce039ac5_OS)) {
		_1cde565e6_FLAGS=jule::append(_1cde565e6_FLAGS,jule::Slice<jule::Str>({jule::Str("unix", 4)}));
	}
}



inline void _1cde565e6_set_arch_flags(void) {
	{
		auto _match_expr{ _1ce039ac5_ARCH };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4545003408; }
		_case_begin_4545003408:;
		{
			_1cde565e6_FLAGS=jule::append(_1cde565e6_FLAGS,jule::Slice<jule::Str>({jule::Str("i386", 4)}));
		}
		goto _match_end_4545002992;
		_case_end_4545003408:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4545001216; }
		_case_begin_4545001216:;
		{
			_1cde565e6_FLAGS=jule::append(_1cde565e6_FLAGS,jule::Slice<jule::Str>({jule::Str("amd64", 5)}));
		}
		goto _match_end_4545002992;
		_case_end_4545001216:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4545004784; }
		_case_begin_4545004784:;
		{
			_1cde565e6_FLAGS=jule::append(_1cde565e6_FLAGS,jule::Slice<jule::Str>({jule::Str("arm64", 5)}));
		}
		goto _match_end_4545002992;
		_case_end_4545004784:;
		_match_end_4545002992:;
	}
	if (_1e7731968_is_64bit(_1ce039ac5_ARCH)) {
		_1cde565e6_FLAGS=jule::append(_1cde565e6_FLAGS,jule::Slice<jule::Str>({jule::Str("64bit", 5)}));
	}
	if (_1e7731968_is_32bit(_1ce039ac5_ARCH)) {
		_1cde565e6_FLAGS=jule::append(_1cde565e6_FLAGS,jule::Slice<jule::Str>({jule::Str("32bit", 5)}));
	}
}



inline void _1cde565e6_init_flags(void) {
	_1cde565e6_set_os_flags();
	_1cde565e6_set_arch_flags();
}



inline void _1ce135770_exit_err(jule::Str _2213_msg) {
	
	jule::outln(_2213_msg);
	_1e77a41e4_exit(1LL);
}



inline jule::Slice<jule::U8> _1ce135770_read_buff(jule::Str _3014_path) {
	jule::Slice<jule::U8> _3114_buffer;
	jule::Int _3122_err;
	std::tie(_3114_buffer,_3122_err) = _1ce2b21b0_read_file(_3014_path);
	if (_3122_err != 0LLU) {
		_1ce135770_exit_err(jule::Str("error: file cannot read", 23));
	}
	return _3114_buffer;
}



inline _1e7690a81_Log _1ce135770_flat_compiler_err(jule::Str _4022_text) {
	return _1e7690a81_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_4022_text,jule::Str(),jule::Str());
}



inline std::tuple<jule::Slice<jule::Ref<_1ce3851c8_DirEntry>>,jule::Str> _1ce135770_read_package_dirents(jule::Str _4825_path) {
	jule::Str _4851_err_msg = jule::Str();
	jule::Slice<jule::Ref<_1ce3851c8_DirEntry>> _4914_dirents;
	jule::Int _4923_err;
	std::tie(_4914_dirents,_4923_err) = _1ce4a45b1_read_dir(_4825_path);
	if (_4923_err != 0LLU) {
		_4851_err_msg = jule::Str("connot read package directory: ", 31) + _4825_path;
		return std::make_tuple(nullptr,_4851_err_msg);
	}
	jule::Slice<jule::Ref<_1ce3851c8_DirEntry>> _5413_passed_dirents = nullptr;
	for (auto _1ce135770_dirent: _4914_dirents) {
		{
			jule::Str _5613_name = _1ce135770_dirent->_field_name;
			if (_1ce135770_dirent->_field_stat->_method_is_dir() || (!(_5613_name.has_suffix(jule::Str(".jule", 5))))) {
				goto _iter_next_4545022480;
			}
			_5413_passed_dirents=jule::append(_5413_passed_dirents,jule::Slice<jule::Ref<_1ce3851c8_DirEntry>>({_1ce135770_dirent}));
		}
	_iter_next_4545022480:;
	}
	_iter_end_4545022480:;
	_4851_err_msg = jule::Str("", 0);
	return std::make_tuple(_5413_passed_dirents,_4851_err_msg);
}



inline jule::Str _1ce135770_concat_all_parts(jule::Slice<jule::Str> _7021_parts) {
	jule::Str _7113_s = jule::Str("", 0);
	for (auto _1ce135770_part: _7021_parts) {
		{
			_7113_s+=_1ce135770_part;
		}
	_iter_next_4545031360:;
	}
	_iter_end_4545031360:;
	return _7113_s;
}



inline jule::Bool _1ce135770_is_pass_build_directives(jule::Ref<_1ce2b7acd_Ast>& _7934_file) {
	for (auto _1ce135770_td: _7934_file->_field_top_directives) {
		{
			if (_1ce135770_td->_field_tag != jule::Str("build", 5)) {
				goto _iter_next_4545032688;
			}
			jule::Str _8513_expr = _1ce135770_concat_all_parts(_1ce135770_td->_field_args);
			jule::Bool _8613_result = _1cde5645e_eval_directive_expr(_8513_expr);
			if ((!(_8613_result))) {
				return false;
			}
		}
	_iter_next_4545032688:;
	}
	_iter_end_4545032688:;
	return true;
}



inline void _1cdd79d22_push_passes(jule::Ref<_1b623bb7a_Package>& _11321_p,jule::Slice<jule::Str>& _11345_passes) {
	for (auto _1cdd79d22_f: _11321_p->_field_files) {
		{
			_julec_label_push:;
			for (auto _1cdd79d22_pass: _1cdd79d22_f->_field_passes) {
				{
					if (_1cdd79d22_pass._field_text == jule::Str("", 0)) {
						goto _iter_next_4545095152;
					}
					for (auto _1cdd79d22_cpass: _11345_passes) {
						{
							if (_1cdd79d22_cpass == _1cdd79d22_pass._field_text) {
								goto _iter_next_4545095152;
							}
						}
					_iter_next_4545097344:;
					}
					_iter_end_4545097344:;
					_11345_passes=jule::append(_11345_passes,jule::Slice<jule::Str>({_1cdd79d22_pass._field_text}));
				}
			_iter_next_4545095152:;
			}
			_iter_end_4545095152:;
		}
	_iter_next_4545093008:;
	}
	_iter_end_4545093008:;
}



inline jule::Slice<jule::Str> _1cdd79d22_get_all_unique_passes(jule::Ref<_1b623bb7a_Package>& _13031_pkg,jule::Slice<jule::Ref<_1b623bb7a_ImportInfo>> _13056_uses) {
	jule::Slice<jule::Str> _13113_passes = nullptr;
	_1cdd79d22_push_passes(_13031_pkg,_13113_passes);
	for (auto _1cdd79d22_u: _13056_uses) {
		{
			if ((!(_1cdd79d22_u->_field_cpp_linked))) {
				_1cdd79d22_push_passes(_1cdd79d22_u->_field_package,_13113_passes);
			}
		}
	_iter_next_4545102816:;
	}
	_iter_end_4545102816:;
	return _13113_passes;
}



inline jule::Bool _1e86aa7c0_is_exist_0(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1b6069348_FnIns> _3028_t) {
	for (auto _1e86aa7c0_ref: _3016_arr) {
		{
			{
				auto _match_expr{ _1e86aa7c0_ref };
				if (!(_match_expr.type_is<jule::Ref<_1b6069348_FnIns>>())) { goto _case_end_4545251472; }
				_case_begin_4545251472:;
				{
					if ((_1e86aa7c0_ref.operator jule::Ref<_1b6069348_FnIns>()).alloc == (_3028_t).alloc) {
						return true;
					}
				}
				goto _match_end_4545251808;
				_case_end_4545251472:;
				_match_end_4545251808:;
			}
		}
	_iter_next_4545250064:;
	}
	_iter_end_4545250064:;
	return false;
}

inline jule::Bool _1e86aa7c0_is_exist_1(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1b637edab_Var> _3028_t) {
	for (auto _1e86aa7c0_ref: _3016_arr) {
		{
			{
				auto _match_expr{ _1e86aa7c0_ref };
				if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4545258480; }
				_case_begin_4545258480:;
				{
					if ((_1e86aa7c0_ref.operator jule::Ref<_1b637edab_Var>()).alloc == (_3028_t).alloc) {
						return true;
					}
				}
				goto _match_end_4545258816;
				_case_end_4545258480:;
				_match_end_4545258816:;
			}
		}
	_iter_next_4545257072:;
	}
	_iter_end_4545257072:;
	return false;
}

inline jule::Bool _1e86aa7c0_is_exist_2(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1ce385eed_StructIns> _3028_t) {
	for (auto _1e86aa7c0_ref: _3016_arr) {
		{
			{
				auto _match_expr{ _1e86aa7c0_ref };
				if (!(_match_expr.type_is<jule::Ref<_1ce385eed_StructIns>>())) { goto _case_end_4545265552; }
				_case_begin_4545265552:;
				{
					if ((_1e86aa7c0_ref.operator jule::Ref<_1ce385eed_StructIns>()).alloc == (_3028_t).alloc) {
						return true;
					}
				}
				goto _match_end_4545265888;
				_case_end_4545265552:;
				_match_end_4545265888:;
			}
		}
	_iter_next_4545264144:;
	}
	_iter_end_4545264144:;
	return false;
}

inline jule::Bool _1e86aa7c0_is_exist_3(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1b61d7d79_Trait> _3028_t) {
	for (auto _1e86aa7c0_ref: _3016_arr) {
		{
			{
				auto _match_expr{ _1e86aa7c0_ref };
				if (!(_match_expr.type_is<jule::Ref<_1b61d7d79_Trait>>())) { goto _case_end_4545272560; }
				_case_begin_4545272560:;
				{
					if ((_1e86aa7c0_ref.operator jule::Ref<_1b61d7d79_Trait>()).alloc == (_3028_t).alloc) {
						return true;
					}
				}
				goto _match_end_4545272896;
				_case_end_4545272560:;
				_match_end_4545272896:;
			}
		}
	_iter_next_4545271152:;
	}
	_iter_end_4545271152:;
	return false;
}



inline jule::Bool _1e86aa7c0_is_exist_ref(jule::Slice<jule::Any> _4321_refs,jule::Any _4334_ref) {
	{
		auto _match_expr{ _4334_ref };
		if (!(_match_expr.type_is<jule::Ref<_1b6069348_FnIns>>())) { goto _case_end_4545243216; }
		_case_begin_4545243216:;
		{
			return _1e86aa7c0_is_exist_0(_4321_refs,_4334_ref.operator jule::Ref<_1b6069348_FnIns>());
		}
		goto _match_end_4545242656;
		_case_end_4545243216:;
		if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4545243312; }
		_case_begin_4545243312:;
		{
			return _1e86aa7c0_is_exist_1(_4321_refs,_4334_ref.operator jule::Ref<_1b637edab_Var>());
		}
		goto _match_end_4545242656;
		_case_end_4545243312:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385eed_StructIns>>())) { goto _case_end_4545243408; }
		_case_begin_4545243408:;
		{
			return _1e86aa7c0_is_exist_2(_4321_refs,_4334_ref.operator jule::Ref<_1ce385eed_StructIns>());
		}
		goto _match_end_4545242656;
		_case_end_4545243408:;
		if (!(_match_expr.type_is<jule::Ref<_1b61d7d79_Trait>>())) { goto _case_end_4545244256; }
		_case_begin_4545244256:;
		{
			return _1e86aa7c0_is_exist_3(_4321_refs,_4334_ref.operator jule::Ref<_1b61d7d79_Trait>());
		}
		goto _match_end_4545242656;
		_case_end_4545244256:;
		_case_begin_4545242416:;
		{
			return false;
		}
		goto _match_end_4545242656;
		_case_end_4545242416:;
		_match_end_4545242656:;
	}
}



inline jule::Bool _1e86aa7c0_is_dead(jule::Any _5416_ref) {
	jule::Bool _5428_dead = jule::Bool();
	if (_1e86aa7c0_is_exist_ref(_1e86aa7c0_deads,_5416_ref)) {
		_5428_dead = true;
		return _5428_dead;
	}
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ref<_1b6069348_FnIns>>())) { goto _case_end_4545277696; }
		_case_begin_4545277696:;
		{
			if (_5416_ref.operator jule::Ref<_1b6069348_FnIns>()->_field_decl->_method_is_init()) {
				goto _match_end_4545273536;
			}
			goto _case_begin_4545275632;
		}
		goto _match_end_4545273536;
		_case_end_4545277696:;
		_case_begin_4545275632:;
		{
			if (_1e86aa7c0_is_exist_ref(jule::Slice<jule::Any>({_1e86aa7c0_current,_1e86aa7c0_main_current}),_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
			if (_1e86aa7c0_is_exist_ref(_1e86aa7c0_checking,_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
		}
		goto _match_end_4545273536;
		_case_end_4545275632:;
		_match_end_4545273536:;
	}
	jule::Any _7513_old = _1e86aa7c0_current;
	_1e86aa7c0_current=_5416_ref;
	jule::I64 _779_len = _1e86aa7c0_checking.len();
	_1e86aa7c0_checking=jule::append(_1e86aa7c0_checking,jule::Slice<jule::Any>({_5416_ref}));
	__JULE_DEFER({
		_1e86aa7c0_current=_7513_old;
		_1e86aa7c0_drop_ref(_1e86aa7c0_checking,_779_len);
	});
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ref<_1b6069348_FnIns>>())) { goto _case_end_4545283808; }
		_case_begin_4545283808:;
		{
			_5428_dead = _1e86aa7c0_is_fn_dead(_5416_ref.operator jule::Ref<_1b6069348_FnIns>());
			return _5428_dead;
		}
		goto _match_end_4545279392;
		_case_end_4545283808:;
		if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4545283904; }
		_case_begin_4545283904:;
		{
			_5428_dead = _1e86aa7c0_is_var_dead(_5416_ref.operator jule::Ref<_1b637edab_Var>());
			return _5428_dead;
		}
		goto _match_end_4545279392;
		_case_end_4545283904:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385eed_StructIns>>())) { goto _case_end_4545284000; }
		_case_begin_4545284000:;
		{
			_5428_dead = _1e86aa7c0_is_struct_dead(_5416_ref.operator jule::Ref<_1ce385eed_StructIns>());
			return _5428_dead;
		}
		goto _match_end_4545279392;
		_case_end_4545284000:;
		if (!(_match_expr.type_is<jule::Ref<_1b61d7d79_Trait>>())) { goto _case_end_4545284096; }
		_case_begin_4545284096:;
		{
			_5428_dead = _1e86aa7c0_is_trait_dead(_5416_ref.operator jule::Ref<_1b61d7d79_Trait>());
			return _5428_dead;
		}
		goto _match_end_4545279392;
		_case_end_4545284096:;
		_case_begin_4545269344:;
		{
			_5428_dead = false;
			return _5428_dead;
		}
		goto _match_end_4545279392;
		_case_end_4545269344:;
		_match_end_4545279392:;
	}
}



inline void _1e86aa7c0_drop_ref(jule::Slice<jule::Any>& _10618_refs,jule::Int _10631_pos) {
	_10618_refs=_10618_refs.slice(0LL,static_cast<jule::Int>(_10631_pos));
}



inline jule::Bool _1e86aa7c0_is_all_references_are_dead_0(jule::Ref<_1ce50a46e_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	for (; _11513_i < _11438_references->_method_len(); (_11513_i)++) {
		{
			jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
			{
				auto _match_expr{ _1e86aa7c0_current };
				if (!(_match_expr.type_is<jule::Ref<_1b6069348_FnIns>>())) { goto _case_end_4545302480; }
				_case_begin_4545302480:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ref<_1b6069348_FnIns>>())) { goto _case_end_4545303760; }
						_case_begin_4545303760:;
						{
							if ((_1e86aa7c0_current.operator jule::Ref<_1b6069348_FnIns>()).alloc == (_11717_ref.operator jule::Ref<_1b6069348_FnIns>()).alloc) {
								goto _iter_next_4545301408;
							}
						}
						goto _match_end_4545305184;
						_case_end_4545303760:;
						_match_end_4545305184:;
					}
				}
				goto _match_end_4545303632;
				_case_end_4545302480:;
				_match_end_4545303632:;
			}
			{
				auto _match_expr{ _1e86aa7c0_main_current };
				if (!(_match_expr.type_is<jule::Ref<_1b6069348_FnIns>>())) { goto _case_end_4545308688; }
				_case_begin_4545308688:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ref<_1b6069348_FnIns>>())) { goto _case_end_4545308496; }
						_case_begin_4545308496:;
						{
							if ((_1e86aa7c0_main_current.operator jule::Ref<_1b6069348_FnIns>()).alloc == (_11717_ref.operator jule::Ref<_1b6069348_FnIns>()).alloc) {
								goto _iter_next_4545301408;
							}
						}
						goto _match_end_4545306256;
						_case_end_4545308496:;
						_match_end_4545306256:;
					}
				}
				goto _match_end_4545308304;
				_case_end_4545308688:;
				_match_end_4545308304:;
			}
			if ((!(_1e86aa7c0_is_dead(_11717_ref)))) {
				return false;
			}
		}
	_iter_next_4545301408:;
	}
	_iter_end_4545301408:;
	return true;
}

inline jule::Bool _1e86aa7c0_is_all_references_are_dead_1(jule::Ref<_1ce50a46e_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	for (; _11513_i < _11438_references->_method_len(); (_11513_i)++) {
		{
			jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
			{
				auto _match_expr{ _1e86aa7c0_current };
				if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4545319200; }
				_case_begin_4545319200:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4545320448; }
						_case_begin_4545320448:;
						{
							if ((_1e86aa7c0_current.operator jule::Ref<_1b637edab_Var>()).alloc == (_11717_ref.operator jule::Ref<_1b637edab_Var>()).alloc) {
								goto _iter_next_4545318128;
							}
						}
						goto _match_end_4545321872;
						_case_end_4545320448:;
						_match_end_4545321872:;
					}
				}
				goto _match_end_4545320320;
				_case_end_4545319200:;
				_match_end_4545320320:;
			}
			{
				auto _match_expr{ _1e86aa7c0_main_current };
				if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4545325376; }
				_case_begin_4545325376:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4545324992; }
						_case_begin_4545324992:;
						{
							if ((_1e86aa7c0_main_current.operator jule::Ref<_1b637edab_Var>()).alloc == (_11717_ref.operator jule::Ref<_1b637edab_Var>()).alloc) {
								goto _iter_next_4545318128;
							}
						}
						goto _match_end_4545322944;
						_case_end_4545324992:;
						_match_end_4545322944:;
					}
				}
				goto _match_end_4545324912;
				_case_end_4545325376:;
				_match_end_4545324912:;
			}
			if ((!(_1e86aa7c0_is_dead(_11717_ref)))) {
				return false;
			}
		}
	_iter_next_4545318128:;
	}
	_iter_end_4545318128:;
	return true;
}

inline jule::Bool _1e86aa7c0_is_all_references_are_dead_2(jule::Ref<_1ce50a46e_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	for (; _11513_i < _11438_references->_method_len(); (_11513_i)++) {
		{
			jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
			{
				auto _match_expr{ _1e86aa7c0_current };
				if (!(_match_expr.type_is<jule::Ref<_1ce385eed_StructIns>>())) { goto _case_end_4545350176; }
				_case_begin_4545350176:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ref<_1ce385eed_StructIns>>())) { goto _case_end_4545351552; }
						_case_begin_4545351552:;
						{
							if ((_1e86aa7c0_current.operator jule::Ref<_1ce385eed_StructIns>()).alloc == (_11717_ref.operator jule::Ref<_1ce385eed_StructIns>()).alloc) {
								goto _iter_next_4545349104;
							}
						}
						goto _match_end_4545352848;
						_case_end_4545351552:;
						_match_end_4545352848:;
					}
				}
				goto _match_end_4545351424;
				_case_end_4545350176:;
				_match_end_4545351424:;
			}
			{
				auto _match_expr{ _1e86aa7c0_main_current };
				if (!(_match_expr.type_is<jule::Ref<_1ce385eed_StructIns>>())) { goto _case_end_4545356352; }
				_case_begin_4545356352:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ref<_1ce385eed_StructIns>>())) { goto _case_end_4545356160; }
						_case_begin_4545356160:;
						{
							if ((_1e86aa7c0_main_current.operator jule::Ref<_1ce385eed_StructIns>()).alloc == (_11717_ref.operator jule::Ref<_1ce385eed_StructIns>()).alloc) {
								goto _iter_next_4545349104;
							}
						}
						goto _match_end_4545353936;
						_case_end_4545356160:;
						_match_end_4545353936:;
					}
				}
				goto _match_end_4545355968;
				_case_end_4545356352:;
				_match_end_4545355968:;
			}
			if ((!(_1e86aa7c0_is_dead(_11717_ref)))) {
				return false;
			}
		}
	_iter_next_4545349104:;
	}
	_iter_end_4545349104:;
	return true;
}



inline jule::Bool _1e86aa7c0_is_fn_dead(jule::Ref<_1b6069348_FnIns> _14319_f) {
	if (_14319_f->_field_decl->_field_cpp_linked) {
		return false;
	}
	if (_14319_f->_field_decl->_method_is_entry_point() || _14319_f->_field_decl->_method_is_init()) {
		return (!(_14319_f->_field_decl->_field_statically));
	}
	if (jule::real(_14319_f->_field_owner)) {
		if (_1e86aa7c0_is_exist_ref(_1e86aa7c0_checking,jule::Any(_14319_f->_field_owner))) {
			return true;
		}
		return _1e86aa7c0_is_dead(jule::Any(_14319_f->_field_owner));
	}
	return _1e86aa7c0_is_all_references_are_dead_0(_14319_f->_field_references);
}



inline jule::Bool _1e86aa7c0_is_var_dead(jule::Ref<_1b637edab_Var> _16920_v) {
	if (_16920_v->_field_constant) {
		return true;
	}
	if (_16920_v->_field_cpp_linked) {
		return false;
	}
	return _1e86aa7c0_is_all_references_are_dead_1(_16920_v->_field_references);
}



inline jule::Bool _1e86aa7c0_kind_is_dead(jule::Ref<_1b6703d45_TypeKind> _18121_k) {
	{
		if (!((jule::real(_18121_k->_method_ref())))) { goto _case_end_4545329040; }
		_case_begin_4545329040:;
		{
			return _1e86aa7c0_kind_is_dead(_18121_k->_method_ref()->_field_elem);
		}
		goto _match_end_4545325920;
		_case_end_4545329040:;
		if (!((jule::real(_18121_k->_method_ptr())))) { goto _case_end_4545329136; }
		_case_begin_4545329136:;
		{
			return _1e86aa7c0_kind_is_dead(_18121_k->_method_ptr()->_field_elem);
		}
		goto _match_end_4545325920;
		_case_end_4545329136:;
		if (!((jule::real(_18121_k->_method_slc())))) { goto _case_end_4545329232; }
		_case_begin_4545329232:;
		{
			return _1e86aa7c0_kind_is_dead(_18121_k->_method_slc()->_field_elem);
		}
		goto _match_end_4545325920;
		_case_end_4545329232:;
		if (!((jule::real(_18121_k->_method_arr())))) { goto _case_end_4545329328; }
		_case_begin_4545329328:;
		{
			return _1e86aa7c0_kind_is_dead(_18121_k->_method_arr()->_field_elem);
		}
		goto _match_end_4545325920;
		_case_end_4545329328:;
		if (!((jule::real(_18121_k->_method_trt())))) { goto _case_end_4545329424; }
		_case_begin_4545329424:;
		{
			jule::Ref<_1b61d7d79_Trait> _19617_t = _18121_k->_method_trt();
			if (_1e86aa7c0_is_dead(jule::Any(_19617_t))) {
				return true;
			}
		}
		goto _match_end_4545325920;
		_case_end_4545329424:;
		if (!((jule::real(_18121_k->_method_strct())))) { goto _case_end_4545329536; }
		_case_begin_4545329536:;
		{
			jule::Ref<_1ce385eed_StructIns> _20217_s = _18121_k->_method_strct();
			if (_1e86aa7c0_is_dead(jule::Any(_20217_s))) {
				return true;
			}
		}
		goto _match_end_4545325920;
		_case_end_4545329536:;
		_match_end_4545325920:;
	}
	return false;
}



inline jule::Bool _1e86aa7c0_is_any_generic_is_dead(jule::Slice<jule::Ref<_1b6703d45_TypeKind>>& _21032_generics) {
	for (auto _1e86aa7c0_g: _21032_generics) {
		{
			if (_1e86aa7c0_kind_is_dead(_1e86aa7c0_g)) {
				return true;
			}
		}
	_iter_next_4545337184:;
	}
	_iter_end_4545337184:;
	return false;
}



inline jule::Bool _1e86aa7c0_is_struct_dead(jule::Ref<_1ce385eed_StructIns> _21923_s) {
	return false;
	if (_21923_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return _1e86aa7c0_is_all_references_are_dead_2(_21923_s->_field_references);
}



inline jule::Bool _1e86aa7c0_is_trait_dead(jule::Ref<_1b61d7d79_Trait> _23622_t) {
	return false;
	for (auto _1e86aa7c0_imp: _23622_t->_field_implemented) {
		{
			jule::Int _24117_i = 0LL;
			for (; _24117_i < _1e86aa7c0_imp->_field_instances.len(); (_24117_i)++) {
				{
					jule::Ref<_1ce385eed_StructIns> _24321_ins = _1e86aa7c0_imp->_field_instances[static_cast<jule::Int>(_24117_i)];
					if ((!(_1e86aa7c0_is_struct_dead(_24321_ins)))) {
						return false;
					}
				}
			_iter_next_4545362112:;
			}
			_iter_end_4545362112:;
		}
	_iter_next_4545360448:;
	}
	_iter_end_4545360448:;
	return true;
}



inline void _1e86aa7c0_eliminate_dead_functions(jule::Slice<jule::Ref<_1b6069348_Fn>>& _25434_funcs) {
	jule::Int _25513_i = 0LL;
	while (_25513_i < _25434_funcs.len()) {
		{
			jule::Ref<_1b6069348_Fn> _25717_f = _25434_funcs[static_cast<jule::Int>(_25513_i)];
			jule::Int _25817_j = 0LL;
			while (_25817_j < _25717_f->_field_instances.len()) {
				{
					jule::Ref<_1b6069348_FnIns> _26021_ins = _25717_f->_field_instances[static_cast<jule::Int>(_25817_j)];
					_1e86aa7c0_main_current=jule::Any(_26021_ins);
					if (_1e86aa7c0_is_fn_dead(_26021_ins)) {
						_1e86aa7c0_deads=jule::append(_1e86aa7c0_deads,jule::Slice<jule::Any>({jule::Any(_26021_ins)}));
						_25717_f->_field_instances=jule::append(_25717_f->_field_instances.slice(0LL,static_cast<jule::Int>(_25817_j)),_25717_f->_field_instances.slice(static_cast<jule::Int>(_25817_j + 1LL)));
						goto _iter_next_4545369200;
					}
					_1cdd24409_eliminate_dead_code_of_scope(_26021_ins->_field_scope);
					(_25817_j)++;
				}
			_iter_next_4545369200:;
			}
			_iter_end_4545369200:;
			if (_25717_f->_field_instances.len() == 0LL) {
				_25434_funcs=jule::append(_25434_funcs.slice(0LL,static_cast<jule::Int>(_25513_i)),_25434_funcs.slice(static_cast<jule::Int>(_25513_i + 1LL)));
				goto _iter_next_4545344336;
			}
			(_25513_i)++;
		}
	_iter_next_4545344336:;
	}
	_iter_end_4545344336:;
}



inline void _1e86aa7c0_eliminate_dead_globals(jule::Ref<_1b623bb7a_Package>& _28032_pkg) {
	for (auto _1e86aa7c0_f: _28032_pkg->_field_files) {
		{
			jule::Int _28217_i = 0LL;
			while (_28217_i < _1e86aa7c0_f->_field_vars.len()) {
				{
					jule::Ref<_1b637edab_Var> _28421_v = _1e86aa7c0_f->_field_vars[static_cast<jule::Int>(_28217_i)];
					_1e86aa7c0_main_current=jule::Any(_28421_v);
					if (_1e86aa7c0_is_var_dead(_28421_v)) {
						_1e86aa7c0_deads=jule::append(_1e86aa7c0_deads,jule::Slice<jule::Any>({jule::Any(_28421_v)}));
						_1e86aa7c0_f->_field_vars=jule::append(_1e86aa7c0_f->_field_vars.slice(0LL,static_cast<jule::Int>(_28217_i)),_1e86aa7c0_f->_field_vars.slice(static_cast<jule::Int>(_28217_i + 1LL)));
					} else {
						(_28217_i)++;
					}
				}
			_iter_next_4545384000:;
			}
			_iter_end_4545384000:;
		}
	_iter_next_4545379968:;
	}
	_iter_end_4545379968:;
}



inline void _1e86aa7c0_eliminate_dead_functions_package(jule::Ref<_1b623bb7a_Package>& _29642_pkg) {
	for (auto _1e86aa7c0_f: _29642_pkg->_field_files) {
		{
			_1e86aa7c0_eliminate_dead_functions(_1e86aa7c0_f->_field_funcs);
		}
	_iter_next_4545393488:;
	}
	_iter_end_4545393488:;
}



inline void _1e86aa7c0_eliminate_dead_structs(jule::Ref<_1b623bb7a_Package>& _30232_pkg) {
	for (auto _1e86aa7c0_f: _30232_pkg->_field_files) {
		{
			jule::Int _30417_i = 0LL;
			while (_30417_i < _1e86aa7c0_f->_field_structs.len()) {
				{
					jule::Ref<_1ce385eed_Struct> _30621_s = _1e86aa7c0_f->_field_structs[static_cast<jule::Int>(_30417_i)];
					jule::Int _30721_j = 0LL;
					while (_30721_j < _30621_s->_field_instances.len()) {
						{
							jule::Ref<_1ce385eed_StructIns> _30925_ins = _30621_s->_field_instances[static_cast<jule::Int>(_30721_j)];
							_1e86aa7c0_main_current=jule::Any(_30925_ins);
							if (_1e86aa7c0_is_struct_dead(_30925_ins)) {
								_1e86aa7c0_deads=jule::append(_1e86aa7c0_deads,jule::Slice<jule::Any>({jule::Any(_30925_ins)}));
								_30621_s->_field_instances=jule::append(_30621_s->_field_instances.slice(0LL,static_cast<jule::Int>(_30721_j)),_30621_s->_field_instances.slice(static_cast<jule::Int>(_30721_j + 1LL)));
								goto _iter_next_4545398288;
							}
							(_30721_j)++;
						}
					_iter_next_4545398288:;
					}
					_iter_end_4545398288:;
					if (_30621_s->_field_instances.len() == 0LL) {
						_1e86aa7c0_f->_field_structs=jule::append(_1e86aa7c0_f->_field_structs.slice(0LL,static_cast<jule::Int>(_30417_i)),_1e86aa7c0_f->_field_structs.slice(static_cast<jule::Int>(_30417_i + 1LL)));
						goto _iter_next_4545395376;
					}
					(_30417_i)++;
				}
			_iter_next_4545395376:;
			}
			_iter_end_4545395376:;
		}
	_iter_next_4545387936:;
	}
	_iter_end_4545387936:;
}



inline void _1e86aa7c0_eliminate_dead_traits(jule::Ref<_1b623bb7a_Package>& _32831_pkg) {
	for (auto _1e86aa7c0_f: _32831_pkg->_field_files) {
		{
			jule::Int _33017_i = 0LL;
			while (_33017_i < _1e86aa7c0_f->_field_traits.len()) {
				{
					jule::Ref<_1b61d7d79_Trait> _33221_t = _1e86aa7c0_f->_field_traits[static_cast<jule::Int>(_33017_i)];
					_1e86aa7c0_main_current=jule::Any(_33221_t);
					if (_1e86aa7c0_is_trait_dead(_33221_t)) {
						_1e86aa7c0_deads=jule::append(_1e86aa7c0_deads,jule::Slice<jule::Any>({jule::Any(_33221_t)}));
						_1e86aa7c0_f->_field_traits=jule::append(_1e86aa7c0_f->_field_traits.slice(0LL,static_cast<jule::Int>(_33017_i)),_1e86aa7c0_f->_field_traits.slice(static_cast<jule::Int>(_33017_i + 1LL)));
					} else {
						(_33017_i)++;
					}
				}
			_iter_next_4545413264:;
			}
			_iter_end_4545413264:;
		}
	_iter_next_4545408912:;
	}
	_iter_end_4545408912:;
}



inline void _1e86aa7c0_catch_alive_init(jule::Ref<_1b623bb7a_Package>& _34426_pkg) {
	
	
	jule::Ref<_1b6069348_Fn> _34713_f = _34426_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_34713_f)))) {
		return;
	}
	jule::I64 _3529_n = _1e86aa7c0_deads.len();
	__JULE_DEFER({
		_1e86aa7c0_deads=_1e86aa7c0_deads.slice(0LL,static_cast<jule::Int>(_3529_n));
		_1e86aa7c0_checking=nullptr;
		_1e86aa7c0_current=jule::Any(nullptr);
	});
	jule::Ref<_1b6069348_FnIns> _36013_ins = _34713_f->_field_instances[0LL];
	jule::Int _36113_i = 0LL;
	for (; _36113_i < _36013_ins->_field_refers->_method_len(); (_36113_i)++) {
		{
			if ((!(_1e86aa7c0_is_dead(_36013_ins->_field_refers->_method_at(_36113_i))))) {
				_34713_f->_field_statically=true;
				return;
			}
		}
	_iter_next_4545422944:;
	}
	_iter_end_4545422944:;
}



inline void _1e86aa7c0_eliminate_package(jule::Ref<_1b623bb7a_Package>& _37027_pkg) {
	_1e86aa7c0_deads=jule::Slice<jule::Any>::alloc(0LL,2000LL);
	_1e86aa7c0_catch_alive_init(_37027_pkg);
	_1e86aa7c0_eliminate_dead_globals(_37027_pkg);
	_1e86aa7c0_eliminate_dead_functions_package(_37027_pkg);
}



inline void _1e86aa7c0_eliminate(jule::Ref<_1cdd79d22_IR>& _38123_ir) {
	jule::I64 _38213_i = _38123_ir->_field_used.len() - 1LL;
	for (; _38213_i >= 0LL; (_38213_i)--) {
		{
			jule::Ref<_1b623bb7a_ImportInfo> _38417_u = _38123_ir->_field_used[static_cast<jule::Int>(_38213_i)];
			if ((!(_38417_u->_field_cpp_linked))) {
				_1e86aa7c0_eliminate_package(_38417_u->_field_package);
			}
		}
	_iter_next_4545435904:;
	}
	_iter_end_4545435904:;
	_1e86aa7c0_eliminate_package(_38123_ir->_field_main);
	_1e86aa7c0_deads=nullptr;
	_1e86aa7c0_checking=nullptr;
	_1e86aa7c0_current=jule::Any(nullptr);
}



inline void _1cdd24409_eliminate_dead_code_of_scope(jule::Ref<_1b61e873b_Scope> _7337_s) {
	jule::Ref<_1cdd24409_ScopeDeadCode> _7413_sdc = jule::new_struct_ref<_1cdd24409_ScopeDeadCode>(new( std::nothrow ) _1cdd24409_ScopeDeadCode(jule::Ref<_1cdd24409_ScopeDeadCode>(),_7337_s,(&(_7337_s->_field_stmts)),jule::Int()));
	{
		_7413_sdc->_method_optimize_stmts();
	}
}



inline jule::U64 _1b72774ab_unix(void) {
	return static_cast<jule::U64>(time(nullptr));
}



inline jule::U64 _1b72774ab_unix_year_to_seconds(jule::Uint _25725_y,jule::Bool& _25743_leap) {
	if ((_25725_y - 2LL) <= 136LL) {
		jule::Uint _25917_leaps = (_25725_y - 68LL) >> 2LL;
		_25743_leap=((_25725_y - 68LL) & 3LL) == 0LL;
		if (_25743_leap) {
			(_25917_leaps)--;
		}
		return static_cast<jule::Uint>((31536000LL * (_25725_y - 70LL)) + (86400LL * _25917_leaps));
	}
	jule::Uint _26713_leaps = 0LLU;
	jule::Uint _26813_centuries = 0LLU;
	jule::Uint _26913_cycles = jule::div(_25725_y - 100LL,400LL);
	jule::Uint _27013_rem = jule::mod(_25725_y - 100LL,400LL);
	if (_27013_rem < 0LL) {
		(_26913_cycles)--;
		_27013_rem+=400LL;
	}
	if (_27013_rem == 0LL) {
		_25743_leap=true;
		_26813_centuries=0LL;
		_26713_leaps=0LL;
	} else {
		if (_27013_rem >= 200LL) {
			if (_27013_rem >= 300LL) {
				_26813_centuries=3LL;
				_27013_rem-=300LL;
			} else {
				_26813_centuries=2LL;
				_27013_rem-=200LL;
			}
		} else {
			if (_27013_rem >= 100LL) {
				_26813_centuries=1LL;
				_27013_rem-=100LL;
			} else {
				_26813_centuries=0LL;
			}
		}
		if (_27013_rem == 0LL) {
			_25743_leap=false;
			_26713_leaps=0LL;
		} else {
			_26713_leaps=static_cast<jule::Uint>(jule::div(_27013_rem,4LL));
			_27013_rem = jule::mod(_27013_rem,4LL);
			_25743_leap=_27013_rem == 0LL;
		}
	}
	_26713_leaps+=static_cast<jule::Uint>((97LL * _26913_cycles) + (24LL * _26813_centuries));
	if (_25743_leap) {
		(_26713_leaps)++;
	}
	return static_cast<jule::Uint>(((((_25725_y - 100LL) * 31536000LL) + (_26713_leaps * 86400LL)) + 946684800LL) + 86400LL);
}



inline jule::U64 _1b72774ab_unix_month_to_seconds(jule::Uint _31426_m,jule::Bool _31439_leap) {
	jule::U64 _31613_t = 0LLU;
	{
		auto _match_expr{ _31426_m };
		if (!((1LL) == _match_expr)) { goto _case_end_4545516640; }
		_case_begin_4545516640:;
		{
			_31613_t=2678400LL;
		}
		goto _match_end_4545517312;
		_case_end_4545516640:;
		if (!((2LL) == _match_expr)) { goto _case_end_4545517392; }
		_case_begin_4545517392:;
		{
			_31613_t=5097600LL;
		}
		goto _match_end_4545517312;
		_case_end_4545517392:;
		if (!((3LL) == _match_expr)) { goto _case_end_4545517824; }
		_case_begin_4545517824:;
		{
			_31613_t=7776000LL;
		}
		goto _match_end_4545517312;
		_case_end_4545517824:;
		if (!((4LL) == _match_expr)) { goto _case_end_4545517920; }
		_case_begin_4545517920:;
		{
			_31613_t=10368000LL;
		}
		goto _match_end_4545517312;
		_case_end_4545517920:;
		if (!((5LL) == _match_expr)) { goto _case_end_4545518016; }
		_case_begin_4545518016:;
		{
			_31613_t=13046400LL;
		}
		goto _match_end_4545517312;
		_case_end_4545518016:;
		if (!((6LL) == _match_expr)) { goto _case_end_4545518112; }
		_case_begin_4545518112:;
		{
			_31613_t=15638400LL;
		}
		goto _match_end_4545517312;
		_case_end_4545518112:;
		if (!((7LL) == _match_expr)) { goto _case_end_4545518224; }
		_case_begin_4545518224:;
		{
			_31613_t=18316800LL;
		}
		goto _match_end_4545517312;
		_case_end_4545518224:;
		if (!((8LL) == _match_expr)) { goto _case_end_4545518336; }
		_case_begin_4545518336:;
		{
			_31613_t=20995200LL;
		}
		goto _match_end_4545517312;
		_case_end_4545518336:;
		if (!((9LL) == _match_expr)) { goto _case_end_4545518448; }
		_case_begin_4545518448:;
		{
			_31613_t=23587200LL;
		}
		goto _match_end_4545517312;
		_case_end_4545518448:;
		if (!((10LL) == _match_expr)) { goto _case_end_4545518560; }
		_case_begin_4545518560:;
		{
			_31613_t=26265600LL;
		}
		goto _match_end_4545517312;
		_case_end_4545518560:;
		if (!((11LL) == _match_expr)) { goto _case_end_4545518672; }
		_case_begin_4545518672:;
		{
			_31613_t=28857600LL;
		}
		goto _match_end_4545517312;
		_case_end_4545518672:;
		_match_end_4545517312:;
	}
	if (_31439_leap && (_31426_m >= 2LL)) {
		_31613_t+=86400LL;
	}
	return _31613_t;
}



inline jule::Str _1e86b150c_gen_if(jule::Ref<_1b61e873b_If> _15615_i) {
	jule::Str _15713_obj = jule::Str("if (", 4);
	_15713_obj+=_1e86ed47d_gen_expr(_15615_i->_field_expr);
	_15713_obj+=jule::Str(") ", 2);
	_15713_obj+=_1e86b150c_gen_scope(_15615_i->_field_scope);
	return _15713_obj;
}



inline jule::Str _1e86b150c_gen_conditional(jule::Ref<_1b61e873b_Conditional> _16424_c) {
	jule::Str _16513_obj = _1e86b150c_gen_if(_16424_c->_field_elifs[0LL]);
	for (auto _1e86b150c_elif: _16424_c->_field_elifs.slice(1LL)) {
		{
			_16513_obj+=jule::Str(" else ", 6);
			_16513_obj+=_1e86b150c_gen_if(_1e86b150c_elif);
		}
	_iter_next_4545881984:;
	}
	_iter_end_4545881984:;
	if (jule::real(_16424_c->_field_default)) {
		_16513_obj+=jule::Str(" else ", 6);
		_16513_obj+=_1e86b150c_gen_scope(_16424_c->_field_default->_field_scope);
	}
	return _16513_obj;
}



inline jule::Str _1e86b150c_gen_inf_iter(jule::Ref<_1b61e873b_InfIter> _18021_it) {
	jule::Str _18113_obj = jule::Str("for (;;) {\n", 11);
	_1b710e497_add_indent();
	_18113_obj+=_1b710e497_indent();
	_18113_obj+=_1e86b150c_gen_scope(_18021_it->_field_scope);
	_1b710e497_done_indent();
	jule::Str _1889_indent = _1b710e497_indent();
	_18113_obj+=jule::Str("\n", 1);
	_18113_obj+=_1889_indent;
	_18113_obj+=_1b710bbe2_iter_next_label_ident(((jule::Uintptr)((_18021_it).alloc)));
	_18113_obj+=jule::Str(":;\n", 3);
	_18113_obj+=_1889_indent;
	_18113_obj+=jule::Str("}\n", 2);
	_18113_obj+=_1889_indent;
	_18113_obj+=_1b710bbe2_iter_end_label_ident(((jule::Uintptr)((_18021_it).alloc)));
	_18113_obj+=jule::Str(":;", 2);
	return _18113_obj;
}



inline jule::Str _1e86b150c_gen_while_iter(jule::Ref<_1b61e873b_WhileIter> _20323_it) {
	jule::Str _20413_obj = jule::Str("", 0);
	if ((_20323_it->_field_expr != nullptr) && (_20323_it->_field_next == nullptr)) {
		_20413_obj+=jule::Str("while (", 7);
		_20413_obj+=_1e86ed47d_gen_expr(_20323_it->_field_expr);
		_20413_obj+=jule::Str(") {\n", 4);
	} else {
		_20413_obj+=jule::Str("for (; ", 7);
		if (_20323_it->_field_expr != nullptr) {
			_20413_obj+=_1e86ed47d_gen_expr(_20323_it->_field_expr);
		}
		_20413_obj+=jule::Str("; ", 2);
		if (_20323_it->_field_next != nullptr) {
			jule::Str _21617_st = _1e86b150c_gen_st(_20323_it->_field_next);
			_20413_obj+=_21617_st.slice(0LL,static_cast<jule::Int>(_21617_st.len() - 1LL));
		}
		_20413_obj+=jule::Str(") {\n", 4);
	}
	_1b710e497_add_indent();
	_20413_obj+=_1b710e497_indent();
	_20413_obj+=_1e86b150c_gen_scope(_20323_it->_field_scope);
	_20413_obj+=jule::Str("\n", 1);
	_1b710e497_done_indent();
	_20413_obj+=_1b710e497_indent();
	_20413_obj+=_1b710bbe2_iter_next_label_ident(((jule::Uintptr)((_20323_it).alloc)));
	_20413_obj+=jule::Str(":;\n", 3);
	_20413_obj+=_1b710e497_indent();
	_20413_obj+=jule::Str("}\n", 2);
	_20413_obj+=_1b710e497_indent();
	_20413_obj+=_1b710bbe2_iter_end_label_ident(((jule::Uintptr)((_20323_it).alloc)));
	_20413_obj+=jule::Str(":;", 2);
	return _20413_obj;
}



inline jule::Trait<_1e86b150c_RangeIterGen> _1e86b150c_get_range_generator(jule::Ref<_1b61e873b_RangeIter> _23928_it) {
	{
		if (!((jule::real(_23928_it->_field_expr->_field_kind->_method_slc())))) { goto _case_end_4545910912; }
		_case_begin_4545910912:;
		{
			return jule::new_struct<_1e86b150c_IndexRangeIterGen>(new( std::nothrow ) _1e86b150c_IndexRangeIterGen(_23928_it));
		}
		goto _match_end_4545906576;
		_case_end_4545910912:;
		if (!((jule::real(_23928_it->_field_expr->_field_kind->_method_arr())))) { goto _case_end_4545911008; }
		_case_begin_4545911008:;
		{
			return jule::new_struct<_1e86b150c_IndexRangeIterGen>(new( std::nothrow ) _1e86b150c_IndexRangeIterGen(_23928_it));
		}
		goto _match_end_4545906576;
		_case_end_4545911008:;
		if (!((jule::real(_23928_it->_field_expr->_field_kind->_method_map())))) { goto _case_end_4545911104; }
		_case_begin_4545911104:;
		{
			return jule::new_struct<_1e86b150c_MapRangeIterGen>(new( std::nothrow ) _1e86b150c_MapRangeIterGen(_23928_it));
		}
		goto _match_end_4545906576;
		_case_end_4545911104:;
		_case_begin_4545903632:;
		{
			return jule::new_struct<_1e86b150c_IndexRangeIterGen>(new( std::nothrow ) _1e86b150c_IndexRangeIterGen(_23928_it));
		}
		goto _match_end_4545906576;
		_case_end_4545903632:;
		_match_end_4545906576:;
	}
}



inline jule::Str _1e86b150c_gen_range_iter(jule::Ref<_1b61e873b_RangeIter> _24823_it) {
	jule::Trait<_1e86b150c_RangeIterGen> _2499_generator = _1e86b150c_get_range_generator(_24823_it);
	return _2499_generator.get()._method_gen();
}



inline jule::Str _1e86b150c_gen_cont(jule::Ref<_1b61e873b_ContSt> _25313_c) {
	jule::Str _25413_obj = jule::Str("goto ", 5);
	_25413_obj+=_1b710bbe2_iter_next_label_ident(_25313_c->_field_it);
	_25413_obj+=jule::Str(";", 1);
	return _25413_obj;
}



inline jule::Str _1e86b150c_gen_label(jule::Ref<_1b61e873b_Label> _26014_l) {
	return _1b710bbe2_label_ident(_26014_l->_field_ident) + jule::Str(":;", 2);
}



inline jule::Str _1e86b150c_gen_goto(jule::Ref<_1b61e873b_GotoSt> _26413_gt) {
	jule::Str _26513_obj = jule::Str("goto ", 5);
	_26513_obj+=_1b710bbe2_label_ident(_26413_gt->_field_ident);
	_26513_obj+=jule::Str(";", 1);
	return _26513_obj;
}



inline jule::Str _1e86b150c_gen_postfix(jule::Ref<_1b61e873b_Postfix> _27120_p) {
	jule::Str _27213_obj = jule::Str("(", 1);
	_27213_obj+=_1e86ed47d_gen_expr(_27120_p->_field_expr);
	_27213_obj+=jule::Str(")", 1);
	_27213_obj+=_27120_p->_field_op;
	_27213_obj+=jule::Str(";", 1);
	return _27213_obj;
}



inline jule::Str _1e86b150c_gen_div_by_zero_assign(jule::Ref<_1b61e873b_Assign> _28031_a) {
	jule::Str _28113_obj = _1e86ed47d_gen_expr(_28031_a->_field_l);
	_28113_obj+=jule::Str(" = ", 3);
	_28113_obj+=_1e86ed47d_gen_div_by_zero_binop_expr_model(_28031_a->_field_op.slice(0LL,1LL),_28031_a->_field_l,_28031_a->_field_r);
	_28113_obj+=jule::Str(";", 1);
	return _28113_obj;
}



inline jule::Str _1e86b150c_gen_assign(jule::Ref<_1b61e873b_Assign> _28819_a) {
	{
		auto _match_expr{ _28819_a->_field_op };
		if (!((jule::Str("/=", 2)) == _match_expr || (jule::Str("%=", 2)) == _match_expr)) { goto _case_end_4545926688; }
		_case_begin_4545926688:;
		{
			return _1e86b150c_gen_div_by_zero_assign(_28819_a);
		}
		goto _match_end_4545931792;
		_case_end_4545926688:;
		_match_end_4545931792:;
	}
	jule::Str _29513_obj = _1e86ed47d_gen_expr(_28819_a->_field_l);
	_29513_obj+=_28819_a->_field_op;
	if (_1ce1465e9_is_opt_enabled(jule::Str("--opt-append", 12))) {
		{
			auto _match_expr{ _28819_a->_field_r };
			if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BuiltinAppendCallExprModel>>())) { goto _case_end_4545936592; }
			_case_begin_4545936592:;
			{
				jule::Ref<_1b61decc6_BuiltinAppendCallExprModel> _30021_model = _28819_a->_field_r.operator jule::Ref<_1b61decc6_BuiltinAppendCallExprModel>();
				jule::Str _30118_expr;
				jule::Bool _30124_optimized;
				std::tie(_30118_expr,_30124_optimized) = _1e86ed47d_gen_builtin_append_call_expr_model_assign(_28819_a->_field_l,_30021_model);
				if (_30124_optimized) {
					return _30118_expr;
				}
				_29513_obj+=_30118_expr;
			}
			goto _match_end_4545935632;
			_case_end_4545936592:;
			_case_begin_4545933248:;
			{
				_29513_obj+=_1e86ed47d_gen_expr(_28819_a->_field_r);
			}
			goto _match_end_4545935632;
			_case_end_4545933248:;
			_match_end_4545935632:;
		}
	} else {
		_29513_obj+=_1e86ed47d_gen_expr(_28819_a->_field_r);
	}
	_29513_obj+=jule::Str(";", 1);
	return _29513_obj;
}



inline jule::Str _1e86b150c_gen_multi_assign(jule::Ref<_1b61e873b_MultiAssign> _31725_a) {
	jule::Str _31813_obj = jule::Str("std::tie(", 9);
	for (auto _1e86b150c_l: _31725_a->_field_l) {
		{
			if (_1e86b150c_l == nullptr) {
				_31813_obj+=jule::Str("std::ignore", 11);
				_31813_obj+=jule::Str(",", 1);
			} else {
				_31813_obj+=_1e86ed47d_gen_expr(_1e86b150c_l);
				_31813_obj+=jule::Str(",", 1);
			}
		}
	_iter_next_4545943392:;
	}
	_iter_end_4545943392:;
	_31813_obj=_31813_obj.slice(0LL,static_cast<jule::Int>(_31813_obj.len() - 1LL));
	_31813_obj+=jule::Str(") = ", 4);
	_31813_obj+=_1e86ed47d_gen_expr(_31725_a->_field_r);
	_31813_obj+=jule::Str(";", 1);
	return _31813_obj;
}



inline jule::Str _1e86b150c_gen_case(jule::Ref<_1b61e873b_Match> _33717_m,jule::Ref<_1b61e873b_Case> _33732_c) {
	
	jule::Str _3409_end = _1b710bbe2_case_end_label_ident(((jule::Uintptr)((_33732_c).alloc)));
	jule::Str _34113_obj = jule::Str("", 0);
	if ((_33732_c->_field_exprs.len() > 0LL) && (!(_33717_m->_method_is_generic_type_match()))) {
		_34113_obj+=jule::Str("if (!(", 6);
		{
			jule::Int _1e86b150c_i = 0;
			for (auto _1e86b150c_expr: _33732_c->_field_exprs) {
				{
					{
						if (!(((!(_33717_m->_field_type_match))))) { goto _case_end_4545957328; }
						_case_begin_4545957328:;
						{
							_34113_obj+=jule::Str("(", 1);
							_34113_obj+=_1e86ed47d_gen_expr(_1e86b150c_expr);
							_34113_obj+=jule::Str(")", 1);
							if (_33717_m->_field_expr->_method_is_const()) {
								if ((!(_33717_m->_field_expr->_field_constant->_method_is_bool())) || (!(_33717_m->_field_expr->_field_constant->_method_read_bool()))) {
									_34113_obj+=jule::Str(" == ", 4);
									_34113_obj+=_1e86ed47d_gen_expr_model(_33717_m->_field_expr->_field_model);
								}
							} else {
								_34113_obj+=jule::Str(" == ", 4);
								_34113_obj+=jule::Str("_match_expr", 11);
							}
						}
						goto _match_end_4545956016;
						_case_end_4545957328:;
						_case_begin_4545956192:;
						{
							_34113_obj+=jule::Str("_match_expr", 11);
							_34113_obj+=jule::Str(".type_is<", 9);
							_34113_obj+=_1e86ed47d_gen_expr(_1e86b150c_expr);
							_34113_obj+=jule::Str(">()", 3);
						}
						goto _match_end_4545956016;
						_case_end_4545956192:;
						_match_end_4545956016:;
					}
					if ((_1e86b150c_i + 1LL) < _33732_c->_field_exprs.len()) {
						_34113_obj+=jule::Str(" || ", 4);
					}
				}
			_iter_next_4545953664:;
			_1e86b150c_i++;
			}
			_iter_end_4545953664:;
		}
		_34113_obj+=jule::Str(")) { goto ", 10);
		_34113_obj+=_3409_end;
		_34113_obj+=jule::Str("; }\n", 4);
	}
	if (_33732_c->_field_scope->_field_stmts.len() > 0LL) {
		_34113_obj+=_1b710e497_indent();
		_34113_obj+=_1b710bbe2_case_begin_label_ident(((jule::Uintptr)((_33732_c).alloc)));
		_34113_obj+=jule::Str(":;\n", 3);
		_34113_obj+=_1b710e497_indent();
		_34113_obj+=_1e86b150c_gen_scope(_33732_c->_field_scope);
		_34113_obj+=jule::Str("\n", 1);
	}
	_34113_obj+=_1b710e497_indent();
	_34113_obj+=jule::Str("goto ", 5);
	_34113_obj+=_1b710bbe2_match_end_label_ident(((jule::Uintptr)((_33717_m).alloc))) + jule::Str(";", 1);
	_34113_obj+=jule::Str("\n", 1);
	_34113_obj+=_1b710e497_indent();
	_34113_obj+=_3409_end;
	_34113_obj+=jule::Str(":;", 2);
	return _34113_obj;
}



inline jule::Str _1e86b150c_gen_match(jule::Ref<_1b61e873b_Match> _39718_m) {
	if ((_39718_m->_field_cases.len() == 0LL) && (!(jule::real(_39718_m->_field_default)))) {
		return jule::Str("", 0);
	}
	jule::Str _40113_obj = jule::Str("{\n", 2);
	_1b710e497_add_indent();
	_40113_obj+=_1b710e497_indent();
	if ((!(_39718_m->_method_is_generic_type_match())) && (!(_39718_m->_field_expr->_method_is_const()))) {
		if (_39718_m->_field_expr->_field_lvalue && _1ce1465e9_is_opt_enabled(jule::Str("--opt-copy", 10))) {
			_40113_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_40113_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_40113_obj+=_1e86ed47d_gen_expr(_39718_m->_field_expr->_field_model);
		_40113_obj+=jule::Str(" };\n", 4);
		_40113_obj+=_1b710e497_indent();
	}
	if (_39718_m->_field_cases.len() > 0LL) {
		_40113_obj+=_1e86b150c_gen_case(_39718_m,_39718_m->_field_cases[0LL]);
		for (auto _1e86b150c_c: _39718_m->_field_cases.slice(1LL)) {
			{
				_40113_obj+=jule::Str("\n", 1);
				_40113_obj+=_1b710e497_indent();
				_40113_obj+=_1e86b150c_gen_case(_39718_m,_1e86b150c_c);
			}
		_iter_next_4545982480:;
		}
		_iter_end_4545982480:;
	}
	if (jule::real(_39718_m->_field_default)) {
		_40113_obj+=jule::Str("\n", 1);
		_40113_obj+=_1e86b150c_gen_case(_39718_m,_39718_m->_field_default);
	}
	_40113_obj+=jule::Str("\n", 1);
	_40113_obj+=_1b710e497_indent();
	_40113_obj+=_1b710bbe2_match_end_label_ident(((jule::Uintptr)((_39718_m).alloc)));
	_40113_obj+=jule::Str(":;", 2);
	_40113_obj+=jule::Str("\n", 1);
	_1b710e497_done_indent();
	_40113_obj+=_1b710e497_indent();
	_40113_obj+=jule::Str("}", 1);
	return _40113_obj;
}



inline jule::Str _1e86b150c_gen_fall_st(jule::Ref<_1b61e873b_FallSt> _44716_f) {
	jule::Str _44813_obj = jule::Str("goto ", 5);
	_44813_obj+=_1b710bbe2_case_begin_label_ident(_44716_f->_field_dest_case);
	_44813_obj+=jule::Str(";", 1);
	return _44813_obj;
}



inline jule::Str _1e86b150c_gen_break_st(jule::Ref<_1b61e873b_BreakSt> _45417_b) {
	jule::Str _45513_obj = jule::Str("goto ", 5);
	if (_45417_b->_field_it != 0LL) {
		_45513_obj+=_1b710bbe2_iter_end_label_ident(_45417_b->_field_it);
	} else {
		_45513_obj+=_1b710bbe2_match_end_label_ident(_45417_b->_field_mtch);
	}
	_45513_obj+=jule::Str(";", 1);
	return _45513_obj;
}



inline jule::Str _1e86b150c_gen_ret_vars(jule::Ref<_1b61e873b_RetSt> _46621_r) {
	jule::Str _46713_obj = jule::Str("", 0);
	for (auto _1e86b150c_v: _46621_r->_field_vars) {
		{
			if (_1ce35e3a0_is_ignore_ident(_1e86b150c_v->_field_ident)) {
				_46713_obj+=_1e86ed47d_get_init_expr(_1e86b150c_v->_field_kind->_field_kind);
			} else {
				_46713_obj+=_1b710bbe2_var_out_ident(_1e86b150c_v);
			}
			_46713_obj+=jule::Str(",", 1);
		}
	_iter_next_4545996704:;
	}
	_iter_end_4545996704:;
	_46713_obj=_46713_obj.slice(0LL,static_cast<jule::Int>(_46713_obj.len() - 1LL));
	if (_46621_r->_field_vars.len() > 1LL) {
		_46713_obj=(jule::Str("return std::make_tuple(", 23) + _46713_obj) + jule::Str(")", 1);
	} else {
		_46713_obj=jule::Str("return ", 7) + _46713_obj;
	}
	_46713_obj+=jule::Str(";", 1);
	return _46713_obj;
}



inline jule::Str _1e86b150c_gen_ret_expr_tuple(jule::Ref<_1b61e873b_RetSt> _49027_r) {
	{
		auto _match_expr{ _49027_r->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_FnCallExprModel>>())) { goto _case_end_4546002032; }
		_case_begin_4546002032:;
		{
			jule::Str _49317_obj = jule::Str("return ", 7);
			_49317_obj+=_1e86ed47d_gen_expr_model(_49027_r->_field_expr);
			_49317_obj+=jule::Str(";", 1);
			return _49317_obj;
		}
		goto _match_end_4546004192;
		_case_end_4546002032:;
		_match_end_4546004192:;
	}
	jule::Slice<jule::Ref<_1b66db129_Data>> _49913_datas = _49027_r->_field_expr.operator jule::Ref<_1b61decc6_TupleExprModel>()->_field_datas;
	jule::Str _50013_obj = jule::Str("", 0);
	{
		jule::Int _1e86b150c_i = 0;
		for (auto _1e86b150c_v: _49027_r->_field_vars) {
			{
				if ((!(_1ce35e3a0_is_ignore_ident(_1e86b150c_v->_field_ident)))) {
					jule::Str _50417_ident = _1b710bbe2_var_out_ident(_1e86b150c_v);
					_50013_obj+=_50417_ident;
					_50013_obj+=jule::Str(" = ", 3);
					_50013_obj+=_1e86ed47d_gen_expr(_49913_datas[static_cast<jule::Int>(_1e86b150c_i)]->_field_model);
					_50013_obj+=jule::Str(";\n", 2);
					_50013_obj+=_1b710e497_indent();
				}
			}
		_iter_next_4546009440:;
		_1e86b150c_i++;
		}
		_iter_end_4546009440:;
	}
	_50013_obj+=jule::Str("return std::make_tuple(", 23);
	{
		jule::Int _1e86b150c_i = 0;
		for (auto _1e86b150c_d: _49913_datas) {
			{
				jule::Ref<_1b637edab_Var> _51517_v = _49027_r->_field_vars[static_cast<jule::Int>(_1e86b150c_i)];
				if (_1ce35e3a0_is_ignore_ident(_51517_v->_field_ident)) {
					_50013_obj+=_1e86ed47d_gen_expr(_1e86b150c_d->_field_model);
				} else {
					_50013_obj+=_1b710bbe2_var_out_ident(_51517_v);
				}
				_50013_obj+=jule::Str(",", 1);
			}
		_iter_next_4546013328:;
		_1e86b150c_i++;
		}
		_iter_end_4546013328:;
	}
	_50013_obj=_50013_obj.slice(0LL,static_cast<jule::Int>(_50013_obj.len() - 1LL));
	_50013_obj+=jule::Str(");", 2);
	return _50013_obj;
}



inline jule::Str _1e86b150c_gen_ret_expr(jule::Ref<_1b61e873b_RetSt> _53021_r) {
	if (_53021_r->_field_vars.len() == 0LL) {
		jule::Str _53217_obj = jule::Str("return ", 7);
		_53217_obj+=_1e86ed47d_gen_expr(_53021_r->_field_expr);
		_53217_obj+=jule::Str(";", 1);
		return _53217_obj;
	}
	if (_53021_r->_field_vars.len() > 1LL) {
		return _1e86b150c_gen_ret_expr_tuple(_53021_r);
	}
	if ((!(_1ce35e3a0_is_ignore_ident(_53021_r->_field_vars[0LL]->_field_ident)))) {
		jule::Str _54313_ident = _1b710bbe2_var_out_ident(_53021_r->_field_vars[0LL]);
		jule::Str _54417_obj = _54313_ident;
		_54417_obj+=jule::Str(" = ", 3);
		_54417_obj+=_1e86ed47d_gen_expr(_53021_r->_field_expr);
		_54417_obj+=jule::Str(";\n", 2);
		_54417_obj+=_1b710e497_indent();
		_54417_obj+=jule::Str("return ", 7);
		_54417_obj+=_54313_ident;
		_54417_obj+=jule::Str(";", 1);
		return _54417_obj;
	}
	jule::Str _55513_obj = jule::Str("return ", 7);
	_55513_obj+=_1e86ed47d_gen_expr(_53021_r->_field_expr);
	_55513_obj+=jule::Str(";", 1);
	return _55513_obj;
}



inline jule::Str _1e86b150c_gen_ret_st(jule::Ref<_1b61e873b_RetSt> _56119_r) {
	if ((_56119_r->_field_expr == nullptr) && (_56119_r->_field_vars.len() == 0LL)) {
		return jule::Str("return;", 7);
	}
	if (_56119_r->_field_expr == nullptr) {
		return _1e86b150c_gen_ret_vars(_56119_r);
	}
	return _1e86b150c_gen_ret_expr(_56119_r);
}



inline jule::Str _1e86b150c_gen_ret_st_with_defaults(jule::Ref<_1b6703d45_TypeKind> _57333_result) {
	jule::Str _57413_obj = jule::Str("return ", 7);
	if (jule::real(_57333_result->_method_tup())) {
		_57413_obj+=jule::Str("std::make_tuple(", 16);
		for (auto _1e86b150c_t: _57333_result->_method_tup()->_field_types) {
			{
				_57413_obj+=_1e86ed47d_get_init_expr(_1e86b150c_t);
				_57413_obj+=jule::Str(",", 1);
			}
		_iter_next_4546040448:;
		}
		_iter_end_4546040448:;
		_57413_obj=_57413_obj.slice(0LL,static_cast<jule::Int>(_57413_obj.len() - 1LL));
		_57413_obj+=jule::Str(")", 1);
	} else {
		_57413_obj+=_1e86ed47d_get_init_expr(_57333_result);
	}
	_57413_obj+=jule::Str(";", 1);
	return _57413_obj;
}



inline jule::Str _1e86b150c_gen_recover(jule::Ref<_1b61e873b_Recover> _59020_r) {
	jule::Str _59113_obj = jule::Str("try ", 4);
	_59113_obj+=_1e86b150c_gen_scope(_59020_r->_field_scope);
	_59113_obj+=jule::Str(" catch(jule::Exception e) ", 26);
	if (_59020_r->_field_handler->_method_is_anon()) {
		_1b710e497_add_indent();
		_59113_obj+=jule::Str("{\n", 2);
		_59113_obj+=_1b710e497_indent();
		_59113_obj+=_1e86ed47d_gen_expr(_59020_r->_field_handler_expr);
		_59113_obj+=jule::Str("(jule::exception_to_error(e));", 30);
		if ((!(_59020_r->_field_scope_owner->_field_decl->_method_is_void()))) {
			_59113_obj+=jule::Str("\n", 1);
			_59113_obj+=_1b710e497_indent();
			_1b710e497_done_indent();
			_59113_obj+=_1e86b150c_gen_ret_st_with_defaults(_59020_r->_field_scope_owner->_field_result);
		} else {
			_1b710e497_done_indent();
		}
		_59113_obj+=jule::Str("\n", 1);
		_59113_obj+=_1b710e497_indent();
		_59113_obj+=jule::Str("}", 1);
	} else {
		_59113_obj+=jule::Str("{\n", 2);
		_1b710e497_add_indent();
		_59113_obj+=_1b710e497_indent();
		_59113_obj+=_1e86ed47d_gen_expr(_59020_r->_field_handler_expr);
		_59113_obj+=jule::Str("(jule::exception_to_error(e));\n", 31);
		_59113_obj+=_1b710e497_indent();
		if (_59020_r->_field_scope_owner->_field_decl->_method_is_void()) {
			_1b710e497_done_indent();
			_59113_obj+=jule::Str(" }", 2);
		} else {
			_59113_obj+=_1e86b150c_gen_ret_st_with_defaults(_59020_r->_field_scope_owner->_field_result);
			_59113_obj+=jule::Str("\n", 1);
			_1b710e497_done_indent();
			_59113_obj+=_1b710e497_indent();
			_59113_obj+=jule::Str("}", 1);
		}
	}
	return _59113_obj;
}



inline jule::Str _1e86b150c_gen_data_expr(jule::Ref<_1b66db129_Data> _63922_d) {
	return _1e86ed47d_gen_expr(_63922_d->_field_model) + jule::Str(";", 1);
}



inline jule::Str _1e86b150c_gen_scope_var(jule::Ref<_1b637edab_Var> _64322_v) {
	if (_64322_v->_field_constant) {
		return jule::Str("", 0);
	}
	return _1b710e497_gen_var(_64322_v);
}



inline jule::Str _1e86b150c_gen_st(jule::Any _65115_st) {
	{
		auto _match_expr{ _65115_st };
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Scope>>())) { goto _case_end_4546064592; }
		_case_begin_4546064592:;
		{
			return _1e86b150c_gen_scope(_65115_st.operator jule::Ref<_1b61e873b_Scope>());
		}
		goto _match_end_4546061904;
		_case_end_4546064592:;
		if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4546064688; }
		_case_begin_4546064688:;
		{
			return _1e86b150c_gen_scope_var(_65115_st.operator jule::Ref<_1b637edab_Var>());
		}
		goto _match_end_4546061904;
		_case_end_4546064688:;
		if (!(_match_expr.type_is<jule::Ref<_1b66db129_Data>>())) { goto _case_end_4546063872; }
		_case_begin_4546063872:;
		{
			return _1e86b150c_gen_data_expr(_65115_st.operator jule::Ref<_1b66db129_Data>());
		}
		goto _match_end_4546061904;
		_case_end_4546063872:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Conditional>>())) { goto _case_end_4546063968; }
		_case_begin_4546063968:;
		{
			return _1e86b150c_gen_conditional(_65115_st.operator jule::Ref<_1b61e873b_Conditional>());
		}
		goto _match_end_4546061904;
		_case_end_4546063968:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_InfIter>>())) { goto _case_end_4546064064; }
		_case_begin_4546064064:;
		{
			return _1e86b150c_gen_inf_iter(_65115_st.operator jule::Ref<_1b61e873b_InfIter>());
		}
		goto _match_end_4546061904;
		_case_end_4546064064:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_WhileIter>>())) { goto _case_end_4546064160; }
		_case_begin_4546064160:;
		{
			return _1e86b150c_gen_while_iter(_65115_st.operator jule::Ref<_1b61e873b_WhileIter>());
		}
		goto _match_end_4546061904;
		_case_end_4546064160:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_RangeIter>>())) { goto _case_end_4546064256; }
		_case_begin_4546064256:;
		{
			return _1e86b150c_gen_range_iter(_65115_st.operator jule::Ref<_1b61e873b_RangeIter>());
		}
		goto _match_end_4546061904;
		_case_end_4546064256:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_ContSt>>())) { goto _case_end_4546064352; }
		_case_begin_4546064352:;
		{
			return _1e86b150c_gen_cont(_65115_st.operator jule::Ref<_1b61e873b_ContSt>());
		}
		goto _match_end_4546061904;
		_case_end_4546064352:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Label>>())) { goto _case_end_4546064448; }
		_case_begin_4546064448:;
		{
			return _1e86b150c_gen_label(_65115_st.operator jule::Ref<_1b61e873b_Label>());
		}
		goto _match_end_4546061904;
		_case_end_4546064448:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_GotoSt>>())) { goto _case_end_4546065216; }
		_case_begin_4546065216:;
		{
			return _1e86b150c_gen_goto(_65115_st.operator jule::Ref<_1b61e873b_GotoSt>());
		}
		goto _match_end_4546061904;
		_case_end_4546065216:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Postfix>>())) { goto _case_end_4546065312; }
		_case_begin_4546065312:;
		{
			return _1e86b150c_gen_postfix(_65115_st.operator jule::Ref<_1b61e873b_Postfix>());
		}
		goto _match_end_4546061904;
		_case_end_4546065312:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Assign>>())) { goto _case_end_4546065408; }
		_case_begin_4546065408:;
		{
			return _1e86b150c_gen_assign(_65115_st.operator jule::Ref<_1b61e873b_Assign>());
		}
		goto _match_end_4546061904;
		_case_end_4546065408:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_MultiAssign>>())) { goto _case_end_4546065520; }
		_case_begin_4546065520:;
		{
			return _1e86b150c_gen_multi_assign(_65115_st.operator jule::Ref<_1b61e873b_MultiAssign>());
		}
		goto _match_end_4546061904;
		_case_end_4546065520:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Match>>())) { goto _case_end_4546065632; }
		_case_begin_4546065632:;
		{
			return _1e86b150c_gen_match(_65115_st.operator jule::Ref<_1b61e873b_Match>());
		}
		goto _match_end_4546061904;
		_case_end_4546065632:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_FallSt>>())) { goto _case_end_4546065744; }
		_case_begin_4546065744:;
		{
			return _1e86b150c_gen_fall_st(_65115_st.operator jule::Ref<_1b61e873b_FallSt>());
		}
		goto _match_end_4546061904;
		_case_end_4546065744:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_BreakSt>>())) { goto _case_end_4546065856; }
		_case_begin_4546065856:;
		{
			return _1e86b150c_gen_break_st(_65115_st.operator jule::Ref<_1b61e873b_BreakSt>());
		}
		goto _match_end_4546061904;
		_case_end_4546065856:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_RetSt>>())) { goto _case_end_4546065968; }
		_case_begin_4546065968:;
		{
			return _1e86b150c_gen_ret_st(_65115_st.operator jule::Ref<_1b61e873b_RetSt>());
		}
		goto _match_end_4546061904;
		_case_end_4546065968:;
		if (!(_match_expr.type_is<jule::Ref<_1b61e873b_Recover>>())) { goto _case_end_4546066080; }
		_case_begin_4546066080:;
		{
			return _1e86b150c_gen_recover(_65115_st.operator jule::Ref<_1b61e873b_Recover>());
		}
		goto _match_end_4546061904;
		_case_end_4546066080:;
		_case_begin_4546062432:;
		{
			return jule::Str("<unimplemented_stmt>", 20);
		}
		goto _match_end_4546061904;
		_case_end_4546062432:;
		_match_end_4546061904:;
	}
}



inline jule::Str _1e86b150c_gen_scope(jule::Ref<_1b61e873b_Scope> _67618_s) {
	jule::Str _67713_obj = jule::Str("{\n", 2);
	_1b710e497_add_indent();
	for (auto _1e86b150c_st: _67618_s->_field_stmts) {
		{
			_67713_obj+=_1b710e497_indent();
			_67713_obj+=_1e86b150c_gen_st(_1e86b150c_st);
			_67713_obj+=jule::Str("\n", 1);
		}
	_iter_next_4546091520:;
	}
	_iter_end_4546091520:;
	_1b710e497_done_indent();
	_67713_obj+=_1b710e497_indent();
	_67713_obj+=jule::Str("}", 1);
	if (_67618_s->_field_deferred) {
		_67713_obj=(jule::Str("__JULE_DEFER(", 13) + _67713_obj) + jule::Str(");", 2);
	}
	return _67713_obj;
}



inline jule::Str _1e86b150c_gen_fn_scope(jule::Ref<_1b6069348_FnIns> _69821_f) {
	if (jule::real(_69821_f->_field_owner)) {
		return _1e86b150c_gen_method_scope(_69821_f);
	}
	return _1e86b150c_gen_scope(_69821_f->_field_scope);
}



inline jule::Str _1e86b150c_gen_method_scope(jule::Ref<_1b6069348_FnIns> _70725_f) {
	return _1e86b150c_gen_scope(_70725_f->_field_scope);
}



inline jule::Str _1e86ed47d_concat_all_parts(jule::Slice<jule::Str> _8021_parts) {
	jule::Str _8113_s = jule::Str("", 0);
	for (auto _1e86ed47d_part: _8021_parts) {
		{
			_8113_s+=_1e86ed47d_part;
		}
	_iter_next_4546100304:;
	}
	_iter_end_4546100304:;
	return _8113_s;
}



inline jule::Str _1e86ed47d_get_accessor(jule::Ref<_1b6703d45_TypeKind>& _8822_t) {
	if (jule::real(_8822_t->_method_ref()) || jule::real(_8822_t->_method_ptr())) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



inline jule::Str _1e86ed47d_decompose_common_esq(jule::U8 _9525_b) {
	{
		auto _match_expr{ _9525_b };
		if (!(('\\') == _match_expr)) { goto _case_end_4546106400; }
		_case_begin_4546106400:;
		{
			return jule::Str("\\\\", 2);
		}
		goto _match_end_4546105120;
		_case_end_4546106400:;
		if (!(('\'') == _match_expr)) { goto _case_end_4546106208; }
		_case_begin_4546106208:;
		{
			return jule::Str("'", 1);
		}
		goto _match_end_4546105120;
		_case_end_4546106208:;
		if (!(('\"') == _match_expr)) { goto _case_end_4546106656; }
		_case_begin_4546106656:;
		{
			return jule::Str("\\\"", 2);
		}
		goto _match_end_4546105120;
		_case_end_4546106656:;
		if (!(('\a') == _match_expr)) { goto _case_end_4546106752; }
		_case_begin_4546106752:;
		{
			return jule::Str("\\a", 2);
		}
		goto _match_end_4546105120;
		_case_end_4546106752:;
		if (!(('\b') == _match_expr)) { goto _case_end_4546106848; }
		_case_begin_4546106848:;
		{
			return jule::Str("\\b", 2);
		}
		goto _match_end_4546105120;
		_case_end_4546106848:;
		if (!(('\f') == _match_expr)) { goto _case_end_4546105456; }
		_case_begin_4546105456:;
		{
			return jule::Str("\\f", 2);
		}
		goto _match_end_4546105120;
		_case_end_4546105456:;
		if (!(('\n') == _match_expr)) { goto _case_end_4546105552; }
		_case_begin_4546105552:;
		{
			return jule::Str("\\n", 2);
		}
		goto _match_end_4546105120;
		_case_end_4546105552:;
		if (!(('\r') == _match_expr)) { goto _case_end_4546105648; }
		_case_begin_4546105648:;
		{
			return jule::Str("\\r", 2);
		}
		goto _match_end_4546105120;
		_case_end_4546105648:;
		if (!(('\t') == _match_expr)) { goto _case_end_4546105744; }
		_case_begin_4546105744:;
		{
			return jule::Str("\\t", 2);
		}
		goto _match_end_4546105120;
		_case_end_4546105744:;
		if (!(('\v') == _match_expr)) { goto _case_end_4546107024; }
		_case_begin_4546107024:;
		{
			return jule::Str("\\v", 2);
		}
		goto _match_end_4546105120;
		_case_end_4546107024:;
		_case_begin_4541834032:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4546105120;
		_case_end_4541834032:;
		_match_end_4546105120:;
	}
}



inline jule::Str _1e86ed47d_sbtoa(jule::U8 _11110_b) {
	if (_11110_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_11110_b <= 127LL) {
		jule::Str _11713_seq = _1e86ed47d_decompose_common_esq(_11110_b);
		if (_11713_seq != jule::Str("", 0)) {
			return _11713_seq;
		}
		if ((32LL <= _11110_b) && (_11110_b <= 126LL)) {
			return static_cast<jule::Str>(_11110_b);
		}
	}
	jule::Str _1279_seq = _1e86edbba_fmt_uint(static_cast<jule::U64>(_11110_b),8LL);
	if (_1279_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1279_seq;
	}
	return jule::Str("\\", 1) + _1279_seq;
}



inline jule::Str _1e86ed47d_get_str_model(jule::Ref<_1b6d4076c_Const>& _13419_c) {
	jule::Str _1359_content = _13419_c->_method_read_str();
	jule::Slice<jule::U8> _1369_bytes = static_cast<jule::Slice<jule::U8>>(_1359_content);
	jule::Str _1379_len = _1e86edbba_fmt_int(static_cast<jule::I64>(_1369_bytes.len()),10LL);
	jule::Str _13913_lit = jule::Str("", 0);
	for (auto _1e86ed47d_b: _1369_bytes) {
		{
			_13913_lit+=_1e86ed47d_sbtoa(_1e86ed47d_b);
		}
	_iter_next_4546123728:;
	}
	_iter_end_4546123728:;
	return ((((_1b710bbe2_as_jt(jule::Str("str", 3)) + jule::Str("(\"", 2)) + _13913_lit) + jule::Str("\", ", 3)) + _1379_len) + jule::Str(")", 1);
}



inline jule::Str _1e86ed47d_get_bool_model(jule::Ref<_1b6d4076c_Const>& _14720_c) {
	if (_14720_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1e86ed47d_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _1e86ed47d_gen_float_special_cases(jule::F64& _15629_x) {
	{
		if (!((_1cddd8b83_is_nan(_15629_x)))) { goto _case_end_4546130560; }
		_case_begin_4546130560:;
		{
			return jule::Str("NAN", 3);
		}
		goto _match_end_4546127808;
		_case_end_4546130560:;
		if (!((_1cddd8b83_is_inf(_15629_x,1LL)))) { goto _case_end_4546130128; }
		_case_begin_4546130128:;
		{
			return jule::Str("INFINITY", 8);
		}
		goto _match_end_4546127808;
		_case_end_4546130128:;
		if (!((_1cddd8b83_is_inf(_15629_x,-1LL)))) { goto _case_end_4546130224; }
		_case_begin_4546130224:;
		{
			return jule::Str("-INFINITY", 9);
		}
		goto _match_end_4546127808;
		_case_end_4546130224:;
		_case_begin_4546129232:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4546127808;
		_case_end_4546129232:;
		_match_end_4546127808:;
	}
}



inline jule::Str _1e86ed47d_ftoa(jule::F64 _1659_f,jule::Int _16517_bitsize) {
	if (_16517_bitsize != 32LL) {
		if (_1659_f == static_cast<jule::F64>(static_cast<jule::I64>(_1659_f))) {
			return _1e86ed47d_i64toa(static_cast<jule::I64>(_1659_f));
		}
		if (_1659_f == static_cast<jule::F64>(static_cast<jule::U64>(_1659_f))) {
			return _1e86ed47d_u64toa(static_cast<jule::U64>(_1659_f));
		}
	}
	jule::Str _17513_m = _1e770c537_fmt_float(_1659_f,'f',-1LL,_16517_bitsize);
	if (_17513_m.find(jule::Str(".", 1)) == -1LL) {
		_17513_m+=jule::Str(".0", 2);
	}
	return _17513_m;
}



inline jule::Str _1e86ed47d_get_f32_model(jule::Ref<_1b6d4076c_Const>& _18219_c) {
	jule::F64 _1839_x = _18219_c->_method_as_f64();
	jule::Str _1869_f = _1e86ed47d_gen_float_special_cases(_1839_x);
	if (_1869_f != jule::Str("", 0)) {
		return _1869_f;
	}
	{
		if (!((_1839_x == 340282346638528860000000000000000000000.0))) { goto _case_end_4546143808; }
		_case_begin_4546143808:;
		{
			return jule::Str("jule::MAX_F32", 13);
		}
		goto _match_end_4546144512;
		_case_end_4546143808:;
		if (!((_1839_x == -340282346638528860000000000000000000000.0))) { goto _case_end_4546143904; }
		_case_begin_4546143904:;
		{
			return jule::Str("jule::MIN_F32", 13);
		}
		goto _match_end_4546144512;
		_case_end_4546143904:;
		_match_end_4546144512:;
	}
	return _1e86ed47d_ftoa(_1839_x,32LL) + jule::Str("f", 1);
}



inline jule::Str _1e86ed47d_get_f64_model(jule::Ref<_1b6d4076c_Const>& _19919_c) {
	jule::F64 _2009_x = _19919_c->_method_as_f64();
	jule::Str _2039_f = _1e86ed47d_gen_float_special_cases(_2009_x);
	if (_2039_f != jule::Str("", 0)) {
		return _2039_f;
	}
	{
		if (!((_2009_x == jule::MAX_F64))) { goto _case_end_4546150208; }
		_case_begin_4546150208:;
		{
			return jule::Str("jule::MAX_F64", 13);
		}
		goto _match_end_4546149792;
		_case_end_4546150208:;
		if (!((_2009_x == jule::MIN_F64))) { goto _case_end_4546150304; }
		_case_begin_4546150304:;
		{
			return jule::Str("jule::MIN_F64", 13);
		}
		goto _match_end_4546149792;
		_case_end_4546150304:;
		_match_end_4546149792:;
	}
	return _1e86ed47d_ftoa(_2009_x,64LL);
}



inline jule::Str _1e86ed47d_get_float_model(jule::Ref<_1b66db129_Data>& _21625_d) {
	{
		if (!((_21625_d->_field_kind->_method_prim()->_method_is_f32()))) { goto _case_end_4546154768; }
		_case_begin_4546154768:;
		{
			return _1e86ed47d_get_f32_model(_21625_d->_field_constant);
		}
		goto _match_end_4546152464;
		_case_end_4546154768:;
		_case_begin_4546152080:;
		{
			return _1e86ed47d_get_f64_model(_21625_d->_field_constant);
		}
		goto _match_end_4546152464;
		_case_end_4546152080:;
		_match_end_4546152464:;
	}
}



inline jule::Str _1e86ed47d_i64toa(jule::I64 _22311_x) {
	{
		if (!((_22311_x == jule::MAX_I64))) { goto _case_end_4546155328; }
		_case_begin_4546155328:;
		{
			return jule::Str("jule::MAX_I64", 13);
		}
		goto _match_end_4546153680;
		_case_end_4546155328:;
		if (!((_22311_x == jule::MIN_I64))) { goto _case_end_4546155424; }
		_case_begin_4546155424:;
		{
			return jule::Str("jule::MIN_I64", 13);
		}
		goto _match_end_4546153680;
		_case_end_4546155424:;
		_match_end_4546153680:;
	}
	jule::Str _2299_fmt = _1e86edbba_fmt_int(_22311_x,10LL);
	if (_1e7731968_is_64bit(jule::Str("i386", 4))) {
		return _2299_fmt + jule::Str("LL", 2);
	}
	return _2299_fmt + jule::Str("L", 1);
}



inline jule::Str _1e86ed47d_get_i64_model(jule::Ref<_1b6d4076c_Const>& _23619_c) {
	return _1e86ed47d_i64toa(static_cast<jule::I64>(_23619_c->_method_read_i64()));
}



inline jule::Str _1e86ed47d_u64toa(jule::U64 _24011_x) {
	{
		if (!((_24011_x == jule::MAX_U64))) { goto _case_end_4546162512; }
		_case_begin_4546162512:;
		{
			return jule::Str("jule::MAX_U64", 13);
		}
		goto _match_end_4546159888;
		_case_end_4546162512:;
		_match_end_4546159888:;
	}
	jule::Str _2469_fmt = _1e86edbba_fmt_uint(_24011_x,10LL);
	if (_1e7731968_is_64bit(jule::Str("i386", 4))) {
		return _2469_fmt + jule::Str("LLU", 3);
	}
	return _2469_fmt + jule::Str("LU", 2);
}



inline jule::Str _1e86ed47d_get_u64_model(jule::Ref<_1b6d4076c_Const> _25318_c) {
	return _1e86ed47d_u64toa(static_cast<jule::U64>(_25318_c->_method_read_u64()));
}



inline jule::Str _1e86ed47d_gen_const_expr(jule::Ref<_1b66db129_Data> _25723_d) {
	{
		if (!((_25723_d->_field_constant->_method_is_str()))) { goto _case_end_4546169184; }
		_case_begin_4546169184:;
		{
			return _1e86ed47d_get_str_model(_25723_d->_field_constant);
		}
		goto _match_end_4546164800;
		_case_end_4546169184:;
		if (!((_25723_d->_field_constant->_method_is_bool()))) { goto _case_end_4546169280; }
		_case_begin_4546169280:;
		{
			return _1e86ed47d_get_bool_model(_25723_d->_field_constant);
		}
		goto _match_end_4546164800;
		_case_end_4546169280:;
		if (!((_25723_d->_field_constant->_method_is_f64()))) { goto _case_end_4546169376; }
		_case_begin_4546169376:;
		{
			return _1e86ed47d_get_float_model(_25723_d);
		}
		goto _match_end_4546164800;
		_case_end_4546169376:;
		if (!((_25723_d->_field_constant->_method_is_i64()))) { goto _case_end_4546169808; }
		_case_begin_4546169808:;
		{
			return _1e86ed47d_get_i64_model(_25723_d->_field_constant);
		}
		goto _match_end_4546164800;
		_case_end_4546169808:;
		if (!((_25723_d->_field_constant->_method_is_u64()))) { goto _case_end_4546169904; }
		_case_begin_4546169904:;
		{
			return _1e86ed47d_get_u64_model(_25723_d->_field_constant);
		}
		goto _match_end_4546164800;
		_case_end_4546169904:;
		if (!((_25723_d->_field_constant->_method_is_nil()))) { goto _case_end_4546170000; }
		_case_begin_4546170000:;
		{
			return _1e86ed47d_get_nil_model();
		}
		goto _match_end_4546164800;
		_case_end_4546170000:;
		_case_begin_4546166560:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4546164800;
		_case_end_4546166560:;
		_match_end_4546164800:;
	}
}



inline jule::Str _1e86ed47d_gen_const_expr_model(jule::Ref<_1b6d4076c_Const> _26925_m) {
	{
		if (!((_26925_m->_method_is_str()))) { goto _case_end_4546179296; }
		_case_begin_4546179296:;
		{
			return _1e86ed47d_get_str_model(_26925_m);
		}
		goto _match_end_4546178544;
		_case_end_4546179296:;
		if (!((_26925_m->_method_is_bool()))) { goto _case_end_4546179392; }
		_case_begin_4546179392:;
		{
			return _1e86ed47d_get_bool_model(_26925_m);
		}
		goto _match_end_4546178544;
		_case_end_4546179392:;
		if (!((_26925_m->_method_is_f64()))) { goto _case_end_4546179488; }
		_case_begin_4546179488:;
		{
			return _1e86ed47d_get_f64_model(_26925_m);
		}
		goto _match_end_4546178544;
		_case_end_4546179488:;
		if (!((_26925_m->_method_is_i64()))) { goto _case_end_4546179920; }
		_case_begin_4546179920:;
		{
			return _1e86ed47d_get_i64_model(_26925_m);
		}
		goto _match_end_4546178544;
		_case_end_4546179920:;
		if (!((_26925_m->_method_is_u64()))) { goto _case_end_4546180016; }
		_case_begin_4546180016:;
		{
			return _1e86ed47d_get_u64_model(_26925_m);
		}
		goto _match_end_4546178544;
		_case_end_4546180016:;
		if (!((_26925_m->_method_is_nil()))) { goto _case_end_4546180112; }
		_case_begin_4546180112:;
		{
			return _1e86ed47d_get_nil_model();
		}
		goto _match_end_4546178544;
		_case_end_4546180112:;
		_case_begin_4546177856:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4546178544;
		_case_end_4546177856:;
		_match_end_4546178544:;
	}
}



inline jule::Str _1e86ed47d_gen_div_by_zero_binop_expr_model(jule::Str _28137_op,jule::Any _28150_l,jule::Any _28168_r) {
	jule::Str _28213_op_func = jule::Str("", 0);
	{
		auto _match_expr{ _28137_op };
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4546186800; }
		_case_begin_4546186800:;
		{
			_28213_op_func=jule::Str("div", 3);
		}
		goto _match_end_4546187632;
		_case_end_4546186800:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4546187712; }
		_case_begin_4546187712:;
		{
			_28213_op_func=jule::Str("mod", 3);
		}
		goto _match_end_4546187632;
		_case_end_4546187712:;
		_match_end_4546187632:;
	}
	if (_1ce1465e9_is_opt_enabled(jule::Str("--opt-math", 10))) {
		{
			auto _match_expr{ _28168_r };
			if (!(_match_expr.type_is<jule::Ref<_1b6d4076c_Const>>())) { goto _case_end_4546190048; }
			_case_begin_4546190048:;
			{
				_28213_op_func=jule::Str("unsafe_", 7) + _28213_op_func;
			}
			goto _match_end_4546189584;
			_case_end_4546190048:;
			_match_end_4546189584:;
		}
	}
	jule::Str _29513_obj = jule::Str("jule::", 6);
	_29513_obj+=_28213_op_func;
	_29513_obj+=jule::Str("(", 1);
	_29513_obj+=_1e86ed47d_gen_expr(_28150_l);
	_29513_obj+=jule::Str(",", 1);
	_29513_obj+=_1e86ed47d_gen_expr(_28168_r);
	_29513_obj+=jule::Str(")", 1);
	return _29513_obj;
}



inline jule::Str _1e86ed47d_gen_binop_expr_model(jule::Ref<_1b61decc6_BinopExprModel> _30529_m) {
	{
		auto _match_expr{ _30529_m->_field_op };
		if (!((jule::Str("/", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr)) { goto _case_end_4546194240; }
		_case_begin_4546194240:;
		{
			return _1e86ed47d_gen_div_by_zero_binop_expr_model(_30529_m->_field_op,_30529_m->_field_left,_30529_m->_field_right);
		}
		goto _match_end_4546194112;
		_case_end_4546194240:;
		_match_end_4546194112:;
	}
	jule::Str _31213_obj = jule::Str("(", 1);
	_31213_obj+=_1e86ed47d_gen_expr_model(_30529_m->_field_left);
	_31213_obj+=jule::Str(" ", 1);
	_31213_obj+=_30529_m->_field_op;
	_31213_obj+=jule::Str(" ", 1);
	_31213_obj+=_1e86ed47d_gen_expr_model(_30529_m->_field_right);
	_31213_obj+=jule::Str(")", 1);
	return _31213_obj;
}



inline jule::Str _1e86ed47d_gen_var_expr_model(jule::Ref<_1b637edab_Var> _32227_m) {
	if (_32227_m->_field_cpp_linked) {
		jule::Ref<_1ce385d22_Directive> _32413_d = _1b7110850_find_directive(_32227_m->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_32413_d)) {
			jule::Str _32621_obj = _1e86ed47d_concat_all_parts(_32413_d->_field_args);
			_32621_obj+=jule::Str("::", 2);
			_32621_obj+=_1b710bbe2_var_out_ident(_32227_m);
			return _32621_obj;
		}
	}
	return _1b710bbe2_var_out_ident(_32227_m);
}



inline jule::Str _1e86ed47d_gen_struct_expr_model(jule::Ref<_1ce385eed_Struct> _33526_m) {
	return _1b7110850_gen_struct_kind(_33526_m);
}



inline jule::Str _1e86ed47d_gen_struct_ins_expr_model(jule::Ref<_1ce385eed_StructIns> _33934_m) {
	return _1b7110850_gen_struct_kind_ins(_33934_m);
}



inline jule::Str _1e86ed47d_gen_unary_expr_model(jule::Ref<_1b61decc6_UnaryExprModel> _34329_m) {
	{
		auto _match_expr{ _34329_m->_field_op };
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4546209344; }
		_case_begin_4546209344:;
		{
			jule::Str _34617_obj = jule::Str("(~(", 3);
			_34617_obj+=_1e86ed47d_gen_expr(_34329_m->_field_expr);
			_34617_obj+=jule::Str("))", 2);
			return _34617_obj;
		}
		goto _match_end_4546207280;
		_case_end_4546209344:;
		_case_begin_4546207104:;
		{
			jule::Str _35217_obj = jule::Str("(", 1);
			_35217_obj+=_34329_m->_field_op;
			_35217_obj+=jule::Str("(", 1);
			_35217_obj+=_1e86ed47d_gen_expr(_34329_m->_field_expr);
			_35217_obj+=jule::Str("))", 2);
			return _35217_obj;
		}
		goto _match_end_4546207280;
		_case_end_4546207104:;
		_match_end_4546207280:;
	}
}



inline jule::Str _1e86ed47d_gen_get_ref_ptr_expr_model(jule::Ref<_1b61decc6_GetRefPtrExprModel> _36135_m) {
	jule::Str _36213_obj = jule::Str("(", 1);
	_36213_obj+=_1e86ed47d_gen_expr(_36135_m->_field_expr);
	_36213_obj+=jule::Str(").alloc", 7);
	return _36213_obj;
}



inline jule::Str _1e86ed47d_gen_cpp_struct_lit_expr_model(jule::Ref<_1b61decc6_StructLitExprModel> _36838_m) {
	jule::Str _36913_obj = jule::Str("(", 1) + _1b7110850_gen_struct_kind_ins(_36838_m->_field_strct);
	_36913_obj+=jule::Str("){", 2);
	if (_36838_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		for (auto _1e86ed47d_f: _36838_m->_field_strct->_field_fields) {
			{
				if (_36838_m->_field_strct->_field_decl->_field_cpp_linked) {
					for (auto _1e86ed47d_arg: _36838_m->_field_args) {
						{
							if (_1e86ed47d_arg->_field_field == _1e86ed47d_f) {
								_36913_obj+=jule::Str(".", 1);
								_36913_obj+=_1b710bbe2_field_out_ident(_1e86ed47d_f->_field_decl);
								_36913_obj+=jule::Str("=", 1);
								_36913_obj+=_1e86ed47d_gen_expr(_1e86ed47d_arg->_field_expr);
								_36913_obj+=jule::Str(",", 1);
								goto _iter_next_4546218704;
							}
						}
					_iter_next_4546221376:;
					}
					_iter_end_4546221376:;
					goto _iter_next_4546218704;
				}
				_36913_obj+=_1b710bbe2_field_out_ident(_1e86ed47d_f->_field_decl);
				_36913_obj+=jule::Str(": ", 2);
				for (auto _1e86ed47d_arg: _36838_m->_field_args) {
					{
						if (_1e86ed47d_arg->_field_field == _1e86ed47d_f) {
							_36913_obj+=_1e86ed47d_gen_expr(_1e86ed47d_arg->_field_expr);
							_36913_obj+=jule::Str(",", 1);
							goto _iter_next_4546218704;
						}
					}
				_iter_next_4546220128:;
				}
				_iter_end_4546220128:;
				_36913_obj+=_1e86ed47d_get_init_expr(_1e86ed47d_f->_field_kind);
				_36913_obj+=jule::Str(",", 1);
			}
		_iter_next_4546218704:;
		}
		_iter_end_4546218704:;
		_36913_obj=_36913_obj.slice(0LL,static_cast<jule::Int>(_36913_obj.len() - 1LL));
	}
	_36913_obj+=jule::Str("}", 1);
	return _36913_obj;
}



inline jule::Str _1e86ed47d_gen_struct_lit_expr_model(jule::Ref<_1b61decc6_StructLitExprModel> _40634_m) {
	if (_40634_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _1e86ed47d_gen_cpp_struct_lit_expr_model(_40634_m);
	}
	jule::Str _41113_obj = _1b710bbe2_struct_ins_out_ident(_40634_m->_field_strct);
	_41113_obj+=jule::Str("(", 1);
	if (_40634_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		for (auto _1e86ed47d_f: _40634_m->_field_strct->_field_fields) {
			{
				for (auto _1e86ed47d_arg: _40634_m->_field_args) {
					{
						if (_1e86ed47d_arg->_field_field == _1e86ed47d_f) {
							_41113_obj+=_1e86ed47d_gen_expr(_1e86ed47d_arg->_field_expr);
							_41113_obj+=jule::Str(",", 1);
							goto _iter_next_4546236752;
						}
					}
				_iter_next_4546238512:;
				}
				_iter_end_4546238512:;
				_41113_obj+=_1e86ed47d_get_init_expr(_1e86ed47d_f->_field_kind);
				_41113_obj+=jule::Str(",", 1);
			}
		_iter_next_4546236752:;
		}
		_iter_end_4546236752:;
		_41113_obj=_41113_obj.slice(0LL,static_cast<jule::Int>(_41113_obj.len() - 1LL));
	}
	_41113_obj+=jule::Str(")", 1);
	return _41113_obj;
}



inline jule::Str _1e86ed47d_gen_alloc_struct_lit_expr_model(jule::Ref<_1b61decc6_AllocStructLitExprModel> _43240_m) {
	jule::Str _43313_obj = jule::Str("jule::new_struct", 16);
	if (_43240_m->_field_lit->_field_strct->_field_decl->_method_has_ref_accessible()) {
		_43313_obj+=jule::Str("_ref", 4);
	}
	_43313_obj+=jule::Str("<", 1);
	_43313_obj+=_1b710bbe2_struct_ins_out_ident(_43240_m->_field_lit->_field_strct);
	_43313_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_43313_obj+=_1e86ed47d_gen_struct_lit_expr_model(_43240_m->_field_lit);
	_43313_obj+=jule::Str(")", 1);
	return _43313_obj;
}



inline jule::Str _1e86ed47d_gen_casting_expr_model(jule::Ref<_1b61decc6_CastingExprModel> _44531_m) {
	jule::Str _44613_obj = jule::Str("", 0);
	{
		if (!((jule::real(_44531_m->_field_kind->_method_prim()) && _44531_m->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4546251488; }
		_case_begin_4546251488:;
		{
			_44613_obj+=_1b7110850_gen_type_kind(_44531_m->_field_kind);
			_44613_obj+=jule::Str("(", 1);
			_44613_obj+=_1e86ed47d_gen_expr_model(_44531_m->_field_expr);
			_44613_obj+=jule::Str(")", 1);
		}
		goto _match_end_4546250592;
		_case_end_4546251488:;
		if (!((jule::real(_44531_m->_field_expr_kind->_method_ptr())) || (jule::real(_44531_m->_field_kind->_method_ptr())))) { goto _case_end_4546253728; }
		_case_begin_4546253728:;
		{
			_44613_obj+=jule::Str("((", 2);
			_44613_obj+=_1b7110850_gen_type_kind(_44531_m->_field_kind);
			_44613_obj+=jule::Str(")(", 2);
			_44613_obj+=_1e86ed47d_gen_expr(_44531_m->_field_expr);
			_44613_obj+=jule::Str("))", 2);
		}
		goto _match_end_4546250592;
		_case_end_4546253728:;
		if (!((jule::real(_44531_m->_field_expr_kind->_method_trt())) || (jule::real(_44531_m->_field_expr_kind->_method_prim()) && _44531_m->_field_expr_kind->_method_prim()->_method_is_any()))) { goto _case_end_4546253824; }
		_case_begin_4546253824:;
		{
			_44613_obj+=_1e86ed47d_gen_expr_model(_44531_m->_field_expr);
			_44613_obj+=_1e86ed47d_get_accessor(_44531_m->_field_expr_kind);
			_44613_obj+=jule::Str("operator ", 9);
			_44613_obj+=_1b7110850_gen_type_kind(_44531_m->_field_kind);
			_44613_obj+=jule::Str("()", 2);
		}
		goto _match_end_4546250592;
		_case_end_4546253824:;
		_case_begin_4546250704:;
		{
			_44613_obj+=jule::Str("static_cast<", 12);
			_44613_obj+=_1b7110850_gen_type_kind(_44531_m->_field_kind);
			_44613_obj+=jule::Str(">(", 2);
			_44613_obj+=_1e86ed47d_gen_expr(_44531_m->_field_expr);
			_44613_obj+=jule::Str(")", 1);
		}
		goto _match_end_4546250592;
		_case_end_4546250704:;
		_match_end_4546250592:;
	}
	return _44613_obj;
}



inline jule::Str _1e86ed47d_gen_arg_expr_models(jule::Slice<jule::Any> _48028_models) {
	if (_48028_models.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _48513_obj = jule::Str("", 0);
	for (auto _1e86ed47d_m: _48028_models) {
		{
			_48513_obj+=_1e86ed47d_gen_expr(_1e86ed47d_m);
			_48513_obj+=jule::Str(",", 1);
		}
	_iter_next_4546266576:;
	}
	_iter_end_4546266576:;
	_48513_obj=_48513_obj.slice(0LL,static_cast<jule::Int>(_48513_obj.len() - 1LL));
	return _48513_obj;
}



inline jule::Str _1e86ed47d_gen_expr_model_for_call(jule::Any _49432_expr) {
	{
		auto _match_expr{ _49432_expr };
		if (!(_match_expr.type_is<jule::Ref<_1b6069348_FnIns>>())) { goto _case_end_4546271024; }
		_case_begin_4546271024:;
		{
			return _1e86ed47d_gen_fn_ins_expr_model(_49432_expr.operator jule::Ref<_1b6069348_FnIns>());
		}
		goto _match_end_4546269744;
		_case_end_4546271024:;
		_case_begin_4546265136:;
		{
			return _1e86ed47d_gen_expr_model(_49432_expr);
		}
		goto _match_end_4546269744;
		_case_end_4546265136:;
		_match_end_4546269744:;
	}
}



inline jule::Str _1e86ed47d_gen_fn_call_expr_model(jule::Ref<_1b61decc6_FnCallExprModel> _50131_m) {
	jule::Str _50213_obj = _1e86ed47d_gen_expr_model_for_call(_50131_m->_field_expr);
	if ((!(_50131_m->_field_func->_method_is_builtin()))) {
		if (_50131_m->_field_func->_field_decl->_field_cpp_linked && (_50131_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_1b7110850_has_directive(_50131_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_50213_obj+=jule::Str("<", 1);
				for (auto _1e86ed47d_g: _50131_m->_field_func->_field_generics) {
					{
						_50213_obj+=_1b7110850_gen_type_kind(_1e86ed47d_g);
						_50213_obj+=jule::Str(",", 1);
					}
				_iter_next_4546276800:;
				}
				_iter_end_4546276800:;
				_50213_obj=_50213_obj.slice(0LL,static_cast<jule::Int>(_50213_obj.len() - 1LL));
				_50213_obj+=jule::Str(">", 1);
			}
		}
	}
	_50213_obj+=jule::Str("(", 1);
	_50213_obj+=_1e86ed47d_gen_arg_expr_models(_50131_m->_field_args);
	_50213_obj+=jule::Str(")", 1);
	if (_50131_m->_field_is_co) {
		_50213_obj=jule::Str("__JULE_CO(", 10) + _50213_obj;
		_50213_obj+=jule::Str(")", 1);
	}
	return _50213_obj;
}



inline jule::Str _1e86ed47d_gen_slice_expr_model(jule::Ref<_1b61decc6_SliceExprModel> _52829_m) {
	jule::Str _52913_obj = _1b7110850_as_slice_kind(_52829_m->_field_elem_kind);
	_52913_obj+=jule::Str("({", 2);
	_52913_obj+=_1e86ed47d_gen_arg_expr_models(_52829_m->_field_elems);
	_52913_obj+=jule::Str("})", 2);
	return _52913_obj;
}



inline jule::Str _1e86ed47d_gen_indexing_expr_model(jule::Ref<_1b61decc6_IndexigExprModel> _53632_m) {
	jule::Str _53713_obj = _1e86ed47d_gen_expr_model(_53632_m->_field_expr->_field_model);
	if ((_53632_m->_field_index->_method_is_const() && jule::real(_53632_m->_field_expr->_field_kind->_method_arr())) && _1ce1465e9_is_opt_enabled(jule::Str("--opt-access", 12))) {
		_53713_obj+=jule::Str(".__at(", 6);
		_53713_obj+=_1e86ed47d_gen_expr(_53632_m->_field_index->_field_model);
		_53713_obj+=jule::Str(")", 1);
	} else {
		_53713_obj+=jule::Str("[", 1);
		_53713_obj+=_1e86ed47d_gen_expr(_53632_m->_field_index->_field_model);
		_53713_obj+=jule::Str("]", 1);
	}
	return _53713_obj;
}



inline jule::Str _1e86ed47d_gen_anon_fn_expr_model(jule::Ref<_1b61decc6_AnonFnExprModel> _55031_m) {
	jule::Str _55113_obj = _1b7110850_gen_fn_kind(_55031_m->_field_func);
	_55113_obj+=jule::Str("([=]", 4);
	_55113_obj+=_1b710e497_gen_params_ins(_55031_m->_field_func->_field_params);
	_55113_obj+=jule::Str(" mutable -> ", 12);
	_55113_obj+=_1b710e497_gen_fn_ins_result(_55031_m->_field_func);
	_55113_obj+=jule::Str(" ", 1);
	_55113_obj+=_1e86b150c_gen_fn_scope(_55031_m->_field_func);
	_55113_obj+=jule::Str(")", 1);
	return _55113_obj;
}



inline jule::Str _1e86ed47d_gen_map_expr_model(jule::Ref<_1b61decc6_MapExprModel> _56227_m) {
	jule::Str _56313_obj = _1b710bbe2_as_jt(jule::Str("map", 3));
	_56313_obj+=jule::Str("<", 1);
	_56313_obj+=_1b7110850_gen_type_kind(_56227_m->_field_key_kind);
	_56313_obj+=jule::Str(",", 1);
	_56313_obj+=_1b7110850_gen_type_kind(_56227_m->_field_val_kind);
	_56313_obj+=jule::Str(">({", 3);
	if (_56227_m->_field_entries.len() > 0LL) {
		for (auto _1e86ed47d_pair: _56227_m->_field_entries) {
			{
				jule::Str _57121_pair_obj = jule::Str("{", 1);
				_57121_pair_obj+=_1e86ed47d_gen_expr(_1e86ed47d_pair->_field_key);
				_57121_pair_obj+=jule::Str(",", 1);
				_57121_pair_obj+=_1e86ed47d_gen_expr(_1e86ed47d_pair->_field_val);
				_57121_pair_obj+=jule::Str("}", 1);
				_56313_obj+=_57121_pair_obj;
				_56313_obj+=jule::Str(",", 1);
			}
		_iter_next_4546300720:;
		}
		_iter_end_4546300720:;
		_56313_obj=_56313_obj.slice(0LL,static_cast<jule::Int>(_56313_obj.len() - 1LL));
	}
	_56313_obj+=jule::Str("})", 2);
	return _56313_obj;
}



inline jule::Str _1e86ed47d_gen_slicing_expr_model(jule::Ref<_1b61decc6_SlicingExprModel> _58531_m) {
	jule::Str _58613_obj = _1e86ed47d_gen_expr_model(_58531_m->_field_expr);
	_58613_obj+=jule::Str(".slice(", 7);
	_58613_obj+=_1e86ed47d_gen_expr(_58531_m->_field_left);
	if (_58531_m->_field_right != nullptr) {
		_58613_obj+=jule::Str(",", 1);
		_58613_obj+=_1e86ed47d_gen_expr(_58531_m->_field_right);
	}
	_58613_obj+=jule::Str(")", 1);
	return _58613_obj;
}



inline jule::Str _1e86ed47d_gen_trait_sub_ident_expr_model(jule::Ref<_1b61decc6_TraitSubIdentExprModel> _59739_m) {
	jule::Str _59813_obj = _1e86ed47d_gen_expr_model(_59739_m->_field_expr);
	_59813_obj+=jule::Str(".get()._method_", 15);
	_59813_obj+=_59739_m->_field_ident;
	return _59813_obj;
}



inline jule::Str _1e86ed47d_gen_struct_sub_ident_expr_model(jule::Ref<_1b61decc6_StructSubIdentExprModel> _60440_m) {
	jule::Str _60513_obj = _1e86ed47d_gen_expr_model(_60440_m->_field_expr);
	_60513_obj+=_1e86ed47d_get_accessor(_60440_m->_field_expr_kind);
	if (jule::real(_60440_m->_field_field)) {
		_60513_obj+=_1b710bbe2_field_out_ident(_60440_m->_field_field->_field_decl);
	} else {
		_60513_obj+=_1b710bbe2_fn_ins_out_ident(_60440_m->_field_method);
	}
	return _60513_obj;
}



inline jule::Str _1e86ed47d_gen_common_ident_expr_model(jule::Ref<_1b61decc6_CommonIdentExprModel> _61532_m) {
	return _61532_m->_field_ident;
}



inline jule::Str _1e86ed47d_gen_common_sub_ident_expr_model(jule::Ref<_1b61decc6_CommonSubIdentExprModel> _61940_m) {
	jule::Str _62013_obj = _1e86ed47d_gen_expr_model(_61940_m->_field_expr);
	_62013_obj+=_1e86ed47d_get_accessor(_61940_m->_field_expr_kind);
	_62013_obj+=_61940_m->_field_ident;
	return _62013_obj;
}



inline jule::Str _1e86ed47d_gen_array_expr_model(jule::Ref<_1b61decc6_ArrayExprModel> _62629_m) {
	jule::Str _62713_obj = _1b7110850_gen_array_kind(_62629_m->_field_kind);
	_62713_obj+=jule::Str("({", 2);
	_62713_obj+=_1e86ed47d_gen_arg_expr_models(_62629_m->_field_elems);
	_62713_obj+=jule::Str("})", 2);
	return _62713_obj;
}



inline jule::Str _1e86ed47d_gen_fn_ins_expr_model_common(jule::Ref<_1b6069348_FnIns> _63637_m) {
	jule::Str _63713_obj = _1b7110850_gen_fn_kind(_63637_m);
	_63713_obj+=jule::Str("(", 1);
	_63713_obj+=_1e86ed47d_gen_fn_ins_expr_model(_63637_m);
	_63713_obj+=jule::Str(")", 1);
	return _63713_obj;
}



inline jule::Str _1e86ed47d_gen_fn_ins_expr_model(jule::Ref<_1b6069348_FnIns> _64530_m) {
	if (jule::real(_64530_m->_field_decl) && _64530_m->_field_decl->_field_cpp_linked) {
		jule::Ref<_1ce385d22_Directive> _64713_d = _1b7110850_find_directive(_64530_m->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_64713_d)) {
			jule::Str _64921_obj = _1e86ed47d_concat_all_parts(_64713_d->_field_args);
			_64921_obj+=jule::Str("::", 2);
			_64921_obj+=_1b710bbe2_fn_ins_out_ident(_64530_m);
			return _64921_obj;
		}
	}
	return _1b710bbe2_fn_ins_out_ident(_64530_m);
}



inline jule::Str _1e86ed47d_gen_tuple_expr_model(jule::Ref<_1b61decc6_TupleExprModel> _65829_m) {
	jule::Str _65913_obj = jule::Str("std::make_tuple(", 16);
	for (auto _1e86ed47d_d: _65829_m->_field_datas) {
		{
			_65913_obj+=_1e86ed47d_gen_expr(_1e86ed47d_d->_field_model);
			_65913_obj+=jule::Str(",", 1);
		}
	_iter_next_4546335120:;
	}
	_iter_end_4546335120:;
	_65913_obj=_65913_obj.slice(0LL,static_cast<jule::Int>(_65913_obj.len() - 1LL));
	_65913_obj+=jule::Str(")", 1);
	return _65913_obj;
}



inline jule::Str _1e86ed47d_gen_builtin_new_call_expr_model(jule::Ref<_1b61decc6_BuiltinNewCallExprModel> _66940_m) {
	jule::Str _67013_obj = jule::Str("jule::new_ref<", 14);
	_67013_obj+=_1b7110850_gen_type_kind(_66940_m->_field_kind);
	_67013_obj+=jule::Str(">(", 2);
	if (_66940_m->_field_init != nullptr) {
		_67013_obj+=_1e86ed47d_gen_expr(_66940_m->_field_init);
	}
	_67013_obj+=jule::Str(")", 1);
	return _67013_obj;
}



inline jule::Str _1e86ed47d_gen_builtin_out_call_expr_model(jule::Ref<_1b61decc6_BuiltinOutCallExprModel> _68040_m) {
	jule::Str _68113_obj = jule::Str("jule::out(", 10);
	_68113_obj+=_1e86ed47d_gen_expr(_68040_m->_field_expr);
	_68113_obj+=jule::Str(")", 1);
	return _68113_obj;
}



inline jule::Str _1e86ed47d_gen_builtin_outln_call_expr_model(jule::Ref<_1b61decc6_BuiltinOutlnCallExprModel> _68742_m) {
	jule::Str _68813_obj = jule::Str("jule::outln(", 12);
	_68813_obj+=_1e86ed47d_gen_expr(_68742_m->_field_expr);
	_68813_obj+=jule::Str(")", 1);
	return _68813_obj;
}



inline jule::Str _1e86ed47d_gen_builtin_real_call_expr_model(jule::Ref<_1b61decc6_BuiltinRealCallExprModel> _69441_m) {
	jule::Str _69513_obj = jule::Str("jule::real(", 11);
	_69513_obj+=_1e86ed47d_gen_expr(_69441_m->_field_expr);
	_69513_obj+=jule::Str(")", 1);
	return _69513_obj;
}



inline jule::Str _1e86ed47d_gen_builtin_drop_call_expr_model(jule::Ref<_1b61decc6_BuiltinDropCallExprModel> _70141_m) {
	jule::Str _70213_obj = jule::Str("jule::drop(", 11);
	_70213_obj+=_1e86ed47d_gen_expr(_70141_m->_field_expr);
	_70213_obj+=jule::Str(")", 1);
	return _70213_obj;
}



inline jule::Str _1e86ed47d_gen_builtin_panic_call_expr_model(jule::Ref<_1b61decc6_BuiltinPanicCallExprModel> _70842_m) {
	jule::Str _70913_obj = jule::Str("jule::panic(", 12);
	_70913_obj+=_1e86ed47d_gen_expr(_70842_m->_field_expr);
	_70913_obj+=jule::Str(")", 1);
	return _70913_obj;
}



inline jule::Str _1e86ed47d_gen_builtin_make_call_expr_model(jule::Ref<_1b61decc6_BuiltinMakeCallExprModel> _71541_m) {
	jule::Str _71613_obj = jule::Str("", 0);
	if (_71541_m->_field_len != nullptr) {
		_71613_obj+=_1e86ed47d_gen_expr(_71541_m->_field_len);
	} else {
		_71613_obj+=jule::Str("0", 1);
	}
	if (_71541_m->_field_cap != nullptr) {
		_71613_obj+=jule::Str(",", 1) + _1e86ed47d_gen_expr(_71541_m->_field_cap);
	}
	if (jule::real(_71541_m->_field_kind->_method_slc()->_field_elem->_method_enm())) {
		_71613_obj+=jule::Str(",", 1);
		_71613_obj+=_1e86ed47d_get_init_expr(_71541_m->_field_kind->_method_slc()->_field_elem);
		if (_71541_m->_field_cap != nullptr) {
			_71613_obj=(_1b7110850_gen_type_kind(_71541_m->_field_kind) + jule::Str("::alloc(", 8)) + _71613_obj;
		} else {
			_71613_obj=(_1b7110850_gen_type_kind(_71541_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _71613_obj;
		}
	} else {
		_71613_obj=(_1b7110850_gen_type_kind(_71541_m->_field_kind) + jule::Str("::alloc(", 8)) + _71613_obj;
	}
	_71613_obj+=jule::Str(")", 1);
	return _71613_obj;
}



inline jule::Str _1e86ed47d_gen_builtin_append_call_expr_model_assign_opt(jule::Bool _7435_same_dest,jule::Str& _7446_dest_expr,jule::Ref<_1b6703d45_TypeKind>& _74510_dest_kind,jule::Ref<_1b61decc6_SliceExprModel>& _74610_s,jule::Ref<_1b61decc6_BuiltinAppendCallExprModel>& _74710_m) {
	jule::Str _74813_obj = jule::Str("", 0);
	if ((!(_7435_same_dest))) {
		_74813_obj+=_7446_dest_expr;
		_74813_obj+=jule::Str(" = jule::alloc_for_append(", 26);
		_74813_obj+=_1e86ed47d_gen_expr_model(_74710_m->_field_dest);
		_74813_obj+=jule::Str(",", 1);
		_74813_obj+=_1e86edbba_itoa(static_cast<jule::I64>(_74610_s->_field_elems.len()));
		_74813_obj+=jule::Str(");", 2);
	}
	for (auto _1e86ed47d_e: _74610_s->_field_elems) {
		{
			_74813_obj+=_7446_dest_expr;
			_74813_obj+=_1e86ed47d_get_accessor(_74510_dest_kind);
			_74813_obj+=jule::Str("push(", 5);
			_74813_obj+=_1e86ed47d_gen_expr_model(_1e86ed47d_e);
			_74813_obj+=jule::Str(");", 2);
		}
	_iter_next_4546372000:;
	}
	_iter_end_4546372000:;
	return _74813_obj;
}



inline std::tuple<jule::Str,jule::Bool> _1e86ed47d_gen_builtin_append_call_expr_model_assign(jule::Any _76750_dest,jule::Ref<_1b61decc6_BuiltinAppendCallExprModel> _76771_m) {
	jule::Bool _767110_optimized = jule::Bool();
	{
		auto _match_expr{ _76771_m->_field_elements };
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_SliceExprModel>>())) { goto _case_end_4546375552; }
		_case_begin_4546375552:;
		{
			{
				auto _match_expr{ _76750_dest };
				if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4546376096; }
				_case_begin_4546376096:;
				{
					jule::Ref<_1b61decc6_SliceExprModel> _77221_s = _76771_m->_field_elements.operator jule::Ref<_1b61decc6_SliceExprModel>();
					jule::Str _77317_dest_expr = _1e86ed47d_gen_expr_model(_76750_dest);
					jule::Ref<_1b637edab_Var> _77421_dest_var = _76750_dest.operator jule::Ref<_1b637edab_Var>();
					jule::Bool _77517_same_dest = _1b7110850_any_equals_0(_77421_dest_var,_76771_m->_field_dest);
					_767110_optimized = true;
					return std::make_tuple(_1e86ed47d_gen_builtin_append_call_expr_model_assign_opt(_77517_same_dest,_77317_dest_expr,_77421_dest_var->_field_kind->_field_kind,_77221_s,_76771_m),_767110_optimized);
				}
				goto _match_end_4546377424;
				_case_end_4546376096:;
				if (!(_match_expr.type_is<jule::Ref<_1b61decc6_StructSubIdentExprModel>>())) { goto _case_end_4546377504; }
				_case_begin_4546377504:;
				{
					jule::Ref<_1b61decc6_SliceExprModel> _78021_s = _76771_m->_field_elements.operator jule::Ref<_1b61decc6_SliceExprModel>();
					jule::Str _78117_dest_expr = _1e86ed47d_gen_expr_model(_76750_dest);
					jule::Ref<_1ce385eed_FieldIns> _78221_dest_field = _76750_dest.operator jule::Ref<_1b61decc6_StructSubIdentExprModel>()->_field_field;
					jule::Bool _78317_same_dest = _1b7110850_any_equals_1(_78221_dest_field,_76771_m->_field_dest);
					_767110_optimized = true;
					return std::make_tuple(_1e86ed47d_gen_builtin_append_call_expr_model_assign_opt(_78317_same_dest,_78117_dest_expr,_78221_dest_field->_field_kind,_78021_s,_76771_m),_767110_optimized);
				}
				goto _match_end_4546377424;
				_case_end_4546377504:;
				_match_end_4546377424:;
			}
		}
		goto _match_end_4546375872;
		_case_end_4546375552:;
		_match_end_4546375872:;
	}
	_767110_optimized = false;
	return std::make_tuple(_1e86ed47d_gen_builtin_append_call_expr_model(_76771_m),_767110_optimized);
}



inline jule::Str _1e86ed47d_gen_builtin_append_call_expr_model(jule::Ref<_1b61decc6_BuiltinAppendCallExprModel> _79243_m) {
	jule::Str _79313_obj = jule::Str("jule::append(", 13);
	_79313_obj+=_1e86ed47d_gen_expr_model(_79243_m->_field_dest);
	_79313_obj+=jule::Str(",", 1);
	_79313_obj+=_1e86ed47d_gen_expr_model(_79243_m->_field_elements);
	_79313_obj+=jule::Str(")", 1);
	return _79313_obj;
}



inline jule::Str _1e86ed47d_gen_builtin_clone_call_expr_model(jule::Ref<_1b61decc6_BuiltinCloneCallExprModel> _80142_m) {
	jule::Str _80213_obj = jule::Str("jule::clone(", 12);
	_80213_obj+=_1e86ed47d_gen_expr_model(_80142_m->_field_expr);
	_80213_obj+=jule::Str(")", 1);
	return _80213_obj;
}



inline jule::Str _1e86ed47d_gen_sizeof_expr_model(jule::Ref<_1b61decc6_SizeofExprModel> _80830_m) {
	jule::Str _80913_obj = jule::Str("sizeof(", 7);
	_80913_obj+=_1e86ed47d_gen_expr(_80830_m->_field_expr);
	_80913_obj+=jule::Str(")", 1);
	return _80913_obj;
}



inline jule::Str _1e86ed47d_gen_alignof_expr_model(jule::Ref<_1b61decc6_AlignofExprModel> _81531_m) {
	jule::Str _81613_obj = jule::Str("alignof(", 8);
	_81613_obj+=_1e86ed47d_gen_expr(_81531_m->_field_expr);
	_81613_obj+=jule::Str(")", 1);
	return _81613_obj;
}



inline jule::Str _1e86ed47d_gen_rune_expr_model(jule::Ref<_1b61decc6_RuneExprModel> _82224_m) {
	if (_82224_m->_field_code <= 127LL) {
		jule::Str _82417_b = _1e86ed47d_sbtoa(static_cast<jule::U8>(_82224_m->_field_code));
		if (_82417_b == jule::Str("'", 1)) {
			_82417_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _82417_b) + jule::Str("'", 1);
	}
	return _1e86ed47d_i64toa(static_cast<jule::I64>(_82224_m->_field_code));
}



inline jule::Str _1e86ed47d_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_1b61decc6_BuiltinErrorTraitSubIdentExprModel> _83353_m) {
	jule::Str _83413_obj = _1e86ed47d_gen_expr_model(_83353_m->_field_expr);
	_83413_obj+=jule::Str(".get().", 7);
	_83413_obj+=jule::Str("_method_", 8);
	_83413_obj+=_83353_m->_field_ident;
	return _83413_obj;
}



inline jule::Str _1e86ed47d_gen_explicit_deref_expr_model(jule::Ref<_1b61decc6_ExplicitDerefExprModel> _84138_m) {
	jule::Str _84213_obj = _1e86ed47d_gen_expr_model(_84138_m->_field_expr);
	_84213_obj+=jule::Str(".get()", 6);
	return _84213_obj;
}



inline jule::Str _1e86ed47d_gen_struct_static_ident_expr_model(jule::Ref<_1b61decc6_StructStaticIdentExprModel> _84743_m) {
	jule::Str _84813_obj = _1b710bbe2_struct_ins_out_ident(_84743_m->_field_structure);
	_84813_obj+=jule::Str("::", 2);
	_84813_obj+=_1b710bbe2_fn_ins_out_ident(_84743_m->_field_method);
	return _84813_obj;
}



inline jule::Str _1e86ed47d_gen_integrated_to_str_expr_model(jule::Ref<_1b61decc6_IntegratedToStrExprModel> _85441_m) {
	jule::Str _85513_obj = jule::Str("jule::to_str(", 13);
	_85513_obj+=_1e86ed47d_gen_expr_model(_85441_m->_field_expr);
	_85513_obj+=jule::Str(")", 1);
	return _85513_obj;
}



inline jule::Str _1e86ed47d_gen_ternary_expr_model(jule::Ref<_1b61decc6_TernaryExprModel> _86131_m) {
	jule::Str _86213_obj = jule::Str("((", 2);
	_86213_obj+=_1e86ed47d_gen_expr_model(_86131_m->_field_condition);
	_86213_obj+=jule::Str(") ? (", 5);
	_86213_obj+=_1e86ed47d_gen_expr_model(_86131_m->_field_true_expr);
	_86213_obj+=jule::Str(") : (", 5);
	_86213_obj+=_1e86ed47d_gen_expr_model(_86131_m->_field_false_expr);
	_86213_obj+=jule::Str("))", 2);
	return _86213_obj;
}



inline jule::Str _1e86ed47d_gen_expr_model(jule::Any _87223_m) {
	{
		auto _match_expr{ _87223_m };
		if (!(_match_expr.type_is<jule::Ref<_1b6703d45_TypeKind>>())) { goto _case_end_4546432624; }
		_case_begin_4546432624:;
		{
			return _1b7110850_gen_type_kind(_87223_m.operator jule::Ref<_1b6703d45_TypeKind>());
		}
		goto _match_end_4546431424;
		_case_end_4546432624:;
		if (!(_match_expr.type_is<jule::Ref<_1b6d4076c_Const>>())) { goto _case_end_4546432720; }
		_case_begin_4546432720:;
		{
			return _1e86ed47d_gen_const_expr_model(_87223_m.operator jule::Ref<_1b6d4076c_Const>());
		}
		goto _match_end_4546431424;
		_case_end_4546432720:;
		if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4546432816; }
		_case_begin_4546432816:;
		{
			return _1e86ed47d_gen_var_expr_model(_87223_m.operator jule::Ref<_1b637edab_Var>());
		}
		goto _match_end_4546431424;
		_case_end_4546432816:;
		if (!(_match_expr.type_is<jule::Ref<_1b61d7d79_Trait>>())) { goto _case_end_4546433072; }
		_case_begin_4546433072:;
		{
			return _1b710bbe2_trait_out_ident(_87223_m.operator jule::Ref<_1b61d7d79_Trait>());
		}
		goto _match_end_4546431424;
		_case_end_4546433072:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385eed_Struct>>())) { goto _case_end_4546433168; }
		_case_begin_4546433168:;
		{
			return _1e86ed47d_gen_struct_expr_model(_87223_m.operator jule::Ref<_1ce385eed_Struct>());
		}
		goto _match_end_4546431424;
		_case_end_4546433168:;
		if (!(_match_expr.type_is<jule::Ref<_1ce385eed_StructIns>>())) { goto _case_end_4546433264; }
		_case_begin_4546433264:;
		{
			return _1e86ed47d_gen_struct_ins_expr_model(_87223_m.operator jule::Ref<_1ce385eed_StructIns>());
		}
		goto _match_end_4546431424;
		_case_end_4546433264:;
		if (!(_match_expr.type_is<jule::Ref<_1b6069348_FnIns>>())) { goto _case_end_4546432256; }
		_case_begin_4546432256:;
		{
			return _1e86ed47d_gen_fn_ins_expr_model_common(_87223_m.operator jule::Ref<_1b6069348_FnIns>());
		}
		goto _match_end_4546431424;
		_case_end_4546432256:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BinopExprModel>>())) { goto _case_end_4546432352; }
		_case_begin_4546432352:;
		{
			return _1e86ed47d_gen_binop_expr_model(_87223_m.operator jule::Ref<_1b61decc6_BinopExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546432352:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_UnaryExprModel>>())) { goto _case_end_4546432464; }
		_case_begin_4546432464:;
		{
			return _1e86ed47d_gen_unary_expr_model(_87223_m.operator jule::Ref<_1b61decc6_UnaryExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546432464:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_GetRefPtrExprModel>>())) { goto _case_end_4546431728; }
		_case_begin_4546431728:;
		{
			return _1e86ed47d_gen_get_ref_ptr_expr_model(_87223_m.operator jule::Ref<_1b61decc6_GetRefPtrExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546431728:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_StructLitExprModel>>())) { goto _case_end_4546431824; }
		_case_begin_4546431824:;
		{
			return _1e86ed47d_gen_struct_lit_expr_model(_87223_m.operator jule::Ref<_1b61decc6_StructLitExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546431824:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_AllocStructLitExprModel>>())) { goto _case_end_4546431920; }
		_case_begin_4546431920:;
		{
			return _1e86ed47d_gen_alloc_struct_lit_expr_model(_87223_m.operator jule::Ref<_1b61decc6_AllocStructLitExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546431920:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_CastingExprModel>>())) { goto _case_end_4546432032; }
		_case_begin_4546432032:;
		{
			return _1e86ed47d_gen_casting_expr_model(_87223_m.operator jule::Ref<_1b61decc6_CastingExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546432032:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_FnCallExprModel>>())) { goto _case_end_4546434096; }
		_case_begin_4546434096:;
		{
			return _1e86ed47d_gen_fn_call_expr_model(_87223_m.operator jule::Ref<_1b61decc6_FnCallExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546434096:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_SliceExprModel>>())) { goto _case_end_4546434208; }
		_case_begin_4546434208:;
		{
			return _1e86ed47d_gen_slice_expr_model(_87223_m.operator jule::Ref<_1b61decc6_SliceExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546434208:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_ArrayExprModel>>())) { goto _case_end_4546434320; }
		_case_begin_4546434320:;
		{
			return _1e86ed47d_gen_array_expr_model(_87223_m.operator jule::Ref<_1b61decc6_ArrayExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546434320:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_IndexigExprModel>>())) { goto _case_end_4546434432; }
		_case_begin_4546434432:;
		{
			return _1e86ed47d_gen_indexing_expr_model(_87223_m.operator jule::Ref<_1b61decc6_IndexigExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546434432:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_AnonFnExprModel>>())) { goto _case_end_4546434544; }
		_case_begin_4546434544:;
		{
			return _1e86ed47d_gen_anon_fn_expr_model(_87223_m.operator jule::Ref<_1b61decc6_AnonFnExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546434544:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_MapExprModel>>())) { goto _case_end_4546434656; }
		_case_begin_4546434656:;
		{
			return _1e86ed47d_gen_map_expr_model(_87223_m.operator jule::Ref<_1b61decc6_MapExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546434656:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_SlicingExprModel>>())) { goto _case_end_4546434768; }
		_case_begin_4546434768:;
		{
			return _1e86ed47d_gen_slicing_expr_model(_87223_m.operator jule::Ref<_1b61decc6_SlicingExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546434768:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_TraitSubIdentExprModel>>())) { goto _case_end_4546434880; }
		_case_begin_4546434880:;
		{
			return _1e86ed47d_gen_trait_sub_ident_expr_model(_87223_m.operator jule::Ref<_1b61decc6_TraitSubIdentExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546434880:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_StructSubIdentExprModel>>())) { goto _case_end_4546434992; }
		_case_begin_4546434992:;
		{
			return _1e86ed47d_gen_struct_sub_ident_expr_model(_87223_m.operator jule::Ref<_1b61decc6_StructSubIdentExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546434992:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_CommonIdentExprModel>>())) { goto _case_end_4546435104; }
		_case_begin_4546435104:;
		{
			return _1e86ed47d_gen_common_ident_expr_model(_87223_m.operator jule::Ref<_1b61decc6_CommonIdentExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546435104:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_CommonSubIdentExprModel>>())) { goto _case_end_4546435216; }
		_case_begin_4546435216:;
		{
			return _1e86ed47d_gen_common_sub_ident_expr_model(_87223_m.operator jule::Ref<_1b61decc6_CommonSubIdentExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546435216:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_TupleExprModel>>())) { goto _case_end_4546435328; }
		_case_begin_4546435328:;
		{
			return _1e86ed47d_gen_tuple_expr_model(_87223_m.operator jule::Ref<_1b61decc6_TupleExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546435328:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BuiltinOutCallExprModel>>())) { goto _case_end_4546435440; }
		_case_begin_4546435440:;
		{
			return _1e86ed47d_gen_builtin_out_call_expr_model(_87223_m.operator jule::Ref<_1b61decc6_BuiltinOutCallExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546435440:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BuiltinOutlnCallExprModel>>())) { goto _case_end_4546435552; }
		_case_begin_4546435552:;
		{
			return _1e86ed47d_gen_builtin_outln_call_expr_model(_87223_m.operator jule::Ref<_1b61decc6_BuiltinOutlnCallExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546435552:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BuiltinNewCallExprModel>>())) { goto _case_end_4546435664; }
		_case_begin_4546435664:;
		{
			return _1e86ed47d_gen_builtin_new_call_expr_model(_87223_m.operator jule::Ref<_1b61decc6_BuiltinNewCallExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546435664:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BuiltinRealCallExprModel>>())) { goto _case_end_4546435776; }
		_case_begin_4546435776:;
		{
			return _1e86ed47d_gen_builtin_real_call_expr_model(_87223_m.operator jule::Ref<_1b61decc6_BuiltinRealCallExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546435776:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BuiltinDropCallExprModel>>())) { goto _case_end_4546435888; }
		_case_begin_4546435888:;
		{
			return _1e86ed47d_gen_builtin_drop_call_expr_model(_87223_m.operator jule::Ref<_1b61decc6_BuiltinDropCallExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546435888:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BuiltinPanicCallExprModel>>())) { goto _case_end_4546436000; }
		_case_begin_4546436000:;
		{
			return _1e86ed47d_gen_builtin_panic_call_expr_model(_87223_m.operator jule::Ref<_1b61decc6_BuiltinPanicCallExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546436000:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BuiltinMakeCallExprModel>>())) { goto _case_end_4546436112; }
		_case_begin_4546436112:;
		{
			return _1e86ed47d_gen_builtin_make_call_expr_model(_87223_m.operator jule::Ref<_1b61decc6_BuiltinMakeCallExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546436112:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BuiltinAppendCallExprModel>>())) { goto _case_end_4546436224; }
		_case_begin_4546436224:;
		{
			return _1e86ed47d_gen_builtin_append_call_expr_model(_87223_m.operator jule::Ref<_1b61decc6_BuiltinAppendCallExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546436224:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BuiltinCloneCallExprModel>>())) { goto _case_end_4546436336; }
		_case_begin_4546436336:;
		{
			return _1e86ed47d_gen_builtin_clone_call_expr_model(_87223_m.operator jule::Ref<_1b61decc6_BuiltinCloneCallExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546436336:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_SizeofExprModel>>())) { goto _case_end_4546436448; }
		_case_begin_4546436448:;
		{
			return _1e86ed47d_gen_sizeof_expr_model(_87223_m.operator jule::Ref<_1b61decc6_SizeofExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546436448:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_AlignofExprModel>>())) { goto _case_end_4546436560; }
		_case_begin_4546436560:;
		{
			return _1e86ed47d_gen_alignof_expr_model(_87223_m.operator jule::Ref<_1b61decc6_AlignofExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546436560:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_RuneExprModel>>())) { goto _case_end_4546436672; }
		_case_begin_4546436672:;
		{
			return _1e86ed47d_gen_rune_expr_model(_87223_m.operator jule::Ref<_1b61decc6_RuneExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546436672:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BuiltinErrorTraitSubIdentExprModel>>())) { goto _case_end_4546436784; }
		_case_begin_4546436784:;
		{
			return _1e86ed47d_gen_builtin_error_trait_sub_ident_expr_model(_87223_m.operator jule::Ref<_1b61decc6_BuiltinErrorTraitSubIdentExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546436784:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_ExplicitDerefExprModel>>())) { goto _case_end_4546436896; }
		_case_begin_4546436896:;
		{
			return _1e86ed47d_gen_explicit_deref_expr_model(_87223_m.operator jule::Ref<_1b61decc6_ExplicitDerefExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546436896:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_StructStaticIdentExprModel>>())) { goto _case_end_4546437008; }
		_case_begin_4546437008:;
		{
			return _1e86ed47d_gen_struct_static_ident_expr_model(_87223_m.operator jule::Ref<_1b61decc6_StructStaticIdentExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546437008:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_IntegratedToStrExprModel>>())) { goto _case_end_4546437120; }
		_case_begin_4546437120:;
		{
			return _1e86ed47d_gen_integrated_to_str_expr_model(_87223_m.operator jule::Ref<_1b61decc6_IntegratedToStrExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546437120:;
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_TernaryExprModel>>())) { goto _case_end_4546437232; }
		_case_begin_4546437232:;
		{
			return _1e86ed47d_gen_ternary_expr_model(_87223_m.operator jule::Ref<_1b61decc6_TernaryExprModel>());
		}
		goto _match_end_4546431424;
		_case_end_4546437232:;
		_case_begin_4546430432:;
		{
			return jule::Str("<unimplemented_expression_model>", 32);
		}
		goto _match_end_4546431424;
		_case_end_4546430432:;
		_match_end_4546431424:;
	}
}



inline jule::Str _1e86ed47d_gen_expr(jule::Any _100517_e) {
	jule::Str _100613_obj = _1e86ed47d_gen_expr_model(_100517_e);
	if (_100613_obj[0LL] != '(') {
		return _100613_obj;
	}
	{
		auto _match_expr{ _100517_e };
		if (!(_match_expr.type_is<jule::Ref<_1b61decc6_BinopExprModel>>())) { goto _case_end_4546493520; }
		_case_begin_4546493520:;
		{
			_100613_obj=_100613_obj.slice(1LL,static_cast<jule::Int>(_100613_obj.len() - 1LL));
		}
		goto _match_end_4546493872;
		_case_end_4546493520:;
		_match_end_4546493872:;
	}
	return _100613_obj;
}



inline jule::Str _1e86ed47d_gen_val(jule::Ref<_1b66db129_Value> _101816_v) {
	if (_101816_v->_field_data->_method_is_const()) {
		return _1e86ed47d_gen_const_expr(_101816_v->_field_data);
	}
	return _1e86ed47d_gen_expr(_101816_v->_field_data->_field_model);
}



inline jule::Str _1e86ed47d_get_init_expr(jule::Ref<_1b6703d45_TypeKind> _102522_t) {
	if (jule::real(_102522_t->_method_ptr())) {
		return jule::Str("nullptr", 7);
	}
	jule::Ref<_1b61d7c58_Enum> _103013_enm = _102522_t->_method_enm();
	if ((!(jule::real(_103013_enm)))) {
		return _1b7110850_gen_type_kind(_102522_t) + jule::Str("()", 2);
	}
	return _1e86ed47d_gen_val(_103013_enm->_field_items[0LL]->_field_value);
}



inline jule::Str _1b67334b2_get_derive_fn_decl_clone(jule::Ref<_1ce385eed_Struct>& _730_s) {
	jule::Str _813_obj = _1b7110850_gen_struct_kind(_730_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



inline jule::Str _1b67334b2_get_derive_fn_def_clone(jule::Ref<_1ce385eed_Struct>& _1329_s) {
	jule::Str _1413_obj = _1b7110850_gen_struct_kind(_1329_s);
	_1413_obj+=jule::Str(" ", 1) + _1413_obj;
	_1413_obj+=jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



inline jule::Str _1b710bbe2_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



inline jule::Str _1b710bbe2_as_jt(jule::Str _2814_id) {
	if ((97LL <= _2814_id[0LL]) && (_2814_id[0LL] <= 122LL)) {
		_2814_id[0LL]-=32LL;
	}
	return jule::Str("jule::", 6) + _2814_id;
}



inline jule::Str _1b710bbe2_get_addr_as_ident(jule::Uintptr _3622_addr) {
	return jule::Str("_", 1) + _1e86edbba_fmt_uint(static_cast<jule::U64>(_3622_addr),15LL);
}



inline jule::Str _1b710bbe2_as_out_ident(jule::Str _4517_ident,jule::Uintptr _4529_addr) {
	if (_4529_addr != 0LL) {
		jule::Str _4717_obj = _1b710bbe2_get_addr_as_ident(_4529_addr);
		_4717_obj+=jule::Str("_", 1);
		_4717_obj+=_4517_ident;
		return _4717_obj;
	}
	return _1b710bbe2_as_ident(_4517_ident);
}



inline jule::Str _1b710bbe2_as_local_ident(jule::Int _6119_row,jule::Int _6129_col,jule::Str _6139_ident) {
	jule::Str _6213_obj = _1e86edbba_itoa(_6119_row);
	_6213_obj+=_1e86edbba_itoa(_6129_col);
	_6213_obj+=jule::Str("_", 1);
	_6213_obj+=_6139_ident;
	return _1b710bbe2_as_ident(_6213_obj);
}



inline jule::Str _1b710bbe2_fn_out_ident(jule::Ref<_1b6069348_Fn>& _7018_f) {
	{
		if (!((_7018_f->_field_cpp_linked))) { goto _case_end_4546523488; }
		_case_begin_4546523488:;
		{
			return _7018_f->_field_ident;
		}
		goto _match_end_4546522000;
		_case_end_4546523488:;
		if (!((_7018_f->_field_ident == jule::Str("main", 4)))) { goto _case_end_4546525264; }
		_case_begin_4546525264:;
		{
			return jule::Str("entry_point", 11);
		}
		goto _match_end_4546522000;
		_case_end_4546525264:;
		if (!((_7018_f->_method_is_method()))) { goto _case_end_4546525360; }
		_case_begin_4546525360:;
		{
			if (_7018_f->_field_statically) {
				return jule::Str("_static_method_", 15) + _7018_f->_field_ident;
			}
			return jule::Str("_method_", 8) + _7018_f->_field_ident;
		}
		goto _match_end_4546522000;
		_case_end_4546525360:;
		_case_begin_4546522144:;
		{
			return _1b710bbe2_as_out_ident(_7018_f->_field_ident,static_cast<jule::Uintptr>(_7018_f->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4546522000;
		_case_end_4546522144:;
		_match_end_4546522000:;
	}
}



inline jule::Str _1b710bbe2_fn_ins_out_ident(jule::Ref<_1b6069348_FnIns>& _9026_f) {
	if (_9026_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _9026_f->_field_decl->_field_ident;
	}
	if (_9026_f->_field_decl->_field_cpp_linked || (_9026_f->_field_generics.len() == 0LL)) {
		return _1b710bbe2_fn_out_ident(_9026_f->_field_decl);
	}
	{
		jule::Int _1b710bbe2_i = 0;
		for (auto _1b710bbe2_ins: _9026_f->_field_decl->_field_instances) {
			{
				if (_1b710bbe2_ins->_method_same(_9026_f)) {
					jule::Str _10121_obj = _1b710bbe2_fn_out_ident(_9026_f->_field_decl);
					_10121_obj+=jule::Str("_", 1);
					_10121_obj+=_1e86edbba_itoa(_1b710bbe2_i);
					return _10121_obj;
				}
			}
		_iter_next_4546532352:;
		_1b710bbe2_i++;
		}
		_iter_end_4546532352:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1b710bbe2_trait_out_ident(jule::Ref<_1b61d7d79_Trait> _11220_t) {
	if (_11220_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _11220_t->_field_ident;
	}
	return _1b710bbe2_as_out_ident(_11220_t->_field_ident,static_cast<jule::Uintptr>(_11220_t->_field_token._field_file->_method_addr()));
}



inline jule::Str _1b710bbe2_param_out_ident(jule::Ref<_1b6069348_Param>& _12021_p) {
	if (_1ce35e3a0_is_anon_ident(_12021_p->_field_ident) || _1ce35e3a0_is_ignore_ident(_12021_p->_field_ident)) {
		return jule::Str("", 0);
	}
	return _1b710bbe2_as_local_ident(_12021_p->_field_token._field_row,_12021_p->_field_token._field_column,_12021_p->_field_ident);
}



inline jule::Str _1b710bbe2_struct_out_ident(jule::Ref<_1ce385eed_Struct>& _12822_s) {
	if (_12822_s->_field_cpp_linked) {
		if (_1b7110850_has_directive(_12822_s->_field_directives,jule::Str("typedef", 7))) {
			return _12822_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12822_s->_field_ident;
	}
	return _1b710bbe2_as_out_ident(_12822_s->_field_ident,static_cast<jule::Uintptr>(_12822_s->_field_token._field_file->_method_addr()));
}



inline jule::Str _1b710bbe2_struct_ins_out_ident(jule::Ref<_1ce385eed_StructIns>& _13930_s) {
	if (_13930_s->_field_decl->_field_cpp_linked || (_13930_s->_field_generics.len() == 0LL)) {
		return _1b710bbe2_struct_out_ident(_13930_s->_field_decl);
	}
	{
		jule::Int _1b710bbe2_i = 0;
		for (auto _1b710bbe2_ins: _13930_s->_field_decl->_field_instances) {
			{
				if (_1b710bbe2_ins->_method_same(_13930_s)) {
					jule::Str _14621_obj = _1b710bbe2_struct_out_ident(_13930_s->_field_decl);
					_14621_obj+=jule::Str("_", 1);
					_14621_obj+=_1e86edbba_itoa(_1b710bbe2_i);
					return _14621_obj;
				}
			}
		_iter_next_4546550704:;
		_1b710bbe2_i++;
		}
		_iter_end_4546550704:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1b710bbe2_field_out_ident(jule::Ref<_1ce385eed_Field>& _15721_f) {
	if (_15721_f->_field_owner->_field_cpp_linked) {
		return _15721_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _15721_f->_field_ident;
}



inline jule::Str _1b710bbe2_var_out_ident(jule::Ref<_1b637edab_Var> _16522_v) {
	{
		if (!((_16522_v->_field_cpp_linked))) { goto _case_end_4546559344; }
		_case_begin_4546559344:;
		{
			return _16522_v->_field_ident;
		}
		goto _match_end_4546556768;
		_case_end_4546559344:;
		if (!((_16522_v->_field_ident == jule::Str("self", 4)))) { goto _case_end_4546560928; }
		_case_begin_4546560928:;
		{
			if (jule::real(_16522_v->_field_kind->_field_kind->_method_ref())) {
				return jule::Str("this->self", 10);
			}
			return jule::Str("(*this)", 7);
		}
		goto _match_end_4546556768;
		_case_end_4546560928:;
		if (!((jule::real(_16522_v->_field_scope)))) { goto _case_end_4546561024; }
		_case_begin_4546561024:;
		{
			return _1b710bbe2_as_local_ident(_16522_v->_field_token._field_row,_16522_v->_field_token._field_column,_16522_v->_field_ident);
		}
		goto _match_end_4546556768;
		_case_end_4546561024:;
		_case_begin_4546558000:;
		{
			return _1b710bbe2_as_out_ident(_16522_v->_field_ident,static_cast<jule::Uintptr>(_16522_v->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4546556768;
		_case_end_4546558000:;
		_match_end_4546556768:;
	}
}



inline jule::Str _1b710bbe2_iter_end_label_ident(jule::Uintptr _18525_it) {
	return jule::Str("_iter_end_", 10) + _1e86edbba_itoa(static_cast<jule::Int>(_18525_it));
}



inline jule::Str _1b710bbe2_iter_next_label_ident(jule::Uintptr _19026_it) {
	return jule::Str("_iter_next_", 11) + _1e86edbba_itoa(static_cast<jule::Int>(_19026_it));
}



inline jule::Str _1b710bbe2_label_ident(jule::Str _19516_ident) {
	return jule::Str("_julec_label_", 13) + _19516_ident;
}



inline jule::Str _1b710bbe2_match_end_label_ident(jule::Uintptr _20026_m) {
	return jule::Str("_match_end_", 11) + _1e86edbba_itoa(static_cast<jule::Int>(_20026_m));
}



inline jule::Str _1b710bbe2_case_begin_label_ident(jule::Uintptr _20527_c) {
	return jule::Str("_case_begin_", 12) + _1e86edbba_itoa(static_cast<jule::Int>(_20527_c));
}



inline jule::Str _1b710bbe2_case_end_label_ident(jule::Uintptr _21025_c) {
	return jule::Str("_case_end_", 10) + _1e86edbba_itoa(static_cast<jule::Int>(_21025_c));
}



inline jule::Bool _1b7110850_any_equals_0(jule::Ref<_1b637edab_Var>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_1b637edab_Var>>())) { goto _case_end_4546388544; }
		_case_begin_4546388544:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_1b637edab_Var>()).alloc;
		}
		goto _match_end_4546386848;
		_case_end_4546388544:;
		_case_begin_4546386656:;
		{
			return false;
		}
		goto _match_end_4546386848;
		_case_end_4546386656:;
		_match_end_4546386848:;
	}
}

inline jule::Bool _1b7110850_any_equals_1(jule::Ref<_1ce385eed_FieldIns>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_1ce385eed_FieldIns>>())) { goto _case_end_4546399968; }
		_case_begin_4546399968:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_1ce385eed_FieldIns>()).alloc;
		}
		goto _match_end_4546398272;
		_case_end_4546399968:;
		_case_begin_4546398080:;
		{
			return false;
		}
		goto _match_end_4546398272;
		_case_end_4546398080:;
		_match_end_4546398272:;
	}
}



inline jule::Ref<_1ce385d22_Directive> _1b7110850_find_directive(jule::Slice<jule::Ref<_1ce385d22_Directive>>& _3424_directives,jule::Str _3455_tag) {
	for (auto _1b7110850_dr: _3424_directives) {
		{
			if (_1b7110850_dr->_field_tag == _3455_tag) {
				return _1b7110850_dr;
			}
		}
	_iter_next_4546568960:;
	}
	_iter_end_4546568960:;
	return jule::new_ref<_1ce385d22_Directive>();
}



inline jule::Bool _1b7110850_has_directive(jule::Slice<jule::Ref<_1ce385d22_Directive>>& _4419_directives,jule::Str _4450_tag) {
	return jule::real(_1b7110850_find_directive((*((&(_4419_directives)))),_4450_tag));
}



inline jule::Str _1b7110850_gen_prim_kind(jule::Ref<_1b6703d45_Prim> _4918_p) {
	return _1b710bbe2_as_jt(_4918_p->_method_to_str());
}



inline jule::Str _1b7110850_gen_tuple_kind(jule::Ref<_1b6703d45_Tuple> _5423_t) {
	jule::Str _5513_obj = jule::Str("std::tuple<", 11);
	for (auto _1b7110850_tk: _5423_t->_field_types) {
		{
			_5513_obj+=_1b7110850_gen_type_kind(_1b7110850_tk);
			_5513_obj+=jule::Str(",", 1);
		}
	_iter_next_4546581168:;
	}
	_iter_end_4546581168:;
	_5513_obj=_5513_obj.slice(0LL,static_cast<jule::Int>(_5513_obj.len() - 1LL));
	_5513_obj+=jule::Str(">", 1);
	return _5513_obj;
}



inline jule::Str _1b7110850_as_ref_kind(jule::Str _6616_elem) {
	jule::Str _6713_obj = _1b710bbe2_as_jt(jule::Str("ref", 3));
	_6713_obj+=jule::Str("<", 1);
	_6713_obj+=_6616_elem;
	_6713_obj+=jule::Str(">", 1);
	return _6713_obj;
}



inline jule::Str _1b7110850_gen_ref_kind(jule::Ref<_1b6703d45_Ref> _7521_r) {
	return _1b7110850_as_ref_kind(_1b7110850_gen_type_kind(_7521_r->_field_elem));
}



inline jule::Str _1b7110850_gen_ptr_kind(jule::Ref<_1b6703d45_Ptr> _8021_p) {
	
	if (_8021_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _8613_elem = _1b7110850_gen_type_kind(_8021_p->_field_elem);
	_8613_elem+=jule::Str("*", 1);
	return _8613_elem;
}



inline jule::Str _1b7110850_gen_enum_kind(jule::Ref<_1b61d7c58_Enum> _9222_e) {
	return _1b7110850_gen_type_kind(_9222_e->_field_kind->_field_kind);
}



inline jule::Str _1b7110850_as_slice_kind(jule::Ref<_1b6703d45_TypeKind> _9622_elem) {
	jule::Str _9713_obj = _1b710bbe2_as_jt(jule::Str("slice", 5));
	_9713_obj+=jule::Str("<", 1);
	_9713_obj+=_1b7110850_gen_type_kind(_9622_elem);
	_9713_obj+=jule::Str(">", 1);
	return _9713_obj;
}



inline jule::Str _1b7110850_gen_slice_kind(jule::Ref<_1b6703d45_Slc> _10523_s) {
	return _1b7110850_as_slice_kind(_10523_s->_field_elem);
}



inline jule::Str _1b7110850_gen_map_kind(jule::Ref<_1b6703d45_Map> _11021_m) {
	jule::Str _11113_obj = _1b710bbe2_as_jt(jule::Str("map", 3));
	_11113_obj+=jule::Str("<", 1);
	_11113_obj+=_1b7110850_gen_type_kind(_11021_m->_field_key);
	_11113_obj+=jule::Str(",", 1);
	_11113_obj+=_1b7110850_gen_type_kind(_11021_m->_field_val);
	_11113_obj+=jule::Str(">", 1);
	return _11113_obj;
}



inline jule::Str _1b7110850_gen_trait_kind_from_ident(jule::Str _12030_ident) {
	jule::Str _12113_obj = _1b710bbe2_as_jt(jule::Str("trait", 5));
	_12113_obj+=jule::Str("<", 1);
	_12113_obj+=_12030_ident;
	_12113_obj+=jule::Str(">", 1);
	return _12113_obj;
}



inline jule::Str _1b7110850_gen_trait_kind(jule::Ref<_1b61d7d79_Trait> _12919_t) {
	jule::Str _1309_ident = _1b710bbe2_trait_out_ident(_12919_t);
	return _1b7110850_gen_trait_kind_from_ident(_1309_ident);
}



inline jule::Str _1b7110850_gen_struct_kind(jule::Ref<_1ce385eed_Struct> _13520_s) {
	jule::Str _13613_rep = jule::Str("", 0);
	if (_13520_s->_field_cpp_linked && (!(_1b7110850_has_directive(_13520_s->_field_directives,jule::Str("typedef", 7))))) {
		_13613_rep+=jule::Str("struct ", 7);
	}
	_13613_rep+=_1b710bbe2_struct_out_ident(_13520_s);
	return _13613_rep;
}



inline jule::Str _1b7110850_gen_struct_kind_ins(jule::Ref<_1ce385eed_StructIns> _14628_s) {
	if (_14628_s->_field_decl->_field_cpp_linked) {
		jule::Str _14817_ident = _1b710bbe2_struct_ins_out_ident(_14628_s);
		if (_14628_s->_field_generics.len() > 0LL) {
			_14817_ident+=jule::Str("<", 1);
			for (auto _1b7110850_g: _14628_s->_field_generics) {
				{
					_14817_ident+=_1b7110850_gen_type_kind(_1b7110850_g);
					_14817_ident+=jule::Str(",", 1);
				}
			_iter_next_4546611216:;
			}
			_iter_end_4546611216:;
			_14817_ident=_14817_ident.slice(0LL,static_cast<jule::Int>(_14817_ident.len() - 1LL));
			_14817_ident+=jule::Str(">", 1);
		}
		jule::Ref<_1ce385d22_Directive> _15813_d = _1b7110850_find_directive(_14628_s->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_15813_d)) {
			_14817_ident=(_1e86ed47d_concat_all_parts(_15813_d->_field_args) + jule::Str("::", 2)) + _14817_ident;
		}
		return _14817_ident;
	}
	return _1b710bbe2_struct_ins_out_ident(_14628_s);
}



inline jule::Str _1b7110850_gen_array_kind(jule::Ref<_1b6703d45_Arr> _16823_a) {
	jule::Str _16913_obj = _1b710bbe2_as_jt(jule::Str("array", 5));
	_16913_obj+=jule::Str("<", 1);
	_16913_obj+=_1b7110850_gen_type_kind(_16823_a->_field_elem);
	_16913_obj+=jule::Str(",", 1);
	_16913_obj+=_1e86edbba_itoa(_16823_a->_field_n);
	_16913_obj+=jule::Str(">", 1);
	return _16913_obj;
}



inline jule::Str _1b7110850_gen_fn_anon_decl(jule::Ref<_1b6069348_FnIns> _17825_f) {
	jule::Str _17913_decl = _1b710e497_gen_fn_ins_result(_17825_f);
	_17913_decl+=jule::Str("(", 1);
	if (_17825_f->_field_params.len() > 0LL) {
		for (auto _1b7110850_param: _17825_f->_field_params) {
			{
				if (_1b7110850_param->_field_decl->_method_is_self()) {
					goto _iter_next_4546623536;
				}
				_17913_decl+=_1b710e497_gen_param_ins_prototype(_1b7110850_param);
				_17913_decl+=jule::Str(",", 1);
			}
		_iter_next_4546623536:;
		}
		_iter_end_4546623536:;
		_17913_decl=_17913_decl.slice(0LL,static_cast<jule::Int>(_17913_decl.len() - 1LL));
	} else {
		_17913_decl+=jule::Str("void", 4);
	}
	_17913_decl+=jule::Str(")", 1);
	return _17913_decl;
}



inline jule::Str _1b7110850_gen_fn_kind(jule::Ref<_1b6069348_FnIns> _20120_f) {
	jule::Str _20213_obj = _1b710bbe2_as_jt(jule::Str("fn", 2));
	_20213_obj+=jule::Str("<", 1);
	_20213_obj+=_1b7110850_gen_fn_anon_decl(_20120_f);
	_20213_obj+=jule::Str(">", 1);
	return _20213_obj;
}



inline jule::Str _1b7110850_gen_type_kind(jule::Ref<_1b6703d45_TypeKind> _21022_k) {
	{
		if (!((_21022_k->_method_cpp_linked()))) { goto _case_end_4546651584; }
		_case_begin_4546651584:;
		{
			return _21022_k->_field_cpp_ident;
		}
		goto _match_end_4546649648;
		_case_end_4546651584:;
		if (!((jule::real(_21022_k->_method_prim())))) { goto _case_end_4546651680; }
		_case_begin_4546651680:;
		{
			return _1b7110850_gen_prim_kind(_21022_k->_method_prim());
		}
		goto _match_end_4546649648;
		_case_end_4546651680:;
		if (!((jule::real(_21022_k->_method_tup())))) { goto _case_end_4546651776; }
		_case_begin_4546651776:;
		{
			return _1b7110850_gen_tuple_kind(_21022_k->_method_tup());
		}
		goto _match_end_4546649648;
		_case_end_4546651776:;
		if (!((jule::real(_21022_k->_method_ref())))) { goto _case_end_4546650800; }
		_case_begin_4546650800:;
		{
			return _1b7110850_gen_ref_kind(_21022_k->_method_ref());
		}
		goto _match_end_4546649648;
		_case_end_4546650800:;
		if (!((jule::real(_21022_k->_method_ptr())))) { goto _case_end_4546650896; }
		_case_begin_4546650896:;
		{
			return _1b7110850_gen_ptr_kind(_21022_k->_method_ptr());
		}
		goto _match_end_4546649648;
		_case_end_4546650896:;
		if (!((jule::real(_21022_k->_method_enm())))) { goto _case_end_4546650992; }
		_case_begin_4546650992:;
		{
			return _1b7110850_gen_enum_kind(_21022_k->_method_enm());
		}
		goto _match_end_4546649648;
		_case_end_4546650992:;
		if (!((jule::real(_21022_k->_method_slc())))) { goto _case_end_4546650112; }
		_case_begin_4546650112:;
		{
			return _1b7110850_gen_slice_kind(_21022_k->_method_slc());
		}
		goto _match_end_4546649648;
		_case_end_4546650112:;
		if (!((jule::real(_21022_k->_method_map())))) { goto _case_end_4546650208; }
		_case_begin_4546650208:;
		{
			return _1b7110850_gen_map_kind(_21022_k->_method_map());
		}
		goto _match_end_4546649648;
		_case_end_4546650208:;
		if (!((jule::real(_21022_k->_method_trt())))) { goto _case_end_4546650304; }
		_case_begin_4546650304:;
		{
			return _1b7110850_gen_trait_kind(_21022_k->_method_trt());
		}
		goto _match_end_4546649648;
		_case_end_4546650304:;
		if (!((jule::real(_21022_k->_method_strct())))) { goto _case_end_4546650400; }
		_case_begin_4546650400:;
		{
			return _1b7110850_gen_struct_kind_ins(_21022_k->_method_strct());
		}
		goto _match_end_4546649648;
		_case_end_4546650400:;
		if (!((jule::real(_21022_k->_method_arr())))) { goto _case_end_4546651872; }
		_case_begin_4546651872:;
		{
			return _1b7110850_gen_array_kind(_21022_k->_method_arr());
		}
		goto _match_end_4546649648;
		_case_end_4546651872:;
		if (!((jule::real(_21022_k->_method_fnc())))) { goto _case_end_4546651968; }
		_case_begin_4546651968:;
		{
			return _1b7110850_gen_fn_kind(_21022_k->_method_fnc());
		}
		goto _match_end_4546649648;
		_case_end_4546651968:;
		_case_begin_4546649824:;
		{
			return jule::Str("[<unimplemented_type_kind>]", 27);
		}
		goto _match_end_4546649648;
		_case_end_4546649824:;
		_match_end_4546649648:;
	}
}



inline void _1b710e497_add_indent(void) {
	_1b710e497_INDENT=jule::append(_1b710e497_INDENT,jule::Slice<jule::U8>({9LLU}));
}



inline void _1b710e497_done_indent(void) {
	_1b710e497_INDENT=_1b710e497_INDENT.slice(0LL,static_cast<jule::Int>(_1b710e497_INDENT.len() - 1LL));
}



inline jule::Str _1b710e497_indent(void) {
	return static_cast<jule::Str>(_1b710e497_INDENT);
}



inline jule::Bool _1b710e497_is_cpp_header_file(jule::Str _6623_path) {
	jule::Int _679_offset = _6623_path.rfind(jule::Str(".", 1));
	if (_679_offset == -1LL) {
		return false;
	}
	return _1e7691048_is_valid_header_ext(_6623_path.slice(static_cast<jule::Int>(_679_offset)));
}



inline jule::Str _1b710e497_gen_links(jule::Ref<_1cdd79d22_IR>& _7519_ir) {
	jule::Str _7613_obj = jule::Str("", 0);
	for (auto _1b710e497_pkg: _7519_ir->_field_used) {
		{
			{
				if (!(((!(_1b710e497_pkg->_field_cpp_linked))))) { goto _case_end_4546677184; }
				_case_begin_4546677184:;
				{
					goto _iter_next_4546675520;
				}
				goto _match_end_4546676960;
				_case_end_4546677184:;
				if (!((_1e7691048_is_std_header_path(_1b710e497_pkg->_field_path)))) { goto _case_end_4546677296; }
				_case_begin_4546677296:;
				{
					_7613_obj+=jule::Str("#include ", 9);
					_7613_obj+=_1b710e497_pkg->_field_path;
					_7613_obj+=jule::Str("\n", 1);
				}
				goto _match_end_4546676960;
				_case_end_4546677296:;
				_match_end_4546676960:;
			}
		}
	_iter_next_4546675520:;
	}
	_iter_end_4546675520:;
	for (auto _1b710e497_pkg: _7519_ir->_field_used) {
		{
			{
				if (!(((!(_1b710e497_pkg->_field_cpp_linked))))) { goto _case_end_4546681728; }
				_case_begin_4546681728:;
				{
					goto _iter_next_4546677472;
				}
				goto _match_end_4546681504;
				_case_end_4546681728:;
				if (!((_1b710e497_is_cpp_header_file(_1b710e497_pkg->_field_path)))) { goto _case_end_4546681840; }
				_case_begin_4546681840:;
				{
					_7613_obj+=jule::Str("#include \"", 10);
					_7613_obj+=_1b710e497_pkg->_field_path;
					_7613_obj+=jule::Str("\"\n", 2);
				}
				goto _match_end_4546681504;
				_case_end_4546681840:;
				_match_end_4546681504:;
			}
		}
	_iter_next_4546677472:;
	}
	_iter_end_4546677472:;
	return _7613_obj;
}



inline jule::Str _1b710e497_gen_fn_result(jule::Ref<_1b6069348_Fn>& _10423_f) {
	if (_10423_f->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1b7110850_gen_type_kind(_10423_f->_field_result->_field_kind->_field_kind);
}



inline jule::Str _1b710e497_gen_fn_ins_result(jule::Ref<_1b6069348_FnIns>& _11227_f) {
	if (_11227_f->_field_decl->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1b7110850_gen_type_kind(_11227_f->_field_result);
}



inline jule::Str _1b710e497_gen_param_prototype(jule::Ref<_1b6069348_Param>& _12029_p) {
	jule::Str _12113_obj = jule::Str("", 0);
	if (_12029_p->_field_variadic) {
		_12113_obj+=_1b710bbe2_as_jt(jule::Str("slice", 5));
		_12113_obj+=jule::Str("<", 1);
		_12113_obj+=_1b7110850_gen_type_kind(_12029_p->_field_kind->_field_kind);
		_12113_obj+=jule::Str(">", 1);
	} else {
		_12113_obj+=_1b7110850_gen_type_kind(_12029_p->_field_kind->_field_kind);
	}
	return _12113_obj;
}



inline jule::Str _1b710e497_gen_param_ins(jule::Ref<_1b6069348_ParamIns>& _13423_p) {
	jule::Str _13513_obj = _1b710e497_gen_param_ins_prototype(_13423_p);
	_13513_obj+=jule::Str(" ", 1);
	_13513_obj+=_1b710bbe2_param_out_ident(_13423_p->_field_decl);
	return _13513_obj;
}



inline jule::Str _1b710e497_gen_param_ins_prototype(jule::Ref<_1b6069348_ParamIns>& _14233_p) {
	jule::Str _14313_obj = jule::Str("", 0);
	if (_14233_p->_field_decl->_field_variadic) {
		_14313_obj+=_1b710bbe2_as_jt(jule::Str("slice", 5));
		_14313_obj+=jule::Str("<", 1);
		_14313_obj+=_1b7110850_gen_type_kind(_14233_p->_field_kind);
		_14313_obj+=jule::Str(">", 1);
	} else {
		_14313_obj+=_1b7110850_gen_type_kind(_14233_p->_field_kind);
	}
	if (_14233_p->_field_decl->_field_reference) {
		_14313_obj+=jule::Str("&", 1);
	}
	return _14313_obj;
}



inline jule::Str _1b710e497_gen_param(jule::Ref<_1b6069348_Param>& _16119_p) {
	jule::Str _16213_obj = _1b710e497_gen_param_prototype(_16119_p);
	if (((_16119_p->_field_ident != jule::Str("", 0)) && (!(_1ce35e3a0_is_ignore_ident(_16119_p->_field_ident)))) && (!(_1ce35e3a0_is_anon_ident(_16119_p->_field_ident)))) {
		_16213_obj+=jule::Str(" ", 1);
		_16213_obj+=_1b710bbe2_param_out_ident(_16119_p);
	}
	return _16213_obj;
}



inline jule::Str _1b710e497_gen_params(jule::Slice<jule::Ref<_1b6069348_Param>>& _17120_params) {
	{
		if (!((_17120_params.len() == 0LL))) { goto _case_end_4546707920; }
		_case_begin_4546707920:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4546707696;
		_case_end_4546707920:;
		if (!(((_17120_params.len() == 1LL) && _17120_params[0LL]->_method_is_self()))) { goto _case_end_4546708032; }
		_case_begin_4546708032:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4546707696;
		_case_end_4546708032:;
		_match_end_4546707696:;
	}
	jule::Str _18013_obj = jule::Str("(", 1);
	for (auto _1b710e497_p: _17120_params) {
		{
			if ((!(_1b710e497_p->_method_is_self()))) {
				_18013_obj+=_1b710e497_gen_param(_1b710e497_p) + jule::Str(",", 1);
			}
		}
	_iter_next_4546711616:;
	}
	_iter_end_4546711616:;
	_18013_obj=_18013_obj.slice(0LL,static_cast<jule::Int>(_18013_obj.len() - 1LL));
	return _18013_obj + jule::Str(")", 1);
}



inline jule::Str _1b710e497_gen_params_ins(jule::Slice<jule::Ref<_1b6069348_ParamIns>>& _19224_params) {
	{
		if (!((_19224_params.len() == 0LL))) { goto _case_end_4546715824; }
		_case_begin_4546715824:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4546712576;
		_case_end_4546715824:;
		if (!(((_19224_params.len() == 1LL) && _19224_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4546716416; }
		_case_begin_4546716416:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4546712576;
		_case_end_4546716416:;
		_match_end_4546712576:;
	}
	jule::Str _20113_obj = jule::Str("(", 1);
	for (auto _1b710e497_p: _19224_params) {
		{
			if ((!(_1b710e497_p->_field_decl->_method_is_self()))) {
				_20113_obj+=_1b710e497_gen_param_ins(_1b710e497_p) + jule::Str(",", 1);
			}
		}
	_iter_next_4546720112:;
	}
	_iter_end_4546720112:;
	_20113_obj=_20113_obj.slice(0LL,static_cast<jule::Int>(_20113_obj.len() - 1LL));
	return _20113_obj + jule::Str(")", 1);
}



inline jule::Str _1b710e497_gen_params_prototypes(jule::Slice<jule::Ref<_1b6069348_ParamIns>>& _21431_params) {
	{
		if (!((_21431_params.len() == 0LL))) { goto _case_end_4546724912; }
		_case_begin_4546724912:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4546724560;
		_case_end_4546724912:;
		if (!(((_21431_params.len() == 1LL) && _21431_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4546725024; }
		_case_begin_4546725024:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4546724560;
		_case_end_4546725024:;
		_match_end_4546724560:;
	}
	jule::Str _22313_obj = jule::Str("(", 1);
	for (auto _1b710e497_p: _21431_params) {
		{
			if ((!(_1b710e497_p->_field_decl->_method_is_self()))) {
				_22313_obj+=_1b710e497_gen_param_ins_prototype(_1b710e497_p);
				_22313_obj+=jule::Str(",", 1);
			}
		}
	_iter_next_4546729056:;
	}
	_iter_end_4546729056:;
	_22313_obj=_22313_obj.slice(0LL,static_cast<jule::Int>(_22313_obj.len() - 1LL));
	return _22313_obj + jule::Str(")", 1);
}



inline jule::Str _1b710e497_gen_trait(jule::Ref<_1b61d7d79_Trait>& _23719_t) {
	
	jule::Str _2399_outid = _1b710bbe2_trait_out_ident(_23719_t);
	jule::Str _24113_obj = jule::Str("struct ", 7);
	_24113_obj+=_2399_outid;
	_24113_obj+=jule::Str(" {\n", 3);
	_24113_obj+=jule::Str("\t", 1);
	_24113_obj+=jule::Str("virtual ~", 9);
	_24113_obj+=_2399_outid;
	_24113_obj+=jule::Str("(void) {}\n\n", 11);
	for (auto _1b710e497_f: _23719_t->_field_methods) {
		{
			_24113_obj+=jule::Str("\t", 1);
			_24113_obj+=jule::Str("virtual ", 8);
			_24113_obj+=_1b710e497_gen_fn_result(_1b710e497_f);
			_24113_obj+=jule::Str(" _method_", 9);
			_24113_obj+=_1b710e497_f->_field_ident;
			_24113_obj+=_1b710e497_gen_params(_1b710e497_f->_field_params);
			_24113_obj+=jule::Str(" {", 2);
			if ((!(_1b710e497_f->_method_is_void()))) {
				_24113_obj+=jule::Str(" return {}; ", 12);
			}
			_24113_obj+=jule::Str("}\n", 2);
		}
	_iter_next_4546737920:;
	}
	_iter_end_4546737920:;
	_24113_obj+=jule::Str("};", 2);
	return _24113_obj;
}



inline jule::Str _1b710e497_gen_traits_tbl(jule::Ref<_1b66b3a3b_SymbolTable>& _26624_tbl) {
	jule::Str _26713_obj = jule::Str("", 0);
	for (auto _1b710e497_t: _26624_tbl->_field_traits) {
		{
			_26713_obj+=_1b710e497_gen_trait(_1b710e497_t);
			_26713_obj+=jule::Str("\n\n", 2);
		}
	_iter_next_4546744096:;
	}
	_iter_end_4546744096:;
	return _26713_obj;
}



inline jule::Str _1b710e497_gen_traits_pkg(jule::Ref<_1b623bb7a_Package>& _27624_pkg) {
	jule::Str _27713_obj = jule::Str("", 0);
	for (auto _1b710e497_tbl: _27624_pkg->_field_files) {
		{
			_27713_obj+=_1b710e497_gen_traits_tbl(_1b710e497_tbl);
		}
	_iter_next_4546747520:;
	}
	_iter_end_4546747520:;
	return _27713_obj;
}



inline jule::Str _1b710e497_gen_traits(jule::Ref<_1cdd79d22_IR>& _28520_ir) {
	jule::Str _28613_obj = jule::Str("", 0);
	for (auto _1b710e497_u: _28520_ir->_field_used) {
		{
			if ((!(_1b710e497_u->_field_cpp_linked))) {
				_28613_obj+=_1b710e497_gen_traits_pkg(_1b710e497_u->_field_package);
			}
		}
	_iter_next_4546750752:;
	}
	_iter_end_4546750752:;
	_28613_obj+=_1b710e497_gen_traits_pkg(_28520_ir->_field_main);
	return _28613_obj;
}



inline jule::Str _1b710e497_gen_trait_prototype(jule::Ref<_1b61d7d79_Trait>& _29725_t) {
	jule::Str _29813_obj = jule::Str("struct ", 7);
	_29813_obj+=_1b710bbe2_trait_out_ident(_29725_t);
	_29813_obj+=jule::Str(";", 1);
	return _29813_obj;
}



inline jule::Str _1b710e497_gen_trait_prototypes(jule::Ref<_1b623bb7a_Package>& _30530_p) {
	jule::Str _30613_obj = jule::Str("", 0);
	for (auto _1b710e497_f: _30530_p->_field_files) {
		{
			for (auto _1b710e497_t: _1b710e497_f->_field_traits) {
				{
					if (_1b710e497_t->_field_token._field_id != 0LLU) {
						_30613_obj+=_1b710e497_gen_trait_prototype(_1b710e497_t);
						_30613_obj+=jule::Str("\n", 1);
					}
				}
			_iter_next_4546759344:;
			}
			_iter_end_4546759344:;
		}
	_iter_next_4546757536:;
	}
	_iter_end_4546757536:;
	return _30613_obj;
}



inline jule::Str _1b710e497_gen_struct_plain_prototype(jule::Ref<_1ce385eed_Struct>& _31936_s) {
	jule::Str _32013_obj = jule::Str("", 0);
	for (auto _1b710e497_ins: _31936_s->_field_instances) {
		{
			_32013_obj+=jule::Str("\nstruct ", 8);
			_32013_obj+=_1b710bbe2_struct_ins_out_ident(_1b710e497_ins);
			_32013_obj+=jule::Str(";", 1);
			_32013_obj+=jule::Str("\n", 1);
		}
	_iter_next_4546763072:;
	}
	_iter_end_4546763072:;
	return _32013_obj;
}



inline jule::Str _1b710e497_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_1ce385eed_Struct>>& _33137_structs) {
	jule::Str _33213_obj = jule::Str("", 0);
	for (auto _1b710e497_s: _33137_structs) {
		{
			if ((!(_1b710e497_s->_field_cpp_linked)) && (_1b710e497_s->_field_token._field_id != 0LLU)) {
				_33213_obj+=_1b710e497_gen_struct_plain_prototype(_1b710e497_s);
				_33213_obj+=jule::Str("\n", 1);
			}
		}
	_iter_next_4546766464:;
	}
	_iter_end_4546766464:;
	return _33213_obj;
}



inline jule::Str _1b710e497_gen_struct_traits(jule::Ref<_1ce385eed_Struct>& _34323_s) {
	if (_34323_s->_field_implements.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _34813_obj = jule::Str(": ", 2);
	for (auto _1b710e497_i: _34323_s->_field_implements) {
		{
			_34813_obj+=jule::Str("public ", 7);
			_34813_obj+=_1b710bbe2_trait_out_ident(_1b710e497_i);
			_34813_obj+=jule::Str(",", 1);
		}
	_iter_next_4546772352:;
	}
	_iter_end_4546772352:;
	_34813_obj=_34813_obj.slice(0LL,static_cast<jule::Int>(_34813_obj.len() - 1LL));
	return _34813_obj;
}



inline jule::Str _1b710e497_gen_field_decl(jule::Ref<_1ce385eed_FieldIns>& _35924_f) {
	jule::Str _36013_obj = _1b7110850_gen_type_kind(_35924_f->_field_kind);
	_36013_obj+=jule::Str(" ", 1);
	_36013_obj+=_1b710bbe2_field_out_ident(_35924_f->_field_decl);
	_36013_obj+=jule::Str("{", 1);
	_36013_obj+=_1e86ed47d_get_init_expr(_35924_f->_field_kind);
	_36013_obj+=jule::Str("}", 1);
	_36013_obj+=jule::Str(";", 1);
	return _36013_obj;
}



inline jule::Str _1b710e497_gen_struct_self_field_type_kind(jule::Ref<_1ce385eed_StructIns>& _37041_s) {
	return _1b7110850_as_ref_kind(_1b7110850_gen_struct_kind_ins(_37041_s));
}



inline jule::Str _1b710e497_gen_struct_self_field(jule::Ref<_1ce385eed_StructIns>& _37531_s) {
	jule::Str _37613_obj = _1b710e497_gen_struct_self_field_type_kind(_37531_s);
	_37613_obj+=jule::Str(" self{};", 8);
	return _37613_obj;
}



inline jule::Str _1b710e497_gen_struct_self_field_init_st(jule::Ref<_1ce385eed_StructIns>& _38139_s) {
	jule::Str _38213_obj = jule::Str("this->self = ", 13);
	_38213_obj+=_1b710e497_gen_struct_self_field_type_kind(_38139_s);
	_38213_obj+=jule::Str("::make(this, nullptr);", 22);
	return _38213_obj;
}



inline jule::Str _1b710e497_gen_struct_constructor(jule::Ref<_1ce385eed_StructIns>& _38832_s) {
	jule::Str _38913_obj = _1b710bbe2_struct_ins_out_ident(_38832_s);
	_38913_obj+=jule::Str("(", 1);
	if (_38832_s->_field_fields.len() > 0LL) {
		for (auto _1b710e497_f: _38832_s->_field_fields) {
			{
				_38913_obj+=_1b7110850_gen_type_kind(_1b710e497_f->_field_kind);
				_38913_obj+=jule::Str(" __param_", 9);
				_38913_obj+=_1b710e497_f->_field_decl->_field_ident;
				_38913_obj+=jule::Str(", ", 2);
			}
		_iter_next_4546787216:;
		}
		_iter_end_4546787216:;
		_38913_obj=_38913_obj.slice(0LL,static_cast<jule::Int>(_38913_obj.len() - 2LL));
	} else {
		_38913_obj+=jule::Str("void", 4);
	}
	_38913_obj+=jule::Str(")", 1);
	if (_38832_s->_field_fields.len() > 0LL) {
		_38913_obj+=jule::Str(": ", 2);
		for (auto _1b710e497_f: _38832_s->_field_fields) {
			{
				_38913_obj+=_1b710bbe2_field_out_ident(_1b710e497_f->_field_decl);
				_38913_obj+=jule::Str("(", 1);
				_38913_obj+=jule::Str("__param_", 8);
				_38913_obj+=_1b710e497_f->_field_decl->_field_ident;
				_38913_obj+=jule::Str("), ", 3);
			}
		_iter_next_4546792224:;
		}
		_iter_end_4546792224:;
		_38913_obj=_38913_obj.slice(0LL,static_cast<jule::Int>(_38913_obj.len() - 2LL));
	}
	_38913_obj+=jule::Str(" {", 2);
	if (_38832_s->_field_decl->_method_has_ref_accessible()) {
		_38913_obj+=jule::Str("\n", 1);
		_1b710e497_add_indent();
		_38913_obj+=_1b710e497_indent();
		_38913_obj+=_1b710e497_gen_struct_self_field_init_st(_38832_s);
		_38913_obj+=jule::Str("\n", 1);
		_1b710e497_done_indent();
		_38913_obj+=jule::Str("\n", 1);
		_38913_obj+=_1b710e497_indent();
	}
	_38913_obj+=jule::Str("}", 1);
	return _38913_obj;
}



inline jule::Str _1b710e497_gen_struct_destructor(jule::Ref<_1ce385eed_StructIns>& _43231_s) {
	jule::Bool _4339_disposed = _43231_s->_field_decl->_method_is_implements(_1b6c3ed86_BUILTIN_TRAIT_DISPOSE);
	jule::Bool _4349_ref_access = _43231_s->_field_decl->_method_has_ref_accessible();
	if ((!(_4349_ref_access)) && (!(_4339_disposed))) {
		return jule::Str("", 0);
	}
	jule::Str _44013_obj = jule::Str("~", 1);
	_44013_obj+=_1b710bbe2_struct_ins_out_ident(_43231_s);
	_44013_obj+=jule::Str("(void) { ", 9);
	if (_4339_disposed) {
		jule::Ref<_1b6069348_Fn> _44513_dispose_method = _43231_s->_method_find_method(jule::Str("dispose", 7),false);
		_44013_obj+=jule::Str("this->", 6);
		_44013_obj+=_1b710bbe2_fn_out_ident(_44513_dispose_method);
		_44013_obj+=jule::Str("(); ", 4);
	}
	if (_4349_ref_access) {
		_44013_obj+=jule::Str("this->self.ref = nullptr; ", 26);
	}
	_44013_obj+=jule::Str("}", 1);
	return _44013_obj;
}



inline jule::Str _1b710e497_gen_struct_operators(jule::Ref<_1ce385eed_StructIns>& _45930_s) {
	jule::Str _4609_out_ident = _1b710bbe2_struct_ins_out_ident(_45930_s);
	jule::Str _46113_obj = jule::Str("", 0);
	_46113_obj+=_1b710e497_indent();
	_46113_obj+=jule::Str("inline bool operator==(const ", 29);
	_46113_obj+=_4609_out_ident;
	_46113_obj+=jule::Str(" &_Src) const {", 15);
	if (_45930_s->_field_fields.len() > 0LL) {
		_1b710e497_add_indent();
		_46113_obj+=jule::Str("\n", 1);
		_46113_obj+=_1b710e497_indent();
		_46113_obj+=jule::Str("return ", 7);
		_1b710e497_add_indent();
		jule::Int _47317_n = 0LL;
		for (auto _1b710e497_f: _45930_s->_field_fields) {
			{
				jule::Ref<_1ce385eed_StructIns> _47617_strct = _1b710e497_f->_field_kind->_method_strct();
				if ((jule::real(_47617_strct) && jule::real(_47617_strct->_field_decl)) && _47617_strct->_field_decl->_field_cpp_linked) {
					goto _iter_next_4546816320;
				}
				(_47317_n)++;
				_46113_obj+=jule::Str("\n", 1);
				_46113_obj+=_1b710e497_indent();
				_46113_obj+=jule::Str("this->", 6);
				jule::Str _48517_f_ident = _1b710bbe2_field_out_ident(_1b710e497_f->_field_decl);
				_46113_obj+=_48517_f_ident;
				_46113_obj+=jule::Str(" == _Src.", 9);
				_46113_obj+=_48517_f_ident;
				_46113_obj+=jule::Str(" &&", 3);
			}
		_iter_next_4546816320:;
		}
		_iter_end_4546816320:;
		_1b710e497_done_indent();
		if (_47317_n > 0LL) {
			_46113_obj=_46113_obj.slice(0LL,static_cast<jule::Int>(_46113_obj.len() - 3LL));
		} else {
			_46113_obj+=jule::Str("true", 4);
		}
		_46113_obj+=jule::Str(";\n", 2);
		_1b710e497_done_indent();
		_46113_obj+=_1b710e497_indent();
		_46113_obj+=jule::Str("}", 1);
	} else {
		_46113_obj+=jule::Str(" return true; }", 15);
	}
	_46113_obj+=jule::Str("\n\n", 2);
	_46113_obj+=_1b710e497_indent();
	_46113_obj+=jule::Str("inline bool operator!=(const ", 29);
	_46113_obj+=_4609_out_ident;
	_46113_obj+=jule::Str(" &_Src) const { return !this->operator==(_Src); }", 49);
	return _46113_obj;
}



inline jule::Str _1b710e497_gen_struct_derive_defs_prototypes(jule::Ref<_1ce385eed_StructIns>& _51239_s) {
	jule::Str _51313_obj = jule::Str("", 0);
	if (_51239_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_51313_obj+=_1b710e497_indent();
		_51313_obj+=_1b67334b2_get_derive_fn_decl_clone(_51239_s->_field_decl);
		_51313_obj+=jule::Str(";\n\n", 3);
	}
	return _51313_obj;
}



inline jule::Str _1b710e497_gen_struct_ins_prototype(jule::Ref<_1ce385eed_StructIns>& _52434_s) {
	jule::Str _52513_obj = jule::Str("struct ", 7);
	jule::Str _5269_out_ident = _1b710bbe2_struct_ins_out_ident(_52434_s);
	_52513_obj+=_5269_out_ident;
	_52513_obj+=_1b710e497_gen_struct_traits(_52434_s->_field_decl);
	_52513_obj+=jule::Str(" {\n", 3);
	jule::Bool _5329_ref_access = _52434_s->_field_decl->_method_has_ref_accessible();
	_1b710e497_add_indent();
	if (_5329_ref_access) {
		_52513_obj+=_1b710e497_indent();
		_52513_obj+=_1b710e497_gen_struct_self_field(_52434_s);
		_52513_obj+=jule::Str("\n\n", 2);
	}
	if (_52434_s->_field_fields.len() > 0LL) {
		for (auto _1b710e497_f: _52434_s->_field_fields) {
			{
				_52513_obj+=_1b710e497_indent();
				_52513_obj+=_1b710e497_gen_field_decl(_1b710e497_f);
				_52513_obj+=jule::Str("\n", 1);
			}
		_iter_next_4546840912:;
		}
		_iter_end_4546840912:;
		_52513_obj+=jule::Str("\n\n", 2);
		_52513_obj+=_1b710e497_indent();
		_52513_obj+=_1b710e497_gen_struct_constructor(_52434_s);
		_52513_obj+=jule::Str("\n\n", 2);
	}
	_52513_obj+=_1b710e497_indent();
	_52513_obj+=_1b710e497_gen_struct_destructor(_52434_s);
	_52513_obj+=jule::Str("\n\n", 2);
	_52513_obj+=_1b710e497_indent();
	_52513_obj+=_5269_out_ident;
	if (_5329_ref_access) {
		_52513_obj+=jule::Str("(void) { ", 9);
		_52513_obj+=_1b710e497_gen_struct_self_field_init_st(_52434_s);
		_52513_obj+=jule::Str(" }\n\n", 4);
	} else {
		_52513_obj+=jule::Str("(void) = default;\n\n", 19);
	}
	for (auto _1b710e497_f: _52434_s->_field_methods) {
		{
			_52513_obj+=_1b710e497_gen_fn_prototype(_1b710e497_f,true);
			_52513_obj+=jule::Str("\n\n", 2);
		}
	_iter_next_4546838512:;
	}
	_iter_end_4546838512:;
	_52513_obj+=_1b710e497_gen_struct_derive_defs_prototypes(_52434_s);
	_52513_obj+=_1b710e497_gen_struct_operators(_52434_s);
	_52513_obj+=jule::Str("\n", 1);
	_1b710e497_done_indent();
	_52513_obj+=_1b710e497_indent() + jule::Str("};", 2);
	return _52513_obj;
}



inline jule::Str _1b710e497_gen_struct_prototype(jule::Ref<_1ce385eed_Struct>& _58330_s) {
	jule::Str _58413_obj = jule::Str("", 0);
	for (auto _1b710e497_ins: _58330_s->_field_instances) {
		{
			_58413_obj+=_1b710e497_gen_struct_ins_prototype(_1b710e497_ins);
			_58413_obj+=jule::Str("\n\n", 2);
		}
	_iter_next_4546852272:;
	}
	_iter_end_4546852272:;
	return _58413_obj;
}



inline jule::Str _1b710e497_gen_struct_prototypes(jule::Slice<jule::Ref<_1ce385eed_Struct>>& _59331_structs) {
	jule::Str _59413_obj = jule::Str("", 0);
	for (auto _1b710e497_s: _59331_structs) {
		{
			if ((!(_1b710e497_s->_field_cpp_linked)) && (_1b710e497_s->_field_token._field_id != 0LLU)) {
				_59413_obj+=_1b710e497_gen_struct_prototype(_1b710e497_s);
				_59413_obj+=jule::Str("\n", 1);
			}
		}
	_iter_next_4546855392:;
	}
	_iter_end_4546855392:;
	return _59413_obj;
}



inline jule::Str _1b710e497_gen_fn_decl_head(jule::Ref<_1b6069348_FnIns>& _60426_f,jule::Bool _60437_method) {
	jule::Str _60513_obj = jule::Str("", 0);
	if (_60437_method && _60426_f->_field_decl->_field_statically) {
		_60513_obj+=jule::Str("static ", 7);
	}
	if ((!(_60426_f->_field_decl->_method_is_entry_point()))) {
		_60513_obj+=jule::Str("inline ", 7);
	}
	_60513_obj+=_1b710e497_gen_fn_ins_result(_60426_f) + jule::Str(" ", 1);
	if ((!(_60437_method)) && jule::real(_60426_f->_field_decl->_field_owner)) {
		_60513_obj+=_1b710bbe2_struct_ins_out_ident(_60426_f->_field_owner);
		_60513_obj+=jule::Str("::", 2);
	}
	_60513_obj+=_1b710bbe2_fn_ins_out_ident(_60426_f);
	return _60513_obj;
}



inline jule::Str _1b710e497_gen_fn_prototype(jule::Ref<_1b6069348_Fn>& _62626_f,jule::Bool _62634_method) {
	jule::Str _62713_obj = jule::Str("", 0);
	for (auto _1b710e497_c: _62626_f->_field_instances) {
		{
			_62713_obj+=_1b710e497_indent();
			_62713_obj+=_1b710e497_gen_fn_decl_head(_1b710e497_c,_62634_method);
			_62713_obj+=_1b710e497_gen_params_prototypes(_1b710e497_c->_field_params);
			_62713_obj+=jule::Str(";\n", 2);
		}
	_iter_next_4546867984:;
	}
	_iter_end_4546867984:;
	return _62713_obj;
}



inline jule::Str _1b710e497_gen_fn_prototypes(jule::Ref<_1b623bb7a_Package>& _63827_pkg) {
	jule::Str _63913_obj = jule::Str("", 0);
	for (auto _1b710e497_file: _63827_pkg->_field_files) {
		{
			for (auto _1b710e497_f: _1b710e497_file->_field_funcs) {
				{
					if ((!(_1b710e497_f->_field_cpp_linked)) && (_1b710e497_f->_field_token._field_id != 0LLU)) {
						_63913_obj+=_1b710e497_gen_fn_prototype(_1b710e497_f,false);
					}
				}
			_iter_next_4546874160:;
			}
			_iter_end_4546874160:;
		}
	_iter_next_4546872352:;
	}
	_iter_end_4546872352:;
	return _63913_obj;
}



inline jule::Str _1b710e497_gen_prototypes(jule::Ref<_1cdd79d22_IR>& _65124_ir) {
	jule::Str _65213_obj = jule::Str("", 0);
	for (auto _1b710e497_u: _65124_ir->_field_used) {
		{
			if ((!(_1b710e497_u->_field_cpp_linked))) {
				_65213_obj+=_1b710e497_gen_trait_prototypes(_1b710e497_u->_field_package);
			}
		}
	_iter_next_4546878080:;
	}
	_iter_end_4546878080:;
	_65213_obj+=_1b710e497_gen_trait_prototypes(_65124_ir->_field_main);
	_65213_obj+=_1b710e497_gen_struct_plain_prototypes(_65124_ir->_field_ordered._field_structs);
	_65213_obj+=_1b710e497_gen_traits(_65124_ir);
	_65213_obj+=jule::Str("\n", 1);
	_65213_obj+=_1b710e497_gen_struct_prototypes(_65124_ir->_field_ordered._field_structs);
	for (auto _1b710e497_u: _65124_ir->_field_used) {
		{
			if ((!(_1b710e497_u->_field_cpp_linked))) {
				_65213_obj+=_1b710e497_gen_fn_prototypes(_1b710e497_u->_field_package);
			}
		}
	_iter_next_4546879280:;
	}
	_iter_end_4546879280:;
	_65213_obj+=_1b710e497_gen_fn_prototypes(_65124_ir->_field_main);
	return _65213_obj;
}



inline jule::Str _1b710e497_gen_var_init_expr(jule::Ref<_1b637edab_Var>& _68027_v,jule::Str _68036_init) {
	jule::Str _68113_obj = jule::Str("", 0);
	if (_68027_v->_field_statically) {
		_68113_obj+=jule::Str("static ", 7);
	}
	_68113_obj+=_1b7110850_gen_type_kind(_68027_v->_field_kind->_field_kind);
	_68113_obj+=jule::Str(" ", 1);
	if (_68027_v->_field_reference) {
		_68113_obj+=jule::Str("&", 1);
	}
	_68113_obj+=_1b710bbe2_var_out_ident(_68027_v);
	if (_68036_init != jule::Str("", 0)) {
		_68113_obj+=jule::Str(" = ", 3);
		_68113_obj+=_68036_init;
	}
	_68113_obj+=jule::Str(";", 1);
	return _68113_obj;
}



inline jule::Str _1b710e497_gen_var(jule::Ref<_1b637edab_Var> _70116_v) {
	if (_1ce35e3a0_is_ignore_ident(_70116_v->_field_ident)) {
		return jule::Str("", 0);
	}
	if (jule::real(_70116_v->_field_value) && jule::real(_70116_v->_field_value->_field_expr)) {
		if (_70116_v->_field_value->_field_data->_field_model != nullptr) {
			return _1b710e497_gen_var_init_expr(_70116_v,_1e86ed47d_gen_val(_70116_v->_field_value));
		}
		return _1b710e497_gen_var_init_expr(_70116_v,jule::Str("", 0));
	}
	return _1b710e497_gen_var_init_expr(_70116_v,_1e86ed47d_get_init_expr(_70116_v->_field_kind->_field_kind));
}



inline jule::Str _1b710e497_gen_globals(jule::Slice<jule::Ref<_1b637edab_Var>>& _71621_globals) {
	jule::Str _71713_obj = jule::Str("", 0);
	for (auto _1b710e497_v: _71621_globals) {
		{
			if (_1b710e497_v->_field_token._field_id != 0LLU) {
				_71713_obj+=_1b710e497_gen_var(_1b710e497_v);
				_71713_obj+=jule::Str("\n", 1);
			}
		}
	_iter_next_4546899744:;
	}
	_iter_end_4546899744:;
	return _71713_obj;
}



inline jule::Str _1b710e497_gen_fn(jule::Ref<_1b6069348_Fn>& _73016_f) {
	jule::Str _73113_obj = jule::Str("", 0);
	for (auto _1b710e497_ins: _73016_f->_field_instances) {
		{
			_73113_obj+=_1b710e497_gen_fn_decl_head(_1b710e497_ins,false);
			_73113_obj+=_1b710e497_gen_params_ins(_1b710e497_ins->_field_params);
			_73113_obj+=jule::Str(" ", 1);
			_73113_obj+=_1e86b150c_gen_fn_scope(_1b710e497_ins);
			_73113_obj+=jule::Str("\n\n", 2);
		}
	_iter_next_4546904064:;
	}
	_iter_end_4546904064:;
	return _73113_obj;
}



inline jule::Str _1b710e497_gen_pkg_fns(jule::Ref<_1b623bb7a_Package>& _74321_p) {
	jule::Str _74413_obj = jule::Str("", 0);
	for (auto _1b710e497_f: _74321_p->_field_files) {
		{
			for (auto _1b710e497_f: _1b710e497_f->_field_funcs) {
				{
					if ((!(_1b710e497_f->_field_cpp_linked)) && (_1b710e497_f->_field_token._field_id != 0LLU)) {
						_74413_obj+=_1b710e497_gen_fn(_1b710e497_f);
						_74413_obj+=jule::Str("\n\n", 2);
					}
				}
			_iter_next_4546910384:;
			}
			_iter_end_4546910384:;
		}
	_iter_next_4546908576:;
	}
	_iter_end_4546908576:;
	return _74413_obj;
}



inline jule::Str _1b710e497_gen_struct_method_defs(jule::Ref<_1ce385eed_StructIns>& _75732_s) {
	jule::Str _75813_obj = jule::Str("", 0);
	for (auto _1b710e497_f: _75732_s->_field_methods) {
		{
			_75813_obj+=_1b710e497_indent();
			_75813_obj+=_1b710e497_gen_fn(_1b710e497_f);
			_75813_obj+=jule::Str("\n\n", 2);
		}
	_iter_next_4546914528:;
	}
	_iter_end_4546914528:;
	return _75813_obj;
}



inline jule::Str _1b710e497_gen_struct_ostream(jule::Ref<_1ce385eed_StructIns>& _76828_s) {
	jule::Str _76913_obj = jule::Str("", 0);
	_76913_obj+=_1b710e497_indent();
	_76913_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_76913_obj+=_1b710bbe2_struct_ins_out_ident(_76828_s);
	_76913_obj+=jule::Str(" &_Src) {\n", 10);
	_1b710e497_add_indent();
	_76913_obj+=_1b710e497_indent();
	_76913_obj+=jule::Str("_Stream << \"", 12);
	_76913_obj+=_76828_s->_field_decl->_field_ident;
	_76913_obj+=jule::Str("{\";\n", 4);
	{
		jule::Int _1b710e497_i = 0;
		for (auto _1b710e497_f: _76828_s->_field_fields) {
			{
				_76913_obj+=_1b710e497_indent();
				_76913_obj+=jule::Str("_Stream << \"", 12);
				_76913_obj+=_1b710e497_f->_field_decl->_field_ident;
				_76913_obj+=jule::Str(":", 1);
				jule::Ref<_1ce385eed_StructIns> _78713_strct = _1b710e497_f->_field_kind->_method_strct();
				if ((jule::real(_78713_strct) && jule::real(_78713_strct->_field_decl)) && _78713_strct->_field_decl->_field_cpp_linked) {
					_76913_obj+=jule::Str(" cpp.", 5);
					_76913_obj+=_1b710bbe2_field_out_ident(_1b710e497_f->_field_decl);
					_76913_obj+=jule::Str("\"", 1);
				} else {
					_76913_obj+=jule::Str("\" << _Src.", 10);
					_76913_obj+=_1b710bbe2_field_out_ident(_1b710e497_f->_field_decl);
				}
				if ((_1b710e497_i + 1LL) < _76828_s->_field_fields.len()) {
					_76913_obj+=jule::Str(" << \", \"", 8);
				}
				_76913_obj+=jule::Str(";\n", 2);
			}
		_iter_next_4546921232:;
		_1b710e497_i++;
		}
		_iter_end_4546921232:;
	}
	_76913_obj+=_1b710e497_indent();
	_76913_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_76913_obj+=_1b710e497_indent();
	_76913_obj+=jule::Str("return _Stream;\n", 16);
	_1b710e497_done_indent();
	_76913_obj+=_1b710e497_indent();
	_76913_obj+=jule::Str("}", 1);
	return _76913_obj;
}



inline jule::Str _1b710e497_gen_struct_derive_defs(jule::Ref<_1ce385eed_StructIns>& _81232_s) {
	jule::Str _81313_obj = jule::Str("", 0);
	if (_81232_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_81313_obj+=_1b710e497_indent();
		_81313_obj+=_1b67334b2_get_derive_fn_def_clone(_81232_s->_field_decl);
		_81313_obj+=jule::Str("{\n", 2);
		_1b710e497_add_indent();
		_81313_obj+=_1b710e497_indent();
		_81313_obj+=_1b7110850_gen_struct_kind_ins(_81232_s);
		_81313_obj+=jule::Str(" clone;\n", 8);
		for (auto _1b710e497_f: _81232_s->_field_fields) {
			{
				jule::Str _82417_ident = _1b710bbe2_field_out_ident(_1b710e497_f->_field_decl);
				_81313_obj+=_1b710e497_indent();
				_81313_obj+=jule::Str("clone.", 6);
				_81313_obj+=_82417_ident;
				_81313_obj+=jule::Str(" = jule::clone(this->", 21);
				_81313_obj+=_82417_ident;
				_81313_obj+=jule::Str(");\n", 3);
			}
		_iter_next_4546935424:;
		}
		_iter_end_4546935424:;
		_81313_obj+=_1b710e497_indent();
		_81313_obj+=jule::Str("return clone;\n", 14);
		_1b710e497_done_indent();
		_81313_obj+=_1b710e497_indent();
		_81313_obj+=jule::Str("}", 1);
	}
	return _81313_obj;
}



inline jule::Str _1b710e497_gen_struct_ins(jule::Ref<_1ce385eed_StructIns>& _84424_s) {
	jule::Str _84513_obj = _1b710e497_gen_struct_method_defs(_84424_s);
	_84513_obj+=jule::Str("\n\n", 2);
	_84513_obj+=_1b710e497_gen_struct_derive_defs(_84424_s);
	_84513_obj+=jule::Str("\n\n", 2);
	_84513_obj+=_1b710e497_gen_struct_ostream(_84424_s);
	return _84513_obj;
}



inline jule::Str _1b710e497_gen_struct(jule::Ref<_1ce385eed_Struct>& _85420_s) {
	jule::Str _85513_obj = jule::Str("", 0);
	for (auto _1b710e497_ins: _85420_s->_field_instances) {
		{
			_85513_obj+=_1b710e497_gen_struct_ins(_1b710e497_ins);
			_85513_obj+=jule::Str("\n\n", 2);
		}
	_iter_next_4546946352:;
	}
	_iter_end_4546946352:;
	return _85513_obj;
}



inline jule::Str _1b710e497_gen_structs(jule::Slice<jule::Ref<_1ce385eed_Struct>>& _86421_structs) {
	jule::Str _86513_obj = jule::Str("", 0);
	for (auto _1b710e497_s: _86421_structs) {
		{
			if ((!(_1b710e497_s->_field_cpp_linked)) && (_1b710e497_s->_field_token._field_id != 0LLU)) {
				_86513_obj+=_1b710e497_gen_struct(_1b710e497_s);
				_86513_obj+=jule::Str("\n\n", 2);
			}
		}
	_iter_next_4546949472:;
	}
	_iter_end_4546949472:;
	return _86513_obj;
}



inline jule::Str _1b710e497_gen_fns(jule::Ref<_1cdd79d22_IR>& _87617_ir) {
	jule::Str _87713_obj = jule::Str("", 0);
	for (auto _1b710e497_u: _87617_ir->_field_used) {
		{
			if ((!(_1b710e497_u->_field_cpp_linked))) {
				_87713_obj+=_1b710e497_gen_pkg_fns(_1b710e497_u->_field_package);
			}
		}
	_iter_next_4546954288:;
	}
	_iter_end_4546954288:;
	_87713_obj+=_1b710e497_gen_pkg_fns(_87617_ir->_field_main);
	return _87713_obj;
}



inline void _1b710e497_push_init(jule::Ref<_1b623bb7a_Package>& _88919_pkg,jule::Str& _88939_obj) {
	
	
	jule::Ref<_1b6069348_Fn> _8939_f = _88919_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_8939_f)))) {
		return;
	}
	_88939_obj+=jule::Str("\n\t", 2);
	_88939_obj+=_1b710bbe2_fn_out_ident(_8939_f);
	_88939_obj+=jule::Str("();", 3);
}



inline jule::Str _1b710e497_gen_init_caller(jule::Ref<_1cdd79d22_IR>& _90425_ir) {
	jule::Str _90513_obj = jule::Str("void ", 5);
	_90513_obj+=jule::Str("__jule_call_initializers", 24);
	_90513_obj+=jule::Str("(void) {", 8);
	for (auto _1b710e497_u: _90425_ir->_field_used) {
		{
			if ((!(_1b710e497_u->_field_cpp_linked))) {
				_1b710e497_push_init(_1b710e497_u->_field_package,_90513_obj);
			}
		}
	_iter_next_4546965312:;
	}
	_iter_end_4546965312:;
	_1b710e497_push_init(_90425_ir->_field_main,_90513_obj);
	_90513_obj+=jule::Str("\n}", 2);
	return _90513_obj;
}



inline void _1b710e497_append_standard(jule::Str& _92029_obj_code,jule::Str _92044_compiler,jule::Str _92059_compiler_cmd) {
	_1b72774ab_AbsTime _9219_time = _1b72774ab_Time::_static_method_now()._method_abs();
	jule::Str _92313_time_str = jule::Str("", 0);
	_92313_time_str+=_1e86edbba_fmt_uint(_9219_time._field_day,10LL);
	_92313_time_str+=jule::Str("/", 1);
	_92313_time_str+=_1e86edbba_fmt_uint(_9219_time._field_month,10LL);
	_92313_time_str+=jule::Str("/", 1);
	_92313_time_str+=_1e86edbba_fmt_uint(_9219_time._field_year,10LL);
	_92313_time_str+=jule::Str(" ", 1);
	_92313_time_str+=_1e86edbba_fmt_uint(_9219_time._field_hour,10LL);
	_92313_time_str+=jule::Str(".", 1);
	_92313_time_str+=_1e86edbba_fmt_uint(_9219_time._field_minute,10LL);
	_92313_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _93513_s = jule::Str("", 0);
	_93513_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_93513_s+=jule::Str("// JuleC version: ", 18);
	_93513_s+=jule::Str("beta 0.0.5 @master", 18);
	_93513_s+=jule::Str("\n", 1);
	_93513_s+=jule::Str("// Date: ", 9);
	_93513_s+=_92313_time_str;
	_93513_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_93513_s+=_92044_compiler;
	_93513_s+=jule::Str(" ", 1);
	_93513_s+=_92059_compiler_cmd;
	_93513_s+=jule::Str("\n\n#include \"", 12);
	_93513_s+=_1e77372ed_PATH_API;
	_93513_s+=jule::Str("\"\n\n", 3);
	_93513_s+=_92029_obj_code;
	_93513_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    std::set_terminate(&jule::terminate_handler);\n    jule::set_sig_handler(jule::signal_handler);\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    entry_point();\n\n    return EXIT_SUCCESS;\n}", 290);
	_92029_obj_code=_93513_s;
}



inline jule::Str _1b710e497_gen(jule::Ref<_1cdd79d22_IR>& _96917_ir) {
	jule::Str _97013_obj = jule::Str("", 0);
	_97013_obj+=_1b710e497_gen_links(_96917_ir);
	_97013_obj+=jule::Str("\n", 1);
	_97013_obj+=_1b710e497_gen_prototypes(_96917_ir);
	_97013_obj+=jule::Str("\n\n", 2);
	_97013_obj+=_1b710e497_gen_globals(_96917_ir->_field_ordered._field_globals);
	_97013_obj+=jule::Str("\n", 1);
	_97013_obj+=_1b710e497_gen_structs(_96917_ir->_field_ordered._field_structs);
	_97013_obj+=_1b710e497_gen_fns(_96917_ir);
	_97013_obj+=jule::Str("\n", 1);
	_97013_obj+=_1b710e497_gen_init_caller(_96917_ir);
	_97013_obj+=jule::Str("\n", 1);
	return _97013_obj;
}



inline jule::Str _1e765896c_str_repeat(jule::Str _3015_sub,jule::Int _3029_n) {
	if (_3029_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _3513_s = jule::Str("", 0);
	for (; _3029_n > 0LL; (_3029_n)--) {
		{
			_3513_s+=_3015_sub;
		}
	_iter_next_4547079168:;
	}
	_iter_end_4547079168:;
	return _3513_s;
}



inline void _1e765896c_print_error_message(jule::Str _4224_msg) {
	jule::outln(_4224_msg);
}



inline void _1e765896c_help(jule::Slice<jule::Str>& _4510_args) {
	if (_4510_args.len() > 2LL) {
		_1e765896c_print_error_message(jule::Str("invalid command: ", 17) + _4510_args[2LL]);
		return;
	}
	jule::I64 _5113_max = _1e765896c_HELP_MAP[0LL][0LL].len();
	for (auto _1e765896c_k: _1e765896c_HELP_MAP) {
		{
			jule::I64 _5313_n = _1e765896c_k[0LL].len();
			if (_5313_n > _5113_max) {
				_5113_max=_5313_n;
			}
		}
	_iter_next_4547086336:;
	}
	_iter_end_4547086336:;
	jule::Str _5913_s = jule::Str("", 0);
	
	{
		jule::Int _1e765896c_i = 0;
		for (auto _1e765896c_part: _1e765896c_HELP_MAP) {
			{
				_5913_s+=_1e765896c_part[0LL];
				_5913_s+=_1e765896c_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_5113_max - _1e765896c_part[0LL].len()) + 5LL));
				_5913_s+=_1e765896c_part[1LL];
				if ((_1e765896c_i + 1LL) < 4LL) {
					_5913_s+=jule::Str("\n", 1);
				}
			}
		_iter_next_4547091184:;
		_1e765896c_i++;
		}
		_iter_end_4547091184:;
	}
	jule::outln(_5913_s);
}



inline void _1e765896c_version(jule::Slice<jule::Str>& _7313_args) {
	if (_7313_args.len() > 2LL) {
		_1e765896c_print_error_message(jule::Str("invalid command: ", 17) + _7313_args[2LL]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.5 @master", 18));
}



inline void _1e765896c_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	for (auto _1e765896c_os: _1e7731968_DISTOS) {
		{
			jule::out(_1e765896c_os);
			jule::out(jule::Str(" ", 1));
		}
	_iter_next_4547101024:;
	}
	_iter_end_4547101024:;
	jule::outln(jule::Str("", 0));
}



inline void _1e765896c_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	for (auto _1e765896c_arch: _1e7731968_DISTARCH) {
		{
			jule::out(_1e765896c_arch);
			jule::out(jule::Str(" ", 1));
		}
	_iter_next_4547104000:;
	}
	_iter_end_4547104000:;
	jule::outln(jule::Str("", 0));
}



inline void _1e765896c_tool(jule::Slice<jule::Str>& _10310_args) {
	if (_10310_args.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_10310_args.len() > 3LL) {
		_1e765896c_print_error_message(jule::Str("invalid command: ", 17) + _10310_args[3LL]);
		return;
	}
	jule::Str _1149_cmd = _10310_args[2LL];
	{
		auto _match_expr{ _1149_cmd };
		if (!((jule::Str("distos", 6)) == _match_expr)) { goto _case_end_4547112096; }
		_case_begin_4547112096:;
		{
			_1e765896c_tool_distos();
		}
		goto _match_end_4547111264;
		_case_end_4547112096:;
		if (!((jule::Str("distarch", 8)) == _match_expr)) { goto _case_end_4547112256; }
		_case_begin_4547112256:;
		{
			_1e765896c_tool_distarch();
		}
		goto _match_end_4547111264;
		_case_end_4547112256:;
		_case_begin_4547107424:;
		{
			_1e765896c_print_error_message(jule::Str("Undefined command: ", 19) + _1149_cmd);
		}
		goto _match_end_4547111264;
		_case_end_4547107424:;
		_match_end_4547111264:;
	}
}



inline void _1e765896c_julenv(void) {
	jule::outln(jule::Str("julec version: beta 0.0.5 @master", 33));
	jule::outln(jule::Str("architecture: i386", 18));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln(jule::Str("default compiler: ", 18) + _1e768a251_COMPILER);
	jule::outln(jule::Str("default C++ standard: ", 22) + _1e768a251_CPP_STD);
}



inline jule::Bool _1e765896c_process_command(jule::Slice<jule::Str>& _13321_args) {
	{
		auto _match_expr{ _13321_args[1LL] };
		if (!((jule::Str("help", 4)) == _match_expr)) { goto _case_end_4547119872; }
		_case_begin_4547119872:;
		{
			_1e765896c_help(_13321_args);
		}
		goto _match_end_4547118192;
		_case_end_4547119872:;
		if (!((jule::Str("version", 7)) == _match_expr)) { goto _case_end_4547119968; }
		_case_begin_4547119968:;
		{
			_1e765896c_version(_13321_args);
		}
		goto _match_end_4547118192;
		_case_end_4547119968:;
		if (!((jule::Str("tool", 4)) == _match_expr)) { goto _case_end_4547120080; }
		_case_begin_4547120080:;
		{
			_1e765896c_tool(_13321_args);
		}
		goto _match_end_4547118192;
		_case_end_4547120080:;
		if (!((jule::Str("julenv", 6)) == _match_expr)) { goto _case_end_4547118528; }
		_case_begin_4547118528:;
		{
			_1e765896c_julenv();
		}
		goto _match_end_4547118192;
		_case_end_4547118528:;
		_case_begin_4547113248:;
		{
			return false;
		}
		goto _match_end_4547118192;
		_case_end_4547113248:;
		_match_end_4547118192:;
	}
	return true;
}



inline void _1e765896c_exit_err(jule::Str _14513_msg) {
	jule::outln(_14513_msg);
	_1e77a41e4_exit(1LL);
}



void entry_point(void) {
	jule::Slice<jule::Str> _1519_args = _1e77d0a39_args();
	if (_1519_args.len() < 2LL) {
		return;
	}
	if (_1e765896c_process_command(_1519_args)) {
		return;
	}
	_1e768a251_compile_command(_1519_args);
}



inline void _1e76772a4___init_common(void) {
	_1e768a251_COMPILER=jule::Str("clang", 5);
	_1e768a251_COMPILER_PATH=jule::Str("clang++", 7);
}



inline void _1e768e156_init(void) {
	_1e76772a4___init_common();
}



inline jule::Int _1e768a251_system(jule::Str _8211_cmd) {
	return static_cast<jule::Int>(static_cast<jule::Int>(system(((char*)((&(_8211_cmd[0LL])))))));
}



inline std::tuple<jule::Str,jule::Str> _1e768a251_get_option(jule::Slice<jule::Str>& _8616_args,jule::Int& _8634_i) {
	jule::Str _8644_arg = jule::Str();
	jule::Str _8654_content = jule::Str();
	for (; _8634_i < _8616_args.len(); (_8634_i)++) {
		{
			_8644_arg=_8616_args[static_cast<jule::Int>(_8634_i)];
			jule::Int _8917_j = 0LL;
			jule::Slice<jule::I32> _9017_runes = static_cast<jule::Slice<jule::I32>>(_8644_arg);
			jule::I32 _9117_r = _9017_runes[static_cast<jule::Int>(_8917_j)];
			if (_9117_r != '-') {
				_8654_content+=_8644_arg;
				_8644_arg=jule::Str("", 0);
				goto _iter_next_4547129888;
			}
			(_8917_j)++;
			if (_8917_j >= _9017_runes.len()) {
				_1e765896c_exit_err(jule::Str("undefined syntax: ", 18) + _8644_arg);
			}
			_9117_r=_9017_runes[static_cast<jule::Int>(_8917_j)];
			if (_9117_r == '-') {
				(_8917_j)++;
				if (_8917_j >= _9017_runes.len()) {
					_1e765896c_exit_err(jule::Str("undefined syntax: ", 18) + _8644_arg);
				}
				_9117_r=_9017_runes[static_cast<jule::Int>(_8917_j)];
			}
			if ((!(_1ce35e3a0_is_ident_rune(static_cast<jule::Str>(_9117_r))))) {
				_1e765896c_exit_err(jule::Str("undefined syntax: ", 18) + _8644_arg);
			}
			(_8917_j)++;
			for (; _8917_j < _9017_runes.len(); (_8917_j)++) {
				{
					_9117_r=_9017_runes[static_cast<jule::Int>(_8917_j)];
					if (((((!(_1ce35e3a0_is_space(_9117_r))) && (!(_1ce35e3a0_is_letter(_9117_r)))) && (!(_1ce35e3a0_is_decimal(static_cast<jule::U8>(_9117_r))))) && (_9117_r != '_')) && (_9117_r != '-')) {
						_1e765896c_exit_err(jule::Str("undefined syntax: ", 18) + static_cast<jule::Str>(_9017_runes.slice(static_cast<jule::Int>(_8917_j))));
					}
				}
			_iter_next_4547147568:;
			}
			_iter_end_4547147568:;
			goto _iter_end_4547129888;
		}
	_iter_next_4547129888:;
	}
	_iter_end_4547129888:;
	return std::make_tuple(_8644_arg,_8654_content);
}



inline jule::Str _1e768a251_get_option_value(jule::Slice<jule::Str>& _13022_args,jule::Int& _13040_i) {
	(_13040_i)++;
	if (_13040_i < _13022_args.len()) {
		jule::Str _13313_arg = _13022_args[static_cast<jule::Int>(_13040_i)];
		return _13313_arg;
	}
	return jule::Str("", 0);
}



inline void _1e768a251_parse_out_option(jule::Slice<jule::Str>& _13922_args,jule::Int& _13940_i) {
	jule::Str _1409_value = _1e768a251_get_option_value(_13922_args,_13940_i);
	if (_1409_value == jule::Str("", 0)) {
		_1e765896c_exit_err(jule::Str("missing option value: -o --out", 30));
	}
	_1e768a251_OUT=_1409_value;
}



inline void _1e768a251_parse_opt_option(jule::Slice<jule::Str>& _14722_args,jule::Int& _14740_i) {
	jule::Str _1489_value = _1e768a251_get_option_value(_14722_args,_14740_i);
	if (_1489_value == jule::Str("", 0)) {
		_1e765896c_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto _match_expr{ _1489_value };
		if (!((jule::Str("L0", 2)) == _match_expr)) { goto _case_end_4547167072; }
		_case_begin_4547167072:;
		{
			_1ce1465e9_push_opt_level(0LLU);
		}
		goto _match_end_4547163824;
		_case_end_4547167072:;
		if (!((jule::Str("L1", 2)) == _match_expr)) { goto _case_end_4547167168; }
		_case_begin_4547167168:;
		{
			_1ce1465e9_push_opt_level(1LLU);
		}
		goto _match_end_4547163824;
		_case_end_4547167168:;
		_case_begin_4547165536:;
		{
			_1e765896c_exit_err(jule::Str("invalid optimization level: ", 28) + _1489_value);
		}
		goto _match_end_4547163824;
		_case_end_4547165536:;
		_match_end_4547163824:;
	}
}



inline void _1e768a251_check_target_arch(jule::Str _16022_arch) {
	for (auto _1e768a251_distarch: _1e7731968_DISTARCH) {
		{
			if (_16022_arch == _1e768a251_distarch) {
				return;
			}
		}
	_iter_next_4547154528:;
	}
	_iter_end_4547154528:;
	_1e765896c_exit_err(jule::Str("unsupported/undefined architecture: ", 36) + _16022_arch);
}



inline void _1e768a251_check_target_os(jule::Str _17020_os) {
	for (auto _1e768a251_distos: _1e7731968_DISTOS) {
		{
			if (_17020_os == _1e768a251_distos) {
				return;
			}
		}
	_iter_next_4547171888:;
	}
	_iter_end_4547171888:;
	_1e765896c_exit_err(jule::Str("unsupported/undefined operating system: ", 40) + _17020_os);
}



inline void _1e768a251_parse_target_option(jule::Slice<jule::Str>& _18025_args,jule::Int& _18043_i) {
	jule::Str _1819_value = _1e768a251_get_option_value(_18025_args,_18043_i);
	if (_1819_value == jule::Str("", 0)) {
		_1e765896c_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _1869_parts = _1819_value.split(jule::Str("-", 1),-1LL);
	if (_1869_parts.len() != 2LL) {
		_1e765896c_exit_err(jule::Str("undefined platform target format: ", 34) + _1819_value);
	}
	jule::Str _19110_os = _1869_parts[0LL];
	jule::Str _19114_arch = _1869_parts[1LL];
	std::tie(_19110_os,_19114_arch) = std::make_tuple(_1869_parts[0LL],_1869_parts[1LL]);
	if (_19110_os != jule::Str("native", 6)) {
		_1e768a251_check_target_os(_19110_os);
		_1ce039ac5_OS=_19110_os;
	}
	if (_19114_arch != jule::Str("native", 6)) {
		_1e768a251_check_target_arch(_19114_arch);
		_1ce039ac5_ARCH=_19114_arch;
	}
}



inline void _1e768a251_parse_compiler_option(jule::Slice<jule::Str>& _20427_args,jule::Int& _20445_i) {
	jule::Str _2059_value = _1e768a251_get_option_value(_20427_args,_20445_i);
	{
		auto _match_expr{ _2059_value };
		if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_4547189328; }
		_case_begin_4547189328:;
		{
			_1e765896c_exit_err(jule::Str("missing option value: --compiler", 32));
		}
		goto _match_end_4547188592;
		_case_end_4547189328:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4547190560; }
		_case_begin_4547190560:;
		{
			_1e768a251_COMPILER=jule::Str("clang", 5);
			_1e768a251_COMPILER_PATH=jule::Str("clang++", 7);
		}
		goto _match_end_4547188592;
		_case_end_4547190560:;
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4547190656; }
		_case_begin_4547190656:;
		{
			_1e768a251_COMPILER=jule::Str("gcc", 3);
			_1e768a251_COMPILER_PATH=jule::Str("g++", 3);
		}
		goto _match_end_4547188592;
		_case_end_4547190656:;
		_case_begin_4547187664:;
		{
			_1e765896c_exit_err(jule::Str("invalid option value for --compiler: ", 37) + _2059_value);
		}
		goto _match_end_4547188592;
		_case_end_4547187664:;
		_match_end_4547188592:;
	}
}



inline jule::Str _1e768a251_parse_options(jule::Slice<jule::Str>& _22319_args) {
	jule::Str _22413_cmd = jule::Str("", 0);
	jule::Int _22813_i = 1LL;
	for (; _22813_i < _22319_args.len(); (_22813_i)++) {
		{
			jule::Str _23014_arg;
			jule::Str _23019_content;
			std::tie(_23014_arg,_23019_content) = _1e768a251_get_option(_22319_args,_22813_i);
			_22413_cmd+=_23019_content;
			{
				auto _match_expr{ _23014_arg };
				if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_4547199584; }
				goto _match_end_4547197408;
				_case_end_4547199584:;
				if (!((jule::Str("-o", 2)) == _match_expr || (jule::Str("--out", 5)) == _match_expr)) { goto _case_end_4547198704; }
				_case_begin_4547198704:;
				{
					_1e768a251_parse_out_option(_22319_args,_22813_i);
				}
				goto _match_end_4547197408;
				_case_end_4547198704:;
				if (!((jule::Str("-t", 2)) == _match_expr || (jule::Str("--transpile", 11)) == _match_expr)) { goto _case_end_4547198384; }
				_case_begin_4547198384:;
				{
					_1e768a251_MODE=1LLU;
				}
				goto _match_end_4547197408;
				_case_end_4547198384:;
				if (!((jule::Str("-c", 2)) == _match_expr || (jule::Str("--compile", 9)) == _match_expr)) { goto _case_end_4547198480; }
				_case_begin_4547198480:;
				{
					_1e768a251_MODE=0LLU;
				}
				goto _match_end_4547197408;
				_case_end_4547198480:;
				if (!((jule::Str("--compiler", 10)) == _match_expr)) { goto _case_end_4547199680; }
				_case_begin_4547199680:;
				{
					_1e768a251_parse_compiler_option(_22319_args,_22813_i);
				}
				goto _match_end_4547197408;
				_case_end_4547199680:;
				if (!((jule::Str("--opt", 5)) == _match_expr)) { goto _case_end_4547199776; }
				_case_begin_4547199776:;
				{
					_1e768a251_parse_opt_option(_22319_args,_22813_i);
				}
				goto _match_end_4547197408;
				_case_end_4547199776:;
				if (!((jule::Str("--target", 8)) == _match_expr)) { goto _case_end_4547199872; }
				_case_begin_4547199872:;
				{
					_1e768a251_parse_target_option(_22319_args,_22813_i);
				}
				goto _match_end_4547197408;
				_case_end_4547199872:;
				if (!((jule::Str("--shadowing", 11)) == _match_expr)) { goto _case_end_4547199968; }
				_case_begin_4547199968:;
				{
					_1e768a251_SEMA_FLAGS|=1LL;
				}
				goto _match_end_4547197408;
				_case_end_4547199968:;
				if (!((jule::Str("--opt-copy", 10)) == _match_expr)) { goto _case_end_4547200064; }
				_case_begin_4547200064:;
				{
					_1ce1465e9_OPTIMIZATIONS=jule::append(_1ce1465e9_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10)}));
				}
				goto _match_end_4547197408;
				_case_end_4547200064:;
				if (!((jule::Str("--opt-deadcode", 14)) == _match_expr)) { goto _case_end_4547200160; }
				_case_begin_4547200160:;
				{
					_1ce1465e9_OPTIMIZATIONS=jule::append(_1ce1465e9_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-deadcode", 14)}));
				}
				goto _match_end_4547197408;
				_case_end_4547200160:;
				if (!((jule::Str("--opt-append", 12)) == _match_expr)) { goto _case_end_4547200256; }
				_case_begin_4547200256:;
				{
					_1ce1465e9_OPTIMIZATIONS=jule::append(_1ce1465e9_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-append", 12)}));
				}
				goto _match_end_4547197408;
				_case_end_4547200256:;
				if (!((jule::Str("--opt-math", 10)) == _match_expr)) { goto _case_end_4547200352; }
				_case_begin_4547200352:;
				{
					_1ce1465e9_OPTIMIZATIONS=jule::append(_1ce1465e9_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-math", 10)}));
				}
				goto _match_end_4547197408;
				_case_end_4547200352:;
				if (!((jule::Str("--opt-access", 12)) == _match_expr)) { goto _case_end_4547200448; }
				_case_begin_4547200448:;
				{
					_1ce1465e9_OPTIMIZATIONS=jule::append(_1ce1465e9_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-access", 12)}));
				}
				goto _match_end_4547197408;
				_case_end_4547200448:;
				_case_begin_4547197936:;
				{
					_1e765896c_exit_err(jule::Str("undefined option: ", 18) + _23014_arg);
				}
				goto _match_end_4547197408;
				_case_end_4547197936:;
				_match_end_4547197408:;
			}
		}
	_iter_next_4547184576:;
	}
	_iter_end_4547184576:;
	_22413_cmd=_22413_cmd.trim(jule::Str(" \t\r\n\v", 5));
	return _22413_cmd;
}



inline void _1e768a251_write_output(jule::Str _27017_path,jule::Str _27028_content) {
	jule::Str _2719_dir = _1e777b83c_dir(_27017_path);
	jule::Int _27317_err;
	std::tie(std::ignore,_27317_err) = _1ce4735e6_stat(_2719_dir);
	if (_27317_err != 0LLU) {
		_27317_err=_1ce4a45b1_create_dir(_2719_dir);
		if (_27317_err != 0LLU) {
			_1e765896c_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	}
	jule::Ref<_1ce2b21b0_File> _28114_f;
	std::tie(_28114_f,_27317_err) = _1ce3432b8_open(_27017_path,578LL,438LL);
	if (_27317_err != 0LLU) {
		_1e765896c_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	std::tie(std::ignore,_27317_err) = _28114_f->_method_write(static_cast<jule::Slice<jule::U8>>(_27028_content));
	if (_27317_err != 0LLU) {
		_1e765896c_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	_28114_f->_method_close();
}



inline void _1e768a251_clear_objects(void) {
	if (_1ce3432b8_remove_file(_1e768a251_get_compile_path()) != 0LLU) {
		jule::outln(jule::Str("a problem occurs when object cleaning", 37));
		return;
	}
	_1ce4a45b1_remove_dir(_1e768a251_OUT_DIR);
}



inline void _1e768a251_compile_ir(jule::Str _30715_compiler,jule::Str _30730_compiler_cmd) {
	jule::Int _3089_status = _1e768a251_system((_30715_compiler + jule::Str(" ", 1)) + _30730_compiler_cmd);
	if (_3089_status != 0LL) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_3089_status);
		_1e765896c_exit_err(jule::Str("", 0));
	}
	_1e768a251_clear_objects();
}



inline void _1e768a251_do_spell(jule::Str _31913_obj,jule::Str _31923_compiler,jule::Str _31938_compiler_cmd) {
	jule::Str _3209_path = _1e768a251_get_compile_path();
	_1e768a251_write_output(_3209_path,_31913_obj);
	{
		auto _match_expr{ _1e768a251_MODE };
		if (!((0LLU) == _match_expr)) { goto _case_end_4547230208; }
		_case_begin_4547230208:;
		{
			_1e768a251_compile_ir(_31923_compiler,_31938_compiler_cmd);
		}
		goto _match_end_4547231584;
		_case_end_4547230208:;
		_match_end_4547231584:;
	}
}



inline void _1e768a251_check_mode(void) {
	if ((_1e768a251_MODE != 1LLU) && (_1e768a251_MODE != 0LLU)) {
		jule::outln(_1e7690a81_logf(jule::Str("\"@\" is invalid value for the \"@\" key", 36),jule::Slice<jule::Any>({jule::Any(_1e768a251_MODE),jule::Any(jule::Str("mode", 4))})));
		_1e765896c_exit_err(jule::Str("", 0));
	}
}



inline void _1e768a251_check_compiler(void) {
	if ((_1e768a251_COMPILER != jule::Str("gcc", 3)) && (_1e768a251_COMPILER != jule::Str("clang", 5))) {
		jule::outln(_1e7690a81_logf(jule::Str("\"@\" is invalid value for the \"@\" key", 36),jule::Slice<jule::Any>({jule::Any(_1e768a251_COMPILER),jule::Any(jule::Str("compiler", 8))})));
		_1e765896c_exit_err(jule::Str("", 0));
	}
}



inline void _1e768a251_set(void) {
	_1e768a251_check_mode();
	_1e768a251_check_compiler();
	_1cde565e6_init_flags();
}



inline jule::Bool _1e768a251_is_cpp_source_file(jule::Str _35023_path) {
	jule::Int _3519_offset = _35023_path.rfind(jule::Str(".", 1));
	if (_3519_offset == -1LL) {
		return false;
	}
	return _1e7691048_is_valid_cpp_ext(_35023_path.slice(static_cast<jule::Int>(_3519_offset)));
}



inline std::tuple<jule::Str,jule::Str> _1e768a251_gen_compile_cmd(jule::Str _35920_source_path,jule::Ref<_1cdd79d22_IR>& _35939_ir) {
	jule::Str _3609_compiler = _1e768a251_COMPILER_PATH;
	
	
	
	jule::Str _3659_SET_STD = jule::Str("--std=", 6) + _1e768a251_CPP_STD;
	jule::Str _36713_cmd = jule::Str("-O0 ", 4);
	{
		auto _match_expr{ _1e768a251_COMPILER };
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4547247360; }
		_case_begin_4547247360:;
		{
			_36713_cmd+=jule::Str("-w ", 3);
		}
		goto _match_end_4547250384;
		_case_end_4547247360:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4547250752; }
		_case_begin_4547250752:;
		{
			_36713_cmd+=jule::Str("-Wno-everything ", 16);
		}
		goto _match_end_4547250384;
		_case_end_4547250752:;
		_match_end_4547250384:;
	}
	_36713_cmd+=_3659_SET_STD + jule::Str(" ", 1);
	for (auto _1e768a251_pass: _35939_ir->_field_passes) {
		{
			_36713_cmd+=_1e768a251_pass + jule::Str(" ", 1);
		}
	_iter_next_4547252288:;
	}
	_iter_end_4547252288:;
	for (auto _1e768a251_u: _35939_ir->_field_used) {
		{
			if (_1e768a251_u->_field_cpp_linked && _1e768a251_is_cpp_source_file(_1e768a251_u->_field_path)) {
				_36713_cmd+=_1e768a251_u->_field_path + jule::Str(" ", 1);
			}
		}
	_iter_next_4547253440:;
	}
	_iter_end_4547253440:;
	if (_1e768a251_OUT != jule::Str("", 0)) {
		_36713_cmd+=(jule::Str("-o ", 3) + _1e768a251_OUT) + jule::Str(" ", 1);
	}
	_36713_cmd+=_35920_source_path;
	return std::make_tuple(_3609_compiler,_36713_cmd);
}



inline jule::Str _1e768a251_get_compile_path(void) {
	return _1e777b83c_join(jule::Slice<jule::Str>({_1e768a251_OUT_DIR,_1e768a251_OUT_NAME}));
}



inline void _1e768a251_apply_target_independent_optimizations(jule::Ref<_1cdd79d22_IR>& _40848_ir) {
	if (_1ce1465e9_is_opt_enabled(jule::Str("--opt-deadcode", 14))) {
		_1e86aa7c0_eliminate(_40848_ir);
	}
}



inline void _1e768a251_compile_command(jule::Slice<jule::Str>& _41521_args) {
	jule::Str _4169_path = _1e768a251_parse_options(_41521_args);
	if (_4169_path == jule::Str("", 0)) {
		_1e765896c_exit_err(_1e7690a81_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>({})));
	}
	jule::Ref<_1ce48210a_Status> _42210_inf;
	jule::Int _42215_err;
	std::tie(_42210_inf,_42215_err) = _1ce4735e6_stat(_1e77372ed_PATH_STDLIB);
	if ((_42215_err != 0LLU) || (!(_42210_inf->_method_is_dir()))) {
		_1e765896c_exit_err(_1e7690a81_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>({})));
	}
	_1e768a251_set();
	jule::Ref<_1cdd79d22_IR> _42914_ir;
	jule::Slice<_1e7690a81_Log> _42918_logs;
	std::tie(_42914_ir,_42918_logs) = _1cdd79d22_IR::_static_method_build(_4169_path,_1e768a251_SEMA_FLAGS);
	if ((!(jule::real(_42914_ir))) && (_42918_logs == nullptr)) {
		_1e765896c_exit_err(_1e7690a81_logf(jule::Str("there is no Jule source code in this package: @", 47),jule::Slice<jule::Any>({jule::Any(_4169_path)})));
	}
	if (_42918_logs != nullptr) {
		_1e7673dc7_Logger::_static_method_print_logs(_42918_logs);
		_1e765896c_exit_err(jule::Str("", 0));
	}
	
	jule::Ref<_1b6069348_Fn> _44113_f = _42914_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if ((!(jule::real(_44113_f)))) {
		_1e765896c_exit_err(_1e7690a81_logf(jule::Str("entry point (main) function is not defined", 42),jule::Slice<jule::Any>({})));
	}
	_44113_f->_field_statically=true;
	_44113_f=_42914_ir->_field_main->_method_find_fn(jule::Str("init", 4),false);
	if (jule::real(_44113_f)) {
		_44113_f->_field_statically=true;
	}
	_1e768a251_apply_target_independent_optimizations(_42914_ir);
	_42914_ir->_method_order();
	jule::Str _45710_compiler;
	jule::Str _45720_compiler_cmd;
	std::tie(_45710_compiler,_45720_compiler_cmd) = _1e768a251_gen_compile_cmd(_1e768a251_get_compile_path(),_42914_ir);
	jule::Str _45913_obj = _1b710e497_gen(_42914_ir);
	_1b710e497_append_standard(_45913_obj,_45710_compiler,_45720_compiler_cmd);
	_1e768a251_do_spell(_45913_obj,_45710_compiler,_45720_compiler_cmd);
}




void __jule_call_initializers(void) {
	_1e77372ed_init();
	_1b6c3ed86_init();
	_1e768e156_init();
}

int main(int argc, char *argv[], char *envp[]) {
    std::set_terminate(&jule::terminate_handler);
    jule::set_sig_handler(jule::signal_handler);
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}